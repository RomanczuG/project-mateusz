[
  {
    "url": "https://api.github.com/repos/cloudinary/cloudinary_npm/issues/comments/981794171",
    "html_url": "https://github.com/cloudinary/cloudinary_npm/issues/520#issuecomment-981794171",
    "issue_url": "https://api.github.com/repos/cloudinary/cloudinary_npm/issues/520",
    "id": 981794171,
    "node_id": "IC_kwDOAEh2wM46hP17",
    "user": {
      "login": "igy",
      "id": 1002346,
      "node_id": "MDQ6VXNlcjEwMDIzNDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1002346?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/igy",
      "html_url": "https://github.com/igy",
      "followers_url": "https://api.github.com/users/igy/followers",
      "following_url": "https://api.github.com/users/igy/following{/other_user}",
      "gists_url": "https://api.github.com/users/igy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/igy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/igy/subscriptions",
      "organizations_url": "https://api.github.com/users/igy/orgs",
      "repos_url": "https://api.github.com/users/igy/repos",
      "events_url": "https://api.github.com/users/igy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/igy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-29T16:22:17Z",
    "updated_at": "2021-11-29T16:22:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi Jimmie,\r\n\r\nAre you able to see the details of the HTTP request and response for the API call? Renaming assets shouldn't affect that API call (or, as far as I know, any other API calls), but it does seems like your code is receiving an HTTP 3xx response when making a request to the API\r\n\r\nWhat URL was in the Location header of the response? Can you see that?\r\nIs it possible there's something else between the client code and our API server that's sending the 302?  (e.g. a proxy, firewall, wifi login, etc?)\r\nIf you can't share account-specific information here, you can also create a support request via https://support.cloudinary.com/ and we'll reply directly also\r\nThanks,\r\nStephen",
    "reactions": {
      "url": "https://api.github.com/repos/cloudinary/cloudinary_npm/issues/comments/981794171/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/cloudinary/cloudinary_npm/issues/comments/981864844",
    "html_url": "https://github.com/cloudinary/cloudinary_npm/issues/520#issuecomment-981864844",
    "issue_url": "https://api.github.com/repos/cloudinary/cloudinary_npm/issues/520",
    "id": 981864844,
    "node_id": "IC_kwDOAEh2wM46hhGM",
    "user": {
      "login": "jimmiejackson414",
      "id": 93394140,
      "node_id": "U_kgDOBZEU3A",
      "avatar_url": "https://avatars.githubusercontent.com/u/93394140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimmiejackson414",
      "html_url": "https://github.com/jimmiejackson414",
      "followers_url": "https://api.github.com/users/jimmiejackson414/followers",
      "following_url": "https://api.github.com/users/jimmiejackson414/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimmiejackson414/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimmiejackson414/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimmiejackson414/subscriptions",
      "organizations_url": "https://api.github.com/users/jimmiejackson414/orgs",
      "repos_url": "https://api.github.com/users/jimmiejackson414/repos",
      "events_url": "https://api.github.com/users/jimmiejackson414/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimmiejackson414/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-29T17:42:50Z",
    "updated_at": "2021-11-29T17:42:50Z",
    "author_association": "NONE",
    "body": "HI Stephen, thanks for the response!\r\n\r\nThere shouldn't be anything between this NextJS API call and the Cloudinary endpoint in the way of proxies or firewalls. If I dig a little more into the error object being returned, I see this in the headers object:\r\n```javascript\r\n{\r\n  'Content-Type': 'application/x-www-form-urlencoded',\r\n  'User-Agent': 'CloudinaryNodeJS/1.27.1 (Node 16.13.0)'\r\n}\r\n```\r\nand if I look at the ctx.req headers, I see this:\r\n```javascript\r\n{\r\n  host: 'localhost:3000',\r\n    connection: 'keep-alive',\r\n    'cache-control': 'max-age=0',\r\n    'sec-ch-ua': '\" Not A;Brand\";v=\"99\", \"Chromium\";v=\"96\", \"Google Chrome\";v=\"96\"',\r\n    'sec-ch-ua-mobile': '?0',\r\n    'sec-ch-ua-platform': '\"macOS\"',\r\n    'upgrade-insecure-requests': '1',\r\n    dnt: '1',\r\n    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.55 Safari/537.36',\r\n    accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\r\n    'sec-fetch-site': 'same-origin',\r\n    'sec-fetch-mode': 'navigate',\r\n    'sec-fetch-dest': 'document',\r\n    referer: 'http://localhost:3000/login',\r\n    'accept-encoding': 'gzip, deflate, br',\r\n    'accept-language': 'en-US,en;q=0.9'\r\n}\r\n```\r\nI'm not seeing anything related to a Location header. This could be entirely my lack of understanding with how NextJS API endpoints work.\r\n\r\nThis might be too much unnecessary info, but just in case it's helpful here's the entire req and res available to me:\r\n```javascript\r\n{\r\n  req: IncomingMessage {\r\n    _readableState: ReadableState {\r\n      objectMode: false,\r\n      highWaterMark: 16384,\r\n      buffer: BufferList { head: null, tail: null, length: 0 },\r\n      length: 0,\r\n      pipes: [],\r\n      flowing: true,\r\n      ended: true,\r\n      endEmitted: true,\r\n      reading: false,\r\n      constructed: true,\r\n      sync: true,\r\n      needReadable: false,\r\n      emittedReadable: false,\r\n      readableListening: false,\r\n      resumeScheduled: false,\r\n      errorEmitted: false,\r\n      emitClose: true,\r\n      autoDestroy: true,\r\n      destroyed: true,\r\n      errored: null,\r\n      closed: true,\r\n      closeEmitted: true,\r\n      defaultEncoding: 'utf8',\r\n      awaitDrainWriters: null,\r\n      multiAwaitDrain: false,\r\n      readingMore: true,\r\n      dataEmitted: false,\r\n      decoder: null,\r\n      encoding: null,\r\n      [Symbol(kPaused)]: false\r\n    },\r\n    _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },\r\n    _eventsCount: 1,\r\n    _maxListeners: undefined,\r\n    socket: Socket {\r\n      connecting: false,\r\n      _hadError: false,\r\n      _parent: null,\r\n      _host: null,\r\n      _readableState: [ReadableState],\r\n      _events: [Object: null prototype],\r\n      _eventsCount: 8,\r\n      _maxListeners: undefined,\r\n      _writableState: [WritableState],\r\n      allowHalfOpen: true,\r\n      _sockname: null,\r\n      _pendingData: null,\r\n      _pendingEncoding: '',\r\n      server: [Server],\r\n      _server: [Server],\r\n      parser: [HTTPParser],\r\n      on: [Function: socketListenerWrap],\r\n      addListener: [Function: socketListenerWrap],\r\n      prependListener: [Function: socketListenerWrap],\r\n      setEncoding: [Function: socketSetEncoding],\r\n      _paused: false,\r\n      _httpMessage: [ServerResponse],\r\n      [Symbol(async_id_symbol)]: 169549,\r\n      [Symbol(kHandle)]: [TCP],\r\n      [Symbol(kSetNoDelay)]: false,\r\n      [Symbol(lastWriteQueueSize)]: 0,\r\n      [Symbol(timeout)]: null,\r\n      [Symbol(kBuffer)]: null,\r\n      [Symbol(kBufferCb)]: null,\r\n      [Symbol(kBufferGen)]: null,\r\n      [Symbol(kCapture)]: false,\r\n      [Symbol(kBytesRead)]: 0,\r\n      [Symbol(kBytesWritten)]: 0,\r\n      [Symbol(RequestTimeout)]: undefined\r\n    },\r\n    httpVersionMajor: 1,\r\n    httpVersionMinor: 1,\r\n    httpVersion: '1.1',\r\n    complete: true,\r\n    rawHeaders: [\r\n      'Accept',\r\n      '*/*',\r\n      'User-Agent',\r\n      'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)',\r\n      'Accept-Encoding',\r\n      'gzip,deflate',\r\n      'Host',\r\n      'localhost:3000',\r\n      'Connection',\r\n      'keep-alive'\r\n    ],\r\n    rawTrailers: [],\r\n    aborted: false,\r\n    upgrade: false,\r\n    url: '/api/auth/images',\r\n    method: 'GET',\r\n    statusCode: null,\r\n    statusMessage: null,\r\n    client: Socket {\r\n      connecting: false,\r\n      _hadError: false,\r\n      _parent: null,\r\n      _host: null,\r\n      _readableState: [ReadableState],\r\n      _events: [Object: null prototype],\r\n      _eventsCount: 8,\r\n      _maxListeners: undefined,\r\n      _writableState: [WritableState],\r\n      allowHalfOpen: true,\r\n      _sockname: null,\r\n      _pendingData: null,\r\n      _pendingEncoding: '',\r\n      server: [Server],\r\n      _server: [Server],\r\n      parser: [HTTPParser],\r\n      on: [Function: socketListenerWrap],\r\n      addListener: [Function: socketListenerWrap],\r\n      prependListener: [Function: socketListenerWrap],\r\n      setEncoding: [Function: socketSetEncoding],\r\n      _paused: false,\r\n      _httpMessage: [ServerResponse],\r\n      [Symbol(async_id_symbol)]: 169549,\r\n      [Symbol(kHandle)]: [TCP],\r\n      [Symbol(kSetNoDelay)]: false,\r\n      [Symbol(lastWriteQueueSize)]: 0,\r\n      [Symbol(timeout)]: null,\r\n      [Symbol(kBuffer)]: null,\r\n      [Symbol(kBufferCb)]: null,\r\n      [Symbol(kBufferGen)]: null,\r\n      [Symbol(kCapture)]: false,\r\n      [Symbol(kBytesRead)]: 0,\r\n      [Symbol(kBytesWritten)]: 0,\r\n      [Symbol(RequestTimeout)]: undefined\r\n    },\r\n    _consuming: false,\r\n    _dumped: false,\r\n    cookies: [Getter/Setter],\r\n    query: {},\r\n    previewData: [Getter/Setter],\r\n    preview: [Getter/Setter],\r\n    body: '',\r\n    [Symbol(kCapture)]: false,\r\n    [Symbol(kHeaders)]: {\r\n      accept: '*/*',\r\n      'user-agent': 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)',\r\n      'accept-encoding': 'gzip,deflate',\r\n      host: 'localhost:3000',\r\n      connection: 'keep-alive'\r\n    },\r\n    [Symbol(kHeadersCount)]: 10,\r\n    [Symbol(kTrailers)]: null,\r\n    [Symbol(kTrailersCount)]: 0,\r\n    [Symbol(RequestTimeout)]: undefined,\r\n    [Symbol(NextRequestMeta)]: {\r\n      __NEXT_INIT_URL: '/api/auth/images',\r\n      __NEXT_INIT_QUERY: {},\r\n      __nextHadTrailingSlash: undefined\r\n    }\r\n  }\r\n}\r\n!=!=!=!=!=!=!=!=!=!=!=!=!=!=!=!=!=!=!=!=\r\n{\r\n  res: <ref *1> ServerResponse {\r\n    _events: [Object: null prototype] {\r\n      finish: [Function: bound resOnFinish],\r\n      pipe: [Function]\r\n    },\r\n    _eventsCount: 2,\r\n    _maxListeners: undefined,\r\n    outputData: [],\r\n    outputSize: 0,\r\n    writable: true,\r\n    destroyed: false,\r\n    _last: false,\r\n    chunkedEncoding: false,\r\n    shouldKeepAlive: true,\r\n    maxRequestsOnConnectionReached: false,\r\n    _defaultKeepAlive: true,\r\n    useChunkedEncodingByDefault: true,\r\n    sendDate: true,\r\n    _removedConnection: false,\r\n    _removedContLen: false,\r\n    _removedTE: false,\r\n    _contentLength: null,\r\n    _hasBody: true,\r\n    _trailer: '',\r\n    finished: false,\r\n    _headerSent: false,\r\n    _closed: false,\r\n    socket: Socket {\r\n      connecting: false,\r\n      _hadError: false,\r\n      _parent: null,\r\n      _host: null,\r\n      _readableState: [ReadableState],\r\n      _events: [Object: null prototype],\r\n      _eventsCount: 8,\r\n      _maxListeners: undefined,\r\n      _writableState: [WritableState],\r\n      allowHalfOpen: true,\r\n      _sockname: null,\r\n      _pendingData: null,\r\n      _pendingEncoding: '',\r\n      server: [Server],\r\n      _server: [Server],\r\n      parser: [HTTPParser],\r\n      on: [Function: socketListenerWrap],\r\n      addListener: [Function: socketListenerWrap],\r\n      prependListener: [Function: socketListenerWrap],\r\n      setEncoding: [Function: socketSetEncoding],\r\n      _paused: false,\r\n      _httpMessage: [Circular *1],\r\n      [Symbol(async_id_symbol)]: 169549,\r\n      [Symbol(kHandle)]: [TCP],\r\n      [Symbol(kSetNoDelay)]: false,\r\n      [Symbol(lastWriteQueueSize)]: 0,\r\n      [Symbol(timeout)]: null,\r\n      [Symbol(kBuffer)]: null,\r\n      [Symbol(kBufferCb)]: null,\r\n      [Symbol(kBufferGen)]: null,\r\n      [Symbol(kCapture)]: false,\r\n      [Symbol(kBytesRead)]: 0,\r\n      [Symbol(kBytesWritten)]: 0,\r\n      [Symbol(RequestTimeout)]: undefined\r\n    },\r\n    _header: null,\r\n    _keepAliveTimeout: 5000,\r\n    _onPendingData: [Function: bound updateOutgoingData],\r\n    req: IncomingMessage {\r\n      _readableState: [ReadableState],\r\n      _events: [Object: null prototype],\r\n      _eventsCount: 1,\r\n      _maxListeners: undefined,\r\n      socket: [Socket],\r\n      httpVersionMajor: 1,\r\n      httpVersionMinor: 1,\r\n      httpVersion: '1.1',\r\n      complete: true,\r\n      rawHeaders: [Array],\r\n      rawTrailers: [],\r\n      aborted: false,\r\n      upgrade: false,\r\n      url: '/api/auth/images',\r\n      method: 'GET',\r\n      statusCode: null,\r\n      statusMessage: null,\r\n      client: [Socket],\r\n      _consuming: false,\r\n      _dumped: false,\r\n      cookies: [Getter/Setter],\r\n      query: {},\r\n      previewData: [Getter/Setter],\r\n      preview: [Getter/Setter],\r\n      body: '',\r\n      [Symbol(kCapture)]: false,\r\n      [Symbol(kHeaders)]: [Object],\r\n      [Symbol(kHeadersCount)]: 10,\r\n      [Symbol(kTrailers)]: null,\r\n      [Symbol(kTrailersCount)]: 0,\r\n      [Symbol(RequestTimeout)]: undefined,\r\n      [Symbol(NextRequestMeta)]: [Object]\r\n    },\r\n    _sent100: false,\r\n    _expect_continue: false,\r\n    statusCode: 200,\r\n    flush: [Function: flush],\r\n    write: [Function (anonymous)],\r\n    end: [Function (anonymous)],\r\n    on: [Function: on],\r\n    writeHead: [Function: writeHead],\r\n    status: [Function (anonymous)],\r\n    send: [Function (anonymous)],\r\n    json: [Function (anonymous)],\r\n    redirect: [Function (anonymous)],\r\n    setPreviewData: [Function (anonymous)],\r\n    clearPreviewData: [Function (anonymous)],\r\n    [Symbol(kCapture)]: false,\r\n    [Symbol(kNeedDrain)]: false,\r\n    [Symbol(corked)]: 0,\r\n    [Symbol(kOutHeaders)]: null\r\n  }\r\n}\r\n```\r\n\r\nIf this doesn't help, I can certainly go ahead and open a support ticket at the URL you provided!",
    "reactions": {
      "url": "https://api.github.com/repos/cloudinary/cloudinary_npm/issues/comments/981864844/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/cloudinary/cloudinary_npm/issues/comments/981898921",
    "html_url": "https://github.com/cloudinary/cloudinary_npm/issues/520#issuecomment-981898921",
    "issue_url": "https://api.github.com/repos/cloudinary/cloudinary_npm/issues/520",
    "id": 981898921,
    "node_id": "IC_kwDOAEh2wM46hpap",
    "user": {
      "login": "igy",
      "id": 1002346,
      "node_id": "MDQ6VXNlcjEwMDIzNDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1002346?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/igy",
      "html_url": "https://github.com/igy",
      "followers_url": "https://api.github.com/users/igy/followers",
      "following_url": "https://api.github.com/users/igy/following{/other_user}",
      "gists_url": "https://api.github.com/users/igy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/igy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/igy/subscriptions",
      "organizations_url": "https://api.github.com/users/igy/orgs",
      "repos_url": "https://api.github.com/users/igy/repos",
      "events_url": "https://api.github.com/users/igy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/igy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-29T18:25:55Z",
    "updated_at": "2021-11-29T18:25:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi Jimmie,\r\n\r\nI think a support ticket may be helpful so that you can share the actual cloud name and prefix values used on your API calls to help us find corresponding logs on our side.\r\n\r\nBased on the exception in the first message (the one with the \"Server returned unexpected status code - 302\" text), I was hoping you could see more info about the request and response that triggered that error - I think the req/res objects you sent just now are for the request from your frontend to your backend, but it's the request/response for the call from your backend to api.cloudinary.com that's causing the error\r\n\r\nWith a 30x code there should be a `Location` header telling the client which URL to request instead of the initially-requested URL, and the value of that may help explain what's happening\r\n\r\nOn our side, I did try to find what could cause a 302 from that controller in the API, but the most likely reason is if you called http:// instead of https:// and we redirected to the same URL on https://api.cloudinary.com, but that didn't appear to be the case in your example, so more information about the response that triggered the exception would be helpful to investigate further\r\n\r\nThanks,\r\nStephen",
    "reactions": {
      "url": "https://api.github.com/repos/cloudinary/cloudinary_npm/issues/comments/981898921/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/cloudinary/cloudinary_npm/issues/comments/981908965",
    "html_url": "https://github.com/cloudinary/cloudinary_npm/issues/520#issuecomment-981908965",
    "issue_url": "https://api.github.com/repos/cloudinary/cloudinary_npm/issues/520",
    "id": 981908965,
    "node_id": "IC_kwDOAEh2wM46hr3l",
    "user": {
      "login": "jimmiejackson414",
      "id": 93394140,
      "node_id": "U_kgDOBZEU3A",
      "avatar_url": "https://avatars.githubusercontent.com/u/93394140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimmiejackson414",
      "html_url": "https://github.com/jimmiejackson414",
      "followers_url": "https://api.github.com/users/jimmiejackson414/followers",
      "following_url": "https://api.github.com/users/jimmiejackson414/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimmiejackson414/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimmiejackson414/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimmiejackson414/subscriptions",
      "organizations_url": "https://api.github.com/users/jimmiejackson414/orgs",
      "repos_url": "https://api.github.com/users/jimmiejackson414/repos",
      "events_url": "https://api.github.com/users/jimmiejackson414/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimmiejackson414/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-29T18:39:38Z",
    "updated_at": "2021-11-29T18:39:38Z",
    "author_association": "NONE",
    "body": "You're right, those are definitely just req/res logs between my frontend and api. Honestly I'm not quite sure how I'd log the response between my api and Cloudinary. I'll go ahead and get a support ticket opened up though! Should I post to the Support Forum, or create a new ticket via https://support.cloudinary.com/hc/en-us/requests/new?",
    "reactions": {
      "url": "https://api.github.com/repos/cloudinary/cloudinary_npm/issues/comments/981908965/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/cloudinary/cloudinary_npm/issues/comments/981954153",
    "html_url": "https://github.com/cloudinary/cloudinary_npm/issues/520#issuecomment-981954153",
    "issue_url": "https://api.github.com/repos/cloudinary/cloudinary_npm/issues/520",
    "id": 981954153,
    "node_id": "IC_kwDOAEh2wM46h25p",
    "user": {
      "login": "igy",
      "id": 1002346,
      "node_id": "MDQ6VXNlcjEwMDIzNDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1002346?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/igy",
      "html_url": "https://github.com/igy",
      "followers_url": "https://api.github.com/users/igy/followers",
      "following_url": "https://api.github.com/users/igy/following{/other_user}",
      "gists_url": "https://api.github.com/users/igy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/igy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/igy/subscriptions",
      "organizations_url": "https://api.github.com/users/igy/orgs",
      "repos_url": "https://api.github.com/users/igy/repos",
      "events_url": "https://api.github.com/users/igy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/igy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-29T19:39:03Z",
    "updated_at": "2021-11-29T19:39:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "The forum is publicly visible so I think it's not suitable for sharing account-specific info; the form creates a ticket for our team and you'll receive responses both there on the support site, and via email, so that's what I'd recommend",
    "reactions": {
      "url": "https://api.github.com/repos/cloudinary/cloudinary_npm/issues/comments/981954153/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/cloudinary/cloudinary_npm/issues/comments/981954610",
    "html_url": "https://github.com/cloudinary/cloudinary_npm/issues/520#issuecomment-981954610",
    "issue_url": "https://api.github.com/repos/cloudinary/cloudinary_npm/issues/520",
    "id": 981954610,
    "node_id": "IC_kwDOAEh2wM46h3Ay",
    "user": {
      "login": "jimmiejackson414",
      "id": 93394140,
      "node_id": "U_kgDOBZEU3A",
      "avatar_url": "https://avatars.githubusercontent.com/u/93394140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimmiejackson414",
      "html_url": "https://github.com/jimmiejackson414",
      "followers_url": "https://api.github.com/users/jimmiejackson414/followers",
      "following_url": "https://api.github.com/users/jimmiejackson414/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimmiejackson414/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimmiejackson414/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimmiejackson414/subscriptions",
      "organizations_url": "https://api.github.com/users/jimmiejackson414/orgs",
      "repos_url": "https://api.github.com/users/jimmiejackson414/repos",
      "events_url": "https://api.github.com/users/jimmiejackson414/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimmiejackson414/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-29T19:39:42Z",
    "updated_at": "2021-11-29T19:39:42Z",
    "author_association": "NONE",
    "body": "Perfect! I'll go ahead and close this issue then. Thanks for your help!",
    "reactions": {
      "url": "https://api.github.com/repos/cloudinary/cloudinary_npm/issues/comments/981954610/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]