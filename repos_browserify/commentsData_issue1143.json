[
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/76636882",
    "html_url": "https://github.com/browserify/browserify/issues/1143#issuecomment-76636882",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1143",
    "id": 76636882,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NjM2ODgy",
    "user": {
      "login": "mattdesl",
      "id": 1383811,
      "node_id": "MDQ6VXNlcjEzODM4MTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1383811?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattdesl",
      "html_url": "https://github.com/mattdesl",
      "followers_url": "https://api.github.com/users/mattdesl/followers",
      "following_url": "https://api.github.com/users/mattdesl/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattdesl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattdesl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattdesl/subscriptions",
      "organizations_url": "https://api.github.com/users/mattdesl/orgs",
      "repos_url": "https://api.github.com/users/mattdesl/repos",
      "events_url": "https://api.github.com/users/mattdesl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattdesl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-01T23:01:03Z",
    "updated_at": "2015-03-01T23:01:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "I have been poking around in this area lately. It would be cool if browserify exposed some features which made this possible, but it does seem like a [rabbit hole of complexity](https://github.com/webpack/docs/wiki/hot-module-replacement-with-webpack).\n\nIt's worth mentioning some other ways of tackling the problem that don't involve major changes to browserify:\n\n#### specific tooling\n\nOften you just want to apply hot-loading to a specific area of frontend development, eg. animations, render loops, UI layout, CSS changes, etc. In some cases a custom tool can provide the best experience and give you full control over file watching and how updates are triggered. \n\nFor example:\n- [glslify-live](https://github.com/hughsk/glslify-live) for hot reloading GLSL shaders\n- [json-live](https://github.com/mattdesl/json-live) for hot reloading JSON data\n- [LiveReload](http://livereload.com/) for hot reloading CSS, can be used with gulp, grunt, [wtch](https://github.com/mattdesl/wtch), [budo](https://github.com/mattdesl/budo), etc\n\nThe json-live and glslify-live approach (chokidar server + transform + sse-stream) could be applied to other areas like template updates and app-specific UI development. It might be worth building these tools on some shared set of modules that deal with sse-stream et al.\n\n#### Remote Debugging\n\nThis is something @caspervonb and I have been looking at as well. Browserify or watchify can be used as per normal, but the updated source is then sent to Chrome's Remote Debugging interface which tells V8 to handle the diffing and code updating.  This has a couple benefits over evals, like better handling of IIFEs, but also has some [major drawbacks](https://code.google.com/p/v8/issues/detail?id=3894&q=liveedit&colspec=ID%20Type%20Status%20Priority%20Owner%20Summary%20HW%20OS%20Area%20Stars) and is currently limited to Chrome.\n- [budo-chrome](https://github.com/mattdesl/budo-chrome)\n- [amok](https://github.com/caspervonb/amok)\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/76636882/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/76701512",
    "html_url": "https://github.com/browserify/browserify/issues/1143#issuecomment-76701512",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1143",
    "id": 76701512,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NzAxNTEy",
    "user": {
      "login": "caspervonb",
      "id": 157787,
      "node_id": "MDQ6VXNlcjE1Nzc4Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/157787?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/caspervonb",
      "html_url": "https://github.com/caspervonb",
      "followers_url": "https://api.github.com/users/caspervonb/followers",
      "following_url": "https://api.github.com/users/caspervonb/following{/other_user}",
      "gists_url": "https://api.github.com/users/caspervonb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/caspervonb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/caspervonb/subscriptions",
      "organizations_url": "https://api.github.com/users/caspervonb/orgs",
      "repos_url": "https://api.github.com/users/caspervonb/repos",
      "events_url": "https://api.github.com/users/caspervonb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/caspervonb/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-02T12:09:35Z",
    "updated_at": "2015-03-02T12:09:35Z",
    "author_association": "NONE",
    "body": "For code, it just doesn't seem viable to do it without involving the debugger, I've spent quite a-lot of time trying to come up with an alternative to using a debugging connection because it would make the implementation runtime agnostic, eval hacking, prototype substitution, while you can do patching of some-things, there's a clear difference between re-compiling your code through a debug session and re-evaluating your code/data through hot replacements, essentially it is edit and continue.\n\nSo basically, the differences are re-compiling via a debugging session lets you modify any code and continue afterwards, including anonymous closures, side effects will not be run since there is no code evaluation/execution.\n\nHot module replacements on the other hand seem to be more about data, a module in webpack doesn't have to code, seems like it almost acts like an asset loader, react-hot-loader for example executes side effects and patches up prototypes, so it's a different kind of feature, and they could quite easily co-exist.\n\nFeel free to correct me If I'm totally uninformed about webpack\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/76701512/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/76762434",
    "html_url": "https://github.com/browserify/browserify/issues/1143#issuecomment-76762434",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1143",
    "id": 76762434,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NzYyNDM0",
    "user": {
      "login": "augbog",
      "id": 2054339,
      "node_id": "MDQ6VXNlcjIwNTQzMzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2054339?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/augbog",
      "html_url": "https://github.com/augbog",
      "followers_url": "https://api.github.com/users/augbog/followers",
      "following_url": "https://api.github.com/users/augbog/following{/other_user}",
      "gists_url": "https://api.github.com/users/augbog/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/augbog/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/augbog/subscriptions",
      "organizations_url": "https://api.github.com/users/augbog/orgs",
      "repos_url": "https://api.github.com/users/augbog/repos",
      "events_url": "https://api.github.com/users/augbog/events{/privacy}",
      "received_events_url": "https://api.github.com/users/augbog/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-02T17:54:24Z",
    "updated_at": "2015-03-02T17:54:24Z",
    "author_association": "NONE",
    "body": "There was an issue filed in https://github.com/gaearon/react-hot-loader/issues/61 about how they leverage HMR in webpack. Would also love to see HMR in Browserify if possible.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/76762434/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/77147457",
    "html_url": "https://github.com/browserify/browserify/issues/1143#issuecomment-77147457",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1143",
    "id": 77147457,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MTQ3NDU3",
    "user": {
      "login": "slorber",
      "id": 749374,
      "node_id": "MDQ6VXNlcjc0OTM3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/749374?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/slorber",
      "html_url": "https://github.com/slorber",
      "followers_url": "https://api.github.com/users/slorber/followers",
      "following_url": "https://api.github.com/users/slorber/following{/other_user}",
      "gists_url": "https://api.github.com/users/slorber/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/slorber/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/slorber/subscriptions",
      "organizations_url": "https://api.github.com/users/slorber/orgs",
      "repos_url": "https://api.github.com/users/slorber/repos",
      "events_url": "https://api.github.com/users/slorber/events{/privacy}",
      "received_events_url": "https://api.github.com/users/slorber/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-04T12:13:16Z",
    "updated_at": "2015-03-04T12:13:49Z",
    "author_association": "NONE",
    "body": "+1 as I'm thinking of leaving Browserify to Webpack just for that. Also a React user\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/77147457/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/79048115",
    "html_url": "https://github.com/browserify/browserify/issues/1143#issuecomment-79048115",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1143",
    "id": 79048115,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5MDQ4MTE1",
    "user": {
      "login": "bjrmatos",
      "id": 4262050,
      "node_id": "MDQ6VXNlcjQyNjIwNTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4262050?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bjrmatos",
      "html_url": "https://github.com/bjrmatos",
      "followers_url": "https://api.github.com/users/bjrmatos/followers",
      "following_url": "https://api.github.com/users/bjrmatos/following{/other_user}",
      "gists_url": "https://api.github.com/users/bjrmatos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bjrmatos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bjrmatos/subscriptions",
      "organizations_url": "https://api.github.com/users/bjrmatos/orgs",
      "repos_url": "https://api.github.com/users/bjrmatos/repos",
      "events_url": "https://api.github.com/users/bjrmatos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bjrmatos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-13T15:30:15Z",
    "updated_at": "2015-03-13T15:30:15Z",
    "author_association": "NONE",
    "body": "I think this is a nice feature that browserify should support or at least provide a basis to implement a plugin\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/79048115/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/87333337",
    "html_url": "https://github.com/browserify/browserify/issues/1143#issuecomment-87333337",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1143",
    "id": 87333337,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MzMzMzM3",
    "user": {
      "login": "milankinen",
      "id": 1080706,
      "node_id": "MDQ6VXNlcjEwODA3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1080706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/milankinen",
      "html_url": "https://github.com/milankinen",
      "followers_url": "https://api.github.com/users/milankinen/followers",
      "following_url": "https://api.github.com/users/milankinen/following{/other_user}",
      "gists_url": "https://api.github.com/users/milankinen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/milankinen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/milankinen/subscriptions",
      "organizations_url": "https://api.github.com/users/milankinen/orgs",
      "repos_url": "https://api.github.com/users/milankinen/repos",
      "events_url": "https://api.github.com/users/milankinen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/milankinen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-29T00:21:30Z",
    "updated_at": "2015-03-29T00:30:14Z",
    "author_association": "NONE",
    "body": "Actually, hot reloading is now possible with Browserify too (uses same react-hot-api): https://github.com/milankinen/livereactload\n\nFor more details: LiveReactload does **not** reload single modules but the whole bundle instead. Reloading injections are done with a custom transform function that\n\n1) Caches React module so that each reload will share the \"first\" React code\n2) Scans the `module.exports` and batches the old component prototypes with the new ones\n3) Adds a WebSocket client that listens change event from LiveReactload server (must be started separately) and reloads the bundle file if any events occur\n\nSince React diffs the built Virtual DOM and the first component classes exist (only prototypes are batched with the new functions), only changed VDOM parts are rendered and the state remains at it is.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/87333337/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/87333828",
    "html_url": "https://github.com/browserify/browserify/issues/1143#issuecomment-87333828",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1143",
    "id": 87333828,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MzMzODI4",
    "user": {
      "login": "bjrmatos",
      "id": 4262050,
      "node_id": "MDQ6VXNlcjQyNjIwNTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4262050?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bjrmatos",
      "html_url": "https://github.com/bjrmatos",
      "followers_url": "https://api.github.com/users/bjrmatos/followers",
      "following_url": "https://api.github.com/users/bjrmatos/following{/other_user}",
      "gists_url": "https://api.github.com/users/bjrmatos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bjrmatos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bjrmatos/subscriptions",
      "organizations_url": "https://api.github.com/users/bjrmatos/orgs",
      "repos_url": "https://api.github.com/users/bjrmatos/repos",
      "events_url": "https://api.github.com/users/bjrmatos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bjrmatos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-29T00:28:55Z",
    "updated_at": "2015-03-29T00:28:55Z",
    "author_association": "NONE",
    "body": "@milankinen is only react the unique use case? or is generic for js modules?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/87333828/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/87335070",
    "html_url": "https://github.com/browserify/browserify/issues/1143#issuecomment-87335070",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1143",
    "id": 87335070,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MzM1MDcw",
    "user": {
      "login": "milankinen",
      "id": 1080706,
      "node_id": "MDQ6VXNlcjEwODA3MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1080706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/milankinen",
      "html_url": "https://github.com/milankinen",
      "followers_url": "https://api.github.com/users/milankinen/followers",
      "following_url": "https://api.github.com/users/milankinen/following{/other_user}",
      "gists_url": "https://api.github.com/users/milankinen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/milankinen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/milankinen/subscriptions",
      "organizations_url": "https://api.github.com/users/milankinen/orgs",
      "repos_url": "https://api.github.com/users/milankinen/repos",
      "events_url": "https://api.github.com/users/milankinen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/milankinen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-29T00:36:02Z",
    "updated_at": "2015-03-29T00:38:36Z",
    "author_association": "NONE",
    "body": "@bjrmatos In theory this is a generic implementation. However in practice, only React programming practices won't produce \"hidden state\" to the page (in DOM for example). But if you can keep your modules stateless (or at least store state to the React Component's state) then you can modify whatever in your module and it'll rock!\n\nYou can take look at the fourth example to see how custom state management can be done with LiveReactload (actually, I prefer to use that model in my personal projects and the demo video has same idea behind).\n\nEDIT: in my opinion, if you produce code with React that is not livereloadable, then you are doing something wrong.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/87335070/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/87376132",
    "html_url": "https://github.com/browserify/browserify/issues/1143#issuecomment-87376132",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1143",
    "id": 87376132,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3Mzc2MTMy",
    "user": {
      "login": "bjrmatos",
      "id": 4262050,
      "node_id": "MDQ6VXNlcjQyNjIwNTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4262050?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bjrmatos",
      "html_url": "https://github.com/bjrmatos",
      "followers_url": "https://api.github.com/users/bjrmatos/followers",
      "following_url": "https://api.github.com/users/bjrmatos/following{/other_user}",
      "gists_url": "https://api.github.com/users/bjrmatos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bjrmatos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bjrmatos/subscriptions",
      "organizations_url": "https://api.github.com/users/bjrmatos/orgs",
      "repos_url": "https://api.github.com/users/bjrmatos/repos",
      "events_url": "https://api.github.com/users/bjrmatos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bjrmatos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-29T09:06:24Z",
    "updated_at": "2015-03-29T09:06:24Z",
    "author_association": "NONE",
    "body": "great job @milankinen ! will try to play with livereactload soon!, I would like to hear what @substack has to say about this\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/87376132/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/92123811",
    "html_url": "https://github.com/browserify/browserify/issues/1143#issuecomment-92123811",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1143",
    "id": 92123811,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkyMTIzODEx",
    "user": {
      "login": "gabssnake",
      "id": 2307728,
      "node_id": "MDQ6VXNlcjIzMDc3Mjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2307728?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gabssnake",
      "html_url": "https://github.com/gabssnake",
      "followers_url": "https://api.github.com/users/gabssnake/followers",
      "following_url": "https://api.github.com/users/gabssnake/following{/other_user}",
      "gists_url": "https://api.github.com/users/gabssnake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gabssnake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gabssnake/subscriptions",
      "organizations_url": "https://api.github.com/users/gabssnake/orgs",
      "repos_url": "https://api.github.com/users/gabssnake/repos",
      "events_url": "https://api.github.com/users/gabssnake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gabssnake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-12T20:49:25Z",
    "updated_at": "2015-04-12T20:50:52Z",
    "author_association": "NONE",
    "body": "https://github.com/milankinen/livereactload Looks promising! \nHow would one integrate it with express/koa ?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/92123811/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/94086850",
    "html_url": "https://github.com/browserify/browserify/issues/1143#issuecomment-94086850",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1143",
    "id": 94086850,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk0MDg2ODUw",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-17T22:15:40Z",
    "updated_at": "2015-04-17T22:21:37Z",
    "author_association": "NONE",
    "body": "I investigated a more general approach (more general than HMR) 2 months ago and got something working, at least for simple use cases and just in node: ([live-patch](https://github.com/substack/live-patch))\n\n![live patch](https://raw.githubusercontent.com/substack/live-patch/master/example/demo.gif)\n\nHowever this implementation is very fragile and I haven't been able to get it working for arbitrary browser bundles yet.\nI wrote the first half of this implementation after listening to @jeresig give a talk at empirejs 2 years ago about live reloading wizardry they do for kahn academy's educational programming tool.\n\nFor some kinds of updates you'll always need to re-run a bunch of side effects where you're probably better off reloading the entire page, but for many other updates surgical diffs can work reasonably well. It's just a very messy problem to sort each kind of possible update into what \"feels right\" for the appropriate action to take.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/94086850/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/100720824",
    "html_url": "https://github.com/browserify/browserify/issues/1143#issuecomment-100720824",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1143",
    "id": 100720824,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDcyMDgyNA==",
    "user": {
      "login": "gaearon",
      "id": 810438,
      "node_id": "MDQ6VXNlcjgxMDQzOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/810438?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gaearon",
      "html_url": "https://github.com/gaearon",
      "followers_url": "https://api.github.com/users/gaearon/followers",
      "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
      "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
      "organizations_url": "https://api.github.com/users/gaearon/orgs",
      "repos_url": "https://api.github.com/users/gaearon/repos",
      "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gaearon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-11T00:22:08Z",
    "updated_at": "2015-05-11T00:22:08Z",
    "author_association": "NONE",
    "body": "> For some kinds of updates you'll always need to re-run a bunch of side effects where you're probably better off reloading the entire page\n\nThe neat thing is, if you provide an opt-in API for modules to tell how to run those side effects, then we can run build transforms for things we _know_ how to update (e.g. React components, CSS, Flux Stores, etc). If it works in 80% of cases it's already good enough, and makes the common workflow a _lot_ better.\n\nSo I'd say it's not the surgical diffs that Browserify needs to support—it's a way for individual modules to say how they want to be updated. Which is pretty much what Webpack's HMR is.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/100720824/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/100721301",
    "html_url": "https://github.com/browserify/browserify/issues/1143#issuecomment-100721301",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1143",
    "id": 100721301,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDcyMTMwMQ==",
    "user": {
      "login": "gaearon",
      "id": 810438,
      "node_id": "MDQ6VXNlcjgxMDQzOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/810438?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gaearon",
      "html_url": "https://github.com/gaearon",
      "followers_url": "https://api.github.com/users/gaearon/followers",
      "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
      "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
      "organizations_url": "https://api.github.com/users/gaearon/orgs",
      "repos_url": "https://api.github.com/users/gaearon/repos",
      "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gaearon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-11T00:23:24Z",
    "updated_at": "2015-05-11T00:23:45Z",
    "author_association": "NONE",
    "body": "> For more details: LiveReactload does not reload single modules but the whole bundle instead. Reloading injections are done with a custom transform function that\n\nThis is a big problem with LiveReactload and the reason people are bumping into many issues with it. It's just much more error prone to reload the whole application code instead of a few changed modules. That's why HMR model is more stable in my opinion and works more reliably across different apps.\n\nI'd love to see Browserify support it.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/100721301/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/100833559",
    "html_url": "https://github.com/browserify/browserify/issues/1143#issuecomment-100833559",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1143",
    "id": 100833559,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDgzMzU1OQ==",
    "user": {
      "login": "tcurdt",
      "id": 13697,
      "node_id": "MDQ6VXNlcjEzNjk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/13697?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tcurdt",
      "html_url": "https://github.com/tcurdt",
      "followers_url": "https://api.github.com/users/tcurdt/followers",
      "following_url": "https://api.github.com/users/tcurdt/following{/other_user}",
      "gists_url": "https://api.github.com/users/tcurdt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tcurdt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tcurdt/subscriptions",
      "organizations_url": "https://api.github.com/users/tcurdt/orgs",
      "repos_url": "https://api.github.com/users/tcurdt/repos",
      "events_url": "https://api.github.com/users/tcurdt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tcurdt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-11T09:37:17Z",
    "updated_at": "2015-05-11T09:37:17Z",
    "author_association": "NONE",
    "body": "While it's great how well the HMR model works I am wondering whether reloading the whole thing isn't the better approach for React (at least). It would force one to write stateless components and all that needs to be re-injected on a reload is the state. It feels much more KISS.\n\nThat said I wouldn't mind if one could port the HMR to browserify :)\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/100833559/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/127999184",
    "html_url": "https://github.com/browserify/browserify/issues/1143#issuecomment-127999184",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1143",
    "id": 127999184,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzk5OTE4NA==",
    "user": {
      "login": "Kureev",
      "id": 2273613,
      "node_id": "MDQ6VXNlcjIyNzM2MTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2273613?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Kureev",
      "html_url": "https://github.com/Kureev",
      "followers_url": "https://api.github.com/users/Kureev/followers",
      "following_url": "https://api.github.com/users/Kureev/following{/other_user}",
      "gists_url": "https://api.github.com/users/Kureev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Kureev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Kureev/subscriptions",
      "organizations_url": "https://api.github.com/users/Kureev/orgs",
      "repos_url": "https://api.github.com/users/Kureev/repos",
      "events_url": "https://api.github.com/users/Kureev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Kureev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-05T13:38:31Z",
    "updated_at": "2015-08-05T13:38:31Z",
    "author_association": "NONE",
    "body": "I'm not saying I've solved this issue, but you can check out my [`browserify-patch-server` implementation](https://github.com/Kureev/browserify-patch-server) (you'll get pretty messages about state and changes of your bundle(s)), and [`react-live` implementation over it](https://github.com/Kureev/browserify-react-live). \n\nInteraction between client and server based on `diff`s: server calculate `diff` between old file content and updated file content and then broadcast it to all clients via WebSockets. Client I wrote for `react` applies  patch to bundle in the runtime and achieve a nice experience of live-patching.\n\nOf course, it doesn't solve **all** existing problems, but I hope it's a step in a right direction. I wonder what @substack thinks about it.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/127999184/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/131778747",
    "html_url": "https://github.com/browserify/browserify/issues/1143#issuecomment-131778747",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1143",
    "id": 131778747,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMTc3ODc0Nw==",
    "user": {
      "login": "Macil",
      "id": 577345,
      "node_id": "MDQ6VXNlcjU3NzM0NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/577345?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Macil",
      "html_url": "https://github.com/Macil",
      "followers_url": "https://api.github.com/users/Macil/followers",
      "following_url": "https://api.github.com/users/Macil/following{/other_user}",
      "gists_url": "https://api.github.com/users/Macil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Macil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Macil/subscriptions",
      "organizations_url": "https://api.github.com/users/Macil/orgs",
      "repos_url": "https://api.github.com/users/Macil/repos",
      "events_url": "https://api.github.com/users/Macil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Macil/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-17T10:50:49Z",
    "updated_at": "2015-08-17T10:50:49Z",
    "author_association": "NONE",
    "body": "It seems like the previous Browserify solutions posted have been specific to React or just not as general as Webpack's HMR API.\n\nI've just made [browserify-hmr](https://github.com/AgentME/browserify-hmr), which is a Browserify plugin that fully implements Webpack's Hot Module Replacement API. There's probably a pile bugs still in there and the code isn't terribly well organized yet, but it seems to show that a plugin strategy works well enough. It currently lacks a ready-to-use compatible websocket solution so that it can avoid polling and lacks a compatible react-hot-loader-like transform for one's React needs.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/131778747/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/131781281",
    "html_url": "https://github.com/browserify/browserify/issues/1143#issuecomment-131781281",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1143",
    "id": 131781281,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMTc4MTI4MQ==",
    "user": {
      "login": "Kureev",
      "id": 2273613,
      "node_id": "MDQ6VXNlcjIyNzM2MTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2273613?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Kureev",
      "html_url": "https://github.com/Kureev",
      "followers_url": "https://api.github.com/users/Kureev/followers",
      "following_url": "https://api.github.com/users/Kureev/following{/other_user}",
      "gists_url": "https://api.github.com/users/Kureev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Kureev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Kureev/subscriptions",
      "organizations_url": "https://api.github.com/users/Kureev/orgs",
      "repos_url": "https://api.github.com/users/Kureev/repos",
      "events_url": "https://api.github.com/users/Kureev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Kureev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-17T10:58:00Z",
    "updated_at": "2015-08-17T10:58:40Z",
    "author_association": "NONE",
    "body": "@AgentME Can't agree with you: if you'll take a look on mine `browserify-patch-server`, you wouldn't see anything about React. It's just a server that emits messages with **diffs** for specific changed files. But I don't have a goal to suit webpack's HMR API, that's true. From my point of view **you don't need to replace whole file (module) if you've changed only 1 line**.\n\nBut I think it'll be handy for a plenty people to be able to use webpack's plugins based on HMR in BF also :+1: \n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/131781281/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/151786156",
    "html_url": "https://github.com/browserify/browserify/issues/1143#issuecomment-151786156",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1143",
    "id": 151786156,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTc4NjE1Ng==",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-28T09:58:33Z",
    "updated_at": "2015-10-28T09:58:33Z",
    "author_association": "NONE",
    "body": "Closing this issue since there are lots of great options now: amok, browserify-hmr, livereactload.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/151786156/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]