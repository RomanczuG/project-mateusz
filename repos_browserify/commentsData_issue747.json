[
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/42094638",
    "html_url": "https://github.com/browserify/browserify/issues/747#issuecomment-42094638",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/747",
    "id": 42094638,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDk0NjM4",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-03T03:06:07Z",
    "updated_at": "2014-05-03T03:06:07Z",
    "author_association": "NONE",
    "body": "Are you using any transforms? Not all transforms include inline source maps that browserify uses to generate the complete source map. If you stick to ordinary non-transformed code this shouldn't be a problem.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/42094638/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/42100896",
    "html_url": "https://github.com/browserify/browserify/issues/747#issuecomment-42100896",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/747",
    "id": 42100896,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTAwODk2",
    "user": {
      "login": "cymen",
      "id": 121034,
      "node_id": "MDQ6VXNlcjEyMTAzNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/121034?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cymen",
      "html_url": "https://github.com/cymen",
      "followers_url": "https://api.github.com/users/cymen/followers",
      "following_url": "https://api.github.com/users/cymen/following{/other_user}",
      "gists_url": "https://api.github.com/users/cymen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cymen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cymen/subscriptions",
      "organizations_url": "https://api.github.com/users/cymen/orgs",
      "repos_url": "https://api.github.com/users/cymen/repos",
      "events_url": "https://api.github.com/users/cymen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cymen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-03T09:47:50Z",
    "updated_at": "2014-05-03T09:47:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am not using any transforms.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/42100896/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/42123731",
    "html_url": "https://github.com/browserify/browserify/issues/747#issuecomment-42123731",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/747",
    "id": 42123731,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTIzNzMx",
    "user": {
      "login": "fresheneesz",
      "id": 149531,
      "node_id": "MDQ6VXNlcjE0OTUzMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/149531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fresheneesz",
      "html_url": "https://github.com/fresheneesz",
      "followers_url": "https://api.github.com/users/fresheneesz/followers",
      "following_url": "https://api.github.com/users/fresheneesz/following{/other_user}",
      "gists_url": "https://api.github.com/users/fresheneesz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fresheneesz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fresheneesz/subscriptions",
      "organizations_url": "https://api.github.com/users/fresheneesz/orgs",
      "repos_url": "https://api.github.com/users/fresheneesz/repos",
      "events_url": "https://api.github.com/users/fresheneesz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fresheneesz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-04T04:15:47Z",
    "updated_at": "2014-05-04T04:16:30Z",
    "author_association": "NONE",
    "body": "I'm also seeing incorrect line numbers. I'm finishing up sourcemap support for my unit testing module [deadunit](https://github.com/fresheneesz/deadunit), and I came across a failing test that looks to be failing because of an invalid source mapping. I'm fairly certain it isn't an error in [the source-map module](https://github.com/mozilla/source-map/) because it's working for webpack's generated sourcemaps. \n\nThe original file I have is:\n\n```\nvar root = typeof global !== \"undefined\" && global !== null ? global : this;\n\nroot.sourceMapTest2 = function() {\n    this.ok(true)\n}\n```\n\nThe mapped file is:\n\n```\n!function(e){if(\"object\"==typeof exports)module.exports=e();else if(\"function\"==typeof define&&define.amd)define(e);else{var n;\"undefined\"!=typeof window?n=window:\"undefined\"!=typeof global?n=global:\"undefined\"!=typeof self&&(n=self),(n.inlineSourceMapTest||(n.inlineSourceMapTest={})).browserified=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (){\nvar root = typeof global !== \"undefined\" && global !== null ? global : this;\n\nroot.sourceMapTest2 = function() {\n    this.ok(true)\n}\n\n}).call(this,typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}]},{},[1])\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlcyI6WyJGOlxcYmlsbHlzRmlsZVxcY29kZVxcamF2YXNjcmlwdFxcbm9kZWpzXFxkZWFkdW5pdENvcmVcXG5vZGVfbW9kdWxlc1xcYnVpbGQtbW9kdWxlc1xcbm9kZV9tb2R1bGVzXFxicm93c2VyaWZ5XFxub2RlX21vZHVsZXNcXGJyb3dzZXItcGFja1xcX3ByZWx1ZGUuanMiLCJGOi9iaWxseXNGaWxlL2NvZGUvamF2YXNjcmlwdC9ub2RlanMvZGVhZHVuaXRDb3JlL3Rlc3QvaW5saW5lU291cmNlTWFwVGVzdC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3Rocm93IG5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIil9dmFyIGY9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGYuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sZixmLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIihmdW5jdGlvbiAoZ2xvYmFsKXtcbnZhciByb290ID0gdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBnbG9iYWwgIT09IG51bGwgPyBnbG9iYWwgOiB0aGlzO1xuXG5yb290LnNvdXJjZU1hcFRlc3QyID0gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5vayh0cnVlKVxufVxuXG59KS5jYWxsKHRoaXMsdHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIgPyBzZWxmIDogdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdyA6IHt9KSJdfQ==\n(1)\n});\n```\n\nI'm getting line 5 instead of line 4 for the line `this.ok(true)` (the line in the generated file is 6). I'm on browserify 3.44.2 . \n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/42123731/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/42313340",
    "html_url": "https://github.com/browserify/browserify/issues/747#issuecomment-42313340",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/747",
    "id": 42313340,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzEzMzQw",
    "user": {
      "login": "lydell",
      "id": 2142817,
      "node_id": "MDQ6VXNlcjIxNDI4MTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2142817?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lydell",
      "html_url": "https://github.com/lydell",
      "followers_url": "https://api.github.com/users/lydell/followers",
      "following_url": "https://api.github.com/users/lydell/following{/other_user}",
      "gists_url": "https://api.github.com/users/lydell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lydell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lydell/subscriptions",
      "organizations_url": "https://api.github.com/users/lydell/orgs",
      "repos_url": "https://api.github.com/users/lydell/repos",
      "events_url": "https://api.github.com/users/lydell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lydell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-06T14:59:03Z",
    "updated_at": "2014-05-06T14:59:03Z",
    "author_association": "NONE",
    "body": "> What is the best way to figure out what is invalid in the source map?\n\nNot sure if its the best way, but I like inspecting source maps visually using an [online source map visualizer](http://sokra.github.io/source-map-visualization/).\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/42313340/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/46523030",
    "html_url": "https://github.com/browserify/browserify/issues/747#issuecomment-46523030",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/747",
    "id": 46523030,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTIzMDMw",
    "user": {
      "login": "cymen",
      "id": 121034,
      "node_id": "MDQ6VXNlcjEyMTAzNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/121034?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cymen",
      "html_url": "https://github.com/cymen",
      "followers_url": "https://api.github.com/users/cymen/followers",
      "following_url": "https://api.github.com/users/cymen/following{/other_user}",
      "gists_url": "https://api.github.com/users/cymen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cymen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cymen/subscriptions",
      "organizations_url": "https://api.github.com/users/cymen/orgs",
      "repos_url": "https://api.github.com/users/cymen/repos",
      "events_url": "https://api.github.com/users/cymen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cymen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-19T04:40:19Z",
    "updated_at": "2014-06-19T04:40:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "I determined that my source maps were invalid because I was using NODE_PATH to make my main JavaScript directory for a big part of our project the equivalent of node_modules. So we could do `require('awesome-thing/something')` and it would be relative to our Ruby on Rails asset path location. In other words, require in browserify would work similar to require from the Rails asset pipeline.\n\nThis broke the source maps. I didn't go on to figure out why it broke the source maps yet. I would like to at some point. I readily concede to the NodeJS side of what I'm doing, using NODE_PATH would be frowned upon.\n\nThe whole reason to go down that route was because jasmine-rails copies the JavaScript spec files to a directory of a different level (only when run with RAILS_ENV=test I believe) and this makes relative paths break from say /spec/javascripts to /app/assets/javascripts when suddenly we're no longer in /spec/javascripts but instead /tmp/something/another_thing.\n\nIn the end, we're going to use relative paths in our main source and just use the workaround for spec files. Hopefully, I'll get some time to dig into it more (or another person on the project will) and we can squash the bug.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/46523030/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]