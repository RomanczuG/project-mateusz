[
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1151",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1151/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1151/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1151/events",
    "html_url": "https://github.com/browserify/browserify/pull/1151",
    "id": 60138698,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzA2NjcxNTM=",
    "number": 1151,
    "title": "Make browserify recognize its own bundles",
    "user": {
      "login": "jmm",
      "id": 129203,
      "node_id": "MDQ6VXNlcjEyOTIwMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129203?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmm",
      "html_url": "https://github.com/jmm",
      "followers_url": "https://api.github.com/users/jmm/followers",
      "following_url": "https://api.github.com/users/jmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmm/subscriptions",
      "organizations_url": "https://api.github.com/users/jmm/orgs",
      "repos_url": "https://api.github.com/users/jmm/repos",
      "events_url": "https://api.github.com/users/jmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 58,
    "created_at": "2015-03-06T18:21:33Z",
    "updated_at": "2018-02-13T12:29:52Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/1151",
      "html_url": "https://github.com/browserify/browserify/pull/1151",
      "diff_url": "https://github.com/browserify/browserify/pull/1151.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/1151.patch",
      "merged_at": null
    },
    "body": "# Summary\n- It's a pain in the neck to use a browserify bundle in a subsequent bundling operation.\n- Wouldn't it be nice if you could just `require()` a browserify bundle in another bundle?\n- Pragma: prepend on output, detect on input\n- [Demo](https://github.com/jmm/browserify-pragma-demo)\n\nI think this is pretty light-weight and useful, but it seems like the kind of thing I should get some thumbs up on before going ahead with.\n\nThis involves changes to browserify and several dependencies, so the branch this points to is just a placeholder. The real commits are here:\n- https://github.com/substack/node-browserify/compare/9.0.3...jmm:pragma\n- https://github.com/substack/browser-pack/compare/4.0.1...jmm:pragma\n- https://github.com/substack/module-deps/compare/3.7.2...jmm:pragma\n\nTests pass except for one on browserify that I think will be remedied easily enough.\n\nMy anecdotal testing suggests this would have a negligible impact on performance, but I welcome suggestions on how it should be tested.\n# Details\n\nCurrently it's kind of a pain in the neck to bundle a browserify bundle A in a new browserify bundle B, e.g.:\n\n``` js\nbrowserify('./entry.js')\n```\n\n`entry.js`\n\n``` js\n// bundle-a is a browserify bundle\nrequire('./bundle-a');\n```\n\nIf you just do that it's highly prone to failure. There are at least 2 failure modes:\n1. Bundle operation B errors out because it attempts to resolve paths in `require()` calls in bundle A and doesn't find them. It's unnecessary and undesirable to even do this because bundle A already contains all of the files referenced by `require()` calls that it needs to contain.\n2. Bundle operation B resolves paths from `require()` calls in bundle A to files that don't have anything to do with anything and includes them in the bundle even though they're not referenced by anything.\n\nI've seen confusion about how to consume a bundle in a subsequent bundling operation a number of times here and on stackoverflow<sup><a href=\"#footnote-1\">1</a></sup>. Generally it can be cured by:\n1. Setting `noParse` for bundle A in the bundle B operation; or\n2. Running the standalone bundle through derequire; or\n3. Minifying the bundle\n\nBut each of those approaches requires that you and / or consumers of the module keep track of which modules are browserify bundles and / or modify them or do extra work to use them, instead of being able to just require them like any other module.\n\nAnd to boot, `noParse` currently suffers from path mis-matching issues that are affecting a lot of things in browserify right now (e.g. it's sensitive to including / omitting file extension for one thing).\n\nAnd a lot of users don't even know about doing those things. Neither the `noParse` documentation nor the notes about derequire even mention that use case. Also, standalone bundles used to be processed through derequire on creation and that was discontinued. I don't think it's obvious, especially to users used to the former behavior, that it won't work to:\n# just `require()` a browserify bundle in another bundle.\n\nWouldn't it be nice if you could do that, without breaking anything else? I think there might be a way. This PR is a proof of concept of a method for doing that.\n\nIn a nutshell, when bundling:\n- On output, prepend a pragma kind of thing, similar to the ECMAScript `use strict` directive. The current format I'm testing is: `({\"compiler\": \"browserify\", \"version\": \"1.23.456\"});`\n- On input check the beginning of each bundled file for the pragma. When found, `noParse` the file. Probably omit transforms as well (but that could be an option).\n\nI'm guessing that the pragma format(s) I'm testing wouldnt wouldn't break one bundle in a million in the wild, but if that doesn't seem safe enough then a (bit) longer, more arbitrary value could be added, like `b1c2247fb27f6c8ffb66871b1cfbd30e`, which I expect would reduce the likelihood of breakage to one in a trillion.\n\nThese are the ideas I've iterated through for the format of the pragma (chronological order):\n- `\"BROWSERIFIED\";` (or with `'`)\n- `\"BROWSERIFIED@1.2.3\";` (or with `'`)\n- `\"compiler:browserify@1.2.3\";` (or with `'`)\n- `'{\"compiler\": \"browserify\", \"version\": \"1.23.456\"}';`\n- `({\"compiler\": \"browserify\", \"version\": \"1.23.456\"});` (current)\n- More compact possible alternative: `({\"browserify\": \"1.23.456\"});`\n\nAnother option could be to apply special handling by file extension(s), like `.bify.js`, `.browserify.js`, or `.browserified.js`, but I favor the pragma approach if it's one or the other.\n\nThoughts?\n\n<a id=\"footnote-1\">1.</a>\n- http://stackoverflow.com/q/28266540/1034448\n- http://stackoverflow.com/q/28078425/1034448\n- https://github.com/substack/node-browserify/issues/374\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1151/reactions",
      "total_count": 3,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1151/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1150",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1150/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1150/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1150/events",
    "html_url": "https://github.com/browserify/browserify/issues/1150",
    "id": 59947433,
    "node_id": "MDU6SXNzdWU1OTk0NzQzMw==",
    "number": 1150,
    "title": "module not found error when recursive require",
    "user": {
      "login": "magicdawn",
      "id": 4067115,
      "node_id": "MDQ6VXNlcjQwNjcxMTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4067115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/magicdawn",
      "html_url": "https://github.com/magicdawn",
      "followers_url": "https://api.github.com/users/magicdawn/followers",
      "following_url": "https://api.github.com/users/magicdawn/following{/other_user}",
      "gists_url": "https://api.github.com/users/magicdawn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/magicdawn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/magicdawn/subscriptions",
      "organizations_url": "https://api.github.com/users/magicdawn/orgs",
      "repos_url": "https://api.github.com/users/magicdawn/repos",
      "events_url": "https://api.github.com/users/magicdawn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/magicdawn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 212072653,
        "node_id": "MDU6TGFiZWwyMTIwNzI2NTM=",
        "url": "https://api.github.com/repos/browserify/browserify/labels/path-matching",
        "name": "path-matching",
        "color": "c7def8",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-03-05T12:51:51Z",
    "updated_at": "2015-05-15T20:23:14Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "e.g  suppose we have \n- index.js , provide core functions\n- ext.js , provide some extension attach to core\n\n``` js\n// index.js\nexports = module.exports = core\n\nfunction core (argument) {\n  // here is some core function\n}\n\n// just load the `ext.js`\nrequire('./ext');\n```\n\n``` js\n// ext.js\nvar core = require('./index');\n\n// attach some extension to core\ncore.foo = 'bar';\n```\n\nwith \n\n``` js\nvar browserify = require('browserify');\nbrowserify({\n  entries:  './index.js',\n  standalone: 'core'\n}).bundle().pipe(process.stdout);\n```\n\ngenerate\n\n``` shell\nexports = module.exports = core\n\nfunction core (argument) {\n  // here is some core function\n}\n\n// just load the `ext.js`\nrequire('./ext');\n},{\"./ext\":2}],2:[function(require,module,exports){\nvar core = require('./index');\n\n// attach some extension to core\ncore.foo = 'bar';\n},{\"./index\":undefined}]},{},[1])(1)\n});\n```\n\nHere is the problem `\"./index\":undefined`\nbut code generate by cli tool `browserify index.js --standalone core` is OK!\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1150/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1150/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1149",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1149/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1149/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1149/events",
    "html_url": "https://github.com/browserify/browserify/issues/1149",
    "id": 59893037,
    "node_id": "MDU6SXNzdWU1OTg5MzAzNw==",
    "number": 1149,
    "title": "standalone does not support _ and $",
    "user": {
      "login": "chunpu",
      "id": 4565306,
      "node_id": "MDQ6VXNlcjQ1NjUzMDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4565306?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chunpu",
      "html_url": "https://github.com/chunpu",
      "followers_url": "https://api.github.com/users/chunpu/followers",
      "following_url": "https://api.github.com/users/chunpu/following{/other_user}",
      "gists_url": "https://api.github.com/users/chunpu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chunpu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chunpu/subscriptions",
      "organizations_url": "https://api.github.com/users/chunpu/orgs",
      "repos_url": "https://api.github.com/users/chunpu/repos",
      "events_url": "https://api.github.com/users/chunpu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chunpu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-03-05T01:55:19Z",
    "updated_at": "2015-06-12T06:25:35Z",
    "closed_at": "2015-03-05T08:01:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "``` sh\nbrowserify . -s _\nbrowserify . -s $\n```\n\nwill both throw error\n\n``` sh\n/usr/local/lib/node_modules/browserify/node_modules/umd/node_modules/uglify-js/lib/parse.js:197\n    throw new JS_Parse_Error(message, line, col, pos);\n```\n\nbut sometime we may need to use _ like underscore, can this be fixed? Thanks\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1149/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1149/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1148",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1148/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1148/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1148/events",
    "html_url": "https://github.com/browserify/browserify/issues/1148",
    "id": 59827612,
    "node_id": "MDU6SXNzdWU1OTgyNzYxMg==",
    "number": 1148,
    "title": "Maximum call stack size exceeded when trying to minify",
    "user": {
      "login": "dvprz",
      "id": 5312952,
      "node_id": "MDQ6VXNlcjUzMTI5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5312952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dvprz",
      "html_url": "https://github.com/dvprz",
      "followers_url": "https://api.github.com/users/dvprz/followers",
      "following_url": "https://api.github.com/users/dvprz/following{/other_user}",
      "gists_url": "https://api.github.com/users/dvprz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dvprz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dvprz/subscriptions",
      "organizations_url": "https://api.github.com/users/dvprz/orgs",
      "repos_url": "https://api.github.com/users/dvprz/repos",
      "events_url": "https://api.github.com/users/dvprz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dvprz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-03-04T17:02:16Z",
    "updated_at": "2018-02-23T14:07:21Z",
    "closed_at": "2018-02-23T14:07:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello, everyone. I have a file with 58,511 lines and about 1.8MB in size. I'm trying to minify it to reduce some of the size but my build process hiccups when it gets to this part. Below is my gulp task..\n\n``` javascript\nvar browserified = transform(function(filename) {\n        return browserify(filename)\n            .bundle();\n    });\n\n    return gulp.src(['./index.js'])\n        .pipe(browserified)\n        .pipe(uglify())\n        .pipe(gulp.dest('./js'));\n```\n\nIs this just not possible? Am I missing something? Thank you.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1148/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1148/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1147",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1147/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1147/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1147/events",
    "html_url": "https://github.com/browserify/browserify/pull/1147",
    "id": 59638267,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzAzNzEyODU=",
    "number": 1147,
    "title": "Add node v0.12 and iojs on travis.yml",
    "user": {
      "login": "yosuke-furukawa",
      "id": 555645,
      "node_id": "MDQ6VXNlcjU1NTY0NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/555645?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yosuke-furukawa",
      "html_url": "https://github.com/yosuke-furukawa",
      "followers_url": "https://api.github.com/users/yosuke-furukawa/followers",
      "following_url": "https://api.github.com/users/yosuke-furukawa/following{/other_user}",
      "gists_url": "https://api.github.com/users/yosuke-furukawa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yosuke-furukawa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yosuke-furukawa/subscriptions",
      "organizations_url": "https://api.github.com/users/yosuke-furukawa/orgs",
      "repos_url": "https://api.github.com/users/yosuke-furukawa/repos",
      "events_url": "https://api.github.com/users/yosuke-furukawa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yosuke-furukawa/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-03-03T13:01:21Z",
    "updated_at": "2015-03-14T02:36:25Z",
    "closed_at": "2015-03-14T02:36:25Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/1147",
      "html_url": "https://github.com/browserify/browserify/pull/1147",
      "diff_url": "https://github.com/browserify/browserify/pull/1147.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/1147.patch",
      "merged_at": "2015-03-14T02:36:24Z"
    },
    "body": "I found this pull request https://github.com/substack/node-browserify/pull/1110 . \nTravis CI was failed, but current test works fine in my environment. \nI would like to test this again.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1147/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1147/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1146",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1146/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1146/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1146/events",
    "html_url": "https://github.com/browserify/browserify/issues/1146",
    "id": 59539012,
    "node_id": "MDU6SXNzdWU1OTUzOTAxMg==",
    "number": 1146,
    "title": "Browserifying a file with for-of does not work",
    "user": {
      "login": "domenic",
      "id": 617481,
      "node_id": "MDQ6VXNlcjYxNzQ4MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/617481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domenic",
      "html_url": "https://github.com/domenic",
      "followers_url": "https://api.github.com/users/domenic/followers",
      "following_url": "https://api.github.com/users/domenic/following{/other_user}",
      "gists_url": "https://api.github.com/users/domenic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domenic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domenic/subscriptions",
      "organizations_url": "https://api.github.com/users/domenic/orgs",
      "repos_url": "https://api.github.com/users/domenic/repos",
      "events_url": "https://api.github.com/users/domenic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domenic/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2015-03-02T19:59:02Z",
    "updated_at": "2015-03-02T21:07:08Z",
    "closed_at": "2015-03-02T21:07:08Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Throws a \"error: parsing file\", seems to originate in module-deps.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1146/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1146/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1145",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1145/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1145/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1145/events",
    "html_url": "https://github.com/browserify/browserify/issues/1145",
    "id": 59527078,
    "node_id": "MDU6SXNzdWU1OTUyNzA3OA==",
    "number": 1145,
    "title": "Don't attempt to resolve dependencies that will never be used",
    "user": {
      "login": "kentcdodds",
      "id": 1500684,
      "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kentcdodds",
      "html_url": "https://github.com/kentcdodds",
      "followers_url": "https://api.github.com/users/kentcdodds/followers",
      "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
      "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
      "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
      "repos_url": "https://api.github.com/users/kentcdodds/repos",
      "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-03-02T18:52:13Z",
    "updated_at": "2015-03-03T12:51:55Z",
    "closed_at": "2015-03-02T20:31:22Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Given I have code like this:\n\n``` javascript\nvar x;\nif (false) {\n  x = require('./some-file');\n}\n```\n\nDon't attempt to resolve the require statement because that code will never be run. I realize that this looks ridiculous, but this type of thing happens with projects that use webpack to distribute their modules using the `DefinePlugin`. For example: https://github.com/formly-js/angular-formly/issues/186\n\nAside from that, trying to be smarter about what require statements to attempt to resolve would lead to better perf and smaller output (in some cases).\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1145/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1145/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1144",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1144/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1144/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1144/events",
    "html_url": "https://github.com/browserify/browserify/issues/1144",
    "id": 59438927,
    "node_id": "MDU6SXNzdWU1OTQzODkyNw==",
    "number": 1144,
    "title": "Exporting another file",
    "user": {
      "login": "henit",
      "id": 2526740,
      "node_id": "MDQ6VXNlcjI1MjY3NDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2526740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/henit",
      "html_url": "https://github.com/henit",
      "followers_url": "https://api.github.com/users/henit/followers",
      "following_url": "https://api.github.com/users/henit/following{/other_user}",
      "gists_url": "https://api.github.com/users/henit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/henit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/henit/subscriptions",
      "organizations_url": "https://api.github.com/users/henit/orgs",
      "repos_url": "https://api.github.com/users/henit/repos",
      "events_url": "https://api.github.com/users/henit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/henit/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2015-03-02T05:01:03Z",
    "updated_at": "2015-03-11T13:38:49Z",
    "closed_at": "2015-03-11T13:38:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have a strange case of require file cross linking. I have two different files in the same directory, that export two different sets of RefluxJS actions. Something like\n\n```\nvar Reflux = require('reflux');\n\nmodule.exports = Reflux.createActions({\n    //...\n});\n```\n\nBoth files look something similar to that, but with different sets of actions.\n\nThen when the application is built with Browserify, it suddenly decide it is a good idea to just require the first file when referring to the second one:\n\n```\n(...)\n,\"/path/to/app/actions/first.js\":[function(require,module,exports){\n\nvar Reflux = require('reflux');\n\nmodule.exports = Reflux.createActions({\n    // ...\n});\n},{\"reflux\":\"/path/to/app/node_modules/reflux/index.js\"}],\"/path/to/app/actions/second.js\":[function(require,module,exports){\nmodule.exports=require(\"/path/to/app/actions/first.js\")\n},{\"/path/to/app/actions/first.js\":\"/path/to/app/actions/first.js\"}],\n(...)\n```\n\nDo you have any idea why the second action-file just require the first one? I have doublechecked my require statements, files and everything, and see no reason in the code for why it should be doing this.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1144/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1144/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1143",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1143/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1143/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1143/events",
    "html_url": "https://github.com/browserify/browserify/issues/1143",
    "id": 59384915,
    "node_id": "MDU6SXNzdWU1OTM4NDkxNQ==",
    "number": 1143,
    "title": "Hot module replacement",
    "user": {
      "login": "bjrmatos",
      "id": 4262050,
      "node_id": "MDQ6VXNlcjQyNjIwNTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4262050?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bjrmatos",
      "html_url": "https://github.com/bjrmatos",
      "followers_url": "https://api.github.com/users/bjrmatos/followers",
      "following_url": "https://api.github.com/users/bjrmatos/following{/other_user}",
      "gists_url": "https://api.github.com/users/bjrmatos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bjrmatos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bjrmatos/subscriptions",
      "organizations_url": "https://api.github.com/users/bjrmatos/orgs",
      "repos_url": "https://api.github.com/users/bjrmatos/repos",
      "events_url": "https://api.github.com/users/bjrmatos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bjrmatos/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 18,
    "created_at": "2015-03-01T06:41:45Z",
    "updated_at": "2016-11-07T21:25:06Z",
    "closed_at": "2015-10-28T09:58:33Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi, are there any plans to support this feature? (Something like [webpack does](http://webpack.github.io/docs/hot-module-replacement.html))\n\nI think it will allow some good tools to be created on top of it, like [react-hot-loader](https://github.com/gaearon/react-hot-loader)\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1143/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1143/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1142",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1142/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1142/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1142/events",
    "html_url": "https://github.com/browserify/browserify/issues/1142",
    "id": 59370185,
    "node_id": "MDU6SXNzdWU1OTM3MDE4NQ==",
    "number": 1142,
    "title": "Fails on d3-geo-projection",
    "user": {
      "login": "mattcg",
      "id": 282964,
      "node_id": "MDQ6VXNlcjI4Mjk2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/282964?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattcg",
      "html_url": "https://github.com/mattcg",
      "followers_url": "https://api.github.com/users/mattcg/followers",
      "following_url": "https://api.github.com/users/mattcg/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattcg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattcg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattcg/subscriptions",
      "organizations_url": "https://api.github.com/users/mattcg/orgs",
      "repos_url": "https://api.github.com/users/mattcg/repos",
      "events_url": "https://api.github.com/users/mattcg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattcg/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-03-01T01:11:13Z",
    "updated_at": "2015-03-01T20:20:04Z",
    "closed_at": "2015-03-01T20:20:04Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "``` bash\ngit clone git@github.com:d3/d3-geo-projection.git\ncd d3-geo-projection/\nnpm install browserify\n./node_modules/.bin/browserify .\n```\n\nThe following is the output:\n\n```\nSyntaxError: Line 4: Unexpected token . while parsing [redacted]/d3-geo-projection/index.js while parsing file: [redacted]/d3-geo-projection/index.js\n    at Stream.end ([redacted]/d3-geo-projection/node_modules/browserify/node_modules/insert-module-globals/index.js:73:21)\n    at _end ([redacted]/d3-geo-projection/node_modules/browserify/node_modules/insert-module-globals/node_modules/through/index.js:65:9)\n    at Stream.stream.end ([redacted]/d3-geo-projection/node_modules/browserify/node_modules/insert-module-globals/node_modules/through/index.js:74:5)\n    at Transform.onend ([redacted]/d3-geo-projection/node_modules/browserify/node_modules/module-deps/node_modules/through2/node_modules/readable-stream/lib/_stream_readable.js:523:10)\n    at Transform.g (events.js:180:16)\n    at Transform.emit (events.js:117:20)\n    at [redacted]/d3-geo-projection/node_modules/browserify/node_modules/module-deps/node_modules/through2/node_modules/readable-stream/lib/_stream_readable.js:965:16\n    at process._tickCallback (node.js:442:13)\n```\n\n`index.js` appears to have no syntax errors and `d3.geo.projection.js` works fine when loaded directly in a browser.\n\nI'm running node v0.10.36.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1142/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1142/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1141",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1141/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1141/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1141/events",
    "html_url": "https://github.com/browserify/browserify/pull/1141",
    "id": 59197413,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzAxNDQ5ODM=",
    "number": 1141,
    "title": "Remove unused 'has' fn definition (clobbered by require('has'))",
    "user": {
      "login": "stuartsan",
      "id": 1724544,
      "node_id": "MDQ6VXNlcjE3MjQ1NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1724544?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stuartsan",
      "html_url": "https://github.com/stuartsan",
      "followers_url": "https://api.github.com/users/stuartsan/followers",
      "following_url": "https://api.github.com/users/stuartsan/following{/other_user}",
      "gists_url": "https://api.github.com/users/stuartsan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stuartsan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stuartsan/subscriptions",
      "organizations_url": "https://api.github.com/users/stuartsan/orgs",
      "repos_url": "https://api.github.com/users/stuartsan/repos",
      "events_url": "https://api.github.com/users/stuartsan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stuartsan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-02-27T06:43:06Z",
    "updated_at": "2015-03-14T02:36:06Z",
    "closed_at": "2015-03-14T02:36:06Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/1141",
      "html_url": "https://github.com/browserify/browserify/pull/1141",
      "diff_url": "https://github.com/browserify/browserify/pull/1141.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/1141.patch",
      "merged_at": "2015-03-14T02:36:06Z"
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1141/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1141/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1140",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1140/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1140/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1140/events",
    "html_url": "https://github.com/browserify/browserify/issues/1140",
    "id": 59098218,
    "node_id": "MDU6SXNzdWU1OTA5ODIxOA==",
    "number": 1140,
    "title": "can't use browserify on browserified module",
    "user": {
      "login": "anvaka",
      "id": 225407,
      "node_id": "MDQ6VXNlcjIyNTQwNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/225407?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anvaka",
      "html_url": "https://github.com/anvaka",
      "followers_url": "https://api.github.com/users/anvaka/followers",
      "following_url": "https://api.github.com/users/anvaka/following{/other_user}",
      "gists_url": "https://api.github.com/users/anvaka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anvaka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anvaka/subscriptions",
      "organizations_url": "https://api.github.com/users/anvaka/orgs",
      "repos_url": "https://api.github.com/users/anvaka/repos",
      "events_url": "https://api.github.com/users/anvaka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anvaka/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-02-26T16:31:02Z",
    "updated_at": "2015-02-27T02:29:12Z",
    "closed_at": "2015-02-27T02:25:20Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm using browserify to bundle [vivagraph](https://github.com/anvaka/VivaGraphJS) into standalone module. It works fine and I can use it from iojs:\n\n```\nnpm install vivagraphjs\n```\n\n``` javascript\n// filename: foo.js\nconsole.log(require(\"vivagraphjs\"));\n```\n\nHowever when I try to browserify it:\n\n```\nbrowserify foo.js\n```\n\nI'm getting this:\n\n```\nError: Cannot find module './version.js' from '/Users/anvaka/temp/mmds_page_rank/node_modules/vivagraphjs/dist'\n    at /Users/anvaka/npm/lib/node_modules/browserify/node_modules/resolve/lib/async.js:55:21\n    at load (/Users/anvaka/npm/lib/node_modules/browserify/node_modules/resolve/lib/async.js:69:43)\n    at onex (/Users/anvaka/npm/lib/node_modules/browserify/node_modules/resolve/lib/async.js:92:31)\n    at /Users/anvaka/npm/lib/node_modules/browserify/node_modules/resolve/lib/async.js:22:47\n    at FSReqWrap.oncomplete (fs.js:73:15)\n```\n\n```\nbrowserify -v\n9.0.3\n```\n\nI see [version is required here](https://github.com/anvaka/VivaGraphJS/blob/72f7c86ec688357f36cbed4aa4ba7d5ac5d895f3/dist/vivagraph.js#L23), it [receives index 63](https://github.com/anvaka/VivaGraphJS/blob/72f7c86ec688357f36cbed4aa4ba7d5ac5d895f3/dist/vivagraph.js#L119) in the browserify metadata and is exported under the [same number here](https://github.com/anvaka/VivaGraphJS/blob/72f7c86ec688357f36cbed4aa4ba7d5ac5d895f3/dist/vivagraph.js#L6802). It is the last module in the list. \n\nNot sure why browserify cannot find it.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1140/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1140/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1139",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1139/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1139/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1139/events",
    "html_url": "https://github.com/browserify/browserify/pull/1139",
    "id": 58765771,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjk5MTM3OTA=",
    "number": 1139,
    "title": "Tests for problems introduced in ~resolve@1.1.5 and fixed in resolve@1.1.6",
    "user": {
      "login": "dominykas",
      "id": 505619,
      "node_id": "MDQ6VXNlcjUwNTYxOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/505619?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dominykas",
      "html_url": "https://github.com/dominykas",
      "followers_url": "https://api.github.com/users/dominykas/followers",
      "following_url": "https://api.github.com/users/dominykas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dominykas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dominykas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dominykas/subscriptions",
      "organizations_url": "https://api.github.com/users/dominykas/orgs",
      "repos_url": "https://api.github.com/users/dominykas/repos",
      "events_url": "https://api.github.com/users/dominykas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dominykas/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2015-02-24T16:44:50Z",
    "updated_at": "2019-03-08T17:07:21Z",
    "closed_at": "2019-02-08T07:15:01Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/1139",
      "html_url": "https://github.com/browserify/browserify/pull/1139",
      "diff_url": "https://github.com/browserify/browserify/pull/1139.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/1139.patch",
      "merged_at": "2019-02-08T07:15:01Z"
    },
    "body": "~~When a module is exposed, it should still resolve the way it would normally do, i.e. with/without extension and directories should fall back to index, and index from a directory should be accepted with/without extension too.~~\n\n~~In this PR there are the tests that will fail - I am not able to run them reliably for some reason, so with `resolve@1.1.5` they simply hang, however they will pass if you `npm install resolve@1.1.2`~~\n\n~~I'm not sure how to make them pass - that, I believe, belongs in the `resolve` module - I'll create a relevant issue there, mostly because I've no idea how things are wired up.~~\n\nThe following tests are added, where `x` is a file and `y` is a folder with an `index.js` inside:\n- `b.require('./x', {expose: 'xyz'});`\n- `b.require('./y', {expose: 'xyz'});`\n- `b.require('./y/index', {expose: 'xyz'});`\n- `b.require('./y/index.js', {expose: 'xyz'});`\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1139/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1139/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1138",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1138/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1138/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1138/events",
    "html_url": "https://github.com/browserify/browserify/pull/1138",
    "id": 58759069,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjk5MDk0Nzk=",
    "number": 1138,
    "title": "Factor out repetitive transform setup code",
    "user": {
      "login": "jmm",
      "id": 129203,
      "node_id": "MDQ6VXNlcjEyOTIwMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129203?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmm",
      "html_url": "https://github.com/jmm",
      "followers_url": "https://api.github.com/users/jmm/followers",
      "following_url": "https://api.github.com/users/jmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmm/subscriptions",
      "organizations_url": "https://api.github.com/users/jmm/orgs",
      "repos_url": "https://api.github.com/users/jmm/repos",
      "events_url": "https://api.github.com/users/jmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-02-24T16:00:15Z",
    "updated_at": "2015-02-26T16:09:01Z",
    "closed_at": "2015-02-25T23:47:26Z",
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/1138",
      "html_url": "https://github.com/browserify/browserify/pull/1138",
      "diff_url": "https://github.com/browserify/browserify/pull/1138.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/1138.patch",
      "merged_at": "2015-02-25T23:47:26Z"
    },
    "body": "Next commit adjusts some formatting to be more consistent with the rest of the file (`function (` vs `function(`).\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1138/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1138/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1137",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1137/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1137/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1137/events",
    "html_url": "https://github.com/browserify/browserify/issues/1137",
    "id": 58604544,
    "node_id": "MDU6SXNzdWU1ODYwNDU0NA==",
    "number": 1137,
    "title": "Is exposed name from `b.require()` supposed to be available inside bundle?",
    "user": {
      "login": "jmm",
      "id": 129203,
      "node_id": "MDQ6VXNlcjEyOTIwMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129203?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmm",
      "html_url": "https://github.com/jmm",
      "followers_url": "https://api.github.com/users/jmm/followers",
      "following_url": "https://api.github.com/users/jmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmm/subscriptions",
      "organizations_url": "https://api.github.com/users/jmm/orgs",
      "repos_url": "https://api.github.com/users/jmm/repos",
      "events_url": "https://api.github.com/users/jmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-02-23T15:52:04Z",
    "updated_at": "2015-02-23T15:52:04Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "body": "The documentation for `b.require()` says:\n\n> Make file available from outside the bundle with require(file).\n\nThis doesn't communicate any relationship between `b.require()`d files and other files in the same bundle. However, people frequently use `b.require()` to expose a file under an alias that they then use to require the file in other files in the bundle, e.g.:\n\n`bundler.js`\n\n``` js\nbrowserify('./entry').require('./x', {expose: \"whatever\"});\n```\n\n`entry.js`\n\n``` js\nrequire('whatever');\n```\n\nI believe some of browserify's tests of `b.require()` even rely on that.\n\nIf that behavior is intended it should be documented, and if it's not intended the documentation should note that to make it clear. I think it's a useful feature, if it doesn't interfere with any other use cases. There is currently a lot of flakiness in browserify about matching up values passed / configured via things like `b.require()`, `require()` calls in bundled files, `browser` field etc. though, so getting the documentation tightened up re: what should happen would be very beneficial.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1137/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1137/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1136",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1136/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1136/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1136/events",
    "html_url": "https://github.com/browserify/browserify/issues/1136",
    "id": 58545799,
    "node_id": "MDU6SXNzdWU1ODU0NTc5OQ==",
    "number": 1136,
    "title": "Preserve column information in source maps",
    "user": {
      "login": "joeyespo",
      "id": 634573,
      "node_id": "MDQ6VXNlcjYzNDU3Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/634573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joeyespo",
      "html_url": "https://github.com/joeyespo",
      "followers_url": "https://api.github.com/users/joeyespo/followers",
      "following_url": "https://api.github.com/users/joeyespo/following{/other_user}",
      "gists_url": "https://api.github.com/users/joeyespo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joeyespo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joeyespo/subscriptions",
      "organizations_url": "https://api.github.com/users/joeyespo/orgs",
      "repos_url": "https://api.github.com/users/joeyespo/repos",
      "events_url": "https://api.github.com/users/joeyespo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joeyespo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-02-23T05:58:27Z",
    "updated_at": "2015-02-23T06:02:08Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm using [a tool](https://github.com/evanw/node-source-map-support) that provides a way to show node-like error sources. For example:\n\n``` js\nhttp://localhost/bundle.js:6\n  my.line.of.javascript()\n             ^\n```\n\nThe problem is that when `--debug` is turned on, the column information is lost, creating less helpful / misleading reports:\n\n``` js\nindex.js:5\n  my.line.of.javascript()\n^\n```\n\nIt does look like Browserify is the tool that's losing the information. [Here's a visualization](http://sokra.github.io/source-map-visualization/#base64,OyhmdW5jdGlvbihlLHQsbixyKXtmdW5jdGlvbiBpKHIpe2lmKCFuW3JdKXtpZighdFtyXSl7aWYoZSlyZXR1cm4gZShyKTt0aHJvdyBuZXcgRXJyb3IoIkNhbm5vdCBmaW5kIG1vZHVsZSAnIityKyInIil9dmFyIHM9bltyXT17ZXhwb3J0czp7fX07dFtyXVswXShmdW5jdGlvbihlKXt2YXIgbj10W3JdWzFdW2VdO3JldHVybiBpKG4/bjplKX0scyxzLmV4cG9ydHMpfXJldHVybiBuW3JdLmV4cG9ydHN9Zm9yKHZhciBzPTA7czxyLmxlbmd0aDtzKyspaShyW3NdKTtyZXR1cm4gaX0pKHR5cGVvZiByZXF1aXJlIT09InVuZGVmaW5lZCImJnJlcXVpcmUsezE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewpjb25zb2xlLmxvZygnbWFpbiBsaW5lIDEnKTsKdmFyIGZvbyA9IHJlcXVpcmUoJy4vZm9vLmpzJyk7Cgpmb28oKTsKCn0seyIuL2Zvby5qcyI6Mn1dLDI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewpjb25zb2xlLmxvZygnZm9vIGxpbmUgMScpOwp2YXIgYmFyID0gcmVxdWlyZSgnLi93dW5kZXIvYmFyJyk7Cgptb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGZvbygpIHsKICBjb25zb2xlLmxvZygnaGVsbG8gZnJvbSBmb28gbGluZSA1Jyk7CiAgYmFyKCk7Cn07Cgp9LHsiLi93dW5kZXIvYmFyIjozfV0sMzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7CmNvbnNvbGUubG9nKCdiYXIgbGluZSAxJyk7Cid1c2Ugc3RyaWN0JzsKCi8vIHRoaXMgaXMgYSBtZWFuaW5nbGVzcyBjb21tZW50IHRvIGFkZCBzb21lIGxpbmVzCgptb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJhcigpIHsKICBjb25zb2xlLmxvZygnaGVsbG8gZnJvbSBiYXIgbGluZSA3Jyk7Cn07Cgp9LHt9XX0se30sWzFdKQovL0Agc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lJaXdpYzI5MWNtTmxjeUk2V3lJdlZYTmxjbk12ZEdoc2IzSmxibm92WkdWMkwycHpMM0J5YjJwbFkzUnpMMlp2Y210ekwyNXZaR1V0WW5KdmQzTmxjbWxtZVM5bGVHRnRjR3hsTDNOdmRYSmpaVjl0WVhCekwycHpMMjFoYVc0dWFuTWlMQ0l2VlhObGNuTXZkR2hzYjNKbGJub3ZaR1YyTDJwekwzQnliMnBsWTNSekwyWnZjbXR6TDI1dlpHVXRZbkp2ZDNObGNtbG1lUzlsZUdGdGNHeGxMM052ZFhKalpWOXRZWEJ6TDJwekwyWnZieTVxY3lJc0lpOVZjMlZ5Y3k5MGFHeHZjbVZ1ZWk5a1pYWXZhbk12Y0hKdmFtVmpkSE12Wm05eWEzTXZibTlrWlMxaWNtOTNjMlZ5YVdaNUwyVjRZVzF3YkdVdmMyOTFjbU5sWDIxaGNITXZhbk12ZDNWdVpHVnlMMkpoY2k1cWN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaU8wRkJRVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVTktRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUTFCQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU0lzSW5OdmRYSmpaVkp2YjNRaU9pSm1hV3hsT2k4dmJHOWpZV3hvYjNOMElpd2ljMjkxY21ObFEyOXVkR1Z1ZENJNld5SmpiMjV6YjJ4bExteHZaeWduYldGcGJpQnNhVzVsSURFbktUdGNiblpoY2lCbWIyOGdQU0J5WlhGMWFYSmxLQ2N1TDJadmJ5NXFjeWNwTzF4dVhHNW1iMjhvS1R0Y2JpSXNJbU52Ym5OdmJHVXViRzluS0NkbWIyOGdiR2x1WlNBeEp5azdYRzUyWVhJZ1ltRnlJRDBnY21WeGRXbHlaU2duTGk5M2RXNWtaWEl2WW1GeUp5azdYRzVjYm0xdlpIVnNaUzVsZUhCdmNuUnpJRDBnWm5WdVkzUnBiMjRnWm05dktDa2dlMXh1SUNCamIyNXpiMnhsTG14dlp5Z25hR1ZzYkc4Z1puSnZiU0JtYjI4Z2JHbHVaU0ExSnlrN1hHNGdJR0poY2lncE8xeHVmVHRjYmlJc0ltTnZibk52YkdVdWJHOW5LQ2RpWVhJZ2JHbHVaU0F4SnlrN1hHNG5kWE5sSUhOMGNtbGpkQ2M3WEc1Y2JpOHZJSFJvYVhNZ2FYTWdZU0J0WldGdWFXNW5iR1Z6Y3lCamIyMXRaVzUwSUhSdklHRmtaQ0J6YjIxbElHeHBibVZ6WEc1Y2JtMXZaSFZzWlM1bGVIQnZjblJ6SUQwZ1puVnVZM1JwYjI0Z1ltRnlLQ2tnZTF4dUlDQmpiMjV6YjJ4bExteHZaeWduYUdWc2JHOGdabkp2YlNCaVlYSWdiR2x1WlNBM0p5azdYRzU5TzF4dUlsMTkKOw==,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhhbXBsZS5qcyIsInNvdXJjZXMiOlsiL1VzZXJzL3RobG9yZW56L2Rldi9qcy9wcm9qZWN0cy9mb3Jrcy9ub2RlLWJyb3dzZXJpZnkvZXhhbXBsZS9zb3VyY2VfbWFwcy9qcy9tYWluLmpzIiwiL1VzZXJzL3RobG9yZW56L2Rldi9qcy9wcm9qZWN0cy9mb3Jrcy9ub2RlLWJyb3dzZXJpZnkvZXhhbXBsZS9zb3VyY2VfbWFwcy9qcy9mb28uanMiLCIvVXNlcnMvdGhsb3JlbnovZGV2L2pzL3Byb2plY3RzL2ZvcmtzL25vZGUtYnJvd3NlcmlmeS9leGFtcGxlL3NvdXJjZV9tYXBzL2pzL3d1bmRlci9iYXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDSkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNQQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiZmlsZTovL2xvY2FsaG9zdCIsInNvdXJjZUNvbnRlbnQiOlsiY29uc29sZS5sb2coJ21haW4gbGluZSAxJyk7XG52YXIgZm9vID0gcmVxdWlyZSgnLi9mb28uanMnKTtcblxuZm9vKCk7XG4iLCJjb25zb2xlLmxvZygnZm9vIGxpbmUgMScpO1xudmFyIGJhciA9IHJlcXVpcmUoJy4vd3VuZGVyL2JhcicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGZvbygpIHtcbiAgY29uc29sZS5sb2coJ2hlbGxvIGZyb20gZm9vIGxpbmUgNScpO1xuICBiYXIoKTtcbn07XG4iLCJjb25zb2xlLmxvZygnYmFyIGxpbmUgMScpO1xuJ3VzZSBzdHJpY3QnO1xuXG4vLyB0aGlzIGlzIGEgbWVhbmluZ2xlc3MgY29tbWVudCB0byBhZGQgc29tZSBsaW5lc1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJhcigpIHtcbiAgY29uc29sZS5sb2coJ2hlbGxvIGZyb20gYmFyIGxpbmUgNycpO1xufTtcbiJdfQ==,Y29uc29sZS5sb2coJ21haW4gbGluZSAxJyk7CnZhciBmb28gPSByZXF1aXJlKCcuL2Zvby5qcycpOwoKZm9vKCk7Cg==,Y29uc29sZS5sb2coJ2ZvbyBsaW5lIDEnKTsKdmFyIGJhciA9IHJlcXVpcmUoJy4vd3VuZGVyL2JhcicpOwoKbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBmb28oKSB7CiAgY29uc29sZS5sb2coJ2hlbGxvIGZyb20gZm9vIGxpbmUgNScpOwogIGJhcigpOwp9Owo=,Y29uc29sZS5sb2coJ2JhciBsaW5lIDEnKTsKJ3VzZSBzdHJpY3QnOwoKLy8gdGhpcyBpcyBhIG1lYW5pbmdsZXNzIGNvbW1lbnQgdG8gYWRkIHNvbWUgbGluZXMKCm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gYmFyKCkgewogIGNvbnNvbGUubG9nKCdoZWxsbyBmcm9tIGJhciBsaW5lIDcnKTsKfTsK) of this project's [own example](https://github.com/substack/node-browserify/tree/master/example/source_maps/js).\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1136/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1136/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1135",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1135/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1135/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1135/events",
    "html_url": "https://github.com/browserify/browserify/issues/1135",
    "id": 58511508,
    "node_id": "MDU6SXNzdWU1ODUxMTUwOA==",
    "number": 1135,
    "title": "\"Missing yield in generator while parsing\" when parsing global generator functions",
    "user": {
      "login": "ComFreek",
      "id": 1827709,
      "node_id": "MDQ6VXNlcjE4Mjc3MDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1827709?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ComFreek",
      "html_url": "https://github.com/ComFreek",
      "followers_url": "https://api.github.com/users/ComFreek/followers",
      "following_url": "https://api.github.com/users/ComFreek/following{/other_user}",
      "gists_url": "https://api.github.com/users/ComFreek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ComFreek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ComFreek/subscriptions",
      "organizations_url": "https://api.github.com/users/ComFreek/orgs",
      "repos_url": "https://api.github.com/users/ComFreek/repos",
      "events_url": "https://api.github.com/users/ComFreek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ComFreek/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-02-22T17:59:10Z",
    "updated_at": "2018-02-06T14:40:17Z",
    "closed_at": "2018-02-06T14:40:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Code to reproduce:\n\n```\n// test.js\nglobal.test = function *() {}\n```\n\nRun `browserify test.js`.\n\nStack trace:\n\n```\nSyntaxError: Line 2: Missing yield in generator while parsing P:\\test\\test.js while parsing file: P:\\test\\test.js\n    at Stream.end (C:\\Users\\ComFreek\\AppData\\Roaming\\npm\\node_modules\\browserify\\no\nde_modules\\insert-module-globals\\index.js:73:21)\n    at _end (C:\\Users\\ComFreek\\AppData\\Roaming\\npm\\node_modules\\browserify\\node_mod\nules\\insert-module-globals\\node_modules\\through\\index.js:65:9)\n    at Stream.stream.end (C:\\Users\\ComFreek\\AppData\\Roaming\\npm\\node_modules\\browse\nrify\\node_modules\\insert-module-globals\\node_modules\\through\\index.js:74:5)\n    at Transform.onend (C:\\Users\\ComFreek\\AppData\\Roaming\\npm\\node_modules\\browseri\nfy\\node_modules\\module-deps\\node_modules\\through2\\node_modules\\readable-stream\\l\nib\\_stream_readable.js:523:10)\n    at Transform.g (events.js:240:16)\n    at emitNone (events.js:70:20)\n    at Transform.emit (events.js:147:7)\n    at C:\\Users\\ComFreek\\AppData\\Roaming\\npm\\node_modules\\browserify\\node_modules\\m\nodule-deps\\node_modules\\through2\\node_modules\\readable-stream\\lib\\_stream_readab\nle.js:965:16\n    at process._tickCallback (node.js:337:11)\nPS P:\\test>\n```\n\n**Note** that this seems to only happen when `global` is involved.\nThe following code does not lead to an error:\n\n```\nvar a = function*(){}\n```\n\nhttps://github.com/substack/node-detective/issues/34\nI could not find any official resources on this topic (whether a generator function without yield statements is valid) in a quick way, however, this [issue at node-detective](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-generator-function-definitions) and V8 which allows such functions support the validity of such functions.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1135/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1135/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1134",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1134/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1134/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1134/events",
    "html_url": "https://github.com/browserify/browserify/issues/1134",
    "id": 58508273,
    "node_id": "MDU6SXNzdWU1ODUwODI3Mw==",
    "number": 1134,
    "title": "Missing require.main",
    "user": {
      "login": "jankuca",
      "id": 367262,
      "node_id": "MDQ6VXNlcjM2NzI2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/367262?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankuca",
      "html_url": "https://github.com/jankuca",
      "followers_url": "https://api.github.com/users/jankuca/followers",
      "following_url": "https://api.github.com/users/jankuca/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankuca/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankuca/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankuca/subscriptions",
      "organizations_url": "https://api.github.com/users/jankuca/orgs",
      "repos_url": "https://api.github.com/users/jankuca/repos",
      "events_url": "https://api.github.com/users/jankuca/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankuca/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-02-22T16:27:20Z",
    "updated_at": "2015-07-13T11:55:31Z",
    "closed_at": "2015-02-22T19:03:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In node.js, the `require.main` property points to the root (or a \"main) module of the process. If I run `node app.js`, `require.main === module` within the scope of the `app.js` file.\n\nWhy do I want this? I like to require() my main module for running integration and acceptance tests and I distinguish between a regular run and a test run based on the `require.main` module.\n\n``` javascript\nvar myAppsMain = function () { ... };\n\nif (require.main === module) {\n  myAppsMain();\n} else {\n  exports.main = myAppsMain;\n}\n```\n\nThis makes the `myAppsMain` function be called when the module is run directly and exported if require()'d.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1134/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1134/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1133",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1133/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1133/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1133/events",
    "html_url": "https://github.com/browserify/browserify/issues/1133",
    "id": 58465739,
    "node_id": "MDU6SXNzdWU1ODQ2NTczOQ==",
    "number": 1133,
    "title": "bug in resolving JSON files within module dependencies",
    "user": {
      "login": "tmcw",
      "id": 32314,
      "node_id": "MDQ6VXNlcjMyMzE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/32314?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tmcw",
      "html_url": "https://github.com/tmcw",
      "followers_url": "https://api.github.com/users/tmcw/followers",
      "following_url": "https://api.github.com/users/tmcw/following{/other_user}",
      "gists_url": "https://api.github.com/users/tmcw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tmcw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tmcw/subscriptions",
      "organizations_url": "https://api.github.com/users/tmcw/orgs",
      "repos_url": "https://api.github.com/users/tmcw/repos",
      "events_url": "https://api.github.com/users/tmcw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tmcw/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-02-21T16:53:17Z",
    "updated_at": "2015-02-21T20:17:08Z",
    "closed_at": "2015-02-21T19:55:01Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "I've made a reduced test case for this:\n- https://github.com/tmcw/require-bug\n\nRequiring JSON files within modules from subdirectories of a project fails and the error message indicates that browserify is looking for a `/package.json` file after the json file path. I can replicate this newly in new installs of browserify 8.x so it's likely this is because of an update in one of browserify's dependencies.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1133/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1133/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1132",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1132/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1132/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1132/events",
    "html_url": "https://github.com/browserify/browserify/issues/1132",
    "id": 58374097,
    "node_id": "MDU6SXNzdWU1ODM3NDA5Nw==",
    "number": 1132,
    "title": "Absolute path ending up in build",
    "user": {
      "login": "oliverwoodings",
      "id": 621323,
      "node_id": "MDQ6VXNlcjYyMTMyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/621323?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/oliverwoodings",
      "html_url": "https://github.com/oliverwoodings",
      "followers_url": "https://api.github.com/users/oliverwoodings/followers",
      "following_url": "https://api.github.com/users/oliverwoodings/following{/other_user}",
      "gists_url": "https://api.github.com/users/oliverwoodings/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/oliverwoodings/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/oliverwoodings/subscriptions",
      "organizations_url": "https://api.github.com/users/oliverwoodings/orgs",
      "repos_url": "https://api.github.com/users/oliverwoodings/repos",
      "events_url": "https://api.github.com/users/oliverwoodings/events{/privacy}",
      "received_events_url": "https://api.github.com/users/oliverwoodings/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2015-02-20T16:15:57Z",
    "updated_at": "2015-02-22T08:46:17Z",
    "closed_at": "2015-02-22T08:46:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Got a bit of a weird issue that I can't work out. I've got my build set up so it uses relative paths as opposed to absolute paths in the build output. This works fine everywhere in the app except for one instance for the es6-promise module which ends up like this:\n\n``` js\n...\nmodule.exports = when;\n},{\"../constants/status\":58,\"underscore\":90}],84:[function(require,module,exports){\nmodule.exports=require(42)\n},{\"/Users/oliverwoodings/Documents/repos/<project>/node_modules/es6-promise/dist/es6-promise.js\":42,\"_process\":50}],85:[function(require,module,exports){\n///\n```\n\nDoes anyone have any idea why this might be happening? I've tried setting a basepath and setting fullPath to false but nothing seems to remove this one absolute reference.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1132/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1132/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1131",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1131/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1131/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1131/events",
    "html_url": "https://github.com/browserify/browserify/issues/1131",
    "id": 58372503,
    "node_id": "MDU6SXNzdWU1ODM3MjUwMw==",
    "number": 1131,
    "title": ".require with expose works strange",
    "user": {
      "login": "gobwas",
      "id": 675117,
      "node_id": "MDQ6VXNlcjY3NTExNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/675117?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gobwas",
      "html_url": "https://github.com/gobwas",
      "followers_url": "https://api.github.com/users/gobwas/followers",
      "following_url": "https://api.github.com/users/gobwas/following{/other_user}",
      "gists_url": "https://api.github.com/users/gobwas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gobwas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gobwas/subscriptions",
      "organizations_url": "https://api.github.com/users/gobwas/orgs",
      "repos_url": "https://api.github.com/users/gobwas/repos",
      "events_url": "https://api.github.com/users/gobwas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gobwas/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206142130,
        "node_id": "MDU6TGFiZWwyMDYxNDIxMzA=",
        "url": "https://api.github.com/repos/browserify/browserify/labels/repro-please",
        "name": "repro-please",
        "color": "207de5",
        "default": false,
        "description": null
      },
      {
        "id": 212072653,
        "node_id": "MDU6TGFiZWwyMTIwNzI2NTM=",
        "url": "https://api.github.com/repos/browserify/browserify/labels/path-matching",
        "name": "path-matching",
        "color": "c7def8",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 12,
    "created_at": "2015-02-20T16:04:25Z",
    "updated_at": "2015-06-04T17:05:23Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello! \n\nSorry, if it known bug.\n\nThis code:\n\n``` js\nbundler.require(\"./my/path/to.js\", {expose: \"./my/path/to.js\"})\n```\n\nGive the result, when:\n\n``` js\n// in the bundle\n\nrequire(\"./my/path/to.js\") // Module not found\nrequire(\"/my/path/to.js\") // Module works O_0\n```\n\nThanks.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1131/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1131/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1130",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1130/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1130/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1130/events",
    "html_url": "https://github.com/browserify/browserify/issues/1130",
    "id": 58323648,
    "node_id": "MDU6SXNzdWU1ODMyMzY0OA==",
    "number": 1130,
    "title": "Any option for easier vendor bundling",
    "user": {
      "login": "ivan-kleshnin",
      "id": 2128182,
      "node_id": "MDQ6VXNlcjIxMjgxODI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2128182?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivan-kleshnin",
      "html_url": "https://github.com/ivan-kleshnin",
      "followers_url": "https://api.github.com/users/ivan-kleshnin/followers",
      "following_url": "https://api.github.com/users/ivan-kleshnin/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivan-kleshnin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivan-kleshnin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivan-kleshnin/subscriptions",
      "organizations_url": "https://api.github.com/users/ivan-kleshnin/orgs",
      "repos_url": "https://api.github.com/users/ivan-kleshnin/repos",
      "events_url": "https://api.github.com/users/ivan-kleshnin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivan-kleshnin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-02-20T08:46:11Z",
    "updated_at": "2015-03-03T06:13:08Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I omit reasoning why it's required to separate app and vendor bundles. Let's say we agree on this.\n\nCurrently I have to either:\n1. Support hand-picked list of vendor libraries. Miss one depending on React, and Browserify will write React to app bundle. This is getting bloody hard on big projects!\n2. Rely on automatic listing. As soon as you develop frontend + backend app `package.json` has no clue how to distinguish them. You'll get your backend-only deps on frontend which is blocker on itself (size!), not even saying that some of them don't work in browser...\n\nSo both methods don't work at production scale. \nShould we expect any better solvement for this in the future? \nI'm sure Browserify has enough information to automate this at translation time.\nOr any advices how this should be solved in case I missed something?\n\nI wouldn't like to switch to webpack (look at this insanity: https://github.com/kriasoft/react-starter-kit/blob/master/webpack.config.js).\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1130/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1130/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1129",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1129/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1129/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1129/events",
    "html_url": "https://github.com/browserify/browserify/issues/1129",
    "id": 58028476,
    "node_id": "MDU6SXNzdWU1ODAyODQ3Ng==",
    "number": 1129,
    "title": "Syntax errors reported when multiple requires are declared at once",
    "user": {
      "login": "admackin",
      "id": 212268,
      "node_id": "MDQ6VXNlcjIxMjI2OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/212268?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/admackin",
      "html_url": "https://github.com/admackin",
      "followers_url": "https://api.github.com/users/admackin/followers",
      "following_url": "https://api.github.com/users/admackin/following{/other_user}",
      "gists_url": "https://api.github.com/users/admackin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/admackin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/admackin/subscriptions",
      "organizations_url": "https://api.github.com/users/admackin/orgs",
      "repos_url": "https://api.github.com/users/admackin/repos",
      "events_url": "https://api.github.com/users/admackin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/admackin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-02-18T05:27:53Z",
    "updated_at": "2015-02-19T11:53:20Z",
    "closed_at": "2015-02-18T23:09:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm getting a syntax error when I try and run `browserify` in a module which requires [d3-geo-projection 0.2.13](https://github.com/d3/d3-geo-projection/tree/v0.2.13). The problem seems to be down to a line in its [index.js](https://github.com/d3/d3-geo-projection/blob/v0.2.13/index.js). \n\n```\nvar fs = require(\"fs\"),\n    path = require(\"path\");\n\nmodule.exports = new Function(\"d3\", fs.readFileSync(path.join(__dirname, \"d3.geo.projection.js\"), \"utf-8\"));\n```\n\nIf I replace the first two lines with \n\n```\nvar fs = require(\"fs\");\nvar path = require(\"path\");\n```\n\n`browserify` runs without complaint.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1129/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1129/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1128",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1128/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1128/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1128/events",
    "html_url": "https://github.com/browserify/browserify/pull/1128",
    "id": 57881302,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjk0MTY5MDg=",
    "number": 1128,
    "title": "fix to #1124",
    "user": {
      "login": "simonzack",
      "id": 628500,
      "node_id": "MDQ6VXNlcjYyODUwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/628500?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simonzack",
      "html_url": "https://github.com/simonzack",
      "followers_url": "https://api.github.com/users/simonzack/followers",
      "following_url": "https://api.github.com/users/simonzack/following{/other_user}",
      "gists_url": "https://api.github.com/users/simonzack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simonzack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simonzack/subscriptions",
      "organizations_url": "https://api.github.com/users/simonzack/orgs",
      "repos_url": "https://api.github.com/users/simonzack/repos",
      "events_url": "https://api.github.com/users/simonzack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simonzack/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-02-17T04:07:03Z",
    "updated_at": "2015-02-21T06:17:31Z",
    "closed_at": "2015-02-21T06:17:31Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/1128",
      "html_url": "https://github.com/browserify/browserify/pull/1128",
      "diff_url": "https://github.com/browserify/browserify/pull/1128.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/1128.patch",
      "merged_at": "2015-02-21T06:17:31Z"
    },
    "body": "`opts.transform` is already processed, copying it will result in it being processed twice.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1128/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1128/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1127",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1127/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1127/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1127/events",
    "html_url": "https://github.com/browserify/browserify/issues/1127",
    "id": 57878992,
    "node_id": "MDU6SXNzdWU1Nzg3ODk5Mg==",
    "number": 1127,
    "title": "Run transform on submodules?",
    "user": {
      "login": "trusktr",
      "id": 297678,
      "node_id": "MDQ6VXNlcjI5NzY3OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/297678?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/trusktr",
      "html_url": "https://github.com/trusktr",
      "followers_url": "https://api.github.com/users/trusktr/followers",
      "following_url": "https://api.github.com/users/trusktr/following{/other_user}",
      "gists_url": "https://api.github.com/users/trusktr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/trusktr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/trusktr/subscriptions",
      "organizations_url": "https://api.github.com/users/trusktr/orgs",
      "repos_url": "https://api.github.com/users/trusktr/repos",
      "events_url": "https://api.github.com/users/trusktr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/trusktr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 13,
    "created_at": "2015-02-17T03:21:59Z",
    "updated_at": "2016-09-11T11:37:19Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I've done `npm install highlight.js` and now when I `require('highlight.js/styles/default.css')` the `cssify` transform doesn't come into play.\n\nIs this because `default.css` is in a sub-module of highlight.js (which is located in node_modules)? I tried making cssify a global transform, but this messes up dependencies of my application that already rely on cssify.\n\nIt seems to me like the solution is to fork highlight.js, make a PR, and publish the new version on npmjs.org under a temporary name. I want to avoid all this if possible.\n\nIs there a way to apply cssify to any files required in my application, including submodule files, without breaking dependencies like global transform currently does? If not, this would be nice. It's intuitive to install `cssify` then expect it to work on a CSS file required in an application, regardless of where the CSS file is located.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1127/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1127/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1126",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1126/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1126/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1126/events",
    "html_url": "https://github.com/browserify/browserify/issues/1126",
    "id": 57875027,
    "node_id": "MDU6SXNzdWU1Nzg3NTAyNw==",
    "number": 1126,
    "title": "CSS support part of browserify now?",
    "user": {
      "login": "trusktr",
      "id": 297678,
      "node_id": "MDQ6VXNlcjI5NzY3OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/297678?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/trusktr",
      "html_url": "https://github.com/trusktr",
      "followers_url": "https://api.github.com/users/trusktr/followers",
      "following_url": "https://api.github.com/users/trusktr/following{/other_user}",
      "gists_url": "https://api.github.com/users/trusktr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/trusktr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/trusktr/subscriptions",
      "organizations_url": "https://api.github.com/users/trusktr/orgs",
      "repos_url": "https://api.github.com/users/trusktr/repos",
      "events_url": "https://api.github.com/users/trusktr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/trusktr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-02-17T02:10:23Z",
    "updated_at": "2015-02-17T02:16:23Z",
    "closed_at": "2015-02-17T02:16:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I was trying to use cssify to require css files, but after disabling cssify I noticed everything still worked. Is CSS built into browserify now?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1126/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1126/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1125",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1125/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1125/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1125/events",
    "html_url": "https://github.com/browserify/browserify/issues/1125",
    "id": 57840354,
    "node_id": "MDU6SXNzdWU1Nzg0MDM1NA==",
    "number": 1125,
    "title": "Add moduleDirectory option from node-resolve to Browserify",
    "user": {
      "login": "jgoux",
      "id": 1443499,
      "node_id": "MDQ6VXNlcjE0NDM0OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1443499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgoux",
      "html_url": "https://github.com/jgoux",
      "followers_url": "https://api.github.com/users/jgoux/followers",
      "following_url": "https://api.github.com/users/jgoux/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgoux/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgoux/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgoux/subscriptions",
      "organizations_url": "https://api.github.com/users/jgoux/orgs",
      "repos_url": "https://api.github.com/users/jgoux/repos",
      "events_url": "https://api.github.com/users/jgoux/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgoux/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2015-02-16T19:04:05Z",
    "updated_at": "2015-02-24T09:39:45Z",
    "closed_at": "2015-02-17T10:05:01Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello,\nis there a way to add webpack's modulesDirectories ability to browserify ? http://webpack.github.io/docs/configuration.html#resolve-modulesdirectories\nIt would be awesome and simplify a lot the code for shared modules.\nInspired by : https://gist.github.com/ryanflorence/daafb1e3cb8ad740b346#shared-module-resolution\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1125/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1125/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1124",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1124/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1124/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1124/events",
    "html_url": "https://github.com/browserify/browserify/issues/1124",
    "id": 57730338,
    "node_id": "MDU6SXNzdWU1NzczMDMzOA==",
    "number": 1124,
    "title": "config object transforms are run twice",
    "user": {
      "login": "simonzack",
      "id": 628500,
      "node_id": "MDQ6VXNlcjYyODUwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/628500?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simonzack",
      "html_url": "https://github.com/simonzack",
      "followers_url": "https://api.github.com/users/simonzack/followers",
      "following_url": "https://api.github.com/users/simonzack/following{/other_user}",
      "gists_url": "https://api.github.com/users/simonzack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simonzack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simonzack/subscriptions",
      "organizations_url": "https://api.github.com/users/simonzack/orgs",
      "repos_url": "https://api.github.com/users/simonzack/repos",
      "events_url": "https://api.github.com/users/simonzack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simonzack/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-02-15T13:29:33Z",
    "updated_at": "2015-02-21T06:18:31Z",
    "closed_at": "2015-02-21T06:18:31Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Doing the following will run transforms twice, no matter what the transform is:\n\n```\nvar bundler = browserify('file.js', {\n    transform: [to5ify]\n});\n```\n\nusing `.transform` instead works.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1124/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1124/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1123",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1123/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1123/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1123/events",
    "html_url": "https://github.com/browserify/browserify/issues/1123",
    "id": 57692199,
    "node_id": "MDU6SXNzdWU1NzY5MjE5OQ==",
    "number": 1123,
    "title": "What's the opposite of --no-bundle-externals?",
    "user": {
      "login": "brian-c",
      "id": 464389,
      "node_id": "MDQ6VXNlcjQ2NDM4OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/464389?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brian-c",
      "html_url": "https://github.com/brian-c",
      "followers_url": "https://api.github.com/users/brian-c/followers",
      "following_url": "https://api.github.com/users/brian-c/following{/other_user}",
      "gists_url": "https://api.github.com/users/brian-c/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brian-c/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brian-c/subscriptions",
      "organizations_url": "https://api.github.com/users/brian-c/orgs",
      "repos_url": "https://api.github.com/users/brian-c/repos",
      "events_url": "https://api.github.com/users/brian-c/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brian-c/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-02-14T12:55:08Z",
    "updated_at": "2016-02-27T19:46:09Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm splitting my app into two bundles, one for externals and one for everything else.\n\n`--no-bundle-externals` works for the latter, but what about the former? Does a tool exist into which I can pipe a complete bundle that'll remove all the **non-**external dependencies?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1123/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1123/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1122",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1122/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1122/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1122/events",
    "html_url": "https://github.com/browserify/browserify/issues/1122",
    "id": 57596689,
    "node_id": "MDU6SXNzdWU1NzU5NjY4OQ==",
    "number": 1122,
    "title": "--exclude not working?",
    "user": {
      "login": "reintroducing",
      "id": 259901,
      "node_id": "MDQ6VXNlcjI1OTkwMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/259901?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reintroducing",
      "html_url": "https://github.com/reintroducing",
      "followers_url": "https://api.github.com/users/reintroducing/followers",
      "following_url": "https://api.github.com/users/reintroducing/following{/other_user}",
      "gists_url": "https://api.github.com/users/reintroducing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reintroducing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reintroducing/subscriptions",
      "organizations_url": "https://api.github.com/users/reintroducing/orgs",
      "repos_url": "https://api.github.com/users/reintroducing/repos",
      "events_url": "https://api.github.com/users/reintroducing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reintroducing/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-02-13T13:09:16Z",
    "updated_at": "2015-02-13T14:08:33Z",
    "closed_at": "2015-02-13T14:08:33Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I've got an issue where I'm trying to use --exclude on jquery (as is shown in the examples in the (browserify-handbook)[https://github.com/substack/browserify-handbook#excluding]) and it is not excluding jquery in the bundle.  My app is a small test app just to test this purpose where i include jquery like so:\n\n```\nvar $ = require('jquery');\n```\n\nI then run browserify directly in terminal using:\n\n```\nbrowserify js/app.js --exclude jquery > js/bundle.js\n```\n\nThis results in jquery still being in the output bundle.js file.  What am I missing here? Is the command just flat out not working or am I doing something wrong? \n\nThanks in advance for any help offered.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1122/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1122/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1121",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1121/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1121/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1121/events",
    "html_url": "https://github.com/browserify/browserify/issues/1121",
    "id": 57446047,
    "node_id": "MDU6SXNzdWU1NzQ0NjA0Nw==",
    "number": 1121,
    "title": "Minify \"exports\" property",
    "user": {
      "login": "dsuckau",
      "id": 1607492,
      "node_id": "MDQ6VXNlcjE2MDc0OTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1607492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsuckau",
      "html_url": "https://github.com/dsuckau",
      "followers_url": "https://api.github.com/users/dsuckau/followers",
      "following_url": "https://api.github.com/users/dsuckau/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsuckau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsuckau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsuckau/subscriptions",
      "organizations_url": "https://api.github.com/users/dsuckau/orgs",
      "repos_url": "https://api.github.com/users/dsuckau/repos",
      "events_url": "https://api.github.com/users/dsuckau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsuckau/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-02-12T11:05:00Z",
    "updated_at": "2018-02-06T14:44:14Z",
    "closed_at": "2018-02-06T14:44:14Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hey folks,\n\nI use browserify a lot in combination with minification. I already know `bundle-collapser` to minify the module names in `require()` calls.\n\nBut I am still thinking about if there is possibility to minify the `module.exports` property. I have tons of `a.exports` in my minified bundle, of course, because the minifier does not change object properties. Browserify relies on the existence of `exports`, but I think in the browser it would not matter if it would be called `module.x` or something.\n\nIs there already an option/plugin to achieve this? Or am I even totally missing anything that conflicts with my idea?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1121/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1121/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1120",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1120/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1120/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1120/events",
    "html_url": "https://github.com/browserify/browserify/issues/1120",
    "id": 57371579,
    "node_id": "MDU6SXNzdWU1NzM3MTU3OQ==",
    "number": 1120,
    "title": ".add or .require expose option hijacks entry module",
    "user": {
      "login": "asakusuma",
      "id": 597574,
      "node_id": "MDQ6VXNlcjU5NzU3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/597574?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asakusuma",
      "html_url": "https://github.com/asakusuma",
      "followers_url": "https://api.github.com/users/asakusuma/followers",
      "following_url": "https://api.github.com/users/asakusuma/following{/other_user}",
      "gists_url": "https://api.github.com/users/asakusuma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asakusuma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asakusuma/subscriptions",
      "organizations_url": "https://api.github.com/users/asakusuma/orgs",
      "repos_url": "https://api.github.com/users/asakusuma/repos",
      "events_url": "https://api.github.com/users/asakusuma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asakusuma/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 17,
    "created_at": "2015-02-11T20:21:25Z",
    "updated_at": "2015-08-17T21:14:58Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "If you `b.add` or `b.require` a module and re-map it's module id using the `expose` option, it will replace the `entry` module as the root module for the bundle. I reproduced this in a demonstration repo: https://github.com/asakusuma/browserify-expose-bug\n\nI'm assuming this is not expected behavior, but if it is, is there another way to include a file as a module and re-map the module id?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1120/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1120/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1119",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1119/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1119/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1119/events",
    "html_url": "https://github.com/browserify/browserify/issues/1119",
    "id": 57271936,
    "node_id": "MDU6SXNzdWU1NzI3MTkzNg==",
    "number": 1119,
    "title": "\"browser\" field not always being respected for dependencies",
    "user": {
      "login": "Macil",
      "id": 577345,
      "node_id": "MDQ6VXNlcjU3NzM0NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/577345?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Macil",
      "html_url": "https://github.com/Macil",
      "followers_url": "https://api.github.com/users/Macil/followers",
      "following_url": "https://api.github.com/users/Macil/following{/other_user}",
      "gists_url": "https://api.github.com/users/Macil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Macil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Macil/subscriptions",
      "organizations_url": "https://api.github.com/users/Macil/orgs",
      "repos_url": "https://api.github.com/users/Macil/repos",
      "events_url": "https://api.github.com/users/Macil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Macil/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 203859297,
        "node_id": "MDU6TGFiZWwyMDM4NTkyOTc=",
        "url": "https://api.github.com/repos/browserify/browserify/labels/support",
        "name": "support",
        "color": "FF91AF",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-02-11T03:20:31Z",
    "updated_at": "2015-12-06T01:15:21Z",
    "closed_at": "2015-12-06T01:15:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm using the [asap](https://github.com/kriskowal/asap) module, which is made for nodejs and browsers. It has several file overrides in the \"browser\" section of its package.json. They are not always respected.\n\n```\nnpm i --save browserify asap@2.0.0\necho \"require('asap');\" >index.js\n./node_modules/.bin/browserify index.js -o bundle.js\ngrep requestErrorThrow bundle.js\n```\n\nThe grep call should find the string \"requestErrorThrow\", which is present in asap's `browser-asap.js` file, but it does not for me. For some reason, asap's node version of `asap.js` is being bundled along with the browser version of `browser-raw.js`.\n\nA few days ago I had the opposite problem where `browser-asap.js` was being bundled along with the node version of `raw.js`. After deleting my node_modules folder and reinstalling asap and browserify, I've been getting this new issue. I assume the change either has to do with sub-dependencies changing or with the filesystem ordering. In case it has to do with sub-dependencies, here's an [npm shrinkwrap](https://gist.github.com/AgentME/0ed2a46e6c72039a80bc) showing the versions of all of my dependencies and subdependencies.\n\nBrowserify 8.1.3\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1119/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1119/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1118",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1118/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1118/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1118/events",
    "html_url": "https://github.com/browserify/browserify/issues/1118",
    "id": 57220320,
    "node_id": "MDU6SXNzdWU1NzIyMDMyMA==",
    "number": 1118,
    "title": "Where should plugins be listed?",
    "user": {
      "login": "jmm",
      "id": 129203,
      "node_id": "MDQ6VXNlcjEyOTIwMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129203?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmm",
      "html_url": "https://github.com/jmm",
      "followers_url": "https://api.github.com/users/jmm/followers",
      "following_url": "https://api.github.com/users/jmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmm/subscriptions",
      "organizations_url": "https://api.github.com/users/jmm/orgs",
      "repos_url": "https://api.github.com/users/jmm/repos",
      "events_url": "https://api.github.com/users/jmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-02-10T19:07:53Z",
    "updated_at": "2015-03-13T18:50:45Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "body": "There's a [list of transforms](https://github.com/substack/node-browserify/wiki/list-of-transforms) and a list of [browserify tools](https://github.com/substack/node-browserify/wiki/browserify-tools), but for plugins the readme just refers you to npm. Can a plugin be listed on one or both of those pages? There's currently at least one package on each page described as a \"plugin\". I suppose technically a plugin is a \"tool\", while it's not a transform, but it might be a distinction without a difference: sometimes transforms / plugins are used to accomplish the same goals. And some plugins use transforms under the hood anyway. Maybe they should all be on the same page, with sections? Or maybe there should be a transform, plugin, and other tools page? Or a transform / plugin and other tools page?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1118/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1118/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1117",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1117/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1117/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1117/events",
    "html_url": "https://github.com/browserify/browserify/issues/1117",
    "id": 57166709,
    "node_id": "MDU6SXNzdWU1NzE2NjcwOQ==",
    "number": 1117,
    "title": "\"Cannot find module\" errors are missing file:line:column",
    "user": {
      "login": "callumlocke",
      "id": 250617,
      "node_id": "MDQ6VXNlcjI1MDYxNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250617?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/callumlocke",
      "html_url": "https://github.com/callumlocke",
      "followers_url": "https://api.github.com/users/callumlocke/followers",
      "following_url": "https://api.github.com/users/callumlocke/following{/other_user}",
      "gists_url": "https://api.github.com/users/callumlocke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/callumlocke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/callumlocke/subscriptions",
      "organizations_url": "https://api.github.com/users/callumlocke/orgs",
      "repos_url": "https://api.github.com/users/callumlocke/repos",
      "events_url": "https://api.github.com/users/callumlocke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/callumlocke/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2015-02-10T12:11:36Z",
    "updated_at": "2016-02-05T22:25:59Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When I call `b.bundle` and get an `err`, there is usually some useful info in `err.filename`, `err.line`, and `err.column`. This info is provided for syntax errors etc.\n\nBut for errors like `Cannot find module './thing' from '/some/directory'`, these properties are missing. There is no way of knowing where the bad `require()` call is.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1117/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1117/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1116",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1116/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1116/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1116/events",
    "html_url": "https://github.com/browserify/browserify/issues/1116",
    "id": 57109451,
    "node_id": "MDU6SXNzdWU1NzEwOTQ1MQ==",
    "number": 1116,
    "title": "Don't understand how Browserify works",
    "user": {
      "login": "iamdriz",
      "id": 801252,
      "node_id": "MDQ6VXNlcjgwMTI1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/801252?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamdriz",
      "html_url": "https://github.com/iamdriz",
      "followers_url": "https://api.github.com/users/iamdriz/followers",
      "following_url": "https://api.github.com/users/iamdriz/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamdriz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamdriz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamdriz/subscriptions",
      "organizations_url": "https://api.github.com/users/iamdriz/orgs",
      "repos_url": "https://api.github.com/users/iamdriz/repos",
      "events_url": "https://api.github.com/users/iamdriz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamdriz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-02-09T23:55:50Z",
    "updated_at": "2015-03-02T20:41:39Z",
    "closed_at": "2015-03-02T20:41:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I've recently been looking into using a dependancy manager for a project and have spent the day experimenting with RequireJS (requirejs.org). It seems to do the trick and does everything I want such as modules, dependancies and of course bundling. It's best feature is that it loads in the relevant files (or bundles) when needed.\n\nNow, I've been using Node.js for another project and came across Browserify, which according to various articles, is supposed to be a better option than RequireJS... but I'm not seeing the benefits... in fact so far it looks like it doesn't do half of what I can do with RequireJS, and I can only assume this means **I don't understand how Browserify works!**\n\nSo some issues I have:\n\n1.) According to the docs, you bundle your code into one file, but this seems incorrect, as the whole idea is to avoid this and ONLY load in files relevant to the page you are on (Yes, I know you only bundle files you want via the require method), but still it seems to suggest you compile everything into one file rather than into smaller bundles that can depend on each other.\n\n2.) Even if you do move the files into separate bundles, I haven't seen any documentation of how to load the relevant bundle when needed..\n\ne.g. in require I can do:\n\n```\nrequire.config({\n    bundles: {\n        'shared': ['jquery', 'jquery.ui'],\n        'home': ['jquery.slideshow','jquery.twitter']\n    }\n});\n\ndefine('homePage', ['jquery', 'jquery.twitter'], function(jquery, jquery.twitter) {\n// do something here\n});\n```\n\nAnd that will then load the files as I need if I call the homePage code and it will load the shared and home bundles, and then so and so forth, so I can used shared across pages, and then a different bundle for different sections, etc. And it's all handled client side, so if I had some functionality in an AngularJS app like:\n\n```\ndefine(['angular', 'dependancyModule'], function(angular) {\n  angular\n    .module('HelloWorld', ['dependancyModule'])\n    .filter('HelloWorld', function() {\n      return function() {\n        return 'Hello world!';\n      }\n    });\n});\n```\n\nIf I called that HelloWorld module, it would load the dependancy.\n\nI'm not seeing how I could do this with Browserify, without physically loading in the bundled js file using a script tag in the page itself, so this seems a much more manual process than it would be with require.\n\nIf someone could clear this up, it'd be awesome. Thanks.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1116/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1116/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1115",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1115/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1115/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1115/events",
    "html_url": "https://github.com/browserify/browserify/issues/1115",
    "id": 57050732,
    "node_id": "MDU6SXNzdWU1NzA1MDczMg==",
    "number": 1115,
    "title": "Error: unsupported type for static module: VariableDeclarator",
    "user": {
      "login": "lostinplace",
      "id": 645413,
      "node_id": "MDQ6VXNlcjY0NTQxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/645413?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lostinplace",
      "html_url": "https://github.com/lostinplace",
      "followers_url": "https://api.github.com/users/lostinplace/followers",
      "following_url": "https://api.github.com/users/lostinplace/following{/other_user}",
      "gists_url": "https://api.github.com/users/lostinplace/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lostinplace/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lostinplace/subscriptions",
      "organizations_url": "https://api.github.com/users/lostinplace/orgs",
      "repos_url": "https://api.github.com/users/lostinplace/repos",
      "events_url": "https://api.github.com/users/lostinplace/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lostinplace/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-02-09T16:09:20Z",
    "updated_at": "2015-02-09T18:40:54Z",
    "closed_at": "2015-02-09T18:40:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm receiving the following error, and having trouble making sense of it:\n\n```\nError: unsupported type for static module: VariableDeclarator\nat expression:\n\n  fs\n```\n\nI believe it is cause at the beginning of the file, because you know.... no further feedback\n\n```\n// Generated by CoffeeScript 1.8.0\n(function() {\n  var $, Application, ApplicationPrototype, Backbone, Config, KeyBinder, Marionette, PlayerCollection, RemoteProxy, Router, Studio, VideoCollection, fs, _;\n\n  fs = require('fs');\n...\n```\n\nWhat is happening and how do I fix it?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1115/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1115/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1114",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1114/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1114/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1114/events",
    "html_url": "https://github.com/browserify/browserify/pull/1114",
    "id": 56988004,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg4OTU5NjI=",
    "number": 1114,
    "title": "Update copyright year",
    "user": {
      "login": "lpww",
      "id": 8637335,
      "node_id": "MDQ6VXNlcjg2MzczMzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8637335?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lpww",
      "html_url": "https://github.com/lpww",
      "followers_url": "https://api.github.com/users/lpww/followers",
      "following_url": "https://api.github.com/users/lpww/following{/other_user}",
      "gists_url": "https://api.github.com/users/lpww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lpww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lpww/subscriptions",
      "organizations_url": "https://api.github.com/users/lpww/orgs",
      "repos_url": "https://api.github.com/users/lpww/repos",
      "events_url": "https://api.github.com/users/lpww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lpww/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-02-09T04:30:41Z",
    "updated_at": "2015-03-19T21:29:44Z",
    "closed_at": "2015-03-19T21:29:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/1114",
      "html_url": "https://github.com/browserify/browserify/pull/1114",
      "diff_url": "https://github.com/browserify/browserify/pull/1114.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/1114.patch",
      "merged_at": null
    },
    "body": "Updated copyright year for 2015. No other files were changed.\n![browserify copyright update](https://cloud.githubusercontent.com/assets/8637335/6101024/4bfec024-afd1-11e4-988f-6aa14cc71cbc.png)\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1114/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1114/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1113",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1113/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1113/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1113/events",
    "html_url": "https://github.com/browserify/browserify/issues/1113",
    "id": 56984824,
    "node_id": "MDU6SXNzdWU1Njk4NDgyNA==",
    "number": 1113,
    "title": "UNIX command line guidelines whatever?",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-02-09T03:27:19Z",
    "updated_at": "2015-02-10T09:42:32Z",
    "closed_at": "2015-02-10T09:42:32Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I would like to know if there was a specific reason why:\n\n```\nbrowserify [entry files] {OPTIONS}\n```\n\nwas not made to follow the UNIX [guidelines](http://pubs.opengroup.org/onlinepubs/009696899/basedefs/xbd_chap12.html) ([more](http://pubs.opengroup.org/onlinepubs/7908799/xbd/utilconv.html) and [also](http://pubs.opengroup.org/onlinepubs/7908799/xbd/utilconv.html)) for command line utilities, where options always appear before operands. This is not _really_ a problem, and to be fair, there are many newer and well-established (`curl` comes to mind) utilities that do break the rules sometimes.\n\nCheers!\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1113/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1113/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1112",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1112/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1112/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1112/events",
    "html_url": "https://github.com/browserify/browserify/issues/1112",
    "id": 56969395,
    "node_id": "MDU6SXNzdWU1Njk2OTM5NQ==",
    "number": 1112,
    "title": "Circular dependencies with 6to5 don't work.",
    "user": {
      "login": "trusktr",
      "id": 297678,
      "node_id": "MDQ6VXNlcjI5NzY3OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/297678?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/trusktr",
      "html_url": "https://github.com/trusktr",
      "followers_url": "https://api.github.com/users/trusktr/followers",
      "following_url": "https://api.github.com/users/trusktr/following{/other_user}",
      "gists_url": "https://api.github.com/users/trusktr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/trusktr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/trusktr/subscriptions",
      "organizations_url": "https://api.github.com/users/trusktr/orgs",
      "repos_url": "https://api.github.com/users/trusktr/repos",
      "events_url": "https://api.github.com/users/trusktr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/trusktr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-02-08T21:49:18Z",
    "updated_at": "2015-02-08T21:51:50Z",
    "closed_at": "2015-02-08T21:51:50Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "For example,\n\n``` js\n// Foo.js\nimport Bar from 'Bar'\nexport class Foo {\n  constructor() {\n    console.log('I am Foo. Am I Bar?', this instanceof Bar)\n  }\n}\n```\n\n``` js\n// Bar.js\nimport Foo from 'Foo'\nexport class Bar extends Foo {\n  constructor() {\n    super()\n  }\n}\n```\n\nThrows an error\n\n```\nUncaught TypeError: Super expression must either be null or a function, not undefined\n```\n\n@sebmck This happens on a line that looks like this:\n\n```\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1112/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1112/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1111",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1111/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1111/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1111/events",
    "html_url": "https://github.com/browserify/browserify/issues/1111",
    "id": 56967169,
    "node_id": "MDU6SXNzdWU1Njk2NzE2OQ==",
    "number": 1111,
    "title": "ENOTDIR error for require('*.json') ",
    "user": {
      "login": "ritch",
      "id": 462228,
      "node_id": "MDQ6VXNlcjQ2MjIyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/462228?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ritch",
      "html_url": "https://github.com/ritch",
      "followers_url": "https://api.github.com/users/ritch/followers",
      "following_url": "https://api.github.com/users/ritch/following{/other_user}",
      "gists_url": "https://api.github.com/users/ritch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ritch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ritch/subscriptions",
      "organizations_url": "https://api.github.com/users/ritch/orgs",
      "repos_url": "https://api.github.com/users/ritch/repos",
      "events_url": "https://api.github.com/users/ritch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ritch/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-02-08T20:53:47Z",
    "updated_at": "2015-02-21T22:39:49Z",
    "closed_at": "2015-02-21T22:39:02Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "```\nError: ENOTDIR, stat '/ ... /node_modules/instructions.json/package.json'\n```\n\nWhen doing...\n\n``` js\nbundle.require(' ... /instructions.json', {expose: 'instructions'});\n```\n\nI'm fairly certain that [browser-resolve](https://github.com/defunctzombie/node-browser-resolve/releases/tag/v1.7.0) is the culprit.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1111/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1111/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1110",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1110/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1110/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1110/events",
    "html_url": "https://github.com/browserify/browserify/pull/1110",
    "id": 56938311,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg4NzUyNzM=",
    "number": 1110,
    "title": "Add node.js 0.12 and io.js to travis.yml",
    "user": {
      "login": "desenmeng",
      "id": 1209159,
      "node_id": "MDQ6VXNlcjEyMDkxNTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1209159?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/desenmeng",
      "html_url": "https://github.com/desenmeng",
      "followers_url": "https://api.github.com/users/desenmeng/followers",
      "following_url": "https://api.github.com/users/desenmeng/following{/other_user}",
      "gists_url": "https://api.github.com/users/desenmeng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/desenmeng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/desenmeng/subscriptions",
      "organizations_url": "https://api.github.com/users/desenmeng/orgs",
      "repos_url": "https://api.github.com/users/desenmeng/repos",
      "events_url": "https://api.github.com/users/desenmeng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/desenmeng/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-02-08T04:19:49Z",
    "updated_at": "2015-03-19T21:30:28Z",
    "closed_at": "2015-03-19T21:30:28Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/1110",
      "html_url": "https://github.com/browserify/browserify/pull/1110",
      "diff_url": "https://github.com/browserify/browserify/pull/1110.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/1110.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1110/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1110/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1109",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1109/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1109/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1109/events",
    "html_url": "https://github.com/browserify/browserify/issues/1109",
    "id": 56880842,
    "node_id": "MDU6SXNzdWU1Njg4MDg0Mg==",
    "number": 1109,
    "title": "process.nextTick shim should use Promise.resolve().then(fn) if available",
    "user": {
      "login": "domenic",
      "id": 617481,
      "node_id": "MDQ6VXNlcjYxNzQ4MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/617481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domenic",
      "html_url": "https://github.com/domenic",
      "followers_url": "https://api.github.com/users/domenic/followers",
      "following_url": "https://api.github.com/users/domenic/following{/other_user}",
      "gists_url": "https://api.github.com/users/domenic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domenic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domenic/subscriptions",
      "organizations_url": "https://api.github.com/users/domenic/orgs",
      "repos_url": "https://api.github.com/users/domenic/repos",
      "events_url": "https://api.github.com/users/domenic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domenic/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-02-06T23:06:39Z",
    "updated_at": "2015-02-07T02:37:17Z",
    "closed_at": "2015-02-07T02:37:17Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "This is currently the fastest cross-environment way of creating a microtask. But more interestingly, it works in environments like the V8 shell where there is no setTimeout available to fall back to. (Why do I need browserify bundles to run inside the V8 shell you ask? MAD SCIENCE!)\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1109/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1109/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1108",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1108/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1108/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1108/events",
    "html_url": "https://github.com/browserify/browserify/issues/1108",
    "id": 56834381,
    "node_id": "MDU6SXNzdWU1NjgzNDM4MQ==",
    "number": 1108,
    "title": "Do not expose Buffer / process via insertModuleVars if builtins are disabled",
    "user": {
      "login": "nikku",
      "id": 58601,
      "node_id": "MDQ6VXNlcjU4NjAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/58601?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nikku",
      "html_url": "https://github.com/nikku",
      "followers_url": "https://api.github.com/users/nikku/followers",
      "following_url": "https://api.github.com/users/nikku/following{/other_user}",
      "gists_url": "https://api.github.com/users/nikku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nikku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nikku/subscriptions",
      "organizations_url": "https://api.github.com/users/nikku/orgs",
      "repos_url": "https://api.github.com/users/nikku/repos",
      "events_url": "https://api.github.com/users/nikku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nikku/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-02-06T16:35:08Z",
    "updated_at": "2015-05-12T16:50:38Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I was wondering, if we could change `browserify` to not provide `Buffer` and `process` variables via `insert-module-globals` if `builtins: false` is specified in the `browserify` configuration.\n\nThere exists a number of libraries on npm that gracefully handle the fact that these variables might not be available, i.e. [sax-js](https://github.com/isaacs/sax-js).\n\nTo properly support these libraries and clean browser bundles we must specify something like this at the moment which is error prone and verbose:\n\n``` javascript\nvar b = browserify({\n  builtins: false,\n  insertGlobalVars: {\n    process: function () {\n      return 'undefined';\n    },\n    Buffer: function () {\n      return 'undefined';\n    }\n  }\n });\n```\n\n`insertGlobalVars` will crash otherwise because these modules are not included in the bundle anyway due to `builtins: false`.\n\n@substack I am happy to work on a PR for this if there is a slight change to get this improvement merged.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1108/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1108/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1107",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1107/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1107/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1107/events",
    "html_url": "https://github.com/browserify/browserify/issues/1107",
    "id": 56792948,
    "node_id": "MDU6SXNzdWU1Njc5Mjk0OA==",
    "number": 1107,
    "title": "browserify.transform() can't find transformation packages.",
    "user": {
      "login": "nicroto",
      "id": 1172150,
      "node_id": "MDQ6VXNlcjExNzIxNTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1172150?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicroto",
      "html_url": "https://github.com/nicroto",
      "followers_url": "https://api.github.com/users/nicroto/followers",
      "following_url": "https://api.github.com/users/nicroto/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicroto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicroto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicroto/subscriptions",
      "organizations_url": "https://api.github.com/users/nicroto/orgs",
      "repos_url": "https://api.github.com/users/nicroto/repos",
      "events_url": "https://api.github.com/users/nicroto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicroto/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2015-02-06T10:05:09Z",
    "updated_at": "2015-03-01T09:59:31Z",
    "closed_at": "2015-03-01T09:59:31Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\n\nFirst of all - thank you for this awesome tool.\n\nThe problem I have is connected with the way browserify search for transform modules. In my project, I have a dependency, which has browserify as a dependency. This means that running my project, my Current Working Dir is a level above the dir containing transform dependencies.\n\nHere is how the fs structure, roughly looks like:\n\nproject-root\n--------app.js\n--------node_modules\n----------------browserify-dependable-package\n------------------------node_modules\n--------------------------------browserify\n--------------------------------brfs(the brfs transform package)\n\nWith this structure, if I run the app with these conditions:\n- uses my _browserify-dependable-package_\n- browserifying a file.js\n- using the brfs transform\n- with cwd `/Users/nicroto/repos/project-root/` (OS X)\n\nthe **resolve** package, which is supposed to get the location of brfs, gets (in passed opts) basedir path `/Users/nicroto/repos/project-root/` and is unable to find brfs searching in:\n- `/Users/nicroto/repos/project-root/node_modules`\n- `/Users/nicroto/repos/node_modules`\n- `/Users/nicroto/node_modules`\n- `/Users/node_modules`\n- `/node_modules`\n\nIf I could always run it with this cwd, I would place the brfs module in `/Users/nicroto/repos/project-root/node_modules`, but my app is started with process.cwd `/` so this hack isn't really an option for me.\n\nSo I traced the place where basedir is picked for all transforms, which currently looks like this:\n\n``` javascript\nBrowserify.prototype.transform = function (tr, opts) {\n    // ...\n    var basedir = defined(opts.basedir, this._options.basedir, process.cwd());\n    // ...\n};\n```\n\nand I changed it to this (node-browserify/index.js):\n\n``` javascript\nBrowserify.prototype.transform = function (tr, opts) {\n    // ...\n    var basedir = defined(__dirname, opts.basedir, this._options.basedir, process.cwd());\n    // ...\n};\n```\n\nThis resolved the issue, but a few tests blew up, so I decided to ask here if I am on the right track before spending more time on the issue.\n\nIs this the right way to approach the issue and why do we need all of the fallback variants for basedir there?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1107/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1107/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1106",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1106/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1106/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1106/events",
    "html_url": "https://github.com/browserify/browserify/issues/1106",
    "id": 56737225,
    "node_id": "MDU6SXNzdWU1NjczNzIyNQ==",
    "number": 1106,
    "title": "`b.require` `opts.expose` does not work with stream",
    "user": {
      "login": "MadLittleMods",
      "id": 558581,
      "node_id": "MDQ6VXNlcjU1ODU4MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/558581?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MadLittleMods",
      "html_url": "https://github.com/MadLittleMods",
      "followers_url": "https://api.github.com/users/MadLittleMods/followers",
      "following_url": "https://api.github.com/users/MadLittleMods/following{/other_user}",
      "gists_url": "https://api.github.com/users/MadLittleMods/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MadLittleMods/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MadLittleMods/subscriptions",
      "organizations_url": "https://api.github.com/users/MadLittleMods/orgs",
      "repos_url": "https://api.github.com/users/MadLittleMods/repos",
      "events_url": "https://api.github.com/users/MadLittleMods/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MadLittleMods/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2015-02-05T22:05:36Z",
    "updated_at": "2016-10-27T05:30:17Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "[`b.require`](https://www.npmjs.com/package/browserify#brequirefile-opts) says it works with streams but it doesn't seem to expose them properly.\n\nThe problem is very similar if not the same as #771. Issue #908 also seems relevant. I have tested both the latest v8.1.3 and v7.0.0.\n\nI have looked in the source and played around but I can't find a solution. I did notice that when passing a stream the `rec` object doesn't pass along the `expose` property. [_See source_](https://github.com/substack/node-browserify/blob/a18657c6f363272ce3c7722528c8ec5f325d0eaf/index.js#L128). Adding it back has no effect.\n\nThe code below results in this error:\n\n```\nError: Cannot find module 'some-func' from 'C:\\browserify-require-api-test1\\test'\n```\n\n``` js\nvar fs = require('fs');\nvar browserify = require('browserify');\n\nbrowserify('./test/main.js')\n    .require(\n        fs.createReadStream('./test/hidden-some-func.js'),\n        {\n            // Dependency name to inject\n            expose: 'some-func',\n            // So that relative requires will be resolvable\n            basedir: './test/'\n        }\n    )\n    .bundle();\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1106/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1106/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1105",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1105/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1105/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1105/events",
    "html_url": "https://github.com/browserify/browserify/pull/1105",
    "id": 56543262,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg2NDc5NzI=",
    "number": 1105,
    "title": "Update \"browser-pack\" and remove unused \"umd\" dep",
    "user": {
      "login": "zertosh",
      "id": 830952,
      "node_id": "MDQ6VXNlcjgzMDk1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/830952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zertosh",
      "html_url": "https://github.com/zertosh",
      "followers_url": "https://api.github.com/users/zertosh/followers",
      "following_url": "https://api.github.com/users/zertosh/following{/other_user}",
      "gists_url": "https://api.github.com/users/zertosh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zertosh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zertosh/subscriptions",
      "organizations_url": "https://api.github.com/users/zertosh/orgs",
      "repos_url": "https://api.github.com/users/zertosh/repos",
      "events_url": "https://api.github.com/users/zertosh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zertosh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-02-04T15:41:58Z",
    "updated_at": "2015-02-21T00:11:26Z",
    "closed_at": "2015-02-21T00:11:26Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/1105",
      "html_url": "https://github.com/browserify/browserify/pull/1105",
      "diff_url": "https://github.com/browserify/browserify/pull/1105.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/1105.patch",
      "merged_at": "2015-02-21T00:11:26Z"
    },
    "body": "Update \"browser-pack\" https://github.com/substack/browser-pack/pull/49.\n\n`umd` is actually used by `browser-pack`, and it has it listed as dependency already.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1105/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1105/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1104",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1104/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1104/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1104/events",
    "html_url": "https://github.com/browserify/browserify/issues/1104",
    "id": 56467554,
    "node_id": "MDU6SXNzdWU1NjQ2NzU1NA==",
    "number": 1104,
    "title": "How to deal with case sensitivity?",
    "user": {
      "login": "kentor",
      "id": 240493,
      "node_id": "MDQ6VXNlcjI0MDQ5Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/240493?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kentor",
      "html_url": "https://github.com/kentor",
      "followers_url": "https://api.github.com/users/kentor/followers",
      "following_url": "https://api.github.com/users/kentor/following{/other_user}",
      "gists_url": "https://api.github.com/users/kentor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kentor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kentor/subscriptions",
      "organizations_url": "https://api.github.com/users/kentor/orgs",
      "repos_url": "https://api.github.com/users/kentor/repos",
      "events_url": "https://api.github.com/users/kentor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kentor/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-02-04T01:36:14Z",
    "updated_at": "2015-02-06T16:54:18Z",
    "closed_at": "2015-02-06T16:54:18Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "On Mac filenames are case insensitive which means both `require('./moduleA')` and `require(./'modulea')` would work. But I deploy to linux systems and the browserify build will blow up if I get the casing wrong. Does anyone have a way to deal with this, like warn or fail in dev if the casing is wrong?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1104/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1104/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1103",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1103/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1103/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1103/events",
    "html_url": "https://github.com/browserify/browserify/issues/1103",
    "id": 56444255,
    "node_id": "MDU6SXNzdWU1NjQ0NDI1NQ==",
    "number": 1103,
    "title": "Feature: require URIs",
    "user": {
      "login": "samholmes",
      "id": 517469,
      "node_id": "MDQ6VXNlcjUxNzQ2OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/517469?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/samholmes",
      "html_url": "https://github.com/samholmes",
      "followers_url": "https://api.github.com/users/samholmes/followers",
      "following_url": "https://api.github.com/users/samholmes/following{/other_user}",
      "gists_url": "https://api.github.com/users/samholmes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/samholmes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/samholmes/subscriptions",
      "organizations_url": "https://api.github.com/users/samholmes/orgs",
      "repos_url": "https://api.github.com/users/samholmes/repos",
      "events_url": "https://api.github.com/users/samholmes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/samholmes/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-02-03T22:00:01Z",
    "updated_at": "2018-05-18T14:27:41Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Wouldn't it be awesome if you could do:\n\n``` js\nvar jquery = require(\"http://code.jquery.com/jquery-1.11.2.min.js\");\n```\n\nand it would just work. That would be awesome!\n\nI could see this as a definite possibility, but is this already a functionality supported by transforms (is there a project that is doing this already?)?\n\nAlso, discuss if this is even a good idea.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1103/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1103/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1102",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1102/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1102/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1102/events",
    "html_url": "https://github.com/browserify/browserify/issues/1102",
    "id": 56167757,
    "node_id": "MDU6SXNzdWU1NjE2Nzc1Nw==",
    "number": 1102,
    "title": "Strategy for a browserified angular library",
    "user": {
      "login": "thaiat",
      "id": 4806944,
      "node_id": "MDQ6VXNlcjQ4MDY5NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4806944?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thaiat",
      "html_url": "https://github.com/thaiat",
      "followers_url": "https://api.github.com/users/thaiat/followers",
      "following_url": "https://api.github.com/users/thaiat/following{/other_user}",
      "gists_url": "https://api.github.com/users/thaiat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thaiat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thaiat/subscriptions",
      "organizations_url": "https://api.github.com/users/thaiat/orgs",
      "repos_url": "https://api.github.com/users/thaiat/repos",
      "events_url": "https://api.github.com/users/thaiat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thaiat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-02-01T15:59:18Z",
    "updated_at": "2015-02-02T12:29:10Z",
    "closed_at": "2015-02-02T12:29:10Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\n\nI have written an angular module, that uses internally browserify.\nThe package.json of this library module contains browserify-shim as well as npm dependencies\n\nNow i want to publish it to npm so users can require it.\n\nI can't find a way to do so\n\nIf i require the bundle.js of the library i end up loading angular twice\nIf i require the index.js of the library, it does find angular\n\nCan you help ?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1102/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1102/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1101",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1101/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1101/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1101/events",
    "html_url": "https://github.com/browserify/browserify/issues/1101",
    "id": 56155712,
    "node_id": "MDU6SXNzdWU1NjE1NTcxMg==",
    "number": 1101,
    "title": "Browserify.prototype._json adds a module.exports without testing if it's dedupe code or not",
    "user": {
      "login": "tetsuo",
      "id": 50026,
      "node_id": "MDQ6VXNlcjUwMDI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/50026?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tetsuo",
      "html_url": "https://github.com/tetsuo",
      "followers_url": "https://api.github.com/users/tetsuo/followers",
      "following_url": "https://api.github.com/users/tetsuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/tetsuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tetsuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tetsuo/subscriptions",
      "organizations_url": "https://api.github.com/users/tetsuo/orgs",
      "repos_url": "https://api.github.com/users/tetsuo/repos",
      "events_url": "https://api.github.com/users/tetsuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tetsuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-02-01T07:39:05Z",
    "updated_at": "2015-02-21T09:57:20Z",
    "closed_at": "2015-02-21T09:57:20Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "encountered this while trying to rebuild `crypto-browserify` with watchify. one of its dependencies (`elliptic`) requires a `package.json` somewhere.\n\nhotfix here: https://github.com/tetsuo/node-browserify/commit/9978df3a1c6fe0abbcdac9b1f2729fbbb3687b04\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1101/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1101/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1100",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1100/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1100/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1100/events",
    "html_url": "https://github.com/browserify/browserify/pull/1100",
    "id": 55840547,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjgyNDUwNTM=",
    "number": 1100,
    "title": "Support requiring a shimmed module name from an external bundle",
    "user": {
      "login": "mwiencek",
      "id": 1056556,
      "node_id": "MDQ6VXNlcjEwNTY1NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1056556?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mwiencek",
      "html_url": "https://github.com/mwiencek",
      "followers_url": "https://api.github.com/users/mwiencek/followers",
      "following_url": "https://api.github.com/users/mwiencek/following{/other_user}",
      "gists_url": "https://api.github.com/users/mwiencek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mwiencek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mwiencek/subscriptions",
      "organizations_url": "https://api.github.com/users/mwiencek/orgs",
      "repos_url": "https://api.github.com/users/mwiencek/repos",
      "events_url": "https://api.github.com/users/mwiencek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mwiencek/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-01-29T00:59:31Z",
    "updated_at": "2015-01-31T21:31:08Z",
    "closed_at": "2015-01-31T21:30:51Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/1100",
      "html_url": "https://github.com/browserify/browserify/pull/1100",
      "diff_url": "https://github.com/browserify/browserify/pull/1100.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/1100.patch",
      "merged_at": "2015-01-31T21:30:51Z"
    },
    "body": "If bundle `A` does  `require('shim')` (which is a reference to ./shim.js in the package.json's `browser` field), and bundle `B` does `external(A)` and tries to also `require('shim')`, then browserify currently throws a `MODULE_NOT_FOUND` error for the second require.\n\nI'd expect that the short name would not only be available to `B`, but that it'd also be smart enough to see that it means the same external module in `A`. A workaround is using `expose` in conjunction with `external` directly on ./shim.js, but that's really unmanageable when you have tons of modules you want shared among multiple sets of bundles for different classes of pages.\n\nI've added a patch and test case which solve this for me, but I don't know if it's robust or correct. If there's another way to achieve this I'd be grateful to hear it. :)\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1100/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1100/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1099",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1099/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1099/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1099/events",
    "html_url": "https://github.com/browserify/browserify/issues/1099",
    "id": 55695265,
    "node_id": "MDU6SXNzdWU1NTY5NTI2NQ==",
    "number": 1099,
    "title": "Apparent unnecessary dedupe on second bundle call",
    "user": {
      "login": "rvangundy",
      "id": 1909616,
      "node_id": "MDQ6VXNlcjE5MDk2MTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1909616?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rvangundy",
      "html_url": "https://github.com/rvangundy",
      "followers_url": "https://api.github.com/users/rvangundy/followers",
      "following_url": "https://api.github.com/users/rvangundy/following{/other_user}",
      "gists_url": "https://api.github.com/users/rvangundy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rvangundy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rvangundy/subscriptions",
      "organizations_url": "https://api.github.com/users/rvangundy/orgs",
      "repos_url": "https://api.github.com/users/rvangundy/repos",
      "events_url": "https://api.github.com/users/rvangundy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rvangundy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-01-28T00:10:58Z",
    "updated_at": "2015-01-28T00:10:58Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm using cacheing and responding to a watchify event, and have noticed some odd behavior on update. Some deduping code is being added to the output bundle. It adds entries for a couple of libraries, both which have been exposed under a `scripts/` alias (to avoid ../../, etc.). My original `scripts/name` entry is still in the bundle, but on update, the second deduping entry is added as well.\n\nIncidentally, these deduping entries make my front-end code run in a continuous loop at the point I `require('scripts/name')`.\n\nI manually removed the deduping entries and everything worked as expected. Why are these entries being added? How can I prevent/remove them?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1099/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1099/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1098",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1098/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1098/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1098/events",
    "html_url": "https://github.com/browserify/browserify/issues/1098",
    "id": 55687234,
    "node_id": "MDU6SXNzdWU1NTY4NzIzNA==",
    "number": 1098,
    "title": "Browserify bug with multiple transforms and source maps",
    "user": {
      "login": "naorye",
      "id": 2873571,
      "node_id": "MDQ6VXNlcjI4NzM1NzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2873571?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naorye",
      "html_url": "https://github.com/naorye",
      "followers_url": "https://api.github.com/users/naorye/followers",
      "following_url": "https://api.github.com/users/naorye/following{/other_user}",
      "gists_url": "https://api.github.com/users/naorye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naorye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naorye/subscriptions",
      "organizations_url": "https://api.github.com/users/naorye/orgs",
      "repos_url": "https://api.github.com/users/naorye/repos",
      "events_url": "https://api.github.com/users/naorye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naorye/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-01-27T22:54:40Z",
    "updated_at": "2023-09-10T07:03:21Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am using Browserify with one transform method: reactify. Here is how I build my scripts:\n\n```\ngulp.task('scripts', function() {\n    var b = null, watcher = null;\n\n    function bundle() {\n        return b\n            .on('error', function(err) { console.error(err) })\n            .bundle()\n            .pipe(source('bundle.js'))\n            .pipe(gulp.dest('dest/scripts'));\n    }\n\n    b = browserify({\n            debug: true,\n            entries: ['app/index.jsx'],\n            transform: [ reactify ],\n            extensions: [ '.jsx' ],\n            cache: {}, packageCache: {}, fullPaths: true\n        });\n\n    if (config.watch) {\n        b = watchify(b);\n        b.on('update', bundle);\n    }\n\n    return bundle();\n});\n```\n\nWhen running the app locally I the source maps are correct and in the dev tools I can see the original jsx file.  \nThis problem starts when I add another transform. Then when running and looking in dev tools, I don't get the original file. Instead I get the jsx files AFTER compilation. I tried that with es6ify, uglifyfy and envify (reactify + es6ify, reactify + uglifyfy, reactify + envify) and I get the same incorrect behavior.  \nIt has to be something wrong I do with the source maps configuration or a bug in browserify.  \nAny idea how to fix it?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1098/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1098/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1097",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1097/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1097/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1097/events",
    "html_url": "https://github.com/browserify/browserify/issues/1097",
    "id": 55671984,
    "node_id": "MDU6SXNzdWU1NTY3MTk4NA==",
    "number": 1097,
    "title": "Incompatible with restify",
    "user": {
      "login": "u84six",
      "id": 9747023,
      "node_id": "MDQ6VXNlcjk3NDcwMjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9747023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/u84six",
      "html_url": "https://github.com/u84six",
      "followers_url": "https://api.github.com/users/u84six/followers",
      "following_url": "https://api.github.com/users/u84six/following{/other_user}",
      "gists_url": "https://api.github.com/users/u84six/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/u84six/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/u84six/subscriptions",
      "organizations_url": "https://api.github.com/users/u84six/orgs",
      "repos_url": "https://api.github.com/users/u84six/repos",
      "events_url": "https://api.github.com/users/u84six/events{/privacy}",
      "received_events_url": "https://api.github.com/users/u84six/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-01-27T20:45:27Z",
    "updated_at": "2015-01-27T20:55:32Z",
    "closed_at": "2015-01-27T20:55:32Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "After installing browserify with npm (e.g. npm install -g browserify), when I do a simple command line bundle like this: \"$ browserify src/index.js > bundle.js\" I get the following error:\n\nError: Cannot find module 'dtrace-provider' from 'C:\\development\\node-projects\\my-project\\node_modules\\restify\\lib'\n\nWhy does it care about restify module? Looks like some strange dependency issue.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1097/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1097/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1096",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1096/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1096/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1096/events",
    "html_url": "https://github.com/browserify/browserify/pull/1096",
    "id": 55547248,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjgwNjYzOTA=",
    "number": 1096,
    "title": "ensure use of URL path separators",
    "user": {
      "login": "junosuarez",
      "id": 1106489,
      "node_id": "MDQ6VXNlcjExMDY0ODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1106489?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/junosuarez",
      "html_url": "https://github.com/junosuarez",
      "followers_url": "https://api.github.com/users/junosuarez/followers",
      "following_url": "https://api.github.com/users/junosuarez/following{/other_user}",
      "gists_url": "https://api.github.com/users/junosuarez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/junosuarez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/junosuarez/subscriptions",
      "organizations_url": "https://api.github.com/users/junosuarez/orgs",
      "repos_url": "https://api.github.com/users/junosuarez/repos",
      "events_url": "https://api.github.com/users/junosuarez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/junosuarez/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-01-26T22:30:35Z",
    "updated_at": "2015-02-01T06:11:16Z",
    "closed_at": "2015-02-01T06:10:42Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/1096",
      "html_url": "https://github.com/browserify/browserify/pull/1096",
      "diff_url": "https://github.com/browserify/browserify/pull/1096.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/1096.patch",
      "merged_at": "2015-02-01T06:10:42Z"
    },
    "body": "On Windows, URLs in sourcemaps are using the `path.sep === '\\\\'` character rather than the URL `/` character. This breaks folder support in Chrome dev tools, as in:\n\n![image](https://cloud.githubusercontent.com/assets/1106489/5909706/cd095c52-a567-11e4-82d8-8c44ce6ecb2c.png)\n\nThis PR ensure that URL separator characters are used instead when Browserify is run on Windows.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1096/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1096/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1095",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1095/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1095/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1095/events",
    "html_url": "https://github.com/browserify/browserify/issues/1095",
    "id": 55535505,
    "node_id": "MDU6SXNzdWU1NTUzNTUwNQ==",
    "number": 1095,
    "title": "Uncaught byte order marker when bundling jsdom",
    "user": {
      "login": "sterpe",
      "id": 678398,
      "node_id": "MDQ6VXNlcjY3ODM5OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/678398?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sterpe",
      "html_url": "https://github.com/sterpe",
      "followers_url": "https://api.github.com/users/sterpe/followers",
      "following_url": "https://api.github.com/users/sterpe/following{/other_user}",
      "gists_url": "https://api.github.com/users/sterpe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sterpe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sterpe/subscriptions",
      "organizations_url": "https://api.github.com/users/sterpe/orgs",
      "repos_url": "https://api.github.com/users/sterpe/repos",
      "events_url": "https://api.github.com/users/sterpe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sterpe/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 203859537,
        "node_id": "MDU6TGFiZWwyMDM4NTk1Mzc=",
        "url": "https://api.github.com/repos/browserify/browserify/labels/bug",
        "name": "bug",
        "color": "C40233",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-01-26T20:50:19Z",
    "updated_at": "2018-03-16T08:35:07Z",
    "closed_at": "2018-03-16T08:35:07Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This seems very similar to #313.  There are BOM in 2 of `jsdom`'s files, but in particular one is not getting caught -- the bom in jsdom/lib/jsdom/browser/Window.js\n\nSteps to duplicate on OSX 10.9.5\n\n```\nnpm install browserify@8.1.1 jsdom@3.0.2\ned index.js\ni\nvar jsdom = require('jsdom').jsdom\n.\nwq\n./node_modules/browserify/bin/cmd.js index.js -o bundle.js\n```\n\nLook at line 7698 in bundle.js with `vim`\n\n``` javascript\n},{\"./jsdom/browser/documentfeatures\":42,\"./jsdom/browser/domtohtml\":43,\"./jsdom/browser/index\":46,\"./jsdom/living\":65,\"./jsdom/utils\":71,\"./jsdom/virtual-console\":72,\"_process\":18,\"fs\":2,\"path\":17,\"request\":73,\"url\":36}],40:[function(require,module,exports){\n(function (process,global){                                                      \n<feff>\"use strict\";                                                              \n\nvar URL = require(\"url\");                                                        \nvar CSSStyleDeclaration = require(\"cssstyle\").CSSStyleDeclaration;               \nvar XMLHttpRequest = require(\"xmlhttprequest\").XMLHttpRequest;                   \nvar dom = require(\"../level1/core\");                                             \nvar NOT_IMPLEMENTED = require(\"./utils\").NOT_IMPLEMENTED;                        \nvar createFrom = require(\"../utils\").createFrom;                                 \nvar History = require(\"./history\");                                              \nvar VirtualConsole = require(\"../virtual-console\");                              \n\nvar cssSelectorSplitRE = /((?:[^,\"']|\"[^\"]*\"|'[^']*')+)/;                        \n\nfunction matchesDontThrow(el, selector) {                                        \n  try {                                                                          \n    return el.matches(selector);                                                 \n  } catch (e) {                                                                  \n    return false;                                                                \n  }                                                                              \n}                                                                                \n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1095/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1095/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1094",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1094/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1094/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1094/events",
    "html_url": "https://github.com/browserify/browserify/issues/1094",
    "id": 55534105,
    "node_id": "MDU6SXNzdWU1NTUzNDEwNQ==",
    "number": 1094,
    "title": "ability to specify alt browser mapping, for chromeapp or firefox app, etc.",
    "user": {
      "login": "mvayngrib",
      "id": 83948,
      "node_id": "MDQ6VXNlcjgzOTQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/83948?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mvayngrib",
      "html_url": "https://github.com/mvayngrib",
      "followers_url": "https://api.github.com/users/mvayngrib/followers",
      "following_url": "https://api.github.com/users/mvayngrib/following{/other_user}",
      "gists_url": "https://api.github.com/users/mvayngrib/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mvayngrib/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mvayngrib/subscriptions",
      "organizations_url": "https://api.github.com/users/mvayngrib/orgs",
      "repos_url": "https://api.github.com/users/mvayngrib/repos",
      "events_url": "https://api.github.com/users/mvayngrib/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mvayngrib/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 203859466,
        "node_id": "MDU6TGFiZWwyMDM4NTk0NjY=",
        "url": "https://api.github.com/repos/browserify/browserify/labels/feature-request",
        "name": "feature-request",
        "color": "ACE1AF",
        "default": false,
        "description": null
      },
      {
        "id": 203861840,
        "node_id": "MDU6TGFiZWwyMDM4NjE4NDA=",
        "url": "https://api.github.com/repos/browserify/browserify/labels/patch-welcome",
        "name": "patch-welcome",
        "color": "e102d8",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-01-26T20:38:14Z",
    "updated_at": "2018-05-23T11:36:14Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "when I browserify for a Chrome app, I want a slightly different mapping than I specify in the \"browser\" field. It would be cool if I could have an arbitrarily named field and tell browserify to use that instead of \"browser\", e.g. \n\n```\nbrowserify --browser=chromeapp main.js > bundle.js\n```\n\nand \n\n```\n\"browser\": {\n  ...\n},\n\"chromeapp\": {\n  ...\n}\n```\n\nit would then default to \"browser\"\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1094/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1094/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1093",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1093/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1093/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1093/events",
    "html_url": "https://github.com/browserify/browserify/issues/1093",
    "id": 55425319,
    "node_id": "MDU6SXNzdWU1NTQyNTMxOQ==",
    "number": 1093,
    "title": ".npmignores / reducing install bloat",
    "user": {
      "login": "mattdesl",
      "id": 1383811,
      "node_id": "MDQ6VXNlcjEzODM4MTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1383811?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattdesl",
      "html_url": "https://github.com/mattdesl",
      "followers_url": "https://api.github.com/users/mattdesl/followers",
      "following_url": "https://api.github.com/users/mattdesl/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattdesl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattdesl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattdesl/subscriptions",
      "organizations_url": "https://api.github.com/users/mattdesl/orgs",
      "repos_url": "https://api.github.com/users/mattdesl/repos",
      "events_url": "https://api.github.com/users/mattdesl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattdesl/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 13,
    "created_at": "2015-01-25T19:02:39Z",
    "updated_at": "2015-02-25T16:46:52Z",
    "closed_at": "2015-02-22T19:21:30Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "A fresh install of browserify produces around 26.6 mb of bloat. Most of it is coming from tests, and tests of dependencies. Not a big deal for a global install, but when you are using browserify as a local dependency for WebGL/DOM testing across several dozens of modules, it starts to add up.\n\nSome of the heavy hitters, sorted from lowest to highest in filesize:\n\n```\n384 shasum/\n392 duplexer2/\n416 resolve/\n440 through2/\n528 concat-stream/\n560 buffer/\n720 labeled-stream-splicer/\n816 glob/\n944 browser-resolve/\n1176    JSONStream/\n1272    browser-pack/\n3144    umd/\n5280    crypto-browserify/\n5344    browserify-zlib/\n5544    syntax-error/\n7008    insert-module-globals/\n12328   module-deps/\n```\n\nI could start submitting PRs for some of these, as they are easy changes. \n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1093/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1093/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1092",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1092/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1092/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1092/events",
    "html_url": "https://github.com/browserify/browserify/issues/1092",
    "id": 55403056,
    "node_id": "MDU6SXNzdWU1NTQwMzA1Ng==",
    "number": 1092,
    "title": "\"Cannot find module\" error under Windows",
    "user": {
      "login": "cowwoc",
      "id": 633348,
      "node_id": "MDQ6VXNlcjYzMzM0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/633348?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cowwoc",
      "html_url": "https://github.com/cowwoc",
      "followers_url": "https://api.github.com/users/cowwoc/followers",
      "following_url": "https://api.github.com/users/cowwoc/following{/other_user}",
      "gists_url": "https://api.github.com/users/cowwoc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cowwoc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cowwoc/subscriptions",
      "organizations_url": "https://api.github.com/users/cowwoc/orgs",
      "repos_url": "https://api.github.com/users/cowwoc/repos",
      "events_url": "https://api.github.com/users/cowwoc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cowwoc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-01-25T07:28:38Z",
    "updated_at": "2015-01-26T03:27:23Z",
    "closed_at": "2015-01-26T03:26:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Browserify 8.1.1\n\n`package.json` is sitting in `C:\\Users\\Gili\\Documents\\foo\\frontend`.\n\nWhen I invoke `browserify.add(\"src/main/webapp/com/foo/frontend/page/Authentications.js\")` in gulp, I get this error message:\n\n`Cannot find module 'src/main/webapp/com/foo/frontend/page/Authentications.js' from 'C:\\Users\\Gili\\Documents\\foo\\frontend'`\n\nIf I change the function argument to use Windows-style spaces (replace `/` by `\\\\`) , the error goes away. In other words, browserify is failing to normalize Windows-style slashes internally.\n\nThis issue is 100% reproducible.\n\n(I don't want to use Windows-style slashes because then my code won't be cross-platform)\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1092/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1092/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1091",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1091/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1091/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1091/events",
    "html_url": "https://github.com/browserify/browserify/issues/1091",
    "id": 55376741,
    "node_id": "MDU6SXNzdWU1NTM3Njc0MQ==",
    "number": 1091,
    "title": "How to add not required files to bundle?",
    "user": {
      "login": "Diokuz",
      "id": 2929442,
      "node_id": "MDQ6VXNlcjI5Mjk0NDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2929442?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Diokuz",
      "html_url": "https://github.com/Diokuz",
      "followers_url": "https://api.github.com/users/Diokuz/followers",
      "following_url": "https://api.github.com/users/Diokuz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Diokuz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Diokuz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Diokuz/subscriptions",
      "organizations_url": "https://api.github.com/users/Diokuz/orgs",
      "repos_url": "https://api.github.com/users/Diokuz/repos",
      "events_url": "https://api.github.com/users/Diokuz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Diokuz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-01-24T16:40:05Z",
    "updated_at": "2015-01-24T16:40:05Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "How can I add some files to bundle, which are not requiring from the code directly?\n\nI have a code like that:\n\n``` js\nfunction(name) {\n    return require('./bot/' + name);\n}\n```\n\nI thought I could use fullPath option to turn off converting module ids into numerical indexes for solving my problem, and then use .add or .require methods, but it makes really full path like '/User/qwe/...' and didnt work anyway.\n\nI just want to add some files as if they were required (but they're not). Also, I dont need convertion to numerical indexes.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1091/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1091/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1090",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1090/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1090/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1090/events",
    "html_url": "https://github.com/browserify/browserify/pull/1090",
    "id": 55368342,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjc5NzU0NDY=",
    "number": 1090,
    "title": "Fix typo in readme",
    "user": {
      "login": "bithavoc",
      "id": 219289,
      "node_id": "MDQ6VXNlcjIxOTI4OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/219289?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bithavoc",
      "html_url": "https://github.com/bithavoc",
      "followers_url": "https://api.github.com/users/bithavoc/followers",
      "following_url": "https://api.github.com/users/bithavoc/following{/other_user}",
      "gists_url": "https://api.github.com/users/bithavoc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bithavoc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bithavoc/subscriptions",
      "organizations_url": "https://api.github.com/users/bithavoc/orgs",
      "repos_url": "https://api.github.com/users/bithavoc/repos",
      "events_url": "https://api.github.com/users/bithavoc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bithavoc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-01-24T11:39:14Z",
    "updated_at": "2015-02-21T00:39:13Z",
    "closed_at": "2015-02-21T00:39:13Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/1090",
      "html_url": "https://github.com/browserify/browserify/pull/1090",
      "diff_url": "https://github.com/browserify/browserify/pull/1090.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/1090.patch",
      "merged_at": "2015-02-21T00:39:13Z"
    },
    "body": "Fixes typo in readme, reads `compatable` instead of `compatible`.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1090/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1090/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1089",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1089/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1089/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1089/events",
    "html_url": "https://github.com/browserify/browserify/issues/1089",
    "id": 55361452,
    "node_id": "MDU6SXNzdWU1NTM2MTQ1Mg==",
    "number": 1089,
    "title": "Issue requiring Backbone when package.json file is present within its bower directory.",
    "user": {
      "login": "ctumolosus",
      "id": 1062644,
      "node_id": "MDQ6VXNlcjEwNjI2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1062644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctumolosus",
      "html_url": "https://github.com/ctumolosus",
      "followers_url": "https://api.github.com/users/ctumolosus/followers",
      "following_url": "https://api.github.com/users/ctumolosus/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctumolosus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctumolosus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctumolosus/subscriptions",
      "organizations_url": "https://api.github.com/users/ctumolosus/orgs",
      "repos_url": "https://api.github.com/users/ctumolosus/repos",
      "events_url": "https://api.github.com/users/ctumolosus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctumolosus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-01-24T06:45:51Z",
    "updated_at": "2015-01-24T14:01:47Z",
    "closed_at": "2015-01-24T14:01:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I was just fooling around with Backbone and ran into an issue where the underscore module couldn't be resolved.\n\nI'm using Bower to install dependencies. \n\n``` json\n\"dependencies\": {\n    \"backbone\": \"~1.1.2\",\n    \"jquery\": \"~2.1.3\"\n}\n```\n\nAnd I aliased each dependency with the `browser` attribute in the package.json file, so that I can require them easily into my source scripts. (e.g. `var $ = require('jquery');`).\n\n``` json\n\"browser\": {\n    \"backbone\": \"./bower_components/backbone/backbone.js\",   \n    \"jquery\": \"./bower_components/jquery/dist/jquery.js\",\n    \"underscore\": \"./bower_components/underscore/underscore.js\"\n  }\n```\n\nHowever, I kept running into this error whenever I required Backbone.\n\n```\nError: Cannot find module 'underscore' from './bower_components/backbone'\n```\n\nInternally Backbone is designed to support CommonJS and it requires underscore.\n\nI couldn't get my head around this error because my  `package.json` is specifying the location of underscore in my `bower_components` directory. \n\nAfter playing around a bit, I noticed that a `package.json` file is created when Backbone is installed with Bower, which specifies underscore as a dependency. After removing Backbone's package.json file everything worked perfectly. It seems Browserify was hoping for underscore to be installed within `./bower_components/backbone/node_modules` after noticing that underscore was declared as a dependency in Backbone's `package.json` file. Is this Browserify's expected behavior? How can I solve this problem?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1089/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1089/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1088",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1088/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1088/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1088/events",
    "html_url": "https://github.com/browserify/browserify/issues/1088",
    "id": 55355432,
    "node_id": "MDU6SXNzdWU1NTM1NTQzMg==",
    "number": 1088,
    "title": "\"browser\" field inconsistency",
    "user": {
      "login": "feross",
      "id": 121766,
      "node_id": "MDQ6VXNlcjEyMTc2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/121766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/feross",
      "html_url": "https://github.com/feross",
      "followers_url": "https://api.github.com/users/feross/followers",
      "following_url": "https://api.github.com/users/feross/following{/other_user}",
      "gists_url": "https://api.github.com/users/feross/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/feross/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/feross/subscriptions",
      "organizations_url": "https://api.github.com/users/feross/orgs",
      "repos_url": "https://api.github.com/users/feross/repos",
      "events_url": "https://api.github.com/users/feross/events{/privacy}",
      "received_events_url": "https://api.github.com/users/feross/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-01-24T02:18:42Z",
    "updated_at": "2015-12-06T01:04:57Z",
    "closed_at": "2015-12-06T01:04:56Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "In `package.json`, to **exclude** a file `./lib/foo.js` that is required with `require('./lib/foo')` (note the missing `.js` extension) you must do:\n\n``` json\n\"browser\": {\n  \"./lib/foo\": false\n}\n```\n\nThis won't work:\n\n``` json\n\"browser\": {\n  \"./lib/foo.js\": false\n}\n```\n\nIt's weird because you must do the opposite (include the `.js`) to substitute a file. Say you want to **substitute** a file that is required with `require('./lib/foo')` (note the missing `.js` extension), you must do:\n\n``` json\n\"browser\": {\n  \"./lib/foo.js\": \"./lib/browser.js\"\n}\n```\n\nThis won't work:\n\n``` json\n\"browser\": {\n  \"./lib/foo\": \"./lib/browser\"\n}\n```\n\nBrowserify 8.1.1.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1088/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1088/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1087",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1087/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1087/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1087/events",
    "html_url": "https://github.com/browserify/browserify/issues/1087",
    "id": 55260425,
    "node_id": "MDU6SXNzdWU1NTI2MDQyNQ==",
    "number": 1087,
    "title": "need a little help about \"--exclude\"",
    "user": {
      "login": "xchl",
      "id": 3870041,
      "node_id": "MDQ6VXNlcjM4NzAwNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3870041?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xchl",
      "html_url": "https://github.com/xchl",
      "followers_url": "https://api.github.com/users/xchl/followers",
      "following_url": "https://api.github.com/users/xchl/following{/other_user}",
      "gists_url": "https://api.github.com/users/xchl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xchl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xchl/subscriptions",
      "organizations_url": "https://api.github.com/users/xchl/orgs",
      "repos_url": "https://api.github.com/users/xchl/repos",
      "events_url": "https://api.github.com/users/xchl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xchl/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-01-23T09:20:36Z",
    "updated_at": "2015-01-26T01:26:30Z",
    "closed_at": "2015-01-26T01:26:30Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "sorry,my english is not good.pleases try to read.\n\n   browserify -r jquery -r iscroll > bundle.js\n\n   list.js :\n      var $ = require('jquery');\n      var iscroll = require('iscroll');\n\n```\nbrowserify list.js --exclude jquery >  ./static/list.js     //this is ok.\nbrowserify list.js --exclude jquery iscroll >  ./static/list.js     //this is not ok. it's not supported?\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1087/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1087/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1086",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1086/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1086/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1086/events",
    "html_url": "https://github.com/browserify/browserify/issues/1086",
    "id": 55217346,
    "node_id": "MDU6SXNzdWU1NTIxNzM0Ng==",
    "number": 1086,
    "title": "Exception when a valid JSON file containing U+2028 is required",
    "user": {
      "login": "Macil",
      "id": 577345,
      "node_id": "MDQ6VXNlcjU3NzM0NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/577345?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Macil",
      "html_url": "https://github.com/Macil",
      "followers_url": "https://api.github.com/users/Macil/followers",
      "following_url": "https://api.github.com/users/Macil/following{/other_user}",
      "gists_url": "https://api.github.com/users/Macil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Macil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Macil/subscriptions",
      "organizations_url": "https://api.github.com/users/Macil/orgs",
      "repos_url": "https://api.github.com/users/Macil/repos",
      "events_url": "https://api.github.com/users/Macil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Macil/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-01-22T22:19:58Z",
    "updated_at": "2015-05-11T17:42:58Z",
    "closed_at": "2015-05-11T17:34:19Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "If you try to use Browserify to build a javascript bundle that calls require() to include a JSON file that contains a U+2028 (line separator) or U+2029 (paragraph separator) character, then Browserify throws an exception.\n\nU+2028 and U+2029 characters are both valid inside strings in JSON, but not in javascript. [JSON is not perfectly a Javascript subset](http://timelessrepo.com/json-isnt-a-javascript-subset). When Browserify transforms JSON files to javascript by prepending `module.exports=`, it also needs to transform all U+2028/9 characters (which would only be present inside strings) to `\\u2028` and `\\u2029`. A well-placed `.replace(/\\u2028/g, '\\\\u2028').replace(/\\u2029/g, '\\\\u2029');` should do the trick.\n\nHere's an example repo showing the issue: https://github.com/AgentME/br-json-test\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1086/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1086/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1085",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1085/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1085/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1085/events",
    "html_url": "https://github.com/browserify/browserify/issues/1085",
    "id": 55183345,
    "node_id": "MDU6SXNzdWU1NTE4MzM0NQ==",
    "number": 1085,
    "title": "npm required modules not found on windows",
    "user": {
      "login": "mwilc0x",
      "id": 161528,
      "node_id": "MDQ6VXNlcjE2MTUyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/161528?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mwilc0x",
      "html_url": "https://github.com/mwilc0x",
      "followers_url": "https://api.github.com/users/mwilc0x/followers",
      "following_url": "https://api.github.com/users/mwilc0x/following{/other_user}",
      "gists_url": "https://api.github.com/users/mwilc0x/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mwilc0x/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mwilc0x/subscriptions",
      "organizations_url": "https://api.github.com/users/mwilc0x/orgs",
      "repos_url": "https://api.github.com/users/mwilc0x/repos",
      "events_url": "https://api.github.com/users/mwilc0x/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mwilc0x/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-01-22T17:30:44Z",
    "updated_at": "2018-05-18T14:25:33Z",
    "closed_at": "2018-05-18T14:25:14Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi all,\n\nI am trying to bundle a simple typescript file with two npm requires using browserify w/ tsify plugin. Any help is appreciated..\n\nHere is the error I see in my bundle.js:\n\n``` javascript\n(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports)\n```\n\nIt successfully compiles the typescript, so I don't think there is an issue there. However, I see that it can't find the node_modules modules. I have browserify installed globally and the two require modules are installed on same level in node_modules from where I am running gulp file. Here is the simple typescript file and the gulp file I am trying to compile with:\n\n``` javascript\n/// <reference path='../../typings/node/node.d.ts' />\n/// <reference path='../../typings/q/Q.d.ts' />\n/// <reference path='../../typings/request/request.d.ts' />\n\nimport Q = require('q');\nimport request = require('request');\n\n\ninterface IWebAPI {\n    getData(): any;\n}\n\nexport class WebAPI {\n\n\n    constructor() {\n\n    }\n\n    getData() {\n\n    }\n\n}\n```\n\n``` javascript\n'use strict';\n\nvar browserify = require('browserify');\nvar gulp = require('gulp');\nvar source = require('vinyl-source-stream');\nvar buffer = require('vinyl-buffer');\nvar sourcemaps = require('gulp-sourcemaps');\nvar tsify = require('tsify');\n\n\ngulp.task('javascript', function () {\n\n    var bundler = browserify();\n\n    bundler.add([\n        './src/utils/web-api-utils.ts'\n    ])\n    .plugin('tsify', { noImplicitAny: false });\n\n    return rebundle();\n\n    function rebundle() {\n        return bundler.bundle()\n            .pipe(source('bundle.js'))\n            .pipe(buffer())\n            .pipe(gulp.dest('.'));\n    }\n});\n```\n\nI also tried doing the same from command line but am seeing same results:\n\n``` bash\nbrowserify ./src/utils/web-api-utils.ts -p [tsify] -o bundle.js\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1085/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1085/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1084",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1084/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1084/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1084/events",
    "html_url": "https://github.com/browserify/browserify/pull/1084",
    "id": 55178622,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjc4NTgzMTE=",
    "number": 1084,
    "title": "Update readme.markdown",
    "user": {
      "login": "amir-s",
      "id": 905963,
      "node_id": "MDQ6VXNlcjkwNTk2Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/905963?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amir-s",
      "html_url": "https://github.com/amir-s",
      "followers_url": "https://api.github.com/users/amir-s/followers",
      "following_url": "https://api.github.com/users/amir-s/following{/other_user}",
      "gists_url": "https://api.github.com/users/amir-s/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amir-s/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amir-s/subscriptions",
      "organizations_url": "https://api.github.com/users/amir-s/orgs",
      "repos_url": "https://api.github.com/users/amir-s/repos",
      "events_url": "https://api.github.com/users/amir-s/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amir-s/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-01-22T16:57:55Z",
    "updated_at": "2015-02-21T00:39:29Z",
    "closed_at": "2015-02-21T00:39:29Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/1084",
      "html_url": "https://github.com/browserify/browserify/pull/1084",
      "diff_url": "https://github.com/browserify/browserify/pull/1084.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/1084.patch",
      "merged_at": "2015-02-21T00:39:29Z"
    },
    "body": "The `s` in `require()s` should be outside of the backticks! `require('something')s;` throws an exception of `SyntaxError: Unexpected identifier` :trollface: \n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1084/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1084/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1083",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1083/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1083/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1083/events",
    "html_url": "https://github.com/browserify/browserify/issues/1083",
    "id": 55085825,
    "node_id": "MDU6SXNzdWU1NTA4NTgyNQ==",
    "number": 1083,
    "title": "Error message should indicate which file triggered the error",
    "user": {
      "login": "cowwoc",
      "id": 633348,
      "node_id": "MDQ6VXNlcjYzMzM0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/633348?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cowwoc",
      "html_url": "https://github.com/cowwoc",
      "followers_url": "https://api.github.com/users/cowwoc/followers",
      "following_url": "https://api.github.com/users/cowwoc/following{/other_user}",
      "gists_url": "https://api.github.com/users/cowwoc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cowwoc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cowwoc/subscriptions",
      "organizations_url": "https://api.github.com/users/cowwoc/orgs",
      "repos_url": "https://api.github.com/users/cowwoc/repos",
      "events_url": "https://api.github.com/users/cowwoc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cowwoc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2015-01-21T22:18:28Z",
    "updated_at": "2020-08-07T08:18:34Z",
    "closed_at": "2020-08-07T08:18:34Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am getting this error message when running browserify:\n\n`Cannot find module 'domReady' from 'C:\\Users\\Gili\\Documents\\foo\\frontend\\src\\main\\webapp\\com\\foo\\frontend\\page'`\n\nMeaning, if file X invokes `require('domReady')` while fails to resolve, I am expecting the error message to contain the absolute path to X. Otherwise, these errors are very difficult to resolve (since `domReady` is referenced many times by different files).\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1083/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1083/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1082",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1082/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1082/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1082/events",
    "html_url": "https://github.com/browserify/browserify/pull/1082",
    "id": 55080978,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjc3OTcyODg=",
    "number": 1082,
    "title": "Remove broken link to doc/changelog",
    "user": {
      "login": "nikolas",
      "id": 59292,
      "node_id": "MDQ6VXNlcjU5Mjky",
      "avatar_url": "https://avatars.githubusercontent.com/u/59292?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nikolas",
      "html_url": "https://github.com/nikolas",
      "followers_url": "https://api.github.com/users/nikolas/followers",
      "following_url": "https://api.github.com/users/nikolas/following{/other_user}",
      "gists_url": "https://api.github.com/users/nikolas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nikolas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nikolas/subscriptions",
      "organizations_url": "https://api.github.com/users/nikolas/orgs",
      "repos_url": "https://api.github.com/users/nikolas/repos",
      "events_url": "https://api.github.com/users/nikolas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nikolas/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-01-21T21:39:48Z",
    "updated_at": "2015-01-21T22:53:01Z",
    "closed_at": "2015-01-21T22:01:11Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/1082",
      "html_url": "https://github.com/browserify/browserify/pull/1082",
      "diff_url": "https://github.com/browserify/browserify/pull/1082.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/1082.patch",
      "merged_at": "2015-01-21T22:01:11Z"
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1082/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1082/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1081",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1081/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1081/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1081/events",
    "html_url": "https://github.com/browserify/browserify/issues/1081",
    "id": 55014300,
    "node_id": "MDU6SXNzdWU1NTAxNDMwMA==",
    "number": 1081,
    "title": "require() doesn't use \"node_modules\" when the code comes from a stream",
    "user": {
      "login": "cecilemuller",
      "id": 681420,
      "node_id": "MDQ6VXNlcjY4MTQyMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/681420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cecilemuller",
      "html_url": "https://github.com/cecilemuller",
      "followers_url": "https://api.github.com/users/cecilemuller/followers",
      "following_url": "https://api.github.com/users/cecilemuller/following{/other_user}",
      "gists_url": "https://api.github.com/users/cecilemuller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cecilemuller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cecilemuller/subscriptions",
      "organizations_url": "https://api.github.com/users/cecilemuller/orgs",
      "repos_url": "https://api.github.com/users/cecilemuller/repos",
      "events_url": "https://api.github.com/users/cecilemuller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cecilemuller/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-01-21T12:50:39Z",
    "updated_at": "2018-05-18T14:31:05Z",
    "closed_at": "2018-05-18T14:31:05Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In the following example, it cannot find finds the module using `require('local-module')` whereas `require('./node_modules/local-module/index.js')` works fine.\n\nWhen the same code is in a real file (`entry-point-to-get-rid-of.js`), it finds the module in both cases.\n\n```\n|-- run.js\n|\n|-- src\n    |\n    |-- testapp\n        |\n        |--entry-point-to-get-rid-of.js\n        |\n        |-- node_modules\n            |\n            |-- local-module\n                |\n                |-- index.js\n```\n\n---\n\n**/src/testapp/node-modules/local-module/index.js**\n\n``` javascript\nmodule.exports = {hello: 'LOCAL'};\n```\n\n---\n\n**/src/testapp/entry-point-to-get-rid-of.js**\n\n``` javascript\nvar mymodule = require('local-module');\nconsole.log('mymodule.hello= ' + mymodule.hello);\n```\n\n---\n\n**/run.js**\n\n``` javascript\nvar browserify = require('browserify');\nvar Readable = require('stream').Readable;\n\nvar code = [\n    //'var mymodule = require(\"./node_modules/local-module/index.js\");', //works\n    'var mymodule = require(\"local-module\");', //doesn't work\n    'console.log(\"mymodule.hello= \" + mymodule.hello);'\n].join('\\n');\n\nvar codeStream = new Readable();\ncodeStream.push(code);\ncodeStream.push(null);\n\nbrowserify({\n    debug: false,\n    basedir: __dirname\n})\n//.require('./src/testapp/entry-point-to-get-rid-of.js', {entry: true})\n.require(codeStream, {file: './src/testapp/fake.js', entry: true})\n.bundle()\n.on('error', function(err){\n    'use strict';\n    console.log(err);\n})\n.pipe(process.stdout);\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1081/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1081/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1080",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1080/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1080/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1080/events",
    "html_url": "https://github.com/browserify/browserify/issues/1080",
    "id": 54922887,
    "node_id": "MDU6SXNzdWU1NDkyMjg4Nw==",
    "number": 1080,
    "title": "Modules executed exactly once.",
    "user": {
      "login": "AWinterman",
      "id": 524923,
      "node_id": "MDQ6VXNlcjUyNDkyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/524923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AWinterman",
      "html_url": "https://github.com/AWinterman",
      "followers_url": "https://api.github.com/users/AWinterman/followers",
      "following_url": "https://api.github.com/users/AWinterman/following{/other_user}",
      "gists_url": "https://api.github.com/users/AWinterman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AWinterman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AWinterman/subscriptions",
      "organizations_url": "https://api.github.com/users/AWinterman/orgs",
      "repos_url": "https://api.github.com/users/AWinterman/repos",
      "events_url": "https://api.github.com/users/AWinterman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AWinterman/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-01-20T18:51:25Z",
    "updated_at": "2015-01-20T19:00:39Z",
    "closed_at": "2015-01-20T19:00:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": " A minimal example is available [here](https://gist.github.com/AWinterman/3b167a609877c32d1213). Steps to reproduce:\n\n```\ngit clone https://gist.github.com/3b167a609877c32d1213.git example\ncd example\nnpm i\nnpm start\n```\n\nThis is fine most of the time, but I've been writing tape tests for a client-side application, browserifying them, and finding that some modules are impossible to clean up due to side-effects that are executed on require. These modules aren't written well, but I don't really have a lot of choice in that matter.\n\nI think this is a bug, because it dramatically differs from how node handles `require`s.\n\nFor our use case, each module should be executed each time it is required, as happens in node.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1080/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1080/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1079",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1079/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1079/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1079/events",
    "html_url": "https://github.com/browserify/browserify/pull/1079",
    "id": 54786237,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjc2MTk4OTE=",
    "number": 1079,
    "title": "Add pendReady() to factor out repetitive code and facilitate use of the mechanism in plugins",
    "user": {
      "login": "jmm",
      "id": 129203,
      "node_id": "MDQ6VXNlcjEyOTIwMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129203?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmm",
      "html_url": "https://github.com/jmm",
      "followers_url": "https://api.github.com/users/jmm/followers",
      "following_url": "https://api.github.com/users/jmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmm/subscriptions",
      "organizations_url": "https://api.github.com/users/jmm/orgs",
      "repos_url": "https://api.github.com/users/jmm/repos",
      "events_url": "https://api.github.com/users/jmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-01-19T16:45:42Z",
    "updated_at": "2017-04-12T13:16:04Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/1079",
      "html_url": "https://github.com/browserify/browserify/pull/1079",
      "diff_url": "https://github.com/browserify/browserify/pull/1079.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/1079.patch",
      "merged_at": null
    },
    "body": "This is a proposal to factor out this pattern that's used in several places into a method:\n\n``` js\nself._pending ++;\nsomethingAsync(function callback () {\n  // ...\n  if (-- self._pending === 0) self.emit('_ready');\n});\n```\n\nSo this instead:\n\n``` js\nsomethingAsync(this.pendReady(function callback () {\n  // ...\n}));\n```\n\nThe reason I didn't name the method `_pendReady` is because I want to suggest exposing / advertising it to facilitate creating plugins that need to do some kind of async setup. For example, create a plugin that needs to register a transform in a specific position, but needs to do some async setup before the transform can be invoked, e.g.:\n\n``` js\nfunction plugin (b, opts) {\n  var real_transform;\n\n  function placeholder (file) {\n    return real_transform(file);\n  }\n\n  b.transform(placeholder);\n\n  something_async(b.pendReady(function () {\n    real_transform = ...\n  }));\n}\n```\n\nIf you approve I can write some documentation.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1079/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1079/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1078",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1078/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1078/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1078/events",
    "html_url": "https://github.com/browserify/browserify/pull/1078",
    "id": 54677534,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjc1NjMxNjE=",
    "number": 1078,
    "title": "resolve exposed files with browser-resolve",
    "user": {
      "login": "omsmith",
      "id": 1127384,
      "node_id": "MDQ6VXNlcjExMjczODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1127384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/omsmith",
      "html_url": "https://github.com/omsmith",
      "followers_url": "https://api.github.com/users/omsmith/followers",
      "following_url": "https://api.github.com/users/omsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/omsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/omsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/omsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/omsmith/orgs",
      "repos_url": "https://api.github.com/users/omsmith/repos",
      "events_url": "https://api.github.com/users/omsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/omsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-01-17T22:19:11Z",
    "updated_at": "2015-02-01T15:52:45Z",
    "closed_at": "2015-02-01T15:52:45Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/1078",
      "html_url": "https://github.com/browserify/browserify/pull/1078",
      "diff_url": "https://github.com/browserify/browserify/pull/1078.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/1078.patch",
      "merged_at": null
    },
    "body": "fixes #1072 \n\nCould previously `b.require()` names from the local package.json's _browser_ entry.\n\nIf this is desired behaviour (these entries can also be `b.external()`'d.), this restores it along with a simple test.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1078/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1078/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1077",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1077/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1077/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1077/events",
    "html_url": "https://github.com/browserify/browserify/pull/1077",
    "id": 54643728,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjc1NDgyNDc=",
    "number": 1077,
    "title": "Resolve pathnames of exposed modules more efficiently.",
    "user": {
      "login": "jmm",
      "id": 129203,
      "node_id": "MDQ6VXNlcjEyOTIwMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129203?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmm",
      "html_url": "https://github.com/jmm",
      "followers_url": "https://api.github.com/users/jmm/followers",
      "following_url": "https://api.github.com/users/jmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmm/subscriptions",
      "organizations_url": "https://api.github.com/users/jmm/orgs",
      "repos_url": "https://api.github.com/users/jmm/repos",
      "events_url": "https://api.github.com/users/jmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-01-17T00:51:44Z",
    "updated_at": "2015-02-21T00:11:26Z",
    "closed_at": "2015-02-21T00:11:26Z",
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/1077",
      "html_url": "https://github.com/browserify/browserify/pull/1077",
      "diff_url": "https://github.com/browserify/browserify/pull/1077.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/1077.patch",
      "merged_at": "2015-02-21T00:11:26Z"
    },
    "body": "This is a followup to #1059. After I submitted that, I was working on an async version, which I didn't have ready yet when you pushed your async implementation, @substack. Then I realized that I don't think it's necessary to even do the resolution in browserify, because it looks like module-deps already does it, before anything else needs access to it.\n\nThis changeset relies on related changes to module-deps (substack/module-deps/pull/65).\n\nThis may have some rough edges that need to be smoothed out.\n- This currently falls down when doing:\n\n``` js\nb.require('./somefile');\n```\n\nWhereas this works:\n\n``` js\nb.require('./somefile', {expose: 'whatever'});\n```\n\nIn the former case it leads module-deps to mark the file as builtin which causes transforms not to be run on it. I didn't know that, because tests were passing. I didn't discover it until debugging #1074. One solution would be to set a different prop on the object in `b.require()`, e.g. `exposeAs` instead of `expose`, but that seems kind of silly. I haven't had the chance to do it yet, but I think it would be good to take a closer look at how module-deps is handling that scenario and see if there isn't a correction needed there.\n- Further changes may be needed to properly support external modules, but I'll need feedback on #1076 for that.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1077/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1077/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1076",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1076/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1076/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1076/events",
    "html_url": "https://github.com/browserify/browserify/issues/1076",
    "id": 54622353,
    "node_id": "MDU6SXNzdWU1NDYyMjM1Mw==",
    "number": 1076,
    "title": "b.external() role is unclear",
    "user": {
      "login": "jmm",
      "id": 129203,
      "node_id": "MDQ6VXNlcjEyOTIwMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129203?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmm",
      "html_url": "https://github.com/jmm",
      "followers_url": "https://api.github.com/users/jmm/followers",
      "following_url": "https://api.github.com/users/jmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmm/subscriptions",
      "organizations_url": "https://api.github.com/users/jmm/orgs",
      "repos_url": "https://api.github.com/users/jmm/repos",
      "events_url": "https://api.github.com/users/jmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2015-01-16T20:40:21Z",
    "updated_at": "2015-02-27T13:33:33Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "body": "The `b.external()` documentation refers to excluding _files_, but is it for:\n\nA) Registering a _string_ (module ID) that should be skipped during bundling\n\nor\n\nB) Registering a _file_ that should be excluded\n\nor\n\nC) Is it supposed to be able to differentiate between the two\n\n?\n\n(If it's `B` or `C`, I've already done a lot of work on that, so please give me the opportunity to submit a pull request.)\n\nAllow me to illustrate the difference:\n\nGiven that there is a file `/somedir/jquery.js` and this `/somedir/entry.js`:\n\n``` js\nrequire('./jquery');\n```\n\nShould `jquery.js` be in the output of the following runs of `/somedir/bundler.js`?:\n\nScenario # 1\n\n``` js\nbrowserify('./entry.js')\n  .external('./jquery')\n```\n\nIf `A` then `false`.\nIf `B` then `false`.\n\nScenario # 2\n\n``` js\nbrowserify('./entry.js')\n  .external('./jquery.js')\n```\n\nIf `A` then `true`.\nIf `B` then `false`.\n\n---\n\nAre there good use cases for doing?:\n\n``` js\n// Leading './' in expose\nbrowserify().require('whatever', {expose: './whatever'});\n\n// Leading '../' in expose\nbrowserify().require('whatever', {expose: '../whatever'});\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1076/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1076/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1075",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1075/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1075/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1075/events",
    "html_url": "https://github.com/browserify/browserify/issues/1075",
    "id": 54619942,
    "node_id": "MDU6SXNzdWU1NDYxOTk0Mg==",
    "number": 1075,
    "title": "The commondir option no longer appears to have any effect",
    "user": {
      "login": "appden",
      "id": 70904,
      "node_id": "MDQ6VXNlcjcwOTA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/70904?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/appden",
      "html_url": "https://github.com/appden",
      "followers_url": "https://api.github.com/users/appden/followers",
      "following_url": "https://api.github.com/users/appden/following{/other_user}",
      "gists_url": "https://api.github.com/users/appden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/appden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/appden/subscriptions",
      "organizations_url": "https://api.github.com/users/appden/orgs",
      "repos_url": "https://api.github.com/users/appden/repos",
      "events_url": "https://api.github.com/users/appden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/appden/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-01-16T20:15:37Z",
    "updated_at": "2017-03-19T06:53:39Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "There are references to `commondir` in the docs and in the code, but it doesn't appear to be used at all anymore.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1075/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1075/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1074",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1074/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1074/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1074/events",
    "html_url": "https://github.com/browserify/browserify/issues/1074",
    "id": 54616326,
    "node_id": "MDU6SXNzdWU1NDYxNjMyNg==",
    "number": 1074,
    "title": "Browserify 8.1.1 break require option when transform CoffeeScript",
    "user": {
      "login": "d6u",
      "id": 2153667,
      "node_id": "MDQ6VXNlcjIxNTM2Njc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2153667?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/d6u",
      "html_url": "https://github.com/d6u",
      "followers_url": "https://api.github.com/users/d6u/followers",
      "following_url": "https://api.github.com/users/d6u/following{/other_user}",
      "gists_url": "https://api.github.com/users/d6u/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/d6u/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/d6u/subscriptions",
      "organizations_url": "https://api.github.com/users/d6u/orgs",
      "repos_url": "https://api.github.com/users/d6u/repos",
      "events_url": "https://api.github.com/users/d6u/events{/privacy}",
      "received_events_url": "https://api.github.com/users/d6u/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2015-01-16T19:43:16Z",
    "updated_at": "2015-03-17T14:56:06Z",
    "closed_at": "2015-03-17T14:56:06Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In short, if you use `coffeeify` transform and `require` option together, you have module not found error for required modules. The `extensions` option doesn't help browserify to find `.coffee` files. \n\nOne solution is that you have to specify `.coffee` when you `bundle.require()` something, which makes external requires works like `require('./file.coffee')`, where we supposed to write `require('./file')`.\n\nExample: https://github.com/daiweilu/browserify-coffeeify-broken-require\n\nRun `gulp bundle:coffee`, open `./dist/index.html`, and see everything has to be appended with `.coffee`.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1074/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1074/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1073",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1073/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1073/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1073/events",
    "html_url": "https://github.com/browserify/browserify/issues/1073",
    "id": 54591681,
    "node_id": "MDU6SXNzdWU1NDU5MTY4MQ==",
    "number": 1073,
    "title": "Provide a way to build standalone bundles without UMD",
    "user": {
      "login": "3rd-Eden",
      "id": 28071,
      "node_id": "MDQ6VXNlcjI4MDcx",
      "avatar_url": "https://avatars.githubusercontent.com/u/28071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3rd-Eden",
      "html_url": "https://github.com/3rd-Eden",
      "followers_url": "https://api.github.com/users/3rd-Eden/followers",
      "following_url": "https://api.github.com/users/3rd-Eden/following{/other_user}",
      "gists_url": "https://api.github.com/users/3rd-Eden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3rd-Eden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3rd-Eden/subscriptions",
      "organizations_url": "https://api.github.com/users/3rd-Eden/orgs",
      "repos_url": "https://api.github.com/users/3rd-Eden/repos",
      "events_url": "https://api.github.com/users/3rd-Eden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3rd-Eden/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2015-01-16T16:04:01Z",
    "updated_at": "2015-12-12T02:03:48Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Currently the `--standalone` flag wraps the whole code in a silly UMD wrapper.  This isn't really helpful if you just want the standalone to register it self always as global. There should be away to turn UMD off, or provide your own template instead. \n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1073/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1073/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1072",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1072/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1072/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1072/events",
    "html_url": "https://github.com/browserify/browserify/issues/1072",
    "id": 54581610,
    "node_id": "MDU6SXNzdWU1NDU4MTYxMA==",
    "number": 1072,
    "title": "8.1.1 fails to resolve modules from \"browser\" field",
    "user": {
      "login": "omsmith",
      "id": 1127384,
      "node_id": "MDQ6VXNlcjExMjczODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1127384?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/omsmith",
      "html_url": "https://github.com/omsmith",
      "followers_url": "https://api.github.com/users/omsmith/followers",
      "following_url": "https://api.github.com/users/omsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/omsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/omsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/omsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/omsmith/orgs",
      "repos_url": "https://api.github.com/users/omsmith/repos",
      "events_url": "https://api.github.com/users/omsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/omsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 13,
    "created_at": "2015-01-16T14:36:42Z",
    "updated_at": "2015-02-21T01:02:16Z",
    "closed_at": "2015-02-21T00:46:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "~~Minimal reproduction: https://gist.github.com/omsmith/a6b8876a4354960a65f4~~\n\nMinimal reproduction: https://github.com/omsmith/browserify-8.1.1-resolve-issue\n\nWorks fine in 8.1.0, but as of 8.1.1 `browser` entries don't appear to be picked up\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1072/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1072/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1071",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1071/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1071/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1071/events",
    "html_url": "https://github.com/browserify/browserify/pull/1071",
    "id": 54489212,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjc0NTI3NDg=",
    "number": 1071,
    "title": "Remove redundant vars and lines.",
    "user": {
      "login": "jmm",
      "id": 129203,
      "node_id": "MDQ6VXNlcjEyOTIwMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129203?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmm",
      "html_url": "https://github.com/jmm",
      "followers_url": "https://api.github.com/users/jmm/followers",
      "following_url": "https://api.github.com/users/jmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmm/subscriptions",
      "organizations_url": "https://api.github.com/users/jmm/orgs",
      "repos_url": "https://api.github.com/users/jmm/repos",
      "events_url": "https://api.github.com/users/jmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-01-15T18:59:42Z",
    "updated_at": "2015-02-21T00:51:23Z",
    "closed_at": "2015-02-21T00:51:23Z",
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/1071",
      "html_url": "https://github.com/browserify/browserify/pull/1071",
      "diff_url": "https://github.com/browserify/browserify/pull/1071.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/1071.patch",
      "merged_at": "2015-02-21T00:51:23Z"
    },
    "body": "These variables and the lines that refer to them appear to be totally redundant. Tests pass. Goodbye `relf` and `reli`.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1071/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1071/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1070",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1070/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1070/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1070/events",
    "html_url": "https://github.com/browserify/browserify/issues/1070",
    "id": 54483036,
    "node_id": "MDU6SXNzdWU1NDQ4MzAzNg==",
    "number": 1070,
    "title": "Cannot find module '..' error with browserify -r",
    "user": {
      "login": "SystemParadox",
      "id": 1228777,
      "node_id": "MDQ6VXNlcjEyMjg3Nzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1228777?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SystemParadox",
      "html_url": "https://github.com/SystemParadox",
      "followers_url": "https://api.github.com/users/SystemParadox/followers",
      "following_url": "https://api.github.com/users/SystemParadox/following{/other_user}",
      "gists_url": "https://api.github.com/users/SystemParadox/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SystemParadox/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SystemParadox/subscriptions",
      "organizations_url": "https://api.github.com/users/SystemParadox/orgs",
      "repos_url": "https://api.github.com/users/SystemParadox/repos",
      "events_url": "https://api.github.com/users/SystemParadox/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SystemParadox/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-01-15T18:05:27Z",
    "updated_at": "2015-01-16T13:02:35Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Consider package `foo`\n\n```\n// index.js\nexports.bar = require('./lib/bar');\n```\n\n```\n// lib/bar.js\nvar foo = require('..');\n```\n\nNow, from some other directory:\n\n```\nnpm install foo\nbrowserify -r foo -o test.js\n# lazy way to trigger module load\necho 'require(\"foo\");' >> test.js\nnode test.js\n```\n\n```\nError: Cannot find module '..'\n```\n\nIs it possible to fix this?\n\nThanks.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1070/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1070/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1069",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1069/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1069/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1069/events",
    "html_url": "https://github.com/browserify/browserify/issues/1069",
    "id": 54479790,
    "node_id": "MDU6SXNzdWU1NDQ3OTc5MA==",
    "number": 1069,
    "title": "Where's the license?",
    "user": {
      "login": "jmm",
      "id": 129203,
      "node_id": "MDQ6VXNlcjEyOTIwMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129203?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmm",
      "html_url": "https://github.com/jmm",
      "followers_url": "https://api.github.com/users/jmm/followers",
      "following_url": "https://api.github.com/users/jmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmm/subscriptions",
      "organizations_url": "https://api.github.com/users/jmm/orgs",
      "repos_url": "https://api.github.com/users/jmm/repos",
      "events_url": "https://api.github.com/users/jmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-01-15T17:37:54Z",
    "updated_at": "2018-02-08T08:42:45Z",
    "closed_at": "2018-02-08T08:42:45Z",
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "body": "This [LICENSE](https://github.com/substack/node-browserify/commits/3ecfb63df819aa1b7704f61bdaab5bdd68314ff1/LICENSE) file feels like it's missing something...like the copyright and license for browserify itself. (I'm aware of what the readme says about the license.)\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1069/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1069/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1068",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1068/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1068/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1068/events",
    "html_url": "https://github.com/browserify/browserify/issues/1068",
    "id": 54346696,
    "node_id": "MDU6SXNzdWU1NDM0NjY5Ng==",
    "number": 1068,
    "title": "Browserify generates invalid standalone bundles for modules with circular dependencies",
    "user": {
      "login": "nylen",
      "id": 227022,
      "node_id": "MDQ6VXNlcjIyNzAyMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/227022?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nylen",
      "html_url": "https://github.com/nylen",
      "followers_url": "https://api.github.com/users/nylen/followers",
      "following_url": "https://api.github.com/users/nylen/following{/other_user}",
      "gists_url": "https://api.github.com/users/nylen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nylen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nylen/subscriptions",
      "organizations_url": "https://api.github.com/users/nylen/orgs",
      "repos_url": "https://api.github.com/users/nylen/repos",
      "events_url": "https://api.github.com/users/nylen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nylen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 203859537,
        "node_id": "MDU6TGFiZWwyMDM4NTk1Mzc=",
        "url": "https://api.github.com/repos/browserify/browserify/labels/bug",
        "name": "bug",
        "color": "C40233",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2015-01-14T16:57:19Z",
    "updated_at": "2018-02-21T15:17:39Z",
    "closed_at": "2018-02-21T15:17:38Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When bundling a module that contains circular dependencies as a standalone bundle, `browserify` appears to succeed, but generates an invalid bundle which produces the following error upon running:\n\n```\nUncaught Error: Cannot find module './index'\n```\n\nI've set up a repository to reproduce the bug at https://github.com/nylen/browserify-bug, here are the repro steps:\n\n``` sh\ngit clone https://github.com/nylen/browserify-bug.git\ncd browserify-bug\nnpm install\nnode do-browserify.js\n```\n\nHere is the `test` module setup that fails:\n- `test/index.js` requires `test/step1.js`\n- `test/step1.js` requires `test/index.js` as `require('./index')` (this fails)\n\nRunning `browserify` from the command line generates slightly different bundles, but with the same error:\n\n``` sh\nbrowserify -r test -o bundle.js -s test\nnode bundle.js # fails\n```\n\nMaking the module either not standalone or specifying the filename succeeds, but I wasn't able to get similar JS code to succeed:\n\n``` sh\nbrowserify -r test -o bundle.js\nnode bundle.js # works fine\n\nbrowserify node_modules/test/index.js -o bundle.js -s test\nnode bundle.js # works fine\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1068/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1068/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1067",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1067/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1067/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1067/events",
    "html_url": "https://github.com/browserify/browserify/issues/1067",
    "id": 54144610,
    "node_id": "MDU6SXNzdWU1NDE0NDYxMA==",
    "number": 1067,
    "title": "bundle.js include system path",
    "user": {
      "login": "al002",
      "id": 1555320,
      "node_id": "MDQ6VXNlcjE1NTUzMjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1555320?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/al002",
      "html_url": "https://github.com/al002",
      "followers_url": "https://api.github.com/users/al002/followers",
      "following_url": "https://api.github.com/users/al002/following{/other_user}",
      "gists_url": "https://api.github.com/users/al002/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/al002/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/al002/subscriptions",
      "organizations_url": "https://api.github.com/users/al002/orgs",
      "repos_url": "https://api.github.com/users/al002/repos",
      "events_url": "https://api.github.com/users/al002/events{/privacy}",
      "received_events_url": "https://api.github.com/users/al002/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-01-13T02:47:45Z",
    "updated_at": "2015-01-13T06:09:46Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "this is my code:\n\n``` javascript\n\nvar test_bundler = watchify(browserify({\n    entries: ['./common_web.js'],\n    debug: true\n}, watchify.args));\n\nfunction test_bundle() {\n    return test_bundler\n        .bundle()\n        .pipe(source('bundle.js'))\n        .pipe(buffer())\n        .pipe(rename('build_source.js'))\n        .pipe(gulp.dest('./public/browserifytest/'))\n}\n\ntest_bundler.on('update', test_bundle);\n\ntest_bundle();\n\n\noutput:\n\n\"./__common.js\":\"D:\\\\FILE\\\\site\\\\somepath\\\\__common.js\"}],\"D:\\\\FILE\\\\site\\\\somepath\\\\common.js\"\n\n\ncommon_web.js: \nvar Common = require('./common.js');\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1067/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1067/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1066",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1066/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1066/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1066/events",
    "html_url": "https://github.com/browserify/browserify/issues/1066",
    "id": 53983829,
    "node_id": "MDU6SXNzdWU1Mzk4MzgyOQ==",
    "number": 1066,
    "title": "browserify packages",
    "user": {
      "login": "zwhitchcox",
      "id": 4328800,
      "node_id": "MDQ6VXNlcjQzMjg4MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4328800?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zwhitchcox",
      "html_url": "https://github.com/zwhitchcox",
      "followers_url": "https://api.github.com/users/zwhitchcox/followers",
      "following_url": "https://api.github.com/users/zwhitchcox/following{/other_user}",
      "gists_url": "https://api.github.com/users/zwhitchcox/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zwhitchcox/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zwhitchcox/subscriptions",
      "organizations_url": "https://api.github.com/users/zwhitchcox/orgs",
      "repos_url": "https://api.github.com/users/zwhitchcox/repos",
      "events_url": "https://api.github.com/users/zwhitchcox/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zwhitchcox/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-01-11T06:36:06Z",
    "updated_at": "2015-01-11T22:13:24Z",
    "closed_at": "2015-01-11T22:13:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Can we create our own browserify packages for the project?\n\nI have a really good one I would like to add.\n\nAnd it's only for the browser, not for the server.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1066/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1066/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1065",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1065/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1065/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1065/events",
    "html_url": "https://github.com/browserify/browserify/issues/1065",
    "id": 53949251,
    "node_id": "MDU6SXNzdWU1Mzk0OTI1MQ==",
    "number": 1065,
    "title": "browser wildcards",
    "user": {
      "login": "justinbmeyer",
      "id": 78602,
      "node_id": "MDQ6VXNlcjc4NjAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/78602?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/justinbmeyer",
      "html_url": "https://github.com/justinbmeyer",
      "followers_url": "https://api.github.com/users/justinbmeyer/followers",
      "following_url": "https://api.github.com/users/justinbmeyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/justinbmeyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/justinbmeyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/justinbmeyer/subscriptions",
      "organizations_url": "https://api.github.com/users/justinbmeyer/orgs",
      "repos_url": "https://api.github.com/users/justinbmeyer/repos",
      "events_url": "https://api.github.com/users/justinbmeyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/justinbmeyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-01-10T06:50:22Z",
    "updated_at": "2015-01-10T16:31:15Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Would you consider adding browser support for mapping folders.  It could work similar to wildcards in RequireJS's map:\n\nFor example:\n\n``` js\n{\n  browser: {\n    \"node/*\" : \"browser/*\"\n  }\n}\n```\n\nThis would make every module request within the `node` folder be mapped to the `browser/` folder.\n\nThis would be very nice for \"frameworks\", authored in AMD, that would like to be CJS required like:\n\n``` js\nvar Control = require(\"can/control\"),\n  Component = require(\"can/component\")\n```\n\nAnd have a commonjs build in a `dist` folder.  Browser could support the following:\n\n``` js\n{\n  browser: {\n    \"*\" : \"dist/cjs/*\"\n  }\n}\n```\n\nThanks for your consideration.  I'm happy to implement this if you like it.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1065/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1065/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1064",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1064/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1064/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1064/events",
    "html_url": "https://github.com/browserify/browserify/issues/1064",
    "id": 53917214,
    "node_id": "MDU6SXNzdWU1MzkxNzIxNA==",
    "number": 1064,
    "title": "dedupe fails when insertGlobals is true",
    "user": {
      "login": "idris",
      "id": 13989,
      "node_id": "MDQ6VXNlcjEzOTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/13989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/idris",
      "html_url": "https://github.com/idris",
      "followers_url": "https://api.github.com/users/idris/followers",
      "following_url": "https://api.github.com/users/idris/following{/other_user}",
      "gists_url": "https://api.github.com/users/idris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/idris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/idris/subscriptions",
      "organizations_url": "https://api.github.com/users/idris/orgs",
      "repos_url": "https://api.github.com/users/idris/repos",
      "events_url": "https://api.github.com/users/idris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/idris/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-01-09T21:30:44Z",
    "updated_at": "2018-05-18T14:17:35Z",
    "closed_at": "2018-05-18T14:17:35Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I think the test case below properly represents the failure. I just copied the test from [dedup-deps.js](https://github.com/substack/node-browserify/blob/3ecfb63df819aa1b7704f61bdaab5bdd68314ff1/test/dedupe-deps.js) and set `{insertGlobals: true}` when calling browserify.\n\n``` js\ntest('identical content gets deduped with insertGlobals', function (t) {\n    t.plan(1)\n\n    var rows = [];\n    browserify({insertGlobals: true})\n    .on('dep', [].push.bind(rows))\n    .require(require.resolve('./dup'), { entry: true })\n    .bundle(check);\n\n    function check(err, src) {\n        if (err) return t.fail(err);\n        var deduped = rows.filter(function (x) { return x.dedupe });\n        var d = deduped[0];\n\n        t.deepEqual(\n            d.source,\n            'arguments[4]['+ JSON.stringify(d.dedupe) + '][0]'\n            + '.apply(exports,arguments)',\n            \"dedupes content\"\n        );\n    }\n})\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1064/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1064/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1063",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1063/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1063/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1063/events",
    "html_url": "https://github.com/browserify/browserify/issues/1063",
    "id": 53873428,
    "node_id": "MDU6SXNzdWU1Mzg3MzQyOA==",
    "number": 1063,
    "title": "Modules are executed multiple times when using symlinks in node_modules",
    "user": {
      "login": "esamattis",
      "id": 225712,
      "node_id": "MDQ6VXNlcjIyNTcxMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/225712?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/esamattis",
      "html_url": "https://github.com/esamattis",
      "followers_url": "https://api.github.com/users/esamattis/followers",
      "following_url": "https://api.github.com/users/esamattis/following{/other_user}",
      "gists_url": "https://api.github.com/users/esamattis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/esamattis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/esamattis/subscriptions",
      "organizations_url": "https://api.github.com/users/esamattis/orgs",
      "repos_url": "https://api.github.com/users/esamattis/repos",
      "events_url": "https://api.github.com/users/esamattis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/esamattis/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 12,
    "created_at": "2015-01-09T14:34:44Z",
    "updated_at": "2015-07-09T23:07:06Z",
    "closed_at": "2015-07-09T23:07:06Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "I have following symlink in my project\n\n```\nln -sf .. node_modules/app\n```\n\nand I require modules like this\n\n``` js\nvar config = require(\"app/config\");\n```\n\netc.\n\nbut in this case the config module is executed multiple times when it is required from different js files.\n\nHere's smallest possible example reproducing this https://github.com/epeli/browserify-bug\n\nThis bug was introduced in the 8.0.0 release.\n## \n\nThe symlink idea is from the browserify handbook https://github.com/substack/browserify-handbook#symlink\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1063/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1063/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1062",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1062/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1062/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1062/events",
    "html_url": "https://github.com/browserify/browserify/issues/1062",
    "id": 53865235,
    "node_id": "MDU6SXNzdWU1Mzg2NTIzNQ==",
    "number": 1062,
    "title": "\"browser\" field is ignored when in dependencies",
    "user": {
      "login": "ibc",
      "id": 16191,
      "node_id": "MDQ6VXNlcjE2MTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/16191?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ibc",
      "html_url": "https://github.com/ibc",
      "followers_url": "https://api.github.com/users/ibc/followers",
      "following_url": "https://api.github.com/users/ibc/following{/other_user}",
      "gists_url": "https://api.github.com/users/ibc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ibc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ibc/subscriptions",
      "organizations_url": "https://api.github.com/users/ibc/orgs",
      "repos_url": "https://api.github.com/users/ibc/repos",
      "events_url": "https://api.github.com/users/ibc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ibc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2015-01-09T12:57:39Z",
    "updated_at": "2015-01-09T15:47:47Z",
    "closed_at": "2015-01-09T15:47:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I've a Node library \"foo\" that uses the `browser` field in `package.json`:\n\n```\n\"browser\": {\n    \"./lib/version.js\": \"./lib/version.browser.js\"\n},\n```\n\nIt does work when I run `browserify` against the \"foo\" library itself.\n\nHowever when I add such a \"foo\" library as dependency in another Node project and run `browserify` (8.1.0), it does not load \"./lib/version.browser.js\" but \"./lib/version.js\".\n\nIs this a known issue?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1062/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1062/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1061",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1061/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1061/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1061/events",
    "html_url": "https://github.com/browserify/browserify/issues/1061",
    "id": 53820111,
    "node_id": "MDU6SXNzdWU1MzgyMDExMQ==",
    "number": 1061,
    "title": "Rename debug option",
    "user": {
      "login": "tjconcept",
      "id": 801895,
      "node_id": "MDQ6VXNlcjgwMTg5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/801895?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tjconcept",
      "html_url": "https://github.com/tjconcept",
      "followers_url": "https://api.github.com/users/tjconcept/followers",
      "following_url": "https://api.github.com/users/tjconcept/following{/other_user}",
      "gists_url": "https://api.github.com/users/tjconcept/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tjconcept/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tjconcept/subscriptions",
      "organizations_url": "https://api.github.com/users/tjconcept/orgs",
      "repos_url": "https://api.github.com/users/tjconcept/repos",
      "events_url": "https://api.github.com/users/tjconcept/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tjconcept/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 203859466,
        "node_id": "MDU6TGFiZWwyMDM4NTk0NjY=",
        "url": "https://api.github.com/repos/browserify/browserify/labels/feature-request",
        "name": "feature-request",
        "color": "ACE1AF",
        "default": false,
        "description": null
      },
      {
        "id": 203861840,
        "node_id": "MDU6TGFiZWwyMDM4NjE4NDA=",
        "url": "https://api.github.com/repos/browserify/browserify/labels/patch-welcome",
        "name": "patch-welcome",
        "color": "e102d8",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-01-09T00:34:28Z",
    "updated_at": "2020-01-16T21:18:12Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This is my subjective opinion and I might as well be wrong, but I really don't like option names like \"debug\".\n- it says little/nothing about actual effect\n- it forces you to lookup the option in the documentation\n- it can be very subjective - I might not like the same things during debug as someone else\n\nApparently the only effect in browserify is to enable source maps - then why not name it \"sourceMaps\" or similar? I keep thinking it might be doing something else, or that some transforms use it for something that they didn't document properly. It feels too implicit.\n\nWhat do you think?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1061/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1061/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1060",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1060/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1060/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1060/events",
    "html_url": "https://github.com/browserify/browserify/issues/1060",
    "id": 53814720,
    "node_id": "MDU6SXNzdWU1MzgxNDcyMA==",
    "number": 1060,
    "title": "Uncaught Error: Cannot find module 'buffer'",
    "user": {
      "login": "jmm",
      "id": 129203,
      "node_id": "MDQ6VXNlcjEyOTIwMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129203?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmm",
      "html_url": "https://github.com/jmm",
      "followers_url": "https://api.github.com/users/jmm/followers",
      "following_url": "https://api.github.com/users/jmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmm/subscriptions",
      "organizations_url": "https://api.github.com/users/jmm/orgs",
      "repos_url": "https://api.github.com/users/jmm/repos",
      "events_url": "https://api.github.com/users/jmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2015-01-08T23:21:32Z",
    "updated_at": "2020-07-06T20:23:58Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "body": "With browserify 8.0.3, using the following 2 options together results in error when the bundle is executed (in Chrome 36 anyway).\n\n``` js\nvar b = browserify('./a', {\n  insertGlobals: true,\n  bundleExternal: false,\n})\n  .bundle()\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1060/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1060/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1059",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1059/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1059/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1059/events",
    "html_url": "https://github.com/browserify/browserify/pull/1059",
    "id": 53805164,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjcwNjI0MjU=",
    "number": 1059,
    "title": "Properly resolve absolute path of exposed module.",
    "user": {
      "login": "jmm",
      "id": 129203,
      "node_id": "MDQ6VXNlcjEyOTIwMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129203?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmm",
      "html_url": "https://github.com/jmm",
      "followers_url": "https://api.github.com/users/jmm/followers",
      "following_url": "https://api.github.com/users/jmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmm/subscriptions",
      "organizations_url": "https://api.github.com/users/jmm/orgs",
      "repos_url": "https://api.github.com/users/jmm/repos",
      "events_url": "https://api.github.com/users/jmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-01-08T21:46:22Z",
    "updated_at": "2015-01-15T21:06:48Z",
    "closed_at": "2015-01-15T20:15:48Z",
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/1059",
      "html_url": "https://github.com/browserify/browserify/pull/1059",
      "diff_url": "https://github.com/browserify/browserify/pull/1059.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/1059.patch",
      "merged_at": null
    },
    "body": "The change in #1033 is flawed. And the test coverage for requires is inadequate.\n\nSee #1039 (part 1). A broken bundle is generated when doing something like...\n\n``` js\n// bundle.js\nbrowserify('./src/a')\n  .require('./src/b');\n\n// src/a.js\nrequire('./b');\n\n// src/b.js\n// I'm the file being required\n```\n\n...because the code in #1033 essentially does...\n\n``` js\nthis._expose[row.id] = '/somedir/src/b';\n```\n\n...which leads to a mismatch here...\n\nhttps://github.com/substack/deps-sort/blob/c61e515015a0f8392c1b07530877084b6c411cb7/index.js#L72\n\n...because there should be an entry `index['/somedir/src/b.js']`, but instead there's `index['/somedir/src/b']`.\n\nI'm not 100% sure this pull request completely and correctly solves the problem for all cases, but it does solve it for the scenario in #1039 and is a step in the right direction. That this apparently used to work (according to @gasi in #1033) and that #1033 was merged as a fix underscores the need for better and more comprehensive tests around this functionality.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1059/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1059/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1058",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1058/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1058/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1058/events",
    "html_url": "https://github.com/browserify/browserify/issues/1058",
    "id": 53778196,
    "node_id": "MDU6SXNzdWU1Mzc3ODE5Ng==",
    "number": 1058,
    "title": "Sourcemaps don't map correctly if sources use existing sourcemaps with multiple sources",
    "user": {
      "login": "brenmar",
      "id": 1620607,
      "node_id": "MDQ6VXNlcjE2MjA2MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1620607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brenmar",
      "html_url": "https://github.com/brenmar",
      "followers_url": "https://api.github.com/users/brenmar/followers",
      "following_url": "https://api.github.com/users/brenmar/following{/other_user}",
      "gists_url": "https://api.github.com/users/brenmar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brenmar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brenmar/subscriptions",
      "organizations_url": "https://api.github.com/users/brenmar/orgs",
      "repos_url": "https://api.github.com/users/brenmar/repos",
      "events_url": "https://api.github.com/users/brenmar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brenmar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-01-08T17:38:49Z",
    "updated_at": "2015-01-16T18:22:09Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "If sourcemaps (inlined and with contentSources) contain multiple sources (i.e. the files were combined or compiled from multiple source files) the resulting browserified sourcemaps are broken.\n\nIt appears that only the first source of each map is carried over and all mappings map back to the first source of the original sourcemapped file.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1058/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1058/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1057",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1057/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1057/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1057/events",
    "html_url": "https://github.com/browserify/browserify/pull/1057",
    "id": 53663702,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjY5NzYyNTM=",
    "number": 1057,
    "title": "Remove redundant conditional assignment.",
    "user": {
      "login": "jmm",
      "id": 129203,
      "node_id": "MDQ6VXNlcjEyOTIwMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129203?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmm",
      "html_url": "https://github.com/jmm",
      "followers_url": "https://api.github.com/users/jmm/followers",
      "following_url": "https://api.github.com/users/jmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmm/subscriptions",
      "organizations_url": "https://api.github.com/users/jmm/orgs",
      "repos_url": "https://api.github.com/users/jmm/repos",
      "events_url": "https://api.github.com/users/jmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 21,
    "created_at": "2015-01-07T18:21:06Z",
    "updated_at": "2015-05-13T20:01:40Z",
    "closed_at": "2015-05-12T21:46:00Z",
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/1057",
      "html_url": "https://github.com/browserify/browserify/pull/1057",
      "diff_url": "https://github.com/browserify/browserify/pull/1057.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/1057.patch",
      "merged_at": null
    },
    "body": "This conditional assignment appears to serve no purpose. Is it perhaps supposed to be `if (opts.transform === false) rec.transform = false;` like for the `! isStream(file)` code path later in the function? After either changing it to that or deleting it, all tests still pass and I'm not familiar enough with browserify's internals to know what role those properties are supposed to play (I just noticed the line while debugging something else).\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1057/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1057/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1056",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1056/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1056/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1056/events",
    "html_url": "https://github.com/browserify/browserify/issues/1056",
    "id": 53587343,
    "node_id": "MDU6SXNzdWU1MzU4NzM0Mw==",
    "number": 1056,
    "title": "Unresolved files do not generate error messages (windows)",
    "user": {
      "login": "ScottWeinstein",
      "id": 263024,
      "node_id": "MDQ6VXNlcjI2MzAyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/263024?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ScottWeinstein",
      "html_url": "https://github.com/ScottWeinstein",
      "followers_url": "https://api.github.com/users/ScottWeinstein/followers",
      "following_url": "https://api.github.com/users/ScottWeinstein/following{/other_user}",
      "gists_url": "https://api.github.com/users/ScottWeinstein/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ScottWeinstein/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ScottWeinstein/subscriptions",
      "organizations_url": "https://api.github.com/users/ScottWeinstein/orgs",
      "repos_url": "https://api.github.com/users/ScottWeinstein/repos",
      "events_url": "https://api.github.com/users/ScottWeinstein/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ScottWeinstein/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-01-07T01:39:05Z",
    "updated_at": "2015-01-07T01:39:05Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Example of lack of errors at [browserify-shim-jquery-jgrowl-issue](https://github.com/ScottWeinstein/browserify-shim-jquery-jgrowl-issue) the alias in the `browser` section are missing the .js extention. My understanding from this [thread](https://github.com/thlorenz/browserify-shim/issues/124) is that there should be an `ENOENT` error. On windows machines this doesn't happen.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1056/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1056/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1055",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1055/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1055/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1055/events",
    "html_url": "https://github.com/browserify/browserify/pull/1055",
    "id": 53578139,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjY5MjcxNDQ=",
    "number": 1055,
    "title": "Issue #968 Fix",
    "user": {
      "login": "SinisterMinister",
      "id": 800441,
      "node_id": "MDQ6VXNlcjgwMDQ0MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/800441?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SinisterMinister",
      "html_url": "https://github.com/SinisterMinister",
      "followers_url": "https://api.github.com/users/SinisterMinister/followers",
      "following_url": "https://api.github.com/users/SinisterMinister/following{/other_user}",
      "gists_url": "https://api.github.com/users/SinisterMinister/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SinisterMinister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SinisterMinister/subscriptions",
      "organizations_url": "https://api.github.com/users/SinisterMinister/orgs",
      "repos_url": "https://api.github.com/users/SinisterMinister/repos",
      "events_url": "https://api.github.com/users/SinisterMinister/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SinisterMinister/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-01-06T23:36:20Z",
    "updated_at": "2017-04-12T13:16:21Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/1055",
      "html_url": "https://github.com/browserify/browserify/pull/1055",
      "diff_url": "https://github.com/browserify/browserify/pull/1055.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/1055.patch",
      "merged_at": null
    },
    "body": "Fixes #968 by preventing code that's pulled in via `b.require()` to be considered the standalone module. \n\n**This breaks exposing a file added with `b.require` as the standalone module!**\n### a.js\n\n``` javascript\nmodule.exports = \"foo\";\n```\n### Browserify Command\n\n``` bash\n$ browserify --standalone a --require ./a.js:a\n```\n### Browserify Output\n\n``` javascript\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.a=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({\"a\":[function(require,module,exports){\nmodule.exports = \"foo\";\n},{}]},{},[])(undefined)\n});\n```\n\nWhen this code is run, it will throw a `MODULE_NOT_FOUND` exception as it tries to export the `undefined` module.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1055/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1055/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1054",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1054/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1054/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1054/events",
    "html_url": "https://github.com/browserify/browserify/issues/1054",
    "id": 53577772,
    "node_id": "MDU6SXNzdWU1MzU3Nzc3Mg==",
    "number": 1054,
    "title": "testling fails on Opera 10.6",
    "user": {
      "login": "ljharb",
      "id": 45469,
      "node_id": "MDQ6VXNlcjQ1NDY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/45469?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ljharb",
      "html_url": "https://github.com/ljharb",
      "followers_url": "https://api.github.com/users/ljharb/followers",
      "following_url": "https://api.github.com/users/ljharb/following{/other_user}",
      "gists_url": "https://api.github.com/users/ljharb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ljharb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ljharb/subscriptions",
      "organizations_url": "https://api.github.com/users/ljharb/orgs",
      "repos_url": "https://api.github.com/users/ljharb/repos",
      "events_url": "https://api.github.com/users/ljharb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ljharb/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-01-06T23:31:53Z",
    "updated_at": "2018-02-07T16:22:50Z",
    "closed_at": "2018-02-07T16:22:50Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "On Opera 10.6, I get this error:\n\n``` js\nUncaught exception: ReferenceError: Undefined variable: e\n\nError thrown at line 1, column 230 in s(o, u) in http://localhost:53993/__testling?show=true:\n    t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)\ncalled from line 1, column 391 in e(t, n, r) in http://localhost:53993/__testling?show=true:\n    s(r[o]);\ncalled from line 1, column 0 in http://localhost:53993/__testling?show=true:\n    (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n```\n\nThis doesn't happen in IE 6-11, Opera 11.1, etc, so I assume it's specific to browserify and Opera 10.6. It may be why `testling-ci` seemed to always hang on Opera 10.6 and never complete?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1054/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1054/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1053",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1053/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1053/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1053/events",
    "html_url": "https://github.com/browserify/browserify/issues/1053",
    "id": 53571461,
    "node_id": "MDU6SXNzdWU1MzU3MTQ2MQ==",
    "number": 1053,
    "title": "Icon on npmjs.org",
    "user": {
      "login": "trusktr",
      "id": 297678,
      "node_id": "MDQ6VXNlcjI5NzY3OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/297678?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/trusktr",
      "html_url": "https://github.com/trusktr",
      "followers_url": "https://api.github.com/users/trusktr/followers",
      "following_url": "https://api.github.com/users/trusktr/following{/other_user}",
      "gists_url": "https://api.github.com/users/trusktr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/trusktr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/trusktr/subscriptions",
      "organizations_url": "https://api.github.com/users/trusktr/orgs",
      "repos_url": "https://api.github.com/users/trusktr/repos",
      "events_url": "https://api.github.com/users/trusktr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/trusktr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-01-06T22:23:21Z",
    "updated_at": "2015-01-09T06:44:53Z",
    "closed_at": "2015-01-09T06:41:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "How did you specify an icon for npmjs.org?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1053/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1053/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1052",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1052/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1052/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1052/events",
    "html_url": "https://github.com/browserify/browserify/pull/1052",
    "id": 53570080,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjY5MjIxMTU=",
    "number": 1052,
    "title": "adds a failing test to show that aliasing things from node_modules is broken ",
    "user": {
      "login": "faiq",
      "id": 5673456,
      "node_id": "MDQ6VXNlcjU2NzM0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5673456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/faiq",
      "html_url": "https://github.com/faiq",
      "followers_url": "https://api.github.com/users/faiq/followers",
      "following_url": "https://api.github.com/users/faiq/following{/other_user}",
      "gists_url": "https://api.github.com/users/faiq/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/faiq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/faiq/subscriptions",
      "organizations_url": "https://api.github.com/users/faiq/orgs",
      "repos_url": "https://api.github.com/users/faiq/repos",
      "events_url": "https://api.github.com/users/faiq/events{/privacy}",
      "received_events_url": "https://api.github.com/users/faiq/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2015-01-06T22:10:26Z",
    "updated_at": "2015-11-21T23:51:54Z",
    "closed_at": "2015-11-21T23:51:51Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/1052",
      "html_url": "https://github.com/browserify/browserify/pull/1052",
      "diff_url": "https://github.com/browserify/browserify/pull/1052.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/1052.patch",
      "merged_at": null
    },
    "body": "browserify should not break when you try to alias a package from inside `node_modules` this pull request adds a failing test to demonstrate that this is happening. \n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1052/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1052/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  }
]