[
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1051",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1051/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1051/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1051/events",
    "html_url": "https://github.com/browserify/browserify/issues/1051",
    "id": 53548107,
    "node_id": "MDU6SXNzdWU1MzU0ODEwNw==",
    "number": 1051,
    "title": "add support for multiple exposes in browserify.require()",
    "user": {
      "login": "faiq",
      "id": 5673456,
      "node_id": "MDQ6VXNlcjU2NzM0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5673456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/faiq",
      "html_url": "https://github.com/faiq",
      "followers_url": "https://api.github.com/users/faiq/followers",
      "following_url": "https://api.github.com/users/faiq/following{/other_user}",
      "gists_url": "https://api.github.com/users/faiq/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/faiq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/faiq/subscriptions",
      "organizations_url": "https://api.github.com/users/faiq/orgs",
      "repos_url": "https://api.github.com/users/faiq/repos",
      "events_url": "https://api.github.com/users/faiq/events{/privacy}",
      "received_events_url": "https://api.github.com/users/faiq/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2015-01-06T18:46:37Z",
    "updated_at": "2015-01-30T01:16:30Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "We've recently bumped into this issue when upgrading from version 4 to versions 5 and beyond. In our project, we're using backbone, which has a dependency on underscore, but in our other files we're using lodash as a dependency.\n\nSince we don't want to ship both to the client, we decided to do an alias for lodash to underscore. However, this `browserify -r lodash:underscore` is now breaking on new versions of browserify. \n\nI've tried multiple solutions for this: \n1. I tried the solution posted  in https://github.com/substack/node-browserify/issues/881#issuecomment-56052706 by using \n   \n   `browserify -r ./node_modules/lodash:underscore` \n   \n   this does work to a certain extent, but I cannot use `require ('lodash')` because browserify never    exposes the package. \n2. Another solution was proposed by @terinjokes in his [blog post](https://terinstock.com/blog/2014/02/27/replacing-packages-in-a-browserify-bundle.html), but this requires me to add additional details to my package.json. I don't think that this is the proper solution. \n\nMy proposition is to have the `.require()` method in browserify support an array for multiple expose names. This way, `require('lodash')` and `require('underscore')` will both resolve to underscore. \n\nI was wondering if you are open to a pull request that implements this? \n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1051/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1051/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1050",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1050/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1050/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1050/events",
    "html_url": "https://github.com/browserify/browserify/issues/1050",
    "id": 53320872,
    "node_id": "MDU6SXNzdWU1MzMyMDg3Mg==",
    "number": 1050,
    "title": "Idea: Let packages specify their own transforms.",
    "user": {
      "login": "trusktr",
      "id": 297678,
      "node_id": "MDQ6VXNlcjI5NzY3OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/297678?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/trusktr",
      "html_url": "https://github.com/trusktr",
      "followers_url": "https://api.github.com/users/trusktr/followers",
      "following_url": "https://api.github.com/users/trusktr/following{/other_user}",
      "gists_url": "https://api.github.com/users/trusktr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/trusktr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/trusktr/subscriptions",
      "organizations_url": "https://api.github.com/users/trusktr/orgs",
      "repos_url": "https://api.github.com/users/trusktr/repos",
      "events_url": "https://api.github.com/users/trusktr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/trusktr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 14,
    "created_at": "2015-01-04T01:10:01Z",
    "updated_at": "2015-01-04T02:06:20Z",
    "closed_at": "2015-01-04T01:33:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Instead of requiring a parent package to do so? For example, I want to tell my friend \"Hey, this is my package. Install it, then use it with browserify\" without having to also say \"Oh yeah, also make sure you add this fooify transform to your package.json browserify.transform array and your dependencies\".\n\nAn example: Browserify projects that depend on [famous](http://github.com/Famous/famous) also depend on the famousify transform to sanitize require() statements. It'd be nice if famous could specify this it it's own package.json, then a project that depends on famous doesn't have to.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1050/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1050/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1049",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1049/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1049/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1049/events",
    "html_url": "https://github.com/browserify/browserify/issues/1049",
    "id": 53251362,
    "node_id": "MDU6SXNzdWU1MzI1MTM2Mg==",
    "number": 1049,
    "title": "Error during install",
    "user": {
      "login": "webpro",
      "id": 456426,
      "node_id": "MDQ6VXNlcjQ1NjQyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/456426?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/webpro",
      "html_url": "https://github.com/webpro",
      "followers_url": "https://api.github.com/users/webpro/followers",
      "following_url": "https://api.github.com/users/webpro/following{/other_user}",
      "gists_url": "https://api.github.com/users/webpro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/webpro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/webpro/subscriptions",
      "organizations_url": "https://api.github.com/users/webpro/orgs",
      "repos_url": "https://api.github.com/users/webpro/repos",
      "events_url": "https://api.github.com/users/webpro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/webpro/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 19,
    "created_at": "2015-01-02T12:57:12Z",
    "updated_at": "2015-12-11T16:03:46Z",
    "closed_at": "2015-01-02T20:37:43Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Just saying, currently I get this:\n\n```\n‚ùØ npm i browserify\nnpm ERR! Darwin 14.1.0\nnpm ERR! argv \"node\" \"/usr/local/bin/npm\" \"i\" \"browserify\"\nnpm ERR! node v0.10.33\nnpm ERR! npm  v2.1.7\nnpm ERR! code EPEERINVALID\n\nnpm ERR! peerinvalid The package bn.js does not satisfy its siblings' peerDependencies requirements!\nnpm ERR! peerinvalid Peer miller-rabin@1.1.2 wants bn.js@^0.16.0\n```\n\nI understand it's not an issue in Browserify itself, but some dependencies. Looking into it a bit, I'm seeing @guybedford is [having a go at it](https://github.com/guybedford?tab=activity). I've opened this issue so other people know about it if they search when having the same issue.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1049/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1049/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1048",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1048/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1048/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1048/events",
    "html_url": "https://github.com/browserify/browserify/issues/1048",
    "id": 53173403,
    "node_id": "MDU6SXNzdWU1MzE3MzQwMw==",
    "number": 1048,
    "title": "High Resolution Logo",
    "user": {
      "login": "jamiebuilds",
      "id": 952783,
      "node_id": "MDQ6VXNlcjk1Mjc4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/952783?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamiebuilds",
      "html_url": "https://github.com/jamiebuilds",
      "followers_url": "https://api.github.com/users/jamiebuilds/followers",
      "following_url": "https://api.github.com/users/jamiebuilds/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamiebuilds/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamiebuilds/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamiebuilds/subscriptions",
      "organizations_url": "https://api.github.com/users/jamiebuilds/orgs",
      "repos_url": "https://api.github.com/users/jamiebuilds/repos",
      "events_url": "https://api.github.com/users/jamiebuilds/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamiebuilds/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-12-31T08:30:32Z",
    "updated_at": "2015-06-11T21:09:43Z",
    "closed_at": "2015-06-11T21:09:43Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Would it be possible to provide a high-resolution version of the logo with licensing/terms of use?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1048/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1048/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1047",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1047/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1047/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1047/events",
    "html_url": "https://github.com/browserify/browserify/issues/1047",
    "id": 53163311,
    "node_id": "MDU6SXNzdWU1MzE2MzMxMQ==",
    "number": 1047,
    "title": "require does not work in script loaded from browser field",
    "user": {
      "login": "majgis",
      "id": 546259,
      "node_id": "MDQ6VXNlcjU0NjI1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/546259?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/majgis",
      "html_url": "https://github.com/majgis",
      "followers_url": "https://api.github.com/users/majgis/followers",
      "following_url": "https://api.github.com/users/majgis/following{/other_user}",
      "gists_url": "https://api.github.com/users/majgis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/majgis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/majgis/subscriptions",
      "organizations_url": "https://api.github.com/users/majgis/orgs",
      "repos_url": "https://api.github.com/users/majgis/repos",
      "events_url": "https://api.github.com/users/majgis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/majgis/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-12-31T02:31:09Z",
    "updated_at": "2015-12-06T01:21:59Z",
    "closed_at": "2015-12-06T01:21:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In package.json:\n\n```\n\"browser\": \"./browser.js\"\n```\n\nin browser.js:\n\n```\nrequire('./index');\n```\n\nresults in this error:\n\n```\nUncaught Error: Cannot find module './index'\n```\n\nI was able to get require working by adding the following to package.json:\n\n```\n  \"browser\" : {\n      \"index.js\":\"./browser.js\",\n      \"./index\":\"./index.js\"\n  }\n```\n\nCan anyone explain why require isn't working by default?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1047/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1047/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1046",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1046/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1046/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1046/events",
    "html_url": "https://github.com/browserify/browserify/issues/1046",
    "id": 53162644,
    "node_id": "MDU6SXNzdWU1MzE2MjY0NA==",
    "number": 1046,
    "title": "browser field can expose globals",
    "user": {
      "login": "majgis",
      "id": 546259,
      "node_id": "MDQ6VXNlcjU0NjI1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/546259?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/majgis",
      "html_url": "https://github.com/majgis",
      "followers_url": "https://api.github.com/users/majgis/followers",
      "following_url": "https://api.github.com/users/majgis/following{/other_user}",
      "gists_url": "https://api.github.com/users/majgis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/majgis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/majgis/subscriptions",
      "organizations_url": "https://api.github.com/users/majgis/orgs",
      "repos_url": "https://api.github.com/users/majgis/repos",
      "events_url": "https://api.github.com/users/majgis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/majgis/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-12-31T02:08:43Z",
    "updated_at": "2014-12-31T03:21:11Z",
    "closed_at": "2014-12-31T03:02:55Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Yes, I know there is a browserify-shim transform, but it should as easy to expose a global, as it is with `b.require`.  For example, using subarg syntax and the same args for `b.require`:\n\n```\n\"browser\" : [\"./angular.js\", {\"expose\":\"angular\"}]\n```\n\nor \n\n```\n\"browser\" : {\n    \"angular\": [ \"./angular.js\", {\"expose\":\"angular\"}]\n}\n```\n\nI see the following advantages over browserify-shim:\n1. Open the floodgates, it is a one-liner PR to convert many existing packages to support browserify\n2. No transform = no dependency, again helpful for convincing others to add support\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1046/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1046/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1045",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1045/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1045/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1045/events",
    "html_url": "https://github.com/browserify/browserify/pull/1045",
    "id": 53145031,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjY3MDI0MzU=",
    "number": 1045,
    "title": "Make a small fix to documentation per #1038",
    "user": {
      "login": "tustin2121",
      "id": 794812,
      "node_id": "MDQ6VXNlcjc5NDgxMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/794812?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tustin2121",
      "html_url": "https://github.com/tustin2121",
      "followers_url": "https://api.github.com/users/tustin2121/followers",
      "following_url": "https://api.github.com/users/tustin2121/following{/other_user}",
      "gists_url": "https://api.github.com/users/tustin2121/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tustin2121/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tustin2121/subscriptions",
      "organizations_url": "https://api.github.com/users/tustin2121/orgs",
      "repos_url": "https://api.github.com/users/tustin2121/repos",
      "events_url": "https://api.github.com/users/tustin2121/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tustin2121/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-12-30T20:37:18Z",
    "updated_at": "2015-01-09T06:38:04Z",
    "closed_at": "2015-01-09T06:37:59Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/1045",
      "html_url": "https://github.com/browserify/browserify/pull/1045",
      "diff_url": "https://github.com/browserify/browserify/pull/1045.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/1045.patch",
      "merged_at": "2015-01-09T06:37:59Z"
    },
    "body": "It would be nice if this could list more ways to use Transform streams, assuming there are more.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1045/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1045/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1044",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1044/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1044/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1044/events",
    "html_url": "https://github.com/browserify/browserify/issues/1044",
    "id": 53097590,
    "node_id": "MDU6SXNzdWU1MzA5NzU5MA==",
    "number": 1044,
    "title": "Version 8.0.2 broke my build with gulp",
    "user": {
      "login": "burmisov",
      "id": 6077619,
      "node_id": "MDQ6VXNlcjYwNzc2MTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6077619?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/burmisov",
      "html_url": "https://github.com/burmisov",
      "followers_url": "https://api.github.com/users/burmisov/followers",
      "following_url": "https://api.github.com/users/burmisov/following{/other_user}",
      "gists_url": "https://api.github.com/users/burmisov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/burmisov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/burmisov/subscriptions",
      "organizations_url": "https://api.github.com/users/burmisov/orgs",
      "repos_url": "https://api.github.com/users/burmisov/repos",
      "events_url": "https://api.github.com/users/burmisov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/burmisov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 36,
    "created_at": "2014-12-30T07:05:06Z",
    "updated_at": "2015-09-10T21:28:46Z",
    "closed_at": "2015-04-03T16:04:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Not sure weather this is a browserify issue, but versions prior to 8.0.2 used to work fine (including 8.0.1).\n\nNow it exits with this error:\n\n```\nError: write after end\n    at writeAfterEnd (D:\\code\\webgis\\node_modules\\browserify\\node_modules\\labeled-stream-splicer\\node_modules\\stream-spl\nicer\\node_modules\\readable-stream\\lib\\_stream_writable.js:161:12)\n```\n\nHere is my build code:\n\n``` js\nvar browserify = require('browserify');\nvar rename = require('gulp-rename');\nvar transform = require('vinyl-transform');\nvar reactify = require('reactify');\nvar size = require('gulp-size');\ngulp.task('scripts-debug', function () {\n    var browserified = transform(function (filename) {\n        var b = browserify(filename, {\n            debug: true,\n            extensions: ['.js', '.jsx']\n        });\n        b.transform(reactify);\n        return b.bundle();\n    });\n\n    gulp.src('src/js/app.js')\n        .pipe(browserified)\n        .pipe(rename('bundle.js'))\n        .pipe(gulp.dest('build/js'))\n        .pipe(size({ showFiles: true }));\n});\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1044/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1044/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1043",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1043/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1043/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1043/events",
    "html_url": "https://github.com/browserify/browserify/pull/1043",
    "id": 52942992,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjY2MDg4ODg=",
    "number": 1043,
    "title": "Ensure transforms execute in added order.",
    "user": {
      "login": "terinjokes",
      "id": 273509,
      "node_id": "MDQ6VXNlcjI3MzUwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/273509?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/terinjokes",
      "html_url": "https://github.com/terinjokes",
      "followers_url": "https://api.github.com/users/terinjokes/followers",
      "following_url": "https://api.github.com/users/terinjokes/following{/other_user}",
      "gists_url": "https://api.github.com/users/terinjokes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/terinjokes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/terinjokes/subscriptions",
      "organizations_url": "https://api.github.com/users/terinjokes/orgs",
      "repos_url": "https://api.github.com/users/terinjokes/repos",
      "events_url": "https://api.github.com/users/terinjokes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/terinjokes/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-12-26T23:42:14Z",
    "updated_at": "2015-04-03T00:33:14Z",
    "closed_at": "2014-12-27T00:16:03Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/1043",
      "html_url": "https://github.com/browserify/browserify/pull/1043",
      "diff_url": "https://github.com/browserify/browserify/pull/1043.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/1043.patch",
      "merged_at": null
    },
    "body": "Resolves 6to5/6to5ify#17\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1043/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1043/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1042",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1042/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1042/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1042/events",
    "html_url": "https://github.com/browserify/browserify/issues/1042",
    "id": 52936004,
    "node_id": "MDU6SXNzdWU1MjkzNjAwNA==",
    "number": 1042,
    "title": "Transforms are not being applied to built-in modules",
    "user": {
      "login": "TuurDutoit",
      "id": 4077287,
      "node_id": "MDQ6VXNlcjQwNzcyODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4077287?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TuurDutoit",
      "html_url": "https://github.com/TuurDutoit",
      "followers_url": "https://api.github.com/users/TuurDutoit/followers",
      "following_url": "https://api.github.com/users/TuurDutoit/following{/other_user}",
      "gists_url": "https://api.github.com/users/TuurDutoit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TuurDutoit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TuurDutoit/subscriptions",
      "organizations_url": "https://api.github.com/users/TuurDutoit/orgs",
      "repos_url": "https://api.github.com/users/TuurDutoit/repos",
      "events_url": "https://api.github.com/users/TuurDutoit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TuurDutoit/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2014-12-26T19:20:26Z",
    "updated_at": "2018-02-23T13:57:04Z",
    "closed_at": "2018-02-23T13:57:04Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When you `require()` a built-in module (`events`, for example) somewhere in the code, and use a transform when bundling (uglifyify, for example), the transform is not applied to the built-in module, but it is applied to others.\nIn this case, everything but the built-in modules are minified.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1042/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1042/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1041",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1041/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1041/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1041/events",
    "html_url": "https://github.com/browserify/browserify/pull/1041",
    "id": 52823889,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjY1NjE4MzI=",
    "number": 1041,
    "title": "Use assert 1.3",
    "user": {
      "login": "teppeis",
      "id": 26476,
      "node_id": "MDQ6VXNlcjI2NDc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/26476?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/teppeis",
      "html_url": "https://github.com/teppeis",
      "followers_url": "https://api.github.com/users/teppeis/followers",
      "following_url": "https://api.github.com/users/teppeis/following{/other_user}",
      "gists_url": "https://api.github.com/users/teppeis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/teppeis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/teppeis/subscriptions",
      "organizations_url": "https://api.github.com/users/teppeis/orgs",
      "repos_url": "https://api.github.com/users/teppeis/repos",
      "events_url": "https://api.github.com/users/teppeis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/teppeis/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-12-24T15:16:58Z",
    "updated_at": "2015-01-09T06:39:23Z",
    "closed_at": "2015-01-09T05:41:11Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/1041",
      "html_url": "https://github.com/browserify/browserify/pull/1041",
      "diff_url": "https://github.com/browserify/browserify/pull/1041.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/1041.patch",
      "merged_at": "2015-01-09T05:41:11Z"
    },
    "body": "[assert](https://www.npmjs.com/package/assert) 1.3.0 has released.\nThere are compatible changes.\n- 1.2.0: fix deepEqual bug about arguments ordering (https://github.com/defunctzombie/commonjs-assert/pull/6)\n- 1.3.0: fix deepEqual broken in next Chrome 40 and Firefox 35 (https://github.com/defunctzombie/commonjs-assert/pull/7)\n\nEspecially 1.3.0 is necessary before Chrome 40 and Firefox 35 release.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1041/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1041/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1040",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1040/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1040/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1040/events",
    "html_url": "https://github.com/browserify/browserify/pull/1040",
    "id": 52811317,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjY1NTQwNDI=",
    "number": 1040,
    "title": "use buffer 3.0.0",
    "user": {
      "login": "feross",
      "id": 121766,
      "node_id": "MDQ6VXNlcjEyMTc2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/121766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/feross",
      "html_url": "https://github.com/feross",
      "followers_url": "https://api.github.com/users/feross/followers",
      "following_url": "https://api.github.com/users/feross/following{/other_user}",
      "gists_url": "https://api.github.com/users/feross/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/feross/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/feross/subscriptions",
      "organizations_url": "https://api.github.com/users/feross/orgs",
      "repos_url": "https://api.github.com/users/feross/repos",
      "events_url": "https://api.github.com/users/feross/events{/privacy}",
      "received_events_url": "https://api.github.com/users/feross/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-12-24T10:42:34Z",
    "updated_at": "2014-12-24T10:49:20Z",
    "closed_at": "2014-12-24T10:49:11Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/1040",
      "html_url": "https://github.com/browserify/browserify/pull/1040",
      "diff_url": "https://github.com/browserify/browserify/pull/1040.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/1040.patch",
      "merged_at": null
    },
    "body": "New Buffer major version: 3.0.0\n\nIt has some breaking changes, but they improve compatibility with node!\nThe whole node buffer test suite passes now, thanks to @jessetane!\n- toString('ascii') and slice('ascii') work correctly (strip off high order bits)\n- correct exception types thrown (RangeError instead of TypeError in many places)\n- do not encode partial code units to utf16\n- do not encode partial or invalid code points to utf8\n- copy() correctly returns length\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1040/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1040/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1039",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1039/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1039/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1039/events",
    "html_url": "https://github.com/browserify/browserify/issues/1039",
    "id": 52777240,
    "node_id": "MDU6SXNzdWU1Mjc3NzI0MA==",
    "number": 1039,
    "title": "Controlling exposure of bundled modules",
    "user": {
      "login": "jmm",
      "id": 129203,
      "node_id": "MDQ6VXNlcjEyOTIwMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129203?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmm",
      "html_url": "https://github.com/jmm",
      "followers_url": "https://api.github.com/users/jmm/followers",
      "following_url": "https://api.github.com/users/jmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmm/subscriptions",
      "organizations_url": "https://api.github.com/users/jmm/orgs",
      "repos_url": "https://api.github.com/users/jmm/repos",
      "events_url": "https://api.github.com/users/jmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 212072653,
        "node_id": "MDU6TGFiZWwyMTIwNzI2NTM=",
        "url": "https://api.github.com/repos/browserify/browserify/labels/path-matching",
        "name": "path-matching",
        "color": "c7def8",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-12-23T21:42:22Z",
    "updated_at": "2015-05-15T20:51:29Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "body": "I'm trying to make sense of how to control exposure of modules in a bundle and finding the documentation and behavior difficult to follow.\n\nGiven browserify 7.0.3 or 8.0.3 and this directory structure:\n\n```\n- somedir\n    bundle.js\n    - src\n        a.js\n        b.js\n        c.js\n```\n#1)\n\nIs this situation supposed to break the bundle? (does for me):\n\n``` js\n// src/a.js\nrequire('./b');\n```\n\n``` js\n// bundle.js\nbrowserify('./src/a')\n  .require('./src/b')\n```\n\nResult (when bundle loaded in browser):\n\n```\nUncaught Error: Cannot find module './b'\n```\n#2)\n\nIs this situation supposed to happen?:\n\n``` js\n// src/b.js\nmodule.exports = \"This is b.js\";\n```\n\n``` js\nbrowserify('./src/a')\n  .require('./src/c')\n```\n\n``` html\n<script src=\"bundle.js\"></script>\n\n<script>\n// Logs \"This is b.js\"\nconsole.log(require(2));\n</script>\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1039/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1039/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1038",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1038/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1038/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1038/events",
    "html_url": "https://github.com/browserify/browserify/issues/1038",
    "id": 52619977,
    "node_id": "MDU6SXNzdWU1MjYxOTk3Nw==",
    "number": 1038,
    "title": "How to NOT use the \"through\" module?",
    "user": {
      "login": "tustin2121",
      "id": 794812,
      "node_id": "MDQ6VXNlcjc5NDgxMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/794812?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tustin2121",
      "html_url": "https://github.com/tustin2121",
      "followers_url": "https://api.github.com/users/tustin2121/followers",
      "following_url": "https://api.github.com/users/tustin2121/following{/other_user}",
      "gists_url": "https://api.github.com/users/tustin2121/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tustin2121/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tustin2121/subscriptions",
      "organizations_url": "https://api.github.com/users/tustin2121/orgs",
      "repos_url": "https://api.github.com/users/tustin2121/repos",
      "events_url": "https://api.github.com/users/tustin2121/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tustin2121/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-12-22T04:56:57Z",
    "updated_at": "2014-12-27T00:38:24Z",
    "closed_at": "2014-12-24T09:50:02Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Under the API section on using Transforms, the following statement is present:\n\n> You don't need to necessarily use the through module, this is just a simple example.\n\nAnd that's it. Nothing else mentions how one _could_ use a transform without using _yet another_ 3rd party module, it just says \"you don't need to\".\n\nThis is my major general issue with Browserify, actually: the fact that it can supposedly do all these wonderful advanced things, yet everything is so poorly documented, it's a hassle to try and figure out what you have to do to get things working. You go to the \"help + articles\" section of the site and there's 30 to 50 links to random articles instead of, say, actual documentation, enumerated about each feature, with at least an explanation as to what each option does if not examples. You know, something like the MDN. The handbook is vague at best, and I really do not want to click through every article in that list just to see if they cover some edge case I'm looking for.\n\nAs to the topic: No, I don't want to use \"through\" if I can help it. I just finished learning and creating Transform modules for node v10's streams, and it would be lovely if I could just use that. But everywhere in the \"documentation\", this \"through\" module is used, and looking at it, it uses a whole different API that's now out of date with node v10. And _I know_ dropping a node v10 Through class in there is simply going to break everything. So how do I not \"need to necessarily use the through module\"?\n\nEDIT: More specifically, I'm writing this using the browserify API, as part of a node build script.js.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1038/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1038/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1037",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1037/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1037/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1037/events",
    "html_url": "https://github.com/browserify/browserify/pull/1037",
    "id": 52608006,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjY0MzMwMTI=",
    "number": 1037,
    "title": "Consistently use default _options.basedir",
    "user": {
      "login": "nikku",
      "id": 58601,
      "node_id": "MDQ6VXNlcjU4NjAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/58601?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nikku",
      "html_url": "https://github.com/nikku",
      "followers_url": "https://api.github.com/users/nikku/followers",
      "following_url": "https://api.github.com/users/nikku/following{/other_user}",
      "gists_url": "https://api.github.com/users/nikku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nikku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nikku/subscriptions",
      "organizations_url": "https://api.github.com/users/nikku/orgs",
      "repos_url": "https://api.github.com/users/nikku/repos",
      "events_url": "https://api.github.com/users/nikku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nikku/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-12-21T22:20:25Z",
    "updated_at": "2015-03-01T18:29:56Z",
    "closed_at": "2015-03-01T18:29:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/1037",
      "html_url": "https://github.com/browserify/browserify/pull/1037",
      "diff_url": "https://github.com/browserify/browserify/pull/1037.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/1037.patch",
      "merged_at": null
    },
    "body": "This PR adds a consistent default basedir fallback wherever it is needed.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1037/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1037/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1036",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1036/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1036/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1036/events",
    "html_url": "https://github.com/browserify/browserify/issues/1036",
    "id": 52603268,
    "node_id": "MDU6SXNzdWU1MjYwMzI2OA==",
    "number": 1036,
    "title": "Access global (or at least nested dependency) browser shims/builtins",
    "user": {
      "login": "justinbmeyer",
      "id": 78602,
      "node_id": "MDQ6VXNlcjc4NjAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/78602?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/justinbmeyer",
      "html_url": "https://github.com/justinbmeyer",
      "followers_url": "https://api.github.com/users/justinbmeyer/followers",
      "following_url": "https://api.github.com/users/justinbmeyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/justinbmeyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/justinbmeyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/justinbmeyer/subscriptions",
      "organizations_url": "https://api.github.com/users/justinbmeyer/orgs",
      "repos_url": "https://api.github.com/users/justinbmeyer/repos",
      "events_url": "https://api.github.com/users/justinbmeyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/justinbmeyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-12-21T19:09:15Z",
    "updated_at": "2017-09-24T22:22:37Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "(sorry if this issue has already been created). I have a dependency that has many other dependencies that do not work in the browser.  Getting all of them to add `browser` and point to shims will be difficult. It would also be difficult to maintain a fork of each one.  \n\nWould you consider making it possible to specifying other global shims/builtins?  Or, making it possible to specify shims for nested dependencies?  Something like:\n\n``` js\n\"global-browser\": {\n  \"fs\" : \"level-js\"\n}\n```\n\nThis could add to the exports in: https://github.com/substack/node-browserify/blob/master/lib/builtins.js. Thanks!\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1036/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1036/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1035",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1035/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1035/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1035/events",
    "html_url": "https://github.com/browserify/browserify/pull/1035",
    "id": 52565397,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjY0MTY3MzE=",
    "number": 1035,
    "title": "Fix exposeAll with external (unknown) bundle",
    "user": {
      "login": "nikku",
      "id": 58601,
      "node_id": "MDQ6VXNlcjU4NjAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/58601?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nikku",
      "html_url": "https://github.com/nikku",
      "followers_url": "https://api.github.com/users/nikku/followers",
      "following_url": "https://api.github.com/users/nikku/following{/other_user}",
      "gists_url": "https://api.github.com/users/nikku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nikku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nikku/subscriptions",
      "organizations_url": "https://api.github.com/users/nikku/orgs",
      "repos_url": "https://api.github.com/users/nikku/repos",
      "events_url": "https://api.github.com/users/nikku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nikku/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2014-12-20T14:17:22Z",
    "updated_at": "2014-12-21T19:59:36Z",
    "closed_at": "2014-12-21T19:59:33Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/1035",
      "html_url": "https://github.com/browserify/browserify/pull/1035",
      "diff_url": "https://github.com/browserify/browserify/pull/1035.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/1035.patch",
      "merged_at": null
    },
    "body": "If `exposeAll` is specified and an external aliased file, not known to the bundle is found while parsing bundle files `row.deps[key]` is false. This leads to `path.relative(basedir, row.deps[key])` failing with a `arguments must be strings`.\n\nThis pull request fixes the behavior by using the original require name (and assuming it is an alias).\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1035/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1035/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1034",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1034/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1034/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1034/events",
    "html_url": "https://github.com/browserify/browserify/pull/1034",
    "id": 52531774,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjY0MDA5NTE=",
    "number": 1034,
    "title": "Allow requiring module locally and globally with `fullPaths=true`",
    "user": {
      "login": "gasi",
      "id": 49583,
      "node_id": "MDQ6VXNlcjQ5NTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/49583?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gasi",
      "html_url": "https://github.com/gasi",
      "followers_url": "https://api.github.com/users/gasi/followers",
      "following_url": "https://api.github.com/users/gasi/following{/other_user}",
      "gists_url": "https://api.github.com/users/gasi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gasi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gasi/subscriptions",
      "organizations_url": "https://api.github.com/users/gasi/orgs",
      "repos_url": "https://api.github.com/users/gasi/repos",
      "events_url": "https://api.github.com/users/gasi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gasi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-12-19T21:40:03Z",
    "updated_at": "2015-09-23T23:13:43Z",
    "closed_at": "2015-09-23T23:13:43Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/1034",
      "html_url": "https://github.com/browserify/browserify/pull/1034",
      "diff_url": "https://github.com/browserify/browserify/pull/1034.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/1034.patch",
      "merged_at": null
    },
    "body": "This fixes #1020 in conjunction with `watchify` which uses `fullPaths=true`.\n\n**Update:** Turns out this breaks external global access to `require('a')`, e.g. an HTML page with `var a = require('a');` as `a` is now only indexed via `/absolute/path/to/multi_require/a.js`. Related to: https://github.com/substack/watchify/commit/3358625695ad17d4dc3ece639fd7b70c0693d743#commitcomment-9049286\n\nDo you have any ideas on how to restore this behavior from Browserify 4.x/Watchify 0.10.x?\n\n/cc @gscottolson @tarajane\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1034/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1034/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1033",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1033/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1033/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1033/events",
    "html_url": "https://github.com/browserify/browserify/pull/1033",
    "id": 52440707,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjYzNDcyMjg=",
    "number": 1033,
    "title": "Allow modules to be bundled via local paths and globally (`expose`) at the same time",
    "user": {
      "login": "gasi",
      "id": 49583,
      "node_id": "MDQ6VXNlcjQ5NTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/49583?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gasi",
      "html_url": "https://github.com/gasi",
      "followers_url": "https://api.github.com/users/gasi/followers",
      "following_url": "https://api.github.com/users/gasi/following{/other_user}",
      "gists_url": "https://api.github.com/users/gasi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gasi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gasi/subscriptions",
      "organizations_url": "https://api.github.com/users/gasi/orgs",
      "repos_url": "https://api.github.com/users/gasi/repos",
      "events_url": "https://api.github.com/users/gasi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gasi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-12-19T02:13:46Z",
    "updated_at": "2014-12-19T21:02:12Z",
    "closed_at": "2014-12-19T08:04:37Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/1033",
      "html_url": "https://github.com/browserify/browserify/pull/1033",
      "diff_url": "https://github.com/browserify/browserify/pull/1033.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/1033.patch",
      "merged_at": null
    },
    "body": "Fixes #1020 and potentially #935 (unverified). Added minimal test case and fix but open to revisiting it if there is a better approach.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1033/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1033/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1032",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1032/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1032/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1032/events",
    "html_url": "https://github.com/browserify/browserify/issues/1032",
    "id": 52278419,
    "node_id": "MDU6SXNzdWU1MjI3ODQxOQ==",
    "number": 1032,
    "title": "v7.0.1 never calls transforms that are strings",
    "user": {
      "login": "joeybaker",
      "id": 36662,
      "node_id": "MDQ6VXNlcjM2NjYy",
      "avatar_url": "https://avatars.githubusercontent.com/u/36662?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joeybaker",
      "html_url": "https://github.com/joeybaker",
      "followers_url": "https://api.github.com/users/joeybaker/followers",
      "following_url": "https://api.github.com/users/joeybaker/following{/other_user}",
      "gists_url": "https://api.github.com/users/joeybaker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joeybaker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joeybaker/subscriptions",
      "organizations_url": "https://api.github.com/users/joeybaker/orgs",
      "repos_url": "https://api.github.com/users/joeybaker/repos",
      "events_url": "https://api.github.com/users/joeybaker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joeybaker/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-12-17T19:08:30Z",
    "updated_at": "2018-02-23T14:00:26Z",
    "closed_at": "2018-02-23T14:00:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The problem doesn't exist at v7.0.0, but does in v7.0.1\n\n``` js\nb.transform('myTransform', {}) // loads the transform, but never calls the `through` stream\nb.transform(require('myTransform'), {}) // works as expected.\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1032/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1032/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1031",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1031/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1031/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1031/events",
    "html_url": "https://github.com/browserify/browserify/issues/1031",
    "id": 52241430,
    "node_id": "MDU6SXNzdWU1MjI0MTQzMA==",
    "number": 1031,
    "title": "Browserify does not recognize a module bundled by Browserify.",
    "user": {
      "login": "martinhbramwell",
      "id": 814919,
      "node_id": "MDQ6VXNlcjgxNDkxOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/814919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinhbramwell",
      "html_url": "https://github.com/martinhbramwell",
      "followers_url": "https://api.github.com/users/martinhbramwell/followers",
      "following_url": "https://api.github.com/users/martinhbramwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinhbramwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinhbramwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinhbramwell/subscriptions",
      "organizations_url": "https://api.github.com/users/martinhbramwell/orgs",
      "repos_url": "https://api.github.com/users/martinhbramwell/repos",
      "events_url": "https://api.github.com/users/martinhbramwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinhbramwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2014-12-17T13:46:49Z",
    "updated_at": "2015-08-11T03:37:08Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have been trying to see how to package up third-party modules in a bundle separate from my own bundle, but cannot understand why it will not work.\n\nI have published an example here :  [brfy-issue-example](https://github.com/FleetingClouds/brfy-issue-example)\n\nTo try it out :\n\n```\n git clone git@github.com:FleetingClouds/brfy-issue-example.git\n cd brfy-issue-example\n npm run brfy\n```\n\nTo clean back to original state\n\n```\n npm run clean-all\n```\n\nTo see the problem, open the file  `public/index.html`  in a browser, and check the console.\n\nAlso look at the generated files: `public/boop.js`, `public/beep.js` and  `public/common.js`.\n\n![File Structure](https://raw.githubusercontent.com/FleetingClouds/brfy-issue-example/master/uml.png)\n\nLast line of `public/boop.js` which fails:\n\n```\n :\n :\n },{\"./robot.js\":\"/robot.js\",\"uniq\":\"uniq\"}]},{},[1]);\n```\n\nLast line of `public/beep.js` which succeeds:\n\n```\n :\n :\n },{\"./robot.js\":\"/robot.js\"}]},{},[1]);\n```\n\nLast lines of `public/common.js`:\n\n```\n :\n :\n },{}],\"/robot.js\":[function(require,module,exports){\n var uniq = require('uniq');\n module.exports = function wobot (s) { return uniq(s) };\n //\n },{\"uniq\":1}]},{},[]);\n```\n\nCommands invoked :\n\n```\n browserify -r ./robot.js > public/common.js\n browserify -x ./robot.js -x uniq beep.js > public/beep.js\n browserify -x ./robot.js -x uniq boop.js > public/boop.js\n```\n\nI tried directly editing `public/boop.js` and `public/common.js` using differnt combination of `./uniq`,  `\"./uniq\":\"/uniq\"` etc.  None of them helped `boop` find `uniq`\n\nI also tried a hint from the post [Why is browserify pulling in a lib 2 times? - Browserify](http://stackoverflow.com/a/24917107/1544075)\n\nInstead of ...\n\n```\nbrowserify -x ./robot.js -x uniq boop.js > public/boop.js\n```\n\n... I tried ...\n\n```\nbrowserify -x ./robot.js -x public/common.js boop.js > public/boop.js\n```\n\n... but it just bundles `uniq` into `public/boop.js`.  I might as well stick with a single bundle.\n\nI'd really appreciate to know if this is a bug or my poor understanding.\n\nWhat's the correct way to do what I am trying to do?\n\nI thought this was a duplicate of the issue  [Multiple bundles example does not work](https://github.com/substack/node-browserify/issues/933), but either the solution does not work, or I am doing it wrong.\n\nPossibly, this is a duplicate of [External and Require Bundling Resulting in Undefined for JQuery/Angular](https://github.com/substack/node-browserify/issues/1014), but I don't know `gulp`, so I cannot be sure.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1031/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1031/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1030",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1030/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1030/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1030/events",
    "html_url": "https://github.com/browserify/browserify/pull/1030",
    "id": 52231518,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjYyMTg2OTI=",
    "number": 1030,
    "title": "Fix exposed requires being persisted across bundles",
    "user": {
      "login": "latentflip",
      "id": 78225,
      "node_id": "MDQ6VXNlcjc4MjI1",
      "avatar_url": "https://avatars.githubusercontent.com/u/78225?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/latentflip",
      "html_url": "https://github.com/latentflip",
      "followers_url": "https://api.github.com/users/latentflip/followers",
      "following_url": "https://api.github.com/users/latentflip/following{/other_user}",
      "gists_url": "https://api.github.com/users/latentflip/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/latentflip/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/latentflip/subscriptions",
      "organizations_url": "https://api.github.com/users/latentflip/orgs",
      "repos_url": "https://api.github.com/users/latentflip/repos",
      "events_url": "https://api.github.com/users/latentflip/events{/privacy}",
      "received_events_url": "https://api.github.com/users/latentflip/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-12-17T11:53:10Z",
    "updated_at": "2015-02-21T00:25:18Z",
    "closed_at": "2015-02-21T00:24:17Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/1030",
      "html_url": "https://github.com/browserify/browserify/pull/1030",
      "diff_url": "https://github.com/browserify/browserify/pull/1030.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/1030.patch",
      "merged_at": "2015-02-21T00:24:17Z"
    },
    "body": "As mentioned in the comments on issue #908 https://github.com/substack/node-browserify/issues/908#issuecomment-55956552, `expose`d files were being persisted across calls to browserify. I tracked this down to a leak where modules were being appended to the (module) global builtins object. Fixed with a test, though I'm not sure if you want a test for such a fine grained bug, so feel free to remove it, but it does demonstrate the failure & subsequent pass with this fix.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1030/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1030/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1029",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1029/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1029/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1029/events",
    "html_url": "https://github.com/browserify/browserify/issues/1029",
    "id": 52085386,
    "node_id": "MDU6SXNzdWU1MjA4NTM4Ng==",
    "number": 1029,
    "title": "Arguments to path.resolve must be strings",
    "user": {
      "login": "jramoyo",
      "id": 883118,
      "node_id": "MDQ6VXNlcjg4MzExOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/883118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jramoyo",
      "html_url": "https://github.com/jramoyo",
      "followers_url": "https://api.github.com/users/jramoyo/followers",
      "following_url": "https://api.github.com/users/jramoyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jramoyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jramoyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jramoyo/subscriptions",
      "organizations_url": "https://api.github.com/users/jramoyo/orgs",
      "repos_url": "https://api.github.com/users/jramoyo/repos",
      "events_url": "https://api.github.com/users/jramoyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jramoyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 203861840,
        "node_id": "MDU6TGFiZWwyMDM4NjE4NDA=",
        "url": "https://api.github.com/repos/browserify/browserify/labels/patch-welcome",
        "name": "patch-welcome",
        "color": "e102d8",
        "default": false,
        "description": null
      },
      {
        "id": 206142130,
        "node_id": "MDU6TGFiZWwyMDYxNDIxMzA=",
        "url": "https://api.github.com/repos/browserify/browserify/labels/repro-please",
        "name": "repro-please",
        "color": "207de5",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 15,
    "created_at": "2014-12-16T08:30:25Z",
    "updated_at": "2015-05-19T16:48:37Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am getting this error when running browserify from the command line:\n\n```\npath.js:313\n        throw new TypeError('Arguments to path.resolve must be strings');\n        ^\nTypeError: Arguments to path.resolve must be strings\n    at Object.exports.resolve (path.js:313:15)\n    at /usr/lib/node_modules/browserify/node_modules/browser-resolve/node_modules/resolve/lib/async.js:97:37\n    at fs.js:271:14\n    at Object.oncomplete (fs.js:107:15)\n```\n\nI'm running browserify@7.0.2\n\n```\nnpm list -g browserify\n/usr/lib\n‚îî‚îÄ‚îÄ browserify@7.0.2\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1029/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1029/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1028",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1028/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1028/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1028/events",
    "html_url": "https://github.com/browserify/browserify/issues/1028",
    "id": 52067998,
    "node_id": "MDU6SXNzdWU1MjA2Nzk5OA==",
    "number": 1028,
    "title": "Bundle synchronously",
    "user": {
      "login": "super-cache-money",
      "id": 1463145,
      "node_id": "MDQ6VXNlcjE0NjMxNDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1463145?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/super-cache-money",
      "html_url": "https://github.com/super-cache-money",
      "followers_url": "https://api.github.com/users/super-cache-money/followers",
      "following_url": "https://api.github.com/users/super-cache-money/following{/other_user}",
      "gists_url": "https://api.github.com/users/super-cache-money/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/super-cache-money/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/super-cache-money/subscriptions",
      "organizations_url": "https://api.github.com/users/super-cache-money/orgs",
      "repos_url": "https://api.github.com/users/super-cache-money/repos",
      "events_url": "https://api.github.com/users/super-cache-money/events{/privacy}",
      "received_events_url": "https://api.github.com/users/super-cache-money/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2014-12-16T02:58:49Z",
    "updated_at": "2018-09-18T10:57:31Z",
    "closed_at": "2015-01-09T06:43:11Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I need to call `b.bundle()` and get the entire output synchronously. How do I do this?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1028/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1028/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1027",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1027/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1027/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1027/events",
    "html_url": "https://github.com/browserify/browserify/issues/1027",
    "id": 52019254,
    "node_id": "MDU6SXNzdWU1MjAxOTI1NA==",
    "number": 1027,
    "title": "Modules with identical content are not distinguished",
    "user": {
      "login": "pluma",
      "id": 1280922,
      "node_id": "MDQ6VXNlcjEyODA5MjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1280922?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pluma",
      "html_url": "https://github.com/pluma",
      "followers_url": "https://api.github.com/users/pluma/followers",
      "following_url": "https://api.github.com/users/pluma/following{/other_user}",
      "gists_url": "https://api.github.com/users/pluma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pluma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pluma/subscriptions",
      "organizations_url": "https://api.github.com/users/pluma/orgs",
      "repos_url": "https://api.github.com/users/pluma/repos",
      "events_url": "https://api.github.com/users/pluma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pluma/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2014-12-15T18:10:12Z",
    "updated_at": "2015-02-25T10:30:42Z",
    "closed_at": "2014-12-24T11:43:55Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "If two modules have the same content, their names are treated as synonymous. This can lead to weird bugs when modules have state.\n\nExample:\n\nexample/x.js\n\n``` js\nvar i = 0;\nmodule.exports = function () {return i++;};\n```\n\nexample/y.js (identical to x.js)\n\n``` js\nvar i = 0;\nmodule.exports = function () {return i++;};\n```\n\nexample/index.js\n\n``` js\nvar x = require('./x');\nvar y = require('./y');\nconsole.log(x());\nconsole.log(x());\nconsole.log(y());\nconsole.log(y());\n```\n\nActual output:\n\n```\n0\n1\n2\n3\n```\n\nExpected output:\n\n```\n0\n1\n0\n1\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1027/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1027/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1026",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1026/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1026/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1026/events",
    "html_url": "https://github.com/browserify/browserify/issues/1026",
    "id": 51976134,
    "node_id": "MDU6SXNzdWU1MTk3NjEzNA==",
    "number": 1026,
    "title": "Global transform duplicated on each bundle",
    "user": {
      "login": "xdissent",
      "id": 99367,
      "node_id": "MDQ6VXNlcjk5MzY3",
      "avatar_url": "https://avatars.githubusercontent.com/u/99367?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xdissent",
      "html_url": "https://github.com/xdissent",
      "followers_url": "https://api.github.com/users/xdissent/followers",
      "following_url": "https://api.github.com/users/xdissent/following{/other_user}",
      "gists_url": "https://api.github.com/users/xdissent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xdissent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xdissent/subscriptions",
      "organizations_url": "https://api.github.com/users/xdissent/orgs",
      "repos_url": "https://api.github.com/users/xdissent/repos",
      "events_url": "https://api.github.com/users/xdissent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xdissent/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-12-15T11:37:48Z",
    "updated_at": "2014-12-16T06:32:31Z",
    "closed_at": "2014-12-16T06:32:16Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In `_createDeps`, the `globalTr` transform is set up to be written to the pipeline once on bundle. Since subsequent bundles re-run `_createDeps`, that's fine - it'll get re-created and re-added once on _each_ bundle. However, the `globalTr` is also _recorded_ on each bundle, and therefore it gets re-added to the pipeline right before each rebundle. The result is that every bundle adds an additional clone of the `globalTr` to the pipeline. I know 7.0.1 fixed this behavior for user-supplied transforms introduced in 7.0.0, but it seems 7.0.0 is only half fixed?\n\n```\n> var b = require('browserify')();\nundefined\n> b.bundle(); null\nnull\n> b._recorded.length\n1\n> b.bundle(); null\nnull\n> b._recorded.length\n2\n> b.bundle(); null\nnull\n> b._recorded.length\n3\n> b.bundle(); null\nnull\n> b._recorded.length\n4\n> b.bundle(); null\nnull\n> b._recorded\n[ { transform: [Function: globalTr],\n    global: true,\n    options: {} },\n  { transform: [Function: globalTr],\n    global: true,\n    options: {} },\n  { transform: [Function: globalTr],\n    global: true,\n    options: {} },\n  { transform: [Function: globalTr],\n    global: true,\n    options: {} },\n  { transform: [Function: globalTr],\n    global: true,\n    options: {} } ]\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1026/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1026/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1025",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1025/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1025/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1025/events",
    "html_url": "https://github.com/browserify/browserify/issues/1025",
    "id": 51888327,
    "node_id": "MDU6SXNzdWU1MTg4ODMyNw==",
    "number": 1025,
    "title": "[--standalone] How to force window global even if there is a module system",
    "user": {
      "login": "ibc",
      "id": 16191,
      "node_id": "MDQ6VXNlcjE2MTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/16191?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ibc",
      "html_url": "https://github.com/ibc",
      "followers_url": "https://api.github.com/users/ibc/followers",
      "following_url": "https://api.github.com/users/ibc/following{/other_user}",
      "gists_url": "https://api.github.com/users/ibc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ibc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ibc/subscriptions",
      "organizations_url": "https://api.github.com/users/ibc/orgs",
      "repos_url": "https://api.github.com/users/ibc/repos",
      "events_url": "https://api.github.com/users/ibc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ibc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2014-12-13T13:53:15Z",
    "updated_at": "2014-12-13T13:53:15Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "```\n--standalone -s  Generate a UMD bundle for the supplied export name.\n                 This bundle works with other module systems and sets the name\n                 given as a window global if no module system is found.\n```\n\nLet's assume I'm building a widget that can be included in any thirty website (so I do not own the website in which it will be included). I generate my widget bundle with `--standalone MyWidget` and I provide documentation/API indicating that my bundle exports the `window.MyWidget` class constructor.\n\nBut... if the website includes its own module system then the above is not true since there won't be `window.MyWidget`. \n\nIs there a way to **force** the window global even if a module system is detected?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1025/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1025/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1024",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1024/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1024/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1024/events",
    "html_url": "https://github.com/browserify/browserify/issues/1024",
    "id": 51872971,
    "node_id": "MDU6SXNzdWU1MTg3Mjk3MQ==",
    "number": 1024,
    "title": "Feature request: Bundle scoped \"globals\"",
    "user": {
      "login": "fkling",
      "id": 179026,
      "node_id": "MDQ6VXNlcjE3OTAyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/179026?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fkling",
      "html_url": "https://github.com/fkling",
      "followers_url": "https://api.github.com/users/fkling/followers",
      "following_url": "https://api.github.com/users/fkling/following{/other_user}",
      "gists_url": "https://api.github.com/users/fkling/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fkling/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fkling/subscriptions",
      "organizations_url": "https://api.github.com/users/fkling/orgs",
      "repos_url": "https://api.github.com/users/fkling/repos",
      "events_url": "https://api.github.com/users/fkling/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fkling/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-12-13T02:10:20Z",
    "updated_at": "2015-08-24T14:57:01Z",
    "closed_at": "2015-08-17T21:47:07Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Maybe this has been discussed before, maybe this is even possible already, but I havn't found any information about it.\n\nWith \"bundle scoped globals\" I mean variables that are accessible within every module, without requiring them explicitly, but are not exposed outside of the bundle.\n\nThe main motivation comes from working with transpilers. Most transpillers include some kind of runtime. The better transpillers let you choose where / how you want to include it and even how to expose it. E.g. 6to5 lets you specify a namespace for the runtime and all you have to do is provide the runtime through that namespace.\n\nHowever, since the runtime is only relevant inside the bundle, I don't want to provide the runtime as true global. I also don't want to require the runtime in every file since the transpilation process should be transparent.\n\nI want to be able to say \"make this module available to every other module via that name/variable\".\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1024/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1024/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1023",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1023/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1023/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1023/events",
    "html_url": "https://github.com/browserify/browserify/issues/1023",
    "id": 51820865,
    "node_id": "MDU6SXNzdWU1MTgyMDg2NQ==",
    "number": 1023,
    "title": "Windows support (in particular for the path lib)",
    "user": {
      "login": "cjblomqvist",
      "id": 1033848,
      "node_id": "MDQ6VXNlcjEwMzM4NDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1033848?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cjblomqvist",
      "html_url": "https://github.com/cjblomqvist",
      "followers_url": "https://api.github.com/users/cjblomqvist/followers",
      "following_url": "https://api.github.com/users/cjblomqvist/following{/other_user}",
      "gists_url": "https://api.github.com/users/cjblomqvist/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cjblomqvist/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cjblomqvist/subscriptions",
      "organizations_url": "https://api.github.com/users/cjblomqvist/orgs",
      "repos_url": "https://api.github.com/users/cjblomqvist/repos",
      "events_url": "https://api.github.com/users/cjblomqvist/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cjblomqvist/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2014-12-12T15:57:39Z",
    "updated_at": "2015-11-17T10:16:30Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Basically, my issue is this: https://github.com/substack/path-browserify/issues/1\n\nSummary: Easily fixed in path-browserify, but it depends on process.platform being available, which it cannot be as it is done right now since the process lib is only defining an object. I.e. in order for process.platform to be properly set there needs to be some kind of preprocessing server-side of the process script so that we can get the server's process values.\n\nAny clues? This would probably fit best in some kind of option but right now it doesn't seem easily doable?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1023/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1023/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1022",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1022/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1022/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1022/events",
    "html_url": "https://github.com/browserify/browserify/issues/1022",
    "id": 51706557,
    "node_id": "MDU6SXNzdWU1MTcwNjU1Nw==",
    "number": 1022,
    "title": "Suggestion for dependency mapping optimization",
    "user": {
      "login": "arendjr",
      "id": 533294,
      "node_id": "MDQ6VXNlcjUzMzI5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/533294?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arendjr",
      "html_url": "https://github.com/arendjr",
      "followers_url": "https://api.github.com/users/arendjr/followers",
      "following_url": "https://api.github.com/users/arendjr/following{/other_user}",
      "gists_url": "https://api.github.com/users/arendjr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arendjr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arendjr/subscriptions",
      "organizations_url": "https://api.github.com/users/arendjr/orgs",
      "repos_url": "https://api.github.com/users/arendjr/repos",
      "events_url": "https://api.github.com/users/arendjr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arendjr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-12-11T16:23:40Z",
    "updated_at": "2014-12-12T08:50:30Z",
    "closed_at": "2014-12-12T08:40:58Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Reading the code of a generated Browserify bundle, I notice that every included module receives a mapping which maps the paths/names of the required modules to a module index. So far, so good.\n\nBut I think that whenever you're requiring a local module (a module included in the same bundle and for which an index is known), no mapping would be required. Instead, a source transformation could've inserted the right index straight into the call to require() and the mapping could've become obsolete. Now, I know source transformation can sometimes be tricky to get right, but considering that browserify is already scanning the source files for calls to require(), half the work might actually be already done.\n\nAlso, for external modules (those that cannot be resolved within the same bundle should be passed to an external require() function), the mapping typically seems to have a value that is identical to the key. I'm not sure if there are cases where this is not true, but if it is always the case, it might even be possible to get rid of the entire mapping passed to modules.\n\nIf this is a good idea (I think it is :) I would be happy to work on implementing it myself, but reading the source I think I need some pointers on where to start, because it seems significant parts of browserify are implemented in external modules which I'm not too familiar with.\n\nCheers!\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1022/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1022/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1021",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1021/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1021/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1021/events",
    "html_url": "https://github.com/browserify/browserify/issues/1021",
    "id": 51645557,
    "node_id": "MDU6SXNzdWU1MTY0NTU1Nw==",
    "number": 1021,
    "title": "-r ignore if same as entry file",
    "user": {
      "login": "marcboscher",
      "id": 1174558,
      "node_id": "MDQ6VXNlcjExNzQ1NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1174558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcboscher",
      "html_url": "https://github.com/marcboscher",
      "followers_url": "https://api.github.com/users/marcboscher/followers",
      "following_url": "https://api.github.com/users/marcboscher/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcboscher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcboscher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcboscher/subscriptions",
      "organizations_url": "https://api.github.com/users/marcboscher/orgs",
      "repos_url": "https://api.github.com/users/marcboscher/repos",
      "events_url": "https://api.github.com/users/marcboscher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcboscher/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-12-11T04:47:56Z",
    "updated_at": "2015-05-28T19:11:29Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "-r flag does nothing in this case\n`browserify -r ./main.js main.js > bundle.js`\nnor does\n`browserify -r ./main.js:mymain main.js > bundle.js`\n\nBasically browserify still assigns a numerial index to the main module instead of an alias and require(\"mymain\") will fail\n\nTry it on: https://github.com/marcboscher/browserify-test\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1021/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1021/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1020",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1020/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1020/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1020/events",
    "html_url": "https://github.com/browserify/browserify/issues/1020",
    "id": 51642645,
    "node_id": "MDU6SXNzdWU1MTY0MjY0NQ==",
    "number": 1020,
    "title": "-r fails when requiring the same file from multiple folders",
    "user": {
      "login": "marcboscher",
      "id": 1174558,
      "node_id": "MDQ6VXNlcjExNzQ1NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1174558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcboscher",
      "html_url": "https://github.com/marcboscher",
      "followers_url": "https://api.github.com/users/marcboscher/followers",
      "following_url": "https://api.github.com/users/marcboscher/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcboscher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcboscher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcboscher/subscriptions",
      "organizations_url": "https://api.github.com/users/marcboscher/orgs",
      "repos_url": "https://api.github.com/users/marcboscher/repos",
      "events_url": "https://api.github.com/users/marcboscher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcboscher/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-12-11T03:46:53Z",
    "updated_at": "2015-02-05T13:13:40Z",
    "closed_at": "2014-12-19T08:04:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Take this project for example:\n/util.js \n/main.js --> require('./util'), require(\"./a/submodule\")\n/a/submodule.js --> require('../util')\n\nRun: `browserify -r ./util.js main.js > bundle.js`\n\nThe bundle.js will not run because the resolved dependencies for util.js point to undefined. E.g.\n`{\"./a/submodule.js\":1,\"./util.js\":undefined}`\n`{\"../util\":undefined}`\n\nNow run:`browserify -r ./util.js:./util main.js > bundle.js` \n\nThe bundle.js still won't run but only one of the two resolved dependencies is undefined\n`{\"./a/submodule\":1,\"./util\":\"./util\"}`\n`{\"../util\":undefined}`\n\nThis seems like a bug to me, but I could just be misunderstanding this whole thing. A sample project to reproduce can be found here: https://github.com/marcboscher/browserify-test\n\nUsing browserify 7.0.0 on Windows 7\n\nThanks\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1020/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1020/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1019",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1019/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1019/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1019/events",
    "html_url": "https://github.com/browserify/browserify/issues/1019",
    "id": 51614672,
    "node_id": "MDU6SXNzdWU1MTYxNDY3Mg==",
    "number": 1019,
    "title": "--require/-r seems to be broken when used with pipe input after browserify v4",
    "user": {
      "login": "cymen",
      "id": 121034,
      "node_id": "MDQ6VXNlcjEyMTAzNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/121034?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cymen",
      "html_url": "https://github.com/cymen",
      "followers_url": "https://api.github.com/users/cymen/followers",
      "following_url": "https://api.github.com/users/cymen/following{/other_user}",
      "gists_url": "https://api.github.com/users/cymen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cymen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cymen/subscriptions",
      "organizations_url": "https://api.github.com/users/cymen/orgs",
      "repos_url": "https://api.github.com/users/cymen/repos",
      "events_url": "https://api.github.com/users/cymen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cymen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-12-10T21:39:56Z",
    "updated_at": "2015-03-02T21:46:53Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Here is a repo with branches browserify_4, _5, _6, _7 to demonstrate:\n\nhttps://github.com/cymen/browserify-pipe-issue/\n\nIt looks like it is the require that is breaking. For browserify v4, it works:\n\nhttps://github.com/cymen/browserify-pipe-issue/blob/browserify_4/built/common.js\n\nBut after v4, the require for `./robot.js` used in browserifying common.js does this (does not work):\n\nhttps://github.com/cymen/browserify-pipe-issue/blob/browserify_5/built/common.js\nhttps://github.com/cymen/browserify-pipe-issue/blob/browserify_6/built/common.js\nhttps://github.com/cymen/browserify-pipe-issue/blob/browserify_7/built/common.js\n\nI have the build with pipes approach in the package.json which is:\n\n``` json\n{\n  ...\n  \"scripts\": {\n    \"build_common\": \"cd lib && cat common.js | browserify -r ./robot.js - > ../built/common.js\",\n    \"build_beep\": \"cd lib && cat beep.js | browserify -x ./robot.js - > ../built/beep.js\",\n    \"build_bop\": \"cd lib && cat bop.js | browserify -x ./robot.js - > ../built/bop.js\",\n    \"build\": \"npm run build_common && npm run build_beep && npm run build_bop\",\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  ...\n}\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1019/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1019/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1018",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1018/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1018/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1018/events",
    "html_url": "https://github.com/browserify/browserify/pull/1018",
    "id": 51612269,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjU4NTU5MTM=",
    "number": 1018,
    "title": "Update process to 0.10.0",
    "user": {
      "login": "devongovett",
      "id": 19409,
      "node_id": "MDQ6VXNlcjE5NDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/devongovett",
      "html_url": "https://github.com/devongovett",
      "followers_url": "https://api.github.com/users/devongovett/followers",
      "following_url": "https://api.github.com/users/devongovett/following{/other_user}",
      "gists_url": "https://api.github.com/users/devongovett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/devongovett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/devongovett/subscriptions",
      "organizations_url": "https://api.github.com/users/devongovett/orgs",
      "repos_url": "https://api.github.com/users/devongovett/repos",
      "events_url": "https://api.github.com/users/devongovett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/devongovett/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-12-10T21:17:48Z",
    "updated_at": "2015-03-24T13:15:32Z",
    "closed_at": "2015-01-09T05:41:05Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/1018",
      "html_url": "https://github.com/browserify/browserify/pull/1018",
      "diff_url": "https://github.com/browserify/browserify/pull/1018.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/1018.patch",
      "merged_at": "2015-01-09T05:41:05Z"
    },
    "body": "Includes a much faster implementation of `process.nextTick` - https://github.com/defunctzombie/node-process/pull/29\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1018/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1018/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1017",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1017/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1017/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1017/events",
    "html_url": "https://github.com/browserify/browserify/issues/1017",
    "id": 51547274,
    "node_id": "MDU6SXNzdWU1MTU0NzI3NA==",
    "number": 1017,
    "title": "b.require() causes (gulp-)es6-transpiler to complain",
    "user": {
      "login": "maranomynet",
      "id": 86827,
      "node_id": "MDQ6VXNlcjg2ODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/86827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maranomynet",
      "html_url": "https://github.com/maranomynet",
      "followers_url": "https://api.github.com/users/maranomynet/followers",
      "following_url": "https://api.github.com/users/maranomynet/following{/other_user}",
      "gists_url": "https://api.github.com/users/maranomynet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maranomynet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maranomynet/subscriptions",
      "organizations_url": "https://api.github.com/users/maranomynet/orgs",
      "repos_url": "https://api.github.com/users/maranomynet/repos",
      "events_url": "https://api.github.com/users/maranomynet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maranomynet/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-12-10T11:25:37Z",
    "updated_at": "2014-12-12T09:47:00Z",
    "closed_at": "2014-12-12T09:47:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi. I'm not sure if this is a bug, but here goes...\n\nI'm trying to split my bundles into a common one (containing 'react', 'lodash' and other assets) and smaller secondary bundles that use the common bundle.\n\nI'm using gulp, and soon after the browserify step I pass the bundles through `gulp-es6-transpiler`.\n\n``` js\nvar browserify = require('browserify');\nvar vinylTransform = require('vinyl-transform');\n\n//.... gulp.src and some .pipe() steps!\n  .pipe(\n      vinylTransform(function(filename) {\n        var b = browserify(filename);\n        b.require(['react']);\n        return b.bundle();\n      })\n    )\n  .pipe(\n      es6transpiler({\n        disallowDuplicated: false,\n        disallowUnknownReferences: false,\n      })\n    ) \n  // ... rename steps, etc.\n  .pipe( gulp.dest( paths.dist ) );\n```\n\nThe problem is that the `.require(['react'])` bit makes `es6-transpiler` complain that\n\n```\n Error in plugin 'gulp-es6-transpiler'\nMessage:\n    line 1: can't assign to const variable require\nDetails:\n    fileName: _src\\libs\\common.js\n```\n\nI know there exists an es6-transpiler transform for browserify, but I'd much prefer to have a generic post-processing step instead - if possible.\n\nShould I rather be asking the es6-transpiler team?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1017/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1017/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1016",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1016/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1016/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1016/events",
    "html_url": "https://github.com/browserify/browserify/pull/1016",
    "id": 51490261,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjU3ODIxMzY=",
    "number": 1016,
    "title": "added test to demonstrate failure for relative paths causing transforms ...",
    "user": {
      "login": "phillipgreenii",
      "id": 757541,
      "node_id": "MDQ6VXNlcjc1NzU0MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/757541?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phillipgreenii",
      "html_url": "https://github.com/phillipgreenii",
      "followers_url": "https://api.github.com/users/phillipgreenii/followers",
      "following_url": "https://api.github.com/users/phillipgreenii/following{/other_user}",
      "gists_url": "https://api.github.com/users/phillipgreenii/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phillipgreenii/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phillipgreenii/subscriptions",
      "organizations_url": "https://api.github.com/users/phillipgreenii/orgs",
      "repos_url": "https://api.github.com/users/phillipgreenii/repos",
      "events_url": "https://api.github.com/users/phillipgreenii/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phillipgreenii/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-12-09T22:20:27Z",
    "updated_at": "2014-12-15T01:31:28Z",
    "closed_at": "2014-12-15T01:31:28Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/1016",
      "html_url": "https://github.com/browserify/browserify/pull/1016",
      "diff_url": "https://github.com/browserify/browserify/pull/1016.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/1016.patch",
      "merged_at": null
    },
    "body": "These unit tests demonstrate the problems with  Unable to load transform module when paths are specified as relative #1015 \n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1016/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1016/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1015",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1015/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1015/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1015/events",
    "html_url": "https://github.com/browserify/browserify/issues/1015",
    "id": 51490137,
    "node_id": "MDU6SXNzdWU1MTQ5MDEzNw==",
    "number": 1015,
    "title": "Unable to load transform module when paths are specified as relative",
    "user": {
      "login": "phillipgreenii",
      "id": 757541,
      "node_id": "MDQ6VXNlcjc1NzU0MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/757541?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phillipgreenii",
      "html_url": "https://github.com/phillipgreenii",
      "followers_url": "https://api.github.com/users/phillipgreenii/followers",
      "following_url": "https://api.github.com/users/phillipgreenii/following{/other_user}",
      "gists_url": "https://api.github.com/users/phillipgreenii/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phillipgreenii/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phillipgreenii/subscriptions",
      "organizations_url": "https://api.github.com/users/phillipgreenii/orgs",
      "repos_url": "https://api.github.com/users/phillipgreenii/repos",
      "events_url": "https://api.github.com/users/phillipgreenii/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phillipgreenii/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-12-09T22:19:24Z",
    "updated_at": "2014-12-15T01:31:38Z",
    "closed_at": "2014-12-15T01:31:38Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "I hit an edge case where browserify is not able to load transform modules when paths are specified as relative paths.\n\nWorking code:\n\n``` javascript\n  var b = browserify({\n    transform: ['tr'],\n    paths: [ __dirname + '/paths/x', __dirname + '/paths/y' ],\n    entries: __dirname + '/paths/main.js'\n  });\n```\n\nFailing code:\n\n``` javascript\n  var b = browserify({\n    transform: ['tr'],\n    paths: ['./test/paths/x', './test/paths/y' ],\n    entries: __dirname + '/paths/main.js'\n  });\n```\n\nError:\n\n```\nCannot find module 'tr' from 'test\\paths\\x\\ccc'\n```\n\n`__dirname` is the absolute path to `./test`, so the paths in both tests are the same\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1015/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1015/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1014",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1014/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1014/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1014/events",
    "html_url": "https://github.com/browserify/browserify/issues/1014",
    "id": 51442625,
    "node_id": "MDU6SXNzdWU1MTQ0MjYyNQ==",
    "number": 1014,
    "title": "External and Require Bundling Resulting in Undefined for JQuery/Angular",
    "user": {
      "login": "nkoterba",
      "id": 2508944,
      "node_id": "MDQ6VXNlcjI1MDg5NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2508944?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nkoterba",
      "html_url": "https://github.com/nkoterba",
      "followers_url": "https://api.github.com/users/nkoterba/followers",
      "following_url": "https://api.github.com/users/nkoterba/following{/other_user}",
      "gists_url": "https://api.github.com/users/nkoterba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nkoterba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nkoterba/subscriptions",
      "organizations_url": "https://api.github.com/users/nkoterba/orgs",
      "repos_url": "https://api.github.com/users/nkoterba/repos",
      "events_url": "https://api.github.com/users/nkoterba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nkoterba/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 12,
    "created_at": "2014-12-09T15:45:04Z",
    "updated_at": "2015-02-22T07:20:19Z",
    "closed_at": "2015-02-22T07:20:19Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I've tried several online guides to create two browserify-based bundles: one of common 3rd party libs; one of our application's source.  Even trying a simple/basic example I can't get things to work.  Perhaps I am missing something?\n\nVersions:\nAngular: 1.3.6 via npm\nJQuery: 2.1.1 via npm\nBrowserify: 7.0\nGulp: 3.8.10\n\n**NOTE: While I was putting info into the package.json browser field and using browserify-shim, I removed all of this from my package.json during this simple test to make sure nothing odd was happening**\n\n**gulpfile.js**\n\n``` javascript\nvar gulp = require('gulp');\nvar browserify = require('browserify');\nvar fs = require('fs');\n\ngulp.task('app', function(callback) {\n    return browserify('./app/js/app.js')\n      .external(require.resolve('../../node_modules/jquery/dist/jquery.js'))\n      .external(require.resolve('../../node_modules/angular/angular.js'))\n      .bundle(function(err, app) {\n          fs.writeFile('./app/build/app.js', app);\n      });\n});\n\ngulp.task('vendor', function(callback) {\n  return browserify()\n      .require(require.resolve('../../node_modules/jquery/dist/jquery.js'), { expose: 'jquery' })\n      .require(require.resolve('../../node_modules/angular/angular.js'), { expose: 'angular' })\n      .bundle(function(err, libs) {\n            fs.writeFile('./app/build/libs.js', libs);\n      });\n});\n```\n\n**app.js**\n\n``` javascript\nrequire('jquery');\nvar angular = require('angular');\n\nvar app = angular.module('app', []);\n\napp.controller('TestController', function($scope) {\n   $scope.text = \"Hi Mom\";\n});\n```\n\n**index.html**\n\n``` html\n<!DOCTYPE html>\n<html ng-app=\"app\">\n<head>\n    <script src=\"./build/libs.js\"></script>\n    <script src=\"./build/app.js\"></script>\n</head>\n<body ng-controller=\"TestController\">\n\n<div>{{text}}</div>\n</body>\n</html>\n```\n\nNeither jQuery nor Angular is correctly loaded. In my web browser console output, I get:\n\n``` javascript\n  Uncaught TypeError: undefined is not a function\nlibs.js:64 Uncaught Error: [$injector:modulerr] Failed to instantiate module app due to:\nError: [$injector:nomod] Module 'app' is not available! You either misspelled the module name or forgot to load it. If registering a module ensure that you specify the dependencies as the second argument.\n```\n\nOn line 8 of app.js, which is:\n\n``` javascript\nvar app = angular.module('app', []);\n```\n\ndue to the fact angular is 'undefined'.\n\nWhen I look at my \"bundled\" files, I do see that libs.js does indeed contain both jquery and angular.\n\nAny help is very much appreciated!\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1014/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1014/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1013",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1013/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1013/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1013/events",
    "html_url": "https://github.com/browserify/browserify/issues/1013",
    "id": 51381784,
    "node_id": "MDU6SXNzdWU1MTM4MTc4NA==",
    "number": 1013,
    "title": "can't install browserify via command line",
    "user": {
      "login": "marclundgren",
      "id": 1154834,
      "node_id": "MDQ6VXNlcjExNTQ4MzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1154834?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marclundgren",
      "html_url": "https://github.com/marclundgren",
      "followers_url": "https://api.github.com/users/marclundgren/followers",
      "following_url": "https://api.github.com/users/marclundgren/following{/other_user}",
      "gists_url": "https://api.github.com/users/marclundgren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marclundgren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marclundgren/subscriptions",
      "organizations_url": "https://api.github.com/users/marclundgren/orgs",
      "repos_url": "https://api.github.com/users/marclundgren/repos",
      "events_url": "https://api.github.com/users/marclundgren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marclundgren/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-12-09T02:49:13Z",
    "updated_at": "2014-12-09T03:56:06Z",
    "closed_at": "2014-12-09T03:56:06Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "```\n‚òÅ  ~  sudo npm -g remove browserify\nunbuild browserify@7.0.0\n‚òÅ  ~  sudo npm -g install browserify\n/usr/local/bin/browserify -> /usr/local/lib/node_modules/browserify/bin/cmd.js\nnpm ERR! peerinvalid The package asn1.js does not satisfy its siblings' peerDependencies requirements!\nnpm ERR! peerinvalid Peer asn1.js-rfc3280@0.5.1 wants asn1.js@^0.6.0\n\nnpm ERR! System Darwin 14.0.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"-g\" \"install\" \"browserify\"\nnpm ERR! cwd /Users/marc\nnpm ERR! node -v v0.10.31\nnpm ERR! npm -v 2.0.0-beta.0\nnpm ERR! code EPEERINVALID\nnpm ERR!\nnpm ERR! Additional logging details can be found in:\nnpm ERR!     /Users/marc/npm-debug.log\nnpm ERR! not ok code 0\n‚òÅ  ~\n```\n\nHost: OS X, Yosemite\n\nNote: I created a brand new ubuntu VM, and the problem doesn't exist. \n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1013/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1013/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1012",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1012/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1012/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1012/events",
    "html_url": "https://github.com/browserify/browserify/issues/1012",
    "id": 51242544,
    "node_id": "MDU6SXNzdWU1MTI0MjU0NA==",
    "number": 1012,
    "title": "7.0.0 Breaks rebundles with coffeescript using watchify",
    "user": {
      "login": "startswithaj",
      "id": 3658522,
      "node_id": "MDQ6VXNlcjM2NTg1MjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3658522?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/startswithaj",
      "html_url": "https://github.com/startswithaj",
      "followers_url": "https://api.github.com/users/startswithaj/followers",
      "following_url": "https://api.github.com/users/startswithaj/following{/other_user}",
      "gists_url": "https://api.github.com/users/startswithaj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/startswithaj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/startswithaj/subscriptions",
      "organizations_url": "https://api.github.com/users/startswithaj/orgs",
      "repos_url": "https://api.github.com/users/startswithaj/repos",
      "events_url": "https://api.github.com/users/startswithaj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/startswithaj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-12-08T02:27:30Z",
    "updated_at": "2014-12-14T11:28:52Z",
    "closed_at": "2014-12-14T11:28:52Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The transform changes introduced in 7.0.0 cause coffee-script compiles to be called on already compiled data when bundle() is called after the initial bundle.\n\n```\n  b = browserify\n    extensions: \".coffee\"\n    debug: true\n    cache: {}\n\n  bundler = watchify b\n  bundler.transform coffeeify\n  bundler.add paths.entry\n  bundler.on 'update', =>\n    bundler.source = null\n    bundler.bundle (err, src) =>\n        bundler.source = src\n        reloadJS(clients)\n\n  bundler.on 'log', (msg) => \n    console.log msg\n\n  # Start browserifying script resources\n  bundleStream = bundler.bundle (err, src) ->\n    if err then console.error \"initial browserify bundling error: \\n  %s \\n  %s %s:%s\", err.toString(), err.file, err.location?.first_line, err.location?.first_column, terminalAlertBadge\n    bundler.source = src\n```\n\n![screen shot 2014-12-08 at 12 25 25 pm](https://cloud.githubusercontent.com/assets/3658522/5334062/86cd8d20-7ed5-11e4-9767-086e99c9cb1c.png)\n\nSee data property in scope variables\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1012/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1012/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1011",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1011/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1011/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1011/events",
    "html_url": "https://github.com/browserify/browserify/issues/1011",
    "id": 51228070,
    "node_id": "MDU6SXNzdWU1MTIyODA3MA==",
    "number": 1011,
    "title": "Do package.json transforms get applied when browserifying programmatically?",
    "user": {
      "login": "domenic",
      "id": 617481,
      "node_id": "MDQ6VXNlcjYxNzQ4MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/617481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domenic",
      "html_url": "https://github.com/domenic",
      "followers_url": "https://api.github.com/users/domenic/followers",
      "following_url": "https://api.github.com/users/domenic/following{/other_user}",
      "gists_url": "https://api.github.com/users/domenic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domenic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domenic/subscriptions",
      "organizations_url": "https://api.github.com/users/domenic/orgs",
      "repos_url": "https://api.github.com/users/domenic/repos",
      "events_url": "https://api.github.com/users/domenic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domenic/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-12-07T19:30:43Z",
    "updated_at": "2015-01-04T00:59:21Z",
    "closed_at": "2014-12-07T19:40:26Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Can't quite figure this out myself...\n\nI have a test directory with `package.json` and `entry.js`. `package.json` contains:\n\n``` json\n{\n    \"browserify\": {\n        \"transforms\": [\n            [\"jadeify\", { \"self\": true }]\n        ]\n    }\n}\n```\n\nTo test this, I am chdiring to that directory, then running `browserify().add(fullPathToEntryJs).bundle()`. However, when I modify the jadeify source to output any options passed to it, I get nothing (just `{ _flags: {} }`).\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1011/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1011/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1010",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1010/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1010/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1010/events",
    "html_url": "https://github.com/browserify/browserify/issues/1010",
    "id": 51117666,
    "node_id": "MDU6SXNzdWU1MTExNzY2Ng==",
    "number": 1010,
    "title": "fixme",
    "user": {
      "login": "yamsellem",
      "id": 606754,
      "node_id": "MDQ6VXNlcjYwNjc1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/606754?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yamsellem",
      "html_url": "https://github.com/yamsellem",
      "followers_url": "https://api.github.com/users/yamsellem/followers",
      "following_url": "https://api.github.com/users/yamsellem/following{/other_user}",
      "gists_url": "https://api.github.com/users/yamsellem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yamsellem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yamsellem/subscriptions",
      "organizations_url": "https://api.github.com/users/yamsellem/orgs",
      "repos_url": "https://api.github.com/users/yamsellem/repos",
      "events_url": "https://api.github.com/users/yamsellem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yamsellem/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2014-12-05T16:30:06Z",
    "updated_at": "2014-12-05T16:30:52Z",
    "closed_at": "2014-12-05T16:30:52Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": null,
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1010/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1010/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1009",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1009/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1009/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1009/events",
    "html_url": "https://github.com/browserify/browserify/issues/1009",
    "id": 50801354,
    "node_id": "MDU6SXNzdWU1MDgwMTM1NA==",
    "number": 1009,
    "title": "Bundled code does nothing",
    "user": {
      "login": "super-cache-money",
      "id": 1463145,
      "node_id": "MDQ6VXNlcjE0NjMxNDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1463145?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/super-cache-money",
      "html_url": "https://github.com/super-cache-money",
      "followers_url": "https://api.github.com/users/super-cache-money/followers",
      "following_url": "https://api.github.com/users/super-cache-money/following{/other_user}",
      "gists_url": "https://api.github.com/users/super-cache-money/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/super-cache-money/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/super-cache-money/subscriptions",
      "organizations_url": "https://api.github.com/users/super-cache-money/orgs",
      "repos_url": "https://api.github.com/users/super-cache-money/repos",
      "events_url": "https://api.github.com/users/super-cache-money/events{/privacy}",
      "received_events_url": "https://api.github.com/users/super-cache-money/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-12-03T08:26:12Z",
    "updated_at": "2014-12-03T08:49:41Z",
    "closed_at": "2014-12-03T08:49:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm doing something really stupid but for the life of me, I can't figure out what.\nI'm trying this: \n\n```\n    var jsStream = new stream.Readable();\n    jsStream._read = function noop() {}; \n    jsStream.push('console.log(\"thanks for helping!\"');\n    jsStream.push(null);\n\n    var b = browserify();\n    b.require(jsStream, {basedir: '.'});\n    var outStream = b.bundle();\n```\n\n`outStream` then contains this:\n\n```\nrequire=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nconsole.log(\"thanks for helping!\");\n},{}]},{},[]);\n```\n\nThis does nothing when run. How do I run a string in memory through browserify the right way? \nAlso, is there some kind of API I can read?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1009/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1009/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1008",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1008/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1008/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1008/events",
    "html_url": "https://github.com/browserify/browserify/issues/1008",
    "id": 50518540,
    "node_id": "MDU6SXNzdWU1MDUxODU0MA==",
    "number": 1008,
    "title": "API failing on for...of?",
    "user": {
      "login": "ben-eb",
      "id": 1282980,
      "node_id": "MDQ6VXNlcjEyODI5ODA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1282980?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ben-eb",
      "html_url": "https://github.com/ben-eb",
      "followers_url": "https://api.github.com/users/ben-eb/followers",
      "following_url": "https://api.github.com/users/ben-eb/following{/other_user}",
      "gists_url": "https://api.github.com/users/ben-eb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ben-eb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ben-eb/subscriptions",
      "organizations_url": "https://api.github.com/users/ben-eb/orgs",
      "repos_url": "https://api.github.com/users/ben-eb/repos",
      "events_url": "https://api.github.com/users/ben-eb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ben-eb/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-12-01T12:27:49Z",
    "updated_at": "2014-12-07T16:28:49Z",
    "closed_at": "2014-12-07T16:28:05Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello,\n\nI'm trying to use browserify with a project using Chrome's early implementation of Web MIDI. However I'm having some difficulty compiling this code using browserify's API via watchify/gulp:\n\n``` js\nnavigator.requestMIDIAccess().then(function(midiAccess) {\n    for (var input of midiAccess.inputs.values()) {\n        console.log(input.name);\n    }\n}, function() { console.log('MIDI unavailable') });\n```\n\n``` js\nvar assign     = require('object-assign'),\n    gulp       = require('gulp'),\n    gutil      = require('gulp-util'),\n    source     = require('vinyl-source-stream'),\n    uglify     = require('gulp-uglify'),\n    buffer     = require('gulp-buffer'),\n    watchify   = require('watchify'),\n    unpathify  = require('unpathify'),\n    browserify = require('browserify');\n\ngulp.task('watch', function() {\n    var bundler = watchify(browserify('./test.js', assign(watchify.args, {\n        fullPaths: false\n    })));\n\n    var bundle = function() {\n        gutil.log('Generating', gutil.colors.green('bundle'));\n\n        return bundler.bundle()\n            .on('error', gutil.log.bind(gutil, 'Browserify Error'))\n            .pipe(unpathify())\n            .pipe(source('test-bundle.js'))\n            .pipe(buffer())\n            .pipe(uglify())\n            .pipe(gulp.dest('./www'));\n    };\n\n    bundler.transform('brfs');\n    bundler.on('update', bundle);\n\n    return bundle();\n});\n```\n\nI get the following error:\n\n```\nBrowserify Error { [Error: Line 2: Unexpected identifier while parsing file: /test/test.js]\n  index: 77,\n  lineNumber: 2,\n  column: 20,\n  description: 'Unexpected identifier',\n  filename: '/test/test.js',\n  stream: \n   { _readableState: \n      { highWaterMark: 16,\n        buffer: [],\n        length: 0,\n        pipes: [Object],\n        pipesCount: 1,\n        flowing: true,\n        ended: false,\n        endEmitted: false,\n        reading: true,\n        sync: false,\n        needReadable: true,\n        emittedReadable: false,\n        readableListening: false,\n        objectMode: true,\n        defaultEncoding: 'utf8',\n        ranOut: false,\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null,\n        resumeScheduled: false },\n     readable: true,\n     domain: null,\n     _events: \n      { end: [Object],\n        error: [Object],\n        data: [Function: ondata],\n        _mutate: [Object] },\n     _maxListeners: 10,\n     _writableState: \n      { highWaterMark: 16,\n        objectMode: true,\n        needDrain: false,\n        ending: true,\n        ended: true,\n        finished: true,\n        decodeStrings: true,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function],\n        writecb: null,\n        writelen: 0,\n        buffer: [],\n        pendingcb: 0,\n        prefinished: true,\n        errorEmitted: false },\n     writable: true,\n     allowHalfOpen: true,\n     _options: { objectMode: true },\n     _wrapOptions: { objectMode: true },\n     _streams: [ [Object] ],\n     length: 1,\n     label: 'deps' } }\n```\n\nHowever when using the CLI (`browserify test.js -o www/test-bundle.js`), I get no errors. I don't think it is a problem with the gulp task necessarily, because I have been running this with no problems until using the `for...of` statement.\n\nI'm running the latest version of browserify in both cases. Any advice would be greatly appreciated!\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1008/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1008/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1007",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1007/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1007/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1007/events",
    "html_url": "https://github.com/browserify/browserify/issues/1007",
    "id": 50282977,
    "node_id": "MDU6SXNzdWU1MDI4Mjk3Nw==",
    "number": 1007,
    "title": "Bad require resolve",
    "user": {
      "login": "Delagen",
      "id": 783335,
      "node_id": "MDQ6VXNlcjc4MzMzNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/783335?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Delagen",
      "html_url": "https://github.com/Delagen",
      "followers_url": "https://api.github.com/users/Delagen/followers",
      "following_url": "https://api.github.com/users/Delagen/following{/other_user}",
      "gists_url": "https://api.github.com/users/Delagen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Delagen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Delagen/subscriptions",
      "organizations_url": "https://api.github.com/users/Delagen/orgs",
      "repos_url": "https://api.github.com/users/Delagen/repos",
      "events_url": "https://api.github.com/users/Delagen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Delagen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2014-11-27T11:46:46Z",
    "updated_at": "2015-02-25T12:41:19Z",
    "closed_at": "2015-02-25T12:41:19Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The following project structure\n`a/a.js`\n\n```\nmodule.exports = function() {\n console.log(\"a a\")\n};\n```\n\n`a/b.js`\n\n```\nmodule.exports = function() {\n console.log(\"a b\")\n};\n```\n\n`a/index.js`\n\n```\nmodule.exports = {\n    a: require(\"./a\"),\n    b:  require(\"./b\")\n};\n```\n\n`b/a.js`\n\n```\nmodule.exports = function() {\n console.log(\"b a\")\n};\n```\n\n`b/b.js`\n\n```\nmodule.exports = function() {\n console.log(\"b b\")\n};\n```\n\n`b/index.js`\n\n```\nmodule.exports = {\n    a: require(\"./a\"),\n    b:  require(\"./b\")\n};\n```\n\n`index.js`\n\n```\nmodule.exports = {\n    a: require(\"./a\"),\n    b: require(\"./b\")\n};\n```\n\n`browserify ./index.js`\nProduces output that replaces `b/index.js` with strange \n\n```\narguments[_][_][_].apply(exports,arguments)\n```\n\nwhich resolves to `a/index.js` and brokes the code.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1007/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1007/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1006",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1006/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1006/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1006/events",
    "html_url": "https://github.com/browserify/browserify/pull/1006",
    "id": 50187887,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjUwODkwMzk=",
    "number": 1006,
    "title": "allow custom resolve function",
    "user": {
      "login": "tiii",
      "id": 1043854,
      "node_id": "MDQ6VXNlcjEwNDM4NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1043854?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tiii",
      "html_url": "https://github.com/tiii",
      "followers_url": "https://api.github.com/users/tiii/followers",
      "following_url": "https://api.github.com/users/tiii/following{/other_user}",
      "gists_url": "https://api.github.com/users/tiii/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tiii/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tiii/subscriptions",
      "organizations_url": "https://api.github.com/users/tiii/orgs",
      "repos_url": "https://api.github.com/users/tiii/repos",
      "events_url": "https://api.github.com/users/tiii/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tiii/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2014-11-26T14:55:18Z",
    "updated_at": "2017-04-12T13:16:35Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/1006",
      "html_url": "https://github.com/browserify/browserify/pull/1006",
      "diff_url": "https://github.com/browserify/browserify/pull/1006.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/1006.patch",
      "merged_at": null
    },
    "body": "Allow a custom function to resolve require calls.\nThis functionality was present until version 4. Module-deps still supports it, but browserify does not pass the option.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1006/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1006/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1005",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1005/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1005/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1005/events",
    "html_url": "https://github.com/browserify/browserify/issues/1005",
    "id": 50150749,
    "node_id": "MDU6SXNzdWU1MDE1MDc0OQ==",
    "number": 1005,
    "title": "Require module inside another module",
    "user": {
      "login": "iamvdo",
      "id": 1260529,
      "node_id": "MDQ6VXNlcjEyNjA1Mjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1260529?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamvdo",
      "html_url": "https://github.com/iamvdo",
      "followers_url": "https://api.github.com/users/iamvdo/followers",
      "following_url": "https://api.github.com/users/iamvdo/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamvdo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamvdo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamvdo/subscriptions",
      "organizations_url": "https://api.github.com/users/iamvdo/orgs",
      "repos_url": "https://api.github.com/users/iamvdo/repos",
      "events_url": "https://api.github.com/users/iamvdo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamvdo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-11-26T11:26:11Z",
    "updated_at": "2015-03-17T14:52:48Z",
    "closed_at": "2015-03-17T14:50:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm requiring autoprefixer and want to get caniuse data from it, without installing it.\n\nI basically do:\n\n``` javascript\nvar data = require('autoprefixer-core/node_modules/caniuse-db/features-json/rem');\n```\n\nIt works with Node but Browserify fails to require this module when creating a standalone version of my module.\n\nI also tried `../` or `./` at the beginning of the path, but nothing works.\n\nWhat am I doing wrong?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1005/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1005/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1004",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1004/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1004/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1004/events",
    "html_url": "https://github.com/browserify/browserify/issues/1004",
    "id": 49960139,
    "node_id": "MDU6SXNzdWU0OTk2MDEzOQ==",
    "number": 1004,
    "title": "Does browserify make use of a `cache` option?",
    "user": {
      "login": "dustMason",
      "id": 369105,
      "node_id": "MDQ6VXNlcjM2OTEwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/369105?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dustMason",
      "html_url": "https://github.com/dustMason",
      "followers_url": "https://api.github.com/users/dustMason/followers",
      "following_url": "https://api.github.com/users/dustMason/following{/other_user}",
      "gists_url": "https://api.github.com/users/dustMason/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dustMason/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dustMason/subscriptions",
      "organizations_url": "https://api.github.com/users/dustMason/orgs",
      "repos_url": "https://api.github.com/users/dustMason/repos",
      "events_url": "https://api.github.com/users/dustMason/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dustMason/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2014-11-25T00:06:22Z",
    "updated_at": "2014-12-09T01:48:30Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\n\nI've been perusing the source of both browserify and watchify hoping to find a good way to speed up my builds using a cache. I want to take advantage of watchify's caching feature but without having to run a long-running process.\n\nI found a couple things which make it look like browserify might have some related features. For example, https://github.com/substack/node-browserify/blob/47c6933e711567de761c73fe81165223c7873433/test/double_bundle_parallel_cache.js contains a `cache` option. And https://github.com/substack/watchify/blob/master/index.js shows `cache` and `packageCache` as options taken from the browserify instance but I haven't found where those are actually used. Browserify's source doesn't mention a cache option that I can see and watchify doesn't appear to actually make use of the cache that it maintains.\n\nThe reason behind this is that my team is migrating our stack to Docker and for us the best workflow would involve watching files on our host machine, then triggering a full rebuild of our assets in a container upon changes.\n\nThanks!\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1004/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1004/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1003",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1003/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1003/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1003/events",
    "html_url": "https://github.com/browserify/browserify/issues/1003",
    "id": 49420680,
    "node_id": "MDU6SXNzdWU0OTQyMDY4MA==",
    "number": 1003,
    "title": "EMFILE error",
    "user": {
      "login": "kennyx46",
      "id": 3941650,
      "node_id": "MDQ6VXNlcjM5NDE2NTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3941650?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kennyx46",
      "html_url": "https://github.com/kennyx46",
      "followers_url": "https://api.github.com/users/kennyx46/followers",
      "following_url": "https://api.github.com/users/kennyx46/following{/other_user}",
      "gists_url": "https://api.github.com/users/kennyx46/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kennyx46/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kennyx46/subscriptions",
      "organizations_url": "https://api.github.com/users/kennyx46/orgs",
      "repos_url": "https://api.github.com/users/kennyx46/repos",
      "events_url": "https://api.github.com/users/kennyx46/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kennyx46/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-11-19T16:52:29Z",
    "updated_at": "2014-12-08T00:25:34Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi!\nWe get an `EMFILE` error while building project. Probably because of multiple openings of `package.json` file.\nIt would be great if we  could use custom resolve function for browserify instead of function in `browser-resolve`. Any other ideas?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1003/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1003/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1002",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1002/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1002/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1002/events",
    "html_url": "https://github.com/browserify/browserify/pull/1002",
    "id": 49334690,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjQ2Njc3MDk=",
    "number": 1002,
    "title": "update coffeeify link",
    "user": {
      "login": "stevemao",
      "id": 6316590,
      "node_id": "MDQ6VXNlcjYzMTY1OTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6316590?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stevemao",
      "html_url": "https://github.com/stevemao",
      "followers_url": "https://api.github.com/users/stevemao/followers",
      "following_url": "https://api.github.com/users/stevemao/following{/other_user}",
      "gists_url": "https://api.github.com/users/stevemao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stevemao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stevemao/subscriptions",
      "organizations_url": "https://api.github.com/users/stevemao/orgs",
      "repos_url": "https://api.github.com/users/stevemao/repos",
      "events_url": "https://api.github.com/users/stevemao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stevemao/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2014-11-19T06:04:47Z",
    "updated_at": "2014-11-24T13:19:29Z",
    "closed_at": "2014-11-24T13:19:29Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/1002",
      "html_url": "https://github.com/browserify/browserify/pull/1002",
      "diff_url": "https://github.com/browserify/browserify/pull/1002.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/1002.patch",
      "merged_at": "2014-11-24T13:19:29Z"
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1002/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1002/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1001",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1001/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1001/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1001/events",
    "html_url": "https://github.com/browserify/browserify/pull/1001",
    "id": 49244705,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjQ2MTg1ODA=",
    "number": 1001,
    "title": "third argument to -r sets `entry`",
    "user": {
      "login": "bevacqua",
      "id": 934293,
      "node_id": "MDQ6VXNlcjkzNDI5Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/934293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bevacqua",
      "html_url": "https://github.com/bevacqua",
      "followers_url": "https://api.github.com/users/bevacqua/followers",
      "following_url": "https://api.github.com/users/bevacqua/following{/other_user}",
      "gists_url": "https://api.github.com/users/bevacqua/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bevacqua/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bevacqua/subscriptions",
      "organizations_url": "https://api.github.com/users/bevacqua/orgs",
      "repos_url": "https://api.github.com/users/bevacqua/repos",
      "events_url": "https://api.github.com/users/bevacqua/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bevacqua/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-11-18T15:23:40Z",
    "updated_at": "2020-04-28T00:23:10Z",
    "closed_at": "2020-04-28T00:23:09Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/1001",
      "html_url": "https://github.com/browserify/browserify/pull/1001",
      "diff_url": "https://github.com/browserify/browserify/pull/1001.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/1001.patch",
      "merged_at": null
    },
    "body": "Fixes #1000\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1001/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1001/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/1000",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/1000/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/1000/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/1000/events",
    "html_url": "https://github.com/browserify/browserify/issues/1000",
    "id": 49241279,
    "node_id": "MDU6SXNzdWU0OTI0MTI3OQ==",
    "number": 1000,
    "title": "CLI can't repro API",
    "user": {
      "login": "bevacqua",
      "id": 934293,
      "node_id": "MDQ6VXNlcjkzNDI5Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/934293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bevacqua",
      "html_url": "https://github.com/bevacqua",
      "followers_url": "https://api.github.com/users/bevacqua/followers",
      "following_url": "https://api.github.com/users/bevacqua/following{/other_user}",
      "gists_url": "https://api.github.com/users/bevacqua/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bevacqua/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bevacqua/subscriptions",
      "organizations_url": "https://api.github.com/users/bevacqua/orgs",
      "repos_url": "https://api.github.com/users/bevacqua/repos",
      "events_url": "https://api.github.com/users/bevacqua/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bevacqua/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2014-11-18T14:58:32Z",
    "updated_at": "2014-11-24T13:09:49Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Specifically, I can't reproduce the result of doing `.require(main, { entry: true })`. Setting `-r main -e main` won't do it. Is there a special syntax for this?\n\n``` js\nbrowserify()\n  .transform('brfs')\n  .plugin(proxyquire.plugin)\n  .require(main, { entry: true })\n  .bundle()\n  .pipe(fs.createWriteStream(__dirname + '/bundle.js'));\n```\n\nI'm trying to make `proxyquire` work and I can't have it work unless I use the programmatic API. +@thlorenz\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/1000/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/1000/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/999",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/999/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/999/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/999/events",
    "html_url": "https://github.com/browserify/browserify/issues/999",
    "id": 49220684,
    "node_id": "MDU6SXNzdWU0OTIyMDY4NA==",
    "number": 999,
    "title": "browserify (cli) path issue",
    "user": {
      "login": "tssajo",
      "id": 2164104,
      "node_id": "MDQ6VXNlcjIxNjQxMDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2164104?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tssajo",
      "html_url": "https://github.com/tssajo",
      "followers_url": "https://api.github.com/users/tssajo/followers",
      "following_url": "https://api.github.com/users/tssajo/following{/other_user}",
      "gists_url": "https://api.github.com/users/tssajo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tssajo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tssajo/subscriptions",
      "organizations_url": "https://api.github.com/users/tssajo/orgs",
      "repos_url": "https://api.github.com/users/tssajo/repos",
      "events_url": "https://api.github.com/users/tssajo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tssajo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-11-18T12:43:35Z",
    "updated_at": "2014-11-24T18:38:25Z",
    "closed_at": "2014-11-24T18:38:25Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm running into a showstopper issue (for me) with the latest version of browserify (6.3.2) :\n\nMaybe I'm doing something wrong, but I just can't resolve this issue on my own. Details:\n\nWhen I run browserify from my Express js app (on the server side) everything works fine. Here is how I invoke browserify from my app:\n\n```\n            browserify()\n                .external('react')\n                .require('./cartReact.jsx')\n                .transform(reactify)\n                .require('./cartStore.js')\n                .transform(literalify)\n                .bundle().pipe(res);\n```\n\nThe resulting file works perfectly in the browser.\n\nFor prodcution use, I'd like to pre-build my bundle.js file from the CLI. Here is how I do it (note: I'm developing on the Windows platform) :\n\n```\nSET NODE_ENV=production& browserify -r ./cartStore.js -r ./cartReact.jsx > ./public/js/bundle.js\n```\n\nIt runs without error and creates the bundle.js file. However, this file does NOT work in the browser. I get the following error in the javascript console:\n\n```\nUncaught Error: Cannot find module './cartStore.js'\n```\n\nSo I compared the two resulting bundle.js files: the good one which I saved from my browser and the broken one which was created from the CLI. Here are the differences (diff only) :\n\n```\n--- bundle_good.js  2014-11-18 13:13:19.023288200 +0100\n+++ bundle.js   2014-11-18 13:15:02.366574200 +0100\n@@ -1,4 +1,4 @@\n-require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({\"./cartReact.jsx\":[function(require,module,exports){\n+require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({\"/cartReact.jsx\":[function(require,module,exports){\n /** @jsx React.DOM */\n /*jshint browser:false, node:true */\n\n@@ -254,7 +254,7 @@\n\n module.exports = cartReact;\n\n-},{\"./cartActions.js\":1,\"./cartStore.js\":undefined,\"superagent\":16}],\"./cartStore.js\":[function(require,module,exports){\n+},{\"./cartActions.js\":1,\"./cartStore.js\":undefined,\"superagent\":16}],\"/cartStore.js\":[function(require,module,exports){\n /*jshint browser:false, node:true */\n\n var _ = require('lodash'),\n```\n\nAs you can see, only two characters are missing from the broken bundle.js file:\nIn the \"good\" bundle.js file (which was generated from my app) the path e.g. to my cartStore.js file is correct: `\"./cartStore.js\"`\nbut in the bundle.js file which was created by the browserify CLI the path to the same file is wrong: `\"/cartStore.js\"`\nSo instead of the expected `./` path \"prefix\" browserify CLI bundles the file with the incorrect `/` path prefix. This is why the CLI created bundle.js file does not work in the browser.\n\nI tried to apply various CLI options to browserify to no avail... I've spent several hours trying to resolve this problem to no avail... I believe it is a problem with browserify CLI itself, at least on the Windows platform.\n\nCan you please help me with this?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/999/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/999/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/998",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/998/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/998/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/998/events",
    "html_url": "https://github.com/browserify/browserify/issues/998",
    "id": 49181038,
    "node_id": "MDU6SXNzdWU0OTE4MTAzOA==",
    "number": 998,
    "title": "can't find 'labeled-stream-splicer' error on gulp build",
    "user": {
      "login": "snypelife",
      "id": 1965406,
      "node_id": "MDQ6VXNlcjE5NjU0MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1965406?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/snypelife",
      "html_url": "https://github.com/snypelife",
      "followers_url": "https://api.github.com/users/snypelife/followers",
      "following_url": "https://api.github.com/users/snypelife/following{/other_user}",
      "gists_url": "https://api.github.com/users/snypelife/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/snypelife/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/snypelife/subscriptions",
      "organizations_url": "https://api.github.com/users/snypelife/orgs",
      "repos_url": "https://api.github.com/users/snypelife/repos",
      "events_url": "https://api.github.com/users/snypelife/events{/privacy}",
      "received_events_url": "https://api.github.com/users/snypelife/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2014-11-18T04:58:18Z",
    "updated_at": "2014-11-18T05:08:36Z",
    "closed_at": "2014-11-18T05:07:43Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Here's the error:\n\n```\nmodule.js:340\n    throw err;\n          ^\nError: Cannot find module 'labeled-stream-splicer'\n    at Function.Module._resolveFilename (module.js:338:15)\n    at Function.Module._load (module.js:280:25)\n    at Module.require (module.js:364:17)\n    at require (module.js:380:17)\n    at Object.<anonymous> (/Users/snypelife/project/node_modules/browserify/index.js:9:15)\n    at Module._compile (module.js:456:26)\n    at Object.Module._extensions..js (module.js:474:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Module.require (module.js:364:17)\n```\n\nIt's occurs right from the `var browserify = require('browserify');` and it's right in the main index.js for the module, its this line that it blows up at `var splicer = require('labeled-stream-splicer');`\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/998/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/998/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/997",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/997/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/997/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/997/events",
    "html_url": "https://github.com/browserify/browserify/issues/997",
    "id": 49041309,
    "node_id": "MDU6SXNzdWU0OTA0MTMwOQ==",
    "number": 997,
    "title": "Significant increase in bundle time since 3.4.1",
    "user": {
      "login": "startswithaj",
      "id": 3658522,
      "node_id": "MDQ6VXNlcjM2NTg1MjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3658522?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/startswithaj",
      "html_url": "https://github.com/startswithaj",
      "followers_url": "https://api.github.com/users/startswithaj/followers",
      "following_url": "https://api.github.com/users/startswithaj/following{/other_user}",
      "gists_url": "https://api.github.com/users/startswithaj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/startswithaj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/startswithaj/subscriptions",
      "organizations_url": "https://api.github.com/users/startswithaj/orgs",
      "repos_url": "https://api.github.com/users/startswithaj/repos",
      "events_url": "https://api.github.com/users/startswithaj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/startswithaj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-11-17T05:29:45Z",
    "updated_at": "2014-12-05T06:36:58Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Recently we updated from browserify 3.4.1 (release: dec 2013) to  5.12.0 and saw a marked increase in bundle time. \n\nWe use the browserify api inside some custom middleware that essentially looks like this\n\n```\n  b = browserify\n    extensions: \".coffee\"\n    debug: true\n  b.transform coffeeify #caching-coffeeify\n  b.add paths.entry\n\n  doBundle = ->\n    console.time(\"browerifying\")\n    b.bundle (err, src) ->\n      console.timeEnd(\"browerifying\")\n      b.source = src\n      reloadJS(clients)\n\n\n\n  watcher = chokidar.watch paths.client, { ignored: /^\\./ }\n  watcher.on 'change', doBundle\n\n```\n\nOn the same code base here is a cross section of bundle times with different versions\n\n```\n3.4.1\n\ntimeEnd 11-17 05:14 browerifying: 4339ms\n\ntimeEnd 11-17 05:14 browerifying: 5464ms\n\ntimeEnd 11-17 05:15 browerifying: 4758ms\n\ntimeEnd 11-17 05:15 browerifying: 3233ms\n\ntimeEnd 11-17 05:15 browerifying: 6151ms\n\ntimeEnd 11-17 05:15 browerifying: 4732ms\n\ntimeEnd 11-17 05:15 browerifying: 4483ms\n```\n\n```\n3.44.2\n\ntimeEnd 11-17 05:09 browerifying: 7232ms\n\ntimeEnd 11-17 05:09 browerifying: 4534ms\n\ntimeEnd 11-17 05:09 browerifying: 4829ms\n\ntimeEnd 11-17 05:09 browerifying: 4835ms\n\ntimeEnd 11-17 05:09 browerifying: 5517ms\n```\n\n```\n4.2.3\n\ntimeEnd 11-17 05:11 browerifying: 9720ms\n\ntimeEnd 11-17 05:11 browerifying: 6814ms\n\ntimeEnd 11-17 05:12 browerifying: 6009ms\n\ntimeEnd 11-17 05:12 browerifying: 6520ms\n\ntimeEnd 11-17 05:13 browerifying: 5742ms\n```\n\n```\n5.12.0\n\ntimeEnd 11-17 05:18 browerifying: 9010ms\n\ntimeEnd 11-17 05:18 browerifying: 7948ms\n\ntimeEnd 11-17 05:18 browerifying: 8108ms\n\ntimeEnd 11-17 05:18 browerifying: 7940ms\n\ntimeEnd 11-17 05:18 browerifying: 8045ms\n\ntimeEnd 11-17 05:18 browerifying: 8060ms\n\ntimeEnd 11-17 05:19 browerifying: 7625ms\n```\n\nI've spent quite some time looking at version diffs and the browserify source code trying to understand what has gradually brought on this fairly significant difference in bundle times since version 3.4.1. It would be cool (and appreciated) if someone that knows more about the internals of browserify (and which parts have been substituted out for other modules since version 3.4.1) to comment or hazard a guess as to the cause of this.\n\nI spent a bit of time commenting out and timing certain steps (for instance deduplication) to see if I could narrow down where this time increase occurs with no success.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/997/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/997/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/996",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/996/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/996/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/996/events",
    "html_url": "https://github.com/browserify/browserify/issues/996",
    "id": 48989835,
    "node_id": "MDU6SXNzdWU0ODk4OTgzNQ==",
    "number": 996,
    "title": "--outfile option incompatible with current method for generating external sourcemap",
    "user": {
      "login": "jackwanders",
      "id": 752393,
      "node_id": "MDQ6VXNlcjc1MjM5Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/752393?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jackwanders",
      "html_url": "https://github.com/jackwanders",
      "followers_url": "https://api.github.com/users/jackwanders/followers",
      "following_url": "https://api.github.com/users/jackwanders/following{/other_user}",
      "gists_url": "https://api.github.com/users/jackwanders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jackwanders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jackwanders/subscriptions",
      "organizations_url": "https://api.github.com/users/jackwanders/orgs",
      "repos_url": "https://api.github.com/users/jackwanders/repos",
      "events_url": "https://api.github.com/users/jackwanders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jackwanders/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2014-11-16T14:24:31Z",
    "updated_at": "2017-12-27T13:39:45Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "The README states that if the user would like to have their sourcemap pushed to an external file, as opposed to inlined in the bundle itself, they should use `exorcist` and pipe browserify's output through `exorcist` before writing the output file with `>`.\n\nIf the user makes use of the the `--outfile` (which doesn't currently offer any real benefit over `>`, but would if #995 were to be accepted :cough:), then this method of generating an external sourcemap isn't an option, as browserify no longer pipes to `process.stdout` and `exorcist` has no input on which to act.\n\nIt would seem that allowing browserify to directly create an external sourcemap file by either providing the `--debug` option with a filename as a value, or by adding a `--debug-file` option would be useful.\n\nI don't know that this is directly resolvable within browserify, as sourcemap generation appears to be delegated to `browser-pack`, so I'm hoping that @substack or someone else equally familiar with both packages could provide some input as to whether this is possible, or if it's been discussed and rejected as a feature in the past.\n\nThanks.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/996/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/996/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/995",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/995/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/995/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/995/events",
    "html_url": "https://github.com/browserify/browserify/pull/995",
    "id": 48937686,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjQ0OTYwNzU=",
    "number": 995,
    "title": "Ensure path to outfile exists before opening stream",
    "user": {
      "login": "jackwanders",
      "id": 752393,
      "node_id": "MDQ6VXNlcjc1MjM5Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/752393?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jackwanders",
      "html_url": "https://github.com/jackwanders",
      "followers_url": "https://api.github.com/users/jackwanders/followers",
      "following_url": "https://api.github.com/users/jackwanders/following{/other_user}",
      "gists_url": "https://api.github.com/users/jackwanders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jackwanders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jackwanders/subscriptions",
      "organizations_url": "https://api.github.com/users/jackwanders/orgs",
      "repos_url": "https://api.github.com/users/jackwanders/repos",
      "events_url": "https://api.github.com/users/jackwanders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jackwanders/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2014-11-16T00:19:05Z",
    "updated_at": "2018-01-14T19:32:13Z",
    "closed_at": "2018-01-14T19:32:13Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/995",
      "html_url": "https://github.com/browserify/browserify/pull/995",
      "diff_url": "https://github.com/browserify/browserify/pull/995.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/995.patch",
      "merged_at": "2018-01-14T19:32:13Z"
    },
    "body": "I found today that the `--outfile` option for browserify will fail when the user attempts to output the browserify output to a file in a non-existent directory. For example, when running \n\n``` bash\n$ browserify ./my/src/script.js --outfile=./dist/bundle.js\n```\n\nthe following error occurs when `./dist/` doesn't exist:\n\n``` bash\nevents.js:72\n        throw er; // Unhandled 'error' event\n              ^\nError: ENOENT, open './dist/bundle.js'\nWarning: Command failed:\nevents.js:72\n        throw er; // Unhandled 'error' event\n              ^\nError: ENOENT, open './dist/bundle.js'\n Use --force to continue.\n```\n\nThis seems like a common enough case (e.g. browserify may run during a build that contains a clean step that blows away the intended destination directory) that I believe browserify should simply make the directory rather than blow up when `fs.createWriteStream` fails.\n\nThis pull request uses `mkdirp` to ensure the outfile directory exists before opening the stream, and modifies a test case that would fail without this change.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/995/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/995/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/994",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/994/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/994/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/994/events",
    "html_url": "https://github.com/browserify/browserify/pull/994",
    "id": 48928167,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjQ0OTI5Nzc=",
    "number": 994,
    "title": "Don‚Äôt leak full path to source in deduped deps",
    "user": {
      "login": "jgoz",
      "id": 132233,
      "node_id": "MDQ6VXNlcjEzMjIzMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/132233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgoz",
      "html_url": "https://github.com/jgoz",
      "followers_url": "https://api.github.com/users/jgoz/followers",
      "following_url": "https://api.github.com/users/jgoz/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgoz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgoz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgoz/subscriptions",
      "organizations_url": "https://api.github.com/users/jgoz/orgs",
      "repos_url": "https://api.github.com/users/jgoz/repos",
      "events_url": "https://api.github.com/users/jgoz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgoz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-11-15T19:31:48Z",
    "updated_at": "2014-12-24T12:06:05Z",
    "closed_at": "2014-12-24T12:06:05Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/994",
      "html_url": "https://github.com/browserify/browserify/pull/994",
      "diff_url": "https://github.com/browserify/browserify/pull/994.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/994.patch",
      "merged_at": null
    },
    "body": "Fixes #951.\n\nWhen `fullPaths` is `false`, the important part of the implicit dependency is `row.dedupeIndex`, which must be set as a value in `row.deps`. The key doesn't actually matter, so I chose `dup` because it's short and descriptive enough.\n\nWhen `fullPaths` is `true`, these dependencies between deduplicated source and original source are already tracked.\n\nThis fixes #951 because `row.dedupe` contained the full path to the original source file and it was being used as the key in `deps`, which would leak full paths into the output bundle.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/994/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/994/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/993",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/993/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/993/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/993/events",
    "html_url": "https://github.com/browserify/browserify/issues/993",
    "id": 48912998,
    "node_id": "MDU6SXNzdWU0ODkxMjk5OA==",
    "number": 993,
    "title": "Transforms with symlinks in node_modules?",
    "user": {
      "login": "pselden",
      "id": 709282,
      "node_id": "MDQ6VXNlcjcwOTI4Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/709282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pselden",
      "html_url": "https://github.com/pselden",
      "followers_url": "https://api.github.com/users/pselden/followers",
      "following_url": "https://api.github.com/users/pselden/following{/other_user}",
      "gists_url": "https://api.github.com/users/pselden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pselden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pselden/subscriptions",
      "organizations_url": "https://api.github.com/users/pselden/orgs",
      "repos_url": "https://api.github.com/users/pselden/repos",
      "events_url": "https://api.github.com/users/pselden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pselden/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2014-11-15T15:51:12Z",
    "updated_at": "2014-11-23T16:10:46Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I've recently started to attempt to use the symlink trick https://github.com/substack/browserify-handbook#symlink to get rid of those pesky ../../.\n\nTo do this I added a symlink in my node_modules folder to a common module using something like this: \n\n``` bash\ncd node_modules && ln -nsf ../app/common/js common\n```\n\nIn my app I can now do:\n\n``` javascript\nvar common = require('common');\n```\n\nand all is well.\n\nHowever, if any of those files contain something to be transformed (I'm using reactify and envify) -- then it does not apply the transform to those files.\n\nIs there some additional option I need to be passing to explicitly tell it to run transforms on those modules?\n\nThis is using browserify: 6.3.2\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/993/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/993/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/992",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/992/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/992/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/992/events",
    "html_url": "https://github.com/browserify/browserify/issues/992",
    "id": 48826685,
    "node_id": "MDU6SXNzdWU0ODgyNjY4NQ==",
    "number": 992,
    "title": "Q: How to actually use --bare flag?",
    "user": {
      "login": "StreetStrider",
      "id": 2124761,
      "node_id": "MDQ6VXNlcjIxMjQ3NjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2124761?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/StreetStrider",
      "html_url": "https://github.com/StreetStrider",
      "followers_url": "https://api.github.com/users/StreetStrider/followers",
      "following_url": "https://api.github.com/users/StreetStrider/following{/other_user}",
      "gists_url": "https://api.github.com/users/StreetStrider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/StreetStrider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/StreetStrider/subscriptions",
      "organizations_url": "https://api.github.com/users/StreetStrider/orgs",
      "repos_url": "https://api.github.com/users/StreetStrider/repos",
      "events_url": "https://api.github.com/users/StreetStrider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/StreetStrider/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-11-14T18:57:45Z",
    "updated_at": "2014-11-16T09:24:58Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello. I'm trying to build some of my Node.js code into bundle with browserify.\nI've looked through documentation and flags and I've discovered there is a special `--bare` flag for it.\nI've tried to use this flag. However, this does not actually create module, and does not expose bundle to `module.exports`.\nI'm trying to manually fine-tune resulted bundle so it can play well with Node, but I had no success.\n\nThe only help I've found is in this [stackoverflow answer](http://stackoverflow.com/questions/22710887/compile-an-npm-module-into-a-single-file-without-dependencies/22888703#22888703), where some magic trick is proposed to solve this issue. The trick seemes working (or not), but this is ugly, there must be a better way to do this.\n\nPlease, it would be great if some of maintainers actualize this information. Also note in readme would be great as well. I've looked through issues here, on github, and everybody just says to use `--bare` but this didn't working.\nThanks.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/992/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/992/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/991",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/991/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/991/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/991/events",
    "html_url": "https://github.com/browserify/browserify/pull/991",
    "id": 48691529,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjQ0MDAwNjU=",
    "number": 991,
    "title": "expose property doesn't work with fullPaths enabled (fixes #850)",
    "user": {
      "login": "mwiencek",
      "id": 1056556,
      "node_id": "MDQ6VXNlcjEwNTY1NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1056556?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mwiencek",
      "html_url": "https://github.com/mwiencek",
      "followers_url": "https://api.github.com/users/mwiencek/followers",
      "following_url": "https://api.github.com/users/mwiencek/following{/other_user}",
      "gists_url": "https://api.github.com/users/mwiencek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mwiencek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mwiencek/subscriptions",
      "organizations_url": "https://api.github.com/users/mwiencek/orgs",
      "repos_url": "https://api.github.com/users/mwiencek/repos",
      "events_url": "https://api.github.com/users/mwiencek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mwiencek/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-11-13T21:03:39Z",
    "updated_at": "2014-11-24T15:01:53Z",
    "closed_at": "2014-11-24T15:01:53Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/991",
      "html_url": "https://github.com/browserify/browserify/pull/991",
      "diff_url": "https://github.com/browserify/browserify/pull/991.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/991.patch",
      "merged_at": null
    },
    "body": "If I set `fullPaths: true` on a bundle (which is required by watchify), and also use `expose` on one of the modules in that bundle, the full path clobbers the exposed name and anything that requires the exposed name throws an exception to the effect of `Error: Cannot find module '/foo/bar/baz'` (i.e. the full path).\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/991/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/991/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/990",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/990/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/990/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/990/events",
    "html_url": "https://github.com/browserify/browserify/issues/990",
    "id": 48647350,
    "node_id": "MDU6SXNzdWU0ODY0NzM1MA==",
    "number": 990,
    "title": "What happens if two node libraries require different versions of same \"foo\" library?",
    "user": {
      "login": "ibc",
      "id": 16191,
      "node_id": "MDQ6VXNlcjE2MTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/16191?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ibc",
      "html_url": "https://github.com/ibc",
      "followers_url": "https://api.github.com/users/ibc/followers",
      "following_url": "https://api.github.com/users/ibc/following{/other_user}",
      "gists_url": "https://api.github.com/users/ibc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ibc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ibc/subscriptions",
      "organizations_url": "https://api.github.com/users/ibc/orgs",
      "repos_url": "https://api.github.com/users/ibc/repos",
      "events_url": "https://api.github.com/users/ibc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ibc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-11-13T15:19:25Z",
    "updated_at": "2014-11-24T13:01:21Z",
    "closed_at": "2014-11-24T13:01:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Assuming that my Node project requires \"foo ~1.0.0\" and \"bar\", and \"bar\" requires \"foo ~2.0.0\", and those two versions of \"foo\" provide incompatible API, what would happen?\n\nWould `browserify()` include both of them in the bundle?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/990/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/990/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/989",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/989/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/989/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/989/events",
    "html_url": "https://github.com/browserify/browserify/issues/989",
    "id": 48514386,
    "node_id": "MDU6SXNzdWU0ODUxNDM4Ng==",
    "number": 989,
    "title": "Hard to install browserify",
    "user": {
      "login": "JacksonTian",
      "id": 327019,
      "node_id": "MDQ6VXNlcjMyNzAxOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JacksonTian",
      "html_url": "https://github.com/JacksonTian",
      "followers_url": "https://api.github.com/users/JacksonTian/followers",
      "following_url": "https://api.github.com/users/JacksonTian/following{/other_user}",
      "gists_url": "https://api.github.com/users/JacksonTian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JacksonTian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JacksonTian/subscriptions",
      "organizations_url": "https://api.github.com/users/JacksonTian/orgs",
      "repos_url": "https://api.github.com/users/JacksonTian/repos",
      "events_url": "https://api.github.com/users/JacksonTian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JacksonTian/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-11-12T14:16:33Z",
    "updated_at": "2018-02-06T14:28:07Z",
    "closed_at": "2018-02-06T14:28:07Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Network issue make install browserify need take too long time.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/989/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/989/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/988",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/988/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/988/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/988/events",
    "html_url": "https://github.com/browserify/browserify/issues/988",
    "id": 48479113,
    "node_id": "MDU6SXNzdWU0ODQ3OTExMw==",
    "number": 988,
    "title": "require(\"./dirname\") does not resolve to ./dirname/index.js",
    "user": {
      "login": "Pomax",
      "id": 177243,
      "node_id": "MDQ6VXNlcjE3NzI0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/177243?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Pomax",
      "html_url": "https://github.com/Pomax",
      "followers_url": "https://api.github.com/users/Pomax/followers",
      "following_url": "https://api.github.com/users/Pomax/following{/other_user}",
      "gists_url": "https://api.github.com/users/Pomax/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Pomax/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Pomax/subscriptions",
      "organizations_url": "https://api.github.com/users/Pomax/orgs",
      "repos_url": "https://api.github.com/users/Pomax/repos",
      "events_url": "https://api.github.com/users/Pomax/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Pomax/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-11-12T06:47:55Z",
    "updated_at": "2014-11-12T16:40:40Z",
    "closed_at": "2014-11-12T16:40:40Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In node, a `require(\"./dirname\")` will load `./dirname/index.js` if there is no file called `./dirname.js` in the filesystem (super handy for loading in `./lib` or `./routes`). Browserify does not seem to do the same thing, instead resolving it to \"nothing\", so a build that starts with a require-only file (such as a build.js with as content `return require(\"./src\");`) will be built as a ~530 byte library with browserify's require wrapper, that one line, and then nothing else =)\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/988/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/988/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/987",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/987/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/987/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/987/events",
    "html_url": "https://github.com/browserify/browserify/pull/987",
    "id": 48467725,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjQyNjc5MTc=",
    "number": 987,
    "title": "Switched link to newer coffeeify repository",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "node_id": "MDQ6VXNlcjkxMDc1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/910753?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RichardLitt",
      "html_url": "https://github.com/RichardLitt",
      "followers_url": "https://api.github.com/users/RichardLitt/followers",
      "following_url": "https://api.github.com/users/RichardLitt/following{/other_user}",
      "gists_url": "https://api.github.com/users/RichardLitt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RichardLitt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizations_url": "https://api.github.com/users/RichardLitt/orgs",
      "repos_url": "https://api.github.com/users/RichardLitt/repos",
      "events_url": "https://api.github.com/users/RichardLitt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-11-12T03:16:36Z",
    "updated_at": "2015-01-09T06:51:17Z",
    "closed_at": "2015-01-09T06:35:55Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/987",
      "html_url": "https://github.com/browserify/browserify/pull/987",
      "diff_url": "https://github.com/browserify/browserify/pull/987.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/987.patch",
      "merged_at": "2015-01-09T06:35:55Z"
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/987/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/987/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/986",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/986/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/986/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/986/events",
    "html_url": "https://github.com/browserify/browserify/issues/986",
    "id": 48424271,
    "node_id": "MDU6SXNzdWU0ODQyNDI3MQ==",
    "number": 986,
    "title": "Ability for a module to disallow itself from being included in a bundle",
    "user": {
      "login": "greim",
      "id": 317786,
      "node_id": "MDQ6VXNlcjMxNzc4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/317786?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/greim",
      "html_url": "https://github.com/greim",
      "followers_url": "https://api.github.com/users/greim/followers",
      "following_url": "https://api.github.com/users/greim/following{/other_user}",
      "gists_url": "https://api.github.com/users/greim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/greim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/greim/subscriptions",
      "organizations_url": "https://api.github.com/users/greim/orgs",
      "repos_url": "https://api.github.com/users/greim/repos",
      "events_url": "https://api.github.com/users/greim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/greim/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2014-11-11T19:35:43Z",
    "updated_at": "2018-02-06T14:31:10Z",
    "closed_at": "2018-02-06T14:31:10Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Here's the use case. Some of our server-side modules have sensitive information, so I'd like to make it impossible to include them in any client side bundle. If a developer tries to do so, the build would fail during static analysis, similar to how if there were a syntax error or a `require()` to a non-existent module.\n\nUsing `exclude` doesn't work since it doesn't fail the build, but rather generates a bundle which fails at runtime. I have this hack in place that does what I want:\n\n``` js\ntry { require('./doesnt/exist'); }\ncatch(ex) {}\n```\n\n...however that seems very ugly and a bit of a WTF for someone reading the code or puzzling over a build failure. It would be nice if the file could declare itself off-limits to browserify in a clean way. Something along the lines of:\n\n``` js\n/* @browserify disallow */\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/986/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/986/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/985",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/985/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/985/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/985/events",
    "html_url": "https://github.com/browserify/browserify/issues/985",
    "id": 48409722,
    "node_id": "MDU6SXNzdWU0ODQwOTcyMg==",
    "number": 985,
    "title": "Add setImmediate()",
    "user": {
      "login": "bantu",
      "id": 189375,
      "node_id": "MDQ6VXNlcjE4OTM3NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/189375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bantu",
      "html_url": "https://github.com/bantu",
      "followers_url": "https://api.github.com/users/bantu/followers",
      "following_url": "https://api.github.com/users/bantu/following{/other_user}",
      "gists_url": "https://api.github.com/users/bantu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bantu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bantu/subscriptions",
      "organizations_url": "https://api.github.com/users/bantu/orgs",
      "repos_url": "https://api.github.com/users/bantu/repos",
      "events_url": "https://api.github.com/users/bantu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bantu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 16,
    "created_at": "2014-11-11T17:23:23Z",
    "updated_at": "2014-11-24T17:51:57Z",
    "closed_at": "2014-11-24T12:57:43Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "My browser complains about setImmediate() not being defined. This might be something for browserify to handle.\n\nSee https://github.com/andris9/smtp-connection/issues/9 \n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/985/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/985/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/984",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/984/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/984/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/984/events",
    "html_url": "https://github.com/browserify/browserify/issues/984",
    "id": 48381162,
    "node_id": "MDU6SXNzdWU0ODM4MTE2Mg==",
    "number": 984,
    "title": "Feature request - different entry point depending on \"debug\" setting",
    "user": {
      "login": "cconrad",
      "id": 584491,
      "node_id": "MDQ6VXNlcjU4NDQ5MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/584491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cconrad",
      "html_url": "https://github.com/cconrad",
      "followers_url": "https://api.github.com/users/cconrad/followers",
      "following_url": "https://api.github.com/users/cconrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/cconrad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cconrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cconrad/subscriptions",
      "organizations_url": "https://api.github.com/users/cconrad/orgs",
      "repos_url": "https://api.github.com/users/cconrad/repos",
      "events_url": "https://api.github.com/users/cconrad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cconrad/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-11-11T12:54:49Z",
    "updated_at": "2018-02-06T14:29:18Z",
    "closed_at": "2018-02-06T14:29:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "With the \"browser\" attribute in package.json it is possible to have another entry point than \"main\" for Browserify bundling.\n\nWould it be possible and make sense to make the entry point dependent on whether \"debug\" is set for the Browserify instance that resolves the entry point of the required module?\n\nI.e. `\"browser_debug\": \"./build/debug/index.js\"` and `\"browser\": \"./build/release/index.js\"` in ones package.json file.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/984/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/984/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/983",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/983/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/983/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/983/events",
    "html_url": "https://github.com/browserify/browserify/issues/983",
    "id": 48374766,
    "node_id": "MDU6SXNzdWU0ODM3NDc2Ng==",
    "number": 983,
    "title": "Globals when doing --global-transform - window undefined",
    "user": {
      "login": "kevinsimper",
      "id": 1126497,
      "node_id": "MDQ6VXNlcjExMjY0OTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1126497?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsimper",
      "html_url": "https://github.com/kevinsimper",
      "followers_url": "https://api.github.com/users/kevinsimper/followers",
      "following_url": "https://api.github.com/users/kevinsimper/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsimper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsimper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsimper/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsimper/orgs",
      "repos_url": "https://api.github.com/users/kevinsimper/repos",
      "events_url": "https://api.github.com/users/kevinsimper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsimper/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-11-11T11:30:44Z",
    "updated_at": "2018-05-18T14:01:49Z",
    "closed_at": "2018-05-18T14:01:48Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am trying to do a global transform with `brfs` on a module, but globals is not defined in external modules. \n\nI have tried using `--insert-globals` but it did not help\n\n```\n$ browserify test.js -o bundle.js --transform brfs -g crafty --insert-globals\n\n/xxx/node_modules/crafty/src/2D.js:2\n    document = window.document,\n               ^\nReferenceError: window is not defined\n    at Object.<anonymous> (/xxx/node_modules/crafty/src/2D.js:2:16)\n    at Module._compile (module.js:456:26)\n    at Object.Module._extensions..js (module.js:474:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Module.require (module.js:364:17)\n    at require (module.js:380:17)\n    at Object.<anonymous> (/xxx/node_modules/crafty/src/crafty.js:2:1)\n    at Module._compile (module.js:456:26)\n    at Object.Module._extensions..js (module.js:474:10)\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/983/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/983/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/982",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/982/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/982/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/982/events",
    "html_url": "https://github.com/browserify/browserify/issues/982",
    "id": 48333035,
    "node_id": "MDU6SXNzdWU0ODMzMzAzNQ==",
    "number": 982,
    "title": "global is undefined",
    "user": {
      "login": "staxmanade",
      "id": 156715,
      "node_id": "MDQ6VXNlcjE1NjcxNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/156715?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/staxmanade",
      "html_url": "https://github.com/staxmanade",
      "followers_url": "https://api.github.com/users/staxmanade/followers",
      "following_url": "https://api.github.com/users/staxmanade/following{/other_user}",
      "gists_url": "https://api.github.com/users/staxmanade/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/staxmanade/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/staxmanade/subscriptions",
      "organizations_url": "https://api.github.com/users/staxmanade/orgs",
      "repos_url": "https://api.github.com/users/staxmanade/repos",
      "events_url": "https://api.github.com/users/staxmanade/events{/privacy}",
      "received_events_url": "https://api.github.com/users/staxmanade/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-11-11T00:28:58Z",
    "updated_at": "2014-12-13T19:56:19Z",
    "closed_at": "2014-12-13T19:56:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I really like how browserify helps on a project I'm working on, but unfortunately we do not have access to a true browser dom and the way the `global` object is inject is getting missed.\n\nIf I place the following chunk of code into a `gulpjs` plugin that runs after browserify.\n\n```\nvar fileContents = file.contents.toString();\nvar regex = /typeof global !== \"undefined\" \\? global : typeof self !== \"undefined\"/g;\nvar newValue = 'typeof global !== \"undefined\" ? global : typeof this !== \"undefined\" ? this : typeof self !== \"undefined\"';\nvar newfileContents = fileContents.replace(regex, newValue);\nfile.contents = new Buffer(newfileContents);\n\n```\n\nIs there a better way to go about getting the global `this` injected in?\n\nWould love to hear any feedback you have or if you think the `... typeof this !== \"undefined\" ? this...` could be added to the global injection part of browserify.\n\nThoughts?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/982/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/982/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/981",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/981/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/981/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/981/events",
    "html_url": "https://github.com/browserify/browserify/issues/981",
    "id": 48205564,
    "node_id": "MDU6SXNzdWU0ODIwNTU2NA==",
    "number": 981,
    "title": "How to ignore wrong libraries doing require('./non-existing-lib')",
    "user": {
      "login": "ibc",
      "id": 16191,
      "node_id": "MDQ6VXNlcjE2MTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/16191?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ibc",
      "html_url": "https://github.com/ibc",
      "followers_url": "https://api.github.com/users/ibc/followers",
      "following_url": "https://api.github.com/users/ibc/following{/other_user}",
      "gists_url": "https://api.github.com/users/ibc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ibc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ibc/subscriptions",
      "organizations_url": "https://api.github.com/users/ibc/orgs",
      "repos_url": "https://api.github.com/users/ibc/repos",
      "events_url": "https://api.github.com/users/ibc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ibc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2014-11-09T16:22:12Z",
    "updated_at": "2014-11-13T15:20:49Z",
    "closed_at": "2014-11-13T15:20:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Is there any solution for issues like this in the `html-minifier` library?:\n\nhttps://github.com/kangax/html-minifier/issues/294\n\nBasically it prevents `html-minifier` to be \"browserified\" within a project because it internally calls to `require('./htmlparser').HTMLParser;` but it does not define any `htmlparser` file (it is supposed to be the `htmlparser` NPM module, so it should be absolute path IMHO).\n\nI've already tried with the `opts.noparse = [ PATH_TO_LOCAL_htmlminifier.js ]` but it does not solve it at all.\n\nAny way to prevent those kind of errors in external libraries?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/981/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/981/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/980",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/980/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/980/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/980/events",
    "html_url": "https://github.com/browserify/browserify/issues/980",
    "id": 48200750,
    "node_id": "MDU6SXNzdWU0ODIwMDc1MA==",
    "number": 980,
    "title": "--ignore-missing doesn't work",
    "user": {
      "login": "timaschew",
      "id": 110870,
      "node_id": "MDQ6VXNlcjExMDg3MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/110870?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/timaschew",
      "html_url": "https://github.com/timaschew",
      "followers_url": "https://api.github.com/users/timaschew/followers",
      "following_url": "https://api.github.com/users/timaschew/following{/other_user}",
      "gists_url": "https://api.github.com/users/timaschew/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/timaschew/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/timaschew/subscriptions",
      "organizations_url": "https://api.github.com/users/timaschew/orgs",
      "repos_url": "https://api.github.com/users/timaschew/repos",
      "events_url": "https://api.github.com/users/timaschew/events{/privacy}",
      "received_events_url": "https://api.github.com/users/timaschew/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-11-09T12:57:03Z",
    "updated_at": "2014-11-09T16:54:17Z",
    "closed_at": "2014-11-09T16:53:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "or do I misunderstand this feature?\n\nJust a simple test: `index.js`:\n\n``` js\nvar fs = reqiure('fs');\nvar notExist = require('blabla');\n```\n\nI expect that this file can be handled without problems with this command:\n`browserify index.js --ignore-missing`\nBut I get this error: `Error: Cannot find module 'blabla'`\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/980/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/980/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/979",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/979/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/979/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/979/events",
    "html_url": "https://github.com/browserify/browserify/issues/979",
    "id": 48129605,
    "node_id": "MDU6SXNzdWU0ODEyOTYwNQ==",
    "number": 979,
    "title": "No globals with detectGlobals, insertGlobals config",
    "user": {
      "login": "JosephClay",
      "id": 4593699,
      "node_id": "MDQ6VXNlcjQ1OTM2OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4593699?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JosephClay",
      "html_url": "https://github.com/JosephClay",
      "followers_url": "https://api.github.com/users/JosephClay/followers",
      "following_url": "https://api.github.com/users/JosephClay/following{/other_user}",
      "gists_url": "https://api.github.com/users/JosephClay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JosephClay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JosephClay/subscriptions",
      "organizations_url": "https://api.github.com/users/JosephClay/orgs",
      "repos_url": "https://api.github.com/users/JosephClay/repos",
      "events_url": "https://api.github.com/users/JosephClay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JosephClay/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-11-07T20:55:49Z",
    "updated_at": "2018-03-16T13:50:20Z",
    "closed_at": "2018-03-16T13:50:20Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am bundling a project using:\n\n```\nbrowserify('path/to/file', { insertGlobals: true, detectGlobals: false });\n```\n\nThe intent is to have a faster build, and have globals inserted. However, the build is faster but no globals (`process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname`) are inserted.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/979/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/979/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/978",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/978/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/978/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/978/events",
    "html_url": "https://github.com/browserify/browserify/issues/978",
    "id": 48112192,
    "node_id": "MDU6SXNzdWU0ODExMjE5Mg==",
    "number": 978,
    "title": "Requiring a file which was bundled with bower fails with unmet dependencies",
    "user": {
      "login": "ItalyPaleAle",
      "id": 43508,
      "node_id": "MDQ6VXNlcjQzNTA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/43508?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ItalyPaleAle",
      "html_url": "https://github.com/ItalyPaleAle",
      "followers_url": "https://api.github.com/users/ItalyPaleAle/followers",
      "following_url": "https://api.github.com/users/ItalyPaleAle/following{/other_user}",
      "gists_url": "https://api.github.com/users/ItalyPaleAle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ItalyPaleAle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ItalyPaleAle/subscriptions",
      "organizations_url": "https://api.github.com/users/ItalyPaleAle/orgs",
      "repos_url": "https://api.github.com/users/ItalyPaleAle/repos",
      "events_url": "https://api.github.com/users/ItalyPaleAle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ItalyPaleAle/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-11-07T18:02:46Z",
    "updated_at": "2018-01-04T11:41:32Z",
    "closed_at": "2018-01-04T11:41:32Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In our project we're including a library that's been bundled with bower: Rosso.js ( https://github.com/EgoAleSum/Rosso.js ).<br>The library is installed via bower and the source is in `/Users/Alessandro/ui/bower_components/rosso`.\n\nThe code that includes the Rosso.js file is just `require('bower_components/rosso/Rosso.js')`, with `Rosso.js` being the \"compiled bundle\".\n\nHowever, while running browserify, I get the following error:\n\n```\n$ browserify main.js -o public/js/app.js\nError: Cannot find module './Route.js' from '/Users/Alessandro/ui/bower_components/rosso'\n```\n\nApparently, browserify is trying to require './Route.js', which is already bundled into the 'Rosso.js' bundle file.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/978/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/978/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/977",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/977/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/977/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/977/events",
    "html_url": "https://github.com/browserify/browserify/issues/977",
    "id": 48111798,
    "node_id": "MDU6SXNzdWU0ODExMTc5OA==",
    "number": 977,
    "title": "Requiring a file which was bundled with bower fails with unmet dependencies",
    "user": {
      "login": "ItalyPaleAle",
      "id": 43508,
      "node_id": "MDQ6VXNlcjQzNTA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/43508?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ItalyPaleAle",
      "html_url": "https://github.com/ItalyPaleAle",
      "followers_url": "https://api.github.com/users/ItalyPaleAle/followers",
      "following_url": "https://api.github.com/users/ItalyPaleAle/following{/other_user}",
      "gists_url": "https://api.github.com/users/ItalyPaleAle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ItalyPaleAle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ItalyPaleAle/subscriptions",
      "organizations_url": "https://api.github.com/users/ItalyPaleAle/orgs",
      "repos_url": "https://api.github.com/users/ItalyPaleAle/repos",
      "events_url": "https://api.github.com/users/ItalyPaleAle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ItalyPaleAle/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2014-11-07T17:58:34Z",
    "updated_at": "2014-11-07T17:59:04Z",
    "closed_at": "2014-11-07T17:59:04Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/977/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/977/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/976",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/976/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/976/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/976/events",
    "html_url": "https://github.com/browserify/browserify/issues/976",
    "id": 48080143,
    "node_id": "MDU6SXNzdWU0ODA4MDE0Mw==",
    "number": 976,
    "title": "--bare needs to support module.parent so that node modules work correctly",
    "user": {
      "login": "dominictarr",
      "id": 259374,
      "node_id": "MDQ6VXNlcjI1OTM3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/259374?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dominictarr",
      "html_url": "https://github.com/dominictarr",
      "followers_url": "https://api.github.com/users/dominictarr/followers",
      "following_url": "https://api.github.com/users/dominictarr/following{/other_user}",
      "gists_url": "https://api.github.com/users/dominictarr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dominictarr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dominictarr/subscriptions",
      "organizations_url": "https://api.github.com/users/dominictarr/orgs",
      "repos_url": "https://api.github.com/users/dominictarr/repos",
      "events_url": "https://api.github.com/users/dominictarr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dominictarr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-11-07T13:12:03Z",
    "updated_at": "2014-11-07T13:46:15Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "I want to use browserify --bare to create executables for node cli tools. With a large project, such as npmd (or browserify!) there might be a megabyte of javascript over hundreds of .js files. Since require is sync, and every file this can make start up time a UX issue. However, I figure that bundling everything into one large js file will be very fast (only one disk seek, especially on spinning disks)\n\nHowever, the problem is that browserify does not support `!module.parent` which is a common way of detecting whether a given module is main module being run. \n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/976/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/976/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/975",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/975/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/975/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/975/events",
    "html_url": "https://github.com/browserify/browserify/issues/975",
    "id": 48072565,
    "node_id": "MDU6SXNzdWU0ODA3MjU2NQ==",
    "number": 975,
    "title": "browserify -r with npm installed module does not run transforms",
    "user": {
      "login": "deitch",
      "id": 282526,
      "node_id": "MDQ6VXNlcjI4MjUyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/282526?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deitch",
      "html_url": "https://github.com/deitch",
      "followers_url": "https://api.github.com/users/deitch/followers",
      "following_url": "https://api.github.com/users/deitch/following{/other_user}",
      "gists_url": "https://api.github.com/users/deitch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deitch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deitch/subscriptions",
      "organizations_url": "https://api.github.com/users/deitch/orgs",
      "repos_url": "https://api.github.com/users/deitch/repos",
      "events_url": "https://api.github.com/users/deitch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deitch/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 11,
    "created_at": "2014-11-07T11:28:24Z",
    "updated_at": "2015-03-18T21:55:27Z",
    "closed_at": "2015-02-09T13:16:48Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "If I try to transform a file that was installed via `npm`, the transform does not run. Simple example: if I want to run `browserify-shim` on `angular`, so I can do:\n\n``` JavaScript\nvar angular = require('angular');\n```\n\n``` JavaScript\n{\n  \"browserify\": {\n    \"transform\": [\n      \"browserify-shim\"\n    ]\n  },\n  \"browser\": {\n    \"angular\":\"./node_modules/angular/angular.js\"\n  },\n  \"browserify-shim\": {\n    \"angular\": {\n      \"exports\": \"angular\"\n    }\n  },\n  \"dependencies\": {\n    \"browserify-shim\": \"~3.x.x\",\n    \"angular\": \"~1.3.1\"\n  }\n}\n```\n\nThen I run:\n\n```\nnpm install\nbrowserify -r angular -o vendor.js\n```\n\nThe transform will **not** run. Of course, it also happens if I do not include a `browser` override for `angular` and just let it use the `npm` installation directly.\n\nI dug pretty deeply, it looks like that when it runs `getTransforms()` in module-deps LL429-443, the `pkg` that is passed is _not_ my application's `package.json` (above), which has the transforms configured, but rather the `package.json` from `angular`, which of course has no transformations, since these are done for my project.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/975/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/975/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/974",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/974/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/974/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/974/events",
    "html_url": "https://github.com/browserify/browserify/issues/974",
    "id": 47795953,
    "node_id": "MDU6SXNzdWU0Nzc5NTk1Mw==",
    "number": 974,
    "title": "require() paths in production build",
    "user": {
      "login": "newtonianb",
      "id": 2313644,
      "node_id": "MDQ6VXNlcjIzMTM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2313644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/newtonianb",
      "html_url": "https://github.com/newtonianb",
      "followers_url": "https://api.github.com/users/newtonianb/followers",
      "following_url": "https://api.github.com/users/newtonianb/following{/other_user}",
      "gists_url": "https://api.github.com/users/newtonianb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/newtonianb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/newtonianb/subscriptions",
      "organizations_url": "https://api.github.com/users/newtonianb/orgs",
      "repos_url": "https://api.github.com/users/newtonianb/repos",
      "events_url": "https://api.github.com/users/newtonianb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/newtonianb/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-11-05T03:31:45Z",
    "updated_at": "2018-03-16T13:44:11Z",
    "closed_at": "2018-03-16T13:44:11Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have a file `app.js` that contains the following\n\n```\nrequire('../../components/migrate-1.2.1.min.js');\nrequire('../../components/backjs');\nrequire('../../components/hover.js');\n```\n\nThese paths are still visible in the final compiled app.js as it seems to be used as the key for the code block in the require?\n1. How can I clean these paths? I don't want to reveal my entire back-end folder structure\n2. I'm trying to copy the **compiled** app.js and use it independently of browserify in another project (essentially just load it as a JS library bundle) is that suppose to work? I don't know why I just can't get it working in the separate project when I include the compiled app.js, I keep getting some funky errors about could not load module. Any idea what's going on?\n\nI thought the compiled JS file should have everything it needs within itself?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/974/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/974/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/973",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/973/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/973/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/973/events",
    "html_url": "https://github.com/browserify/browserify/issues/973",
    "id": 47795545,
    "node_id": "MDU6SXNzdWU0Nzc5NTU0NQ==",
    "number": 973,
    "title": "Using browser property in package.json with nested dependencies",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-11-05T03:23:25Z",
    "updated_at": "2014-11-05T15:47:23Z",
    "closed_at": "2014-11-05T15:47:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm not sure if there's an open issue or a better way to deal with this.  I have a library `my-lib` which depends on `lodash`, and an app `my-app` which depends on `my-lib` and `lodash`.  In both `my-app` and `my-lib`, I have a `browser` object property set in package.json to map `lodash` to `./node_modules/dist/lodash.compat.js`.  I'm doing this because I need `lodash.compat.js` rather than the default `lodash.js` to work with older browsers like IE8.\n\nThe problem I'm running into is when I cd to `my-app`, and run npm install, I get `./my-app/node_modules/lodash` and `./my-app/node_modules/my-lib`, but `./my-app/node_modules/my-lib/node_modules/lodash` is not installed, because `lodash` was already installed in `./my-app/node_modules/lodash`.  Since `lodash` is not installed within `my-lib`, the browser path in `my-lib` `./node_modules/lodash/dist/lodash.compat.js` file doesn't exist, so the code in my-lib fails to build in browserify.  Is there some way to deal with this?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/973/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/973/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/972",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/972/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/972/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/972/events",
    "html_url": "https://github.com/browserify/browserify/issues/972",
    "id": 47714666,
    "node_id": "MDU6SXNzdWU0NzcxNDY2Ng==",
    "number": 972,
    "title": "opts.externalRequireName does not work in standalone mode",
    "user": {
      "login": "ibc",
      "id": 16191,
      "node_id": "MDQ6VXNlcjE2MTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/16191?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ibc",
      "html_url": "https://github.com/ibc",
      "followers_url": "https://api.github.com/users/ibc/followers",
      "following_url": "https://api.github.com/users/ibc/following{/other_user}",
      "gists_url": "https://api.github.com/users/ibc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ibc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ibc/subscriptions",
      "organizations_url": "https://api.github.com/users/ibc/orgs",
      "repos_url": "https://api.github.com/users/ibc/repos",
      "events_url": "https://api.github.com/users/ibc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ibc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-11-04T13:48:49Z",
    "updated_at": "2018-01-04T11:43:21Z",
    "closed_at": "2018-01-04T11:43:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I use grunt-contrib-browserify as follows:\n\n```\nbrowserify: {\n    dist: {\n        files: {\n            'builds/mystuff-bundle.js': [ 'lib/MyStuff.js' ]\n        },\n        options: {\n            browserifyOptions: {\n                externalRequireName: '__reqqq__',\n                standalone: 'MyStuff'\n            }\n        }\n    }\n},\n```\n\nThe `externalRequireName` does nothing as I still see `require` calls within the bundled file. Should it work? I've also tested that it does nothing when the `standalone` option is NOT set. Should I assume it is a bug in the grunt-contrib-browserify package?\n\nI expect that the `externalRequireName` option should replace `require()` by other name, so I do not need hacks like `derequire()`, am I right?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/972/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/972/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/971",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/971/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/971/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/971/events",
    "html_url": "https://github.com/browserify/browserify/issues/971",
    "id": 47644439,
    "node_id": "MDU6SXNzdWU0NzY0NDQzOQ==",
    "number": 971,
    "title": "full-paths is breaking when modules have similar require expressions",
    "user": {
      "login": "mattdesl",
      "id": 1383811,
      "node_id": "MDQ6VXNlcjEzODM4MTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1383811?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattdesl",
      "html_url": "https://github.com/mattdesl",
      "followers_url": "https://api.github.com/users/mattdesl/followers",
      "following_url": "https://api.github.com/users/mattdesl/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattdesl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattdesl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattdesl/subscriptions",
      "organizations_url": "https://api.github.com/users/mattdesl/orgs",
      "repos_url": "https://api.github.com/users/mattdesl/repos",
      "events_url": "https://api.github.com/users/mattdesl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattdesl/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-11-03T21:07:38Z",
    "updated_at": "2014-11-04T20:56:54Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "This was not a problem in 5.11.x, but breaks with 5.12.x to 6.2.0.\n\nIt seems like multiple modules using the same require statements get \"optimized together\" or something when using `--full-paths`. \n\nA test case to reproduce it:\n\n`npm install three threejs-managed-view threejs-modelmultiloader`\n\nindex.js: \n\n``` js\nwindow.THREE = require('three')\nvar View = require('threejs-managed-view').View\nvar MultiLoader = require('threejs-modelmultiloader')\n\nfunction test() {\n    if (MultiLoader.MODES === undefined)\n        throw Error('browserify bug')\n    else\n        console.log(\"success\")\n}\nmodule.exports = test\nmodule.exports()\n```\n\ncommand:  \n\n`browserify index.js -o bundle.js --full-paths`\n\nBoth threejs modules use the following pattern in `index.js`:\n\n`module.exports = require('./src')`\n\nChanging `./src` to `./src/` or `./src/index.js` will fix the problem.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/971/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/971/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/970",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/970/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/970/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/970/events",
    "html_url": "https://github.com/browserify/browserify/issues/970",
    "id": 47639293,
    "node_id": "MDU6SXNzdWU0NzYzOTI5Mw==",
    "number": 970,
    "title": "How to tell browserify to condicionaly load a module",
    "user": {
      "login": "ibc",
      "id": 16191,
      "node_id": "MDQ6VXNlcjE2MTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/16191?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ibc",
      "html_url": "https://github.com/ibc",
      "followers_url": "https://api.github.com/users/ibc/followers",
      "following_url": "https://api.github.com/users/ibc/following{/other_user}",
      "gists_url": "https://api.github.com/users/ibc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ibc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ibc/subscriptions",
      "organizations_url": "https://api.github.com/users/ibc/orgs",
      "repos_url": "https://api.github.com/users/ibc/repos",
      "events_url": "https://api.github.com/users/ibc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ibc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-11-03T20:19:53Z",
    "updated_at": "2014-11-03T20:20:31Z",
    "closed_at": "2014-11-03T20:20:31Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "My project includes the `ws` module (WebSocket for Node) so at some point in my code there is:\n\n```\nvar WebSocket = require('ws');\n```\n\nThat is good for the case in which I run my project as a Node module, but I also want to provide a browser browserified version. In that case I need to avoid the above module load (as the browser already defines the \"WebSocket\" class).\n\nHow can I tell `browserify` to ignore the above `require` call? Can I pass some like-\"define/macro\" that I can check in the code? something like:\n\n```\n$ browserify myFile.js --set-global-macro BROWSER\n```\n\nand then in some file.js:\n\n```\nif (typeof BROWSER === \"undefined\") {\n  var WebSocket = require('ws');\n}\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/970/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/970/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/969",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/969/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/969/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/969/events",
    "html_url": "https://github.com/browserify/browserify/issues/969",
    "id": 47622077,
    "node_id": "MDU6SXNzdWU0NzYyMjA3Nw==",
    "number": 969,
    "title": "How to tell browserify to condicionaly load a module",
    "user": {
      "login": "ibc",
      "id": 16191,
      "node_id": "MDQ6VXNlcjE2MTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/16191?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ibc",
      "html_url": "https://github.com/ibc",
      "followers_url": "https://api.github.com/users/ibc/followers",
      "following_url": "https://api.github.com/users/ibc/following{/other_user}",
      "gists_url": "https://api.github.com/users/ibc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ibc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ibc/subscriptions",
      "organizations_url": "https://api.github.com/users/ibc/orgs",
      "repos_url": "https://api.github.com/users/ibc/repos",
      "events_url": "https://api.github.com/users/ibc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ibc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-11-03T17:42:22Z",
    "updated_at": "2014-11-04T12:06:21Z",
    "closed_at": "2014-11-04T04:38:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "My project includes the `ws` module (WebSocket for Node) so at some point in my code there is:\n\n```\nvar WebSocket = require('ws');\n```\n\nThat is good for the case in which I run my project as a Node module, but I also want to provide a browser browserified version. In that case I need to avoid the above module load (as the browser already defines the \"WebSocket\" class).\n\nHow can I tell `browserify` to ignore the above `require` call? Can I pass some like-\"define/macro\" that I can check in the code? something like:\n\n```\n$ browserify myFile.js --set-global-macro BROWSER\n```\n\nand then in some file.js:\n\n```\nif (typeof BROWSER === \"undefined\") {\n  var WebSocket = require('ws');\n}\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/969/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/969/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/968",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/968/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/968/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/968/events",
    "html_url": "https://github.com/browserify/browserify/issues/968",
    "id": 47552341,
    "node_id": "MDU6SXNzdWU0NzU1MjM0MQ==",
    "number": 968,
    "title": "Problem with standalone/require options",
    "user": {
      "login": "leandono",
      "id": 291404,
      "node_id": "MDQ6VXNlcjI5MTQwNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/291404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leandono",
      "html_url": "https://github.com/leandono",
      "followers_url": "https://api.github.com/users/leandono/followers",
      "following_url": "https://api.github.com/users/leandono/following{/other_user}",
      "gists_url": "https://api.github.com/users/leandono/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leandono/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leandono/subscriptions",
      "organizations_url": "https://api.github.com/users/leandono/orgs",
      "repos_url": "https://api.github.com/users/leandono/repos",
      "events_url": "https://api.github.com/users/leandono/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leandono/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 12,
    "created_at": "2014-11-02T23:00:28Z",
    "updated_at": "2019-07-31T04:29:08Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hey! I have a little problem using the `standalone` option with `require`: having 2 modules (`a` and `b`), where `a` depends of `b`:\n\n**b.js**\n\n```\nmodule.exports = {\n    text: 'blabla'\n};\n```\n\n**a.js**\n\n```\nvar b = require('b');\n\nmodule.exports = {\n    init: function(){\n        console.log(b.text);\n    }\n};\n```\n\nrunning `browserify a.js --standalone a --require ./b.js:b --outfile out.js` the result of `window.a` (created by the standalone option) is `Object { text=\"blabla\"}` and not `Object { init=function()}`. \nIs this a known problem? any workaround?\n\nThanks!\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/968/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/968/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/967",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/967/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/967/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/967/events",
    "html_url": "https://github.com/browserify/browserify/pull/967",
    "id": 47453005,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM3MTE0NDc=",
    "number": 967,
    "title": "Fix readme b.transform arguments order",
    "user": {
      "login": "jakemhiller",
      "id": 238023,
      "node_id": "MDQ6VXNlcjIzODAyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/238023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakemhiller",
      "html_url": "https://github.com/jakemhiller",
      "followers_url": "https://api.github.com/users/jakemhiller/followers",
      "following_url": "https://api.github.com/users/jakemhiller/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakemhiller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakemhiller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakemhiller/subscriptions",
      "organizations_url": "https://api.github.com/users/jakemhiller/orgs",
      "repos_url": "https://api.github.com/users/jakemhiller/repos",
      "events_url": "https://api.github.com/users/jakemhiller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakemhiller/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2014-10-31T23:11:49Z",
    "updated_at": "2014-11-02T00:06:56Z",
    "closed_at": "2014-11-02T00:06:56Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/967",
      "html_url": "https://github.com/browserify/browserify/pull/967",
      "diff_url": "https://github.com/browserify/browserify/pull/967.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/967.patch",
      "merged_at": "2014-11-02T00:06:56Z"
    },
    "body": "The arguments for `b.transform` were reversed in the readme file, it should be `b.transform(transform, options)`, not `b.transform(options, transform)`.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/967/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/967/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/966",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/966/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/966/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/966/events",
    "html_url": "https://github.com/browserify/browserify/pull/966",
    "id": 47375214,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM2NjQ2NjY=",
    "number": 966,
    "title": "ignoreTransform to check for pkg.browserify.transform",
    "user": {
      "login": "kahwee",
      "id": 262105,
      "node_id": "MDQ6VXNlcjI2MjEwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/262105?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kahwee",
      "html_url": "https://github.com/kahwee",
      "followers_url": "https://api.github.com/users/kahwee/followers",
      "following_url": "https://api.github.com/users/kahwee/following{/other_user}",
      "gists_url": "https://api.github.com/users/kahwee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kahwee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kahwee/subscriptions",
      "organizations_url": "https://api.github.com/users/kahwee/orgs",
      "repos_url": "https://api.github.com/users/kahwee/repos",
      "events_url": "https://api.github.com/users/kahwee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kahwee/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-10-31T09:32:48Z",
    "updated_at": "2014-11-11T00:55:38Z",
    "closed_at": "2014-11-11T00:55:38Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/966",
      "html_url": "https://github.com/browserify/browserify/pull/966",
      "diff_url": "https://github.com/browserify/browserify/pull/966.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/966.patch",
      "merged_at": null
    },
    "body": "There is an edge case where ignoreTransform will not work if your package.json specify transforms in an array format.\n\n```\n    \"browserify\": {\n        \"transform\": [\n            [\"reactify\", {\n                \"es6\": true\n            }],\n            \"bulkify\", [\"browserify-istanbul\", {\n                \"ignore\": [\"**/*/*.json\"]\n            }]\n        ]\n    }\n```\n\nThis change checks if it is an array and extract the index0 to check for the name of the transform.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/966/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/966/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/965",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/965/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/965/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/965/events",
    "html_url": "https://github.com/browserify/browserify/issues/965",
    "id": 47150400,
    "node_id": "MDU6SXNzdWU0NzE1MDQwMA==",
    "number": 965,
    "title": "Dynamically require with fullpaths",
    "user": {
      "login": "rzcoder",
      "id": 1993554,
      "node_id": "MDQ6VXNlcjE5OTM1NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1993554?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rzcoder",
      "html_url": "https://github.com/rzcoder",
      "followers_url": "https://api.github.com/users/rzcoder/followers",
      "following_url": "https://api.github.com/users/rzcoder/following{/other_user}",
      "gists_url": "https://api.github.com/users/rzcoder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rzcoder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rzcoder/subscriptions",
      "organizations_url": "https://api.github.com/users/rzcoder/orgs",
      "repos_url": "https://api.github.com/users/rzcoder/repos",
      "events_url": "https://api.github.com/users/rzcoder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rzcoder/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2014-10-29T13:53:37Z",
    "updated_at": "2016-04-20T09:21:54Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi!\n\nF.e. I have bundle of \n\n```\n./index.coffee, \n./views/View.coffee,\n./views/MenuView.coffee\n```\n\nthey all compiled to js with `--full-paths` flag. So, why next code doesn't work? \n\n``` coffee\nviews = ['View', 'MenuView']\nfor i in views\n  cls = require('./views/' + i)\n```\n\nI want to say that I understand WHY it's not working now, but we have full paths for every file in bundle and can easily calculate paths (=== index in bundle) in runtime isn't it?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/965/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/965/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/964",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/964/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/964/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/964/events",
    "html_url": "https://github.com/browserify/browserify/pull/964",
    "id": 46807558,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjMzMzc0NzE=",
    "number": 964,
    "title": "bump readable-stream to fix circular dep error",
    "user": {
      "login": "feross",
      "id": 121766,
      "node_id": "MDQ6VXNlcjEyMTc2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/121766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/feross",
      "html_url": "https://github.com/feross",
      "followers_url": "https://api.github.com/users/feross/followers",
      "following_url": "https://api.github.com/users/feross/following{/other_user}",
      "gists_url": "https://api.github.com/users/feross/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/feross/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/feross/subscriptions",
      "organizations_url": "https://api.github.com/users/feross/orgs",
      "repos_url": "https://api.github.com/users/feross/repos",
      "events_url": "https://api.github.com/users/feross/events{/privacy}",
      "received_events_url": "https://api.github.com/users/feross/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-10-25T09:43:45Z",
    "updated_at": "2014-10-25T11:36:53Z",
    "closed_at": "2014-10-25T11:36:53Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/964",
      "html_url": "https://github.com/browserify/browserify/pull/964",
      "diff_url": "https://github.com/browserify/browserify/pull/964.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/964.patch",
      "merged_at": null
    },
    "body": "This looks like it changes nothing, but this tells npm>2 to actually\npull in the `-1` version of readable-stream.\n\nSee: https://github.com/isaacs/readable-stream/pull/95\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/964/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/964/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/963",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/963/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/963/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/963/events",
    "html_url": "https://github.com/browserify/browserify/issues/963",
    "id": 46805542,
    "node_id": "MDU6SXNzdWU0NjgwNTU0Mg==",
    "number": 963,
    "title": "Streams are very broken",
    "user": {
      "login": "feross",
      "id": 121766,
      "node_id": "MDQ6VXNlcjEyMTc2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/121766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/feross",
      "html_url": "https://github.com/feross",
      "followers_url": "https://api.github.com/users/feross/followers",
      "following_url": "https://api.github.com/users/feross/following{/other_user}",
      "gists_url": "https://api.github.com/users/feross/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/feross/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/feross/subscriptions",
      "organizations_url": "https://api.github.com/users/feross/orgs",
      "repos_url": "https://api.github.com/users/feross/repos",
      "events_url": "https://api.github.com/users/feross/events{/privacy}",
      "received_events_url": "https://api.github.com/users/feross/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-10-25T07:41:42Z",
    "updated_at": "2014-10-25T11:32:05Z",
    "closed_at": "2014-10-25T11:32:05Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "This very simple code throws an exception in the latest browserify.\n\n``` js\nvar concat = require('concat-stream')\nvar stream = require('stream')\nvar s = new stream.PassThrough()\n```\n\n```\nUncaught TypeError: undefined is not a function _stream_duplex.js:71\n  Duplex _stream_duplex.js:71\n  Transform _stream_transform.js:118\n  PassThrough _stream_passthrough.js:41\n  /Users/feross/code/test.js.concat-stream test.js:3\n  s _prelude.js:1\n  e _prelude.js:1\n  (anonymous function) _prelude.js:1\n```\n\nSomething is very broken, but I haven't been able to figure out what's causing it yet. I've been pulling my hair out. Can someone please take a look?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/963/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/963/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/962",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/962/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/962/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/962/events",
    "html_url": "https://github.com/browserify/browserify/issues/962",
    "id": 46759163,
    "node_id": "MDU6SXNzdWU0Njc1OTE2Mw==",
    "number": 962,
    "title": "Cannot install browserify with npm (invalid version of esprima-fb)",
    "user": {
      "login": "emilis",
      "id": 41564,
      "node_id": "MDQ6VXNlcjQxNTY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/41564?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/emilis",
      "html_url": "https://github.com/emilis",
      "followers_url": "https://api.github.com/users/emilis/followers",
      "following_url": "https://api.github.com/users/emilis/following{/other_user}",
      "gists_url": "https://api.github.com/users/emilis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/emilis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/emilis/subscriptions",
      "organizations_url": "https://api.github.com/users/emilis/orgs",
      "repos_url": "https://api.github.com/users/emilis/repos",
      "events_url": "https://api.github.com/users/emilis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/emilis/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-10-24T16:52:09Z",
    "updated_at": "2014-10-25T22:35:24Z",
    "closed_at": "2014-10-25T22:35:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I get these errors when trying to `npm install -g browserify`:\n\n```\nnpm ERR! Error: invalid version: 3001.0001.0000-dev-harmony-fb\nnpm ERR!     at validVersion (/usr/lib/nodejs/read-package-json/read-json.js:573:40)\nnpm ERR!     at final (/usr/lib/nodejs/read-package-json/read-json.js:323:23)\nnpm ERR!     at /usr/lib/nodejs/read-package-json/read-json.js:139:33\nnpm ERR!     at cb (/usr/lib/nodejs/slide/lib/async-map.js:48:11)\nnpm ERR!     at /usr/lib/nodejs/read-package-json/read-json.js:251:40\nnpm ERR!     at fs.js:268:14\nnpm ERR!     at /usr/lib/nodejs/graceful-fs/graceful-fs.js:103:5\nnpm ERR!     at Object.oncomplete (fs.js:107:15)\nnpm ERR! If you need help, you may report this log at:\nnpm ERR!     <http://bugs.debian.org/npm>\nnpm ERR! or use\nnpm ERR!     reportbug --attach /home/emilis/npm-debug.log npm\n\nnpm ERR! System Linux 3.11.0-26-generic\nnpm ERR! command \"/usr/bin/nodejs\" \"/usr/bin/npm\" \"install\" \"-g\" \"browserify\"\nnpm ERR! cwd /home/emilis\nnpm ERR! node -v v0.10.15\nnpm ERR! npm -v 1.2.18\nnpm http 304 https://registry.npmjs.org/amdefine\nnpm http 304 https://registry.npmjs.org/wordwrap\nnpm ERR! error rolling back Error: ENOTEMPTY, rmdir '/home/emilis/.npm-packages/lib/node_modules/browserify/node_modules/umd/node_modules/ruglify/node_modules/uglify-js/node_modules/optimist/node_modules/wordwrap'\nnpm ERR! error rolling back  umd@2.1.0 { [Error: ENOTEMPTY, rmdir '/home/emilis/.npm-packages/lib/node_modules/browserify/node_modules/umd/node_modules/ruglify/node_modules/uglify-js/node_modules/optimist/node_modules/wordwrap']\nnpm ERR! error rolling back   errno: 53,\nnpm ERR! error rolling back   code: 'ENOTEMPTY',\nnpm ERR! error rolling back   path: '/home/emilis/.npm-packages/lib/node_modules/browserify/node_modules/umd/node_modules/ruglify/node_modules/uglify-js/node_modules/optimist/node_modules/wordwrap' }\nnpm ERR! \nnpm ERR! Additional logging details can be found in:\nnpm ERR!     /home/emilis/npm-debug.log\nnpm ERR! not ok code 0\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/962/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/962/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/961",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/961/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/961/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/961/events",
    "html_url": "https://github.com/browserify/browserify/issues/961",
    "id": 46724646,
    "node_id": "MDU6SXNzdWU0NjcyNDY0Ng==",
    "number": 961,
    "title": "Warn about cyclic/circular requires",
    "user": {
      "login": "dizzib",
      "id": 1223150,
      "node_id": "MDQ6VXNlcjEyMjMxNTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1223150?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dizzib",
      "html_url": "https://github.com/dizzib",
      "followers_url": "https://api.github.com/users/dizzib/followers",
      "following_url": "https://api.github.com/users/dizzib/following{/other_user}",
      "gists_url": "https://api.github.com/users/dizzib/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dizzib/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dizzib/subscriptions",
      "organizations_url": "https://api.github.com/users/dizzib/orgs",
      "repos_url": "https://api.github.com/users/dizzib/repos",
      "events_url": "https://api.github.com/users/dizzib/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dizzib/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 24,
    "created_at": "2014-10-24T10:32:02Z",
    "updated_at": "2015-03-02T18:54:17Z",
    "closed_at": "2015-03-01T18:19:19Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Would be useful if browserify could detect this scenario and issue a warning or error. This is because I'm trying to avoid such dubious scenarios in my code.\n\nfoo.js    require('./bar');\nbar.js    require('./baz');\nbaz.js    require('./foo');\n\nbtw thanks for such a great tool!\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/961/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/961/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/960",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/960/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/960/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/960/events",
    "html_url": "https://github.com/browserify/browserify/issues/960",
    "id": 46682373,
    "node_id": "MDU6SXNzdWU0NjY4MjM3Mw==",
    "number": 960,
    "title": "External bundle deps `undefined` after second bundle() call",
    "user": {
      "login": "chromakode",
      "id": 16893,
      "node_id": "MDQ6VXNlcjE2ODkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/16893?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chromakode",
      "html_url": "https://github.com/chromakode",
      "followers_url": "https://api.github.com/users/chromakode/followers",
      "following_url": "https://api.github.com/users/chromakode/following{/other_user}",
      "gists_url": "https://api.github.com/users/chromakode/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chromakode/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chromakode/subscriptions",
      "organizations_url": "https://api.github.com/users/chromakode/orgs",
      "repos_url": "https://api.github.com/users/chromakode/repos",
      "events_url": "https://api.github.com/users/chromakode/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chromakode/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-10-23T21:58:07Z",
    "updated_at": "2015-02-13T14:18:34Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Using `watchify` on a bundle with an `external(bundle)` call, `require()` within the bundle was failing after rebuild. When I took a look at the bundle code, I noticed that on the first build, path information for the dep is included, but the second build contains `undefined`. For instance, for a module that requires browserify:\n\n```\n{\"browserify\":\"/mnt/shared/challenge/node_modules/browserify/index.js\"}\n```\n\nOn the second run:\n\n```\n{\"browserify\":undefined}\n```\n\nAfter reading the code to make sense of this behavior, it appears that the one-time handlers `external(bundle)` sets up are only intended for a single run. However, the `undefined` output struck me as worth a further look.\n\nHere's an example that repros consistently for me:\n\n``` js\nvar bundle1 = browserify('./test1.js', watchify.args)\n\nvar bundle2 = browserify('./test2.js', watchify.args)\n  .external(bundle1)\n\nwatchify(bundle1).on('update', function() {\n  bundle1.bundle().pipe(fs.createWriteStream('out/test1.js'))\n})\n\nwatchify(bundle2).on('update', function() {\n  bundle2.bundle().pipe(fs.createWriteStream('out/test2.js'))\n})\n\nbundle1.emit('update')\nbundle2.emit('update')\n\nbundle2.once('log', function() {\n  spawn('touch', ['test2.js'])\n  bundle2.once('log', function() {\n    setTimeout(function() {\n      process.exit(0)\n    }, 1000)\n  })\n})\n```\n\ntest1/test2.js simply need to contain:\n\n``` js\nrequire('browserify')\n```\n\nAfter running, the deps at the bottom of `out/test2.js` include `{\"browserify\":undefined}`.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/960/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/960/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/959",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/959/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/959/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/959/events",
    "html_url": "https://github.com/browserify/browserify/issues/959",
    "id": 46669323,
    "node_id": "MDU6SXNzdWU0NjY2OTMyMw==",
    "number": 959,
    "title": "require('./aFolder')",
    "user": {
      "login": "krypter",
      "id": 8312125,
      "node_id": "MDQ6VXNlcjgzMTIxMjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8312125?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/krypter",
      "html_url": "https://github.com/krypter",
      "followers_url": "https://api.github.com/users/krypter/followers",
      "following_url": "https://api.github.com/users/krypter/following{/other_user}",
      "gists_url": "https://api.github.com/users/krypter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/krypter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/krypter/subscriptions",
      "organizations_url": "https://api.github.com/users/krypter/orgs",
      "repos_url": "https://api.github.com/users/krypter/repos",
      "events_url": "https://api.github.com/users/krypter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/krypter/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2014-10-23T19:59:17Z",
    "updated_at": "2014-12-08T22:09:11Z",
    "closed_at": "2014-12-08T22:09:11Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "It could be cool if we can require a folder and iterate in it to require each files like this or something like this.\n\n``` js\nglobal.FilesObject = {};\n\nvar files = require('./path/to/folder');\n\nfiles.forEach(function(file){\n    FilesObject[file.name] = require(file.path);\n});\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/959/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/959/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/958",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/958/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/958/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/958/events",
    "html_url": "https://github.com/browserify/browserify/issues/958",
    "id": 46606326,
    "node_id": "MDU6SXNzdWU0NjYwNjMyNg==",
    "number": 958,
    "title": "Using transforms?",
    "user": {
      "login": "suprMax",
      "id": 789031,
      "node_id": "MDQ6VXNlcjc4OTAzMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/789031?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/suprMax",
      "html_url": "https://github.com/suprMax",
      "followers_url": "https://api.github.com/users/suprMax/followers",
      "following_url": "https://api.github.com/users/suprMax/following{/other_user}",
      "gists_url": "https://api.github.com/users/suprMax/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/suprMax/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/suprMax/subscriptions",
      "organizations_url": "https://api.github.com/users/suprMax/orgs",
      "repos_url": "https://api.github.com/users/suprMax/repos",
      "events_url": "https://api.github.com/users/suprMax/events{/privacy}",
      "received_events_url": "https://api.github.com/users/suprMax/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-10-23T09:43:50Z",
    "updated_at": "2014-11-05T20:09:28Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi! Did anyone figure out how to use transforms with browserify 6.x?\n\nI have this code:\n\n``` coffeescript\ncoffee = require('coffee-script')\nthrough = require('through')\n\ncoffeeify = (file)->\n  data = ''\n\n  write = (buf)-> data += buf\n  end = ->\n    @queue(coffee.compile(data))\n    @queue(null)\n\n  through(write, end)\n\ncompileJavascripts = (src, options)->\n  bundler = browserify(entries: src, extensions: ['.coffee', '.jade'], debug: config.source_maps)\n\n  bundler.transform(coffeeify)\n  bundler.transform('jadeify')\n\n  bundler.bundle()\n    .pipe(source(options.name))\n    .pipe(gulp.dest(options.dest))\n\n```\n\nand it fails with:\n\n```\nmax@Maxs-MacBook-Pro-3:~/Projects/mp.dev-star (updates *)$ gulp browserify\n[11:43:28] Requiring external module coffee-script/register\n[11:43:29] Using gulpfile ~/Projects/mp.dev-star/gulpfile.coffee\n[11:43:29] Starting 'browserify'...\n\nevents.js:72\n        throw er; // Unhandled 'error' event\n              ^\nError: Parsing file /Users/max/Projects/mp.dev-star/node_modules/core/javascripts/client/modules/overlay_module.coffee: Line 6: Unexpected identifier\n  at Deps.parseDeps (/Users/max/Projects/mp.dev-star/node_modules/browserify/node_modules/module-deps/index.js:361:28)\n  at fromSource (/Users/max/Projects/mp.dev-star/node_modules/browserify/node_modules/module-deps/index.js:304:48)\n  at /Users/max/Projects/mp.dev-star/node_modules/browserify/node_modules/module-deps/index.js:299:17\n  at ConcatStream.<anonymous> (/Users/max/Projects/mp.dev-star/node_modules/browserify/node_modules/concat-stream/index.js:32:43)\n  at ConcatStream.emit (events.js:117:20)\n  at finishMaybe (/Users/max/Projects/mp.dev-star/node_modules/browserify/node_modules/readable-stream/lib/_stream_writable.js:460:14)\n  at endWritable (/Users/max/Projects/mp.dev-star/node_modules/browserify/node_modules/readable-stream/lib/_stream_writable.js:469:3)\n  at ConcatStream.Writable.end (/Users/max/Projects/mp.dev-star/node_modules/browserify/node_modules/readable-stream/lib/_stream_writable.js:436:5)\n  at DuplexWrapper.onend (/Users/max/Projects/mp.dev-star/node_modules/browserify/node_modules/readable-stream/lib/_stream_readable.js:537:10)\n  at DuplexWrapper.g (events.js:180:16)\n  at DuplexWrapper.emit (events.js:117:20)\n  at /Users/max/Projects/mp.dev-star/node_modules/browserify/node_modules/readable-stream/lib/_stream_readable.js:934:16\n  at process._tickCallback (node.js:419:13)\n\n```\n\nPreviously I used browserify 4.2.3 like this:\n\n``` coffeescript\ncompileJavascripts = (src, options)->\n  bundler = browserify(src, extensions: ['.coffee', '.jade'])\n  bundler.transform(transform) for transform in ['coffeeify', 'jadeify']\n\n  bundler.bundle(debug: config.source_maps)\n    .pipe(source(options.name))\n    .pipe(gulp.dest(options.dest))\n\n```\n\nIt used to work perfectly, but fails with new browserify 5-6, no matter if I use coffeeify or my own transform from readme\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/958/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/958/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/957",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/957/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/957/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/957/events",
    "html_url": "https://github.com/browserify/browserify/issues/957",
    "id": 46606323,
    "node_id": "MDU6SXNzdWU0NjYwNjMyMw==",
    "number": 957,
    "title": "Using transforms?",
    "user": {
      "login": "suprMax",
      "id": 789031,
      "node_id": "MDQ6VXNlcjc4OTAzMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/789031?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/suprMax",
      "html_url": "https://github.com/suprMax",
      "followers_url": "https://api.github.com/users/suprMax/followers",
      "following_url": "https://api.github.com/users/suprMax/following{/other_user}",
      "gists_url": "https://api.github.com/users/suprMax/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/suprMax/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/suprMax/subscriptions",
      "organizations_url": "https://api.github.com/users/suprMax/orgs",
      "repos_url": "https://api.github.com/users/suprMax/repos",
      "events_url": "https://api.github.com/users/suprMax/events{/privacy}",
      "received_events_url": "https://api.github.com/users/suprMax/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2014-10-23T09:43:49Z",
    "updated_at": "2014-10-23T09:52:23Z",
    "closed_at": "2014-10-23T09:52:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/957/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/957/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/956",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/956/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/956/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/956/events",
    "html_url": "https://github.com/browserify/browserify/issues/956",
    "id": 46457580,
    "node_id": "MDU6SXNzdWU0NjQ1NzU4MA==",
    "number": 956,
    "title": "unable to require from up one level from the start file",
    "user": {
      "login": "davis",
      "id": 4855619,
      "node_id": "MDQ6VXNlcjQ4NTU2MTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4855619?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davis",
      "html_url": "https://github.com/davis",
      "followers_url": "https://api.github.com/users/davis/followers",
      "following_url": "https://api.github.com/users/davis/following{/other_user}",
      "gists_url": "https://api.github.com/users/davis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davis/subscriptions",
      "organizations_url": "https://api.github.com/users/davis/orgs",
      "repos_url": "https://api.github.com/users/davis/repos",
      "events_url": "https://api.github.com/users/davis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davis/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206142130,
        "node_id": "MDU6TGFiZWwyMDYxNDIxMzA=",
        "url": "https://api.github.com/repos/browserify/browserify/labels/repro-please",
        "name": "repro-please",
        "color": "207de5",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-10-21T23:35:46Z",
    "updated_at": "2018-01-04T11:03:15Z",
    "closed_at": "2018-01-04T11:03:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "for example, in my first file which is in `js/` i want to `require('../package.json')` but it doesn't let me, and says:\n\n```\nmodule \"../package.json\" not found from \"/Users/davis/project/js/fake_78de76bf.js\"\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/956/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/956/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/955",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/955/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/955/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/955/events",
    "html_url": "https://github.com/browserify/browserify/issues/955",
    "id": 46211911,
    "node_id": "MDU6SXNzdWU0NjIxMTkxMQ==",
    "number": 955,
    "title": "Identical files are treated as same",
    "user": {
      "login": "u840903",
      "id": 111975,
      "node_id": "MDQ6VXNlcjExMTk3NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/111975?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/u840903",
      "html_url": "https://github.com/u840903",
      "followers_url": "https://api.github.com/users/u840903/followers",
      "following_url": "https://api.github.com/users/u840903/following{/other_user}",
      "gists_url": "https://api.github.com/users/u840903/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/u840903/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/u840903/subscriptions",
      "organizations_url": "https://api.github.com/users/u840903/orgs",
      "repos_url": "https://api.github.com/users/u840903/repos",
      "events_url": "https://api.github.com/users/u840903/events{/privacy}",
      "received_events_url": "https://api.github.com/users/u840903/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-10-19T17:52:40Z",
    "updated_at": "2014-11-04T20:58:02Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I've go two identical files **pages/start/main.js** and **pages/about/main.js** in two different directories. They look the same, but depend on two different dependencies **pages/start/template.handlebars** and **pages/about/template.handlebars**. During compilation both main.js files get treated as the same which result in my Start and About page looking the same.\n\n```\npages\n‚îî‚îÄ‚îÄ‚îÄstart\n‚îÇ   main.js\n‚îÇ   template.handlebars\n‚îî‚îÄ‚îÄ‚îÄabout\n‚îÇ   main.js\n‚îÇ   template.handlebars\n```\n\n``` js\n// pages/start/main.js and pages/about/main.js\nvar View = require('ampersand-view');\nvar template = require('./template.handlebars');\n\nmodule.exports = View.extend({\n    autoRender: true,\n    template: template\n});\n```\n\n``` html\n<!-- pages/start/template.handlebars -->\n<div class=\"page-start\">\n<h1>Start Page</h1>\n</div>\n```\n\n``` html\n<!-- pages/about/template.handlebars -->\n<div class=\"page-about\">\n<h1>About Page</h1>\n</div>\n```\n\nThe bug currently manifests deep inside a project. I can extract the code if needed.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/955/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/955/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/954",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/954/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/954/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/954/events",
    "html_url": "https://github.com/browserify/browserify/pull/954",
    "id": 46167910,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjI5NjU1NjY=",
    "number": 954,
    "title": "Rename option to 'noParse' for consistency with module-deps",
    "user": {
      "login": "geigerzaehler",
      "id": 3919579,
      "node_id": "MDQ6VXNlcjM5MTk1Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3919579?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/geigerzaehler",
      "html_url": "https://github.com/geigerzaehler",
      "followers_url": "https://api.github.com/users/geigerzaehler/followers",
      "following_url": "https://api.github.com/users/geigerzaehler/following{/other_user}",
      "gists_url": "https://api.github.com/users/geigerzaehler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/geigerzaehler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/geigerzaehler/subscriptions",
      "organizations_url": "https://api.github.com/users/geigerzaehler/orgs",
      "repos_url": "https://api.github.com/users/geigerzaehler/repos",
      "events_url": "https://api.github.com/users/geigerzaehler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/geigerzaehler/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-10-18T08:37:11Z",
    "updated_at": "2014-11-11T14:40:58Z",
    "closed_at": "2014-11-11T00:49:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/954",
      "html_url": "https://github.com/browserify/browserify/pull/954",
      "diff_url": "https://github.com/browserify/browserify/pull/954.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/954.patch",
      "merged_at": null
    },
    "body": "- Pass the `--noparse` option from the command line to `module-deps`\n- `noParse` option for `browserify` implies option for `module-deps`\n- Retains `opts.noparse` for backwards compatibility\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/954/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/954/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/953",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/953/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/953/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/953/events",
    "html_url": "https://github.com/browserify/browserify/pull/953",
    "id": 46085157,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjI5MTU3OTg=",
    "number": 953,
    "title": "Added failing test case for transforming required code",
    "user": {
      "login": "jkimbo",
      "id": 691952,
      "node_id": "MDQ6VXNlcjY5MTk1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/691952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jkimbo",
      "html_url": "https://github.com/jkimbo",
      "followers_url": "https://api.github.com/users/jkimbo/followers",
      "following_url": "https://api.github.com/users/jkimbo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jkimbo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jkimbo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jkimbo/subscriptions",
      "organizations_url": "https://api.github.com/users/jkimbo/orgs",
      "repos_url": "https://api.github.com/users/jkimbo/repos",
      "events_url": "https://api.github.com/users/jkimbo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jkimbo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2014-10-17T10:27:17Z",
    "updated_at": "2016-09-07T15:02:26Z",
    "closed_at": "2016-09-07T15:02:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/953",
      "html_url": "https://github.com/browserify/browserify/pull/953",
      "diff_url": "https://github.com/browserify/browserify/pull/953.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/953.patch",
      "merged_at": null
    },
    "body": "When requiring a file for a bundle it doesn't get passed through any transforms. Have attached a failing test case for this but I'm not sure how to fix it. \n\nSupposed to have been fixed in 6.0.3 (https://github.com/substack/node-browserify/issues/855)\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/953/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/953/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/952",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/952/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/952/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/952/events",
    "html_url": "https://github.com/browserify/browserify/issues/952",
    "id": 46081480,
    "node_id": "MDU6SXNzdWU0NjA4MTQ4MA==",
    "number": 952,
    "title": "module.id is undefined",
    "user": {
      "login": "Marshallx",
      "id": 1240067,
      "node_id": "MDQ6VXNlcjEyNDAwNjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1240067?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Marshallx",
      "html_url": "https://github.com/Marshallx",
      "followers_url": "https://api.github.com/users/Marshallx/followers",
      "following_url": "https://api.github.com/users/Marshallx/following{/other_user}",
      "gists_url": "https://api.github.com/users/Marshallx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Marshallx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Marshallx/subscriptions",
      "organizations_url": "https://api.github.com/users/Marshallx/orgs",
      "repos_url": "https://api.github.com/users/Marshallx/repos",
      "events_url": "https://api.github.com/users/Marshallx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Marshallx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 203861840,
        "node_id": "MDU6TGFiZWwyMDM4NjE4NDA=",
        "url": "https://api.github.com/repos/browserify/browserify/labels/patch-welcome",
        "name": "patch-welcome",
        "color": "e102d8",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-10-17T09:41:19Z",
    "updated_at": "2018-01-04T11:05:29Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "module.id seems to be completely missing from browserify despite being part of the CommonJS spec.\nThis breaks anything that uses module.id\n\nIf there is a reason not to include this can we at least get a command line option to enable it?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/952/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/952/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  }
]