[
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/951",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/951/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/951/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/951/events",
    "html_url": "https://github.com/browserify/browserify/issues/951",
    "id": 46060525,
    "node_id": "MDU6SXNzdWU0NjA2MDUyNQ==",
    "number": 951,
    "title": "Including full paths in output bundle requires (seems like a regression)",
    "user": {
      "login": "HenrikJoreteg",
      "id": 67925,
      "node_id": "MDQ6VXNlcjY3OTI1",
      "avatar_url": "https://avatars.githubusercontent.com/u/67925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/HenrikJoreteg",
      "html_url": "https://github.com/HenrikJoreteg",
      "followers_url": "https://api.github.com/users/HenrikJoreteg/followers",
      "following_url": "https://api.github.com/users/HenrikJoreteg/following{/other_user}",
      "gists_url": "https://api.github.com/users/HenrikJoreteg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/HenrikJoreteg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HenrikJoreteg/subscriptions",
      "organizations_url": "https://api.github.com/users/HenrikJoreteg/orgs",
      "repos_url": "https://api.github.com/users/HenrikJoreteg/repos",
      "events_url": "https://api.github.com/users/HenrikJoreteg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/HenrikJoreteg/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2014-10-17T03:47:49Z",
    "updated_at": "2014-12-24T12:06:33Z",
    "closed_at": "2014-12-24T12:05:55Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I had this issue with anything newer than 5.10.1 (current is 6.1.0 as of this filing).\n\nI did a bit of a version bisect to figure out when it started happening and traced it down to the 5.11.0 release.\n\nSo something in this change: https://github.com/substack/node-browserify/compare/5.10.1...5.11.0 made my bundle start including full paths but only for _some_ folders.\n\n@sindresorhus noticed it when I sent a PR to ampersand.js to TodoMVC: https://github.com/tastejs/todomvc/pull/1037\n\nI just pegged it to 5.10.1 for now, don't have time to dig deeper right this minute. But thought I should file it anyway.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/951/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/951/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/950",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/950/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/950/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/950/events",
    "html_url": "https://github.com/browserify/browserify/issues/950",
    "id": 46055734,
    "node_id": "MDU6SXNzdWU0NjA1NTczNA==",
    "number": 950,
    "title": "Uncaught, unspecified \"error\" event when transforming with brfs",
    "user": {
      "login": "stewartknapman",
      "id": 1373290,
      "node_id": "MDQ6VXNlcjEzNzMyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1373290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stewartknapman",
      "html_url": "https://github.com/stewartknapman",
      "followers_url": "https://api.github.com/users/stewartknapman/followers",
      "following_url": "https://api.github.com/users/stewartknapman/following{/other_user}",
      "gists_url": "https://api.github.com/users/stewartknapman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stewartknapman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stewartknapman/subscriptions",
      "organizations_url": "https://api.github.com/users/stewartknapman/orgs",
      "repos_url": "https://api.github.com/users/stewartknapman/repos",
      "events_url": "https://api.github.com/users/stewartknapman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stewartknapman/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-10-17T01:58:10Z",
    "updated_at": "2014-10-21T02:21:21Z",
    "closed_at": "2014-10-21T02:21:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm using browserify within gulp and I'm getting the following error:\n\n```\nevents.js:74\n        throw TypeError('Uncaught, unspecified \"error\" event.');\n              ^\nTypeError: Uncaught, unspecified \"error\" event.\n    at TypeError (<anonymous>)\n    at Labeled.EventEmitter.emit (events.js:74:15)\n    at Labeled.<anonymous> (/Users/lucid/Development/IrvingSmithJack/node_modules/browserify/node_modules/labeled-stream-splicer/node_modules/stream-splicer/index.js:132:18)\n    at Labeled.EventEmitter.emit (events.js:117:20)\n    at Deps.<anonymous> (/Users/lucid/Development/IrvingSmithJack/node_modules/browserify/node_modules/labeled-stream-splicer/node_modules/stream-splicer/index.js:132:18)\n    at Deps.EventEmitter.emit (events.js:95:17)\n    at DuplexWrapper.<anonymous> (/Users/lucid/Development/IrvingSmithJack/node_modules/browserify/node_modules/module-deps/index.js:185:18)\n    at DuplexWrapper.EventEmitter.emit (events.js:117:20)\n    at DuplexWrapper.<anonymous> (/Users/lucid/Development/IrvingSmithJack/node_modules/browserify/node_modules/duplexer2/index.js:50:19)\n    at DuplexWrapper.EventEmitter.emit (events.js:117:20)\n```\n\nMy gulp setup looks like this:\n\n```\ngulp.task('browserify', function () {\n  return browserify('./src/js/app.js', {\n      debug: true                        // with source maps\n    })\n    .transform('brfs')                   // include file system\n    .transform({ global: true }, 'uglifyify')\n    .bundle()\n    .pipe(source('app.js'))             // Pass desired output filename to vinyl-source-stream\n    .pipe(gulp.dest('./assets/js/'));   // Start piping stream to tasks!\n});\n```\n\nI noticed that I don't get the error when ever I comment out either `.transform('brfs')` in my gulp file or `fs = require('fs')` inside my main app.\nBut I'm at a loss as to tracking this down any further.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/950/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/950/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/949",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/949/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/949/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/949/events",
    "html_url": "https://github.com/browserify/browserify/issues/949",
    "id": 46031835,
    "node_id": "MDU6SXNzdWU0NjAzMTgzNQ==",
    "number": 949,
    "title": "browserify, external, pipeline, get('deps')",
    "user": {
      "login": "ouhouhsami",
      "id": 193924,
      "node_id": "MDQ6VXNlcjE5MzkyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/193924?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ouhouhsami",
      "html_url": "https://github.com/ouhouhsami",
      "followers_url": "https://api.github.com/users/ouhouhsami/followers",
      "following_url": "https://api.github.com/users/ouhouhsami/following{/other_user}",
      "gists_url": "https://api.github.com/users/ouhouhsami/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ouhouhsami/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ouhouhsami/subscriptions",
      "organizations_url": "https://api.github.com/users/ouhouhsami/orgs",
      "repos_url": "https://api.github.com/users/ouhouhsami/repos",
      "events_url": "https://api.github.com/users/ouhouhsami/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ouhouhsami/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-10-16T20:30:22Z",
    "updated_at": "2014-10-31T16:04:52Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello, \n\nI'm looking for a 'simple' way to browserify a lib, without its dependencies. And, just after, browserify its dependencies in a bundle. Something like the following code, but which work:\n\n```\nvar browserify = require('browserify');\nvar b = browserify();\nb.add('./index.js', {standalone: foo})\n.pipeline.get('deps')\n.push(/* something that get all the 'require' in index.js in an array - so stop the stream ... or accumulate it */)\n.external(the previous array with all dependencies)\n.bundle(function(err, src){\n   /* here I would get the src */\n});\n/* here I would need a way to get a browserified version of my dependencies */\n```\n\nMy goal is to have my lib, browserified and ready for code coverage.\n\nCheers, \n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/949/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/949/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/948",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/948/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/948/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/948/events",
    "html_url": "https://github.com/browserify/browserify/pull/948",
    "id": 45934135,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjI4MjQ1NjA=",
    "number": 948,
    "title": "Update regexps to work in Windows",
    "user": {
      "login": "smrq",
      "id": 400889,
      "node_id": "MDQ6VXNlcjQwMDg4OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/400889?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smrq",
      "html_url": "https://github.com/smrq",
      "followers_url": "https://api.github.com/users/smrq/followers",
      "following_url": "https://api.github.com/users/smrq/following{/other_user}",
      "gists_url": "https://api.github.com/users/smrq/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smrq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smrq/subscriptions",
      "organizations_url": "https://api.github.com/users/smrq/orgs",
      "repos_url": "https://api.github.com/users/smrq/repos",
      "events_url": "https://api.github.com/users/smrq/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smrq/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-10-16T00:00:44Z",
    "updated_at": "2014-11-11T01:00:17Z",
    "closed_at": "2014-11-11T01:00:17Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/948",
      "html_url": "https://github.com/browserify/browserify/pull/948",
      "diff_url": "https://github.com/browserify/browserify/pull/948.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/948.patch",
      "merged_at": null
    },
    "body": "This change should cover both #946 and (probably) #740.  Resolves #924 and #881, and maybe others.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/948/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/948/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/947",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/947/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/947/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/947/events",
    "html_url": "https://github.com/browserify/browserify/pull/947",
    "id": 45813472,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjI3NTE1NDE=",
    "number": 947,
    "title": "Fixed typo in options",
    "user": {
      "login": "nrbrook",
      "id": 1141167,
      "node_id": "MDQ6VXNlcjExNDExNjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1141167?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nrbrook",
      "html_url": "https://github.com/nrbrook",
      "followers_url": "https://api.github.com/users/nrbrook/followers",
      "following_url": "https://api.github.com/users/nrbrook/following{/other_user}",
      "gists_url": "https://api.github.com/users/nrbrook/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nrbrook/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nrbrook/subscriptions",
      "organizations_url": "https://api.github.com/users/nrbrook/orgs",
      "repos_url": "https://api.github.com/users/nrbrook/repos",
      "events_url": "https://api.github.com/users/nrbrook/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nrbrook/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-10-14T23:34:28Z",
    "updated_at": "2014-10-26T09:31:58Z",
    "closed_at": "2014-10-26T09:31:58Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/947",
      "html_url": "https://github.com/browserify/browserify/pull/947",
      "diff_url": "https://github.com/browserify/browserify/pull/947.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/947.patch",
      "merged_at": null
    },
    "body": "This typo cost me some time...\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/947/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/947/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/946",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/946/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/946/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/946/events",
    "html_url": "https://github.com/browserify/browserify/pull/946",
    "id": 45793806,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjI3Mzg5NTg=",
    "number": 946,
    "title": "allow win32 file path in require",
    "user": {
      "login": "peutetre",
      "id": 204569,
      "node_id": "MDQ6VXNlcjIwNDU2OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/204569?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/peutetre",
      "html_url": "https://github.com/peutetre",
      "followers_url": "https://api.github.com/users/peutetre/followers",
      "following_url": "https://api.github.com/users/peutetre/following{/other_user}",
      "gists_url": "https://api.github.com/users/peutetre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/peutetre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/peutetre/subscriptions",
      "organizations_url": "https://api.github.com/users/peutetre/orgs",
      "repos_url": "https://api.github.com/users/peutetre/repos",
      "events_url": "https://api.github.com/users/peutetre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/peutetre/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-10-14T20:05:52Z",
    "updated_at": "2014-10-16T11:06:14Z",
    "closed_at": "2014-10-16T11:06:14Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/946",
      "html_url": "https://github.com/browserify/browserify/pull/946",
      "diff_url": "https://github.com/browserify/browserify/pull/946.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/946.patch",
      "merged_at": null
    },
    "body": "re allow browserify to accept win32 file path in `require(file, opts)` when working with multiple drives.\nFor more detail: https://gist.github.com/peutetre/ab74062c2bb14f49889f\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/946/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/946/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/945",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/945/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/945/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/945/events",
    "html_url": "https://github.com/browserify/browserify/pull/945",
    "id": 45586781,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjI2MTc4NzQ=",
    "number": 945,
    "title": "Allow transforms to be ignored",
    "user": {
      "login": "mattdesl",
      "id": 1383811,
      "node_id": "MDQ6VXNlcjEzODM4MTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1383811?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattdesl",
      "html_url": "https://github.com/mattdesl",
      "followers_url": "https://api.github.com/users/mattdesl/followers",
      "following_url": "https://api.github.com/users/mattdesl/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattdesl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattdesl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattdesl/subscriptions",
      "organizations_url": "https://api.github.com/users/mattdesl/orgs",
      "repos_url": "https://api.github.com/users/mattdesl/repos",
      "events_url": "https://api.github.com/users/mattdesl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattdesl/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-10-12T17:17:38Z",
    "updated_at": "2014-10-13T15:45:54Z",
    "closed_at": "2014-10-13T15:45:26Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/945",
      "html_url": "https://github.com/browserify/browserify/pull/945",
      "diff_url": "https://github.com/browserify/browserify/pull/945.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/945.patch",
      "merged_at": "2014-10-13T15:45:26Z"
    },
    "body": "This lets you ignore transforms by name, and it trickles down to the module dependency level so they get ignored through the entire bundle. The general idea here is to apply a global top-level transform after the fact, that gets applied to the _entire_ bundle, i.e. to override a transform completely for application-specific purposes. \n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/945/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/945/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/944",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/944/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/944/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/944/events",
    "html_url": "https://github.com/browserify/browserify/issues/944",
    "id": 45567386,
    "node_id": "MDU6SXNzdWU0NTU2NzM4Ng==",
    "number": 944,
    "title": "plugins and their scope",
    "user": {
      "login": "mattdesl",
      "id": 1383811,
      "node_id": "MDQ6VXNlcjEzODM4MTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1383811?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattdesl",
      "html_url": "https://github.com/mattdesl",
      "followers_url": "https://api.github.com/users/mattdesl/followers",
      "following_url": "https://api.github.com/users/mattdesl/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattdesl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattdesl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattdesl/subscriptions",
      "organizations_url": "https://api.github.com/users/mattdesl/orgs",
      "repos_url": "https://api.github.com/users/mattdesl/repos",
      "events_url": "https://api.github.com/users/mattdesl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattdesl/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-10-12T01:51:35Z",
    "updated_at": "2014-12-13T14:01:25Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Not much info is written on plugins right now. It seems like they are intended to be used only at the application-level, and for things like emitting multiple files (factor-bundle being a good example). \n\nBut they don't have \"full control\" over the bundler like you may need for an application-specific plugin. For example, to override or disable transforms across module dependencies. \n\nShouldn't the plugins be the first thing that are instantiated on the bundler, rather than the last? And, further, shouldn't the plugin features also trickle down to the dependencies handled by module-deps? Or am I misunderstanding the goal of these plugins?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/944/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/944/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/943",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/943/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/943/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/943/events",
    "html_url": "https://github.com/browserify/browserify/issues/943",
    "id": 45561764,
    "node_id": "MDU6SXNzdWU0NTU2MTc2NA==",
    "number": 943,
    "title": "#! is not removed when --bare mode.",
    "user": {
      "login": "dominictarr",
      "id": 259374,
      "node_id": "MDQ6VXNlcjI1OTM3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/259374?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dominictarr",
      "html_url": "https://github.com/dominictarr",
      "followers_url": "https://api.github.com/users/dominictarr/followers",
      "following_url": "https://api.github.com/users/dominictarr/following{/other_user}",
      "gists_url": "https://api.github.com/users/dominictarr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dominictarr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dominictarr/subscriptions",
      "organizations_url": "https://api.github.com/users/dominictarr/orgs",
      "repos_url": "https://api.github.com/users/dominictarr/repos",
      "events_url": "https://api.github.com/users/dominictarr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dominictarr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-10-11T20:47:23Z",
    "updated_at": "2014-10-25T13:38:35Z",
    "closed_at": "2014-10-25T13:38:35Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "the problem is that --bare sets `--no-detect-globals`,\nbut insert-global-modules removes the `#!` line, and later things the pipeline fail if this has not happened.\n\nAlso, the documentation for --bare isn't complete because it doesn't mention that it also disables `detect-globals`, but it does.\n\nif this was fixed, it would be possible to browserify browserify with --bare, and then run a single javascript file, rather than load 1.3 mb of javascript over many sync file io ops.\n\nI have tried this command:\n\n`browserify --no-detect-globals --command 'grep -e \"^#!\" -v' --global ./bin/cmd.js`\n\nwhich makes grep produce the correct output, but it seems that the error occurs before that transform has been run.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/943/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/943/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/942",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/942/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/942/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/942/events",
    "html_url": "https://github.com/browserify/browserify/issues/942",
    "id": 45492848,
    "node_id": "MDU6SXNzdWU0NTQ5Mjg0OA==",
    "number": 942,
    "title": "assets & inspiration from webpack",
    "user": {
      "login": "mattdesl",
      "id": 1383811,
      "node_id": "MDQ6VXNlcjEzODM4MTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1383811?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattdesl",
      "html_url": "https://github.com/mattdesl",
      "followers_url": "https://api.github.com/users/mattdesl/followers",
      "following_url": "https://api.github.com/users/mattdesl/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattdesl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattdesl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattdesl/subscriptions",
      "organizations_url": "https://api.github.com/users/mattdesl/orgs",
      "repos_url": "https://api.github.com/users/mattdesl/repos",
      "events_url": "https://api.github.com/users/mattdesl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattdesl/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2014-10-10T15:30:10Z",
    "updated_at": "2014-10-21T15:34:58Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Webpack introduces a lot of good features, one of the nicest is the way it approaches assets. When you require an asset, like CSS or an image, it \"bubbles up\" to the application level. This means your website can still use a single (minified) style sheet, rather than potentially hundreds of inserted CSS fragments if all of your modules were to use `insert-css`. Same with images; a module might depend on a small image or SVG element (like an arrow icon), but at the application-level, a custom loader could pack all those icons into texture atlases so you are only delivering a single image to the user.\n\nIdeally I want something like this, which is statically analyzed and has the potential to run in Node (and maybe actually do something down the line).\n\n``` js\nvar style = require('css-class-emitter')('./style.less')\n\n//handling CSS\nelement.className = style\n\n//handling images\nvar url = require('image-emitter')('./arrow.png')\n\nrequire('img')(url, function(img) {\n    //do something with <img> tag\n})\n```\n\nThis is obviously outside the scope of browserify. What I'm wondering, is if something like this would ever be possible to build on top of browserify, given that browserify's architecture (as far as I can tell) only emits a single source file. These \"transforms\" would need to emit extra files to an application-level `output` directory. Ideas?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/942/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/942/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/941",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/941/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/941/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/941/events",
    "html_url": "https://github.com/browserify/browserify/issues/941",
    "id": 45383216,
    "node_id": "MDU6SXNzdWU0NTM4MzIxNg==",
    "number": 941,
    "title": "Is there a way to obfuscate module names in bundle?",
    "user": {
      "login": "dsuckau",
      "id": 1607492,
      "node_id": "MDQ6VXNlcjE2MDc0OTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1607492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsuckau",
      "html_url": "https://github.com/dsuckau",
      "followers_url": "https://api.github.com/users/dsuckau/followers",
      "following_url": "https://api.github.com/users/dsuckau/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsuckau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsuckau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsuckau/subscriptions",
      "organizations_url": "https://api.github.com/users/dsuckau/orgs",
      "repos_url": "https://api.github.com/users/dsuckau/repos",
      "events_url": "https://api.github.com/users/dsuckau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsuckau/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-10-09T15:51:58Z",
    "updated_at": "2014-10-27T11:07:35Z",
    "closed_at": "2014-10-27T11:07:35Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hey folks,\n\nis there a way to automatically obfuscate the string names of required modules in the browserified bundle?\n\nSimple example:\n\n`api.js`:\n\n``` javascript\nvar API = {\n    sayHello: require('./sayHello'),\n    sayBye: require('./sayBye'),\n    sayThankYou: require('./sayThankYou')\n};\n\nwindow.API = API;\nmodule.exports = API;\n```\n\n`sayHello.js`:\n\n``` javascript\nmodule.exports = function () {\n    return 'hello';\n};\n```\n\n`sayBye.js`:\n\n``` javascript\nmodule.exports = function () {\n    return 'bye';\n};\n```\n\n`sayThankYou.js`:\n\n``` javascript\nmodule.exports = function () {\n    return 'thank you';\n};\n```\n\nNow I bundle it by `api.js` as entry point:\n\n``` bash\n$ browserify api.js -o bundle.js\n```\n\nAnd will get:\n\n``` javascript\n(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof \nrequire==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);\nvar f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}\nvar l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];\n    return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof \nrequire==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})(\n{1:[function(require,module,exports){\n\nvar API = {\n    sayHello: require('./sayHello'),\n    sayBye: require('./sayBye'),\n    sayThankYou: require('./sayThankYou')\n};\n\nwindow.API = API;\nmodule.exports = API;\n\n},{\"./sayBye\":2,\"./sayHello\":3,\"./sayThankYou\":4}],2:[function(require,module,exports){\n\nmodule.exports = function () {\n    return 'bye';\n};\n\n},{}],3:[function(require,module,exports){\n\nmodule.exports = function () {\n    return 'hello';\n};\n\n},{}],4:[function(require,module,exports){\n\nmodule.exports = function () {\n    return 'thank you';\n};\n\n},{}]},{},[1]);\n```\n\nNow I have the strings `./sayHello`, `./sayBye`and `./sayThankYou`, passed in the `require()` calls and in the generated object of browserify as keys. I want them to be replaced.\n\nThe following works the same: (replaced with `a`, `b`, `c`):\n\n``` javascript\n(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof\nrequire==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);\nvar f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}\nvar l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];\n    return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof\nrequire==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})(\n{1:[function(require,module,exports){\n\nvar API = {\n    sayHello: require('a'),\n    sayBye: require('b'),\n    sayThankYou: require('c')\n};\n\nwindow.API = API;\nmodule.exports = API;\n\n},{\"b\":2,\"a\":3,\"c\":4}],2:[function(require,module,exports){\n\nmodule.exports = function () {\n    return 'bye';\n};\n\n},{}],3:[function(require,module,exports){\n\nmodule.exports = function () {\n    return 'hello';\n};\n\n},{}],4:[function(require,module,exports){\n\nmodule.exports = function () {\n    return 'thank you';\n};\n\n},{}]},{},[1]);\n```\n\nDoes browserify already has a way to afford this? Or maybe with a plugin? I found nothing.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/941/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/941/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/940",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/940/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/940/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/940/events",
    "html_url": "https://github.com/browserify/browserify/issues/940",
    "id": 45373503,
    "node_id": "MDU6SXNzdWU0NTM3MzUwMw==",
    "number": 940,
    "title": "Files getting erroneously deduped when using fullPaths.",
    "user": {
      "login": "jkyle",
      "id": 100188,
      "node_id": "MDQ6VXNlcjEwMDE4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/100188?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jkyle",
      "html_url": "https://github.com/jkyle",
      "followers_url": "https://api.github.com/users/jkyle/followers",
      "following_url": "https://api.github.com/users/jkyle/following{/other_user}",
      "gists_url": "https://api.github.com/users/jkyle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jkyle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jkyle/subscriptions",
      "organizations_url": "https://api.github.com/users/jkyle/orgs",
      "repos_url": "https://api.github.com/users/jkyle/repos",
      "events_url": "https://api.github.com/users/jkyle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jkyle/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2014-10-09T14:35:20Z",
    "updated_at": "2015-02-25T10:31:29Z",
    "closed_at": "2014-12-24T23:42:53Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "https://github.com/substack/node-browserify/pull/917 introduced a bug where certain files get erroneously deduped. For example if you have an `index.js` that's just `module.exports = require('./lib')` in multiple libraries, they all get deduped to the first occurrence of the file. So, you end up requiring the wrong `lib` in the other libraries.\n\n```\n/test_library_one\n    /lib\n    index.js // module.exports = require('./lib')\n/test_library_two\n    /lib\n    index.js // module.exports = require('./lib')\n```\n\nIn this case, the bundle entry for `/test_library_two/index.js` ends up being\n\n``` javascript\n\"/path/to/test_library_two/index.js\":[function(require,module,exports){\n    module.exports=require(\"/path/to/test_library_one/index.js\")\n}\n```\n\nwhich ends up requiring `test_library_one`'s `/lib` into `test_library_two`.\n\nI first noticed this with https://github.com/hapijs/joi. Browserify 5.12.0 works, but 5.12.1 breaks. It also works fine without using fullPaths, but watchify requires that option.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/940/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/940/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/939",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/939/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/939/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/939/events",
    "html_url": "https://github.com/browserify/browserify/issues/939",
    "id": 45313344,
    "node_id": "MDU6SXNzdWU0NTMxMzM0NA==",
    "number": 939,
    "title": "Conflict between standalone & require",
    "user": {
      "login": "piranna",
      "id": 532414,
      "node_id": "MDQ6VXNlcjUzMjQxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/532414?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/piranna",
      "html_url": "https://github.com/piranna",
      "followers_url": "https://api.github.com/users/piranna/followers",
      "following_url": "https://api.github.com/users/piranna/following{/other_user}",
      "gists_url": "https://api.github.com/users/piranna/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/piranna/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/piranna/subscriptions",
      "organizations_url": "https://api.github.com/users/piranna/orgs",
      "repos_url": "https://api.github.com/users/piranna/repos",
      "events_url": "https://api.github.com/users/piranna/events{/privacy}",
      "received_events_url": "https://api.github.com/users/piranna/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2014-10-09T00:14:34Z",
    "updated_at": "2015-03-09T17:52:09Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm building a [framework](https://github.com/Kurento/kurento-client-js) that have a simple [plugins architecture](https://github.com/Kurento/kurento-module-pointerdetector-js) with peerDependencies, where the plugins need to access to some resources of the host project. This scheme is working on Node.js, and I'm trying to mimic it in browsers by following the instructions on the readme to build [multiple bundles](https://github.com/substack/node-browserify#multiple-bundles).\n\nIt works as is, but since the framework has some build-in plugins so for basic use cases it can work without any other files, I'm using the `standalone` option so it can be used from the window object. Problem is, that I've found that by using the `standalone` option the `require()` function is not available anymore, so if I want both to access the framework main code from a namespace on the window object and at the same time by doing a require() call (mainly done by the plugins) I need to use an externally provided `require()` function.\n\nIs it on purpose? Why? What alternatives do I have?\n\nIf it's a bug, where should a look to fix it easily?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/939/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/939/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/938",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/938/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/938/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/938/events",
    "html_url": "https://github.com/browserify/browserify/issues/938",
    "id": 45111243,
    "node_id": "MDU6SXNzdWU0NTExMTI0Mw==",
    "number": 938,
    "title": "Aliasing node module with require target seems broken",
    "user": {
      "login": "danielkcz",
      "id": 1096340,
      "node_id": "MDQ6VXNlcjEwOTYzNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1096340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danielkcz",
      "html_url": "https://github.com/danielkcz",
      "followers_url": "https://api.github.com/users/danielkcz/followers",
      "following_url": "https://api.github.com/users/danielkcz/following{/other_user}",
      "gists_url": "https://api.github.com/users/danielkcz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danielkcz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danielkcz/subscriptions",
      "organizations_url": "https://api.github.com/users/danielkcz/orgs",
      "repos_url": "https://api.github.com/users/danielkcz/repos",
      "events_url": "https://api.github.com/users/danielkcz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danielkcz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-10-07T14:07:23Z",
    "updated_at": "2017-05-07T06:41:12Z",
    "closed_at": "2017-05-07T06:41:12Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Or am I doing something wrong? Simple example, eg. I would like to alias `debug/browser.js` file so I can call `require('dbg')`.\n\n```\nbrowserify -r 'debug/browser.js:dbg' -e index.js\n```\n\nThe file `index.js` has only single line with `require('dbg')`. After running this, you can check out the [result there](https://dl.dropboxusercontent.com/u/1791518/dev/out.js) and as you can see at the top, it didn't aliased this thing properly. Although correct file is included in the bundle...\n\n```\n{1:[function(require,module,exports){\n    require('dbg')\n},{\"dbg\":undefined}]}\n```\n\nI tried running the command with the `--deps` argument. [Here is the result](https://dl.dropboxusercontent.com/u/1791518/dev/out.json) and everything looks great in there, so it might be some issue in browser-pack?\n\nI am running browserify 5.9.1\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/938/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/938/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/937",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/937/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/937/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/937/events",
    "html_url": "https://github.com/browserify/browserify/issues/937",
    "id": 45050862,
    "node_id": "MDU6SXNzdWU0NTA1MDg2Mg==",
    "number": 937,
    "title": "Transforms do not run if there are no entry point files",
    "user": {
      "login": "smrq",
      "id": 400889,
      "node_id": "MDQ6VXNlcjQwMDg4OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/400889?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smrq",
      "html_url": "https://github.com/smrq",
      "followers_url": "https://api.github.com/users/smrq/followers",
      "following_url": "https://api.github.com/users/smrq/following{/other_user}",
      "gists_url": "https://api.github.com/users/smrq/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smrq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smrq/subscriptions",
      "organizations_url": "https://api.github.com/users/smrq/orgs",
      "repos_url": "https://api.github.com/users/smrq/repos",
      "events_url": "https://api.github.com/users/smrq/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smrq/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 13,
    "created_at": "2014-10-06T23:38:21Z",
    "updated_at": "2015-01-23T14:25:22Z",
    "closed_at": "2014-11-19T02:43:41Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "I will use `brfs` as an example transform, but the issue happens regardless of what transform(s) are used.\n\nGiven the following source code:\n\n**x.js**\n\n``` js\nvar y = require('./y');\nmodule.exports = function () {\n    console.log('x says ' + require('fs').readFileSync(__dirname + '/hello.txt', 'utf-8'));\n    y();\n};\n```\n\n**y.js**\n\n``` js\nmodule.exports = function () {\n    console.log('y says ' + require('fs').readFileSync(__dirname + '/hello.txt', 'utf-8'));\n};\n```\n\n**hello.txt**\n\n```\nhello world\n```\n\nand a build file, **build.js**:\n\n``` js\nrequire('browserify')()\n    .transform('brfs')\n    .require('./x.js', { expose: './x' })\n    .require('./y.js', { expose: './y' })\n    .bundle()\n    .pipe(process.stdout);\n```\n\nthe bundle does not apply the effects of the transform:\n\n``` js\nrequire=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({\"./x\":[function(require,module,exports){\n(function (__dirname){\nvar y = require('./y');\nmodule.exports = function () {\n        console.log('x says ' + require('fs').readFileSync(__dirname + '/hello.txt', 'utf-8'));\n        y();\n};\n}).call(this,\"/\")\n},{\"./y\":undefined,\"fs\":1}],\"./y\":[function(require,module,exports){\n(function (__dirname){\nmodule.exports = function () {\n    console.log('y says ' + require('fs').readFileSync(__dirname + '/hello.txt', 'utf-8'));\n};\n\n}).call(this,\"/\")\n},{\"fs\":1}],1:[function(require,module,exports){\n\n},{}]},{},[]);\n```\n\nIf, however, ANY file is designated as an entry point:\n\n``` js\n    .require('./x.js', { expose: './x', entry: true })\n// or\n    .require('./y.js', { expose: './y', entry: true })\n```\n\nthen the output applies transforms as expected:\n\n``` js\nrequire=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({\"./x\":[function(require,module,exports){\nvar y = require('./y');\nmodule.exports = function () {\n        console.log('x says ' + \"hello world\");\n        y();\n};\n},{\"./y\":undefined}],\"./y\":[function(require,module,exports){\nmodule.exports = function () {\n    console.log('y says ' + \"hello world\");\n};\n\n},{}]},{},[\"./x\"]);\n```\n\nExpected behavior is that transforms should be applied even if there are no entry points designated.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/937/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/937/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/936",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/936/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/936/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/936/events",
    "html_url": "https://github.com/browserify/browserify/issues/936",
    "id": 45038636,
    "node_id": "MDU6SXNzdWU0NTAzODYzNg==",
    "number": 936,
    "title": "How to debug in browsers that don't support source maps?",
    "user": {
      "login": "mightyiam",
      "id": 635591,
      "node_id": "MDQ6VXNlcjYzNTU5MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/635591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mightyiam",
      "html_url": "https://github.com/mightyiam",
      "followers_url": "https://api.github.com/users/mightyiam/followers",
      "following_url": "https://api.github.com/users/mightyiam/following{/other_user}",
      "gists_url": "https://api.github.com/users/mightyiam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mightyiam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mightyiam/subscriptions",
      "organizations_url": "https://api.github.com/users/mightyiam/orgs",
      "repos_url": "https://api.github.com/users/mightyiam/repos",
      "events_url": "https://api.github.com/users/mightyiam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mightyiam/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-10-06T21:21:33Z",
    "updated_at": "2018-03-16T13:50:50Z",
    "closed_at": "2018-03-16T13:50:50Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi and thank you very much for Browserify!\n\nWhat I'm missing is something that will make debugging easier when browsers do not support source maps.\n\nI debug with IE8+ and in the first case where it fails with an error on my code, I can't seem to debug properly because it doesn't let me insert a breakpoint on the browserified source file, saying that it \"isn't loaded\" or something.\n\nAll newer browsers don't have such a issue. Perhaps this is only a file size thing? Perhaps something else.\n\nI realize that this may not be the case, but, perhaps, if there was a way to browserifying without concatenating, perhaps that will work around my issue.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/936/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/936/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/935",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/935/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/935/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/935/events",
    "html_url": "https://github.com/browserify/browserify/issues/935",
    "id": 44891041,
    "node_id": "MDU6SXNzdWU0NDg5MTA0MQ==",
    "number": 935,
    "title": "The `--require` option doesn't work with differing relative paths.",
    "user": {
      "login": "philipwalton",
      "id": 326742,
      "node_id": "MDQ6VXNlcjMyNjc0Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/326742?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/philipwalton",
      "html_url": "https://github.com/philipwalton",
      "followers_url": "https://api.github.com/users/philipwalton/followers",
      "following_url": "https://api.github.com/users/philipwalton/following{/other_user}",
      "gists_url": "https://api.github.com/users/philipwalton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/philipwalton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/philipwalton/subscriptions",
      "organizations_url": "https://api.github.com/users/philipwalton/orgs",
      "repos_url": "https://api.github.com/users/philipwalton/repos",
      "events_url": "https://api.github.com/users/philipwalton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/philipwalton/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2014-10-04T18:48:57Z",
    "updated_at": "2014-12-19T08:05:00Z",
    "closed_at": "2014-12-19T08:05:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Given the following entry point:\n\n``` js\n// main.js\nvar a = require('./lib/a');\nvar b = require('./lib/b');\nconsole.log(a());\nconsole.log(b());\n```\n\nAnd the modules it references: `a` and `b`, where both `a` and `b` are within a sub-directory, and where `b` requires `a` using the relative path `'./a'`:\n\n``` js\n// lib/a.js\nmodule.exports = function() {\n  return 'a';\n};\n```\n\n``` js\n// lib/b.js\nvar a = require('./a');\nmodule.exports = function() {\n  return 'b (depends on: ' + a() + ')';\n}\n```\n\nRunning the following command works as expected:\n\n``` shell\n$ browserify ./main.js | node\n> a\n> b (depends on: a)\n```\n\nBut if I add `-r` to make `a` global, the relative require referenced in `b` breaks:\n\n``` shell\n$ browserify ./main.js -r ./lib/a | node\n```\n\n```\nError: Cannot find module './a'\n    at Function.Module._resolveFilename (module.js:338:15)\n    at Function.Module._load (module.js:280:25)\n    at Module.require (module.js:364:17)\n    at require (module.js:380:17)\n    at s ([stdin]:1:122)\n    at [stdin]:1:313\n    at Object.require../a ([stdin]:7:9)\n    at s ([stdin]:1:262)\n    at [stdin]:1:313\n    at Object.require../lib/a ([stdin]:14:9)\n```\n\nThis is a problem when trying to build multiple bundles that share some of the same core modules.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/935/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/935/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/934",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/934/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/934/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/934/events",
    "html_url": "https://github.com/browserify/browserify/issues/934",
    "id": 44849447,
    "node_id": "MDU6SXNzdWU0NDg0OTQ0Nw==",
    "number": 934,
    "title": "When using AMD loader and browserify simultaneously, UMD libs not working.",
    "user": {
      "login": "denisnarushevich",
      "id": 3859032,
      "node_id": "MDQ6VXNlcjM4NTkwMzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3859032?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/denisnarushevich",
      "html_url": "https://github.com/denisnarushevich",
      "followers_url": "https://api.github.com/users/denisnarushevich/followers",
      "following_url": "https://api.github.com/users/denisnarushevich/following{/other_user}",
      "gists_url": "https://api.github.com/users/denisnarushevich/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/denisnarushevich/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/denisnarushevich/subscriptions",
      "organizations_url": "https://api.github.com/users/denisnarushevich/orgs",
      "repos_url": "https://api.github.com/users/denisnarushevich/repos",
      "events_url": "https://api.github.com/users/denisnarushevich/events{/privacy}",
      "received_events_url": "https://api.github.com/users/denisnarushevich/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-10-03T21:08:50Z",
    "updated_at": "2015-01-04T16:03:42Z",
    "closed_at": "2015-01-04T16:03:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have Browserify compiled bundle, with backbone included inside of it, and Backbone lib has this UMD:\n\n``` javascript\n  // Set up Backbone appropriately for the environment. Start with AMD.\n  if (typeof define === 'function' && define.amd) {\n    define(['underscore', 'jquery', 'exports'], function(_, $, exports) {\n      // Export global even in AMD case in case this script is loaded with\n      // others that may still expect a global Backbone.\n      root.Backbone = factory(root, exports, _, $);\n    });\n\n  // Next for Node.js or CommonJS. jQuery may not be needed as a module.\n  } else if (typeof exports !== 'undefined') {\n    var _ = require('underscore');\n    factory(root, exports, _);\n\n  // Finally, as a browser global.\n  } else {\n    root.Backbone = factory(root, {}, root._, (root.jQuery || root.Zepto || root.ender || root.$));\n  }\n```\n\nMy code loads such bundle with RequireJS.\nDefine() function is defined in global namespace, and backbone decides to use AMD definition, instead of CommonJS. And because of that calling require(\"backbone\") somewhere inside of bundled code we get empty object in return.\n\nMany libs use exactly this UMD format, so modifying sources to fix that is not a good idea.\n\nAs a solution could be overriding most common global functions like define(), require() to undefined inside of a bundle's wrapper function, so UMD would see local define, instead of global.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/934/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/934/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/933",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/933/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/933/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/933/events",
    "html_url": "https://github.com/browserify/browserify/issues/933",
    "id": 44826852,
    "node_id": "MDU6SXNzdWU0NDgyNjg1Mg==",
    "number": 933,
    "title": "Multiple bundles example does not work",
    "user": {
      "login": "ysimonson",
      "id": 127386,
      "node_id": "MDQ6VXNlcjEyNzM4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127386?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ysimonson",
      "html_url": "https://github.com/ysimonson",
      "followers_url": "https://api.github.com/users/ysimonson/followers",
      "following_url": "https://api.github.com/users/ysimonson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ysimonson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ysimonson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ysimonson/subscriptions",
      "organizations_url": "https://api.github.com/users/ysimonson/orgs",
      "repos_url": "https://api.github.com/users/ysimonson/repos",
      "events_url": "https://api.github.com/users/ysimonson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ysimonson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2014-10-03T17:36:25Z",
    "updated_at": "2014-10-25T12:35:03Z",
    "closed_at": "2014-10-25T12:35:03Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I've been trying to build multiple bundles and have hit various roadblocks. Finally I whittled my example down to an almost-replica of what's on the README, but it's still erroring out.\n\nHere my robot.js:\n\n```\nmodule.exports = function (s) { return s.toUpperCase() + '!' };\n```\n\nbeep.js:\n\n```\nvar robot = require('./robot.js');\nconsole.log(robot('beep'));\n```\n\nboop.js:\n\n```\nvar robot = require('./robot.js');\nconsole.log(robot('boop'));\n```\n\nindex.html:\n\n```\n<html>\n    <head>\n        <title>Hello World Browserify Example</title>\n    </head>\n\n    <body>\n        <script src=\"/public/common.js\"></script>\n        <script src=\"/public/beep.js\"></script>\n    </body>\n</html>\n```\n\nThe build commands I run:\n\n```\nbrowserify -r ./robot > public/common.js\nbrowserify -x ./robot.js beep.js > public/beep.js\nbrowserify -x ./robot.js boop.js > public/boop.js\n```\n\nWhen I open index.html, I get this error from common.js: `Uncaught Error: Cannot find module '/robot.js'`\n\nFor reference this is my directory structure:\n\n```\npublic/\n    beep.js\n    boop.js\n    common.js\nbeep.js\nboop.js\nindex.html\nrobot.js\n```\n\nAnd my browserify version:\n\n```\n$ browserify --version\n5.12.1\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/933/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/933/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/932",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/932/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/932/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/932/events",
    "html_url": "https://github.com/browserify/browserify/issues/932",
    "id": 44796309,
    "node_id": "MDU6SXNzdWU0NDc5NjMwOQ==",
    "number": 932,
    "title": "Entry file cannot be dependency?",
    "user": {
      "login": "milesburton",
      "id": 1205171,
      "node_id": "MDQ6VXNlcjEyMDUxNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1205171?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/milesburton",
      "html_url": "https://github.com/milesburton",
      "followers_url": "https://api.github.com/users/milesburton/followers",
      "following_url": "https://api.github.com/users/milesburton/following{/other_user}",
      "gists_url": "https://api.github.com/users/milesburton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/milesburton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/milesburton/subscriptions",
      "organizations_url": "https://api.github.com/users/milesburton/orgs",
      "repos_url": "https://api.github.com/users/milesburton/repos",
      "events_url": "https://api.github.com/users/milesburton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/milesburton/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 203859537,
        "node_id": "MDU6TGFiZWwyMDM4NTk1Mzc=",
        "url": "https://api.github.com/repos/browserify/browserify/labels/bug",
        "name": "bug",
        "color": "C40233",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2014-10-03T12:06:19Z",
    "updated_at": "2018-02-21T14:52:36Z",
    "closed_at": "2018-02-21T14:52:36Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello,\n\nI've run across a rather unusual side effect which I'm trying to determine whether it is related to my project or if it's actually a bug.\n\nIf you specify two entry points. One of which is a dependency of one entry points the resulting module is set to undefined.\n\n./foo.js\n\n``` js\nrequire('./libs/bar.js');\nrequire('./libs/baz.js');\n\nmodule.exports = {\"file\": \"foo.js\"}\n```\n\n./libs/bar.js\n\n``` js\nmodule.exports = {\"file\": \"bar.js\"};\n```\n\n./libs/baz.js\n\n``` js\nrequire('./bar.js');\n\n{\"file\": \"baz.js\"}\n```\n\nWhen browerify configuration is\n\n``` js\n{\nentries: [\n\"./foo.js\",\n\"./libs/bar.js\"\n]\n}\n```\n\nThe result is:\n\nError: Cannot find module './libs/bar.js'\n\nand within the bundled file:\n\n\"./libs/bar.js\":undefined,\n\n...even though bar.js has been bundled and given an appropriate ID. \n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/932/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/932/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/931",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/931/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/931/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/931/events",
    "html_url": "https://github.com/browserify/browserify/issues/931",
    "id": 44714779,
    "node_id": "MDU6SXNzdWU0NDcxNDc3OQ==",
    "number": 931,
    "title": "`--external` option fails to exclude nested dependencies.",
    "user": {
      "login": "philipwalton",
      "id": 326742,
      "node_id": "MDQ6VXNlcjMyNjc0Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/326742?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/philipwalton",
      "html_url": "https://github.com/philipwalton",
      "followers_url": "https://api.github.com/users/philipwalton/followers",
      "following_url": "https://api.github.com/users/philipwalton/following{/other_user}",
      "gists_url": "https://api.github.com/users/philipwalton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/philipwalton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/philipwalton/subscriptions",
      "organizations_url": "https://api.github.com/users/philipwalton/orgs",
      "repos_url": "https://api.github.com/users/philipwalton/repos",
      "events_url": "https://api.github.com/users/philipwalton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/philipwalton/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-10-02T17:36:06Z",
    "updated_at": "2014-11-19T13:03:56Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Given three modules. `a`, `b` (which requires `a`), and `c` (which requires `b`):\n\n``` js\n// a.js\nmodule.exports = function() {\n  console.log('module `a` export');\n};\n```\n\n``` js\n// b.js\nvar a = require('./a');\nmodule.exports = function() {\n  a();\n  console.log('module `b` export');\n};\n```\n\n``` js\n// c.js\nrequire('./b')();\n```\n\nIf I try to browserify \"c.js\" and externalize \"a.js\" (which isn't directly required by `c` but is required by one of its dependencies), the output still contains the module `a` definition:\n\n``` shell\nbrowserify ./c -x ./a\n```\n\nstdout is:\n\n```\n(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nmodule.exports = function() {\n  console.log('module `a` export');\n};\n\n},{}],2:[function(require,module,exports){\nvar a = require('./a');\nmodule.exports = function() {\n  a();\n  console.log('module `b` export');\n};\n\n},{\"./a\":\"/a\"}],3:[function(require,module,exports){\nrequire('./b')();\n\n},{\"./b\":2}]},{},[3]);\n```\n\nAnd, as you can see, it contains the `a` module definition.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/931/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/931/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/930",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/930/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/930/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/930/events",
    "html_url": "https://github.com/browserify/browserify/issues/930",
    "id": 44706551,
    "node_id": "MDU6SXNzdWU0NDcwNjU1MQ==",
    "number": 930,
    "title": "`b.external()` fails when passed an array.",
    "user": {
      "login": "philipwalton",
      "id": 326742,
      "node_id": "MDQ6VXNlcjMyNjc0Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/326742?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/philipwalton",
      "html_url": "https://github.com/philipwalton",
      "followers_url": "https://api.github.com/users/philipwalton/followers",
      "following_url": "https://api.github.com/users/philipwalton/following{/other_user}",
      "gists_url": "https://api.github.com/users/philipwalton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/philipwalton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/philipwalton/subscriptions",
      "organizations_url": "https://api.github.com/users/philipwalton/orgs",
      "repos_url": "https://api.github.com/users/philipwalton/repos",
      "events_url": "https://api.github.com/users/philipwalton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/philipwalton/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-10-02T16:18:08Z",
    "updated_at": "2014-10-03T20:24:44Z",
    "closed_at": "2014-10-03T20:24:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This works:\n\n``` js\nrequire('browserify')('./core').external('./mod');\n```\n\nBut this throws:\n\n``` js\nrequire('browserify')('./core').external(['./mod']);\n```\n\nHere's the trace:\n\n```\nTypeError: Arguments to path.resolve must be strings\n    at Object.exports.resolve (path.js:313:15)\n    at Object.exports.relative (path.js:371:18)\n    at Browserify.external (/Users/philipwalton/Projects/bundle/node_modules/browserify/index.js:180:36)\n    at repl:1:14\n    at REPLServer.self.eval (repl.js:110:21)\n    at Interface.<anonymous> (repl.js:239:12)\n    at Interface.emit (events.js:95:17)\n    at Interface._onLine (readline.js:202:10)\n    at Interface._line (readline.js:531:8)\n    at Interface._ttyWrite (readline.js:760:14)\n```\n\nIt seems like only the [string case](https://github.com/substack/node-browserify/blob/122398440ac3c51a95075235588f496f5491506c/test/external.js#L9) is tested.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/930/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/930/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/929",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/929/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/929/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/929/events",
    "html_url": "https://github.com/browserify/browserify/pull/929",
    "id": 44700517,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjIxNDgwODM=",
    "number": 929,
    "title": "Document internal require resolving. Closes #913.",
    "user": {
      "login": "AjayMT",
      "id": 1331240,
      "node_id": "MDQ6VXNlcjEzMzEyNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1331240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AjayMT",
      "html_url": "https://github.com/AjayMT",
      "followers_url": "https://api.github.com/users/AjayMT/followers",
      "following_url": "https://api.github.com/users/AjayMT/following{/other_user}",
      "gists_url": "https://api.github.com/users/AjayMT/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AjayMT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AjayMT/subscriptions",
      "organizations_url": "https://api.github.com/users/AjayMT/orgs",
      "repos_url": "https://api.github.com/users/AjayMT/repos",
      "events_url": "https://api.github.com/users/AjayMT/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AjayMT/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-10-02T15:27:50Z",
    "updated_at": "2014-10-02T15:57:23Z",
    "closed_at": "2014-10-02T15:53:04Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/929",
      "html_url": "https://github.com/browserify/browserify/pull/929",
      "diff_url": "https://github.com/browserify/browserify/pull/929.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/929.patch",
      "merged_at": null
    },
    "body": "browserify resolves requires within an application, unlike node. Since most people don't know this, they run into errors when they try to do stuff like this:\n\n``` javascript\n\n// abc/foo.js\n\nvar bar = require('./lib/bar.js');\n\n```\n\n``` javascript\n\n// abc/lib/bar.js\n\n// this would work with node because abc/lib/baz.js exists\n// but browserify resolves the path and complains that abc/baz.js doesn't exist\nvar baz = require('./baz.js');\n\nmodule.exports = baz;\n\n```\n\nEveryone is therefore forced to do this:\n\n``` javascript\nvar baz = require(path.join(__dirname, 'baz.js'));\n```\n\nObviously, that's a better (and safer) practice, but people are too used to node's relative-to-__dirname requires. That's why I decided to just document this instead of changing browserify.\n\n(Also, documenting it takes less effort :))\n\nThis should fix issue #913.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/929/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/929/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/928",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/928/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/928/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/928/events",
    "html_url": "https://github.com/browserify/browserify/issues/928",
    "id": 44615793,
    "node_id": "MDU6SXNzdWU0NDYxNTc5Mw==",
    "number": 928,
    "title": "The multiple bundles workflows seems like it's missing a common use-case.",
    "user": {
      "login": "philipwalton",
      "id": 326742,
      "node_id": "MDQ6VXNlcjMyNjc0Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/326742?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/philipwalton",
      "html_url": "https://github.com/philipwalton",
      "followers_url": "https://api.github.com/users/philipwalton/followers",
      "following_url": "https://api.github.com/users/philipwalton/following{/other_user}",
      "gists_url": "https://api.github.com/users/philipwalton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/philipwalton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/philipwalton/subscriptions",
      "organizations_url": "https://api.github.com/users/philipwalton/orgs",
      "repos_url": "https://api.github.com/users/philipwalton/repos",
      "events_url": "https://api.github.com/users/philipwalton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/philipwalton/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-10-01T20:37:11Z",
    "updated_at": "2018-02-06T14:21:12Z",
    "closed_at": "2018-02-06T14:21:12Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The current [multiple bundles example](https://github.com/substack/node-browserify#multiple-bundles) seems to be mainly optimizing for the use-case of excluding common core dependencies (e.g. jQuery or LoDash).\n\nIt doesn't seem to make it very easy to generically exclude all modules from a bundle that I know to already be included on the page. At least not without a lot of manual config.\n\nHere's the use-case:\n- You have a site with some core JavaScript code that runs on every page.\n  - That code depends on modules which may depend on other modules which may depend on other modules, etc.\n- You have page-specific JavaScript that is only loaded on certain pages.\n  - The page-specific JavaScript very likely depends on some of the same modules that the core depends on, so it shouldn't re-bundle any of that.\n  - The page specific JavaScript does not know, exhaustively, what modules core depends on, all it knows is that core is already loaded on the page.\n\nIdeally, I should be able to build a page specific bundle and tell it to exclude (or consider external) any of the modules already bundled in some other bundle. For example:\n\n```\n$ browserify --require-all core > static/core.js\n$ browserify --require-all --external-deep ./core page.js > static/page.js\n```\n\nBasically the `--require-all` flags would tell browserify to expose all modules globally, and the `--external-deep` flags would tell browserify not to bundle any modules in the dependency graph of `./core` when making `static/page.js`\n\nThough the names are a little clunky, this should meet all of the requirements for the use-case I described.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/928/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/928/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/927",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/927/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/927/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/927/events",
    "html_url": "https://github.com/browserify/browserify/pull/927",
    "id": 44575628,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjIwODAxNDQ=",
    "number": 927,
    "title": "Add type check for `opts.basedir`",
    "user": {
      "login": "ForbesLindesay",
      "id": 1260646,
      "node_id": "MDQ6VXNlcjEyNjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1260646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ForbesLindesay",
      "html_url": "https://github.com/ForbesLindesay",
      "followers_url": "https://api.github.com/users/ForbesLindesay/followers",
      "following_url": "https://api.github.com/users/ForbesLindesay/following{/other_user}",
      "gists_url": "https://api.github.com/users/ForbesLindesay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ForbesLindesay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ForbesLindesay/subscriptions",
      "organizations_url": "https://api.github.com/users/ForbesLindesay/orgs",
      "repos_url": "https://api.github.com/users/ForbesLindesay/repos",
      "events_url": "https://api.github.com/users/ForbesLindesay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ForbesLindesay/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-10-01T15:17:37Z",
    "updated_at": "2014-10-03T21:00:41Z",
    "closed_at": "2014-10-03T21:00:25Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/927",
      "html_url": "https://github.com/browserify/browserify/pull/927",
      "diff_url": "https://github.com/browserify/browserify/pull/927.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/927.patch",
      "merged_at": "2014-10-03T21:00:25Z"
    },
    "body": "If you pass a non-undefined, non-string to opts.basedir, the error you get out looks like:\n\n```\nTypeError: Arguments to path.resolve must be strings\n    at exports.resolve (path.js:313:15)\n    at exports.relative (path.js:370:20)\n    at Browserify._createDeps.mopts.resolve (/Users/forbeslindesay/GitHub/browserify-middleware/node_modules/browserify/index.js:349:37)\n    at /Users/forbeslindesay/GitHub/browserify-middleware/node_modules/browserify/node_modules/browser-resolve/index.js:188:13\n    at module.exports.cb (/Users/forbeslindesay/GitHub/browserify-middleware/node_modules/browserify/node_modules/resolve/lib/async.js:38:25)\n    at module.exports.cb (/Users/forbeslindesay/GitHub/browserify-middleware/node_modules/browserify/node_modules/resolve/lib/async.js:65:30)\n    at module.exports.isFile (/Users/forbeslindesay/GitHub/browserify-middleware/node_modules/browserify/node_modules/resolve/lib/async.js:23:18)\n    at Object.oncomplete (fs.js:107:15)\n```\n\nWhich took me a while to figure out.  It would be nice to just check it in the constructor of browserify.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/927/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/927/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/926",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/926/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/926/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/926/events",
    "html_url": "https://github.com/browserify/browserify/issues/926",
    "id": 44546278,
    "node_id": "MDU6SXNzdWU0NDU0NjI3OA==",
    "number": 926,
    "title": "How are \"use strict\" statements handled?",
    "user": {
      "login": "mightyiam",
      "id": 635591,
      "node_id": "MDQ6VXNlcjYzNTU5MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/635591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mightyiam",
      "html_url": "https://github.com/mightyiam",
      "followers_url": "https://api.github.com/users/mightyiam/followers",
      "following_url": "https://api.github.com/users/mightyiam/following{/other_user}",
      "gists_url": "https://api.github.com/users/mightyiam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mightyiam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mightyiam/subscriptions",
      "organizations_url": "https://api.github.com/users/mightyiam/orgs",
      "repos_url": "https://api.github.com/users/mightyiam/repos",
      "events_url": "https://api.github.com/users/mightyiam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mightyiam/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-10-01T09:51:04Z",
    "updated_at": "2014-10-26T06:57:51Z",
    "closed_at": "2014-10-25T22:12:55Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Is it true that `\"use strict\";` statements in processed code is never an issue, because they will never end up as the first statement of the bundle?\n\nFunction–level `\"use strict\";` statements should not be an issue, since they're only affecting the function, right?\n\nWill `\"use strict\";` statements that are script–level show up along the bundle? Will they have any affect if they do?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/926/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/926/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/925",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/925/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/925/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/925/events",
    "html_url": "https://github.com/browserify/browserify/issues/925",
    "id": 44478403,
    "node_id": "MDU6SXNzdWU0NDQ3ODQwMw==",
    "number": 925,
    "title": "Ability to completely switch off builtins",
    "user": {
      "login": "drewnoakes",
      "id": 350947,
      "node_id": "MDQ6VXNlcjM1MDk0Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/350947?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drewnoakes",
      "html_url": "https://github.com/drewnoakes",
      "followers_url": "https://api.github.com/users/drewnoakes/followers",
      "following_url": "https://api.github.com/users/drewnoakes/following{/other_user}",
      "gists_url": "https://api.github.com/users/drewnoakes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drewnoakes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drewnoakes/subscriptions",
      "organizations_url": "https://api.github.com/users/drewnoakes/orgs",
      "repos_url": "https://api.github.com/users/drewnoakes/repos",
      "events_url": "https://api.github.com/users/drewnoakes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drewnoakes/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2014-09-30T17:54:37Z",
    "updated_at": "2018-02-16T10:17:36Z",
    "closed_at": "2018-02-16T10:17:36Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have a TypeScript project from which AMD modules were being compiled for use with RequireJS. I'm considering compiling CommonJS modules and using Browserify.\n\nI became stuck due to builtins. Specifically, they collide with my existing modules, such as `constants` and `util`.\n\n(Note that I'm bundling using Gulp and therefore the API, not the command line)\n\nThe documentation didn't make things too clear, but from reading the source code ([index.js#364](https://github.com/substack/node-browserify/blob/master/index.js#L364)) I learned that even if I set `options.builtins` to `{}` or `false`, then exclusions are still made for the set of builtins in `lib/builtins.js`.\n\nWhat I want is the ability to **completely disable builtins**. I don't use any node packages, and worse, they are causing my application to fail as my modules are not loaded.\n\nIt seems the only way to do what I want is to write something like:\n\n```\nreturn browserify('main.js', {\n        basedir: './scripts/app/',\n        paths: ['./scripts/app/'],\n        builtins: {assert:null,buffer:null,child_process:null,cluster:null,console:null,constants:null,crypto:null,dgram:null,dns:null,domain:null,events:null,fs:null,http:null,https:null,module:null,net:null,os:null,path:null,punycode:null,querystring:null,readline:null,repl:null,stream:null,_stream_duplex:null,_stream_passthrough:null,_stream_readable:null,_stream_transform:null,_stream_writable:null,string_decoder:null,sys:null,timers:null,tls:null,tty:null,url:null,util:null,vm:null,zlib:null,_process:null}\n    })\n```\n\nObviously this is quite ugly.\n\nI'm happy to make a PR for this, but want to understand if there's an alternative approach to achieve this, or some reason that it would be be accepted into the library.\n\nWould what I'm asking be covered by the [`--no-builtins`](https://github.com/substack/node-browserify/blob/master/bin/advanced.txt#L33) command line flag, or is that something else?\n\nEssentially the entire builtins block could be wrapped to resemble:\n\n```\nif (opts.noBuiltins === true) {   // <-- new option\n    if (opts.builtins === false) {\n        mopts.modules = {};\n        self._exclude.push.apply(self._exclude, Object.keys(builtins));\n    }\n    else if (opts.builtins && isarray(opts.builtins)) {\n        mopts.modules = {};\n        opts.builtins.forEach(function (key) {\n            mopts.modules[key] = builtins[key];\n        });\n    }\n    else if (opts.builtins && typeof opts.builtins === 'object') {\n        mopts.modules = opts.builtins;\n    }\n    else mopts.modules = builtins;\n\n    Object.keys(builtins).forEach(function (key) {\n        if (!has(mopts.modules, key)) self._exclude.push(key);\n    });\n}\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/925/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/925/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/924",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/924/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/924/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/924/events",
    "html_url": "https://github.com/browserify/browserify/issues/924",
    "id": 44263200,
    "node_id": "MDU6SXNzdWU0NDI2MzIwMA==",
    "number": 924,
    "title": "incorrect regex pattern causes transforms to be skipped in Windows",
    "user": {
      "login": "dy-dx",
      "id": 1074881,
      "node_id": "MDQ6VXNlcjEwNzQ4ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1074881?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dy-dx",
      "html_url": "https://github.com/dy-dx",
      "followers_url": "https://api.github.com/users/dy-dx/followers",
      "following_url": "https://api.github.com/users/dy-dx/following{/other_user}",
      "gists_url": "https://api.github.com/users/dy-dx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dy-dx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dy-dx/subscriptions",
      "organizations_url": "https://api.github.com/users/dy-dx/orgs",
      "repos_url": "https://api.github.com/users/dy-dx/repos",
      "events_url": "https://api.github.com/users/dy-dx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dy-dx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2014-09-29T07:03:39Z",
    "updated_at": "2014-09-29T07:19:14Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I've been debugging an issue where transforms wouldn't get applied in Windows, and I've tracked it down to [this regexp](https://github.com/substack/node-browserify/blob/652e8805547d4ae3546a2f9b900a1d27199a8be3/index.js#L128):\n\n``` javascript\nvar row = typeof file === 'object'\n    ? xtend(file, opts)\n    : (/^[\\/.]/.test(file)\n        ? xtend(opts, { file: file })\n        : xtend(opts, { id: file })\n    );\n```\n\nFor example, `/Users/me/index.js` passes this test but `C:\\Users\\me\\index.js` fails.\n\nIn my case, `row.file` ended up being undefined which caused transforms to be skipped silently.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/924/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/924/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/923",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/923/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/923/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/923/events",
    "html_url": "https://github.com/browserify/browserify/pull/923",
    "id": 44194744,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjE4OTQ5NzM=",
    "number": 923,
    "title": "Make source map's \"sourceFile\"s relative to \"basedir\"",
    "user": {
      "login": "zertosh",
      "id": 830952,
      "node_id": "MDQ6VXNlcjgzMDk1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/830952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zertosh",
      "html_url": "https://github.com/zertosh",
      "followers_url": "https://api.github.com/users/zertosh/followers",
      "following_url": "https://api.github.com/users/zertosh/following{/other_user}",
      "gists_url": "https://api.github.com/users/zertosh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zertosh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zertosh/subscriptions",
      "organizations_url": "https://api.github.com/users/zertosh/orgs",
      "repos_url": "https://api.github.com/users/zertosh/repos",
      "events_url": "https://api.github.com/users/zertosh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zertosh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-09-27T22:34:17Z",
    "updated_at": "2014-10-03T21:48:20Z",
    "closed_at": "2014-10-03T21:48:03Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/923",
      "html_url": "https://github.com/browserify/browserify/pull/923",
      "diff_url": "https://github.com/browserify/browserify/pull/923.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/923.patch",
      "merged_at": "2014-10-03T21:48:03Z"
    },
    "body": "The extra path info adds noise when debugging and makes debug builds non-deterministic. `browser-pack` should also have it's `preludePath` be relative to the `basedir` (PR coming soon), though it's an easy override by passing in opts with `{ preludePath: 'whatever' }`.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/923/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/923/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/922",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/922/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/922/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/922/events",
    "html_url": "https://github.com/browserify/browserify/pull/922",
    "id": 44179005,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjE4OTA5OTI=",
    "number": 922,
    "title": "update `events` reference to point to good location",
    "user": {
      "login": "vvo",
      "id": 123822,
      "node_id": "MDQ6VXNlcjEyMzgyMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/123822?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vvo",
      "html_url": "https://github.com/vvo",
      "followers_url": "https://api.github.com/users/vvo/followers",
      "following_url": "https://api.github.com/users/vvo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vvo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vvo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vvo/subscriptions",
      "organizations_url": "https://api.github.com/users/vvo/orgs",
      "repos_url": "https://api.github.com/users/vvo/repos",
      "events_url": "https://api.github.com/users/vvo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vvo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2014-09-27T16:14:46Z",
    "updated_at": "2015-05-24T20:47:30Z",
    "closed_at": "2015-05-24T20:47:30Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/922",
      "html_url": "https://github.com/browserify/browserify/pull/922",
      "diff_url": "https://github.com/browserify/browserify/pull/922.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/922.patch",
      "merged_at": null
    },
    "body": "previous `events-browserify` was deprecated\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/922/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/922/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/921",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/921/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/921/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/921/events",
    "html_url": "https://github.com/browserify/browserify/issues/921",
    "id": 44032124,
    "node_id": "MDU6SXNzdWU0NDAzMjEyNA==",
    "number": 921,
    "title": "What are some [official] ways to avoid including the whole `Buffer` in the bundle?",
    "user": {
      "login": "dominykas",
      "id": 505619,
      "node_id": "MDQ6VXNlcjUwNTYxOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/505619?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dominykas",
      "html_url": "https://github.com/dominykas",
      "followers_url": "https://api.github.com/users/dominykas/followers",
      "following_url": "https://api.github.com/users/dominykas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dominykas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dominykas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dominykas/subscriptions",
      "organizations_url": "https://api.github.com/users/dominykas/orgs",
      "repos_url": "https://api.github.com/users/dominykas/repos",
      "events_url": "https://api.github.com/users/dominykas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dominykas/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2014-09-26T09:08:49Z",
    "updated_at": "2014-10-31T23:43:59Z",
    "closed_at": "2014-10-31T23:43:59Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "This is in the light of the following issue in `qs`: https://github.com/hapijs/qs/issues/39\n\nBasically, just because `qs` does a `typeof Buffer !== 'undefined'`, the whole `buffer` module is included in the bundle, even though it's never used. This is a very expensive (20kb minified) way to check for `isBuffer()`... I tested the following workarounds:\n- exporting my own \"slim\" `buffer` with just `Buffer.isBuffer = () => false` - I feel dirty about this approach - it is also not very future-friendly (some people might want the real Buffer...)\n- Trying to read from `global.Buffer`/`window.Buffer` - kind of annoying to achieve nicely in both - node and browser (one has only `global`, the other has only `window`), also browserify doesn't seem to set `Buffer` on the global object anyways (or did I get something wrong?)\n- Trying to read from `this` in a function invoked without context - doesn't work in strict mode, which is forced upon you if you're using `es6ify` and the earlier problem of unexposed global `Buffer` is still there anyways\n- `require.resolve()` is not actually exposed in browserify - is there any other [universal - node+browser] way to see if a module is readily available?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/921/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/921/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/920",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/920/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/920/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/920/events",
    "html_url": "https://github.com/browserify/browserify/issues/920",
    "id": 43999199,
    "node_id": "MDU6SXNzdWU0Mzk5OTE5OQ==",
    "number": 920,
    "title": "Cannot use commondir",
    "user": {
      "login": "esamattis",
      "id": 225712,
      "node_id": "MDQ6VXNlcjIyNTcxMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/225712?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/esamattis",
      "html_url": "https://github.com/esamattis",
      "followers_url": "https://api.github.com/users/esamattis/followers",
      "following_url": "https://api.github.com/users/esamattis/following{/other_user}",
      "gists_url": "https://api.github.com/users/esamattis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/esamattis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/esamattis/subscriptions",
      "organizations_url": "https://api.github.com/users/esamattis/orgs",
      "repos_url": "https://api.github.com/users/esamattis/repos",
      "events_url": "https://api.github.com/users/esamattis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/esamattis/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-09-26T04:16:48Z",
    "updated_at": "2015-01-09T14:26:13Z",
    "closed_at": "2015-01-09T14:26:13Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "It seems that the `--no-commondir` is always enabled in browserify 5.12.0.\n\nWhen I run `browserify client.js > bundle.js` I do not expect to see full file system paths in the bundle but I do. Setting the `--no-commondir` has no effect what so ever.\n\n```\n$  browserify -v\n5.12.0\n$ browserify client.js > bundle.js\n$ sha1sum bundle.js\n30c6c601eac9358c41ffc3a1dc4b978a0f793a27  bundle.js\n$ browserify --no-commondir client.js > bundle.js\n$ sha1sum bundle.js\n30c6c601eac9358c41ffc3a1dc4b978a0f793a27  bundle.js\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/920/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/920/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/919",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/919/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/919/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/919/events",
    "html_url": "https://github.com/browserify/browserify/issues/919",
    "id": 43946946,
    "node_id": "MDU6SXNzdWU0Mzk0Njk0Ng==",
    "number": 919,
    "title": "Why include all built-in modules even when not used?",
    "user": {
      "login": "samholmes",
      "id": 517469,
      "node_id": "MDQ6VXNlcjUxNzQ2OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/517469?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/samholmes",
      "html_url": "https://github.com/samholmes",
      "followers_url": "https://api.github.com/users/samholmes/followers",
      "following_url": "https://api.github.com/users/samholmes/following{/other_user}",
      "gists_url": "https://api.github.com/users/samholmes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/samholmes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/samholmes/subscriptions",
      "organizations_url": "https://api.github.com/users/samholmes/orgs",
      "repos_url": "https://api.github.com/users/samholmes/repos",
      "events_url": "https://api.github.com/users/samholmes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/samholmes/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-09-25T17:49:43Z",
    "updated_at": "2014-10-03T22:07:11Z",
    "closed_at": "2014-10-03T22:07:11Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Why not include only the built-in modules that are used in the user-land code? You could run the same AST thingy to figure out which native modules are being used then only include those native modules used, couldn't you?\n\n_By native modules I mean the built-in ones included in Node.js_\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/919/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/919/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/918",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/918/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/918/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/918/events",
    "html_url": "https://github.com/browserify/browserify/pull/918",
    "id": 43933328,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjE3OTE0MTc=",
    "number": 918,
    "title": "Update source_maps example to fit recent changes",
    "user": {
      "login": "HaNdTriX",
      "id": 1265681,
      "node_id": "MDQ6VXNlcjEyNjU2ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1265681?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/HaNdTriX",
      "html_url": "https://github.com/HaNdTriX",
      "followers_url": "https://api.github.com/users/HaNdTriX/followers",
      "following_url": "https://api.github.com/users/HaNdTriX/following{/other_user}",
      "gists_url": "https://api.github.com/users/HaNdTriX/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/HaNdTriX/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HaNdTriX/subscriptions",
      "organizations_url": "https://api.github.com/users/HaNdTriX/orgs",
      "repos_url": "https://api.github.com/users/HaNdTriX/repos",
      "events_url": "https://api.github.com/users/HaNdTriX/events{/privacy}",
      "received_events_url": "https://api.github.com/users/HaNdTriX/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-09-25T15:37:59Z",
    "updated_at": "2014-09-26T19:35:11Z",
    "closed_at": "2014-09-26T19:35:11Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/918",
      "html_url": "https://github.com/browserify/browserify/pull/918",
      "diff_url": "https://github.com/browserify/browserify/pull/918.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/918.patch",
      "merged_at": "2014-09-26T19:35:11Z"
    },
    "body": "```\nError: bundle() no longer accepts option arguments.\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/918/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/918/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/917",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/917/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/917/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/917/events",
    "html_url": "https://github.com/browserify/browserify/pull/917",
    "id": 43827350,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjE3NTI3MjA=",
    "number": 917,
    "title": "Attempt to dedupe deps when fullPaths is on.",
    "user": {
      "login": "blazzy",
      "id": 238374,
      "node_id": "MDQ6VXNlcjIzODM3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/238374?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blazzy",
      "html_url": "https://github.com/blazzy",
      "followers_url": "https://api.github.com/users/blazzy/followers",
      "following_url": "https://api.github.com/users/blazzy/following{/other_user}",
      "gists_url": "https://api.github.com/users/blazzy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blazzy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blazzy/subscriptions",
      "organizations_url": "https://api.github.com/users/blazzy/orgs",
      "repos_url": "https://api.github.com/users/blazzy/repos",
      "events_url": "https://api.github.com/users/blazzy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blazzy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-09-24T23:35:14Z",
    "updated_at": "2014-09-26T19:22:24Z",
    "closed_at": "2014-09-26T19:21:46Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/917",
      "html_url": "https://github.com/browserify/browserify/pull/917",
      "diff_url": "https://github.com/browserify/browserify/pull/917.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/917.patch",
      "merged_at": "2014-09-26T19:21:46Z"
    },
    "body": "Many front-end modules can't handle being loaded twice. Browserify doesn't dedupe dependencies when you use the `fullPaths` feature and `fullPaths` is necessary for watchify to cache results and quickly rebuild bundles on incremental changes.\n\nThis problem is particularly noticeable when trying to `npm link` to dependencies that have redundant dependencies.\n\nThis PR coaxes browserify to dedupe dependencies even when fullPaths is on. I'm not sure I understand the different code paths in _dedupe yet so this PR is likely missing some crucial edge cases.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/917/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/917/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/916",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/916/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/916/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/916/events",
    "html_url": "https://github.com/browserify/browserify/issues/916",
    "id": 43807316,
    "node_id": "MDU6SXNzdWU0MzgwNzMxNg==",
    "number": 916,
    "title": "Browserify command not found",
    "user": {
      "login": "jeremyfourna",
      "id": 3133477,
      "node_id": "MDQ6VXNlcjMxMzM0Nzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3133477?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jeremyfourna",
      "html_url": "https://github.com/jeremyfourna",
      "followers_url": "https://api.github.com/users/jeremyfourna/followers",
      "following_url": "https://api.github.com/users/jeremyfourna/following{/other_user}",
      "gists_url": "https://api.github.com/users/jeremyfourna/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jeremyfourna/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jeremyfourna/subscriptions",
      "organizations_url": "https://api.github.com/users/jeremyfourna/orgs",
      "repos_url": "https://api.github.com/users/jeremyfourna/repos",
      "events_url": "https://api.github.com/users/jeremyfourna/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jeremyfourna/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-09-24T19:52:09Z",
    "updated_at": "2016-09-23T17:37:24Z",
    "closed_at": "2014-10-03T22:14:31Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello,\n\nI just installed browserify via **sudo npm install -g browserify** but when I run\n### browserify -r ./app/collections/movies.js:movies \\ -r ./app/models/movie.js:movie > static/bundle.js\n\nThe terminal answer but **browserify : command not found**\n\nCan someone explain to me what I did wrong ?\n\nThank you in advance,\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/916/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/916/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/915",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/915/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/915/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/915/events",
    "html_url": "https://github.com/browserify/browserify/issues/915",
    "id": 43804918,
    "node_id": "MDU6SXNzdWU0MzgwNDkxOA==",
    "number": 915,
    "title": "Missing modules like '__browserify_Buffer' when bundling Phaser",
    "user": {
      "login": "juhamust",
      "id": 781002,
      "node_id": "MDQ6VXNlcjc4MTAwMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/781002?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juhamust",
      "html_url": "https://github.com/juhamust",
      "followers_url": "https://api.github.com/users/juhamust/followers",
      "following_url": "https://api.github.com/users/juhamust/following{/other_user}",
      "gists_url": "https://api.github.com/users/juhamust/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juhamust/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juhamust/subscriptions",
      "organizations_url": "https://api.github.com/users/juhamust/orgs",
      "repos_url": "https://api.github.com/users/juhamust/repos",
      "events_url": "https://api.github.com/users/juhamust/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juhamust/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2014-09-24T19:29:26Z",
    "updated_at": "2015-02-01T22:26:09Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Following errors are raised when trying to browserify Phaser:\n\n```\nCannot find module '__browserify_process' from '/home/foo/node_modules/phaser/build'\nCannot find module '__browserify_Buffer' from '/home/foo/node_modules/phaser/build'\n```\n\nTo reproduce:\n\n``` javascript\n// Create file: test_build.js\nvar browserify = require('browserify');\nbrowserify({\n    entries: './test_app.js'\n  })\n  .bundle()\n  .on('error', console.log);\n\n// Create file: test_app.js\nvar Phaser = require('phaser');\n\n// Run commands\nnpm install phaser browserify\nnode test_build.js \n```\n\nI've tried setting/unsetting insertGlobals and noParse options without success.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/915/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/915/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/914",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/914/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/914/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/914/events",
    "html_url": "https://github.com/browserify/browserify/issues/914",
    "id": 43774775,
    "node_id": "MDU6SXNzdWU0Mzc3NDc3NQ==",
    "number": 914,
    "title": "npm linked modules do not dedupe when fullPath is set to true",
    "user": {
      "login": "saratogas",
      "id": 8900647,
      "node_id": "MDQ6VXNlcjg5MDA2NDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8900647?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/saratogas",
      "html_url": "https://github.com/saratogas",
      "followers_url": "https://api.github.com/users/saratogas/followers",
      "following_url": "https://api.github.com/users/saratogas/following{/other_user}",
      "gists_url": "https://api.github.com/users/saratogas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/saratogas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/saratogas/subscriptions",
      "organizations_url": "https://api.github.com/users/saratogas/orgs",
      "repos_url": "https://api.github.com/users/saratogas/repos",
      "events_url": "https://api.github.com/users/saratogas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/saratogas/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-09-24T14:58:44Z",
    "updated_at": "2014-12-24T22:58:23Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When modules are npm linked they do not get de-duped anymore when fullPath is set to true. The fullPath setting is necessary when you use watchify. This completely breaks certain modules that can only be required once like [react](https://github.com/facebook/react).\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/914/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/914/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/913",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/913/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/913/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/913/events",
    "html_url": "https://github.com/browserify/browserify/issues/913",
    "id": 43350745,
    "node_id": "MDU6SXNzdWU0MzM1MDc0NQ==",
    "number": 913,
    "title": "Default require implementation doesn't understand relative paths",
    "user": {
      "login": "ezyang",
      "id": 13564,
      "node_id": "MDQ6VXNlcjEzNTY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/13564?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ezyang",
      "html_url": "https://github.com/ezyang",
      "followers_url": "https://api.github.com/users/ezyang/followers",
      "following_url": "https://api.github.com/users/ezyang/following{/other_user}",
      "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions",
      "organizations_url": "https://api.github.com/users/ezyang/orgs",
      "repos_url": "https://api.github.com/users/ezyang/repos",
      "events_url": "https://api.github.com/users/ezyang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ezyang/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-09-22T00:55:55Z",
    "updated_at": "2014-10-02T16:58:55Z",
    "closed_at": "2014-10-02T15:51:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am not sure if this is a plain old bug or a documentation bug.\n\nSuppose I have a very simple node.js library which I am developing:\n\n```\nezyang@sabre:~/Dev/labs/ab$ cat lib/a.js\nvar b = require('./b');\nconsole.log(b);\nezyang@sabre:~/Dev/labs/ab$ cat lib/b.js\nmodule.exports = \"constant\"\n```\n\nI decide I want to browser-ify this application for use on the web.\n\n```\nezyang@sabre:~/Dev/labs/ab$ nodejs node_modules/browserify/bin/cmd.js -r ./lib/a.js -r ./lib/b.js -o bundle.js\nezyang@sabre:~/Dev/labs/ab$ cat index.html \n<html>\n  <body>\n    <script src=\"bundle.js\"></script>\n  </body>\n</html>\n```\n\nI open up the HTML page in my browser, and in my web-console, I type: `require('./lib/a.js')`.\n\nExpected result: successful load\n\nActual result: I get the error `Cannot find module ./b`\n\nIt would seem that browserify doesn't do anything clever trying to resolve internal requires in the application. It would be nice if this was documented more prominently, or browserify did the right thing here.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/913/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/913/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/912",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/912/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/912/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/912/events",
    "html_url": "https://github.com/browserify/browserify/issues/912",
    "id": 43292350,
    "node_id": "MDU6SXNzdWU0MzI5MjM1MA==",
    "number": 912,
    "title": "Feature request: require with globbing expressions",
    "user": {
      "login": "capaj",
      "id": 1305378,
      "node_id": "MDQ6VXNlcjEzMDUzNzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1305378?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/capaj",
      "html_url": "https://github.com/capaj",
      "followers_url": "https://api.github.com/users/capaj/followers",
      "following_url": "https://api.github.com/users/capaj/following{/other_user}",
      "gists_url": "https://api.github.com/users/capaj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/capaj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/capaj/subscriptions",
      "organizations_url": "https://api.github.com/users/capaj/orgs",
      "repos_url": "https://api.github.com/users/capaj/repos",
      "events_url": "https://api.github.com/users/capaj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/capaj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-09-19T23:31:50Z",
    "updated_at": "2014-09-20T13:05:38Z",
    "closed_at": "2014-09-20T13:05:38Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I would really like to include a lot of JS files with one require call. \nIf it would be possible to require them like this with globbing expressions:\n\n``` javascript\nrequire('./scripts/*.js')\n```\n\nThat would really make my life so much easier.\nCould this be implemented? It is easy to implement for serverside(there are like 3 libs which do that, for example https://www.npmjs.org/package/node-glob-loader), but it seems that this is impossible to do with browserify 5.12.0.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/912/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/912/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/911",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/911/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/911/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/911/events",
    "html_url": "https://github.com/browserify/browserify/issues/911",
    "id": 43253454,
    "node_id": "MDU6SXNzdWU0MzI1MzQ1NA==",
    "number": 911,
    "title": "RangeError and infinitely recursing parse errors",
    "user": {
      "login": "atombender",
      "id": 50314,
      "node_id": "MDQ6VXNlcjUwMzE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/50314?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/atombender",
      "html_url": "https://github.com/atombender",
      "followers_url": "https://api.github.com/users/atombender/followers",
      "following_url": "https://api.github.com/users/atombender/following{/other_user}",
      "gists_url": "https://api.github.com/users/atombender/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/atombender/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/atombender/subscriptions",
      "organizations_url": "https://api.github.com/users/atombender/orgs",
      "repos_url": "https://api.github.com/users/atombender/repos",
      "events_url": "https://api.github.com/users/atombender/events{/privacy}",
      "received_events_url": "https://api.github.com/users/atombender/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-09-19T15:53:33Z",
    "updated_at": "2018-02-06T14:32:00Z",
    "closed_at": "2018-02-06T14:32:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Using 3.46.1 with `envify` and `reactify`. Our app has an endpoint that dynamically compiles a JS file with Browserify, and randomly it will get into a state where compiling doesn't work. It can happen after running the app for a day, or a week. Here's what it does:\n\n``` javascript\n      browserify({extensions: ['.jsx']})\n        .require(path.join(root, 'app/bundles/widgets'), {\n          entry: true,\n          basedir: path.join(root, 'app')\n        })\n        .transform('reactify')\n        .transform('envify')\n        .bundle({debug: false}, function(err, src) {\n          if (!err) {\n            if (!development) {\n              src = minify(src);\n            }\n            memcached.set(cacheKey, src, CACHE_TTL, function(err) {\n              if (err) {\n                console.error(\"Could not cache widget bundle\", err);\n              }\n            });\n          }\n          callback(err, src);\n        });\n```\n\nand here is the `err` when printed (word-wrapped for readability):\n\n```\nRangeError: Parse Error: Parse Error: Parse Error:\nParse Error: Parse Error: Parse Error: Parse Error:\nParse Error: Parse Error: Parse Error: Parse Error:\nParse Error: Parse Error: Parse Error: Parse Error:\nParse Error: Parse Error: Parse Error: Parse Error:\nParse Error: Parse Error: Parse Error: Parse Error:\nParse Error: Parse Error: Parse Error: Parse Error:\nParse Error: Parse Error: Parse Error: Parse Error:\n[... lots more ...]\nParse Error: Maximum call stack size exceeded\n```\n\nOf course, that's not very helpful.\n\nRestarting the app resolves the issue.\n\nHave done `strace` on the process and its threads, but it doesn't reveal anything out of the ordinary. \n\nI do have a running process right now that is currently broken, and I have left it running so I can debug more closely. Is there a trick I can use to get more information from the process?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/911/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/911/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/910",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/910/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/910/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/910/events",
    "html_url": "https://github.com/browserify/browserify/pull/910",
    "id": 43230202,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjE0OTI4NjE=",
    "number": 910,
    "title": "Pass \"flags\" option to each transform",
    "user": {
      "login": "hughsk",
      "id": 569817,
      "node_id": "MDQ6VXNlcjU2OTgxNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/569817?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hughsk",
      "html_url": "https://github.com/hughsk",
      "followers_url": "https://api.github.com/users/hughsk/followers",
      "following_url": "https://api.github.com/users/hughsk/following{/other_user}",
      "gists_url": "https://api.github.com/users/hughsk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hughsk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hughsk/subscriptions",
      "organizations_url": "https://api.github.com/users/hughsk/orgs",
      "repos_url": "https://api.github.com/users/hughsk/repos",
      "events_url": "https://api.github.com/users/hughsk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hughsk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-09-19T11:54:33Z",
    "updated_at": "2014-10-03T20:58:03Z",
    "closed_at": "2014-10-03T20:57:28Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/910",
      "html_url": "https://github.com/browserify/browserify/pull/910",
      "diff_url": "https://github.com/browserify/browserify/pull/910.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/910.patch",
      "merged_at": "2014-10-03T20:57:28Z"
    },
    "body": "Essentially, `flags` is set to the value of the bundler's `_options` property.\n\nThis should enable more intelligent transform behaviours, for example toggling source maps when `--debug` is supplied through the CLI or module API.\n- Closes substack/node-browserify#844\n- Fixes hughsk/uglifyify#16\n- Fixes hughsk/uglifyify#18\n\nThanks!\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/910/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/910/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/909",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/909/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/909/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/909/events",
    "html_url": "https://github.com/browserify/browserify/pull/909",
    "id": 43204452,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjE0NzgxMzE=",
    "number": 909,
    "title": "Grammatical fixes to README.markdown",
    "user": {
      "login": "tgrrtt",
      "id": 784903,
      "node_id": "MDQ6VXNlcjc4NDkwMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/784903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tgrrtt",
      "html_url": "https://github.com/tgrrtt",
      "followers_url": "https://api.github.com/users/tgrrtt/followers",
      "following_url": "https://api.github.com/users/tgrrtt/following{/other_user}",
      "gists_url": "https://api.github.com/users/tgrrtt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tgrrtt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tgrrtt/subscriptions",
      "organizations_url": "https://api.github.com/users/tgrrtt/orgs",
      "repos_url": "https://api.github.com/users/tgrrtt/repos",
      "events_url": "https://api.github.com/users/tgrrtt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tgrrtt/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2014-09-19T05:02:50Z",
    "updated_at": "2014-10-25T11:58:54Z",
    "closed_at": "2014-10-25T11:58:54Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/909",
      "html_url": "https://github.com/browserify/browserify/pull/909",
      "diff_url": "https://github.com/browserify/browserify/pull/909.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/909.patch",
      "merged_at": "2014-10-25T11:58:54Z"
    },
    "body": "I updated some larger sentences to be broken up with commas, and put a `require()` in a code tag to format it like the others.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/909/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/909/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/908",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/908/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/908/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/908/events",
    "html_url": "https://github.com/browserify/browserify/issues/908",
    "id": 43059076,
    "node_id": "MDU6SXNzdWU0MzA1OTA3Ng==",
    "number": 908,
    "title": "Can't expose require created with Readable stream",
    "user": {
      "login": "lukekarrys",
      "id": 542108,
      "node_id": "MDQ6VXNlcjU0MjEwOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/542108?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lukekarrys",
      "html_url": "https://github.com/lukekarrys",
      "followers_url": "https://api.github.com/users/lukekarrys/followers",
      "following_url": "https://api.github.com/users/lukekarrys/following{/other_user}",
      "gists_url": "https://api.github.com/users/lukekarrys/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lukekarrys/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lukekarrys/subscriptions",
      "organizations_url": "https://api.github.com/users/lukekarrys/orgs",
      "repos_url": "https://api.github.com/users/lukekarrys/repos",
      "events_url": "https://api.github.com/users/lukekarrys/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lukekarrys/received_events",
      "type": "User",
      "site_admin": true
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2014-09-17T20:35:20Z",
    "updated_at": "2015-02-18T20:23:36Z",
    "closed_at": "2015-02-18T18:22:29Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm trying to add a readable stream to a bundle and then require it by the exposed name in `main.js`.\n\n**main.js**\n\n``` js\nvar bar = require('m1');\n```\n\nThe following code produces an error `Error: Cannot find module 'm1'`.\n\n``` js\nvar Browserify = require('browserify');\nvar Readable = require('stream').Readable;\n\nfunction stringStream(content) {\n    var s = new Readable();\n    s.push(content);\n    s.push(null);\n    return s;\n}\n\nvar b = new Browserify();\nb.require(stringStream('module.exports = 5'), {basedir: '.', expose: 'm1'});\nb.add('./main.js');\nb.bundle().pipe(process.stdout);\n```\n\nShould this work?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/908/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/908/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/907",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/907/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/907/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/907/events",
    "html_url": "https://github.com/browserify/browserify/pull/907",
    "id": 43015245,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjEzNjgzNzQ=",
    "number": 907,
    "title": "respect expose option of require, fixes #839",
    "user": {
      "login": "ds82",
      "id": 332905,
      "node_id": "MDQ6VXNlcjMzMjkwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/332905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ds82",
      "html_url": "https://github.com/ds82",
      "followers_url": "https://api.github.com/users/ds82/followers",
      "following_url": "https://api.github.com/users/ds82/following{/other_user}",
      "gists_url": "https://api.github.com/users/ds82/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ds82/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ds82/subscriptions",
      "organizations_url": "https://api.github.com/users/ds82/orgs",
      "repos_url": "https://api.github.com/users/ds82/repos",
      "events_url": "https://api.github.com/users/ds82/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ds82/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-09-17T14:07:46Z",
    "updated_at": "2014-10-03T21:53:11Z",
    "closed_at": "2014-10-03T21:52:25Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/907",
      "html_url": "https://github.com/browserify/browserify/pull/907",
      "diff_url": "https://github.com/browserify/browserify/pull/907.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/907.patch",
      "merged_at": "2014-10-03T21:52:25Z"
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/907/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/907/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/906",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/906/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/906/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/906/events",
    "html_url": "https://github.com/browserify/browserify/pull/906",
    "id": 42987327,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjEzNTQ2MTE=",
    "number": 906,
    "title": "Update node-process version number.",
    "user": {
      "login": "jtangelder",
      "id": 1243901,
      "node_id": "MDQ6VXNlcjEyNDM5MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1243901?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtangelder",
      "html_url": "https://github.com/jtangelder",
      "followers_url": "https://api.github.com/users/jtangelder/followers",
      "following_url": "https://api.github.com/users/jtangelder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtangelder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtangelder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtangelder/subscriptions",
      "organizations_url": "https://api.github.com/users/jtangelder/orgs",
      "repos_url": "https://api.github.com/users/jtangelder/repos",
      "events_url": "https://api.github.com/users/jtangelder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtangelder/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-09-17T09:33:48Z",
    "updated_at": "2014-10-03T22:04:52Z",
    "closed_at": "2014-10-03T22:04:37Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/906",
      "html_url": "https://github.com/browserify/browserify/pull/906",
      "diff_url": "https://github.com/browserify/browserify/pull/906.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/906.patch",
      "merged_at": "2014-10-03T22:04:37Z"
    },
    "body": "A new version was released containing a performance improvement.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/906/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/906/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/905",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/905/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/905/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/905/events",
    "html_url": "https://github.com/browserify/browserify/issues/905",
    "id": 42943495,
    "node_id": "MDU6SXNzdWU0Mjk0MzQ5NQ==",
    "number": 905,
    "title": "Problems with process.nextTick",
    "user": {
      "login": "finnp",
      "id": 841788,
      "node_id": "MDQ6VXNlcjg0MTc4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/841788?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/finnp",
      "html_url": "https://github.com/finnp",
      "followers_url": "https://api.github.com/users/finnp/followers",
      "following_url": "https://api.github.com/users/finnp/following{/other_user}",
      "gists_url": "https://api.github.com/users/finnp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/finnp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/finnp/subscriptions",
      "organizations_url": "https://api.github.com/users/finnp/orgs",
      "repos_url": "https://api.github.com/users/finnp/repos",
      "events_url": "https://api.github.com/users/finnp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/finnp/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-09-16T22:51:39Z",
    "updated_at": "2014-09-16T23:44:28Z",
    "closed_at": "2014-09-16T23:44:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello,\n\nI just used browserify, but I got an error with the `streampng` module: `Uncaught ReferenceError: process is not defined`, even thoguh `process.nextTick` should be handled by browserify.\n\nHere is the part of the module, where the error occurs:\n\n``` js\nStreamPng.prototype.delayEmit = function delayEmit() {\n  var args = arguments;\n  process.nextTick(function () {\n    this.emit.apply(this, args);\n  }.bind(this));\n  return this;\n};\n```\n\nSomehow the `process` is missing in the enclosing function:\n\n``` js\n},{\"stream\":124}],35:[function(require,module,exports){\n(function (Buffer){\n```\n\nAny ideas?\n\nBest,\nFinn\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/905/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/905/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/904",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/904/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/904/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/904/events",
    "html_url": "https://github.com/browserify/browserify/issues/904",
    "id": 42925208,
    "node_id": "MDU6SXNzdWU0MjkyNTIwOA==",
    "number": 904,
    "title": "Code Coverage & Grunt",
    "user": {
      "login": "dmamaril",
      "id": 5885732,
      "node_id": "MDQ6VXNlcjU4ODU3MzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5885732?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dmamaril",
      "html_url": "https://github.com/dmamaril",
      "followers_url": "https://api.github.com/users/dmamaril/followers",
      "following_url": "https://api.github.com/users/dmamaril/following{/other_user}",
      "gists_url": "https://api.github.com/users/dmamaril/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dmamaril/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dmamaril/subscriptions",
      "organizations_url": "https://api.github.com/users/dmamaril/orgs",
      "repos_url": "https://api.github.com/users/dmamaril/repos",
      "events_url": "https://api.github.com/users/dmamaril/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dmamaril/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-09-16T19:50:55Z",
    "updated_at": "2014-09-16T22:37:51Z",
    "closed_at": "2014-09-16T22:37:51Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have an issue that I have been working on the past two days and have had no luck figuring out. Right now I have two bundles: \n 1) vendor.js - has all of my libraries (angular, angular-route, etc)\n 2) app.js - which has my angular code and all its dependencies required\n\nPrior to having separate bundles, my code coverage with result in inaccurate numbers since the libararies were included in the same file, hence the two separate bundles.\n\nMy trouble now is:\n  1) how do I require the vendor.js in app.js without bundling it together on browserify?\n\nIs this the correct approach for the problem? Please advise.\n\nMany thanks,\n\nDon\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/904/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/904/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/903",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/903/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/903/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/903/events",
    "html_url": "https://github.com/browserify/browserify/issues/903",
    "id": 42904969,
    "node_id": "MDU6SXNzdWU0MjkwNDk2OQ==",
    "number": 903,
    "title": "Invalid Package: expected node-browserify but found browserify ",
    "user": {
      "login": "mattlinares",
      "id": 71731,
      "node_id": "MDQ6VXNlcjcxNzMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/71731?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattlinares",
      "html_url": "https://github.com/mattlinares",
      "followers_url": "https://api.github.com/users/mattlinares/followers",
      "following_url": "https://api.github.com/users/mattlinares/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattlinares/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattlinares/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattlinares/subscriptions",
      "organizations_url": "https://api.github.com/users/mattlinares/orgs",
      "repos_url": "https://api.github.com/users/mattlinares/repos",
      "events_url": "https://api.github.com/users/mattlinares/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattlinares/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-09-16T16:51:00Z",
    "updated_at": "2018-02-06T14:35:16Z",
    "closed_at": "2018-02-06T14:35:16Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "browserify installed, not sure what's up here. Can you help?\n\n~/code/ethereum/ethereumjs-lib> npm install\nnpm ERR! Error: Invalid Package: expected node-browserify but found browserify\nnpm ERR!     at /usr/lib/node_modules/npm/lib/cache/add-local-tarball.js:161:14\nnpm ERR!     at process._tickCallback (node.js:419:13)\nnpm ERR! If you need help, you may report this _entire_ log,\nnpm ERR! including the npm and node versions, at:\nnpm ERR!     http://github.com/npm/npm/issues\n\nnpm ERR! System Linux 3.13.0-35-generic\nnpm ERR! command \"node\" \"/usr/bin/npm\" \"install\"\nnpm ERR! cwd /home/code/ethereum/ethereumjs-lib\nnpm ERR! node -v v0.10.30\nnpm ERR! npm -v 1.4.27\nnpm ERR! \nnpm ERR! Additional logging details can be found in:\nnpm ERR!     /home/code/ethereum/ethereumjs-lib/npm-debug.log\nnpm ERR! not ok code 0\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/903/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/903/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/902",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/902/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/902/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/902/events",
    "html_url": "https://github.com/browserify/browserify/issues/902",
    "id": 42878510,
    "node_id": "MDU6SXNzdWU0Mjg3ODUxMA==",
    "number": 902,
    "title": "Confused about opts.fullPaths",
    "user": {
      "login": "callumlocke",
      "id": 250617,
      "node_id": "MDQ6VXNlcjI1MDYxNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250617?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/callumlocke",
      "html_url": "https://github.com/callumlocke",
      "followers_url": "https://api.github.com/users/callumlocke/followers",
      "following_url": "https://api.github.com/users/callumlocke/following{/other_user}",
      "gists_url": "https://api.github.com/users/callumlocke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/callumlocke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/callumlocke/subscriptions",
      "organizations_url": "https://api.github.com/users/callumlocke/orgs",
      "repos_url": "https://api.github.com/users/callumlocke/repos",
      "events_url": "https://api.github.com/users/callumlocke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/callumlocke/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 203859608,
        "node_id": "MDU6TGFiZWwyMDM4NTk2MDg=",
        "url": "https://api.github.com/repos/browserify/browserify/labels/documentation",
        "name": "documentation",
        "color": "d105f0",
        "default": true,
        "description": null
      },
      {
        "id": 206142130,
        "node_id": "MDU6TGFiZWwyMDYxNDIxMzA=",
        "url": "https://api.github.com/repos/browserify/browserify/labels/repro-please",
        "name": "repro-please",
        "color": "207de5",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2014-09-16T12:57:16Z",
    "updated_at": "2015-07-02T19:20:30Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "from the readme:\n\n> `opts.fullPaths` disables converting module ids into numerical indexes. This is useful for preserving the original paths that a bundle was generated with.\n\nafaict it always does this anyway - is this a bug?\n\nI really want to remove the system paths. Explicitly setting this to false doesn't help. Is there any way?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/902/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/902/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/901",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/901/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/901/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/901/events",
    "html_url": "https://github.com/browserify/browserify/issues/901",
    "id": 42861444,
    "node_id": "MDU6SXNzdWU0Mjg2MTQ0NA==",
    "number": 901,
    "title": "Gracefully handle files that cannot be required",
    "user": {
      "login": "cvan",
      "id": 203725,
      "node_id": "MDQ6VXNlcjIwMzcyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/203725?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cvan",
      "html_url": "https://github.com/cvan",
      "followers_url": "https://api.github.com/users/cvan/followers",
      "following_url": "https://api.github.com/users/cvan/following{/other_user}",
      "gists_url": "https://api.github.com/users/cvan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cvan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cvan/subscriptions",
      "organizations_url": "https://api.github.com/users/cvan/orgs",
      "repos_url": "https://api.github.com/users/cvan/repos",
      "events_url": "https://api.github.com/users/cvan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cvan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2014-09-16T09:30:31Z",
    "updated_at": "2020-04-09T11:30:28Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have a file (`settings.js`) that is compiled by browserify. I want it to require a `settings_local.js` file only if if it exists. From the documentation and source code, I can't figure out if this is possible. This is what I currently have:\n\n``` js\nvar settings_local = {};\ntry {\n  settings_local = require('./settings_local.js');\n} catch (e) {\n}\n```\n\nThis is the error I get:\n\n``` bash\nevents.js:82\n      throw er; // Unhandled 'error' event\n            ^\nError: Cannot find module './settings_local.js' from '/opt/galaxy.js-mobile-gamepad/src/js'\n    at /opt/galaxy.js-mobile-gamepad/node_modules/browserify/node_modules/resolve/lib/async.js:42:25\n    at load (/opt/galaxy.js-mobile-gamepad/node_modules/browserify/node_modules/resolve/lib/async.js:60:43)\n    at /opt/galaxy.js-mobile-gamepad/node_modules/browserify/node_modules/resolve/lib/async.js:66:22\n    at /opt/galaxy.js-mobile-gamepad/node_modules/browserify/node_modules/resolve/lib/async.js:21:47\n    at Object.oncomplete (fs.js:97:15)\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/901/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/901/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/900",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/900/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/900/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/900/events",
    "html_url": "https://github.com/browserify/browserify/issues/900",
    "id": 42707100,
    "node_id": "MDU6SXNzdWU0MjcwNzEwMA==",
    "number": 900,
    "title": "Browser field substitution for subfolder dependency",
    "user": {
      "login": "thom4parisot",
      "id": 138627,
      "node_id": "MDQ6VXNlcjEzODYyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/138627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thom4parisot",
      "html_url": "https://github.com/thom4parisot",
      "followers_url": "https://api.github.com/users/thom4parisot/followers",
      "following_url": "https://api.github.com/users/thom4parisot/following{/other_user}",
      "gists_url": "https://api.github.com/users/thom4parisot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thom4parisot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thom4parisot/subscriptions",
      "organizations_url": "https://api.github.com/users/thom4parisot/orgs",
      "repos_url": "https://api.github.com/users/thom4parisot/repos",
      "events_url": "https://api.github.com/users/thom4parisot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thom4parisot/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-09-13T22:17:39Z",
    "updated_at": "2015-12-06T01:12:12Z",
    "closed_at": "2015-12-06T01:12:12Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Hello,\n\nhere is what I want to achieve.\n\n``` js\n// index.js\nvar ajax = require('foo/ajax');\n\najax.get('…', function(response) { … });\n```\n\nWhereas the `node_modules/foo/package.json` contains:\n\n``` js\n{\n  \"name\": \"foo\",\n  \"browserify\": {\n    \"transform\": [\n      \"deamdify\"\n    ]\n  },\n  \"browser\": {\n    \"foo/ajax\": \"./src/ajax.js\"\n  },\n  \"dependencies\": {\n    \"deamdify\": \"~0.1.1\"\n  }\n}\n```\n\nAnd `node_modules/foo/src/ajax.js` looks like:\n\n``` js\ndefine([ './core' ], function(core){\n  // …\n\n  return ajax;\n});\n```\n\nHowever when I run `browserify index.js -o bundle.js` I get the following error:\n\n```\nError: Cannot find module 'foo/ajax' from '/path/to/project'\n```\n\nIs it normal? Any hint to make this working — unless this is not supposed to work like that.\n\nThanks :-)\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/900/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/900/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/899",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/899/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/899/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/899/events",
    "html_url": "https://github.com/browserify/browserify/issues/899",
    "id": 42696472,
    "node_id": "MDU6SXNzdWU0MjY5NjQ3Mg==",
    "number": 899,
    "title": "Browserify should not create empty output files on error",
    "user": {
      "login": "mietek",
      "id": 166207,
      "node_id": "MDQ6VXNlcjE2NjIwNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/166207?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mietek",
      "html_url": "https://github.com/mietek",
      "followers_url": "https://api.github.com/users/mietek/followers",
      "following_url": "https://api.github.com/users/mietek/following{/other_user}",
      "gists_url": "https://api.github.com/users/mietek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mietek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mietek/subscriptions",
      "organizations_url": "https://api.github.com/users/mietek/orgs",
      "repos_url": "https://api.github.com/users/mietek/repos",
      "events_url": "https://api.github.com/users/mietek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mietek/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2014-09-13T13:56:32Z",
    "updated_at": "2017-02-14T03:00:52Z",
    "closed_at": "2017-02-14T03:00:52Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When an error occurs, Browserify 5.11.2 creates an empty output file.  This should not happen, as it messes up `make`-based workflows.\n\n```\n$ cat >foo.js <<EOF\nvar quux = require('quux');\nEOF\n\n$ browserify foo.js -o bar.js\nError: Cannot find module 'quux' from '/private/tmp/foo'\n    at /usr/local/lib/node_modules/browserify/node_modules/resolve/lib/async.js:50:17\n    at process (/usr/local/lib/node_modules/browserify/node_modules/resolve/lib/async.js:119:43)\n    at /usr/local/lib/node_modules/browserify/node_modules/resolve/lib/async.js:128:21\n    at load (/usr/local/lib/node_modules/browserify/node_modules/resolve/lib/async.js:60:43)\n    at /usr/local/lib/node_modules/browserify/node_modules/resolve/lib/async.js:66:22\n    at /usr/local/lib/node_modules/browserify/node_modules/resolve/lib/async.js:21:47\n    at Object.oncomplete (fs.js:107:15)\n\n$ ls -l | grep bar.js\n-rw-r--r--  1 mietek  wheel   0 13 Sep 14:53 bar.js\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/899/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/899/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/898",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/898/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/898/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/898/events",
    "html_url": "https://github.com/browserify/browserify/pull/898",
    "id": 42535565,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjEwOTQ2MzI=",
    "number": 898,
    "title": "Fixed ignore handling with tests",
    "user": {
      "login": "SinisterMinister",
      "id": 800441,
      "node_id": "MDQ6VXNlcjgwMDQ0MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/800441?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SinisterMinister",
      "html_url": "https://github.com/SinisterMinister",
      "followers_url": "https://api.github.com/users/SinisterMinister/followers",
      "following_url": "https://api.github.com/users/SinisterMinister/following{/other_user}",
      "gists_url": "https://api.github.com/users/SinisterMinister/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SinisterMinister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SinisterMinister/subscriptions",
      "organizations_url": "https://api.github.com/users/SinisterMinister/orgs",
      "repos_url": "https://api.github.com/users/SinisterMinister/repos",
      "events_url": "https://api.github.com/users/SinisterMinister/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SinisterMinister/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-09-11T15:13:38Z",
    "updated_at": "2014-09-12T08:21:33Z",
    "closed_at": "2014-09-12T08:21:33Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/898",
      "html_url": "https://github.com/browserify/browserify/pull/898",
      "diff_url": "https://github.com/browserify/browserify/pull/898.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/898.patch",
      "merged_at": null
    },
    "body": "Addresses issue #896.  I had to modify an existing test as by-id ignoring of relative paths is not possible with this fix (and probably shouldn't be as it causes the bug).\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/898/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/898/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/897",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/897/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/897/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/897/events",
    "html_url": "https://github.com/browserify/browserify/issues/897",
    "id": 42492530,
    "node_id": "MDU6SXNzdWU0MjQ5MjUzMA==",
    "number": 897,
    "title": "If I pass `-g npm_module` to browserify on command line, npm_module isn't looked for in ./node_modules.",
    "user": {
      "login": "crocket",
      "id": 748856,
      "node_id": "MDQ6VXNlcjc0ODg1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/748856?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/crocket",
      "html_url": "https://github.com/crocket",
      "followers_url": "https://api.github.com/users/crocket/followers",
      "following_url": "https://api.github.com/users/crocket/following{/other_user}",
      "gists_url": "https://api.github.com/users/crocket/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/crocket/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/crocket/subscriptions",
      "organizations_url": "https://api.github.com/users/crocket/orgs",
      "repos_url": "https://api.github.com/users/crocket/repos",
      "events_url": "https://api.github.com/users/crocket/events{/privacy}",
      "received_events_url": "https://api.github.com/users/crocket/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-09-11T06:15:32Z",
    "updated_at": "2018-02-06T14:32:15Z",
    "closed_at": "2018-02-06T14:32:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "If I pass `-g npm_module` to browserify on command line, npm_module isn't looked for in `./node_modules` but in `/usr/local/lib/node_modules`.\n\nIs it a bug?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/897/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/897/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/896",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/896/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/896/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/896/events",
    "html_url": "https://github.com/browserify/browserify/issues/896",
    "id": 42471346,
    "node_id": "MDU6SXNzdWU0MjQ3MTM0Ng==",
    "number": 896,
    "title": "Ignore not handling relative paths well",
    "user": {
      "login": "SinisterMinister",
      "id": 800441,
      "node_id": "MDQ6VXNlcjgwMDQ0MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/800441?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SinisterMinister",
      "html_url": "https://github.com/SinisterMinister",
      "followers_url": "https://api.github.com/users/SinisterMinister/followers",
      "following_url": "https://api.github.com/users/SinisterMinister/following{/other_user}",
      "gists_url": "https://api.github.com/users/SinisterMinister/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SinisterMinister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SinisterMinister/subscriptions",
      "organizations_url": "https://api.github.com/users/SinisterMinister/orgs",
      "repos_url": "https://api.github.com/users/SinisterMinister/repos",
      "events_url": "https://api.github.com/users/SinisterMinister/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SinisterMinister/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-09-10T23:01:34Z",
    "updated_at": "2014-09-12T08:21:59Z",
    "closed_at": "2014-09-12T08:21:59Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Using the API of the module, relative paths are not handled well with ignore and can cause really confusing issues.\n## Ignore by ID causing unintended files to be ignored\n\nGiven the following directory structure with `some_dir/index.js` requiring `./foo.js`, `./bar.js`, and `./baz`, with `some_dir/baz/index.js` requiring `./foo.js`:\n\n```\nsome_dir/\n├── bar.js\n├── baz\n│   ├── foo.js\n│   └── index.js\n├── foo.js\n└── index.js\n```\n\nCurrently, if one wanted to ignore `some_dir/foo.js` but not `some_dir/baz/foo.js` and were to do `b.ignore('./foo.js')`, this would ignore both files. While `id` collisions may not happen often, they can occur.\n### Expected Behavoir\n\nThe behavior I expected to happen is that the path specified would be relative to the current working directory of the process at time of the call or to allow for the working directory to be specified. Instead, it is a strict match to the require `id`.\n## Nested relative paths not working\n\nGiven the following directory structure with `ignore/by-relative.js` requiring `./relative` and `ignore/relative/index.js` requiring `../ignored/skip.js`:\n\n```\nignore\n├── by-relative.js\n├── ignored\n│   └── skip.js\n└── relative\n    └── index.js\n```\n\nCurrently, if one were to try `b.ignore('./ignore/ignored/skip.js');`, `skip.js` would not be ignored.\n### Expected Behavior\n\nIn this case, I'd expect Browserify to ignore all references to the file, no matter where those references originate.\n## Intended Behavior\n\nI'd like to create a pull request to fix these issues (I've already completed most of the work), but I wanted to verify the intended behavior of this call first and make sure I'm actually fixing an issue.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/896/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/896/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/895",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/895/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/895/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/895/events",
    "html_url": "https://github.com/browserify/browserify/issues/895",
    "id": 42355890,
    "node_id": "MDU6SXNzdWU0MjM1NTg5MA==",
    "number": 895,
    "title": "Insertion of globals breaks sourcemaps",
    "user": {
      "login": "smrq",
      "id": 400889,
      "node_id": "MDQ6VXNlcjQwMDg4OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/400889?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smrq",
      "html_url": "https://github.com/smrq",
      "followers_url": "https://api.github.com/users/smrq/followers",
      "following_url": "https://api.github.com/users/smrq/following{/other_user}",
      "gists_url": "https://api.github.com/users/smrq/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smrq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smrq/subscriptions",
      "organizations_url": "https://api.github.com/users/smrq/orgs",
      "repos_url": "https://api.github.com/users/smrq/repos",
      "events_url": "https://api.github.com/users/smrq/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smrq/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 16,
    "created_at": "2014-09-09T21:53:01Z",
    "updated_at": "2017-03-19T07:04:49Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "When a source file that already has a sourcemap (from a prior transform) is transformed to insert globals, the sourcemap is not updated, which breaks all positions in the file thereafter.\n\nA trivial reproducing test case using `coffeeify` (this bug has nothing to do with `coffeeify` specifically; any transform that uses sourcemaps is affected):\n\n**x.coffee**\n\n```\nglobal.foo = 3\nconsole.log('hello')\n```\n\n**command line**\n\n```\nbrowserify -t coffeeify -d x.coffee\n```\n\n[This link](http://sokra.github.io/source-map-visualization/#base64,KGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT0iZnVuY3Rpb24iJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKCJDYW5ub3QgZmluZCBtb2R1bGUgJyIrbysiJyIpO3Rocm93IGYuY29kZT0iTU9EVUxFX05PVF9GT1VORCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT0iZnVuY3Rpb24iJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSh7MTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7CihmdW5jdGlvbiAoZ2xvYmFsKXsKZ2xvYmFsLmZvbyA9IDM7Cgpjb25zb2xlLmxvZygnaGVsbG8nKTsKCgoKfSkuY2FsbCh0aGlzLHR5cGVvZiBnbG9iYWwgIT09ICJ1bmRlZmluZWQiID8gZ2xvYmFsIDogdHlwZW9mIHNlbGYgIT09ICJ1bmRlZmluZWQiID8gc2VsZiA6IHR5cGVvZiB3aW5kb3cgIT09ICJ1bmRlZmluZWQiID8gd2luZG93IDoge30pCn0se31dfSx7fSxbMV0pCi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJa002WEZ4VmMyVnljMXhjWjNKbFozTnRYRnhCY0hCRVlYUmhYRnhTYjJGdGFXNW5YRnh1Y0cxY1hHNXZaR1ZmYlc5a2RXeGxjMXhjWW5KdmQzTmxjbWxtZVZ4Y2JtOWtaVjl0YjJSMWJHVnpYRnhpY205M2MyVnlMWEJoWTJ0Y1hGOXdjbVZzZFdSbExtcHpJaXdpUXpwY1hFTnZaR1ZjWEhSbGMzUXRjMjkxY21ObGJXRndjMXhjWTI5bVptVmxMWFJsYzNSY1hIZ3VZMjltWm1WbElsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJPMEZEUVVFc1RVRkJUU3hEUVVGRExFZEJRVkFzUjBGQllTeERRVUZpTEVOQlFVRTdPMEZCUVVFc1QwRkRUeXhEUVVGRExFZEJRVklzUTBGQldTeFBRVUZhTEVOQlJFRXNRMEZCUVNJc0ltWnBiR1VpT2lKblpXNWxjbUYwWldRdWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lLR1oxYm1OMGFXOXVJR1VvZEN4dUxISXBlMloxYm1OMGFXOXVJSE1vYnl4MUtYdHBaaWdoYmx0dlhTbDdhV1lvSVhSYmIxMHBlM1poY2lCaFBYUjVjR1Z2WmlCeVpYRjFhWEpsUFQxY0ltWjFibU4wYVc5dVhDSW1KbkpsY1hWcGNtVTdhV1lvSVhVbUptRXBjbVYwZFhKdUlHRW9ieXdoTUNrN2FXWW9hU2x5WlhSMWNtNGdhU2h2TENFd0tUdDJZWElnWmoxdVpYY2dSWEp5YjNJb1hDSkRZVzV1YjNRZ1ptbHVaQ0J0YjJSMWJHVWdKMXdpSzI4clhDSW5YQ0lwTzNSb2NtOTNJR1l1WTI5a1pUMWNJazFQUkZWTVJWOU9UMVJmUms5VlRrUmNJaXhtZlhaaGNpQnNQVzViYjEwOWUyVjRjRzl5ZEhNNmUzMTlPM1JiYjExYk1GMHVZMkZzYkNoc0xtVjRjRzl5ZEhNc1puVnVZM1JwYjI0b1pTbDdkbUZ5SUc0OWRGdHZYVnN4WFZ0bFhUdHlaWFIxY200Z2N5aHVQMjQ2WlNsOUxHd3NiQzVsZUhCdmNuUnpMR1VzZEN4dUxISXBmWEpsZEhWeWJpQnVXMjlkTG1WNGNHOXlkSE45ZG1GeUlHazlkSGx3Wlc5bUlISmxjWFZwY21VOVBWd2lablZ1WTNScGIyNWNJaVltY21WeGRXbHlaVHRtYjNJb2RtRnlJRzg5TUR0dlBISXViR1Z1WjNSb08yOHJLeWx6S0hKYmIxMHBPM0psZEhWeWJpQnpmU2tpTENKbmJHOWlZV3d1Wm05dklEMGdNMXh5WEc1amIyNXpiMnhsTG14dlp5Z25hR1ZzYkc4bktTSmRmUT09Cg==,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZ3JlZ3NtXFxBcHBEYXRhXFxSb2FtaW5nXFxucG1cXG5vZGVfbW9kdWxlc1xcYnJvd3NlcmlmeVxcbm9kZV9tb2R1bGVzXFxicm93c2VyLXBhY2tcXF9wcmVsdWRlLmpzIiwiQzpcXENvZGVcXHRlc3Qtc291cmNlbWFwc1xcY29mZmVlLXRlc3RcXHguY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FDQUEsTUFBTSxDQUFDLEdBQVAsR0FBYSxDQUFiLENBQUE7O0FBQUEsT0FDTyxDQUFDLEdBQVIsQ0FBWSxPQUFaLENBREEsQ0FBQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCJnbG9iYWwuZm9vID0gM1xyXG5jb25zb2xlLmxvZygnaGVsbG8nKSJdfQ==,KGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT0iZnVuY3Rpb24iJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKCJDYW5ub3QgZmluZCBtb2R1bGUgJyIrbysiJyIpO3Rocm93IGYuY29kZT0iTU9EVUxFX05PVF9GT1VORCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT0iZnVuY3Rpb24iJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KQ==,Z2xvYmFsLmZvbyA9IDMNCmNvbnNvbGUubG9nKCdoZWxsbycp) shows the resulting sourcemap.  Note how the addition of the `(function (global){` line causes the mappings to be off by exactly one line at that point.  This offset will persist through the entire bundle, as the mappings are calculated relative to the original output rather than the transformed output.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/895/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/895/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/894",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/894/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/894/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/894/events",
    "html_url": "https://github.com/browserify/browserify/issues/894",
    "id": 42347014,
    "node_id": "MDU6SXNzdWU0MjM0NzAxNA==",
    "number": 894,
    "title": "transforms with `global: true` break with files matching /@.*global/",
    "user": {
      "login": "shawninder",
      "id": 484730,
      "node_id": "MDQ6VXNlcjQ4NDczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/484730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shawninder",
      "html_url": "https://github.com/shawninder",
      "followers_url": "https://api.github.com/users/shawninder/followers",
      "following_url": "https://api.github.com/users/shawninder/following{/other_user}",
      "gists_url": "https://api.github.com/users/shawninder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shawninder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shawninder/subscriptions",
      "organizations_url": "https://api.github.com/users/shawninder/orgs",
      "repos_url": "https://api.github.com/users/shawninder/repos",
      "events_url": "https://api.github.com/users/shawninder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shawninder/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-09-09T20:24:45Z",
    "updated_at": "2018-02-06T13:53:30Z",
    "closed_at": "2018-02-06T13:53:30Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The code that follows behaves as expected. I will then show the various ways that break it. That is where strangeness appears.\n\n**index.js**\n\n```\nvar browserify = require('browserify')\n  , through = require('through')\n  , b = browserify('./a.js')\n\nb.transform({ global: true }, function (file) {\n  if(file.indexOf('.less') !== -1){\n    console.log('ignoring ' + file)\n    return through(write, end);\n\n    function write (buf) {\n      // NOTHING\n    }\n    function end () {\n      this.queue(null)\n    }\n  }\n  return through()\n})\n\nb.bundle(function (err, src) {\n  if (err) {\n    console.error('ERROR', err)\n  }\n})\n```\n\n**a.js**\n\n```\nrequire('./styles.less')\n```\n\n**styles.less**\n\n```\nglobal\n```\n\n`node index.js` correctly prints \"ignoring .../styles.less\". If any of the following modifications are made however, an error is printed instead:\n- In _styles.less_, replace `global` with `@global`\n- In _styles.less_, replace `global` with `@\\nglobal`\n- In _styles.less_, replace `global` with `@whatever [...] global`\n- ...\n\nIn every case, the error says `SyntaxError: Line 2: Unexpected token ILLEGAL while parsing .../styles.less while parsing file: .../styles.less`\n\nIn every case, one can get expected behaviour again by removing `{ global: true }` from _index.js_.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/894/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/894/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/893",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/893/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/893/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/893/events",
    "html_url": "https://github.com/browserify/browserify/issues/893",
    "id": 42019119,
    "node_id": "MDU6SXNzdWU0MjAxOTExOQ==",
    "number": 893,
    "title": "Unicode characters are broken in sourcemap.",
    "user": {
      "login": "crocket",
      "id": 748856,
      "node_id": "MDQ6VXNlcjc0ODg1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/748856?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/crocket",
      "html_url": "https://github.com/crocket",
      "followers_url": "https://api.github.com/users/crocket/followers",
      "following_url": "https://api.github.com/users/crocket/following{/other_user}",
      "gists_url": "https://api.github.com/users/crocket/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/crocket/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/crocket/subscriptions",
      "organizations_url": "https://api.github.com/users/crocket/orgs",
      "repos_url": "https://api.github.com/users/crocket/repos",
      "events_url": "https://api.github.com/users/crocket/events{/privacy}",
      "received_events_url": "https://api.github.com/users/crocket/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-09-05T06:50:59Z",
    "updated_at": "2018-03-16T08:53:52Z",
    "closed_at": "2018-03-16T08:53:52Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "If I turn on debug in browserify, sourcemap is generated.\nWhen I peruse the original files mapped from the sourcemap,\ncomments in UTF-8 look broken.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/893/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/893/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/892",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/892/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/892/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/892/events",
    "html_url": "https://github.com/browserify/browserify/pull/892",
    "id": 42000809,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjA3ODE2MjY=",
    "number": 892,
    "title": "Preserving bpack.hasExports on reset()",
    "user": {
      "login": "JedWatson",
      "id": 872310,
      "node_id": "MDQ6VXNlcjg3MjMxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/872310?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JedWatson",
      "html_url": "https://github.com/JedWatson",
      "followers_url": "https://api.github.com/users/JedWatson/followers",
      "following_url": "https://api.github.com/users/JedWatson/following{/other_user}",
      "gists_url": "https://api.github.com/users/JedWatson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JedWatson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JedWatson/subscriptions",
      "organizations_url": "https://api.github.com/users/JedWatson/orgs",
      "repos_url": "https://api.github.com/users/JedWatson/repos",
      "events_url": "https://api.github.com/users/JedWatson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JedWatson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-09-05T00:19:09Z",
    "updated_at": "2014-09-05T07:14:20Z",
    "closed_at": "2014-09-05T00:40:52Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/892",
      "html_url": "https://github.com/browserify/browserify/pull/892",
      "diff_url": "https://github.com/browserify/browserify/pull/892.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/892.patch",
      "merged_at": null
    },
    "body": "I went digging to figure out what was causing substack/node-browserify#887 and found that the `hasExports` setting for `browser-pack` is externally managed by browserify under various conditions, including the `b.require()` method.\n\nUsing watchify, you call `.bundle()` again on `update` which internally calls `.reset()` to recreate the pipeline, which creates a new `this._bpack` instance.\n\nBecause `hasExports` is not set in `this._options`, the `hasExternal` setting never makes it back into the new `_bpack` instance, meaning subsequent bundles behave differently.\n\nI've fixed it by remembering the setting immediately before the pipeline is recreated, and immediately afterwards reapplying the previous value. \n\nI considered adding it to the `opts` provided to `this._createPipeline` but didn't want to introduce any side effects, the implementation I went with is more consistent with the way `this._bpack.hasExports` is set in all the other cases, so it will now have exactly the same behaviour initially and after any pipeline reset.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/892/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/892/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/891",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/891/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/891/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/891/events",
    "html_url": "https://github.com/browserify/browserify/pull/891",
    "id": 41989075,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjA3NzQ3Nzc=",
    "number": 891,
    "title": "Add semicolons where missing",
    "user": {
      "login": "baer",
      "id": 940667,
      "node_id": "MDQ6VXNlcjk0MDY2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/940667?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/baer",
      "html_url": "https://github.com/baer",
      "followers_url": "https://api.github.com/users/baer/followers",
      "following_url": "https://api.github.com/users/baer/following{/other_user}",
      "gists_url": "https://api.github.com/users/baer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/baer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/baer/subscriptions",
      "organizations_url": "https://api.github.com/users/baer/orgs",
      "repos_url": "https://api.github.com/users/baer/repos",
      "events_url": "https://api.github.com/users/baer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/baer/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-09-04T21:39:08Z",
    "updated_at": "2014-09-12T15:23:26Z",
    "closed_at": "2014-09-12T15:23:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/891",
      "html_url": "https://github.com/browserify/browserify/pull/891",
      "diff_url": "https://github.com/browserify/browserify/pull/891.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/891.patch",
      "merged_at": null
    },
    "body": "This PR does 3 things:\n- Removed reliance on ASI for all non-test js files by adding semicolons where they were missing.\n- Remove two code blocks that were dead\n- Trim trailing whitespace which my editor added for me but I think it probably a good addition.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/891/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/891/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/890",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/890/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/890/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/890/events",
    "html_url": "https://github.com/browserify/browserify/pull/890",
    "id": 41986075,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjA3NzI5MzA=",
    "number": 890,
    "title": "Add .editorconfig",
    "user": {
      "login": "baer",
      "id": 940667,
      "node_id": "MDQ6VXNlcjk0MDY2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/940667?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/baer",
      "html_url": "https://github.com/baer",
      "followers_url": "https://api.github.com/users/baer/followers",
      "following_url": "https://api.github.com/users/baer/following{/other_user}",
      "gists_url": "https://api.github.com/users/baer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/baer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/baer/subscriptions",
      "organizations_url": "https://api.github.com/users/baer/orgs",
      "repos_url": "https://api.github.com/users/baer/repos",
      "events_url": "https://api.github.com/users/baer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/baer/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-09-04T21:09:30Z",
    "updated_at": "2014-09-04T22:11:49Z",
    "closed_at": "2014-09-04T22:11:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/890",
      "html_url": "https://github.com/browserify/browserify/pull/890",
      "diff_url": "https://github.com/browserify/browserify/pull/890.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/890.patch",
      "merged_at": null
    },
    "body": "Adding a .editorconfig helps set up the project for development in other development environments and maintain consistent style from contributors.\n\nhttp://editorconfig.org/\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/890/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/890/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/889",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/889/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/889/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/889/events",
    "html_url": "https://github.com/browserify/browserify/pull/889",
    "id": 41985698,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjA3NzI2Nzg=",
    "number": 889,
    "title": "Add gitignore file",
    "user": {
      "login": "baer",
      "id": 940667,
      "node_id": "MDQ6VXNlcjk0MDY2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/940667?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/baer",
      "html_url": "https://github.com/baer",
      "followers_url": "https://api.github.com/users/baer/followers",
      "following_url": "https://api.github.com/users/baer/following{/other_user}",
      "gists_url": "https://api.github.com/users/baer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/baer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/baer/subscriptions",
      "organizations_url": "https://api.github.com/users/baer/orgs",
      "repos_url": "https://api.github.com/users/baer/repos",
      "events_url": "https://api.github.com/users/baer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/baer/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-09-04T21:05:32Z",
    "updated_at": "2014-09-04T22:13:05Z",
    "closed_at": "2014-09-04T22:13:05Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/889",
      "html_url": "https://github.com/browserify/browserify/pull/889",
      "diff_url": "https://github.com/browserify/browserify/pull/889.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/889.patch",
      "merged_at": null
    },
    "body": "Add a .gitignore file so that node_modules and other dev files don't get committed by accident. This is based off of the https://github.com/github/gitignore project.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/889/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/889/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/888",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/888/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/888/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/888/events",
    "html_url": "https://github.com/browserify/browserify/issues/888",
    "id": 41953076,
    "node_id": "MDU6SXNzdWU0MTk1MzA3Ng==",
    "number": 888,
    "title": "Breaks on usage with polymer-platform",
    "user": {
      "login": "call-a3",
      "id": 6589800,
      "node_id": "MDQ6VXNlcjY1ODk4MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6589800?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/call-a3",
      "html_url": "https://github.com/call-a3",
      "followers_url": "https://api.github.com/users/call-a3/followers",
      "following_url": "https://api.github.com/users/call-a3/following{/other_user}",
      "gists_url": "https://api.github.com/users/call-a3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/call-a3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/call-a3/subscriptions",
      "organizations_url": "https://api.github.com/users/call-a3/orgs",
      "repos_url": "https://api.github.com/users/call-a3/repos",
      "events_url": "https://api.github.com/users/call-a3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/call-a3/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-09-04T15:53:50Z",
    "updated_at": "2018-01-04T10:52:58Z",
    "closed_at": "2018-01-04T10:52:58Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "My main file includes the line `var Polymer = require('polymer-platform')`.\n\nWhen running browserify, the following error is thrown\n\n```\nevents.js:85\n      throw er; // Unhandled 'error' event\n            ^\nError: Cannot find module 'polymer-platform' from '/home/adriaan/Skedify/plugin/src'\n  at ~/project/node_modules/browserify/node_modules/resolve/lib/async.js:50:17\n  at process (~/project/node_modules/browserify/node_modules/resolve/lib/async.js:119:43)\n  at ~/project/node_modules/browserify/node_modules/resolve/lib/async.js:128:21\n  at load (~/project/node_modules/browserify/node_modules/resolve/lib/async.js:60:43)\n  at ~/project/node_modules/browserify/node_modules/resolve/lib/async.js:66:22\n  at ~/project/node_modules/browserify/node_modules/resolve/lib/async.js:21:47\n  at Object.oncomplete (fs.js:97:15)\n```\n\nHowever, the polymer-platform package was definately installed (I verified multiple times and also checked the existance of the folder in node_modules) using `npm install --save-dev polymer-platform`\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/888/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/888/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/887",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/887/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/887/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/887/events",
    "html_url": "https://github.com/browserify/browserify/issues/887",
    "id": 41926300,
    "node_id": "MDU6SXNzdWU0MTkyNjMwMA==",
    "number": 887,
    "title": ".require(file) breaks with watchify",
    "user": {
      "login": "JedWatson",
      "id": 872310,
      "node_id": "MDQ6VXNlcjg3MjMxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/872310?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JedWatson",
      "html_url": "https://github.com/JedWatson",
      "followers_url": "https://api.github.com/users/JedWatson/followers",
      "following_url": "https://api.github.com/users/JedWatson/following{/other_user}",
      "gists_url": "https://api.github.com/users/JedWatson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JedWatson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JedWatson/subscriptions",
      "organizations_url": "https://api.github.com/users/JedWatson/orgs",
      "repos_url": "https://api.github.com/users/JedWatson/repos",
      "events_url": "https://api.github.com/users/JedWatson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JedWatson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-09-04T11:45:31Z",
    "updated_at": "2014-09-05T00:41:04Z",
    "closed_at": "2014-09-05T00:41:04Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Using browserify 5.9.1 and watchify 1.0.1\n\nI am working on a [React Select](https://github.com/JedWatson/react-select) component, and trying to set up a good development workflow with gulp and watchify.\n\nI'm having major issues trying to get browserify and watchify to build multiple bundles with common dependencies, there is another issue in my repo for context (JedWatson/react-select#1) but I'll give the full background here. I think I've either found a bug or completely misunderstood how to get this working.\n\nBoth my example app and my component require `react`, so I am setting up:\n- a `common.js` bundle with `react` and `underscore` exposed by it\n- a `select.js` bundle with the Select component it it, loaded from source and exposed as `react-select`\n- an `app.js` bundle with my example usage in it, using `require('react-select')` as you would if the package had been installed from npm.\n\nMy gulp build script looks like this:\n\n```\n    var common = browserify(watchify.args)\n        .require('react')\n        .require('underscore');\n\n    var select = browserify(watchify.args)\n        .exclude('react')\n        .exclude('underscore')\n        .require('./lib/select.js', { expose: 'react-select' });\n\n    var app = browserify(watchify.args)\n        .add('./examples/src/app.js')\n        .exclude('react')\n        .exclude('react-select')\n        .transform(reactify);\n```\n\nI then pass these three off to a common function that bundles them, which looks like this:\n\n```\nfunction doBundle(target, name, dest) {\n    return target.bundle()\n        .on('error', function(e) {\n            gutil.log('Browserify Error', e);\n        })\n        .pipe(source(name))\n        .pipe(gulp.dest(dest));\n}\n```\n\n... and that all works as expected.\n\nI have no other scripts on my page (e.g. anything that provides a `require` implementation)\n\nThe errors start when I try and get the files to update with watchify. In particular, I want my `select.js` bundle to rebuild when I change `./lib/select.js` or any file it requires.\n\nIn the watch task, before the bundle function is called, I invoke watchify like this:\n\n```\nfunction watchBundle(target, name, dest) {\n    watchify(target).on('update', function() {\n        doBundle(target, name, dest);\n    });\n}\n```\n\nThis _almost works_, except when reloading the webpage that includes the bundles, after `./lib/select.js` has changed, I now get an error saying `Uncaught Error: Cannot find module 'react-select'`\n\nExamining the difference in the built files, the change seems to be that when the bundles are generated initially, there is a `require=` statement at the start of the first line. On subsequent builds (as triggered by watchify), the `require=` statement is missing.\n\nIf I edit the generated bundle, adding `require=` to the start of the first line, and reload the page, everything works as expected.\n\nThis makes me suspect that either I am doing something wrong, or there's a bug where watchify somehow causes browserify to forget to add the `require=` statement at the start.\n\nIf anyone can help, I'd _really_ appreciate it!\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/887/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/887/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/886",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/886/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/886/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/886/events",
    "html_url": "https://github.com/browserify/browserify/issues/886",
    "id": 41782707,
    "node_id": "MDU6SXNzdWU0MTc4MjcwNw==",
    "number": 886,
    "title": "I miss chatting with substack",
    "user": {
      "login": "iamelgringo",
      "id": 1147581,
      "node_id": "MDQ6VXNlcjExNDc1ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1147581?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamelgringo",
      "html_url": "https://github.com/iamelgringo",
      "followers_url": "https://api.github.com/users/iamelgringo/followers",
      "following_url": "https://api.github.com/users/iamelgringo/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamelgringo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamelgringo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamelgringo/subscriptions",
      "organizations_url": "https://api.github.com/users/iamelgringo/orgs",
      "repos_url": "https://api.github.com/users/iamelgringo/repos",
      "events_url": "https://api.github.com/users/iamelgringo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamelgringo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2014-09-03T05:26:44Z",
    "updated_at": "2014-09-03T21:22:35Z",
    "closed_at": "2014-09-03T21:22:35Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "it's been a very long time, and it makes me kinda sad.  also worried if he's okay.\n\nother friends tell me they  haven't seen him for a while...  :(\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/886/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/886/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/885",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/885/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/885/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/885/events",
    "html_url": "https://github.com/browserify/browserify/issues/885",
    "id": 41763003,
    "node_id": "MDU6SXNzdWU0MTc2MzAwMw==",
    "number": 885,
    "title": "bundling a module that already has a browserified module",
    "user": {
      "login": "adamjgrant",
      "id": 320494,
      "node_id": "MDQ6VXNlcjMyMDQ5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/320494?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamjgrant",
      "html_url": "https://github.com/adamjgrant",
      "followers_url": "https://api.github.com/users/adamjgrant/followers",
      "following_url": "https://api.github.com/users/adamjgrant/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamjgrant/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamjgrant/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamjgrant/subscriptions",
      "organizations_url": "https://api.github.com/users/adamjgrant/orgs",
      "repos_url": "https://api.github.com/users/adamjgrant/repos",
      "events_url": "https://api.github.com/users/adamjgrant/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamjgrant/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-09-02T22:33:08Z",
    "updated_at": "2014-09-11T07:05:01Z",
    "closed_at": "2014-09-04T16:41:05Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm trying to load [SystemJS](https://github.com/systemjs/systemjs) via Browserify.\n\nIt's working fine, except for the when.js dependency. \n\nOn line 24 of [Promise.js](https://github.com/cujojs/when/blob/5a19730d7a52347367abc29727225524c009f8f7/es6-shim/Promise.js), there are requirements for 3-4 modules in \"./\"\n\nBecause this is a standalone module, it's trying to actually get them from /es6-shim/ even though they're located a directory above in /lib/\n\nAs far as I can tell, this is a direct result of loading the System.js module through browserify. Is there a way to map these ./ paths to their true location, or to tell browserify to treat when as a browserify module?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/885/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/885/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/884",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/884/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/884/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/884/events",
    "html_url": "https://github.com/browserify/browserify/issues/884",
    "id": 41635509,
    "node_id": "MDU6SXNzdWU0MTYzNTUwOQ==",
    "number": 884,
    "title": "\"Error: path must be a string\" (v5.10.0)",
    "user": {
      "login": "orcaman",
      "id": 4884073,
      "node_id": "MDQ6VXNlcjQ4ODQwNzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4884073?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/orcaman",
      "html_url": "https://github.com/orcaman",
      "followers_url": "https://api.github.com/users/orcaman/followers",
      "following_url": "https://api.github.com/users/orcaman/following{/other_user}",
      "gists_url": "https://api.github.com/users/orcaman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/orcaman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/orcaman/subscriptions",
      "organizations_url": "https://api.github.com/users/orcaman/orgs",
      "repos_url": "https://api.github.com/users/orcaman/repos",
      "events_url": "https://api.github.com/users/orcaman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/orcaman/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 203859297,
        "node_id": "MDU6TGFiZWwyMDM4NTkyOTc=",
        "url": "https://api.github.com/repos/browserify/browserify/labels/support",
        "name": "support",
        "color": "FF91AF",
        "default": false,
        "description": null
      },
      {
        "id": 206142130,
        "node_id": "MDU6TGFiZWwyMDYxNDIxMzA=",
        "url": "https://api.github.com/repos/browserify/browserify/labels/repro-please",
        "name": "repro-please",
        "color": "207de5",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 14,
    "created_at": "2014-09-01T13:01:23Z",
    "updated_at": "2017-04-15T02:11:16Z",
    "closed_at": "2015-09-15T21:20:27Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\n\nI have this file (a large bundle of a couple of JS files) that used to work with browserify (5.10.0\n) till a couple of days ago, and now it does not. \n\nThis is what I am running:\n$ browserify index.js -o dist/out.bundle.js \n\nAnd the output is:\nError: path must be a string\n    at /usr/local/lib/node_modules/browserify/node_modules/resolve/lib/async.js:15:16\n    at process._tickCallback (node.js:419:13)\n\nIs there a way I can debug this to try and figure out what bothers browserify? \n\nCheers\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/884/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/884/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/883",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/883/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/883/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/883/events",
    "html_url": "https://github.com/browserify/browserify/issues/883",
    "id": 41606543,
    "node_id": "MDU6SXNzdWU0MTYwNjU0Mw==",
    "number": 883,
    "title": "require() a combined string path will not build the module into output script",
    "user": {
      "login": "caoglish",
      "id": 1396141,
      "node_id": "MDQ6VXNlcjEzOTYxNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1396141?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/caoglish",
      "html_url": "https://github.com/caoglish",
      "followers_url": "https://api.github.com/users/caoglish/followers",
      "following_url": "https://api.github.com/users/caoglish/following{/other_user}",
      "gists_url": "https://api.github.com/users/caoglish/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/caoglish/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/caoglish/subscriptions",
      "organizations_url": "https://api.github.com/users/caoglish/orgs",
      "repos_url": "https://api.github.com/users/caoglish/repos",
      "events_url": "https://api.github.com/users/caoglish/events{/privacy}",
      "received_events_url": "https://api.github.com/users/caoglish/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-09-01T04:45:55Z",
    "updated_at": "2018-02-06T14:31:41Z",
    "closed_at": "2018-02-06T14:31:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "if require()  a combined string path. this path of module will not include in output script\nlike:\n\n``` javascript\nrequire(\"./\"+\"b\" );\n//or\nvar path=\"./\";\nrequire(path+\"b\");\n```\n\nvar b = require('./'+'b');\n\n``` javascript\n(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nmodule.exports=\"a\";\n\n},{}],2:[function(require,module,exports){\nvar a = require('./a');\nvar b = require('./'+'b');\n\n},{\"./a\":1}]},{},[2]);\n```\n\nvar b = require('./b');\n\n``` javascript\n(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nmodule.exports=\"a\";\n\n},{}],2:[function(require,module,exports){\nmodule.exports=\"b\";\n\n},{}],3:[function(require,module,exports){\nvar a = require('./a');\nvar b = require('./b');\n\n},{\"./a\":1,\"./b\":2}]},{},[3]);\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/883/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/883/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/882",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/882/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/882/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/882/events",
    "html_url": "https://github.com/browserify/browserify/issues/882",
    "id": 41582060,
    "node_id": "MDU6SXNzdWU0MTU4MjA2MA==",
    "number": 882,
    "title": "error notifications",
    "user": {
      "login": "FND",
      "id": 3515,
      "node_id": "MDQ6VXNlcjM1MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3515?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FND",
      "html_url": "https://github.com/FND",
      "followers_url": "https://api.github.com/users/FND/followers",
      "following_url": "https://api.github.com/users/FND/following{/other_user}",
      "gists_url": "https://api.github.com/users/FND/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FND/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FND/subscriptions",
      "organizations_url": "https://api.github.com/users/FND/orgs",
      "repos_url": "https://api.github.com/users/FND/repos",
      "events_url": "https://api.github.com/users/FND/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FND/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2014-08-31T09:11:17Z",
    "updated_at": "2014-08-31T09:12:12Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "As far as I can tell*, there is currently no simple way to be respond to compilation errors.\n\nSince the respective terminal isn't always visible, such errors can go unnoticed, which can lead to confusion and subconscious paranoia.\n\nThus I'd like to modify the bundle (e.g. `throw new Error(\"compilation failed\");`) when something went wrong, making sure that errors show up in the browser. Ideally this would be possible for both the programmatic API and the CLI (e.g. `browserify --on-fail ./notify`).\n\n\\* It's a bit hard to search for existing discussions and I appear to be insufficiently familiar with the source to make much sense of it ('error' event listeners are never invoked).\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/882/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/882/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/881",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/881/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/881/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/881/events",
    "html_url": "https://github.com/browserify/browserify/issues/881",
    "id": 41566314,
    "node_id": "MDU6SXNzdWU0MTU2NjMxNA==",
    "number": 881,
    "title": "Can't defined exposed name with require option",
    "user": {
      "login": "guillaume86",
      "id": 441850,
      "node_id": "MDQ6VXNlcjQ0MTg1MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/441850?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/guillaume86",
      "html_url": "https://github.com/guillaume86",
      "followers_url": "https://api.github.com/users/guillaume86/followers",
      "following_url": "https://api.github.com/users/guillaume86/following{/other_user}",
      "gists_url": "https://api.github.com/users/guillaume86/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/guillaume86/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/guillaume86/subscriptions",
      "organizations_url": "https://api.github.com/users/guillaume86/orgs",
      "repos_url": "https://api.github.com/users/guillaume86/repos",
      "events_url": "https://api.github.com/users/guillaume86/events{/privacy}",
      "received_events_url": "https://api.github.com/users/guillaume86/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2014-08-30T16:12:55Z",
    "updated_at": "2015-01-05T20:08:37Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Using the programmatic API, I try to bundle a file and expose it with a simple name:\n\n```\nbundle.expose(path, { expose: 'simpleName' }')\n```\n\nThe resulting file keeps the path as the module identifier.\nI digged in the source code and the problematic part seems to be:\nhttps://github.com/substack/node-browserify/blob/master/index.js#L119-L126\n\nI'm on windows and my path is C:\\Folder\\file.ext and the regex test evaluates to false (path don't start by . or /) so the id is set to the path.\nThen the exposed name is not assigned since the id is already defined.\n\nI don't really get what is the purpose of lines 119-121 but I guess it needs to be changed to support windows. If someone can explain it to me I can try to submit a pull request with windows support.\n\nEdit: \nIt could also be a bug (I don't see why the expose parameter shouldn't be used in any case),\nin that case changing the line 121 with `: xtend(opts, { id: (expose || file), file: file })` should fix the problem.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/881/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/881/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/880",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/880/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/880/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/880/events",
    "html_url": "https://github.com/browserify/browserify/pull/880",
    "id": 41420615,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjA0NTUzMjk=",
    "number": 880,
    "title": "Add implicit dependency on original module during dedupe",
    "user": {
      "login": "jgoz",
      "id": 132233,
      "node_id": "MDQ6VXNlcjEzMjIzMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/132233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgoz",
      "html_url": "https://github.com/jgoz",
      "followers_url": "https://api.github.com/users/jgoz/followers",
      "following_url": "https://api.github.com/users/jgoz/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgoz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgoz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgoz/subscriptions",
      "organizations_url": "https://api.github.com/users/jgoz/orgs",
      "repos_url": "https://api.github.com/users/jgoz/repos",
      "events_url": "https://api.github.com/users/jgoz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgoz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-08-28T17:52:09Z",
    "updated_at": "2014-08-29T04:18:41Z",
    "closed_at": "2014-08-28T22:38:46Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/880",
      "html_url": "https://github.com/browserify/browserify/pull/880",
      "diff_url": "https://github.com/browserify/browserify/pull/880.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/880.patch",
      "merged_at": null
    },
    "body": "This change ensures the original module is recorded as a dependency of a deduplicated module.\n\nWhen modules are deduplicated and dependencies between the duplicate and original are the same, the resulting duplicate module code looks like this:\n\n``` js\nmodule.exports=require(<original-module-index>)\n```\n\nArguably, this implies that there is now a dependency on the original module from the duplicate, but this information was not being recorded.\n\nPreviously, plugins that use dependency information (i.e., factor-bundle) were getting an incomplete picture of a row's dependencies if it had been deduplicated. This was causing issues such as substack/factor-bundle#38 and substack/factor-bundle#39.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/880/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/880/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/879",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/879/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/879/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/879/events",
    "html_url": "https://github.com/browserify/browserify/issues/879",
    "id": 41381648,
    "node_id": "MDU6SXNzdWU0MTM4MTY0OA==",
    "number": 879,
    "title": "Remove _prelude from stack traces?",
    "user": {
      "login": "barneycarroll",
      "id": 83627,
      "node_id": "MDQ6VXNlcjgzNjI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/83627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/barneycarroll",
      "html_url": "https://github.com/barneycarroll",
      "followers_url": "https://api.github.com/users/barneycarroll/followers",
      "following_url": "https://api.github.com/users/barneycarroll/following{/other_user}",
      "gists_url": "https://api.github.com/users/barneycarroll/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/barneycarroll/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/barneycarroll/subscriptions",
      "organizations_url": "https://api.github.com/users/barneycarroll/orgs",
      "repos_url": "https://api.github.com/users/barneycarroll/repos",
      "events_url": "https://api.github.com/users/barneycarroll/events{/privacy}",
      "received_events_url": "https://api.github.com/users/barneycarroll/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2014-08-28T11:44:47Z",
    "updated_at": "2014-08-28T11:44:47Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "After what must have been a change in my source scripts, _prelude has started showing up in source mapped stack traces in Chrome – isn't default sourcemap behaviour for _prelude to be 'invisible' and instead show the path as if require behaviour were seamless?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/879/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/879/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/878",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/878/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/878/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/878/events",
    "html_url": "https://github.com/browserify/browserify/issues/878",
    "id": 41354728,
    "node_id": "MDU6SXNzdWU0MTM1NDcyOA==",
    "number": 878,
    "title": "fullPaths fails to expand some npm module names to a full path",
    "user": {
      "login": "bkonkle",
      "id": 30199,
      "node_id": "MDQ6VXNlcjMwMTk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/30199?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bkonkle",
      "html_url": "https://github.com/bkonkle",
      "followers_url": "https://api.github.com/users/bkonkle/followers",
      "following_url": "https://api.github.com/users/bkonkle/following{/other_user}",
      "gists_url": "https://api.github.com/users/bkonkle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bkonkle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bkonkle/subscriptions",
      "organizations_url": "https://api.github.com/users/bkonkle/orgs",
      "repos_url": "https://api.github.com/users/bkonkle/repos",
      "events_url": "https://api.github.com/users/bkonkle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bkonkle/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-08-28T04:35:15Z",
    "updated_at": "2014-11-13T22:56:35Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When I try to build with `fullPaths: true`, I get errors like this:\n\n```\nUncaught Error: Cannot find module '/Users/brandon/code/my-project/node_modules/react/react.js' \n```\n\nIn the compiled bundle, `require('react')` is being mapped like this:\n\n```\n\"react\":\"/Users/brandon/code/my-project/node_modules/react/react.js\"\n```\n\nBut the \"react\" module itself is keyed like this:\n\n```\n\"react\":[function(require,module,exports){\n```\n\nThe full path isn't being used as the key.\n\nOther modules have the full path as the key:\n\n```\n\"/Users/brandon/code/my-project/node_modules/underscore/underscore.js\":[function(require,module,exports){\n```\n\nI'm using browserify from within Node, like this:\n\n``` javascript\nvar bundler = browserify({\n  'entries': './src/main',\n  'extensions': ['.jsx'],\n  'debug': !production,  // If not production, add source maps\n  'fullPaths': true\n});\n\n// Compile jsx\nbundler.transform('reactify');\nbundler.transform('envify');\n\n// Make React available to the dev tools\nbundler.require('react');\n\nbundler.bundle();\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/878/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/878/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/877",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/877/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/877/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/877/events",
    "html_url": "https://github.com/browserify/browserify/issues/877",
    "id": 41205829,
    "node_id": "MDU6SXNzdWU0MTIwNTgyOQ==",
    "number": 877,
    "title": "Including backbone installed through bower in a node.js test script",
    "user": {
      "login": "saravanak",
      "id": 389180,
      "node_id": "MDQ6VXNlcjM4OTE4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/389180?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/saravanak",
      "html_url": "https://github.com/saravanak",
      "followers_url": "https://api.github.com/users/saravanak/followers",
      "following_url": "https://api.github.com/users/saravanak/following{/other_user}",
      "gists_url": "https://api.github.com/users/saravanak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/saravanak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/saravanak/subscriptions",
      "organizations_url": "https://api.github.com/users/saravanak/orgs",
      "repos_url": "https://api.github.com/users/saravanak/repos",
      "events_url": "https://api.github.com/users/saravanak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/saravanak/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-08-26T18:35:04Z",
    "updated_at": "2014-08-27T00:21:47Z",
    "closed_at": "2014-08-27T00:21:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am having a gulp based project, and use `browserify` and `debowerify` to build the application. The application \n1.  Depends on Backbone -  installed as bower component. \n2.  Has some additional domain classes which `require`s `backbone`.\n\nI build `1` above as `vendor.js` and `2` above as `app.js` ,and include both these files in the html file, which runs fine \n\nNow I am about to set up testing using tape, and I started off with testing the `model` class:\n\n```\nvar todoModel = require('../../libs/todo/model/todo.js').Todo;\nvar test = require('tape');\nvar aTodo = new todoModel();\n\ntest('todo model test',function(t){\n  eyes.inspect(atodo, \"one\");\n  t.equal(1,one.valueOf(),'one should be equal to one');\n  t.end();\n});\n```\n\n**libs/todo/model/todo.js:**\n\n```\n  var Backbone = require('backbone');\n  var Storage = require('../helpers/storage.js');\n  var Todo = Backbone.Model.extend({\n      ...\n  })\n```\n\nWhen I run this test as `tape test/model-test.js`, I am getting an  (expteced) error as \n`Error: Cannot find module 'backbone'`. So now, how do I make the bower candidate `backbone` be available to my node.js test script\n\nNote: A simple workaround is to add the `backbone` as a node dependency, but what if a hypothetical library is available only in bower?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/877/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/877/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/876",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/876/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/876/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/876/events",
    "html_url": "https://github.com/browserify/browserify/issues/876",
    "id": 41152940,
    "node_id": "MDU6SXNzdWU0MTE1Mjk0MA==",
    "number": 876,
    "title": "Support for Contracts.coffee",
    "user": {
      "login": "lolmaus",
      "id": 200884,
      "node_id": "MDQ6VXNlcjIwMDg4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/200884?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lolmaus",
      "html_url": "https://github.com/lolmaus",
      "followers_url": "https://api.github.com/users/lolmaus/followers",
      "following_url": "https://api.github.com/users/lolmaus/following{/other_user}",
      "gists_url": "https://api.github.com/users/lolmaus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lolmaus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lolmaus/subscriptions",
      "organizations_url": "https://api.github.com/users/lolmaus/orgs",
      "repos_url": "https://api.github.com/users/lolmaus/repos",
      "events_url": "https://api.github.com/users/lolmaus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lolmaus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-08-26T09:29:55Z",
    "updated_at": "2014-08-26T10:29:30Z",
    "closed_at": "2014-08-26T10:21:40Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi!\n\nContracts.coffee is a contracts-driven development suite. It uses an altered CoffeeScript syntax, not tolerated by Browserify. It enhances the vanilla CoffeeScript compiler to support the new syntax: files written in Contracts.coffee are to be compiled with the following command:\n\n```\ncoffee -c --contracts MyContractedScript.coffee\n```\n\nI'm excited to use both Browserify and Contracts.coffee to organize my code. Apparently, there are steps to be taken by the maintainers of both projects for the projects to work together.\n\nWhat is your vision of Contracts.coffee-enhanced Browserify workflow? What modifications have to be done in either project?\n\nThe result should support all kinds of Browserify usage: vanilla command line tool, Node-based task runners: Gulp, Grunt, etc., and Sprockets:the most popular asset pipeline for Ruby, used in many frameworks (Rails, Middleman, Sinatra, Padrino...), middleware (Rack, Guard...) and preprocessors (Haml, Sass, Less, Jasmine test suite...).\n\nThe corresponding issue in the Contracts.coffee issue queue: https://github.com/disnet/contracts.coffee/issues/21 .\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/876/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/876/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/875",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/875/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/875/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/875/events",
    "html_url": "https://github.com/browserify/browserify/issues/875",
    "id": 41116392,
    "node_id": "MDU6SXNzdWU0MTExNjM5Mg==",
    "number": 875,
    "title": "Can baseDir be omitted for passing in streams?",
    "user": {
      "login": "NickHeiner",
      "id": 829827,
      "node_id": "MDQ6VXNlcjgyOTgyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/829827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NickHeiner",
      "html_url": "https://github.com/NickHeiner",
      "followers_url": "https://api.github.com/users/NickHeiner/followers",
      "following_url": "https://api.github.com/users/NickHeiner/following{/other_user}",
      "gists_url": "https://api.github.com/users/NickHeiner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NickHeiner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NickHeiner/subscriptions",
      "organizations_url": "https://api.github.com/users/NickHeiner/orgs",
      "repos_url": "https://api.github.com/users/NickHeiner/repos",
      "events_url": "https://api.github.com/users/NickHeiner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NickHeiner/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-08-25T22:33:19Z",
    "updated_at": "2014-08-26T18:44:43Z",
    "closed_at": "2014-08-26T18:44:43Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have a somewhat unusual situation in which I have a stream I wish to send into browserify but I don't actually want it to parse any of it for `require` statements. I am setting `stream.noParse = true`, but I'm still getting a `resolve` error that I don't think I should be getting:\n\n**sample.js**\n\n``` js\nvar browserify = require('browserify'),\n    through = require('through'),\n    input = through().queue('console.log(\"hi\");'),\n    bundler;\n\ninput.noParse = true;\n\nbundler = browserify(input, {\n    basedir: __dirname\n});\n\ninput.end();\n\nbundler.bundle().pipe(process.stdout);\n```\n\n```\n$ node sample.js \n\nevents.js:72\n        throw er; // Unhandled 'error' event\n              ^\nError: Cannot find module '/Users/nick.heiner/sample/_stream_1.js' from '/Users/nick.heiner/sample'\n    at /Users/nick.heiner/sample/node_modules/browserify/node_modules/resolve/lib/async.js:43:25\n    at load (/Users/nick.heiner/sample/node_modules/browserify/node_modules/resolve/lib/async.js:61:43)\n    at /Users/nick.heiner/sample/node_modules/browserify/node_modules/resolve/lib/async.js:67:22\n    at /Users/nick.heiner/sample/node_modules/browserify/node_modules/resolve/lib/async.js:22:47\n    at Object.oncomplete (fs.js:107:15)\n```\n\nAm I doing something wrong? Is this a valid use case? This works when I create a tmp file, write the code to it, then read it back in again via browserify, but that's no fun.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/875/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/875/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/874",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/874/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/874/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/874/events",
    "html_url": "https://github.com/browserify/browserify/issues/874",
    "id": 40890441,
    "node_id": "MDU6SXNzdWU0MDg5MDQ0MQ==",
    "number": 874,
    "title": "Using a browserify instance twice causes \"label\" to fail",
    "user": {
      "login": "mantoni",
      "id": 332271,
      "node_id": "MDQ6VXNlcjMzMjI3MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/332271?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mantoni",
      "html_url": "https://github.com/mantoni",
      "followers_url": "https://api.github.com/users/mantoni/followers",
      "following_url": "https://api.github.com/users/mantoni/following{/other_user}",
      "gists_url": "https://api.github.com/users/mantoni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mantoni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mantoni/subscriptions",
      "organizations_url": "https://api.github.com/users/mantoni/orgs",
      "repos_url": "https://api.github.com/users/mantoni/repos",
      "events_url": "https://api.github.com/users/mantoni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mantoni/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-08-22T08:58:12Z",
    "updated_at": "2014-08-22T09:27:59Z",
    "closed_at": "2014-08-22T09:27:59Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "The `row.id` [in this line](https://github.com/substack/node-browserify/blob/master/index.js#L490) is in some cases a number from a previous `bundle()` call.\nI was not able to come up with a simple test case, but putting a log statement in here shows that it's `127` when calling `bundle()` a second time.\n\n```\npath.js:313\n        throw new TypeError('Arguments to path.resolve must be strings');\n        ^\nTypeError: Arguments to path.resolve must be strings\n    at Object.exports.resolve (path.js:313:15)\n    at Object.exports.relative (path.js:371:18)\n    at DestroyableTransform._transform (...../node_modules/browserify/index.js:491:31)\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/874/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/874/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/873",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/873/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/873/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/873/events",
    "html_url": "https://github.com/browserify/browserify/issues/873",
    "id": 40850154,
    "node_id": "MDU6SXNzdWU0MDg1MDE1NA==",
    "number": 873,
    "title": "b.add(file, opts) does not work with file being an array",
    "user": {
      "login": "domenic",
      "id": 617481,
      "node_id": "MDQ6VXNlcjYxNzQ4MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/617481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domenic",
      "html_url": "https://github.com/domenic",
      "followers_url": "https://api.github.com/users/domenic/followers",
      "following_url": "https://api.github.com/users/domenic/following{/other_user}",
      "gists_url": "https://api.github.com/users/domenic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domenic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domenic/subscriptions",
      "organizations_url": "https://api.github.com/users/domenic/orgs",
      "repos_url": "https://api.github.com/users/domenic/repos",
      "events_url": "https://api.github.com/users/domenic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domenic/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-08-21T21:09:23Z",
    "updated_at": "2017-10-21T17:41:48Z",
    "closed_at": "2017-10-21T17:41:48Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "But the docs say it should.\n\n`b.add('a').add('b')` works. `b.add(['a', 'b'])` gives Error: path must be a string\n\n```\nUncaught Error: path must be a string\n----------------------------------------\n    at EventEmitter.on\n    at makeWrappedCallback (c:\\Chocolatey\\lib\\nodist.0.4.6-beta\\tools\\nodist-master\\bin\\node_modules\\tracer-bullet\\node_modules\\long-stack-traces\\lib\\long-stack-traces.js:65:26)\n    at Labeled.object.(anonymous function) (c:\\Chocolatey\\lib\\nodist.0.4.6-beta\\tools\\nodist-master\\bin\\node_modules\\tracer-bullet\\node_modules\\long-stack-traces\\lib\\long-stack-traces.js:51:38)\n    at Labeled.Readable.on (c:\\Users\\Domenic\\Dropbox\\GitHub\\dglazkov\\html-as-custom-elements\\node_modules\\browserify\\node_modules\\labeled-stream-splicer\\node_modules\\stream-splicer\\node_modules\\readable-stream\\lib\\_stream_readable.js:703:33)\n    at c:\\Users\\Domenic\\Dropbox\\GitHub\\dglazkov\\html-as-custom-elements\\node_modules\\browserify\\node_modules\\labeled-stream-splicer\\node_modules\\stream-splicer\\index.js:129:16\n    at Labeled.Pipeline.splice (c:\\Users\\Domenic\\Dropbox\\GitHub\\dglazkov\\html-as-custom-elements\\node_modules\\browserify\\node_modules\\labeled-stream-splicer\\node_modules\\stream-splicer\\index.js:141:7)\n    at Labeled.splice (c:\\Users\\Domenic\\Dropbox\\GitHub\\dglazkov\\html-as-custom-elements\\node_modules\\browserify\\node_modules\\labeled-stream-splicer\\index.js:64:37)\n    at new Labeled (c:\\Users\\Domenic\\Dropbox\\GitHub\\dglazkov\\html-as-custom-elements\\node_modules\\browserify\\node_modules\\labeled-stream-splicer\\index.js:33:17)\n    at Function.module.exports.obj (c:\\Users\\Domenic\\Dropbox\\GitHub\\dglazkov\\html-as-custom-elements\\node_modules\\browserify\\node_modules\\labeled-stream-splicer\\index.js:11:12)\n    at Browserify._createPipeline (c:\\Users\\Domenic\\Dropbox\\GitHub\\dglazkov\\html-as-custom-elements\\node_modules\\browserify\\index.js:251:28)\n    at new Browserify (c:\\Users\\Domenic\\Dropbox\\GitHub\\dglazkov\\html-as-custom-elements\\node_modules\\browserify\\index.js:54:26)\nUncaught undefined\nUncaught undefined\n\nc:\\Chocolatey\\lib\\nodist.0.4.6-beta\\tools\\nodist-master\\bin\\node_modules\\tracer-bullet\\node_modules\\long-stack-traces\\lib\\long-stack-traces.js:80\n                    throw \"\"; // TODO: throw the original error, or undefined?\n                    ^\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/873/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/873/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/872",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/872/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/872/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/872/events",
    "html_url": "https://github.com/browserify/browserify/pull/872",
    "id": 40838803,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjAxMzEzNjc=",
    "number": 872,
    "title": "Fence coffee script compile example as js",
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "node_id": "MDQ6VXNlcjY3MTM3OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/671378?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2014-08-21T19:21:22Z",
    "updated_at": "2014-08-22T06:01:26Z",
    "closed_at": "2014-08-22T06:01:26Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/872",
      "html_url": "https://github.com/browserify/browserify/pull/872",
      "diff_url": "https://github.com/browserify/browserify/pull/872.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/872.patch",
      "merged_at": "2014-08-22T06:01:26Z"
    },
    "body": "Wasn't being highlighted previously.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/872/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/872/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/871",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/871/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/871/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/871/events",
    "html_url": "https://github.com/browserify/browserify/pull/871",
    "id": 40506740,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTk5Mjg5NzQ=",
    "number": 871,
    "title": "noparse is camelcased",
    "user": {
      "login": "knownasilya",
      "id": 34726,
      "node_id": "MDQ6VXNlcjM0NzI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/34726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/knownasilya",
      "html_url": "https://github.com/knownasilya",
      "followers_url": "https://api.github.com/users/knownasilya/followers",
      "following_url": "https://api.github.com/users/knownasilya/following{/other_user}",
      "gists_url": "https://api.github.com/users/knownasilya/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/knownasilya/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/knownasilya/subscriptions",
      "organizations_url": "https://api.github.com/users/knownasilya/orgs",
      "repos_url": "https://api.github.com/users/knownasilya/repos",
      "events_url": "https://api.github.com/users/knownasilya/events{/privacy}",
      "received_events_url": "https://api.github.com/users/knownasilya/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2014-08-18T16:33:50Z",
    "updated_at": "2014-08-18T16:34:22Z",
    "closed_at": "2014-08-18T16:34:22Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/871",
      "html_url": "https://github.com/browserify/browserify/pull/871",
      "diff_url": "https://github.com/browserify/browserify/pull/871.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/871.patch",
      "merged_at": null
    },
    "body": "https://github.com/substack/node-browserify/blob/b24fbc3d8d9ba775d9b70a31d0b5d21be084a9e7/bin/args.js#L37\n\nThis caused me plenty of headache. Hope it helps others..\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/871/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/871/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/870",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/870/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/870/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/870/events",
    "html_url": "https://github.com/browserify/browserify/issues/870",
    "id": 40499581,
    "node_id": "MDU6SXNzdWU0MDQ5OTU4MQ==",
    "number": 870,
    "title": "Is there a way to set fullPaths: true in package.json ?",
    "user": {
      "login": "AlexRiedler",
      "id": 1396855,
      "node_id": "MDQ6VXNlcjEzOTY4NTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1396855?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AlexRiedler",
      "html_url": "https://github.com/AlexRiedler",
      "followers_url": "https://api.github.com/users/AlexRiedler/followers",
      "following_url": "https://api.github.com/users/AlexRiedler/following{/other_user}",
      "gists_url": "https://api.github.com/users/AlexRiedler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AlexRiedler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AlexRiedler/subscriptions",
      "organizations_url": "https://api.github.com/users/AlexRiedler/orgs",
      "repos_url": "https://api.github.com/users/AlexRiedler/repos",
      "events_url": "https://api.github.com/users/AlexRiedler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AlexRiedler/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-08-18T15:22:28Z",
    "updated_at": "2018-02-06T14:33:33Z",
    "closed_at": "2018-02-06T14:33:33Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "the browserify-shim transform needs the fullpaths to do resolution of lookups, and in v5 fullPaths needs to be true... is there a way to set this up automatically from package.json or similiar?\n\nrelated issue: https://github.com/thlorenz/browserify-shim/pull/83\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/870/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/870/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/869",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/869/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/869/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/869/events",
    "html_url": "https://github.com/browserify/browserify/pull/869",
    "id": 40444809,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTk4OTQwMDA=",
    "number": 869,
    "title": "Fixed link to \"events\" package in readme",
    "user": {
      "login": "sibartlett",
      "id": 216687,
      "node_id": "MDQ6VXNlcjIxNjY4Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/216687?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sibartlett",
      "html_url": "https://github.com/sibartlett",
      "followers_url": "https://api.github.com/users/sibartlett/followers",
      "following_url": "https://api.github.com/users/sibartlett/following{/other_user}",
      "gists_url": "https://api.github.com/users/sibartlett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sibartlett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sibartlett/subscriptions",
      "organizations_url": "https://api.github.com/users/sibartlett/orgs",
      "repos_url": "https://api.github.com/users/sibartlett/repos",
      "events_url": "https://api.github.com/users/sibartlett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sibartlett/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-08-17T22:07:50Z",
    "updated_at": "2014-08-20T22:11:02Z",
    "closed_at": "2014-08-20T22:01:48Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/869",
      "html_url": "https://github.com/browserify/browserify/pull/869",
      "diff_url": "https://github.com/browserify/browserify/pull/869.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/869.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/869/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/869/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/868",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/868/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/868/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/868/events",
    "html_url": "https://github.com/browserify/browserify/issues/868",
    "id": 40391029,
    "node_id": "MDU6SXNzdWU0MDM5MTAyOQ==",
    "number": 868,
    "title": "using jQuery plugins with browserify: jQuery is not defined",
    "user": {
      "login": "connor11528",
      "id": 3578908,
      "node_id": "MDQ6VXNlcjM1Nzg5MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3578908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/connor11528",
      "html_url": "https://github.com/connor11528",
      "followers_url": "https://api.github.com/users/connor11528/followers",
      "following_url": "https://api.github.com/users/connor11528/following{/other_user}",
      "gists_url": "https://api.github.com/users/connor11528/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/connor11528/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/connor11528/subscriptions",
      "organizations_url": "https://api.github.com/users/connor11528/orgs",
      "repos_url": "https://api.github.com/users/connor11528/repos",
      "events_url": "https://api.github.com/users/connor11528/events{/privacy}",
      "received_events_url": "https://api.github.com/users/connor11528/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2014-08-15T22:24:50Z",
    "updated_at": "2020-10-27T07:22:40Z",
    "closed_at": "2018-01-04T11:00:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am trying to use browserify with jQuery and a jQuery plugin like so:\n\n```\nvar $ = require('jquery');\nrequire('./lib/stellar.jquery')\n\n$(function(){\n    $.stellar();\n});\n```\n\nI build the final file using gulp (not sure if this matters):\n\n```\ngulp.task('browserify', function(){\n    return browserify({\n            entries: ['./js/main.js']\n        })\n        .bundle()\n        .on('error', function (err) {\n            console.log(err.toString());\n            this.emit('end');\n        })\n        //Pass desired output filename to vinyl-source-stream\n        .pipe(source('bundle.js'))\n        // Start piping stream to tasks\n        .pipe(gulp.dest('./build/'));\n});\n```\n\nAnyway when I run in the browser this last line from the `stellar.jquery.js` file throws a \"jQuery is not defined\" error:\n\n```\n...\n    // Expose the plugin class so it can be modified\n    window.Stellar = Plugin;\n}(jQuery, this, document));\n```\n\nWhat's the best way to use jQuery plugins with browserify?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/868/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/868/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/867",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/867/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/867/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/867/events",
    "html_url": "https://github.com/browserify/browserify/issues/867",
    "id": 40337772,
    "node_id": "MDU6SXNzdWU0MDMzNzc3Mg==",
    "number": 867,
    "title": "Transform no longer working (Moving from 4.2.3 to 5.10.0)",
    "user": {
      "login": "adam-lynch",
      "id": 1427241,
      "node_id": "MDQ6VXNlcjE0MjcyNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1427241?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adam-lynch",
      "html_url": "https://github.com/adam-lynch",
      "followers_url": "https://api.github.com/users/adam-lynch/followers",
      "following_url": "https://api.github.com/users/adam-lynch/following{/other_user}",
      "gists_url": "https://api.github.com/users/adam-lynch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adam-lynch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adam-lynch/subscriptions",
      "organizations_url": "https://api.github.com/users/adam-lynch/orgs",
      "repos_url": "https://api.github.com/users/adam-lynch/repos",
      "events_url": "https://api.github.com/users/adam-lynch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adam-lynch/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2014-08-15T10:23:02Z",
    "updated_at": "2014-10-13T13:48:31Z",
    "closed_at": "2014-10-08T00:19:45Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have the following gulp task:\n\n``` javascript\ngulp.task('browser-scripts-bundle', function(done){\n\n    var browserified = browserify(paths.browser.appEntryScript, {\n        extensions: ['.coffee']\n    });\n\n    browserified.transform(coffeeify, {global: true});\n\n    browserified.bundle({\n        extensions: ['.coffee']\n    })\n        .pipe(source('app.js'))\n        .pipe(buffer())\n        .pipe(pipes.requireWorkaround())\n        .pipe(gulp.dest(paths.public.browserScriptsRoot))\n        .pipe($.size({showFiles: true}))\n        .on('finish', done);\n});\n```\n\nwhich worked fine with `4.2.3`.\n\nThen I installed the latest (`5.10.0`) and it's no longer working. I'm not sure why but it seems like my CoffeeScript is being read as JavaScript;\n\n``` shell\nSyntaxError: Line 2: Unexpected token ILLEGAL while parsing E:\\abc\\src\\common\\scripts\\init.coffee while parsing file: E:\\abc\\src\\common\\scripts\\init.coffee\n  at Stream.end (E:\\abc\\node_modules\\browserify\\node_modules\\insert-module-globals\\index.js:72:21)\n  at _end (E:\\abc\\node_modules\\through\\index.js:65:9)\n  at Stream.stream.end (E:\\abc\\node_modules\\through\\index.js:74:5)\n  at Transform.onend (E:\\abc\\node_modules\\browserify\\node_modules\\readable-stream\\lib\\_stream_readable.js:505:10)\n  at Transform.g (events.js:175:14)\n  at Transform.EventEmitter.emit (events.js:117:20)\n  at E:\\abc\\node_modules\\browserify\\node_modules\\readable-stream\\lib\\_stream_readable.js:942:16\n  at process._tickCallback (node.js:415:13)\n```\n\n---\n\nP.S. there was this warning: \n\n> Error: bundle() no longer accepts option arguments.\n> Move all option arguments to the browserify() constructor.\n\nBut it makes no difference. \n\n---\n\nnode: `0.10.20`\nnpm: `1.3.11`\nwindows: `8.1`\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/867/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/867/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/866",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/866/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/866/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/866/events",
    "html_url": "https://github.com/browserify/browserify/pull/866",
    "id": 40305480,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTk4MTg4Njk=",
    "number": 866,
    "title": "Ignore modules that don't match a glob.",
    "user": {
      "login": "xonev",
      "id": 142312,
      "node_id": "MDQ6VXNlcjE0MjMxMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142312?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xonev",
      "html_url": "https://github.com/xonev",
      "followers_url": "https://api.github.com/users/xonev/followers",
      "following_url": "https://api.github.com/users/xonev/following{/other_user}",
      "gists_url": "https://api.github.com/users/xonev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xonev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xonev/subscriptions",
      "organizations_url": "https://api.github.com/users/xonev/orgs",
      "repos_url": "https://api.github.com/users/xonev/repos",
      "events_url": "https://api.github.com/users/xonev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xonev/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-08-14T22:14:12Z",
    "updated_at": "2014-08-20T22:07:22Z",
    "closed_at": "2014-08-20T22:07:22Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/866",
      "html_url": "https://github.com/browserify/browserify/pull/866",
      "diff_url": "https://github.com/browserify/browserify/pull/866.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/866.patch",
      "merged_at": null
    },
    "body": "Should fix issue https://github.com/substack/node-browserify/issues/796. Allows for ignoring of modules again.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/866/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/866/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/865",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/865/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/865/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/865/events",
    "html_url": "https://github.com/browserify/browserify/issues/865",
    "id": 40300829,
    "node_id": "MDU6SXNzdWU0MDMwMDgyOQ==",
    "number": 865,
    "title": "Cannot find module '...\\src\\*.js', windows",
    "user": {
      "login": "dy",
      "id": 300067,
      "node_id": "MDQ6VXNlcjMwMDA2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/300067?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dy",
      "html_url": "https://github.com/dy",
      "followers_url": "https://api.github.com/users/dy/followers",
      "following_url": "https://api.github.com/users/dy/following{/other_user}",
      "gists_url": "https://api.github.com/users/dy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dy/subscriptions",
      "organizations_url": "https://api.github.com/users/dy/orgs",
      "repos_url": "https://api.github.com/users/dy/repos",
      "events_url": "https://api.github.com/users/dy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-08-14T21:23:11Z",
    "updated_at": "2015-03-17T13:32:26Z",
    "closed_at": "2014-08-14T21:34:32Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When I run `browserify src/*.js` in windows terminal I get:\n\n``` shell\nError: Cannot find module 'C:\\Users\\dmitry\\Dropbox\\Projects\\mod\\src\\*.js' from 'C:\\Users\\dmitry\\Dropbox\\Projects\\mod'\n    at C:\\Users\\dmitry\\Dropbox\\Projects\\mod\\node_modules\\browserify\\node_modules\\resolve\\lib\\async.js:42:25\n    at load (C:\\Users\\dmitry\\Dropbox\\Projects\\mod\\node_modules\\browserify\\node_modules\\resolve\\lib\\async.js:60:43)\n    at C:\\Users\\dmitry\\Dropbox\\Projects\\mod\\node_modules\\browserify\\node_modules\\resolve\\lib\\async.js:66:22\n    at C:\\Users\\dmitry\\Dropbox\\Projects\\mod\\node_modules\\browserify\\node_modules\\resolve\\lib\\async.js:21:47\n    at Object.oncomplete (fs.js:107:15)\n```\n\nThe same happens if I call `npm run build`, where `build` is `browserify src/*.js > dist/bundle.js`.\nIf I use an alternate terminal (git bash), everything works fine, but I still can’t fix the npm task.\n\nI could think that wildcards are badly parsed in windows, but `cat src/*.js > dist/mod.js`, works alright.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/865/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/865/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/864",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/864/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/864/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/864/events",
    "html_url": "https://github.com/browserify/browserify/issues/864",
    "id": 40268853,
    "node_id": "MDU6SXNzdWU0MDI2ODg1Mw==",
    "number": 864,
    "title": "Npm linked modules show up three times in bundle, with HEAD version overwriting linked version",
    "user": {
      "login": "dey-dey",
      "id": 796926,
      "node_id": "MDQ6VXNlcjc5NjkyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/796926?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dey-dey",
      "html_url": "https://github.com/dey-dey",
      "followers_url": "https://api.github.com/users/dey-dey/followers",
      "following_url": "https://api.github.com/users/dey-dey/following{/other_user}",
      "gists_url": "https://api.github.com/users/dey-dey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dey-dey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dey-dey/subscriptions",
      "organizations_url": "https://api.github.com/users/dey-dey/orgs",
      "repos_url": "https://api.github.com/users/dey-dey/repos",
      "events_url": "https://api.github.com/users/dey-dey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dey-dey/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-08-14T15:50:12Z",
    "updated_at": "2014-08-14T15:59:22Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/864/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/864/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/863",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/863/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/863/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/863/events",
    "html_url": "https://github.com/browserify/browserify/issues/863",
    "id": 40263608,
    "node_id": "MDU6SXNzdWU0MDI2MzYwOA==",
    "number": 863,
    "title": "Allowing to exclude node_modules",
    "user": {
      "login": "maelp",
      "id": 15458,
      "node_id": "MDQ6VXNlcjE1NDU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/15458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maelp",
      "html_url": "https://github.com/maelp",
      "followers_url": "https://api.github.com/users/maelp/followers",
      "following_url": "https://api.github.com/users/maelp/following{/other_user}",
      "gists_url": "https://api.github.com/users/maelp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maelp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maelp/subscriptions",
      "organizations_url": "https://api.github.com/users/maelp/orgs",
      "repos_url": "https://api.github.com/users/maelp/repos",
      "events_url": "https://api.github.com/users/maelp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maelp/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-08-14T15:09:24Z",
    "updated_at": "2014-08-14T15:33:51Z",
    "closed_at": "2014-08-14T15:33:51Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Here is what I'm doing with Gulp:\n- creating a `dependencies.js` file which uses `bundle.require` to export lodash, d3, ...\n- creating a `app.js` file which uses `bundle.external` to tell `browserify` not to resolve lodash, d3, ...\n- my `Gulpfile.js` uses lodash for convenience, so it is in my `node_modules` directory\n\nthe app.js file does:\n\n```\nvar d3 = require('d3'); // works fine\nvar lodash = require('lodash'); // error: Cannot find module 'Hze43j'\nvar lodash = require('' + 'lodash'); // works\n```\n\nThe problem is that `browserify` (or perhaps `gulp-browserify` which I use?) tries to be smart during compile-time and tries to replace `require('lodash')` with a `require('Hze43j')` which must correspond to `node_modules/lodash` (which I do not include in my build since I use a `bundle.external('lodash')`), and does not try to do it when I do the `require('' + 'lodash')`\n\nIs it possible to tell `browserify` to not try to modify module names that are declared as external even if they appear in the `node_modules` directory?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/863/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/863/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/862",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/862/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/862/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/862/events",
    "html_url": "https://github.com/browserify/browserify/pull/862",
    "id": 40263217,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTk3OTMwNTI=",
    "number": 862,
    "title": "Remove array support description in `readme` #859",
    "user": {
      "login": "teabyii",
      "id": 4496552,
      "node_id": "MDQ6VXNlcjQ0OTY1NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4496552?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/teabyii",
      "html_url": "https://github.com/teabyii",
      "followers_url": "https://api.github.com/users/teabyii/followers",
      "following_url": "https://api.github.com/users/teabyii/following{/other_user}",
      "gists_url": "https://api.github.com/users/teabyii/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/teabyii/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/teabyii/subscriptions",
      "organizations_url": "https://api.github.com/users/teabyii/orgs",
      "repos_url": "https://api.github.com/users/teabyii/repos",
      "events_url": "https://api.github.com/users/teabyii/events{/privacy}",
      "received_events_url": "https://api.github.com/users/teabyii/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-08-14T15:05:34Z",
    "updated_at": "2014-09-12T15:24:03Z",
    "closed_at": "2014-09-12T15:24:03Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/862",
      "html_url": "https://github.com/browserify/browserify/pull/862",
      "diff_url": "https://github.com/browserify/browserify/pull/862.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/862.patch",
      "merged_at": null
    },
    "body": "Just update document for some APIs without array support\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/862/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/862/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/861",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/861/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/861/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/861/events",
    "html_url": "https://github.com/browserify/browserify/issues/861",
    "id": 40176577,
    "node_id": "MDU6SXNzdWU0MDE3NjU3Nw==",
    "number": 861,
    "title": "No transforms paths when inner `require` and `-r` using same module",
    "user": {
      "login": "teabyii",
      "id": 4496552,
      "node_id": "MDQ6VXNlcjQ0OTY1NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4496552?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/teabyii",
      "html_url": "https://github.com/teabyii",
      "followers_url": "https://api.github.com/users/teabyii/followers",
      "following_url": "https://api.github.com/users/teabyii/following{/other_user}",
      "gists_url": "https://api.github.com/users/teabyii/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/teabyii/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/teabyii/subscriptions",
      "organizations_url": "https://api.github.com/users/teabyii/orgs",
      "repos_url": "https://api.github.com/users/teabyii/repos",
      "events_url": "https://api.github.com/users/teabyii/events{/privacy}",
      "received_events_url": "https://api.github.com/users/teabyii/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2014-08-13T17:10:48Z",
    "updated_at": "2016-09-30T12:10:00Z",
    "closed_at": "2016-09-30T12:10:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I create 2 files in `/assets/`:\n\n``` js\n// assets/foo.js\nvar a = require('./bar.js');\nconsole.log(a);\n```\n\n``` js\n// assets/bar.js\nmodule.exports = {\n  name: 'hello world!'\n}\n```\n\nThen run `browserify ./assets/foo.js -r ./assets/bar.js > bundle.js`, will take an error in browser: `Cannot find module './bar.js'`.\n\nI should write `require('./assets/bar.js')`, but it is not a right path in script. Have a good solution?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/861/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/861/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/860",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/860/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/860/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/860/events",
    "html_url": "https://github.com/browserify/browserify/issues/860",
    "id": 40174097,
    "node_id": "MDU6SXNzdWU0MDE3NDA5Nw==",
    "number": 860,
    "title": "BUG: -r ./foo.js and then -x ./foo.js does not work for relative modules",
    "user": {
      "login": "teehemkay",
      "id": 4826,
      "node_id": "MDQ6VXNlcjQ4MjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4826?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/teehemkay",
      "html_url": "https://github.com/teehemkay",
      "followers_url": "https://api.github.com/users/teehemkay/followers",
      "following_url": "https://api.github.com/users/teehemkay/following{/other_user}",
      "gists_url": "https://api.github.com/users/teehemkay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/teehemkay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/teehemkay/subscriptions",
      "organizations_url": "https://api.github.com/users/teehemkay/orgs",
      "repos_url": "https://api.github.com/users/teehemkay/repos",
      "events_url": "https://api.github.com/users/teehemkay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/teehemkay/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-08-13T16:44:50Z",
    "updated_at": "2014-10-25T12:34:05Z",
    "closed_at": "2014-10-25T12:34:05Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I just followed the example in the README under Multiple Bundles\n\nhttps://github.com/substack/node-browserify/tree/8c182ca62b6f5048c37ef9ea6177bc228287c026#multiple-bundles\n\nWhen I try to load either the beep or the boop page, I get the following error: \n\n```\nUncaught Error: Cannot find module '/robot.js' \n```\n\nThe problem seems to be that the id/label `/robot.js` generated for the externalized module `./robot.js` is bogus. Looking at generated bundles for both `boop.js` and `beep.js`, once can see that the dependency array is:\n\n```\n[\"./robot.js\":\"/robot.j\"]                      // note the missing '.' in the value.\n```\n\nThe `common.js` dependency array has a module id of `./robot.js` for the `./robot.js` module.\n\nWhen `--external'lizing` an _external dependency_ (i.e. one residing in a node_modules directory), things work correctly (in fact the for `--external` only deals with an _external dependency_ not a _relative_ one_)\n\n(BTW,  if I understand correctly, the term _external_ is used to denote two very different things in the README: bundle.require()able module for `--external` and module residing in the `node_modules` directory for  `--no-bundle-external`)\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/860/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/860/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/859",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/859/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/859/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/859/events",
    "html_url": "https://github.com/browserify/browserify/issues/859",
    "id": 40158668,
    "node_id": "MDU6SXNzdWU0MDE1ODY2OA==",
    "number": 859,
    "title": "add(file) and require(fil) does not support arrays anymore",
    "user": {
      "login": "torarnek",
      "id": 283192,
      "node_id": "MDQ6VXNlcjI4MzE5Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/283192?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/torarnek",
      "html_url": "https://github.com/torarnek",
      "followers_url": "https://api.github.com/users/torarnek/followers",
      "following_url": "https://api.github.com/users/torarnek/following{/other_user}",
      "gists_url": "https://api.github.com/users/torarnek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/torarnek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/torarnek/subscriptions",
      "organizations_url": "https://api.github.com/users/torarnek/orgs",
      "repos_url": "https://api.github.com/users/torarnek/repos",
      "events_url": "https://api.github.com/users/torarnek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/torarnek/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-08-13T14:16:34Z",
    "updated_at": "2018-01-04T10:58:09Z",
    "closed_at": "2018-01-04T10:58:09Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This used to work:\nvar b = browserify();\nb.add([\"foo.js\",\"bar.js\"];\nb.require([\"foo.js\",\"bar.js\"];\n\nIt fails with: Error: path must be a string\n\nVersion: 5.9.3\n\nFull stack:\nevents.js:72\n        throw er; // Unhandled 'error' event\n              ^\nError: path must be a string\n    at /Users/torkvalo/oppdrag/app-main/web/node_modules/browserify/node_modules/resolve/lib/async.js:15:16\n    at process._tickCallback (node.js:419:13)\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/859/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/859/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/858",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/858/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/858/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/858/events",
    "html_url": "https://github.com/browserify/browserify/issues/858",
    "id": 40151442,
    "node_id": "MDU6SXNzdWU0MDE1MTQ0Mg==",
    "number": 858,
    "title": "Why can't browserify also bundle AMD modules?",
    "user": {
      "login": "mrjoelkemp",
      "id": 865203,
      "node_id": "MDQ6VXNlcjg2NTIwMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/865203?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrjoelkemp",
      "html_url": "https://github.com/mrjoelkemp",
      "followers_url": "https://api.github.com/users/mrjoelkemp/followers",
      "following_url": "https://api.github.com/users/mrjoelkemp/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrjoelkemp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrjoelkemp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrjoelkemp/subscriptions",
      "organizations_url": "https://api.github.com/users/mrjoelkemp/orgs",
      "repos_url": "https://api.github.com/users/mrjoelkemp/repos",
      "events_url": "https://api.github.com/users/mrjoelkemp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrjoelkemp/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-08-13T12:57:55Z",
    "updated_at": "2014-08-13T12:58:52Z",
    "closed_at": "2014-08-13T12:58:52Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "It would be great to be able to use AMD modules within a CommonJS codebase. [jrburke/notobo](https://github.com/jrburke/notobo) is working on the reverse, but I don't fully understand the blockers that stop browserify from pulling AMD module dependencies and passing them along to browser-pack.\n\nAmdify isn't what I'm after. That goes CJS -> AMD. \n\nIs this desirable and/or feasible? If feasible, would you be open to a PR that introduced this functionality?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/858/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/858/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/857",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/857/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/857/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/857/events",
    "html_url": "https://github.com/browserify/browserify/issues/857",
    "id": 40076473,
    "node_id": "MDU6SXNzdWU0MDA3NjQ3Mw==",
    "number": 857,
    "title": "Require -g (global) node_modules?",
    "user": {
      "login": "DylanPiercey",
      "id": 4985201,
      "node_id": "MDQ6VXNlcjQ5ODUyMDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4985201?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DylanPiercey",
      "html_url": "https://github.com/DylanPiercey",
      "followers_url": "https://api.github.com/users/DylanPiercey/followers",
      "following_url": "https://api.github.com/users/DylanPiercey/following{/other_user}",
      "gists_url": "https://api.github.com/users/DylanPiercey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DylanPiercey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DylanPiercey/subscriptions",
      "organizations_url": "https://api.github.com/users/DylanPiercey/orgs",
      "repos_url": "https://api.github.com/users/DylanPiercey/repos",
      "events_url": "https://api.github.com/users/DylanPiercey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DylanPiercey/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-08-12T17:03:43Z",
    "updated_at": "2017-11-17T11:16:51Z",
    "closed_at": "2017-11-17T11:16:51Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Some utilities like \"sugarjs\" I have installed globally on my computer with\n\n```\nnpm install sugar -g\n```\n\nHowever when I try to require sugar in a browserify file it wont work unless I install it locally. This works fine in my node servers, but i'd prefer not to install sugar again for each of my projects.\n\nIs it possible to require files from the global node_modules folder with browserify?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/857/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/857/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/856",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/856/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/856/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/856/events",
    "html_url": "https://github.com/browserify/browserify/issues/856",
    "id": 40032578,
    "node_id": "MDU6SXNzdWU0MDAzMjU3OA==",
    "number": 856,
    "title": "Need to expose all modules based on extension",
    "user": {
      "login": "w0rm",
      "id": 43472,
      "node_id": "MDQ6VXNlcjQzNDcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/43472?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/w0rm",
      "html_url": "https://github.com/w0rm",
      "followers_url": "https://api.github.com/users/w0rm/followers",
      "following_url": "https://api.github.com/users/w0rm/following{/other_user}",
      "gists_url": "https://api.github.com/users/w0rm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/w0rm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/w0rm/subscriptions",
      "organizations_url": "https://api.github.com/users/w0rm/orgs",
      "repos_url": "https://api.github.com/users/w0rm/repos",
      "events_url": "https://api.github.com/users/w0rm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/w0rm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2014-08-12T08:00:13Z",
    "updated_at": "2015-02-16T16:15:27Z",
    "closed_at": "2015-02-15T13:10:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I need to expose all modules based on extension when combining bundle. I have tried this, but it didn't work (got me `[Error: write after end]` for each file).\n\n```\n.on('file', function (file, id) {\n      if (id.substr(id.length - 4, 4) === 'nunj') b.require(id)\n})\n```\n\nIs there any other way to hook into pipeline where `b.require` can be called for each file?\n\nP.S. need this to overcome [a problem with nunjucksify](https://github.com/rotundasoftware/nunjucksify/issues/2)\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/856/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/856/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/855",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/855/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/855/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/855/events",
    "html_url": "https://github.com/browserify/browserify/issues/855",
    "id": 39880570,
    "node_id": "MDU6SXNzdWUzOTg4MDU3MA==",
    "number": 855,
    "title": "Transforms do not seem to process files passed to the `--require` option",
    "user": {
      "login": "davidbonnet",
      "id": 297345,
      "node_id": "MDQ6VXNlcjI5NzM0NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/297345?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidbonnet",
      "html_url": "https://github.com/davidbonnet",
      "followers_url": "https://api.github.com/users/davidbonnet/followers",
      "following_url": "https://api.github.com/users/davidbonnet/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidbonnet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidbonnet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidbonnet/subscriptions",
      "organizations_url": "https://api.github.com/users/davidbonnet/orgs",
      "repos_url": "https://api.github.com/users/davidbonnet/repos",
      "events_url": "https://api.github.com/users/davidbonnet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidbonnet/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2014-08-09T07:41:51Z",
    "updated_at": "2014-10-13T13:49:02Z",
    "closed_at": "2014-10-08T00:18:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This bug only happens with browserify@5.x.x. It works fine on browserify@4.x.x.\n\nSay I have a simple CoffeeScript file `script.coffee`. If I use browserify to compile it:\n\n```\nbrowserify --extension=.coffee -t coffeeify -t [ envify --JS_ENV browser ] --no-builtins --require script.coffee:module > script.js\n```\n\nIt outputs an error that looks like it tried to parse CoffeeScript as JavaScript:\n\n```\nSyntaxError: Line 2: Unexpected token ILLEGAL while parsing script.coffee while parsing file: script.coffee\nat Stream.end (browserify/node_modules/insert-module-globals/index.js:72:21)\nat _end (node_modules/browserify/node_modules/insert-module-globals/node_modules/through/index.js:65:9)\nat Stream.stream.end (node_modules/browserify/node_modules/insert-module-globals/node_modules/through/index.js:74:5)\nat Transform.onend (node_modules/browserify/node_modules/readable-stream/lib/_stream_readable.js:505:10)\nat Transform.g (events.js:180:16)\nat Transform.EventEmitter.emit (events.js:117:20)\nat node_modules/browserify/node_modules/readable-stream/lib/_stream_readable.js:942:16\nat process._tickCallback (node.js:415:13)\n```\n\nIt works fine though if I compile it without the `--require` option:\n\n```\nbrowserify --extension=.coffee -t coffeeify -t [ envify --JS_ENV browser ] --no-builtins script.coffee > script.js\n```\n\n…making me believe that the transforms are not applied to files passed to the `--require` option.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/855/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/855/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/854",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/854/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/854/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/854/events",
    "html_url": "https://github.com/browserify/browserify/issues/854",
    "id": 39867756,
    "node_id": "MDU6SXNzdWUzOTg2Nzc1Ng==",
    "number": 854,
    "title": "b.add won't accept an array",
    "user": {
      "login": "jprichardson",
      "id": 150063,
      "node_id": "MDQ6VXNlcjE1MDA2Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/150063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jprichardson",
      "html_url": "https://github.com/jprichardson",
      "followers_url": "https://api.github.com/users/jprichardson/followers",
      "following_url": "https://api.github.com/users/jprichardson/following{/other_user}",
      "gists_url": "https://api.github.com/users/jprichardson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jprichardson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jprichardson/subscriptions",
      "organizations_url": "https://api.github.com/users/jprichardson/orgs",
      "repos_url": "https://api.github.com/users/jprichardson/repos",
      "events_url": "https://api.github.com/users/jprichardson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jprichardson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-08-08T22:14:54Z",
    "updated_at": "2014-09-19T16:39:30Z",
    "closed_at": "2014-09-19T10:31:44Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "According to the current docs https://github.com/substack/node-browserify#baddfile-opts and using the latest `browserify@5.9.1` if you pass an array of files to `add` it throws an error `Error: path must be a string`. Not a big deal, but the documentation should probably be updated to reflect that it doesn't accept an array of files anymore.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/854/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/854/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/853",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/853/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/853/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/853/events",
    "html_url": "https://github.com/browserify/browserify/pull/853",
    "id": 39697606,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTk0NDk2Mjc=",
    "number": 853,
    "title": "Turn required relative file paths into absolute ones",
    "user": {
      "login": "ben-ng",
      "id": 543312,
      "node_id": "MDQ6VXNlcjU0MzMxMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/543312?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ben-ng",
      "html_url": "https://github.com/ben-ng",
      "followers_url": "https://api.github.com/users/ben-ng/followers",
      "following_url": "https://api.github.com/users/ben-ng/following{/other_user}",
      "gists_url": "https://api.github.com/users/ben-ng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ben-ng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ben-ng/subscriptions",
      "organizations_url": "https://api.github.com/users/ben-ng/orgs",
      "repos_url": "https://api.github.com/users/ben-ng/repos",
      "events_url": "https://api.github.com/users/ben-ng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ben-ng/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2014-08-07T06:45:50Z",
    "updated_at": "2014-10-04T06:20:04Z",
    "closed_at": "2014-10-04T05:05:35Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/browserify/browserify/pulls/853",
      "html_url": "https://github.com/browserify/browserify/pull/853",
      "diff_url": "https://github.com/browserify/browserify/pull/853.diff",
      "patch_url": "https://github.com/browserify/browserify/pull/853.patch",
      "merged_at": null
    },
    "body": "Entry scripts are showing up with relative paths in source maps, although transforms see an absolute path.\n\nRoot cause of https://github.com/ben-ng/minifyify/issues/54, because the file paths that are provided during the transform are absolute, while the file path in the source map is relative.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/853/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/853/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/852",
    "repository_url": "https://api.github.com/repos/browserify/browserify",
    "labels_url": "https://api.github.com/repos/browserify/browserify/issues/852/labels{/name}",
    "comments_url": "https://api.github.com/repos/browserify/browserify/issues/852/comments",
    "events_url": "https://api.github.com/repos/browserify/browserify/issues/852/events",
    "html_url": "https://github.com/browserify/browserify/issues/852",
    "id": 39669008,
    "node_id": "MDU6SXNzdWUzOTY2OTAwOA==",
    "number": 852,
    "title": "Individually bundle files",
    "user": {
      "login": "aldendaniels",
      "id": 4658558,
      "node_id": "MDQ6VXNlcjQ2NTg1NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4658558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aldendaniels",
      "html_url": "https://github.com/aldendaniels",
      "followers_url": "https://api.github.com/users/aldendaniels/followers",
      "following_url": "https://api.github.com/users/aldendaniels/following{/other_user}",
      "gists_url": "https://api.github.com/users/aldendaniels/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aldendaniels/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aldendaniels/subscriptions",
      "organizations_url": "https://api.github.com/users/aldendaniels/orgs",
      "repos_url": "https://api.github.com/users/aldendaniels/repos",
      "events_url": "https://api.github.com/users/aldendaniels/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aldendaniels/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-08-06T21:38:34Z",
    "updated_at": "2014-08-07T00:30:32Z",
    "closed_at": "2014-08-07T00:30:32Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "It would be great if browserify had an option to create independent bundles for all dependencies. Instead of outputting a single file, browserify would output one file per dependency to the provided output directory.\n\nWhen used via api, the call to `.bundle()` could return a listing of all output files.\n\nThis feature would allow for much better debugging in browsers with poor support for source maps. In my experience, even Chrome's support is quite buggy, so the ability to break out JS files in development would be a huge value add.\n\nLooks like @domenic created https://github.com/domenic/browserify-deoptimizer with this use-case in mind, but the module is not compatible with recent versions of browserify.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/852/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/browserify/browserify/issues/852/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  }
]