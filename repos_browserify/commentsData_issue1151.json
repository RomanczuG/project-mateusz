[
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/77615430",
    "html_url": "https://github.com/browserify/browserify/pull/1151#issuecomment-77615430",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1151",
    "id": 77615430,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NjE1NDMw",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-06T19:01:52Z",
    "updated_at": "2015-03-06T19:02:57Z",
    "author_association": "NONE",
    "body": "This seems pretty good and can avoid the huge slowness of derequire.  Pragma-wise, I like the simple compact strings but that decision should be up to you since you're taking the initiative here. If there are no other concerns from anyone else, just publish browserify-pragma to npm and I'll merge the changes into browser-pack and module-deps.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/77615430/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/77642608",
    "html_url": "https://github.com/browserify/browserify/pull/1151#issuecomment-77642608",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1151",
    "id": 77642608,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NjQyNjA4",
    "user": {
      "login": "jmm",
      "id": 129203,
      "node_id": "MDQ6VXNlcjEyOTIwMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129203?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmm",
      "html_url": "https://github.com/jmm",
      "followers_url": "https://api.github.com/users/jmm/followers",
      "following_url": "https://api.github.com/users/jmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmm/subscriptions",
      "organizations_url": "https://api.github.com/users/jmm/orgs",
      "repos_url": "https://api.github.com/users/jmm/repos",
      "events_url": "https://api.github.com/users/jmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-06T21:50:42Z",
    "updated_at": "2015-04-30T14:03:27Z",
    "author_association": "COLLABORATOR",
    "body": "Great, thanks for the consideration!\n\n> Pragma-wise, I like the simple compact strings but that decision should be up to you since you're taking the initiative here.\n\nOk, thanks. I'm leaning a bit towards one of the later formats like <code>(<i>JSON object</i>);</code>, because it leaves the door open to most readily embed more data in these things in a structured way in the future without changing the basic format, if that were to become desirable. (And to my mind the byte length it adds to the bundle is not unreasonable.) But I'm not married to any of them and I'm open to suggestion about what would be the wisest format. \n\nThanks for your feedback. For the string versions do you have an opinion on with / without version #? I just thought it might be a nice piece of metadata for debugging, but it's probably not essential. I'll mull this over more, and I'd love to hear comments from anyone else who has an opinion too. It would obviously be ideal to get it \"right\" the first time. @thlorenz @defunctzombie @hughsk @domenic @calvinmetcalf @feross @zertosh @dominictarr do you have an opinion?\n\n> If there are no other concerns from anyone else, just publish browserify-pragma to npm and I'll merge the changes into browser-pack and module-deps.\n\nFor now I've published [browserify-pragma@0.1.0](https://www.npmjs.com/package/browserify-pragma) to npm, utilizing the pragma format listed as \"current\" above. Needless to say I need to write some tests for this package.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/77642608/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/77644397",
    "html_url": "https://github.com/browserify/browserify/pull/1151#issuecomment-77644397",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1151",
    "id": 77644397,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NjQ0Mzk3",
    "user": {
      "login": "zertosh",
      "id": 830952,
      "node_id": "MDQ6VXNlcjgzMDk1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/830952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zertosh",
      "html_url": "https://github.com/zertosh",
      "followers_url": "https://api.github.com/users/zertosh/followers",
      "following_url": "https://api.github.com/users/zertosh/following{/other_user}",
      "gists_url": "https://api.github.com/users/zertosh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zertosh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zertosh/subscriptions",
      "organizations_url": "https://api.github.com/users/zertosh/orgs",
      "repos_url": "https://api.github.com/users/zertosh/repos",
      "events_url": "https://api.github.com/users/zertosh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zertosh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-06T22:02:43Z",
    "updated_at": "2015-03-06T22:02:43Z",
    "author_association": "MEMBER",
    "body": "Sounds interesting. Just as an FYI, I recently made some improvements to `derequire` that cut it's run time by more than 50% (see https://github.com/calvinmetcalf/derequire/pull/23). There are still more improvements that can be made there.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/77644397/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/77646948",
    "html_url": "https://github.com/browserify/browserify/pull/1151#issuecomment-77646948",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1151",
    "id": 77646948,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NjQ2OTQ4",
    "user": {
      "login": "jmm",
      "id": 129203,
      "node_id": "MDQ6VXNlcjEyOTIwMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129203?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmm",
      "html_url": "https://github.com/jmm",
      "followers_url": "https://api.github.com/users/jmm/followers",
      "following_url": "https://api.github.com/users/jmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmm/subscriptions",
      "organizations_url": "https://api.github.com/users/jmm/orgs",
      "repos_url": "https://api.github.com/users/jmm/repos",
      "events_url": "https://api.github.com/users/jmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-06T22:20:19Z",
    "updated_at": "2015-03-06T22:20:19Z",
    "author_association": "COLLABORATOR",
    "body": "@zertosh That's good to know. I wonder how desirable / necessary it is to avoid running transforms on an existing bundle.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/77646948/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/77648606",
    "html_url": "https://github.com/browserify/browserify/pull/1151#issuecomment-77648606",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1151",
    "id": 77648606,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NjQ4NjA2",
    "user": {
      "login": "jmm",
      "id": 129203,
      "node_id": "MDQ6VXNlcjEyOTIwMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129203?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmm",
      "html_url": "https://github.com/jmm",
      "followers_url": "https://api.github.com/users/jmm/followers",
      "following_url": "https://api.github.com/users/jmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmm/subscriptions",
      "organizations_url": "https://api.github.com/users/jmm/orgs",
      "repos_url": "https://api.github.com/users/jmm/repos",
      "events_url": "https://api.github.com/users/jmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-06T22:31:42Z",
    "updated_at": "2015-03-06T22:31:42Z",
    "author_association": "COLLABORATOR",
    "body": "@zertosh Do you have any idea how much more the performance could be improved? I'd have to double check, but I think I remember seeing an issue comment describing browserify as being slower by a factor of 10 due to derequire. If that's at all accurate then even a 50%+ faster derequire could still result in a significant slowdown in browserify.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/77648606/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/77653220",
    "html_url": "https://github.com/browserify/browserify/pull/1151#issuecomment-77653220",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1151",
    "id": 77653220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NjUzMjIw",
    "user": {
      "login": "zertosh",
      "id": 830952,
      "node_id": "MDQ6VXNlcjgzMDk1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/830952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zertosh",
      "html_url": "https://github.com/zertosh",
      "followers_url": "https://api.github.com/users/zertosh/followers",
      "following_url": "https://api.github.com/users/zertosh/following{/other_user}",
      "gists_url": "https://api.github.com/users/zertosh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zertosh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zertosh/subscriptions",
      "organizations_url": "https://api.github.com/users/zertosh/orgs",
      "repos_url": "https://api.github.com/users/zertosh/repos",
      "events_url": "https://api.github.com/users/zertosh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zertosh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-06T23:09:26Z",
    "updated_at": "2015-03-06T23:09:26Z",
    "author_association": "MEMBER",
    "body": "@jmm: The test suite runs in ~780ms. I just quickly switched it from `esprima-fb` to `acorn` and it ran in ~720ms. So that's another easy win (I'll put in a PR for that later). I have to see what it is exactly that `esrefactor` is doing, maybe that can be improved.\n\nSigh, I dream of a world where build tools passed around ASTs instead of raw source. I have high hopes for [estree](https://github.com/estree/estree), then maybe that'll happen.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/77653220/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/77676443",
    "html_url": "https://github.com/browserify/browserify/pull/1151#issuecomment-77676443",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1151",
    "id": 77676443,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3Njc2NDQz",
    "user": {
      "login": "zertosh",
      "id": 830952,
      "node_id": "MDQ6VXNlcjgzMDk1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/830952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zertosh",
      "html_url": "https://github.com/zertosh",
      "followers_url": "https://api.github.com/users/zertosh/followers",
      "following_url": "https://api.github.com/users/zertosh/following{/other_user}",
      "gists_url": "https://api.github.com/users/zertosh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zertosh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zertosh/subscriptions",
      "organizations_url": "https://api.github.com/users/zertosh/orgs",
      "repos_url": "https://api.github.com/users/zertosh/repos",
      "events_url": "https://api.github.com/users/zertosh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zertosh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-07T06:36:16Z",
    "updated_at": "2015-03-07T06:36:16Z",
    "author_association": "MEMBER",
    "body": "@jmm @calvinmetcalf, I managed to **really** improve `derequire`, there is a little bit more I can squeeze out of it, but I'll do that tomorrow (see https://github.com/calvinmetcalf/derequire/pull/26). The tests went from ~780ms to ~300ms, and derequiring `react-with-addons.js` went from 7.2s to 0.4s - yes a 95% drop.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/77676443/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/77725178",
    "html_url": "https://github.com/browserify/browserify/pull/1151#issuecomment-77725178",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1151",
    "id": 77725178,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NzI1MTc4",
    "user": {
      "login": "zertosh",
      "id": 830952,
      "node_id": "MDQ6VXNlcjgzMDk1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/830952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zertosh",
      "html_url": "https://github.com/zertosh",
      "followers_url": "https://api.github.com/users/zertosh/followers",
      "following_url": "https://api.github.com/users/zertosh/following{/other_user}",
      "gists_url": "https://api.github.com/users/zertosh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zertosh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zertosh/subscriptions",
      "organizations_url": "https://api.github.com/users/zertosh/orgs",
      "repos_url": "https://api.github.com/users/zertosh/repos",
      "events_url": "https://api.github.com/users/zertosh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zertosh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-08T00:37:50Z",
    "updated_at": "2015-03-08T00:37:50Z",
    "author_association": "MEMBER",
    "body": "@jmm https://github.com/calvinmetcalf/derequire/pull/26 is \"done\" if you want to give it a try. The final perf metrics are: To `derequire` `react-with-addon.js` for two tokens it took ~9387ms before, and now ~242ms.\n\n@substack After https://github.com/calvinmetcalf/derequire/pull/26 gets merged, I think it might be worth exploring bringing back `derequire` into `browserify`. It would be awesome if you could tell `browser-pack` what function name to use for `require`. This way, you could implement `derequire` as a plugin that ran after `label` on a per `row` basis so it can cache the results when doing incremental rebuilds.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/77725178/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/77746522",
    "html_url": "https://github.com/browserify/browserify/pull/1151#issuecomment-77746522",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1151",
    "id": 77746522,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NzQ2NTIy",
    "user": {
      "login": "calvinmetcalf",
      "id": 1128607,
      "node_id": "MDQ6VXNlcjExMjg2MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1128607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/calvinmetcalf",
      "html_url": "https://github.com/calvinmetcalf",
      "followers_url": "https://api.github.com/users/calvinmetcalf/followers",
      "following_url": "https://api.github.com/users/calvinmetcalf/following{/other_user}",
      "gists_url": "https://api.github.com/users/calvinmetcalf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/calvinmetcalf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/calvinmetcalf/subscriptions",
      "organizations_url": "https://api.github.com/users/calvinmetcalf/orgs",
      "repos_url": "https://api.github.com/users/calvinmetcalf/repos",
      "events_url": "https://api.github.com/users/calvinmetcalf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/calvinmetcalf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-08T12:37:01Z",
    "updated_at": "2015-03-08T12:37:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "confirmed, with @zertosh's changes the perf test went from 42127ms (aka 42 secconds) to 742ms\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/77746522/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/77847507",
    "html_url": "https://github.com/browserify/browserify/pull/1151#issuecomment-77847507",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1151",
    "id": 77847507,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3ODQ3NTA3",
    "user": {
      "login": "jmm",
      "id": 129203,
      "node_id": "MDQ6VXNlcjEyOTIwMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129203?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmm",
      "html_url": "https://github.com/jmm",
      "followers_url": "https://api.github.com/users/jmm/followers",
      "following_url": "https://api.github.com/users/jmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmm/subscriptions",
      "organizations_url": "https://api.github.com/users/jmm/orgs",
      "repos_url": "https://api.github.com/users/jmm/repos",
      "events_url": "https://api.github.com/users/jmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-09T12:53:44Z",
    "updated_at": "2015-03-09T12:53:44Z",
    "author_association": "COLLABORATOR",
    "body": "@zertosh \n\n> I managed to **really** improve derequire...yes a 95% drop.\n\nWow! Nice work.\n\n> This diff dramatically increases the speed of derequire by: (1) eliminating an unnecessary ast parse\n> ...\n> Sigh, I dream of a world where build tools passed around ASTs instead of raw source. I have high hopes for estree, then maybe that'll happen.\n> ...\n> This way, you could implement derequire as a plugin that ran after label on a per row basis so it can cache the results when doing incremental rebuilds.\n\nTo your point, if derequire is integrated directly with browserify, could you conceivably have detective return an AST and have derequire consume it, saving an additional 1 small parse per row or 1 big parse per bundle?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/77847507/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/77857297",
    "html_url": "https://github.com/browserify/browserify/pull/1151#issuecomment-77857297",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1151",
    "id": 77857297,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3ODU3Mjk3",
    "user": {
      "login": "calvinmetcalf",
      "id": 1128607,
      "node_id": "MDQ6VXNlcjExMjg2MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1128607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/calvinmetcalf",
      "html_url": "https://github.com/calvinmetcalf",
      "followers_url": "https://api.github.com/users/calvinmetcalf/followers",
      "following_url": "https://api.github.com/users/calvinmetcalf/following{/other_user}",
      "gists_url": "https://api.github.com/users/calvinmetcalf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/calvinmetcalf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/calvinmetcalf/subscriptions",
      "organizations_url": "https://api.github.com/users/calvinmetcalf/orgs",
      "repos_url": "https://api.github.com/users/calvinmetcalf/repos",
      "events_url": "https://api.github.com/users/calvinmetcalf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/calvinmetcalf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-09T13:56:34Z",
    "updated_at": "2015-03-09T13:56:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jmm  we could go one farther actually and since detective is finding all of the requires detective could also change the function name as it finds it and then in the latter step when browserify wraps in in the `function (require, exports, module){}` it could use the modified name for require.  This would likely be the most performant version possible but would have some issues with people not wanting their code mangled like that.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/77857297/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/77859778",
    "html_url": "https://github.com/browserify/browserify/pull/1151#issuecomment-77859778",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1151",
    "id": 77859778,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3ODU5Nzc4",
    "user": {
      "login": "jmm",
      "id": 129203,
      "node_id": "MDQ6VXNlcjEyOTIwMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129203?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmm",
      "html_url": "https://github.com/jmm",
      "followers_url": "https://api.github.com/users/jmm/followers",
      "following_url": "https://api.github.com/users/jmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmm/subscriptions",
      "organizations_url": "https://api.github.com/users/jmm/orgs",
      "repos_url": "https://api.github.com/users/jmm/repos",
      "events_url": "https://api.github.com/users/jmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-09T14:10:49Z",
    "updated_at": "2015-03-09T14:10:49Z",
    "author_association": "COLLABORATOR",
    "body": "@calvinmetcalf Yeah, I considered that too. I haven't thought it all the way through yet, but I figured if derequire performance is now acceptable it might be a cleaner separation of concerns to leave detective doing what it does (but return the AST) and let derequire do its mangling thing. As everyone has noted, either way it requires integration with browser-pack (which I don't think will be hard to implement).\n\nAre there any good use cases for people to care about this and not want the mangling? browser-unpack'ing a bundle to do something with it is one I guess. So either way, whether detective or derequire does mangling maybe there should be an option to enable / disable it. In that case maybe the pragma proposal this PR is about would still make sense so that browserify will recognize its own unmangled bundles.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/77859778/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/77862491",
    "html_url": "https://github.com/browserify/browserify/pull/1151#issuecomment-77862491",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1151",
    "id": 77862491,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3ODYyNDkx",
    "user": {
      "login": "zertosh",
      "id": 830952,
      "node_id": "MDQ6VXNlcjgzMDk1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/830952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zertosh",
      "html_url": "https://github.com/zertosh",
      "followers_url": "https://api.github.com/users/zertosh/followers",
      "following_url": "https://api.github.com/users/zertosh/following{/other_user}",
      "gists_url": "https://api.github.com/users/zertosh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zertosh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zertosh/subscriptions",
      "organizations_url": "https://api.github.com/users/zertosh/orgs",
      "repos_url": "https://api.github.com/users/zertosh/repos",
      "events_url": "https://api.github.com/users/zertosh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zertosh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-09T14:25:47Z",
    "updated_at": "2015-03-09T14:25:47Z",
    "author_association": "MEMBER",
    "body": "@jmm @calvinmetcalf \n\n>  could you conceivably have detective return an AST and have derequire consume it\n\nYeah, this would be a small change in `derequire`. In `detective`, we'd have to make sure to pass `ranges` as `true`, and have it return the AST to `module-deps`, which then returns it to `browserify`.\n\n> Are there any good use cases for people to care about this and not want the mangling? \n\nOh yeah, as you noted, `browser-unpack` is one - so `bundle-collapser` too. Which makes this all really tricky because that's a really important tool. I'm not sure what's the right path here.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/77862491/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/77864901",
    "html_url": "https://github.com/browserify/browserify/pull/1151#issuecomment-77864901",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1151",
    "id": 77864901,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3ODY0OTAx",
    "user": {
      "login": "jmm",
      "id": 129203,
      "node_id": "MDQ6VXNlcjEyOTIwMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129203?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmm",
      "html_url": "https://github.com/jmm",
      "followers_url": "https://api.github.com/users/jmm/followers",
      "following_url": "https://api.github.com/users/jmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmm/subscriptions",
      "organizations_url": "https://api.github.com/users/jmm/orgs",
      "repos_url": "https://api.github.com/users/jmm/repos",
      "events_url": "https://api.github.com/users/jmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-09T14:38:32Z",
    "updated_at": "2015-03-09T14:38:32Z",
    "author_association": "COLLABORATOR",
    "body": "@zertosh \n\n> and have it return the AST to module-deps, which then returns it to browserify\n\nYeah, I was thinking that if this were implemented in the plugin fashion you suggested, module-deps could just populate `row.ast`.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/77864901/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/77865767",
    "html_url": "https://github.com/browserify/browserify/pull/1151#issuecomment-77865767",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1151",
    "id": 77865767,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3ODY1NzY3",
    "user": {
      "login": "jmm",
      "id": 129203,
      "node_id": "MDQ6VXNlcjEyOTIwMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129203?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmm",
      "html_url": "https://github.com/jmm",
      "followers_url": "https://api.github.com/users/jmm/followers",
      "following_url": "https://api.github.com/users/jmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmm/subscriptions",
      "organizations_url": "https://api.github.com/users/jmm/orgs",
      "repos_url": "https://api.github.com/users/jmm/repos",
      "events_url": "https://api.github.com/users/jmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-09T14:42:38Z",
    "updated_at": "2015-03-09T14:42:38Z",
    "author_association": "COLLABORATOR",
    "body": "@zertosh \n\n> Oh yeah, as you noted, browser-unpack is one - so bundle-collapser too. Which makes this all really tricky because that's a really important tool. I'm not sure what's the right path here.\n\nHow feasible would it be to bless something, `_dereq_` or whatever it needs to be, as a reserved function name that gets special treatment in browserify like `require` does and make the necessary tools aware of it so that they're both handled the same?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/77865767/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/77871130",
    "html_url": "https://github.com/browserify/browserify/pull/1151#issuecomment-77871130",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1151",
    "id": 77871130,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3ODcxMTMw",
    "user": {
      "login": "calvinmetcalf",
      "id": 1128607,
      "node_id": "MDQ6VXNlcjExMjg2MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1128607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/calvinmetcalf",
      "html_url": "https://github.com/calvinmetcalf",
      "followers_url": "https://api.github.com/users/calvinmetcalf/followers",
      "following_url": "https://api.github.com/users/calvinmetcalf/following{/other_user}",
      "gists_url": "https://api.github.com/users/calvinmetcalf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/calvinmetcalf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/calvinmetcalf/subscriptions",
      "organizations_url": "https://api.github.com/users/calvinmetcalf/orgs",
      "repos_url": "https://api.github.com/users/calvinmetcalf/repos",
      "events_url": "https://api.github.com/users/calvinmetcalf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/calvinmetcalf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-09T15:08:54Z",
    "updated_at": "2015-03-09T15:08:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "> How feasible would it be to bless something, _dereq_ or whatever it needs to be, as a reserved function name that gets special treatment in browserify like require does and make the necessary tools aware of it so that they're both handled the same?\n\nok so the issue there is that the output of browserify isn't the only place derequrie is used, ember uses it BEFORE it gets sent to browserify because they locally define a function called require that screws up browserifying.\n\nmore generally \n\noriginally derequire modified the ast and then used that to recreate the code.  This lead to people complaining that it was messing up their white space and inappropriately adding/remove semicolons, so I switched to modifying the code as a string instead of using the AST to recreate the code.  This is in line with what browserify does where it creates AST to find the requires but it does not use that to create the final output , so solution might be to pass the code and ast to derequire and then return modified code.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/77871130/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/78176052",
    "html_url": "https://github.com/browserify/browserify/pull/1151#issuecomment-78176052",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1151",
    "id": 78176052,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MTc2MDUy",
    "user": {
      "login": "zertosh",
      "id": 830952,
      "node_id": "MDQ6VXNlcjgzMDk1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/830952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zertosh",
      "html_url": "https://github.com/zertosh",
      "followers_url": "https://api.github.com/users/zertosh/followers",
      "following_url": "https://api.github.com/users/zertosh/following{/other_user}",
      "gists_url": "https://api.github.com/users/zertosh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zertosh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zertosh/subscriptions",
      "organizations_url": "https://api.github.com/users/zertosh/orgs",
      "repos_url": "https://api.github.com/users/zertosh/repos",
      "events_url": "https://api.github.com/users/zertosh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zertosh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-11T00:09:40Z",
    "updated_at": "2015-03-11T00:09:40Z",
    "author_association": "MEMBER",
    "body": "@jmm: I included an _undocumented_ [browserify plugin](https://github.com/calvinmetcalf/derequire/blob/master/plugin.js) that runs after the `pack` step. When you use `bundle-collapser` as a plugin, it runs after `label` (so before `pack`). So it's fine to run both as plugins. It does add time to rebuilds - but not that much. Do you think the added complexity of having \"blessed\" functions is worth it?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/78176052/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/78289693",
    "html_url": "https://github.com/browserify/browserify/pull/1151#issuecomment-78289693",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1151",
    "id": 78289693,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4Mjg5Njkz",
    "user": {
      "login": "jmm",
      "id": 129203,
      "node_id": "MDQ6VXNlcjEyOTIwMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129203?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmm",
      "html_url": "https://github.com/jmm",
      "followers_url": "https://api.github.com/users/jmm/followers",
      "following_url": "https://api.github.com/users/jmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmm/subscriptions",
      "organizations_url": "https://api.github.com/users/jmm/orgs",
      "repos_url": "https://api.github.com/users/jmm/repos",
      "events_url": "https://api.github.com/users/jmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-11T15:44:39Z",
    "updated_at": "2015-03-11T15:44:39Z",
    "author_association": "COLLABORATOR",
    "body": "@zertosh\n\n> I included an _undocumented_ browserify plugin that runs after the `pack` step....\n\nOk, so if / when derequire is integrated with browserify that'd probably be the way.\n\n> Do you think the added complexity of having \"blessed\" functions is worth it?\n\nI was just wondering if that might be a feasible way to run derequire when browserifying and still be able to use tools like browser-unpack / bundle-collapser later (by making them treat `_dereq_()` like `require()`). As @calvinmetcalf pointed out it's not as simple as being able to give that kind of special treatment to `_dereq_`. I guess browserify could designate it's own replacement (something other than `_dereq_`) as special and related tools could handle that specially.\n\nWhat are your opinions @zertosh @calvinmetcalf on these issues:\n- Should users get to care about what's in the output, specifically whether it contains the original `require()` calls or has them replaced with `_dereq_()` or something else? For example, to later run bundle-collapser, or browser-unpack to roundtrip a bundle back to the original source files.\n- To that point, if derequire is integrated with browserify do you see it being mandatory or optional? (And enabled / disabled by default?)\n\nI'm trying to figure out if integrating derequire with browserify would consistently solve the use case of re-bundling a bundle. Was that the main reason it was integrated previously, or was it for the sake of AMD loaders?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/78289693/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/78300343",
    "html_url": "https://github.com/browserify/browserify/pull/1151#issuecomment-78300343",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1151",
    "id": 78300343,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MzAwMzQz",
    "user": {
      "login": "calvinmetcalf",
      "id": 1128607,
      "node_id": "MDQ6VXNlcjExMjg2MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1128607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/calvinmetcalf",
      "html_url": "https://github.com/calvinmetcalf",
      "followers_url": "https://api.github.com/users/calvinmetcalf/followers",
      "following_url": "https://api.github.com/users/calvinmetcalf/following{/other_user}",
      "gists_url": "https://api.github.com/users/calvinmetcalf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/calvinmetcalf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/calvinmetcalf/subscriptions",
      "organizations_url": "https://api.github.com/users/calvinmetcalf/orgs",
      "repos_url": "https://api.github.com/users/calvinmetcalf/repos",
      "events_url": "https://api.github.com/users/calvinmetcalf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/calvinmetcalf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-11T16:32:41Z",
    "updated_at": "2015-03-11T16:32:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "so previously when derequrie was included in browserify it was only run with the standalone option was passed, the idea being that standalone creates a self contained bundle you can use anywhere and thus changing the requires makes sense \n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/78300343/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/78315732",
    "html_url": "https://github.com/browserify/browserify/pull/1151#issuecomment-78315732",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1151",
    "id": 78315732,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MzE1NzMy",
    "user": {
      "login": "jmm",
      "id": 129203,
      "node_id": "MDQ6VXNlcjEyOTIwMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129203?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmm",
      "html_url": "https://github.com/jmm",
      "followers_url": "https://api.github.com/users/jmm/followers",
      "following_url": "https://api.github.com/users/jmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmm/subscriptions",
      "organizations_url": "https://api.github.com/users/jmm/orgs",
      "repos_url": "https://api.github.com/users/jmm/repos",
      "events_url": "https://api.github.com/users/jmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-11T17:43:32Z",
    "updated_at": "2015-03-11T17:43:32Z",
    "author_association": "COLLABORATOR",
    "body": "@calvinmetcalf Right, understood. My understanding is that derequire has at least 3 use cases / results in connection with browserify:\n\n1) Feed derequire's output to browserify as input (as in your ember example).\n\n2) Feed browserify's output to it to accomodate AMD loaders.\n\n3) Feed browserify's output to it to prevent browserify from parsing `require()` calls when the bundle becomes input to a new bundle.\n\nWas # 3 the / a reason for incorporating derequire into browserify before, or was it just a side effect of incorporating it to achieve # 2?\n\nI just checked and browser-unpack will unpack a standalone bundle, so that brings me back to the questions in my previous post.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/78315732/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/78330395",
    "html_url": "https://github.com/browserify/browserify/pull/1151#issuecomment-78330395",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1151",
    "id": 78330395,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MzMwMzk1",
    "user": {
      "login": "calvinmetcalf",
      "id": 1128607,
      "node_id": "MDQ6VXNlcjExMjg2MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1128607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/calvinmetcalf",
      "html_url": "https://github.com/calvinmetcalf",
      "followers_url": "https://api.github.com/users/calvinmetcalf/followers",
      "following_url": "https://api.github.com/users/calvinmetcalf/following{/other_user}",
      "gists_url": "https://api.github.com/users/calvinmetcalf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/calvinmetcalf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/calvinmetcalf/subscriptions",
      "organizations_url": "https://api.github.com/users/calvinmetcalf/orgs",
      "repos_url": "https://api.github.com/users/calvinmetcalf/repos",
      "events_url": "https://api.github.com/users/calvinmetcalf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/calvinmetcalf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-11T18:11:47Z",
    "updated_at": "2015-03-11T18:11:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "#2 was my original aim, specifically dojo is fucking terrible\n\nOn Wed, Mar 11, 2015 at 1:43 PM Jesse McCarthy notifications@github.com\nwrote:\n\n> @calvinmetcalf https://github.com/calvinmetcalf Right, understood. My\n> understanding is that derequire has at least 3 use cases / results in\n> connection with browserify:\n> \n> 1) Feed derequire's output to browserify as input (as in your ember\n> example).\n> \n> 2) Feed browserify's output to it to accomodate AMD loaders.\n> \n> 3) Feed browserify's output to it to prevent browserify from parsing\n> require() calls when the bundle becomes input to a new bundle.\n> \n> Was # 3 the / a reason for incorporating derequire into browserify before,\n> or was it just a side effect of incorporating it to achieve # 2?\n> \n> I just checked and browser-unpack will unpack a standalone bundle, so that\n> brings me back to the questions in my previous post.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/substack/node-browserify/pull/1151#issuecomment-78315732\n> .\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/78330395/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/78340284",
    "html_url": "https://github.com/browserify/browserify/pull/1151#issuecomment-78340284",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1151",
    "id": 78340284,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MzQwMjg0",
    "user": {
      "login": "zertosh",
      "id": 830952,
      "node_id": "MDQ6VXNlcjgzMDk1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/830952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zertosh",
      "html_url": "https://github.com/zertosh",
      "followers_url": "https://api.github.com/users/zertosh/followers",
      "following_url": "https://api.github.com/users/zertosh/following{/other_user}",
      "gists_url": "https://api.github.com/users/zertosh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zertosh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zertosh/subscriptions",
      "organizations_url": "https://api.github.com/users/zertosh/orgs",
      "repos_url": "https://api.github.com/users/zertosh/repos",
      "events_url": "https://api.github.com/users/zertosh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zertosh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-11T18:29:16Z",
    "updated_at": "2015-03-11T18:29:16Z",
    "author_association": "MEMBER",
    "body": "No. 3 is my only use.\n\n> To that point, if derequire is integrated with browserify do you see it being mandatory or optional? \n\nI'm cool with it being optional - could just be a boolean called \"derequire\", if you need more options, then use the plugin. I'm not sure what the use case would be, but just as an FYI, it's perfectly ok to use `derequire` on a bundle with exports (so non-standalone). Regardless of the name given in `externalRequireName`, that variable won't get renamed since it's a global and not created in any scope.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/78340284/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/78340869",
    "html_url": "https://github.com/browserify/browserify/pull/1151#issuecomment-78340869",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1151",
    "id": 78340869,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MzQwODY5",
    "user": {
      "login": "jmm",
      "id": 129203,
      "node_id": "MDQ6VXNlcjEyOTIwMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129203?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmm",
      "html_url": "https://github.com/jmm",
      "followers_url": "https://api.github.com/users/jmm/followers",
      "following_url": "https://api.github.com/users/jmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmm/subscriptions",
      "organizations_url": "https://api.github.com/users/jmm/orgs",
      "repos_url": "https://api.github.com/users/jmm/repos",
      "events_url": "https://api.github.com/users/jmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-11T18:32:01Z",
    "updated_at": "2015-03-11T18:32:01Z",
    "author_association": "COLLABORATOR",
    "body": "@calvinmetcalf \n\n> #2 was my original aim, specifically dojo is fucking terrible\n\nOk, thanks. If you could give me your feedback on the [questions here](https://github.com/substack/node-browserify/pull/1151#issuecomment-78289693) when you get the chance that'd help me wrap my head around the situation. When I opened this PR I didn't think derequire was even an option for solving the rebundling use case I was trying to address, so I'm trying to figure out if with the performance improvements it's the best way to accomplish that, or if potentially re-integrating derequire into browserify and solving that use case are separate issues.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/78340869/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/78344384",
    "html_url": "https://github.com/browserify/browserify/pull/1151#issuecomment-78344384",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1151",
    "id": 78344384,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MzQ0Mzg0",
    "user": {
      "login": "jmm",
      "id": 129203,
      "node_id": "MDQ6VXNlcjEyOTIwMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129203?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmm",
      "html_url": "https://github.com/jmm",
      "followers_url": "https://api.github.com/users/jmm/followers",
      "following_url": "https://api.github.com/users/jmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmm/subscriptions",
      "organizations_url": "https://api.github.com/users/jmm/orgs",
      "repos_url": "https://api.github.com/users/jmm/repos",
      "events_url": "https://api.github.com/users/jmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-11T18:49:58Z",
    "updated_at": "2015-03-11T18:49:58Z",
    "author_association": "COLLABORATOR",
    "body": "@zertosh \n\n> No. 3 is my only use.\n\nOk, thanks for the feedback\n\n> I'm not sure what the use case would be, but just as an FYI, it's perfectly ok to use derequire on a bundle with exports (so non-standalone). Regardless of the name given in externalRequireName, that variable won't get renamed since it's a global and not created in any scope.\n\nOk, thanks. I wasn't worried about that, but I actually have a PR on browser-pack ([#51](https://github.com/substack/browser-pack/pull/51)) proposing to allow users to export a global `require()` from standalone bundles. So that'd be a use case for using derequire on a bundle that exports `require()`.\n\n> I'm cool with it being optional - could just be a boolean called \"derequire\", if you need more options, then use the plugin.\n\nI hope that @substack and / or some other people who are more familiar with the previous go around will have a chance at some point to comment on the idea of re-integrating derequire into browserify. If the outcome is that it either doesn't happen or it's optional then I think my proposal still makes sense (either on all bundles or just those where derequire is not enabled) to enable browserify to consume its own bundles without choking on them either way (with or without derequire). If derequire is re-integrated non-optionally, then I think it would obviate the need for this PR.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/78344384/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/78345114",
    "html_url": "https://github.com/browserify/browserify/pull/1151#issuecomment-78345114",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1151",
    "id": 78345114,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MzQ1MTE0",
    "user": {
      "login": "zertosh",
      "id": 830952,
      "node_id": "MDQ6VXNlcjgzMDk1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/830952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zertosh",
      "html_url": "https://github.com/zertosh",
      "followers_url": "https://api.github.com/users/zertosh/followers",
      "following_url": "https://api.github.com/users/zertosh/following{/other_user}",
      "gists_url": "https://api.github.com/users/zertosh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zertosh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zertosh/subscriptions",
      "organizations_url": "https://api.github.com/users/zertosh/orgs",
      "repos_url": "https://api.github.com/users/zertosh/repos",
      "events_url": "https://api.github.com/users/zertosh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zertosh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-11T18:53:27Z",
    "updated_at": "2015-03-11T18:53:27Z",
    "author_association": "MEMBER",
    "body": "@jmm Sounds good. Thank you for taking charge of all this! I hope I didn't derail your work by coming out of nowhere with the derequire improvements.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/78345114/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/78348434",
    "html_url": "https://github.com/browserify/browserify/pull/1151#issuecomment-78348434",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1151",
    "id": 78348434,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MzQ4NDM0",
    "user": {
      "login": "jmm",
      "id": 129203,
      "node_id": "MDQ6VXNlcjEyOTIwMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129203?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmm",
      "html_url": "https://github.com/jmm",
      "followers_url": "https://api.github.com/users/jmm/followers",
      "following_url": "https://api.github.com/users/jmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmm/subscriptions",
      "organizations_url": "https://api.github.com/users/jmm/orgs",
      "repos_url": "https://api.github.com/users/jmm/repos",
      "events_url": "https://api.github.com/users/jmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-11T19:10:44Z",
    "updated_at": "2015-03-11T19:10:44Z",
    "author_association": "COLLABORATOR",
    "body": "Thanks @zertosh. I think that's a definite possibility in the sense that my proposal may become obsolete, but I certainly can't fault you for awesome work improving derequire. I admit it will be a bit of a bummer if my effort on this was for naught, but if that happens it's because a better solution emerged. I also realize in hindsight that I should've checked in on what's been happening with derequire before working on a new solution :) I failed to adhere to one of the prime virtues of programming: laziness.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/78348434/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/78354467",
    "html_url": "https://github.com/browserify/browserify/pull/1151#issuecomment-78354467",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1151",
    "id": 78354467,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MzU0NDY3",
    "user": {
      "login": "calvinmetcalf",
      "id": 1128607,
      "node_id": "MDQ6VXNlcjExMjg2MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1128607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/calvinmetcalf",
      "html_url": "https://github.com/calvinmetcalf",
      "followers_url": "https://api.github.com/users/calvinmetcalf/followers",
      "following_url": "https://api.github.com/users/calvinmetcalf/following{/other_user}",
      "gists_url": "https://api.github.com/users/calvinmetcalf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/calvinmetcalf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/calvinmetcalf/subscriptions",
      "organizations_url": "https://api.github.com/users/calvinmetcalf/orgs",
      "repos_url": "https://api.github.com/users/calvinmetcalf/repos",
      "events_url": "https://api.github.com/users/calvinmetcalf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/calvinmetcalf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-11T19:43:17Z",
    "updated_at": "2015-03-11T19:43:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "so my vote was that if we wanted to include derequire, just have it enabled when standalone is enabled, having a --externalizable (or better name) which also does it could work too.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/78354467/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/78363967",
    "html_url": "https://github.com/browserify/browserify/pull/1151#issuecomment-78363967",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1151",
    "id": 78363967,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MzYzOTY3",
    "user": {
      "login": "jmm",
      "id": 129203,
      "node_id": "MDQ6VXNlcjEyOTIwMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129203?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmm",
      "html_url": "https://github.com/jmm",
      "followers_url": "https://api.github.com/users/jmm/followers",
      "following_url": "https://api.github.com/users/jmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmm/subscriptions",
      "organizations_url": "https://api.github.com/users/jmm/orgs",
      "repos_url": "https://api.github.com/users/jmm/repos",
      "events_url": "https://api.github.com/users/jmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-11T20:28:55Z",
    "updated_at": "2015-03-11T20:28:55Z",
    "author_association": "COLLABORATOR",
    "body": "@calvinmetcalf Ok, thanks for clarifying. I think it would be ideal to have the option to get back out what you put in (meaning your original source after going through whatever transforms / plugins you configure), but I'm not sure if it's compelling to provide that.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/78363967/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/78412129",
    "html_url": "https://github.com/browserify/browserify/pull/1151#issuecomment-78412129",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1151",
    "id": 78412129,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NDEyMTI5",
    "user": {
      "login": "zertosh",
      "id": 830952,
      "node_id": "MDQ6VXNlcjgzMDk1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/830952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zertosh",
      "html_url": "https://github.com/zertosh",
      "followers_url": "https://api.github.com/users/zertosh/followers",
      "following_url": "https://api.github.com/users/zertosh/following{/other_user}",
      "gists_url": "https://api.github.com/users/zertosh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zertosh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zertosh/subscriptions",
      "organizations_url": "https://api.github.com/users/zertosh/orgs",
      "repos_url": "https://api.github.com/users/zertosh/repos",
      "events_url": "https://api.github.com/users/zertosh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zertosh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-12T02:16:24Z",
    "updated_at": "2015-03-12T02:16:24Z",
    "author_association": "MEMBER",
    "body": "Ok so to summarize:\n1. When you do a `standalone` build, you automatically get your bundle `derequire`'d.\n2. When you don't do a `standalone` build, you can enable `derequire`'ing via some flag (e.g. `externalizable` or whatever idc).\n   - To keep it logically consistent: If you do a `standalone` build, and you explicitly pass `externalizable` as `false`, it should cancel out the automatic `derequire` from No.1.\n\nNext steps:\n1. `browserify` PR that:\n   - Adds `derequire` as dependency.\n   - Handles `standalone`/`externalizable` and adding `derquire` to the pipeline.\n2. `derequire` PR that:\n   - Adds a test to the plugin :disappointed: (i gotz lazy)\n   - Documents the plugin.\n3. Bump `watchify`'s `browserify` version when this comes out - pretty please.\n\nSound good @jmm @calvinmetcalf ?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/78412129/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/78472953",
    "html_url": "https://github.com/browserify/browserify/pull/1151#issuecomment-78472953",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1151",
    "id": 78472953,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NDcyOTUz",
    "user": {
      "login": "jmm",
      "id": 129203,
      "node_id": "MDQ6VXNlcjEyOTIwMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129203?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmm",
      "html_url": "https://github.com/jmm",
      "followers_url": "https://api.github.com/users/jmm/followers",
      "following_url": "https://api.github.com/users/jmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmm/subscriptions",
      "organizations_url": "https://api.github.com/users/jmm/orgs",
      "repos_url": "https://api.github.com/users/jmm/repos",
      "events_url": "https://api.github.com/users/jmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-12T12:47:41Z",
    "updated_at": "2015-03-12T12:47:41Z",
    "author_association": "COLLABORATOR",
    "body": "@zertosh @calvinmetcalf FYI, at this point in time it's not my place to merge something of this scope. Wanted to let you know before you work on a PR and related efforts in case you'd rather get a thumbs up from @substack first.\n\nFWIW, I don't love `externalizable`. Is there any reason to not just use `--derequire` / `opts.derequire` or `--dereq` / `opts.dereq`?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/78472953/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]