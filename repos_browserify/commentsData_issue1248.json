[
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/99643264",
    "html_url": "https://github.com/browserify/browserify/pull/1248#issuecomment-99643264",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1248",
    "id": 99643264,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5NjQzMjY0",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-06T23:30:20Z",
    "updated_at": "2015-05-06T23:30:20Z",
    "author_association": "NONE",
    "body": "Looks great, published in 10.1.1.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/99643264/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/99871454",
    "html_url": "https://github.com/browserify/browserify/pull/1248#issuecomment-99871454",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1248",
    "id": 99871454,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5ODcxNDU0",
    "user": {
      "login": "jmm",
      "id": 129203,
      "node_id": "MDQ6VXNlcjEyOTIwMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129203?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmm",
      "html_url": "https://github.com/jmm",
      "followers_url": "https://api.github.com/users/jmm/followers",
      "following_url": "https://api.github.com/users/jmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmm/subscriptions",
      "organizations_url": "https://api.github.com/users/jmm/orgs",
      "repos_url": "https://api.github.com/users/jmm/repos",
      "events_url": "https://api.github.com/users/jmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-07T13:45:29Z",
    "updated_at": "2015-05-07T13:45:29Z",
    "author_association": "COLLABORATOR",
    "body": "@zertosh @substack I think we need to decide _exactly_ how (and where) entry file paths will be resolved and document it more. This PR is a bit different, but reminiscent of the situation with #1033 / #1059 / #1077. This PR pseudo-resolves the paths and module-deps still actually resolves them, so unfortunately this does not ensure that `row.file` is an absolute pathname that actually exists or the same path that module-deps resolves.\n\nHere's a very simple repro (given an `entry.js` in `cwd`):\n\n``` js\nvar\n  browserify = require('browserify'),\n  row_flow = require('browserify-row-flow');\n\nbrowserify('./entry')\n  .plugin(row_flow().plugin())\n  .bundle()\n;  \n```\n\nYou can see that it exits the `record` phase (and `deps`) with `file: '/basedir/entry'` and is emitted by the `file` event with `file: '/basedir/entry.js'` (the value that module-deps actually resolved it to).\n\nRe: https://github.com/substack/node-browserify/issues/1219#issuecomment-96126563, I almost brought this up over there that the CLI and API resolve entry file paths differently, but I figured it's a divergence that makes sense so I didn't bother. As of v10.1.0 entry files provided to the API _were_ resolved using the module resolution algorithm. So the following were not equivalent:\n\n``` js\nbrowserify('./entry');\nbrowserify('entry');\n```\n\nI figure it makes sense for the CLI to resolve `entry` by appending it to the `basedir` because that's probably the 80% use case and character count is much more significant than for API calls. With the API, if you want entry paths appended to the `basedir` instead of put through the module resolution algorithm it's trivial to prepend `./`.\n\nThis PR changes the resolution behavior of the second case:\n\n``` js\nbrowserify('entry');\n```\n\nPreviously, if there were a `node_modules/entry/index.js`, this would've been resolved to it. Now it appends it to `basedir`.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/99871454/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/99884892",
    "html_url": "https://github.com/browserify/browserify/pull/1248#issuecomment-99884892",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1248",
    "id": 99884892,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5ODg0ODky",
    "user": {
      "login": "zertosh",
      "id": 830952,
      "node_id": "MDQ6VXNlcjgzMDk1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/830952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zertosh",
      "html_url": "https://github.com/zertosh",
      "followers_url": "https://api.github.com/users/zertosh/followers",
      "following_url": "https://api.github.com/users/zertosh/following{/other_user}",
      "gists_url": "https://api.github.com/users/zertosh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zertosh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zertosh/subscriptions",
      "organizations_url": "https://api.github.com/users/zertosh/orgs",
      "repos_url": "https://api.github.com/users/zertosh/repos",
      "events_url": "https://api.github.com/users/zertosh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zertosh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-07T14:24:18Z",
    "updated_at": "2015-05-07T14:24:18Z",
    "author_association": "MEMBER",
    "body": "Probably the worst behavior is having the API and CLI do different things. Sure, this PR doesn't ensure that the file exists, but it brings consistency. \n\n> I think we need to decide exactly how (and where) entry file paths will be resolved and document it more.\n\nThe best thing to do is to just delegate to mdeps. [This](https://github.com/substack/module-deps/blob/9be8dea5b21a905a1dd490124b167f42e5df95d0/index.js#L412) line is what preserves the input row's file. Just remove the `if` and all rows will have a `file` prop that is the mdeps resolved path. Want me to look into this?\n\n> With the API, if you want entry paths appended to the basedir instead of put through the module resolution algorithm it's trivial to prepend ./\n\nIt's still trivial. Just pass in an absolute path :)\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/99884892/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/99894906",
    "html_url": "https://github.com/browserify/browserify/pull/1248#issuecomment-99894906",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1248",
    "id": 99894906,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5ODk0OTA2",
    "user": {
      "login": "jmm",
      "id": 129203,
      "node_id": "MDQ6VXNlcjEyOTIwMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129203?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmm",
      "html_url": "https://github.com/jmm",
      "followers_url": "https://api.github.com/users/jmm/followers",
      "following_url": "https://api.github.com/users/jmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmm/subscriptions",
      "organizations_url": "https://api.github.com/users/jmm/orgs",
      "repos_url": "https://api.github.com/users/jmm/repos",
      "events_url": "https://api.github.com/users/jmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-07T14:47:36Z",
    "updated_at": "2015-05-07T14:47:36Z",
    "author_association": "COLLABORATOR",
    "body": "> Probably the worst behavior is having the API and CLI do different things. Sure, this PR doesn't ensure that the file exists, but it brings consistency.\n\nMaybe. They're pretty different animals though and I'd hate to see compromises made for the CLI pollute the API. The CLI and API would be more consistent if you could do `b.require('some_file.js:alias')`, but I doubt anyone thinks that's a good idea.\n\n> The best thing to do is to just delegate to mdeps.\n\nThat's pretty much what I've been thinking and what I did for a similar case in #1077.\n\n> This line is what preserves the input row's file. Just remove the `if` and all rows will have a `file` prop that is the mdeps resolved path. Want me to look into this?\n\nFor me it just circles back to my questions in #1162 -- what is `file` supposed to represent? Like I said in https://github.com/substack/node-browserify/issues/1203#issuecomment-91672659 my working theory is that it _should_ \"always be a string that represents an absolute pathname, perhaps a sham value for streams or other forms of in-memory rows\" (or at least by the time module-deps is done with it it should). So if that really is what it should represent, then yes, making that assignment unconditional would be the thing to do.\n\n> It's still trivial. Just pass in an absolute path :)\n\nWell it's even more trivial now since it happens by default. What is now less trivial is using a module name to refer to an entry file. I guess now you'd have to manually invoke node-resolve on it, or if you're sure you want to resolve it from `cwd`, `require.resolve()`.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/99894906/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/99961665",
    "html_url": "https://github.com/browserify/browserify/pull/1248#issuecomment-99961665",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1248",
    "id": 99961665,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5OTYxNjY1",
    "user": {
      "login": "Gillingham",
      "id": 385396,
      "node_id": "MDQ6VXNlcjM4NTM5Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/385396?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Gillingham",
      "html_url": "https://github.com/Gillingham",
      "followers_url": "https://api.github.com/users/Gillingham/followers",
      "following_url": "https://api.github.com/users/Gillingham/following{/other_user}",
      "gists_url": "https://api.github.com/users/Gillingham/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Gillingham/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Gillingham/subscriptions",
      "organizations_url": "https://api.github.com/users/Gillingham/orgs",
      "repos_url": "https://api.github.com/users/Gillingham/repos",
      "events_url": "https://api.github.com/users/Gillingham/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Gillingham/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-07T17:59:44Z",
    "updated_at": "2015-05-07T18:00:56Z",
    "author_association": "NONE",
    "body": "It looks like this broke being able to name a module and file location using the browser field in package.json What's worse is that with the JSONStream changes trying to downgrade fails due to the missing dependency.\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/99961665/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/99962999",
    "html_url": "https://github.com/browserify/browserify/pull/1248#issuecomment-99962999",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1248",
    "id": 99962999,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5OTYyOTk5",
    "user": {
      "login": "jmm",
      "id": 129203,
      "node_id": "MDQ6VXNlcjEyOTIwMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129203?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmm",
      "html_url": "https://github.com/jmm",
      "followers_url": "https://api.github.com/users/jmm/followers",
      "following_url": "https://api.github.com/users/jmm/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmm/subscriptions",
      "organizations_url": "https://api.github.com/users/jmm/orgs",
      "repos_url": "https://api.github.com/users/jmm/repos",
      "events_url": "https://api.github.com/users/jmm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-07T18:05:47Z",
    "updated_at": "2015-05-07T18:05:47Z",
    "author_association": "COLLABORATOR",
    "body": "@Gillingham Can you please open an issue with a simple reproduction for the `browser` field part?\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/99962999/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/browserify/browserify/issues/comments/99964946",
    "html_url": "https://github.com/browserify/browserify/pull/1248#issuecomment-99964946",
    "issue_url": "https://api.github.com/repos/browserify/browserify/issues/1248",
    "id": 99964946,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5OTY0OTQ2",
    "user": {
      "login": "Gillingham",
      "id": 385396,
      "node_id": "MDQ6VXNlcjM4NTM5Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/385396?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Gillingham",
      "html_url": "https://github.com/Gillingham",
      "followers_url": "https://api.github.com/users/Gillingham/followers",
      "following_url": "https://api.github.com/users/Gillingham/following{/other_user}",
      "gists_url": "https://api.github.com/users/Gillingham/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Gillingham/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Gillingham/subscriptions",
      "organizations_url": "https://api.github.com/users/Gillingham/orgs",
      "repos_url": "https://api.github.com/users/Gillingham/repos",
      "events_url": "https://api.github.com/users/Gillingham/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Gillingham/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-07T18:12:42Z",
    "updated_at": "2015-05-07T18:12:42Z",
    "author_association": "NONE",
    "body": "@jmm opened #1250\n",
    "reactions": {
      "url": "https://api.github.com/repos/browserify/browserify/issues/comments/99964946/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]