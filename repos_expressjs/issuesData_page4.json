[
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4776",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4776/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4776/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4776/events",
    "html_url": "https://github.com/expressjs/express/issues/4776",
    "id": 1082296677,
    "node_id": "I_kwDOAAOeZ85Agoll",
    "number": 4776,
    "title": "res.download partial content",
    "user": {
      "login": "loretoparisi",
      "id": 163333,
      "node_id": "MDQ6VXNlcjE2MzMzMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/163333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/loretoparisi",
      "html_url": "https://github.com/loretoparisi",
      "followers_url": "https://api.github.com/users/loretoparisi/followers",
      "following_url": "https://api.github.com/users/loretoparisi/following{/other_user}",
      "gists_url": "https://api.github.com/users/loretoparisi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/loretoparisi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/loretoparisi/subscriptions",
      "organizations_url": "https://api.github.com/users/loretoparisi/orgs",
      "repos_url": "https://api.github.com/users/loretoparisi/repos",
      "events_url": "https://api.github.com/users/loretoparisi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/loretoparisi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-12-16T15:00:11Z",
    "updated_at": "2022-02-02T20:16:10Z",
    "closed_at": "2022-02-02T20:16:10Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "To download a file we use the `download`\r\n\r\n```javascript\r\napp.get('/:filename', function(req, res) {\r\n  var filePath = path.join(__dirname, 'code.jpg');\r\n  res.download(filePath, 'test.jpeg');\r\n});\r\n```\r\n\r\nbut If I have a range query:\r\n\r\n```\r\n{\r\n  'Content-Length': 223609,\r\n  'Content-Type': 'audio/mpeg',\r\n  'Access-Control-Allow-Origin': '*',\r\n  'Access-Control-Allow-Methods': 'POST, GET, OPTIONS',\r\n  'Access-Control-Allow-Headers': 'Range',\r\n  Expires: 0,\r\n  Pragma: 'no-cache',\r\n  'Cache-Control': 'no-cache, no-store, must-revalidate',\r\n  'Accept-Ranges': 'bytes',\r\n  'Content-disposition': 'attachment; filename=/Users/loretoparisi/audio/test.mp3'\r\n}\r\n```\r\n\r\nusing `download` will not respect the Byte range, that instead will work in native browser player or using it manually like:\r\n\r\n```javascript\r\nheader['Accept-Ranges'] = 'bytes';\r\nheader['Content-Length'] = parseInt(range[1]) - parseInt(range[0]) + 1;\r\n if(req.query.download) { // set download headers\r\n   header['Content-disposition'] = 'attachment; filename=' + path;\r\n}\r\n res.writeHead(200, header);\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4776/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4776/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4775",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4775/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4775/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4775/events",
    "html_url": "https://github.com/expressjs/express/pull/4775",
    "id": 1081839122,
    "node_id": "PR_kwDOAAOeZ84v7jCW",
    "number": 4775,
    "title": ":trollface: ",
    "user": {
      "login": "TarunavBA",
      "id": 89698728,
      "node_id": "MDQ6VXNlcjg5Njk4NzI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/89698728?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TarunavBA",
      "html_url": "https://github.com/TarunavBA",
      "followers_url": "https://api.github.com/users/TarunavBA/followers",
      "following_url": "https://api.github.com/users/TarunavBA/following{/other_user}",
      "gists_url": "https://api.github.com/users/TarunavBA/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TarunavBA/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TarunavBA/subscriptions",
      "organizations_url": "https://api.github.com/users/TarunavBA/orgs",
      "repos_url": "https://api.github.com/users/TarunavBA/repos",
      "events_url": "https://api.github.com/users/TarunavBA/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TarunavBA/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2021-12-16T06:59:48Z",
    "updated_at": "2021-12-16T07:02:00Z",
    "closed_at": "2021-12-16T07:02:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4775",
      "html_url": "https://github.com/expressjs/express/pull/4775",
      "diff_url": "https://github.com/expressjs/express/pull/4775.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4775.patch",
      "merged_at": null
    },
    "body": "Beautify Readme",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4775/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 1,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4775/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4774",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4774/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4774/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4774/events",
    "html_url": "https://github.com/expressjs/express/issues/4774",
    "id": 1081825234,
    "node_id": "I_kwDOAAOeZ85Ae1fS",
    "number": 4774,
    "title": "[REQUEST]  - Triage role",
    "user": {
      "login": "TarunavBA",
      "id": 89698728,
      "node_id": "MDQ6VXNlcjg5Njk4NzI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/89698728?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TarunavBA",
      "html_url": "https://github.com/TarunavBA",
      "followers_url": "https://api.github.com/users/TarunavBA/followers",
      "following_url": "https://api.github.com/users/TarunavBA/following{/other_user}",
      "gists_url": "https://api.github.com/users/TarunavBA/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TarunavBA/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TarunavBA/subscriptions",
      "organizations_url": "https://api.github.com/users/TarunavBA/orgs",
      "repos_url": "https://api.github.com/users/TarunavBA/repos",
      "events_url": "https://api.github.com/users/TarunavBA/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TarunavBA/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-12-16T06:35:42Z",
    "updated_at": "2021-12-16T07:02:27Z",
    "closed_at": "2021-12-16T07:02:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "# Request triager role for `@TarunavBA`\r\n\r\n- [x] I have read and understood the project's Code of Conduct.\r\n- [x] I also have read and understood the process and best practices around Express triaging.\r\n\r\nI request for a triager role for the following GitHub organizations:\r\n\r\n- [x] jshttp\r\n- [X] pillarjs\r\n- [x] express",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4774/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 1,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4774/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4773",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4773/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4773/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4773/events",
    "html_url": "https://github.com/expressjs/express/issues/4773",
    "id": 1080407397,
    "node_id": "I_kwDOAAOeZ85AZbVl",
    "number": 4773,
    "title": "hostname security?",
    "user": {
      "login": "loynoir",
      "id": 78727408,
      "node_id": "MDQ6VXNlcjc4NzI3NDA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/78727408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/loynoir",
      "html_url": "https://github.com/loynoir",
      "followers_url": "https://api.github.com/users/loynoir/followers",
      "following_url": "https://api.github.com/users/loynoir/following{/other_user}",
      "gists_url": "https://api.github.com/users/loynoir/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/loynoir/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/loynoir/subscriptions",
      "organizations_url": "https://api.github.com/users/loynoir/orgs",
      "repos_url": "https://api.github.com/users/loynoir/repos",
      "events_url": "https://api.github.com/users/loynoir/events{/privacy}",
      "received_events_url": "https://api.github.com/users/loynoir/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-12-14T23:53:02Z",
    "updated_at": "2021-12-15T00:06:56Z",
    "closed_at": "2021-12-15T00:02:13Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**removed**",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4773/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4773/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4770",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4770/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4770/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4770/events",
    "html_url": "https://github.com/expressjs/express/issues/4770",
    "id": 1077132979,
    "node_id": "I_kwDOAAOeZ85AM76z",
    "number": 4770,
    "title": "What needs to happen for express 5 to go beta?",
    "user": {
      "login": "xjamundx",
      "id": 246143,
      "node_id": "MDQ6VXNlcjI0NjE0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/246143?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xjamundx",
      "html_url": "https://github.com/xjamundx",
      "followers_url": "https://api.github.com/users/xjamundx/followers",
      "following_url": "https://api.github.com/users/xjamundx/following{/other_user}",
      "gists_url": "https://api.github.com/users/xjamundx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xjamundx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xjamundx/subscriptions",
      "organizations_url": "https://api.github.com/users/xjamundx/orgs",
      "repos_url": "https://api.github.com/users/xjamundx/repos",
      "events_url": "https://api.github.com/users/xjamundx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xjamundx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2021-12-10T18:47:21Z",
    "updated_at": "2021-12-15T22:55:31Z",
    "closed_at": "2021-12-10T18:50:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "What needs to happen for express 5 to go beta or even to be fully released?\r\n\r\nAt this point I see @dougwilson sending people to the upgrade guide in some of the issues.\r\n\r\nHow can we help get this over the line. my hunch is that many many people are doing dangerous things with async functions not realizing that they need https://www.npmjs.com/package/express-async-errors. \r\n\r\nHow can I help?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4770/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4770/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4769",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4769/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4769/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4769/events",
    "html_url": "https://github.com/expressjs/express/issues/4769",
    "id": 1073903086,
    "node_id": "I_kwDOAAOeZ85AAnXu",
    "number": 4769,
    "title": "Run a function inside Express route and still render page in sendFile",
    "user": {
      "login": "jimburch",
      "id": 49823725,
      "node_id": "MDQ6VXNlcjQ5ODIzNzI1",
      "avatar_url": "https://avatars.githubusercontent.com/u/49823725?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimburch",
      "html_url": "https://github.com/jimburch",
      "followers_url": "https://api.github.com/users/jimburch/followers",
      "following_url": "https://api.github.com/users/jimburch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimburch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimburch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimburch/subscriptions",
      "organizations_url": "https://api.github.com/users/jimburch/orgs",
      "repos_url": "https://api.github.com/users/jimburch/repos",
      "events_url": "https://api.github.com/users/jimburch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimburch/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 95025063,
        "node_id": "MDU6TGFiZWw5NTAyNTA2Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2021-12-08T01:14:50Z",
    "updated_at": "2022-03-27T06:12:35Z",
    "closed_at": "2022-03-27T06:12:35Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have a React app using server-side rendering and I'm trying to hit a route using middleware to check assign redirects.\r\n\r\n```\r\nconst app = express();\r\n\r\n...\r\n\r\napp.use(\"/\", redirectRouter);\r\napp.use(\"/widgets\", widgetRouter);\r\napp.use(\"/api\", apiRouter);\r\n\r\napp.use((req: Request, res: Response) => {\r\n  res.sendFile(path.join(__dirname, \"public\", \"index.html\"));\r\n});\r\n```\r\n\r\nThe second two middlewares are for some backend purposes and the last `app.use` serves up the React app if no other route is found. `app.use(\"/\", redirectRouter)` is where I'm trying to run a loop that assigns redirects to an array of URLs. I want express to hit the middleware, run, but still serve `index.html` at the bottom.\r\n\r\nCurrently `app.use(\"/\", redirectRouter)` does nothing. I've tried changing `\"/\"` to `\"*\"` which hits the route but no longer renders the page. I've also tried variations of `app.get`, `app.all`, and `app.options` which also do nothing.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4769/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4769/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4768",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4768/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4768/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4768/events",
    "html_url": "https://github.com/expressjs/express/issues/4768",
    "id": 1071474187,
    "node_id": "I_kwDOAAOeZ84_3WYL",
    "number": 4768,
    "title": "Unable to load react application from express js application",
    "user": {
      "login": "AnubhutiRoX",
      "id": 18062708,
      "node_id": "MDQ6VXNlcjE4MDYyNzA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/18062708?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AnubhutiRoX",
      "html_url": "https://github.com/AnubhutiRoX",
      "followers_url": "https://api.github.com/users/AnubhutiRoX/followers",
      "following_url": "https://api.github.com/users/AnubhutiRoX/following{/other_user}",
      "gists_url": "https://api.github.com/users/AnubhutiRoX/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AnubhutiRoX/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AnubhutiRoX/subscriptions",
      "organizations_url": "https://api.github.com/users/AnubhutiRoX/orgs",
      "repos_url": "https://api.github.com/users/AnubhutiRoX/repos",
      "events_url": "https://api.github.com/users/AnubhutiRoX/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AnubhutiRoX/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "AnubhutiRoX",
      "id": 18062708,
      "node_id": "MDQ6VXNlcjE4MDYyNzA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/18062708?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AnubhutiRoX",
      "html_url": "https://github.com/AnubhutiRoX",
      "followers_url": "https://api.github.com/users/AnubhutiRoX/followers",
      "following_url": "https://api.github.com/users/AnubhutiRoX/following{/other_user}",
      "gists_url": "https://api.github.com/users/AnubhutiRoX/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AnubhutiRoX/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AnubhutiRoX/subscriptions",
      "organizations_url": "https://api.github.com/users/AnubhutiRoX/orgs",
      "repos_url": "https://api.github.com/users/AnubhutiRoX/repos",
      "events_url": "https://api.github.com/users/AnubhutiRoX/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AnubhutiRoX/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "AnubhutiRoX",
        "id": 18062708,
        "node_id": "MDQ6VXNlcjE4MDYyNzA4",
        "avatar_url": "https://avatars.githubusercontent.com/u/18062708?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/AnubhutiRoX",
        "html_url": "https://github.com/AnubhutiRoX",
        "followers_url": "https://api.github.com/users/AnubhutiRoX/followers",
        "following_url": "https://api.github.com/users/AnubhutiRoX/following{/other_user}",
        "gists_url": "https://api.github.com/users/AnubhutiRoX/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/AnubhutiRoX/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/AnubhutiRoX/subscriptions",
        "organizations_url": "https://api.github.com/users/AnubhutiRoX/orgs",
        "repos_url": "https://api.github.com/users/AnubhutiRoX/repos",
        "events_url": "https://api.github.com/users/AnubhutiRoX/events{/privacy}",
        "received_events_url": "https://api.github.com/users/AnubhutiRoX/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-12-05T14:33:21Z",
    "updated_at": "2022-02-22T04:37:29Z",
    "closed_at": "2022-02-22T04:37:29Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I created three react projects as Microfront ends from nrwl/react:app and an express project using nrwl/express:app with frontendApplication as the react project.\r\n\r\napp1 & app2 are exposing their components using ModuleFederation webpack plugin. And then finally I am consuming app1's n app2's components in app3 using ModuleFederation plugin. I have to wrap this app3 with node js. and serve.\r\n\r\nMy requirement is to load my app3 react project from express server. So that I can add a middleware. I observed here that when I try to make the react app up then it is getting proxied from the express-app (added console and in proxy.config.json of react app i updated it to be '/', and added app.get('/') which listens whenever a browser url is hit with react app).\r\nBut when I try to load this react app from express app it gives me issue with js files loaded (polyfill and main,js) -\r\napp.get('/', (req, res) => {\r\nres.sendFile(path.join(__dirname + '/..//index.html'));\r\n});\r\n\r\n![image](https://user-images.githubusercontent.com/18062708/144750823-c4297039-b0e9-46e6-b571-248ece23af6b.png)",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4768/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4768/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4767",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4767/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4767/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4767/events",
    "html_url": "https://github.com/expressjs/express/pull/4767",
    "id": 1071399599,
    "node_id": "PR_kwDOAAOeZ84vZoh0",
    "number": 4767,
    "title": "chore: add ci from node 15 to node 16",
    "user": {
      "login": "kkalavantavanich",
      "id": 21222656,
      "node_id": "MDQ6VXNlcjIxMjIyNjU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/21222656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kkalavantavanich",
      "html_url": "https://github.com/kkalavantavanich",
      "followers_url": "https://api.github.com/users/kkalavantavanich/followers",
      "following_url": "https://api.github.com/users/kkalavantavanich/following{/other_user}",
      "gists_url": "https://api.github.com/users/kkalavantavanich/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kkalavantavanich/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kkalavantavanich/subscriptions",
      "organizations_url": "https://api.github.com/users/kkalavantavanich/orgs",
      "repos_url": "https://api.github.com/users/kkalavantavanich/repos",
      "events_url": "https://api.github.com/users/kkalavantavanich/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kkalavantavanich/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "kkalavantavanich",
      "id": 21222656,
      "node_id": "MDQ6VXNlcjIxMjIyNjU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/21222656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kkalavantavanich",
      "html_url": "https://github.com/kkalavantavanich",
      "followers_url": "https://api.github.com/users/kkalavantavanich/followers",
      "following_url": "https://api.github.com/users/kkalavantavanich/following{/other_user}",
      "gists_url": "https://api.github.com/users/kkalavantavanich/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kkalavantavanich/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kkalavantavanich/subscriptions",
      "organizations_url": "https://api.github.com/users/kkalavantavanich/orgs",
      "repos_url": "https://api.github.com/users/kkalavantavanich/repos",
      "events_url": "https://api.github.com/users/kkalavantavanich/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kkalavantavanich/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "kkalavantavanich",
        "id": 21222656,
        "node_id": "MDQ6VXNlcjIxMjIyNjU2",
        "avatar_url": "https://avatars.githubusercontent.com/u/21222656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kkalavantavanich",
        "html_url": "https://github.com/kkalavantavanich",
        "followers_url": "https://api.github.com/users/kkalavantavanich/followers",
        "following_url": "https://api.github.com/users/kkalavantavanich/following{/other_user}",
        "gists_url": "https://api.github.com/users/kkalavantavanich/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kkalavantavanich/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kkalavantavanich/subscriptions",
        "organizations_url": "https://api.github.com/users/kkalavantavanich/orgs",
        "repos_url": "https://api.github.com/users/kkalavantavanich/repos",
        "events_url": "https://api.github.com/users/kkalavantavanich/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kkalavantavanich/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/18",
      "html_url": "https://github.com/expressjs/express/milestone/18",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/18/labels",
      "id": 5234171,
      "node_id": "MDk6TWlsZXN0b25lNTIzNDE3MQ==",
      "number": 18,
      "title": "4.18",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 15,
      "state": "closed",
      "created_at": "2020-03-24T23:16:48Z",
      "updated_at": "2022-04-24T22:50:58Z",
      "due_on": null,
      "closed_at": "2022-04-24T22:50:58Z"
    },
    "comments": 1,
    "created_at": "2021-12-05T08:15:18Z",
    "updated_at": "2022-02-21T02:17:05Z",
    "closed_at": "2022-02-20T05:46:55Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4767",
      "html_url": "https://github.com/expressjs/express/pull/4767",
      "diff_url": "https://github.com/expressjs/express/pull/4767.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4767.patch",
      "merged_at": "2022-02-20T05:46:55Z"
    },
    "body": "Add CI from Node 13 to Node 16 (latest active LTS).",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4767/reactions",
      "total_count": 5,
      "+1": 5,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4767/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4766",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4766/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4766/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4766/events",
    "html_url": "https://github.com/expressjs/express/issues/4766",
    "id": 1069345029,
    "node_id": "I_kwDOAAOeZ84_vOkF",
    "number": 4766,
    "title": "req.body is showing me object in reverse order.",
    "user": {
      "login": "surajsgh",
      "id": 47916969,
      "node_id": "MDQ6VXNlcjQ3OTE2OTY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/47916969?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/surajsgh",
      "html_url": "https://github.com/surajsgh",
      "followers_url": "https://api.github.com/users/surajsgh/followers",
      "following_url": "https://api.github.com/users/surajsgh/following{/other_user}",
      "gists_url": "https://api.github.com/users/surajsgh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/surajsgh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/surajsgh/subscriptions",
      "organizations_url": "https://api.github.com/users/surajsgh/orgs",
      "repos_url": "https://api.github.com/users/surajsgh/repos",
      "events_url": "https://api.github.com/users/surajsgh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/surajsgh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-12-02T09:54:07Z",
    "updated_at": "2021-12-07T04:26:01Z",
    "closed_at": "2021-12-07T04:26:01Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hey,\r\n\r\nI was building a To-do list web app using mern stack with redux. I created a simple form to enter the data but while sending post data to the backend I'm facing difficulty. My form textfield area name is 'task' (E.g. <input type=\"text\" name=\"task\">) and I'm passing let's say 'jonas' as the value. Everythin on the front-end is working fine but in the backend when I console the req.body in post method callback function, I do get {jonas: ' '} as the value. Why is this happening? I mean it should have been {task: 'jonas'}, right?\r\n\r\nPlease someone help me with this thing. I'm stuck on this problem for last two days. I could have shared the code screenshots but the codebase is really huge.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4766/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4766/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4765",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4765/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4765/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4765/events",
    "html_url": "https://github.com/expressjs/express/pull/4765",
    "id": 1064941862,
    "node_id": "PR_kwDOAAOeZ84vFObR",
    "number": 4765,
    "title": "Correct one app.head test based on test description",
    "user": {
      "login": "yuan-jiang",
      "id": 9428354,
      "node_id": "MDQ6VXNlcjk0MjgzNTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9428354?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yuan-jiang",
      "html_url": "https://github.com/yuan-jiang",
      "followers_url": "https://api.github.com/users/yuan-jiang/followers",
      "following_url": "https://api.github.com/users/yuan-jiang/following{/other_user}",
      "gists_url": "https://api.github.com/users/yuan-jiang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yuan-jiang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yuan-jiang/subscriptions",
      "organizations_url": "https://api.github.com/users/yuan-jiang/orgs",
      "repos_url": "https://api.github.com/users/yuan-jiang/repos",
      "events_url": "https://api.github.com/users/yuan-jiang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yuan-jiang/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-11-27T08:53:15Z",
    "updated_at": "2021-12-04T15:20:57Z",
    "closed_at": "2021-12-04T15:20:56Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4765",
      "html_url": "https://github.com/expressjs/express/pull/4765",
      "diff_url": "https://github.com/expressjs/express/pull/4765.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4765.patch",
      "merged_at": "2021-12-04T15:20:57Z"
    },
    "body": "Happened to notice it while reading the tests (might just be a typo):\r\nhttps://github.com/expressjs/express/blob/master/test/app.head.js#L29-L34\r\n\r\nBased on the test description `should output the same headers as GET requests`, I think it should've been to validate the `head` requests and `get` requests have the same headers.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4765/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4765/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4764",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4764/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4764/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4764/events",
    "html_url": "https://github.com/expressjs/express/issues/4764",
    "id": 1061839996,
    "node_id": "I_kwDOAAOeZ84_SmR8",
    "number": 4764,
    "title": "Express JSON Problem",
    "user": {
      "login": "Leonardo-KF",
      "id": 89053412,
      "node_id": "MDQ6VXNlcjg5MDUzNDEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/89053412?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Leonardo-KF",
      "html_url": "https://github.com/Leonardo-KF",
      "followers_url": "https://api.github.com/users/Leonardo-KF/followers",
      "following_url": "https://api.github.com/users/Leonardo-KF/following{/other_user}",
      "gists_url": "https://api.github.com/users/Leonardo-KF/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Leonardo-KF/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Leonardo-KF/subscriptions",
      "organizations_url": "https://api.github.com/users/Leonardo-KF/orgs",
      "repos_url": "https://api.github.com/users/Leonardo-KF/repos",
      "events_url": "https://api.github.com/users/Leonardo-KF/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Leonardo-KF/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2021-11-24T00:11:21Z",
    "updated_at": "2021-11-24T00:31:02Z",
    "closed_at": "2021-11-24T00:22:09Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "If you don't put the \"()\" in the function \"app.use(express.json);\" the application has no errors and it's in an eternal loop, where it doesn't break the application, but it doesn't execute any requests either.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4764/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4764/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4763",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4763/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4763/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4763/events",
    "html_url": "https://github.com/expressjs/express/issues/4763",
    "id": 1061496420,
    "node_id": "I_kwDOAAOeZ84_RSZk",
    "number": 4763,
    "title": "[Request] - Triage Role `:D`",
    "user": {
      "login": "Segmentational",
      "id": 60639231,
      "node_id": "MDQ6VXNlcjYwNjM5MjMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/60639231?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Segmentational",
      "html_url": "https://github.com/Segmentational",
      "followers_url": "https://api.github.com/users/Segmentational/followers",
      "following_url": "https://api.github.com/users/Segmentational/following{/other_user}",
      "gists_url": "https://api.github.com/users/Segmentational/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Segmentational/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Segmentational/subscriptions",
      "organizations_url": "https://api.github.com/users/Segmentational/orgs",
      "repos_url": "https://api.github.com/users/Segmentational/repos",
      "events_url": "https://api.github.com/users/Segmentational/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Segmentational/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2021-11-23T16:39:48Z",
    "updated_at": "2022-01-16T10:31:30Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "# Request Triage Role for `@Segmentational` #\r\n\r\n- Extending [Issue 4762](https://github.com/expressjs/express/discussions/4762)\r\n\r\n---\r\n\r\n- [x] I have read and understood the project's Code of Conduct.\r\n- [x] I also have read and understood the process and best practices around Express triaging.\r\n\r\n**I request for a triager role for the following GitHub organizations**:\r\n\r\n- [x] `jshttp`\r\n- [x] `pillarjs`\r\n- [x] `express`\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4763/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4763/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4760",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4760/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4760/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4760/events",
    "html_url": "https://github.com/expressjs/express/issues/4760",
    "id": 1060612816,
    "node_id": "I_kwDOAAOeZ84_N6rQ",
    "number": 4760,
    "title": "[Discussion] Looking to Provide Support - Request",
    "user": {
      "login": "Segmentational",
      "id": 60639231,
      "node_id": "MDQ6VXNlcjYwNjM5MjMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/60639231?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Segmentational",
      "html_url": "https://github.com/Segmentational",
      "followers_url": "https://api.github.com/users/Segmentational/followers",
      "following_url": "https://api.github.com/users/Segmentational/following{/other_user}",
      "gists_url": "https://api.github.com/users/Segmentational/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Segmentational/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Segmentational/subscriptions",
      "organizations_url": "https://api.github.com/users/Segmentational/orgs",
      "repos_url": "https://api.github.com/users/Segmentational/repos",
      "events_url": "https://api.github.com/users/Segmentational/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Segmentational/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2021-11-22T21:31:26Z",
    "updated_at": "2021-11-23T14:34:12Z",
    "closed_at": "2021-11-23T14:34:12Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello, hello\r\n\r\nFirst, I want to personally thank everyone a part of the team for their time and contribution(s).\r\n\r\n## Overview ##\r\n\r\nIt seems that the project has been receiving some... weird and unjust heat, recently. While I am in belief that the project is incredibly stable at this time, I see pull requests that may have been lost due to timely responses.\r\n\r\nI get it -- I can only imagine we're all busy with our actual day jobs, doing, well, the same thing we're doing here. \r\n\r\nI've been looking for quite some to a larger project to contribute to; I was thinking about IBM's Carbon-Design-Framework, but ever since I've shifted away from FastAPI as a backend, to express, I'm definitely much more interested in this project.\r\n\r\n**Bottom-line**: I'd like to better understand what `express` is currently experiencing the most issues/problems with, and help out `:D`\r\n\r\n## Background ##\r\n\r\nThe last three years I've been active 5-6 days a week contributing to various open source projects I created. Recently, I've since moved from my personal instance (GitLab*) to GitHub. I have no problem spinning that instance back up if anyone is interested in confirming, but the organization I house my projects nowadays is the following: https://github.com/cloud-hybrid\r\n\r\n---\r\n\r\nI'm looking forward to any and all feedback `:D`",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4760/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4760/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4758",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4758/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4758/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4758/events",
    "html_url": "https://github.com/expressjs/express/issues/4758",
    "id": 1059455850,
    "node_id": "I_kwDOAAOeZ84_JgNq",
    "number": 4758,
    "title": ".",
    "user": {
      "login": "jimmywarting",
      "id": 1148376,
      "node_id": "MDQ6VXNlcjExNDgzNzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1148376?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimmywarting",
      "html_url": "https://github.com/jimmywarting",
      "followers_url": "https://api.github.com/users/jimmywarting/followers",
      "following_url": "https://api.github.com/users/jimmywarting/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimmywarting/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimmywarting/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimmywarting/subscriptions",
      "organizations_url": "https://api.github.com/users/jimmywarting/orgs",
      "repos_url": "https://api.github.com/users/jimmywarting/repos",
      "events_url": "https://api.github.com/users/jimmywarting/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimmywarting/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2021-11-21T18:50:14Z",
    "updated_at": "2021-11-21T18:57:10Z",
    "closed_at": "2021-11-21T18:50:16Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi, @dougwilson, sry to bother you... you wrote:\r\n\r\n> Yes, this issue has plenty of feedback. There is no need for more, as stated above it was already decided upon. This is essentially now a tracking issue for **landing the change**. I'm going to lock it to prevent further comments that are no longer needed. https://github.com/expressjs/express/issues/2755#issuecomment-974867330\r\n\r\nCould you summarize what you meant by it? (so others like me don't ask more dum question like this) \r\nWhat node version did you decide to support/drop? \r\nA one liner sentence would be sufficient of what your intentions are... both to your last comment and to the top post (as an edit/update), \r\n\r\nno need to comment here... thanks",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4758/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4758/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4757",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4757/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4757/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4757/events",
    "html_url": "https://github.com/expressjs/express/issues/4757",
    "id": 1056840334,
    "node_id": "I_kwDOAAOeZ84-_hqO",
    "number": 4757,
    "title": "Request triager role for the-unfactoring-guru",
    "user": {
      "login": "the-unfactoring-guru",
      "id": 70868650,
      "node_id": "MDQ6VXNlcjcwODY4NjUw",
      "avatar_url": "https://avatars.githubusercontent.com/u/70868650?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/the-unfactoring-guru",
      "html_url": "https://github.com/the-unfactoring-guru",
      "followers_url": "https://api.github.com/users/the-unfactoring-guru/followers",
      "following_url": "https://api.github.com/users/the-unfactoring-guru/following{/other_user}",
      "gists_url": "https://api.github.com/users/the-unfactoring-guru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/the-unfactoring-guru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/the-unfactoring-guru/subscriptions",
      "organizations_url": "https://api.github.com/users/the-unfactoring-guru/orgs",
      "repos_url": "https://api.github.com/users/the-unfactoring-guru/repos",
      "events_url": "https://api.github.com/users/the-unfactoring-guru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/the-unfactoring-guru/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-11-18T02:03:05Z",
    "updated_at": "2022-02-03T02:49:36Z",
    "closed_at": "2022-02-02T20:20:36Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have read and understood the project's Code of Conduct.\r\nI also have read and understood the process and best practices around Express triaging.\r\n\r\nI request for a triager role for the following GitHub organizations:\r\n\r\njshttp\r\npillarjs\r\nexpress\r\n\r\nExtra Info:\r\nI work at an organization called DevaSolutions (GitHub handle: [devasolutions](https://github.com/devasolutions)) and we create basic web applications for small companies in Latin America. Other than this, we also create open source tools for developers who want to be part of the web development community. Examples: [bring-me](https://github.com/devasolutions/bring-me) and the current development of a basic express project app generator (Repo not started yet).\r\n\r\nThank you,\r\nsincerly\r\nMariano Hurtado de Mendoza",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4757/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4757/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4756",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4756/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4756/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4756/events",
    "html_url": "https://github.com/expressjs/express/issues/4756",
    "id": 1055112953,
    "node_id": "I_kwDOAAOeZ84-4775",
    "number": 4756,
    "title": "Anniversary 🎂",
    "user": {
      "login": "yandeu",
      "id": 20306025,
      "node_id": "MDQ6VXNlcjIwMzA2MDI1",
      "avatar_url": "https://avatars.githubusercontent.com/u/20306025?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yandeu",
      "html_url": "https://github.com/yandeu",
      "followers_url": "https://api.github.com/users/yandeu/followers",
      "following_url": "https://api.github.com/users/yandeu/following{/other_user}",
      "gists_url": "https://api.github.com/users/yandeu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yandeu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yandeu/subscriptions",
      "organizations_url": "https://api.github.com/users/yandeu/orgs",
      "repos_url": "https://api.github.com/users/yandeu/repos",
      "events_url": "https://api.github.com/users/yandeu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yandeu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 324166296,
        "node_id": "MDU6TGFiZWwzMjQxNjYyOTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/meta",
        "name": "meta",
        "color": "fef2c0",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2021-11-16T17:01:57Z",
    "updated_at": "2021-12-04T11:26:21Z",
    "closed_at": "2021-11-17T16:36:53Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi @dougwilson,\r\n\r\nFirst of all, thanks for maintaining this project for so long.\r\n\r\nToday is the 11th anniversary of express.js (based on wikipedia).\r\n\r\nI love using express and would love continue using it in the future. Unfortunately, express.js is written in a old coding styles and is hard to read and therefore also difficult to make PRs.\r\n\r\nThat's why I decided to make [`express6`](https://www.npmjs.com/package/express6). It uses the latest TypeScript features and up-to-date dependencies.\r\n\r\nI will continue maintaining express6 and who knows, maybe someday you will merge it into express.\r\n\r\nTkanks! and Happy Birthday 😊\r\n\r\nYannick",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4756/reactions",
      "total_count": 10,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 10,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4756/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4755",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4755/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4755/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4755/events",
    "html_url": "https://github.com/expressjs/express/issues/4755",
    "id": 1054010985,
    "node_id": "I_kwDOAAOeZ84-0u5p",
    "number": 4755,
    "title": "Ability to get req and res context inside json replacer",
    "user": {
      "login": "prkeshri",
      "id": 6885298,
      "node_id": "MDQ6VXNlcjY4ODUyOTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6885298?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prkeshri",
      "html_url": "https://github.com/prkeshri",
      "followers_url": "https://api.github.com/users/prkeshri/followers",
      "following_url": "https://api.github.com/users/prkeshri/following{/other_user}",
      "gists_url": "https://api.github.com/users/prkeshri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prkeshri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prkeshri/subscriptions",
      "organizations_url": "https://api.github.com/users/prkeshri/orgs",
      "repos_url": "https://api.github.com/users/prkeshri/repos",
      "events_url": "https://api.github.com/users/prkeshri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prkeshri/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 163600,
        "node_id": "MDU6TGFiZWwxNjM2MDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-11-15T19:12:06Z",
    "updated_at": "2021-11-15T19:17:50Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "More info can be found here. Kindly have a look:\r\nhttps://github.com/expressjs/express/pull/3981",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4755/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4755/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4754",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4754/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4754/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4754/events",
    "html_url": "https://github.com/expressjs/express/pull/4754",
    "id": 1053295934,
    "node_id": "PR_kwDOAAOeZ84ug5lh",
    "number": 4754,
    "title": "Add CloudFront-Forwarded-Proto support",
    "user": {
      "login": "touzoku",
      "id": 1285662,
      "node_id": "MDQ6VXNlcjEyODU2NjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1285662?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/touzoku",
      "html_url": "https://github.com/touzoku",
      "followers_url": "https://api.github.com/users/touzoku/followers",
      "following_url": "https://api.github.com/users/touzoku/following{/other_user}",
      "gists_url": "https://api.github.com/users/touzoku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/touzoku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/touzoku/subscriptions",
      "organizations_url": "https://api.github.com/users/touzoku/orgs",
      "repos_url": "https://api.github.com/users/touzoku/repos",
      "events_url": "https://api.github.com/users/touzoku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/touzoku/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 18291,
        "node_id": "MDU6TGFiZWwxODI5MQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2021-11-15T07:16:31Z",
    "updated_at": "2023-08-30T07:32:06Z",
    "closed_at": "2023-08-30T07:32:06Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4754",
      "html_url": "https://github.com/expressjs/express/pull/4754",
      "diff_url": "https://github.com/expressjs/express/pull/4754.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4754.patch",
      "merged_at": null
    },
    "body": "Hi,\r\n\r\nI know it is not a very standard header to support to, but it has been very hard to patch expressjs every time we need to use CloudFront in front of a bare express app. I am not sure why AWS does not stick to the standard headers in the first place.\r\n\r\nWould it be possible to add support for the `CloudFront-Forwarded-Proto` header as I have demonstrated in this pull request?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4754/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4754/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4753",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4753/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4753/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4753/events",
    "html_url": "https://github.com/expressjs/express/issues/4753",
    "id": 1053074659,
    "node_id": "I_kwDOAAOeZ84-xKTj",
    "number": 4753,
    "title": "Povide a setting to control req.fresh evaluation",
    "user": {
      "login": "gh-andre",
      "id": 7843659,
      "node_id": "MDQ6VXNlcjc4NDM2NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7843659?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gh-andre",
      "html_url": "https://github.com/gh-andre",
      "followers_url": "https://api.github.com/users/gh-andre/followers",
      "following_url": "https://api.github.com/users/gh-andre/following{/other_user}",
      "gists_url": "https://api.github.com/users/gh-andre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gh-andre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gh-andre/subscriptions",
      "organizations_url": "https://api.github.com/users/gh-andre/orgs",
      "repos_url": "https://api.github.com/users/gh-andre/repos",
      "events_url": "https://api.github.com/users/gh-andre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gh-andre/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 163600,
        "node_id": "MDU6TGFiZWwxNjM2MDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2021-11-14T23:40:39Z",
    "updated_at": "2021-11-15T01:56:15Z",
    "closed_at": "2021-11-15T01:56:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "It is possible to disable the behind-the-scenes logic around the `Etag` header via `app.set(\"etag\", false)`, but the same cannot be done against its counterpart, `If-Modified-Since` and Express silently discards a fully rendered response based on just evaluating `Last-Modified` vs. `If-Modified-Since`. RFC 7232 says that the `304` response SHOULD be sent in this case, but doesn't say it MUST be sent, which means that some configuration, similar to `etag` is needed to control this behavior.\r\n\r\nIn practical terms, I may have a listing of items and `Last-Modified` in this list would be the time stamp of the last item. Some of the items may be edited, which doesn't change the last modified date of the whole list, but may benefit from intermediate items displayed in their most up-to-date form. This is just an example, though, the `req.fresh` logic shouldn't enforce this behavior as if it's mandated by the RFC.\r\n\r\nHere's an example:\r\n```js\r\nconst express = require(\"express\");\r\nconst app = express();\r\nconst port = 3000;\r\n\r\nfunction index_get(req, res)\r\n{\r\n  // ... evaluates If-Modified-Since, decides to render a new response ...\r\n\r\n  // keep the modified date (e.g. listing item was updated, but no new items added)\r\n  res.set(\"Last-Modified\", new Date(2021, 10, 14, 0, 0, 0).toUTCString());\r\n\r\n  // runs database queries and generates a slightly different response, which is thrown away because of req.fresh\r\n  res.send(\"Hello World!\");\r\n}\r\n\r\napp.set(\"etag\", false);\r\napp.get(\"/\", index_get);\r\napp.listen(port);\r\n\r\nconsole.log(\"Listening on port %d\", port);\r\n```\r\nHit `F5` a few times and after the first `200` response, all subsequent responses will be `304`, even though nothing in the script generates those.\r\n\r\nIn `response.js`, in `res.send = function send(body)` this code calls `req.fresh`, which evaluates `If-Modified-Since` vs. `Last-Updated` and if the latter is the same as the former, it drops the response and a few headers:\r\n```js\r\n  // freshness\r\n  if (req.fresh) this.statusCode = 304;\r\n\r\n  // strip irrelevant headers\r\n  if (204 === this.statusCode || 304 === this.statusCode) {\r\n    this.removeHeader('Content-Type');\r\n    this.removeHeader('Content-Length');\r\n    this.removeHeader('Transfer-Encoding');\r\n    chunk = '';\r\n...\r\n    this.end(chunk, encoding);\r\n  }\r\n```\r\nIt would be nice if discarding responses based on `req.fresh` could be disabled via application settings, similar to how `etag` generation and evaluation may be disabled.\r\n\r\nIf you choose not to consider this change, it would be useful if the current behavior is documented. I spent some time trying to figure out why Express silently drops a fully rendered response.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4753/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4753/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4752",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4752/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4752/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4752/events",
    "html_url": "https://github.com/expressjs/express/pull/4752",
    "id": 1053011907,
    "node_id": "PR_kwDOAAOeZ84ugAGU",
    "number": 4752,
    "title": "feat: bump router to beta.1",
    "user": {
      "login": "nfantone",
      "id": 476069,
      "node_id": "MDQ6VXNlcjQ3NjA2OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/476069?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nfantone",
      "html_url": "https://github.com/nfantone",
      "followers_url": "https://api.github.com/users/nfantone/followers",
      "following_url": "https://api.github.com/users/nfantone/following{/other_user}",
      "gists_url": "https://api.github.com/users/nfantone/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nfantone/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nfantone/subscriptions",
      "organizations_url": "https://api.github.com/users/nfantone/orgs",
      "repos_url": "https://api.github.com/users/nfantone/repos",
      "events_url": "https://api.github.com/users/nfantone/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nfantone/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 98481977,
        "node_id": "MDU6TGFiZWw5ODQ4MTk3Nw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 133578716,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/deps",
        "name": "deps",
        "color": "444444",
        "default": false,
        "description": null
      },
      {
        "id": 553390440,
        "node_id": "MDU6TGFiZWw1NTMzOTA0NDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/needs%20rebase",
        "name": "needs rebase",
        "color": "e11d21",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2021-11-14T18:48:45Z",
    "updated_at": "2022-03-07T09:57:55Z",
    "closed_at": "2022-03-01T12:24:51Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": true,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4752",
      "html_url": "https://github.com/expressjs/express/pull/4752",
      "diff_url": "https://github.com/expressjs/express/pull/4752.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4752.patch",
      "merged_at": null
    },
    "body": "> This is a continuation from https://github.com/expressjs/express/pull/4321 - needed to move forward with the [`express@5.0` release](https://github.com/expressjs/express/pull/2237).\r\n\r\n* Bumps `router` to latest `beta.1` version.\r\n* Fixes and accommodates all tests.\r\n\r\nSome remarks:\r\n\r\n* I based my changes entirely off of what's documented in [`pillarjs/router` changelog](https://github.com/pillarjs/router/blob/v2.0.0-beta.1/HISTORY.md#200-beta1--2020-03-29) as I'm not familiar with the internals, so unsure if it's 100% correct - but tests do pass.\r\n* Some unrelated tests were randomly failing locally for me with a `socket hang up` error, which seem to go away after re-running them (macOS 11.6). Is this expected behaviour?\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4752/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4752/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4751",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4751/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4751/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4751/events",
    "html_url": "https://github.com/expressjs/express/issues/4751",
    "id": 1049260432,
    "node_id": "I_kwDOAAOeZ84-inGQ",
    "number": 4751,
    "title": "How do we find the user IP address when the request is made ?",
    "user": {
      "login": "silicon-ninja",
      "id": 48326585,
      "node_id": "MDQ6VXNlcjQ4MzI2NTg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/48326585?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/silicon-ninja",
      "html_url": "https://github.com/silicon-ninja",
      "followers_url": "https://api.github.com/users/silicon-ninja/followers",
      "following_url": "https://api.github.com/users/silicon-ninja/following{/other_user}",
      "gists_url": "https://api.github.com/users/silicon-ninja/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/silicon-ninja/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/silicon-ninja/subscriptions",
      "organizations_url": "https://api.github.com/users/silicon-ninja/orgs",
      "repos_url": "https://api.github.com/users/silicon-ninja/repos",
      "events_url": "https://api.github.com/users/silicon-ninja/events{/privacy}",
      "received_events_url": "https://api.github.com/users/silicon-ninja/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2021-11-10T00:20:37Z",
    "updated_at": "2021-11-10T00:27:36Z",
    "closed_at": "2021-11-10T00:22:11Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I was thinking about Netflix or any big company's authentication and see how they work... so I noticed that if I log in from any device it sends me an approximate location and an IP Address. My question is how can we console log that IP address when the request is made? Thank You. ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4751/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4751/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4750",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4750/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4750/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4750/events",
    "html_url": "https://github.com/expressjs/express/issues/4750",
    "id": 1048557393,
    "node_id": "I_kwDOAAOeZ84-f7dR",
    "number": 4750,
    "title": "custom ETag function isn't working for SendFile",
    "user": {
      "login": "kokushkin",
      "id": 9853656,
      "node_id": "MDQ6VXNlcjk4NTM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9853656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kokushkin",
      "html_url": "https://github.com/kokushkin",
      "followers_url": "https://api.github.com/users/kokushkin/followers",
      "following_url": "https://api.github.com/users/kokushkin/following{/other_user}",
      "gists_url": "https://api.github.com/users/kokushkin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kokushkin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kokushkin/subscriptions",
      "organizations_url": "https://api.github.com/users/kokushkin/orgs",
      "repos_url": "https://api.github.com/users/kokushkin/repos",
      "events_url": "https://api.github.com/users/kokushkin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kokushkin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-11-09T12:36:19Z",
    "updated_at": "2021-11-22T06:13:17Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I set the custom function according to the http://expressjs.com/en/api.html#etag.options.table\r\n```\r\napp.set('etag', function (body, encoding) {\r\n  return generateHash(body, encoding) // consider the function is defined\r\n})\r\n```\r\nDespite on that it's not working and the best way I could influence etag value is to call\r\nsendFile with etag : true or false but this just turns on and off the standard etag (also not documented) , not the custom one.\r\n\r\nhttps://github.com/expressjs/express/issues/2294\r\nhttps://github.com/expressjs/express/issues/2129\r\n\r\n\r\nMy use case is that I want to track responses of specific files. So I wanted to make a \"strong hash\" that I can be 100% sure would  unambiguously represent the file.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4750/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4750/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4749",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4749/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4749/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4749/events",
    "html_url": "https://github.com/expressjs/express/issues/4749",
    "id": 1044269604,
    "node_id": "I_kwDOAAOeZ84-Pkok",
    "number": 4749,
    "title": "how to send a different response",
    "user": {
      "login": "frmdeveloper",
      "id": 80396521,
      "node_id": "MDQ6VXNlcjgwMzk2NTIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/80396521?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frmdeveloper",
      "html_url": "https://github.com/frmdeveloper",
      "followers_url": "https://api.github.com/users/frmdeveloper/followers",
      "following_url": "https://api.github.com/users/frmdeveloper/following{/other_user}",
      "gists_url": "https://api.github.com/users/frmdeveloper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frmdeveloper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frmdeveloper/subscriptions",
      "organizations_url": "https://api.github.com/users/frmdeveloper/orgs",
      "repos_url": "https://api.github.com/users/frmdeveloper/repos",
      "events_url": "https://api.github.com/users/frmdeveloper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frmdeveloper/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2021-11-04T01:20:34Z",
    "updated_at": "2021-11-15T00:08:19Z",
    "closed_at": "2021-11-15T00:08:16Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "how to send a different response. \r\nexample: \r\n- in browser = send html \r\n- on axios/fetch/curl = send json\r\n\r\nURL example\r\nhttps://api.zeks.me/api/ig?apikey=apivinz\r\n\r\nHOW",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4749/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4749/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4746",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4746/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4746/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4746/events",
    "html_url": "https://github.com/expressjs/express/issues/4746",
    "id": 1043902444,
    "node_id": "I_kwDOAAOeZ84-OK_s",
    "number": 4746,
    "title": "UPDATING THE SOURCE CODE",
    "user": {
      "login": "hasnath1",
      "id": 72639949,
      "node_id": "MDQ6VXNlcjcyNjM5OTQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/72639949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hasnath1",
      "html_url": "https://github.com/hasnath1",
      "followers_url": "https://api.github.com/users/hasnath1/followers",
      "following_url": "https://api.github.com/users/hasnath1/following{/other_user}",
      "gists_url": "https://api.github.com/users/hasnath1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hasnath1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hasnath1/subscriptions",
      "organizations_url": "https://api.github.com/users/hasnath1/orgs",
      "repos_url": "https://api.github.com/users/hasnath1/repos",
      "events_url": "https://api.github.com/users/hasnath1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hasnath1/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-11-03T17:53:51Z",
    "updated_at": "2021-11-03T17:57:44Z",
    "closed_at": "2021-11-03T17:57:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I was reading the source code of expressjs . I was thinking that we should update the source code to latest es6 version . Have any suggestions ??? I am also willing help in the process . I have not yet modified the code . Just reading it to know how it works . ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4746/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4746/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4745",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4745/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4745/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4745/events",
    "html_url": "https://github.com/expressjs/express/pull/4745",
    "id": 1043896115,
    "node_id": "PR_kwDOAAOeZ84uDUwI",
    "number": 4745,
    "title": "Develop",
    "user": {
      "login": "hasnath1",
      "id": 72639949,
      "node_id": "MDQ6VXNlcjcyNjM5OTQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/72639949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hasnath1",
      "html_url": "https://github.com/hasnath1",
      "followers_url": "https://api.github.com/users/hasnath1/followers",
      "following_url": "https://api.github.com/users/hasnath1/following{/other_user}",
      "gists_url": "https://api.github.com/users/hasnath1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hasnath1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hasnath1/subscriptions",
      "organizations_url": "https://api.github.com/users/hasnath1/orgs",
      "repos_url": "https://api.github.com/users/hasnath1/repos",
      "events_url": "https://api.github.com/users/hasnath1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hasnath1/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-11-03T17:47:32Z",
    "updated_at": "2021-11-03T17:49:51Z",
    "closed_at": "2021-11-03T17:48:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4745",
      "html_url": "https://github.com/expressjs/express/pull/4745",
      "diff_url": "https://github.com/expressjs/express/pull/4745.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4745.patch",
      "merged_at": null
    },
    "body": "I was reading the source code of expressjs . I was thinking that we should update the source code to latest es6 version . Have any suggestions ??? I am also willing help in the process . ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4745/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4745/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4744",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4744/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4744/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4744/events",
    "html_url": "https://github.com/expressjs/express/pull/4744",
    "id": 1043399309,
    "node_id": "PR_kwDOAAOeZ84uB4cV",
    "number": 4744,
    "title": "res.json & \"json escape\" should always return json",
    "user": {
      "login": "drewm",
      "id": 225402,
      "node_id": "MDQ6VXNlcjIyNTQwMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/225402?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drewm",
      "html_url": "https://github.com/drewm",
      "followers_url": "https://api.github.com/users/drewm/followers",
      "following_url": "https://api.github.com/users/drewm/following{/other_user}",
      "gists_url": "https://api.github.com/users/drewm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drewm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drewm/subscriptions",
      "organizations_url": "https://api.github.com/users/drewm/orgs",
      "repos_url": "https://api.github.com/users/drewm/repos",
      "events_url": "https://api.github.com/users/drewm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drewm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 8497,
        "node_id": "MDU6TGFiZWw4NDk3",
        "url": "https://api.github.com/repos/expressjs/express/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-11-03T11:02:06Z",
    "updated_at": "2021-11-17T05:36:22Z",
    "closed_at": "2021-11-17T05:36:22Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4744",
      "html_url": "https://github.com/expressjs/express/pull/4744",
      "diff_url": "https://github.com/expressjs/express/pull/4744.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4744.patch",
      "merged_at": "2021-11-17T05:36:22Z"
    },
    "body": "When using the \"json escape\" setting, `res.json` was returning `text/html` response when being called with a falsy value such as `undefined`. `JSON.stringify()` can return `undefined` so this guards against that before using `String.replace()`.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4744/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4744/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4743",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4743/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4743/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4743/events",
    "html_url": "https://github.com/expressjs/express/pull/4743",
    "id": 1041659891,
    "node_id": "PR_kwDOAAOeZ84t8vp1",
    "number": 4743,
    "title": "Update message with bar",
    "user": {
      "login": "idcmardelplata",
      "id": 1824670,
      "node_id": "MDQ6VXNlcjE4MjQ2NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1824670?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/idcmardelplata",
      "html_url": "https://github.com/idcmardelplata",
      "followers_url": "https://api.github.com/users/idcmardelplata/followers",
      "following_url": "https://api.github.com/users/idcmardelplata/following{/other_user}",
      "gists_url": "https://api.github.com/users/idcmardelplata/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/idcmardelplata/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/idcmardelplata/subscriptions",
      "organizations_url": "https://api.github.com/users/idcmardelplata/orgs",
      "repos_url": "https://api.github.com/users/idcmardelplata/repos",
      "events_url": "https://api.github.com/users/idcmardelplata/events{/privacy}",
      "received_events_url": "https://api.github.com/users/idcmardelplata/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2021-11-01T21:28:06Z",
    "updated_at": "2021-11-01T21:30:12Z",
    "closed_at": "2021-11-01T21:28:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4743",
      "html_url": "https://github.com/expressjs/express/pull/4743",
      "diff_url": "https://github.com/expressjs/express/pull/4743.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4743.patch",
      "merged_at": null
    },
    "body": "single test",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4743/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4743/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4741",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4741/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4741/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4741/events",
    "html_url": "https://github.com/expressjs/express/issues/4741",
    "id": 1040311938,
    "node_id": "I_kwDOAAOeZ84-AeaC",
    "number": 4741,
    "title": "Older version of path-to-regexp in Express package.json causing problems with some paths",
    "user": {
      "login": "jfriend00",
      "id": 6621575,
      "node_id": "MDQ6VXNlcjY2MjE1NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6621575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jfriend00",
      "html_url": "https://github.com/jfriend00",
      "followers_url": "https://api.github.com/users/jfriend00/followers",
      "following_url": "https://api.github.com/users/jfriend00/following{/other_user}",
      "gists_url": "https://api.github.com/users/jfriend00/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jfriend00/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jfriend00/subscriptions",
      "organizations_url": "https://api.github.com/users/jfriend00/orgs",
      "repos_url": "https://api.github.com/users/jfriend00/repos",
      "events_url": "https://api.github.com/users/jfriend00/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jfriend00/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2021-10-30T21:52:30Z",
    "updated_at": "2021-10-30T22:39:49Z",
    "closed_at": "2021-10-30T21:54:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Running Express 4.17.1, if you define a route like this:\r\n\r\n`app.get(\"/(user|u)\", ...)`\r\n\r\nwith the intention of matching either `/user` or `/u`, then you get this error when the `app.get()` first executes to register the route:\r\n\r\n```\r\n  return new RegExp(path, flags);\r\n         ^\r\n\r\nSyntaxError: Invalid regular expression: /^\\/(?(?:([^\\/]+?))|u)\\/?$/: Invalid group\r\n    at new RegExp (<anonymous>)\r\n    at pathtoRegexp (D:\\code\\test\\temp\\node_modules\\express\\node_modules\\path-to-regexp\\index.js:128:10)\r\n    at new Layer (D:\\code\\test\\temp\\node_modules\\express\\lib\\router\\layer.js:45:17)\r\n    at Function.route (D:\\code\\test\\temp\\node_modules\\express\\lib\\router\\index.js:494:15)\r\n    at Function.app.<computed> [as get] (D:\\code\\test\\temp\\node_modules\\express\\lib\\application.js:481:30)\r\n    at Object.<anonymous> (D:\\code\\test\\temp\\temp.js:45:5)\r\n```\r\n\r\nThe issue occurs in the path-to-regexp module.  But, it appears to be something that has been fixed in more recent versions of path-to-regexp.  Express 4.17.1 has path-to-regexp: 0.1.7 in its package.json, whereas the latest version of path-to-regexp is 6.2.0.  And, when I manually call `path-to-regexp(\"/(user|u)\")` in this latest version, it does not cause the problem seen above.  In fact, the code that causes the problem above has been completely rewritten in path-to-regexp as it looks nothing like the older version I step through in Express.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4741/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4741/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4739",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4739/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4739/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4739/events",
    "html_url": "https://github.com/expressjs/express/issues/4739",
    "id": 1039298395,
    "node_id": "I_kwDOAAOeZ8498m9b",
    "number": 4739,
    "title": "Error [ERR_HTTP_HEADERS_SENT]: cannot set headers after they are sent to the client",
    "user": {
      "login": "Gopakumar8075",
      "id": 87717039,
      "node_id": "MDQ6VXNlcjg3NzE3MDM5",
      "avatar_url": "https://avatars.githubusercontent.com/u/87717039?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Gopakumar8075",
      "html_url": "https://github.com/Gopakumar8075",
      "followers_url": "https://api.github.com/users/Gopakumar8075/followers",
      "following_url": "https://api.github.com/users/Gopakumar8075/following{/other_user}",
      "gists_url": "https://api.github.com/users/Gopakumar8075/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Gopakumar8075/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Gopakumar8075/subscriptions",
      "organizations_url": "https://api.github.com/users/Gopakumar8075/orgs",
      "repos_url": "https://api.github.com/users/Gopakumar8075/repos",
      "events_url": "https://api.github.com/users/Gopakumar8075/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Gopakumar8075/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2021-10-29T08:15:05Z",
    "updated_at": "2021-10-29T16:00:52Z",
    "closed_at": "2021-10-29T08:23:27Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "```js\r\n//jshint esversion:6\r\n\r\nconst express = require(\"express\");\r\nconst bodyParser = require(\"body-parser\");\r\nconst ejs = require(\"ejs\");\r\n\r\nconst homeStartingContent = \"Lacus vel facilisis volutpat est velit egestas dui id ornare. Semper auctor neque vitae tempus quam. Sit amet cursus sit amet dictum sit amet justo. Viverra tellus in hac habitasse. Imperdiet proin fermentum leo vel orci porta. Donec ultrices tincidunt arcu non sodales neque sodales ut. Mattis molestie a iaculis at erat pellentesque adipiscing. Magnis dis parturient montes nascetur ridiculus mus mauris vitae ultricies. Adipiscing elit ut aliquam purus sit amet luctus venenatis lectus. Ultrices vitae auctor eu augue ut lectus arcu bibendum at. Odio euismod lacinia at quis risus sed vulputate odio ut. Cursus mattis molestie a iaculis at erat pellentesque adipiscing.\";\r\nconst aboutContent = \"Hac habitasse platea dictumst vestibulum rhoncus est pellentesque. Dictumst vestibulum rhoncus est pellentesque elit ullamcorper. Non diam phasellus vestibulum lorem sed. Platea dictumst quisque sagittis purus sit. Egestas sed sed risus pretium quam vulputate dignissim suspendisse. Mauris in aliquam sem fringilla. Semper risus in hendrerit gravida rutrum quisque non tellus orci. Amet massa vitae tortor condimentum lacinia quis vel eros. Enim ut tellus elementum sagittis vitae. Mauris ultrices eros in cursus turpis massa tincidunt dui.\";\r\nconst contactContent = \"Scelerisque eleifend donec pretium vulputate sapien. Rhoncus urna neque viverra justo nec ultrices. Arcu dui vivamus arcu felis bibendum. Consectetur adipiscing elit duis tristique. Risus viverra adipiscing at in tellus integer feugiat. Sapien nec sagittis aliquam malesuada bibendum arcu vitae. Consequat interdum varius sit amet mattis. Iaculis nunc sed augue lacus. Interdum posuere lorem ipsum dolor sit amet consectetur adipiscing elit. Pulvinar elementum integer enim neque. Ultrices gravida dictum fusce ut placerat orci nulla. Mauris in aliquam sem fringilla ut morbi tincidunt. Tortor posuere ac ut consequat semper viverra nam libero.\";\r\n\r\nconst app = express();\r\n\r\napp.set('view engine', 'ejs');\r\n\r\napp.use(bodyParser.urlencoded({extended: true}));\r\napp.use(express.static(\"public\"));\r\n\r\n\r\napp.get(\"/\",function(req,res){\r\n res.render(\"home\");\r\n    res.render(\"home\", {mainPara:homeStartingContent});\r\n});\r\n\r\napp.get(\"/about\",function(req,res){\r\n  res.render(\"about\");\r\n  res.render(\"about\", {aboutPara:aboutContent});\r\n});\r\n\r\n\r\napp.get(\"/contact\",function(req,res){\r\n res.render(\"contact\");\r\n  res.render(\"contact\", {contactPara: contactContent});\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\napp.listen(3000, function() {\r\n  console.log(\"Server started on port 3000\");\r\n});\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4739/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4739/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4738",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4738/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4738/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4738/events",
    "html_url": "https://github.com/expressjs/express/issues/4738",
    "id": 1037437537,
    "node_id": "I_kwDOAAOeZ8491gph",
    "number": 4738,
    "title": "'Better' Discussion/Question asking somethings",
    "user": {
      "login": "TheWonderTaser",
      "id": 85213577,
      "node_id": "MDQ6VXNlcjg1MjEzNTc3",
      "avatar_url": "https://avatars.githubusercontent.com/u/85213577?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheWonderTaser",
      "html_url": "https://github.com/TheWonderTaser",
      "followers_url": "https://api.github.com/users/TheWonderTaser/followers",
      "following_url": "https://api.github.com/users/TheWonderTaser/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheWonderTaser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheWonderTaser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheWonderTaser/subscriptions",
      "organizations_url": "https://api.github.com/users/TheWonderTaser/orgs",
      "repos_url": "https://api.github.com/users/TheWonderTaser/repos",
      "events_url": "https://api.github.com/users/TheWonderTaser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheWonderTaser/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-10-27T13:39:14Z",
    "updated_at": "2021-10-27T13:46:52Z",
    "closed_at": "2021-10-27T13:43:38Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Well I would suggest you guys to make a discord server or something the google discussions is \"dead\" and yea discord makes it easier to ask question, ig?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4738/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4738/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4737",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4737/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4737/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4737/events",
    "html_url": "https://github.com/expressjs/express/issues/4737",
    "id": 1035239264,
    "node_id": "I_kwDOAAOeZ849tH9g",
    "number": 4737,
    "title": "Is there any support for HTTP/2 on Express?",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-10-25T14:54:44Z",
    "updated_at": "2021-10-25T15:08:36Z",
    "closed_at": "2021-10-25T15:08:31Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Some time ago I opened a StackOverflow question about a misunderstanding why the HTTP/2 module wasn’t working on Express. They recommend visiting the status board of the project. Effectively, there was a help wanted about http2 / compression, but nothing about HTTP / 2 as well.  There is anothyng issue opened where I can read about HTTP/2 support, or there is any interesting on support from the community to make this possible?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4737/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4737/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4736",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4736/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4736/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4736/events",
    "html_url": "https://github.com/expressjs/express/issues/4736",
    "id": 1033668620,
    "node_id": "I_kwDOAAOeZ849nIgM",
    "number": 4736,
    "title": "router.use middleware is called twice",
    "user": {
      "login": "kri7217",
      "id": 20268760,
      "node_id": "MDQ6VXNlcjIwMjY4NzYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20268760?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kri7217",
      "html_url": "https://github.com/kri7217",
      "followers_url": "https://api.github.com/users/kri7217/followers",
      "following_url": "https://api.github.com/users/kri7217/following{/other_user}",
      "gists_url": "https://api.github.com/users/kri7217/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kri7217/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kri7217/subscriptions",
      "organizations_url": "https://api.github.com/users/kri7217/orgs",
      "repos_url": "https://api.github.com/users/kri7217/repos",
      "events_url": "https://api.github.com/users/kri7217/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kri7217/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 30,
    "created_at": "2021-10-22T14:49:44Z",
    "updated_at": "2021-11-17T17:51:52Z",
    "closed_at": "2021-11-17T17:51:51Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "### Node Version\r\n\r\n12.22.3\r\n\r\n### Express Version\r\n4.17.1\r\n\r\n### Platform\r\n\r\nDarwin 3655368-6357e 18.7.0 Darwin Kernel Version 18.7.0: Tue Jan 12 22:04:47 PST 2021; root:xnu-4903.278.56~1/RELEASE_X86_64 x86_64\r\n\r\n### Subsystem\r\n\r\n_No response_\r\n\r\n### What steps will reproduce the bug?\r\n\r\n**app.js**\r\n\r\n```js\r\nvar express = require('express');\r\nvar router = require('./router');\r\nvar app = express();\r\napp.use(\"/v1\",router);\r\n\r\napp.use(\"*\",(req,res)=>{\r\n  return res.end(\"Started\")\r\n})\r\napp.listen(3001,()=>console.log(\"Started on port 3001\"));\r\n```\r\n\r\n**router.js**\r\n\r\n```js\r\nvar express = require('express');\r\nvar router = express.Router();\r\nvar axios = require('axios')\r\n\r\nfunction makeApiCall(req) {\r\n  return Promise.race([\r\n    axios.request({\r\n      url: \"http://temp.dash.zeta.in/food.php\",\r\n      method: 'GET',\r\n      headers: req.headers\r\n    }),\r\n    new Promise(resolve => {\r\n      setTimeout(() => {\r\n        const timeOutErrorObj = {\r\n          errorMessage: \"API cancelled. Request TimeOut\",\r\n          errorStatus: 408\r\n        };\r\n        return resolve(timeOutErrorObj);\r\n      },0);\r\n    })\r\n  ]);\r\n}\r\n\r\nrouter.use('/food',(req, res, next) => {\r\n  req.socket.setTimeout(0);\r\n  console.log(\"Set timeout\", req.res.socket.timeout)\r\n  next();\r\n});\r\nrouter.use('/food', (req, res, next) => {\r\n  console.log(\"URL request for --->\", req.url);\r\n  return makeApiCall(req).then(response => {\r\n      const { errorStatus, errorMessage } = response;\r\n      if (errorStatus) {\r\n        return res.status(errorStatus).send({ message: errorMessage });\r\n      } else {\r\n        console.log(\r\n          `>>>> Received response for >>>> ${response.config.url}}`\r\n        );\r\n        return res.send(response.data);\r\n      }\r\n    }).catch(error => {\r\n      console.log(\"caught\");\r\n    })\r\n})\r\nmodule.exports = router;\r\n```\r\n\r\n\r\nDependencies\r\naxios 0.23v\r\nexpress 4.17.1v\r\n\r\nPlease install the above dependencies.\r\nRun node app.js\r\nOpen browser \r\n\r\nhttp://localhost:3001/v1/food\r\n\r\n\r\n### How often does it reproduce? Is there a required condition?\r\n\r\nFor every long running request I see the request triggered multiple times.\r\nIn the browser i see single request, i saw logs twice as below.\r\n\r\n\r\nSet timeout 0\r\nURL request for ---> /\r\n\r\nSet timeout 0\r\nURL request for ---> /\r\n\r\n\r\n\r\n### What is the expected behavior?\r\n\r\nI expect single log and the middleware should run once.\r\nFor a single request matching middleware should execute once not twice.\r\nExpected log\r\n\r\nSet timeout 0\r\nURL request for ---> /\r\n\r\n### What do you see instead?\r\n\r\n_No response_\r\n\r\n### Additional information\r\n\r\n_No response_",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4736/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4736/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4735",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4735/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4735/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4735/events",
    "html_url": "https://github.com/expressjs/express/issues/4735",
    "id": 1032708937,
    "node_id": "I_kwDOAAOeZ849jeNJ",
    "number": 4735,
    "title": "Question: How to send the Express Server console.log to the front end.",
    "user": {
      "login": "meilleur102",
      "id": 42327867,
      "node_id": "MDQ6VXNlcjQyMzI3ODY3",
      "avatar_url": "https://avatars.githubusercontent.com/u/42327867?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meilleur102",
      "html_url": "https://github.com/meilleur102",
      "followers_url": "https://api.github.com/users/meilleur102/followers",
      "following_url": "https://api.github.com/users/meilleur102/following{/other_user}",
      "gists_url": "https://api.github.com/users/meilleur102/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meilleur102/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meilleur102/subscriptions",
      "organizations_url": "https://api.github.com/users/meilleur102/orgs",
      "repos_url": "https://api.github.com/users/meilleur102/repos",
      "events_url": "https://api.github.com/users/meilleur102/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meilleur102/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2021-10-21T16:41:34Z",
    "updated_at": "2021-11-17T03:03:50Z",
    "closed_at": "2021-11-17T03:03:43Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi! I'm pretty new to JS and Node so it might be a dumb question. Ive look everywhere and I can't figure how to get a response from the Server. The goal is to be able to do a progress bar so I need to return the bytes download / Total bytes. \r\n\r\nFor now i'm able to have the information but only on the server, I can't figure how to send it to the front end. \r\n\r\nHeres what I did so far.\r\n\r\nServer.js\r\n```\r\napp.get('/', async (req, res) => {\r\n    const response =\r\n    fetch(`https://api.github.com/repos/${options.gitUser}/${options.gitRepo}/releases/latest`)\r\n    .then(response => response.json()).then(data => { json = data; })\r\n    .then(() => {\r\n        let zip;\r\n        for (i = 0; i < json['assets'].length; i++) {\r\n            if (json['assets'][i]['name'] === `${options.softName}`) zip = json['assets'][i];\r\n        }\r\n        let received_bytes = 0;\r\n        let total_bytes = 0;\r\n        \r\n        var req = request(\r\n            {\r\n                method: 'GET',\r\n                uri: zip['browser_download_url']\r\n            }\r\n        );\r\n        \r\n        var out = fs.createWriteStream(`C:\\\\Users\\\\${options.userName}\\\\AppData\\\\Roaming\\\\Camnor\\\\Camsoft\\\\${options.softName}`);\r\n        req.pipe(out);\r\n        \r\n        req.on('response', data => {\r\n            total_bytes = parseInt(data.headers['content-length']);\r\n        });\r\n\r\n        req.on('data', chunk => {\r\n            received_bytes += chunk.length;\r\n            console.log(received_bytes, total_bytes); <== The data I want in the front end\r\n        });\r\n        \r\n    });\r\n    \r\n})\r\n\r\n```\r\nOn the client side I just call \r\n```\r\n Neutralino.os.execCommand('server-win.exe');\r\n    const response = fetch('http://localhost:3000')\r\n```\r\nThe zip file is downloaded properlly on the correct folder. Everything else work.\r\nIve try a lot of thing but I can't figure how to send the information to the front end. \r\nThanks",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4735/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4735/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4734",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4734/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4734/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4734/events",
    "html_url": "https://github.com/expressjs/express/issues/4734",
    "id": 1031008198,
    "node_id": "I_kwDOAAOeZ849c-_G",
    "number": 4734,
    "title": "How to protect all routes",
    "user": {
      "login": "nubianMONK",
      "id": 8815522,
      "node_id": "MDQ6VXNlcjg4MTU1MjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8815522?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nubianMONK",
      "html_url": "https://github.com/nubianMONK",
      "followers_url": "https://api.github.com/users/nubianMONK/followers",
      "following_url": "https://api.github.com/users/nubianMONK/following{/other_user}",
      "gists_url": "https://api.github.com/users/nubianMONK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nubianMONK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nubianMONK/subscriptions",
      "organizations_url": "https://api.github.com/users/nubianMONK/orgs",
      "repos_url": "https://api.github.com/users/nubianMONK/repos",
      "events_url": "https://api.github.com/users/nubianMONK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nubianMONK/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2021-10-20T06:00:34Z",
    "updated_at": "2021-11-17T17:49:37Z",
    "closed_at": "2021-11-17T17:49:27Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Stack:\r\nFront End - Angular 12\r\n  |-- Leveraging Angular/MSAL to integrate with Azure AD for authentication\r\n\r\nBack End\r\n  |-- Node JS  V14.17.6\r\n  |-- Express 4.17.1\r\n  |-- Passport-Azure-AD V4.3.0 (passport-azure-ad is a collection of Passport Strategies to help you integrate with Azure Active\r\n  |-- Authentication Strategy - BearerStrategy (Protects APIs and Resources)\r\n Directory)\r\n       |-- Passport V0.3.2 (Passport version leveraged by Passport-Azure-AD)\r\n\r\nBack End Project Structure (Excerpt shown for brevity)\r\n  Root Directory\r\n   |-- src \r\n     |-- routers(Sub directory that holds all modularized routes per entity in individual .js files e.g. users.js, actions.js)\r\n     |--index.js(Application entry point)\r\n\r\nI'm looking for a way to protect all my routes/api endpoints, rather than having to apply the passport.authenticate to each route handler within each of the route endpoints which could be \"N\" number of routes per modularized route .js files as expressed above. I have tried the following below to no avail.\r\n\r\n1. Within the index.js file, i.e. the applications entry point, in which I use e.g. const users = require('./routers/users') and app.use('/api/v1/users', users) to mount my route handlers, I introduced the following app.use(passport.authenticate('oauth-bearer', { session: false })) since passport is a middleware but no joy\r\n\r\n2. Within the modularized route handling files, I tried the following as well: router.all('*',passport.authenticate('oauth-bearer', { session: false })) based on the express documentation, router.all should apply a middleware or provided function/handler at a path for all request methods and in this case the '*' should match all paths, but still this only worked for the base path '/' and not others in the file e.g. '/relationships' \r\n\r\nIf anyone can prescribe a way to protect all routes, it will be greatly appreciated.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4734/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4734/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4731",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4731/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4731/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4731/events",
    "html_url": "https://github.com/expressjs/express/issues/4731",
    "id": 1028198836,
    "node_id": "I_kwDOAAOeZ849SRG0",
    "number": 4731,
    "title": "User: @agus7fauzi unblock",
    "user": {
      "login": "agus77fauzi",
      "id": 92657894,
      "node_id": "U_kgDOBYXY5g",
      "avatar_url": "https://avatars.githubusercontent.com/u/92657894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/agus77fauzi",
      "html_url": "https://github.com/agus77fauzi",
      "followers_url": "https://api.github.com/users/agus77fauzi/followers",
      "following_url": "https://api.github.com/users/agus77fauzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/agus77fauzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/agus77fauzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agus77fauzi/subscriptions",
      "organizations_url": "https://api.github.com/users/agus77fauzi/orgs",
      "repos_url": "https://api.github.com/users/agus77fauzi/repos",
      "events_url": "https://api.github.com/users/agus77fauzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/agus77fauzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-10-17T02:44:58Z",
    "updated_at": "2021-10-17T02:54:10Z",
    "closed_at": "2021-10-17T02:54:10Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "hi I'm @agus7fauzi, I'm sorry for being impatient waiting for an answer to an issue on the express github repository. I do it because I have to make decisions quickly in my projects. I want to contribute to express js, please open my block. can you give me a chance?, you are a leader.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4731/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4731/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4729",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4729/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4729/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4729/events",
    "html_url": "https://github.com/expressjs/express/issues/4729",
    "id": 1028187749,
    "node_id": "I_kwDOAAOeZ849SOZl",
    "number": 4729,
    "title": "Express future?",
    "user": {
      "login": "agus7fauzi",
      "id": 59557895,
      "node_id": "MDQ6VXNlcjU5NTU3ODk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/59557895?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/agus7fauzi",
      "html_url": "https://github.com/agus7fauzi",
      "followers_url": "https://api.github.com/users/agus7fauzi/followers",
      "following_url": "https://api.github.com/users/agus7fauzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/agus7fauzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/agus7fauzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agus7fauzi/subscriptions",
      "organizations_url": "https://api.github.com/users/agus7fauzi/orgs",
      "repos_url": "https://api.github.com/users/agus7fauzi/repos",
      "events_url": "https://api.github.com/users/agus7fauzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/agus7fauzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-10-17T01:23:10Z",
    "updated_at": "2021-10-17T01:34:41Z",
    "closed_at": "2021-10-17T01:26:46Z",
    "author_association": "NONE",
    "active_lock_reason": "spam",
    "body": "what's wrong with the express framework, why is it rarely updated, has express been neglected?\r\nwhy Express version 5 is still an alpha version even though 5 years have passed, wouldn't that make no sense for an alpha version?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4729/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4729/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4728",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4728/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4728/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4728/events",
    "html_url": "https://github.com/expressjs/express/issues/4728",
    "id": 1028146161,
    "node_id": "I_kwDOAAOeZ849SEPx",
    "number": 4728,
    "title": "Express future?",
    "user": {
      "login": "agus7fauzi",
      "id": 59557895,
      "node_id": "MDQ6VXNlcjU5NTU3ODk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/59557895?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/agus7fauzi",
      "html_url": "https://github.com/agus7fauzi",
      "followers_url": "https://api.github.com/users/agus7fauzi/followers",
      "following_url": "https://api.github.com/users/agus7fauzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/agus7fauzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/agus7fauzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agus7fauzi/subscriptions",
      "organizations_url": "https://api.github.com/users/agus7fauzi/orgs",
      "repos_url": "https://api.github.com/users/agus7fauzi/repos",
      "events_url": "https://api.github.com/users/agus7fauzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/agus7fauzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 13,
    "created_at": "2021-10-16T20:54:29Z",
    "updated_at": "2021-11-14T18:52:03Z",
    "closed_at": "2021-10-16T20:57:50Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "what's wrong with the express framework, why is it rarely updated, has express been neglected?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4728/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4728/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4725",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4725/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4725/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4725/events",
    "html_url": "https://github.com/expressjs/express/issues/4725",
    "id": 1023981137,
    "node_id": "I_kwDOAAOeZ849CLZR",
    "number": 4725,
    "title": "Authenticate before receiving multipart form data",
    "user": {
      "login": "hgs-hcoard",
      "id": 38476451,
      "node_id": "MDQ6VXNlcjM4NDc2NDUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/38476451?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hgs-hcoard",
      "html_url": "https://github.com/hgs-hcoard",
      "followers_url": "https://api.github.com/users/hgs-hcoard/followers",
      "following_url": "https://api.github.com/users/hgs-hcoard/following{/other_user}",
      "gists_url": "https://api.github.com/users/hgs-hcoard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hgs-hcoard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hgs-hcoard/subscriptions",
      "organizations_url": "https://api.github.com/users/hgs-hcoard/orgs",
      "repos_url": "https://api.github.com/users/hgs-hcoard/repos",
      "events_url": "https://api.github.com/users/hgs-hcoard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hgs-hcoard/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-10-12T15:52:53Z",
    "updated_at": "2021-11-17T17:52:15Z",
    "closed_at": "2021-11-17T17:52:14Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have a route that accepts a file via multipart form data and saves it to the file system using multer. I am using passport to authenticate the user's jwt token. The route looks something like this:\r\n\r\nrouter.post(['/'],\r\n    passport.authenticate('keycloak', { session: false }),\r\n    multer.single('file')\r\n);\r\n\r\nThe problem is that the files I am uploading are very large. It can take 10+ minutes for the app to receive the data. By the time passport authenticates the token, it is always expired since it compares it to the current time, not the time the request was started. If the token is invalid for any reason, the user won't know until 10 minutes later. I would like the user to get immediate feedback instead of waiting for the request body to be received. I tried using passport as an app level middleware, but it still waited until it had req.body before executing.\r\n\r\nIs there a way to execute middleware before receiving the request body?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4725/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4725/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4724",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4724/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4724/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4724/events",
    "html_url": "https://github.com/expressjs/express/issues/4724",
    "id": 1023913717,
    "node_id": "I_kwDOAAOeZ849B671",
    "number": 4724,
    "title": "Feature: Set response status code according to HTTP method",
    "user": {
      "login": "talhameer",
      "id": 15572654,
      "node_id": "MDQ6VXNlcjE1NTcyNjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/15572654?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/talhameer",
      "html_url": "https://github.com/talhameer",
      "followers_url": "https://api.github.com/users/talhameer/followers",
      "following_url": "https://api.github.com/users/talhameer/following{/other_user}",
      "gists_url": "https://api.github.com/users/talhameer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/talhameer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/talhameer/subscriptions",
      "organizations_url": "https://api.github.com/users/talhameer/orgs",
      "repos_url": "https://api.github.com/users/talhameer/repos",
      "events_url": "https://api.github.com/users/talhameer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/talhameer/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-10-12T14:47:40Z",
    "updated_at": "2021-10-12T14:55:46Z",
    "closed_at": "2021-10-12T14:52:30Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi there...\r\nI'm here to suggest an idea about response status code.\r\n\r\n### #idea\r\nThe idea is to automatically set the response status code of the request according to the HTTP method and standard HTTP response code (if the developer have not explicitly set the status code). e.g.\r\n`\r\napp.put(\"/endpoint\", (req, res) => {\r\n    res.send();\r\n})    // This should return status code 204\r\n`\r\nHere is another example\r\n`\r\napp.put(\"/endpoint\", (req, res) => {\r\n    res.send(payload);\r\n})    // This should return status code 200\r\n`\r\n\r\n### #edge\r\nIt will reduce the thought process of the developer of proper HTTP status code.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4724/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4724/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4722",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4722/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4722/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4722/events",
    "html_url": "https://github.com/expressjs/express/issues/4722",
    "id": 1022673999,
    "node_id": "I_kwDOAAOeZ8489MRP",
    "number": 4722,
    "title": "How to debug a duplicate route problem?",
    "user": {
      "login": "deostroll",
      "id": 415336,
      "node_id": "MDQ6VXNlcjQxNTMzNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/415336?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deostroll",
      "html_url": "https://github.com/deostroll",
      "followers_url": "https://api.github.com/users/deostroll/followers",
      "following_url": "https://api.github.com/users/deostroll/following{/other_user}",
      "gists_url": "https://api.github.com/users/deostroll/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deostroll/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deostroll/subscriptions",
      "organizations_url": "https://api.github.com/users/deostroll/orgs",
      "repos_url": "https://api.github.com/users/deostroll/repos",
      "events_url": "https://api.github.com/users/deostroll/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deostroll/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-10-11T12:58:17Z",
    "updated_at": "2021-10-16T06:14:38Z",
    "closed_at": "2021-10-16T06:14:38Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "We use a loopback v3 application which is built over express. We put console.log() calls in our route and tested our api calls to see if they output. \r\n\r\nOur observation was that it did not output in the server console. However, the web app, still properly responded to the request. (Status code 200).\r\n\r\nSo my guess is that the same route is somehow added earlier somewhere else. Question is how can I find that location? Is there a debugging advice that would help here? Some place I can put a breakpoint which simplifies how that route is hit?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4722/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4722/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4721",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4721/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4721/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4721/events",
    "html_url": "https://github.com/expressjs/express/issues/4721",
    "id": 1022144266,
    "node_id": "I_kwDOAAOeZ8487K8K",
    "number": 4721,
    "title": "Request triager role for import-brain",
    "user": {
      "login": "import-brain",
      "id": 68196762,
      "node_id": "MDQ6VXNlcjY4MTk2NzYy",
      "avatar_url": "https://avatars.githubusercontent.com/u/68196762?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/import-brain",
      "html_url": "https://github.com/import-brain",
      "followers_url": "https://api.github.com/users/import-brain/followers",
      "following_url": "https://api.github.com/users/import-brain/following{/other_user}",
      "gists_url": "https://api.github.com/users/import-brain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/import-brain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/import-brain/subscriptions",
      "organizations_url": "https://api.github.com/users/import-brain/orgs",
      "repos_url": "https://api.github.com/users/import-brain/repos",
      "events_url": "https://api.github.com/users/import-brain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/import-brain/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2021-10-11T00:50:11Z",
    "updated_at": "2021-11-17T17:58:48Z",
    "closed_at": "2021-11-17T17:45:42Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "I have read and understood the project's Code of Conduct.\r\nI also have read and understood the process and best practices around Express triaging.\r\n\r\nI request for a triager role for the following GitHub organizations:\r\n\r\njshttp\r\npillarjs\r\nexpress",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4721/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4721/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4720",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4720/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4720/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4720/events",
    "html_url": "https://github.com/expressjs/express/issues/4720",
    "id": 1022056853,
    "node_id": "I_kwDOAAOeZ84861mV",
    "number": 4720,
    "title": "Is there any way to successfully rewrite a route in express middleware",
    "user": {
      "login": "aamirshahx",
      "id": 1303176,
      "node_id": "MDQ6VXNlcjEzMDMxNzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1303176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aamirshahx",
      "html_url": "https://github.com/aamirshahx",
      "followers_url": "https://api.github.com/users/aamirshahx/followers",
      "following_url": "https://api.github.com/users/aamirshahx/following{/other_user}",
      "gists_url": "https://api.github.com/users/aamirshahx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aamirshahx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aamirshahx/subscriptions",
      "organizations_url": "https://api.github.com/users/aamirshahx/orgs",
      "repos_url": "https://api.github.com/users/aamirshahx/repos",
      "events_url": "https://api.github.com/users/aamirshahx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aamirshahx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2021-10-10T18:25:36Z",
    "updated_at": "2021-10-10T20:37:49Z",
    "closed_at": "2021-10-10T18:29:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am trying to create a middleware to rewrite some paths in express middleware before forwarding the request to nest.js, but it seems baseUrl gets reset after every `next()`, causing the nest.js router to ignore the route.\r\n\r\nIs there any way to successfully rewrite a route in middleware or to forward a new request object to other middlewares?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4720/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4720/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4719",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4719/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4719/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4719/events",
    "html_url": "https://github.com/expressjs/express/issues/4719",
    "id": 1020720970,
    "node_id": "I_kwDOAAOeZ8481vdK",
    "number": 4719,
    "title": "Router level async middleware not working",
    "user": {
      "login": "KrishnenduDG",
      "id": 72221973,
      "node_id": "MDQ6VXNlcjcyMjIxOTcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72221973?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KrishnenduDG",
      "html_url": "https://github.com/KrishnenduDG",
      "followers_url": "https://api.github.com/users/KrishnenduDG/followers",
      "following_url": "https://api.github.com/users/KrishnenduDG/following{/other_user}",
      "gists_url": "https://api.github.com/users/KrishnenduDG/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KrishnenduDG/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KrishnenduDG/subscriptions",
      "organizations_url": "https://api.github.com/users/KrishnenduDG/orgs",
      "repos_url": "https://api.github.com/users/KrishnenduDG/repos",
      "events_url": "https://api.github.com/users/KrishnenduDG/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KrishnenduDG/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-10-08T05:47:23Z",
    "updated_at": "2021-10-08T05:52:02Z",
    "closed_at": "2021-10-08T05:51:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "First of all please do not close my Issue immediately when I create it..\r\n\r\nMy code link is [https://github.com/Crazycoder122/async-middleware-express/blob/master/frontend/index.js](https://github.com/Crazycoder122/async-middleware-express/blob/master/frontend/index.js)\r\n\r\n\r\nNow in \r\n`res.get('/',auth,(req,res,next)  =>  {\r\n      // Logic which runs if the user is authenticated\r\n})`\r\n\r\nNow the auth function is async function...\r\nWhat to do now??\r\n\r\nThank You...",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4719/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4719/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4718",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4718/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4718/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4718/events",
    "html_url": "https://github.com/expressjs/express/issues/4718",
    "id": 1020717817,
    "node_id": "I_kwDOAAOeZ8481ur5",
    "number": 4718,
    "title": "Router Level Async Middleware",
    "user": {
      "login": "KrishnenduDG",
      "id": 72221973,
      "node_id": "MDQ6VXNlcjcyMjIxOTcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72221973?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KrishnenduDG",
      "html_url": "https://github.com/KrishnenduDG",
      "followers_url": "https://api.github.com/users/KrishnenduDG/followers",
      "following_url": "https://api.github.com/users/KrishnenduDG/following{/other_user}",
      "gists_url": "https://api.github.com/users/KrishnenduDG/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KrishnenduDG/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KrishnenduDG/subscriptions",
      "organizations_url": "https://api.github.com/users/KrishnenduDG/orgs",
      "repos_url": "https://api.github.com/users/KrishnenduDG/repos",
      "events_url": "https://api.github.com/users/KrishnenduDG/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KrishnenduDG/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-10-08T05:40:49Z",
    "updated_at": "2021-10-08T05:42:19Z",
    "closed_at": "2021-10-08T05:42:13Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "[Code Link](https://github.com/Crazycoder122/async-middleware-express/blob/master/frontend/index.js)\r\n\r\n\r\nIt is my code.. But the Middleware is async.. So I am having problem with dealing it in the routes....",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4718/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4718/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4717",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4717/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4717/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4717/events",
    "html_url": "https://github.com/expressjs/express/issues/4717",
    "id": 1020714305,
    "node_id": "I_kwDOAAOeZ8481t1B",
    "number": 4717,
    "title": "Use Router-Level Async Middleware",
    "user": {
      "login": "KrishnenduDG",
      "id": 72221973,
      "node_id": "MDQ6VXNlcjcyMjIxOTcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/72221973?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KrishnenduDG",
      "html_url": "https://github.com/KrishnenduDG",
      "followers_url": "https://api.github.com/users/KrishnenduDG/followers",
      "following_url": "https://api.github.com/users/KrishnenduDG/following{/other_user}",
      "gists_url": "https://api.github.com/users/KrishnenduDG/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KrishnenduDG/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KrishnenduDG/subscriptions",
      "organizations_url": "https://api.github.com/users/KrishnenduDG/orgs",
      "repos_url": "https://api.github.com/users/KrishnenduDG/repos",
      "events_url": "https://api.github.com/users/KrishnenduDG/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KrishnenduDG/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-10-08T05:32:58Z",
    "updated_at": "2021-10-21T20:41:45Z",
    "closed_at": "2021-10-08T05:38:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "```js\r\nconst express = require('express');\r\nconst bodyParser = require('body-parser');\r\nconst path = require('path');\r\nconst axios = require('axios').default;\r\n\r\n// Routes\r\nconst userRoutes = require('./routes/user');\r\n\r\n\r\n// Creating the Constants\r\nconst PORT = process.config.PORT || 443;\r\n\r\n// Creating the app\r\nconst app = express();\r\n\r\n// Dotenv Config\r\nrequire('dotenv').config();\r\n\r\n// Middleware for static files\r\napp.use(express.static(path.join(__dirname+'/assets')));\r\n\r\n\r\napp.use('/user',userRoutes)\r\n\r\n\r\nconst authenticate = async (req,res,next) =>{\r\n    const isAuthenticate = await axios.post(\"http:127.0.0.1:121/authenticate_user\",{})\r\n\r\n    // return false;\r\n    // else\r\n    res.send(\"Not logged In!!\")\r\n};\r\n\r\n\r\napp.get('/',authenticate,async (req,res)=>{\r\n    res.redirect('/user');\r\n});\r\n\r\n\r\n// Listening the app\r\napp.listen(PORT,()=>{\r\n    console.log(`App Running at http://127.0.0.1:${PORT}`);\r\n})\r\n```\r\n\r\n\r\nIt is my code.. But the Middleware is async.. So I am having problem with dealing it in the routes....",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4717/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4717/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4714",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4714/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4714/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4714/events",
    "html_url": "https://github.com/expressjs/express/pull/4714",
    "id": 1014213790,
    "node_id": "PR_kwDOAAOeZ84smO8n",
    "number": 4714,
    "title": "tests: make app.listen test shorter",
    "user": {
      "login": "juanarbol",
      "id": 17013303,
      "node_id": "MDQ6VXNlcjE3MDEzMzAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/17013303?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juanarbol",
      "html_url": "https://github.com/juanarbol",
      "followers_url": "https://api.github.com/users/juanarbol/followers",
      "following_url": "https://api.github.com/users/juanarbol/following{/other_user}",
      "gists_url": "https://api.github.com/users/juanarbol/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juanarbol/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juanarbol/subscriptions",
      "organizations_url": "https://api.github.com/users/juanarbol/orgs",
      "repos_url": "https://api.github.com/users/juanarbol/repos",
      "events_url": "https://api.github.com/users/juanarbol/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juanarbol/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578714,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/tests",
        "name": "tests",
        "color": "944008",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2021-10-03T00:35:23Z",
    "updated_at": "2021-11-16T05:22:27Z",
    "closed_at": "2021-11-16T05:22:26Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4714",
      "html_url": "https://github.com/expressjs/express/pull/4714",
      "diff_url": "https://github.com/expressjs/express/pull/4714.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4714.patch",
      "merged_at": "2021-11-16T05:22:27Z"
    },
    "body": "The `app.del` endpoint is not necessary for this particular test.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4714/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4714/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4713",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4713/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4713/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4713/events",
    "html_url": "https://github.com/expressjs/express/issues/4713",
    "id": 1014153030,
    "node_id": "I_kwDOAAOeZ848cr9G",
    "number": 4713,
    "title": "Unable to find a way to properly remove or override a route after it has already been created",
    "user": {
      "login": "VaasKahnGrim",
      "id": 29955667,
      "node_id": "MDQ6VXNlcjI5OTU1NjY3",
      "avatar_url": "https://avatars.githubusercontent.com/u/29955667?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VaasKahnGrim",
      "html_url": "https://github.com/VaasKahnGrim",
      "followers_url": "https://api.github.com/users/VaasKahnGrim/followers",
      "following_url": "https://api.github.com/users/VaasKahnGrim/following{/other_user}",
      "gists_url": "https://api.github.com/users/VaasKahnGrim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VaasKahnGrim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VaasKahnGrim/subscriptions",
      "organizations_url": "https://api.github.com/users/VaasKahnGrim/orgs",
      "repos_url": "https://api.github.com/users/VaasKahnGrim/repos",
      "events_url": "https://api.github.com/users/VaasKahnGrim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VaasKahnGrim/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2021-10-02T19:46:56Z",
    "updated_at": "2022-03-07T10:00:28Z",
    "closed_at": "2021-10-02T20:07:36Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Basically I can't find a way properly remove a route after it has already been created. or redefine it to add a middleware if needed.\r\n\r\nThis is really causing a slight setback for a project I'm working on right now that needs to be able to create, remove or alter a route on demand.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4713/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4713/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4712",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4712/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4712/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4712/events",
    "html_url": "https://github.com/expressjs/express/issues/4712",
    "id": 1012283318,
    "node_id": "I_kwDOAAOeZ848Vje2",
    "number": 4712,
    "title": "Bug: Router uses previously added routers middleware",
    "user": {
      "login": "innoware-mx",
      "id": 77131502,
      "node_id": "MDQ6VXNlcjc3MTMxNTAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/77131502?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/innoware-mx",
      "html_url": "https://github.com/innoware-mx",
      "followers_url": "https://api.github.com/users/innoware-mx/followers",
      "following_url": "https://api.github.com/users/innoware-mx/following{/other_user}",
      "gists_url": "https://api.github.com/users/innoware-mx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/innoware-mx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/innoware-mx/subscriptions",
      "organizations_url": "https://api.github.com/users/innoware-mx/orgs",
      "repos_url": "https://api.github.com/users/innoware-mx/repos",
      "events_url": "https://api.github.com/users/innoware-mx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/innoware-mx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2021-09-30T14:55:38Z",
    "updated_at": "2021-10-02T12:42:47Z",
    "closed_at": "2021-10-01T06:51:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In the following zip you can find a simple node app. \r\n\r\n[testServer.zip](https://github.com/expressjs/express/files/7260431/testServer.zip)\r\n\r\nRun the following to install and run it:\r\n\r\nnpm install\r\nnode server.js\r\n\r\nIn postman run 3 post requests with raw json body {\"id\": \"hello\"}\r\n\r\n1) http://localhost:3000/route1/test // fails as expected since it does not have json parser middleware\r\n2) http://localhost:3000/route2/test // works as expected since router has json parser middleware\r\n3) http://localhost:3000/route3/test // **works, but should not work! Router does not have json parser middleware**\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4712/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4712/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4710",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4710/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4710/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4710/events",
    "html_url": "https://github.com/expressjs/express/pull/4710",
    "id": 1012189809,
    "node_id": "PR_kwDOAAOeZ84sgdr6",
    "number": 4710,
    "title": "refactor: switched to arrow functions",
    "user": {
      "login": "lpizzinidev",
      "id": 15077781,
      "node_id": "MDQ6VXNlcjE1MDc3Nzgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/15077781?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lpizzinidev",
      "html_url": "https://github.com/lpizzinidev",
      "followers_url": "https://api.github.com/users/lpizzinidev/followers",
      "following_url": "https://api.github.com/users/lpizzinidev/following{/other_user}",
      "gists_url": "https://api.github.com/users/lpizzinidev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lpizzinidev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lpizzinidev/subscriptions",
      "organizations_url": "https://api.github.com/users/lpizzinidev/orgs",
      "repos_url": "https://api.github.com/users/lpizzinidev/repos",
      "events_url": "https://api.github.com/users/lpizzinidev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lpizzinidev/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-09-30T13:34:36Z",
    "updated_at": "2021-10-04T09:12:46Z",
    "closed_at": "2021-10-04T09:12:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4710",
      "html_url": "https://github.com/expressjs/express/pull/4710",
      "diff_url": "https://github.com/expressjs/express/pull/4710.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4710.patch",
      "merged_at": null
    },
    "body": null,
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4710/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4710/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4709",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4709/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4709/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4709/events",
    "html_url": "https://github.com/expressjs/express/issues/4709",
    "id": 1012003823,
    "node_id": "I_kwDOAAOeZ848UfPv",
    "number": 4709,
    "title": "[TypeScript] How to enforce a response type?",
    "user": {
      "login": "Susccy",
      "id": 87642921,
      "node_id": "MDQ6VXNlcjg3NjQyOTIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/87642921?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Susccy",
      "html_url": "https://github.com/Susccy",
      "followers_url": "https://api.github.com/users/Susccy/followers",
      "following_url": "https://api.github.com/users/Susccy/following{/other_user}",
      "gists_url": "https://api.github.com/users/Susccy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Susccy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Susccy/subscriptions",
      "organizations_url": "https://api.github.com/users/Susccy/orgs",
      "repos_url": "https://api.github.com/users/Susccy/repos",
      "events_url": "https://api.github.com/users/Susccy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Susccy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-09-30T10:29:01Z",
    "updated_at": "2021-12-22T18:12:40Z",
    "closed_at": "2021-12-22T18:12:40Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Is there a way to enforce a strictly typed response from a middleware function?\r\n\r\nI currently type the response via:\r\n```typescript\r\ninterface MyResponse { foo: string }\r\n\r\ntype MyMiddleware = express.RequestHandler<{}, MyResponse>\r\n```\r\nThe following 2 examples compile but I'd like them to throw an error:\r\n```typescript\r\nconst example1: MyMiddleware = (req, res, next) => {} // should throw an error because no response is sent\r\nconst example2: MyMiddleware = (req, res, next) => { res.json(undefined) } // should throw an error because undefined !== MyResponse\r\n```\r\nIs there a way to handle this more strictly?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4709/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4709/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4708",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4708/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4708/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4708/events",
    "html_url": "https://github.com/expressjs/express/issues/4708",
    "id": 1011285020,
    "node_id": "I_kwDOAAOeZ848Rvwc",
    "number": 4708,
    "title": "Endpoints returning 404",
    "user": {
      "login": "byeze",
      "id": 7424138,
      "node_id": "MDQ6VXNlcjc0MjQxMzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7424138?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/byeze",
      "html_url": "https://github.com/byeze",
      "followers_url": "https://api.github.com/users/byeze/followers",
      "following_url": "https://api.github.com/users/byeze/following{/other_user}",
      "gists_url": "https://api.github.com/users/byeze/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/byeze/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/byeze/subscriptions",
      "organizations_url": "https://api.github.com/users/byeze/orgs",
      "repos_url": "https://api.github.com/users/byeze/repos",
      "events_url": "https://api.github.com/users/byeze/events{/privacy}",
      "received_events_url": "https://api.github.com/users/byeze/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2021-09-29T18:03:25Z",
    "updated_at": "2021-10-02T20:29:05Z",
    "closed_at": "2021-10-02T20:29:05Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello!\r\n\r\nI have this strange issue where when I send a request to an endpoint with no params or no extra /, everything returns ok. But when I request to an endpoint that needs parameters, express returns 404.\r\nIs good to know that this is mounted on Kubernetes with an ingress, if I request through the service without the ingress, everything goes ok, but through the Ingress returns 404. ⚠️ Ingress is properly configurated under my opinion, because it sends all requests of `/` through this only microservice, and no rewrite rules are set.\r\n\r\nExample code:\r\n(index.js)\r\n```\r\nimport express, { Request, Response } from \"express\";\r\nimport router from \"./endpoints\";\r\n\r\nconst app = express();\r\nconst port = 3000;\r\n\r\napp.all(\"/health\", (_req: Request, res: Response) => res.json({ health: \"ok\" }));\r\napp.use(router);\r\n\r\napp.listen(port, () => logger.info(`${packageJson.name} listening on port ${port}!`));\r\n```\r\n\r\n(endpoints.js)\r\n```\r\nimport express from \"express\";\r\nimport controllers from \"../controllers\";\r\nconst router = express.Router();\r\n\r\n// products\r\nrouter.get(\"/products\", controllers.getAllProducts);\r\nrouter.get(\"/products/:productId\", controllers.getProduct);\r\nrouter.get(\"/search\", controllers.searchProduct);\r\n\r\nexport default router;\r\n```\r\n\r\n### Requests\r\n\r\nGET `/products` - 200 ok\r\nGET `/products/<some id>` - 404 Not found (Express error)\r\nGET `/search` - 404 Not found (Express error)\r\n\r\n### Sample response\r\n```\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n\t<meta charset=\"utf-8\">\r\n\t<title>Error</title>\r\n</head>\r\n\r\n<body>\r\n\t<pre>Cannot GET /search</pre>\r\n</body>\r\n\r\n</html>\r\n```\r\n\r\n### Versions\r\nexpress ^4.17.1\r\nnode v14.17.1",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4708/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4708/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4707",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4707/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4707/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4707/events",
    "html_url": "https://github.com/expressjs/express/pull/4707",
    "id": 1007459012,
    "node_id": "PR_kwDOAAOeZ84sSBEO",
    "number": 4707,
    "title": "Remove unneeded array-flatten dependency",
    "user": {
      "login": "mac-chaffee",
      "id": 7581860,
      "node_id": "MDQ6VXNlcjc1ODE4NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7581860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mac-chaffee",
      "html_url": "https://github.com/mac-chaffee",
      "followers_url": "https://api.github.com/users/mac-chaffee/followers",
      "following_url": "https://api.github.com/users/mac-chaffee/following{/other_user}",
      "gists_url": "https://api.github.com/users/mac-chaffee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mac-chaffee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mac-chaffee/subscriptions",
      "organizations_url": "https://api.github.com/users/mac-chaffee/orgs",
      "repos_url": "https://api.github.com/users/mac-chaffee/repos",
      "events_url": "https://api.github.com/users/mac-chaffee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mac-chaffee/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-09-26T17:57:24Z",
    "updated_at": "2021-09-26T18:03:57Z",
    "closed_at": "2021-09-26T18:01:09Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4707",
      "html_url": "https://github.com/expressjs/express/pull/4707",
      "diff_url": "https://github.com/expressjs/express/pull/4707.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4707.patch",
      "merged_at": null
    },
    "body": "Back in 2015, express had its own ~9 line `flatten()` function, which got replaced by an external library in #2682 and #2624\r\n\r\nThat was just before the `left-pad` fiasco in 2016, when dependencies were a magical source of free code that someone else maintains who never gets hacked, bought-off, or becomes malicious ;)\r\n\r\nhttps://owasp.org/Top10/A06_2021-Vulnerable_and_Outdated_Components/\r\nhttps://en.wikipedia.org/wiki/Npm_(software)#Notable_breakages\r\n\r\nThis PR restores the [old flatten function](https://github.com/expressjs/express/blob/4.12.4/lib/utils.js#L79) (we still have [the test](https://github.com/expressjs/express/blame/master/test/utils.js#L89)!) and removes the need for the external array-flatten dependency.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4707/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4707/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4706",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4706/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4706/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4706/events",
    "html_url": "https://github.com/expressjs/express/issues/4706",
    "id": 1000907067,
    "node_id": "I_kwDOAAOeZ847qKE7",
    "number": 4706,
    "title": "How to define endpoints for prisma in electron app",
    "user": {
      "login": "M-Barari",
      "id": 63962449,
      "node_id": "MDQ6VXNlcjYzOTYyNDQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/63962449?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/M-Barari",
      "html_url": "https://github.com/M-Barari",
      "followers_url": "https://api.github.com/users/M-Barari/followers",
      "following_url": "https://api.github.com/users/M-Barari/following{/other_user}",
      "gists_url": "https://api.github.com/users/M-Barari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/M-Barari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/M-Barari/subscriptions",
      "organizations_url": "https://api.github.com/users/M-Barari/orgs",
      "repos_url": "https://api.github.com/users/M-Barari/repos",
      "events_url": "https://api.github.com/users/M-Barari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/M-Barari/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-09-20T12:21:46Z",
    "updated_at": "2021-10-22T15:17:46Z",
    "closed_at": "2021-10-22T15:17:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi, I made an app in nuxt.js + electron.js + electron-builder . then added prisma to nuxt and used express in serverMiddleware to handle my endpoints started api/ and send them to prisma CRUD . It works just fine in dev mode, but when building .exe file , there is no serverMiddleware to handle those endpoints.\r\n\r\nSo as I searched through articles , I found out you can added express to electron as you can add prisma in background.js , but didn't found any solution to integrate them so that my requests that starts with api go through prisma functions. e.g. $axios.get('api/users) get me all users :\r\n\r\nimport express from 'express'\r\nimport { PrismaClient } from '@prisma/client'\r\nconst prisma = new PrismaClient()\r\nconst app = express()\r\napp.use(express.json())\r\napp.get('api/users', async (req, res) => {\r\n   const result = await prisma.admin.findAll()\r\n   res.json(result)\r\n})",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4706/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4706/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4705",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4705/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4705/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4705/events",
    "html_url": "https://github.com/expressjs/express/issues/4705",
    "id": 1000874048,
    "node_id": "I_kwDOAAOeZ847qCBA",
    "number": 4705,
    "title": "Request triager role for MohammadXroid",
    "user": {
      "login": "MohammadXroid",
      "id": 20880352,
      "node_id": "MDQ6VXNlcjIwODgwMzUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/20880352?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MohammadXroid",
      "html_url": "https://github.com/MohammadXroid",
      "followers_url": "https://api.github.com/users/MohammadXroid/followers",
      "following_url": "https://api.github.com/users/MohammadXroid/following{/other_user}",
      "gists_url": "https://api.github.com/users/MohammadXroid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MohammadXroid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MohammadXroid/subscriptions",
      "organizations_url": "https://api.github.com/users/MohammadXroid/orgs",
      "repos_url": "https://api.github.com/users/MohammadXroid/repos",
      "events_url": "https://api.github.com/users/MohammadXroid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MohammadXroid/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2021-09-20T11:47:07Z",
    "updated_at": "2021-11-18T15:57:37Z",
    "closed_at": "2021-11-17T17:46:52Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "I have read and understood the project's Code of Conduct.\r\nI also have read and understood the process and best practices around Express triaging.\r\n\r\nI request for a triager role for the following GitHub organizations:\r\n\r\njshttp\r\npillarjs\r\nexpress",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4705/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4705/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4704",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4704/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4704/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4704/events",
    "html_url": "https://github.com/expressjs/express/issues/4704",
    "id": 1000630321,
    "node_id": "I_kwDOAAOeZ847pGgx",
    "number": 4704,
    "title": "Body parser running endless on (read body) cause of invalid content-length",
    "user": {
      "login": "Tofuburger",
      "id": 1637020,
      "node_id": "MDQ6VXNlcjE2MzcwMjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1637020?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Tofuburger",
      "html_url": "https://github.com/Tofuburger",
      "followers_url": "https://api.github.com/users/Tofuburger/followers",
      "following_url": "https://api.github.com/users/Tofuburger/following{/other_user}",
      "gists_url": "https://api.github.com/users/Tofuburger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Tofuburger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Tofuburger/subscriptions",
      "organizations_url": "https://api.github.com/users/Tofuburger/orgs",
      "repos_url": "https://api.github.com/users/Tofuburger/repos",
      "events_url": "https://api.github.com/users/Tofuburger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Tofuburger/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2021-09-20T06:57:09Z",
    "updated_at": "2021-09-20T07:12:04Z",
    "closed_at": "2021-09-20T07:00:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello,\r\n\r\nplease could u advise why the read body in body parser running endless on invalid content-length instead of throwing and expected invalid content length error?\r\n\r\nThanks\r\nTb",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4704/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4704/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4703",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4703/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4703/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4703/events",
    "html_url": "https://github.com/expressjs/express/issues/4703",
    "id": 1000603187,
    "node_id": "I_kwDOAAOeZ847o_4z",
    "number": 4703,
    "title": "res.cookie() doesn't set browser cookie on Production",
    "user": {
      "login": "VeeVergil",
      "id": 89861726,
      "node_id": "MDQ6VXNlcjg5ODYxNzI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/89861726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VeeVergil",
      "html_url": "https://github.com/VeeVergil",
      "followers_url": "https://api.github.com/users/VeeVergil/followers",
      "following_url": "https://api.github.com/users/VeeVergil/following{/other_user}",
      "gists_url": "https://api.github.com/users/VeeVergil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VeeVergil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VeeVergil/subscriptions",
      "organizations_url": "https://api.github.com/users/VeeVergil/orgs",
      "repos_url": "https://api.github.com/users/VeeVergil/repos",
      "events_url": "https://api.github.com/users/VeeVergil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VeeVergil/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-09-20T06:06:35Z",
    "updated_at": "2021-11-17T17:56:02Z",
    "closed_at": "2021-11-17T17:56:02Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "res.cookie set browser cookie on localhost but doesn't set browser cookie after production and still I can find set-cookie in response header. I don't see any cors problem. I use Digitalocean App to deploy my node server.\r\n\r\n`res.cookie('ckstate', 'logged', {\r\n                httpOnly: false, \r\n                sameSite: router.get(\"env\") === \"development\" ? true : \"none\", \r\n                secure: router.get(\"env\") === \"development\" ? false : true\r\n            })\r\n            .status(200)\r\n            .json(others)`\r\n\r\nHere is the POST request from my React client -\r\n\r\n`await axios.post(API_URL, user, { withCredentials: true })\r\n        .then(res => {\r\n            Auth.refreshAuth();\r\n            history.push('/');\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n            setMessage('Wrong Credentials. Try again.');\r\n        })`\r\n\r\n![image](https://user-images.githubusercontent.com/89861726/133962243-a04fe7fd-5f64-4839-982e-46aeafec62fa.png)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4703/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4703/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4702",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4702/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4702/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4702/events",
    "html_url": "https://github.com/expressjs/express/issues/4702",
    "id": 1000393994,
    "node_id": "I_kwDOAAOeZ847oM0K",
    "number": 4702,
    "title": "please support typescript out of the box",
    "user": {
      "login": "craigcosmo",
      "id": 538657,
      "node_id": "MDQ6VXNlcjUzODY1Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/538657?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/craigcosmo",
      "html_url": "https://github.com/craigcosmo",
      "followers_url": "https://api.github.com/users/craigcosmo/followers",
      "following_url": "https://api.github.com/users/craigcosmo/following{/other_user}",
      "gists_url": "https://api.github.com/users/craigcosmo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/craigcosmo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/craigcosmo/subscriptions",
      "organizations_url": "https://api.github.com/users/craigcosmo/orgs",
      "repos_url": "https://api.github.com/users/craigcosmo/repos",
      "events_url": "https://api.github.com/users/craigcosmo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/craigcosmo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-09-19T19:10:29Z",
    "updated_at": "2021-09-19T19:12:23Z",
    "closed_at": "2021-09-19T19:12:19Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "hey guys can you please support typescript out of box? I have many problems with self installed type script. it works then it doesn't works. Can you make every life easier if you can make it ready to once press npx create express app.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4702/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4702/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4701",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4701/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4701/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4701/events",
    "html_url": "https://github.com/expressjs/express/issues/4701",
    "id": 998776790,
    "node_id": "I_kwDOAAOeZ847iB_W",
    "number": 4701,
    "title": "ParamsDictionary should allow any value type",
    "user": {
      "login": "dillonm197",
      "id": 38864128,
      "node_id": "MDQ6VXNlcjM4ODY0MTI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/38864128?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dillonm197",
      "html_url": "https://github.com/dillonm197",
      "followers_url": "https://api.github.com/users/dillonm197/followers",
      "following_url": "https://api.github.com/users/dillonm197/following{/other_user}",
      "gists_url": "https://api.github.com/users/dillonm197/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dillonm197/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dillonm197/subscriptions",
      "organizations_url": "https://api.github.com/users/dillonm197/orgs",
      "repos_url": "https://api.github.com/users/dillonm197/repos",
      "events_url": "https://api.github.com/users/dillonm197/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dillonm197/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-09-16T23:56:14Z",
    "updated_at": "2021-09-17T00:08:15Z",
    "closed_at": "2021-09-16T23:59:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Since request parameters can be mutated to non-string objects using something like [Sanitation Middlewares](https://express-validator.github.io/docs/filter-api.html), the `ParamsDictionary` interface should allow any type.\r\n\r\n```\r\nexport interface RequestHandler<\r\n    P = ParamsDictionary,\r\n    ResBody = any,\r\n    ReqBody = any,\r\n    ReqQuery = ParsedQs,\r\n    Locals extends Record<string, any> = Record<string, any>\r\n>\r\n```\r\nCurrent:\r\n\r\n```\r\nexport interface ParamsDictionary {\r\n    [key: string]: string;\r\n}\r\n```\r\n\r\nProposed:\r\n\r\n```\r\nexport interface ParamsDictionary {\r\n    [key: string]: any;\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4701/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4701/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4699",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4699/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4699/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4699/events",
    "html_url": "https://github.com/expressjs/express/issues/4699",
    "id": 996976903,
    "node_id": "I_kwDOAAOeZ847bKkH",
    "number": 4699,
    "title": "incorrect npm in package.json",
    "user": {
      "login": "skyfer77",
      "id": 26706121,
      "node_id": "MDQ6VXNlcjI2NzA2MTIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/26706121?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/skyfer77",
      "html_url": "https://github.com/skyfer77",
      "followers_url": "https://api.github.com/users/skyfer77/followers",
      "following_url": "https://api.github.com/users/skyfer77/following{/other_user}",
      "gists_url": "https://api.github.com/users/skyfer77/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/skyfer77/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/skyfer77/subscriptions",
      "organizations_url": "https://api.github.com/users/skyfer77/orgs",
      "repos_url": "https://api.github.com/users/skyfer77/repos",
      "events_url": "https://api.github.com/users/skyfer77/events{/privacy}",
      "received_events_url": "https://api.github.com/users/skyfer77/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-09-15T11:35:33Z",
    "updated_at": "2021-09-15T15:19:55Z",
    "closed_at": "2021-09-15T15:19:25Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi everyone. Express used path-to-regexp, it is very old version (0.1.7) and its not major version. This npm incorrect generate regExp (function pathtoRegexp) if path has param and it is instanceof RegExp",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4699/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4699/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4697",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4697/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4697/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4697/events",
    "html_url": "https://github.com/expressjs/express/issues/4697",
    "id": 994058715,
    "node_id": "MDU6SXNzdWU5OTQwNTg3MTU=",
    "number": 4697,
    "title": "Request: Introduce a `req.completeURL()` method",
    "user": {
      "login": "pmorch",
      "id": 159292,
      "node_id": "MDQ6VXNlcjE1OTI5Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/159292?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pmorch",
      "html_url": "https://github.com/pmorch",
      "followers_url": "https://api.github.com/users/pmorch/followers",
      "following_url": "https://api.github.com/users/pmorch/following{/other_user}",
      "gists_url": "https://api.github.com/users/pmorch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pmorch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pmorch/subscriptions",
      "organizations_url": "https://api.github.com/users/pmorch/orgs",
      "repos_url": "https://api.github.com/users/pmorch/repos",
      "events_url": "https://api.github.com/users/pmorch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pmorch/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 18291,
        "node_id": "MDU6TGFiZWwxODI5MQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1",
        "default": false,
        "description": null
      },
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 163600,
        "node_id": "MDU6TGFiZWwxNjM2MDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2021-09-12T05:41:50Z",
    "updated_at": "2022-07-18T14:29:34Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When communicating with other systems, sometimes we need to send the complete URL. E.g. include the full `http://localhost:30000/foo?a=45` in the response when accessing that URL.\r\n\r\n`req.originURL` becomes `/foo?a=45`, but the scheme and hostname parts are lost. \r\n\r\n[node.js - How to get the full URL in Express? - Stack Overflow](https://stackoverflow.com/questions/10183291/how-to-get-the-full-url-in-express) has 578 upvotes and the top answer has 871 upvotes. But there are also a gazillion other answers of varying correctness.\r\n\r\nThe suggestion from [the top answer](https://stackoverflow.com/a/10185427/345716) is:\r\n```\r\nvar fullUrl = req.protocol + '://' + req.get('host') + req.originalUrl;\r\n```\r\n\r\nCould we \"officialize\" this and turn it into `req.completeUrl()` (or whatever name you prefer) so everybody uses the same solution that works reliably? I'm happy to create a PR for this one-liner, I just wanted to ask here first...",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4697/reactions",
      "total_count": 3,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4697/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4695",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4695/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4695/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4695/events",
    "html_url": "https://github.com/expressjs/express/issues/4695",
    "id": 988529326,
    "node_id": "MDU6SXNzdWU5ODg1MjkzMjY=",
    "number": 4695,
    "title": "Wrong path in req.url in req.on('close', ... )",
    "user": {
      "login": "GorlikItsMe",
      "id": 33355238,
      "node_id": "MDQ6VXNlcjMzMzU1MjM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/33355238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GorlikItsMe",
      "html_url": "https://github.com/GorlikItsMe",
      "followers_url": "https://api.github.com/users/GorlikItsMe/followers",
      "following_url": "https://api.github.com/users/GorlikItsMe/following{/other_user}",
      "gists_url": "https://api.github.com/users/GorlikItsMe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GorlikItsMe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GorlikItsMe/subscriptions",
      "organizations_url": "https://api.github.com/users/GorlikItsMe/orgs",
      "repos_url": "https://api.github.com/users/GorlikItsMe/repos",
      "events_url": "https://api.github.com/users/GorlikItsMe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GorlikItsMe/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-09-05T15:00:05Z",
    "updated_at": "2021-09-10T15:32:25Z",
    "closed_at": "2021-09-10T15:32:25Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Example code\r\n```js\r\nrouter.use((req, res, next) => {\r\n    console.log(req.url);\r\n    req.on('close', () => {\r\n        console.log(req.url);\r\n    });\r\n    next();\r\n});\r\n```\r\n\r\nWhat i getting:\r\n```\r\n/ping/\r\n/\r\n```\r\n\r\nWhat i expect:\r\n```\r\n/ping/\r\n/ping/\r\n```\r\n\r\nI using express in version 4.17.1\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4695/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4695/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4694",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4694/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4694/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4694/events",
    "html_url": "https://github.com/expressjs/express/issues/4694",
    "id": 986570467,
    "node_id": "MDU6SXNzdWU5ODY1NzA0Njc=",
    "number": 4694,
    "title": "Node process exiting on certain combination of error handlers and async middlewares",
    "user": {
      "login": "FabianEbert",
      "id": 47210515,
      "node_id": "MDQ6VXNlcjQ3MjEwNTE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/47210515?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FabianEbert",
      "html_url": "https://github.com/FabianEbert",
      "followers_url": "https://api.github.com/users/FabianEbert/followers",
      "following_url": "https://api.github.com/users/FabianEbert/following{/other_user}",
      "gists_url": "https://api.github.com/users/FabianEbert/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FabianEbert/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FabianEbert/subscriptions",
      "organizations_url": "https://api.github.com/users/FabianEbert/orgs",
      "repos_url": "https://api.github.com/users/FabianEbert/repos",
      "events_url": "https://api.github.com/users/FabianEbert/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FabianEbert/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2021-09-02T11:17:53Z",
    "updated_at": "2021-09-02T15:01:47Z",
    "closed_at": "2021-09-02T14:00:38Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Our application was failing on Production with the node process exiting with error code 1. I was able to reproduce the error in a minimal example.\r\n\r\nEven though the original issue was an application issue (sending an `undefined` http status in the response), it might also make sense to check why the process is exiting in this case.\r\n\r\n#### Minimal example:\r\n```js\r\nconst express = require(\"express\");\r\nconst app = express();\r\n\r\napp.use(\r\n  \"/kill\",\r\n  (req, res, next) => {\r\n    console.log(\"1. throw error\");\r\n    throw new Error(\"oops\");\r\n  },\r\n  (err, req, res, next) => {\r\n    console.log(\"2. try to handle error and send back undefined/invalid HTTP status\");\r\n    res.status(err.status).send(\"Error\"); // err.status is undefined\r\n  },\r\n  (err, req, res, next) => {\r\n    console.log(\r\n      \"3. have an error handler not catching the 'ERR_HTTP_INVALID_STATUS_CODE', so default error handler will not be used\"\r\n    );\r\n    next();\r\n  }\r\n);\r\n\r\napp.use(async (req, res, next) => {\r\n  console.log(\"4. have an async middleware trying to send back a sth.\");\r\n  // do some async stuff here, read a file and transform it\r\n  res.send(\"[the file]\");\r\n});\r\n\r\nconst server = app.listen(3000, () => {\r\n  console.log(`Example app listening at http://localhost:3000`);\r\n});\r\n\r\n```\r\n\r\n#### package.json\r\n```json\r\n{\r\n  \"name\": \"xxxxx\",\r\n  \"version\": \"1.0.0\",\r\n  \"scripts\": {\r\n    \"start\": \"node index.js\",\r\n  },\r\n  \"dependencies\": {\r\n    \"express\": \"^4.17.1\"\r\n  }\r\n}\r\n```\r\n\r\n#### Node Version\r\n\r\nv15.14.0\r\n\r\n#### How to bring it up\r\n\r\n```\r\nnpm install\r\nnpm start\r\n```\r\n\r\nOpen browser and navigate to http://localhost:3000/kill\r\n\r\nSee terminal how process exits with `ERR_HTTP_INVALID_STATUS_CODE`.\r\n\r\n#### Output\r\n```\r\nnode:internal/process/promises:245\r\n          triggerUncaughtException(err, true /* fromPromise */);\r\n          ^\r\n\r\nRangeError [ERR_HTTP_INVALID_STATUS_CODE]: Invalid status code: undefined\r\n    at new NodeError (node:internal/errors:329:5)\r\n    at ServerResponse.writeHead (node:_http_server:282:11)\r\n    at ServerResponse._implicitHeader (node:_http_server:273:8)\r\n    at write_ (node:_http_outgoing:769:9)\r\n    at ServerResponse.end (node:_http_outgoing:858:5)\r\n    at ServerResponse.send (/xxxxxxxxx/node_modules/express/lib/response.js:221:10)\r\n    at /xxxxxxxxx/index.js:25:7\r\n    at Layer.handle [as handle_request] (/xxxxxxxxxx/node_modules/express/lib/router/layer.js:95:5)\r\n    at trim_prefix (/Users/xxxxxxxx/code/mic/demos/09-express-failing-process/node_modules/express/lib/router/index.js:317:13)\r\n    at xxxxxxxxxxxxxx/node_modules/express/lib/router/index.js:284:7 {\r\n  code: 'ERR_HTTP_INVALID_STATUS_CODE'\r\n}\r\nnpm ERR! code ELIFECYCLE\r\nnpm ERR! errno 1\r\nnpm ERR! 09-express-failing-process@1.0.0 start: `node index.js`\r\nnpm ERR! Exit status 1\r\nnpm ERR! \r\nnpm ERR! Failed at the xxxxxxxxxx@1.0.0 start script.\r\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\r\n\r\nnpm ERR! A complete log of this run can be found in:\r\nnpm ERR!     xxxxxxxxxxx-debug.log\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4694/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4694/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4693",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4693/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4693/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4693/events",
    "html_url": "https://github.com/expressjs/express/issues/4693",
    "id": 984269809,
    "node_id": "MDU6SXNzdWU5ODQyNjk4MDk=",
    "number": 4693,
    "title": "HTTP3/QUIC Support",
    "user": {
      "login": "flawnn",
      "id": 19386703,
      "node_id": "MDQ6VXNlcjE5Mzg2NzAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/19386703?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/flawnn",
      "html_url": "https://github.com/flawnn",
      "followers_url": "https://api.github.com/users/flawnn/followers",
      "following_url": "https://api.github.com/users/flawnn/following{/other_user}",
      "gists_url": "https://api.github.com/users/flawnn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/flawnn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/flawnn/subscriptions",
      "organizations_url": "https://api.github.com/users/flawnn/orgs",
      "repos_url": "https://api.github.com/users/flawnn/repos",
      "events_url": "https://api.github.com/users/flawnn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/flawnn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-08-31T20:10:31Z",
    "updated_at": "2021-08-31T20:18:24Z",
    "closed_at": "2021-08-31T20:18:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "## 🚀 Feature Proposal\r\nImplementation of QUIC [tools.ietf.org/html/draft-ietf-quic-transport-27](https://tools.ietf.org/html/draft-ietf-quic-transport-27)\r\n \r\nFor more details:\r\n \r\n* [blog.cloudflare.com/the-road-to-quic](https://blog.cloudflare.com/the-road-to-quic/)\r\n* [blog.cloudflare.com/http3-the-past-present-and-future](https://blog.cloudflare.com/http3-the-past-present-and-future/)\r\n\r\n This shall pave way for implementation of HTTP/3 since HTTP over QUIC is proposed to be called HTTP/3. QUIC will likely be used for transporting more than just HTTP.\r\n---\r\n\r\nAny likelihood of this being added in the next time?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4693/reactions",
      "total_count": 5,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4693/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4692",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4692/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4692/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4692/events",
    "html_url": "https://github.com/expressjs/express/pull/4692",
    "id": 982196584,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NzIyMDE0NTk4",
    "number": 4692,
    "title": "Hash password using Bcrypt.js",
    "user": {
      "login": "itsaamyth",
      "id": 59211195,
      "node_id": "MDQ6VXNlcjU5MjExMTk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/59211195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/itsaamyth",
      "html_url": "https://github.com/itsaamyth",
      "followers_url": "https://api.github.com/users/itsaamyth/followers",
      "following_url": "https://api.github.com/users/itsaamyth/following{/other_user}",
      "gists_url": "https://api.github.com/users/itsaamyth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/itsaamyth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/itsaamyth/subscriptions",
      "organizations_url": "https://api.github.com/users/itsaamyth/orgs",
      "repos_url": "https://api.github.com/users/itsaamyth/repos",
      "events_url": "https://api.github.com/users/itsaamyth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/itsaamyth/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-08-29T20:31:03Z",
    "updated_at": "2021-11-16T04:36:08Z",
    "closed_at": "2021-11-16T04:36:07Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4692",
      "html_url": "https://github.com/expressjs/express/pull/4692",
      "diff_url": "https://github.com/expressjs/express/pull/4692.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4692.patch",
      "merged_at": null
    },
    "body": "### Hash password using Bcrypt.js\r\n**A Better and secure way to hash password using Bcrypt.js. \r\nNo need to pass any salt or save salt in the db** ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4692/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 2,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4692/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4691",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4691/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4691/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4691/events",
    "html_url": "https://github.com/expressjs/express/issues/4691",
    "id": 982112714,
    "node_id": "MDU6SXNzdWU5ODIxMTI3MTQ=",
    "number": 4691,
    "title": "express5 expected release time？",
    "user": {
      "login": "machine2maxin",
      "id": 76137535,
      "node_id": "MDQ6VXNlcjc2MTM3NTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/76137535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/machine2maxin",
      "html_url": "https://github.com/machine2maxin",
      "followers_url": "https://api.github.com/users/machine2maxin/followers",
      "following_url": "https://api.github.com/users/machine2maxin/following{/other_user}",
      "gists_url": "https://api.github.com/users/machine2maxin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/machine2maxin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/machine2maxin/subscriptions",
      "organizations_url": "https://api.github.com/users/machine2maxin/orgs",
      "repos_url": "https://api.github.com/users/machine2maxin/repos",
      "events_url": "https://api.github.com/users/machine2maxin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/machine2maxin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-08-29T14:23:29Z",
    "updated_at": "2021-08-29T15:58:29Z",
    "closed_at": "2021-08-29T15:58:29Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\r\nexpress is a very powerful framework, as a newcomer I like it very much. I really want to use the latest version of express, although it hasn't been updated for a long time, can you tell me your general plan? When is expected to release the amazing express5\r\nThe translation comes from Google Translate, thank you for your understanding~",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4691/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4691/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4690",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4690/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4690/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4690/events",
    "html_url": "https://github.com/expressjs/express/issues/4690",
    "id": 981876616,
    "node_id": "MDU6SXNzdWU5ODE4NzY2MTY=",
    "number": 4690,
    "title": "Express.js many node-scheduler impacts",
    "user": {
      "login": "kavi2017",
      "id": 34532966,
      "node_id": "MDQ6VXNlcjM0NTMyOTY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/34532966?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kavi2017",
      "html_url": "https://github.com/kavi2017",
      "followers_url": "https://api.github.com/users/kavi2017/followers",
      "following_url": "https://api.github.com/users/kavi2017/following{/other_user}",
      "gists_url": "https://api.github.com/users/kavi2017/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kavi2017/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kavi2017/subscriptions",
      "organizations_url": "https://api.github.com/users/kavi2017/orgs",
      "repos_url": "https://api.github.com/users/kavi2017/repos",
      "events_url": "https://api.github.com/users/kavi2017/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kavi2017/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2021-08-28T16:35:57Z",
    "updated_at": "2021-09-01T16:07:10Z",
    "closed_at": "2021-09-01T16:07:10Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am doing express.js REST API for mobile application. I want to know my implementation is correct or need any improvements. In my application many business logic involved. So I had implemented More than 4 cron jobs using node-scheduler which runs at every 1 minute. I have to check business logic at every minute due to 4 scenarios then only i can achieve output. So My questions is \r\n1. Is it right implementation?\r\n2. What are the best methodology instead of this?\r\n3. Is it makes Express.js Rest API application slow? If yes how to avoid this?\r\nAwaiting to see anyone support. Thanks in advance",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4690/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4690/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4688",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4688/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4688/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4688/events",
    "html_url": "https://github.com/expressjs/express/issues/4688",
    "id": 980964891,
    "node_id": "MDU6SXNzdWU5ODA5NjQ4OTE=",
    "number": 4688,
    "title": "ReferenceError: app is not defined",
    "user": {
      "login": "Rxntiongaming",
      "id": 82863537,
      "node_id": "MDQ6VXNlcjgyODYzNTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/82863537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Rxntiongaming",
      "html_url": "https://github.com/Rxntiongaming",
      "followers_url": "https://api.github.com/users/Rxntiongaming/followers",
      "following_url": "https://api.github.com/users/Rxntiongaming/following{/other_user}",
      "gists_url": "https://api.github.com/users/Rxntiongaming/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Rxntiongaming/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Rxntiongaming/subscriptions",
      "organizations_url": "https://api.github.com/users/Rxntiongaming/orgs",
      "repos_url": "https://api.github.com/users/Rxntiongaming/repos",
      "events_url": "https://api.github.com/users/Rxntiongaming/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Rxntiongaming/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2021-08-27T07:35:07Z",
    "updated_at": "2021-09-03T07:44:38Z",
    "closed_at": "2021-09-03T07:44:38Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Help",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4688/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4688/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4687",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4687/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4687/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4687/events",
    "html_url": "https://github.com/expressjs/express/pull/4687",
    "id": 980529996,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NzIwNzUwNTY1",
    "number": 4687,
    "title": "Update Readme.md",
    "user": {
      "login": "abdelrazekAli",
      "id": 78452508,
      "node_id": "MDQ6VXNlcjc4NDUyNTA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/78452508?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abdelrazekAli",
      "html_url": "https://github.com/abdelrazekAli",
      "followers_url": "https://api.github.com/users/abdelrazekAli/followers",
      "following_url": "https://api.github.com/users/abdelrazekAli/following{/other_user}",
      "gists_url": "https://api.github.com/users/abdelrazekAli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abdelrazekAli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abdelrazekAli/subscriptions",
      "organizations_url": "https://api.github.com/users/abdelrazekAli/orgs",
      "repos_url": "https://api.github.com/users/abdelrazekAli/repos",
      "events_url": "https://api.github.com/users/abdelrazekAli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abdelrazekAli/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2021-08-26T18:30:31Z",
    "updated_at": "2021-08-26T18:32:58Z",
    "closed_at": "2021-08-26T18:32:58Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4687",
      "html_url": "https://github.com/expressjs/express/pull/4687",
      "diff_url": "https://github.com/expressjs/express/pull/4687.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4687.patch",
      "merged_at": null
    },
    "body": null,
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4687/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4687/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4686",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4686/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4686/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4686/events",
    "html_url": "https://github.com/expressjs/express/issues/4686",
    "id": 979831669,
    "node_id": "MDU6SXNzdWU5Nzk4MzE2Njk=",
    "number": 4686,
    "title": "Adding NestJS as express module results in Nest being restarted",
    "user": {
      "login": "senguttuvang",
      "id": 1772791,
      "node_id": "MDQ6VXNlcjE3NzI3OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1772791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/senguttuvang",
      "html_url": "https://github.com/senguttuvang",
      "followers_url": "https://api.github.com/users/senguttuvang/followers",
      "following_url": "https://api.github.com/users/senguttuvang/following{/other_user}",
      "gists_url": "https://api.github.com/users/senguttuvang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/senguttuvang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/senguttuvang/subscriptions",
      "organizations_url": "https://api.github.com/users/senguttuvang/orgs",
      "repos_url": "https://api.github.com/users/senguttuvang/repos",
      "events_url": "https://api.github.com/users/senguttuvang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/senguttuvang/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 18291,
        "node_id": "MDU6TGFiZWwxODI5MQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-08-26T04:51:25Z",
    "updated_at": "2022-02-02T20:22:09Z",
    "closed_at": "2022-02-02T20:22:09Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "We are progressively migrating our app from the NestJS framework to Express and thought of including NestJS as a module of Express so the migration can be done in small batches. Things seem to be connected but the NestJS seems to be a restart for every request. This is not a bug but a general approach on how to coexist Express & NestJS would be appreciated.\r\n\r\nExpress + NestJS repo\r\n\r\nhttps://gitlab.com/vijaysvj/express-with-nest/-/tree/master/\r\n\r\nReferences:\r\nhttps://stackoverflow.com/questions/60253136/import-a-nest-js-app-as-a-simple-express-middleware\r\nhttps://stackoverflow.com/questions/64244716/migrating-express-application-to-nestjs\r\nhttps://stackoverflow.com/questions/54349998/use-nestjs-package-in-nodejs-express-project\r\nhttps://expressjs.com/en/api.html#app.mountpath\r\nhttps://github.com/tzkmx/nestjs-graphql-as-express-subapp\r\nhttps://newbedev.com/import-a-nest-js-app-as-a-simple-express-middleware",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4686/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4686/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4685",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4685/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4685/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4685/events",
    "html_url": "https://github.com/expressjs/express/issues/4685",
    "id": 979316834,
    "node_id": "MDU6SXNzdWU5NzkzMTY4MzQ=",
    "number": 4685,
    "title": "express.json() not parsing ",
    "user": {
      "login": "sato-sama-dono",
      "id": 85187151,
      "node_id": "MDQ6VXNlcjg1MTg3MTUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/85187151?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sato-sama-dono",
      "html_url": "https://github.com/sato-sama-dono",
      "followers_url": "https://api.github.com/users/sato-sama-dono/followers",
      "following_url": "https://api.github.com/users/sato-sama-dono/following{/other_user}",
      "gists_url": "https://api.github.com/users/sato-sama-dono/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sato-sama-dono/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sato-sama-dono/subscriptions",
      "organizations_url": "https://api.github.com/users/sato-sama-dono/orgs",
      "repos_url": "https://api.github.com/users/sato-sama-dono/repos",
      "events_url": "https://api.github.com/users/sato-sama-dono/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sato-sama-dono/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 572472845,
        "node_id": "MDU6TGFiZWw1NzI0NzI4NDU=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:body-parser",
        "name": "module:body-parser",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2021-08-25T15:31:44Z",
    "updated_at": "2022-03-05T19:32:43Z",
    "closed_at": "2021-11-17T17:50:03Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "Hello \r\n\r\nI have encountered the following problem:\r\n\r\nClient is sending data to server, but server does not seem able to parse the data from the DOM.\r\n\r\nI was initially using \"body-parser\" but then i understood it is now integrated with \"express\"\r\n\r\nstill i get this error message while launching the server : \"body-parser deprecated\". \r\n\r\nIs this a know issue or is it just me ? and is there a way to fix it ? \r\n\r\nHere my code : \r\n\r\n**index.js**\r\n```js\r\nimport express from\"express\" ;\r\n//import bodyParser from \"body-parser\";\r\nimport mongoose  from \"mongoose\";\r\nimport cors from \"cors\"; \r\n\r\nimport postRoutes from './routes/posts.js';\r\n\r\nconst app = express();\r\n\r\n\r\n\r\napp.use(express.json({limit: \"30mb\"}));\r\napp.use(express.urlencoded({limit: \"30mb\"}));\r\napp.use(cors);\r\n\r\napp.use('/posts', postRoutes);\r\n```\r\n**routes**\r\n```js\r\nimport express from 'express';\r\n\r\nimport { getPosts, createPosts} from '../controllers/posts.js';\r\n\r\nconst router = express.Router();\r\n\r\nrouter.get('/', getPosts); \r\nrouter.post('/', createPosts);\r\n\r\nexport default router;\r\n```\r\n**Controllers** \r\n```js\r\nimport PostMessage from \"../models/postMessage.js\";\r\n\r\nexport const getPosts = async (req, res) => {\r\n    try {\r\n        const postMessages = await PostMessage.find();\r\n        console.log( \"getrequest received\");\r\n\r\n        res.status(200).json(postMessages);\r\n    } catch (error) {\r\n        res.status(404).json({message: error.message});\r\n    }\r\n}\r\n\r\nexport const createPosts = async (req, res) => {\r\n    const post = req.body; \r\n    const newPost = new PostMessage(post);\r\n    console.log(\"newPost received\");\r\n    try {\r\n        await newPost.save;\r\n        \r\n        res.status(201).json(newPost);\r\n        return; \r\n\r\n    } catch (error) {\r\n        res.status(404).json({message: error.message});\r\n    }\r\n}\r\n```\r\n\r\n\r\nThanks for the support ! ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4685/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4685/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4683",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4683/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4683/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4683/events",
    "html_url": "https://github.com/expressjs/express/issues/4683",
    "id": 976416701,
    "node_id": "MDU6SXNzdWU5NzY0MTY3MDE=",
    "number": 4683,
    "title": "res.write() sending data only after res.end()",
    "user": {
      "login": "xAl3xFx",
      "id": 16085957,
      "node_id": "MDQ6VXNlcjE2MDg1OTU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/16085957?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xAl3xFx",
      "html_url": "https://github.com/xAl3xFx",
      "followers_url": "https://api.github.com/users/xAl3xFx/followers",
      "following_url": "https://api.github.com/users/xAl3xFx/following{/other_user}",
      "gists_url": "https://api.github.com/users/xAl3xFx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xAl3xFx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xAl3xFx/subscriptions",
      "organizations_url": "https://api.github.com/users/xAl3xFx/orgs",
      "repos_url": "https://api.github.com/users/xAl3xFx/repos",
      "events_url": "https://api.github.com/users/xAl3xFx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xAl3xFx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2021-08-22T16:31:57Z",
    "updated_at": "2021-08-23T13:22:39Z",
    "closed_at": "2021-08-23T13:22:33Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello I am trying to do upload progress and for this I need to send some information on each file that I have successfully uploaded back to the client. For this I am using response.write() function right after a file was uploaded. Everything works fine on localhost but when I run the application in production environment the response is being sent to the client only after it is finished, there are no chunks sent at all just the whole response at the end i.e. when res.end() is called.\r\nI am running the application with the following command `NODE_ENV=BUILD node server.js` as a linux daemon service. I believe that this is not exactly issue with express but I hope someone could propose some possible reasons for this.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4683/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4683/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4681",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4681/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4681/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4681/events",
    "html_url": "https://github.com/expressjs/express/pull/4681",
    "id": 975847287,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NzE2OTM2NTY1",
    "number": 4681,
    "title": "Why not have app.listen() store a reference to the http server?",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 8636393,
        "node_id": "MDU6TGFiZWw4NjM2Mzkz",
        "url": "https://api.github.com/repos/expressjs/express/labels/wontfix",
        "name": "wontfix",
        "color": "ffffff",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2021-08-20T18:56:46Z",
    "updated_at": "2021-08-21T16:07:31Z",
    "closed_at": "2021-08-20T18:58:34Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4681",
      "html_url": "https://github.com/expressjs/express/pull/4681",
      "diff_url": "https://github.com/expressjs/express/pull/4681.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4681.patch",
      "merged_at": null
    },
    "body": "It appears that if you don't save the value of app.listen(), you have no way of accessing the http server object afterwards, which can be a bit of a nuisance when testing in REPL environments.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4681/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4681/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4680",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4680/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4680/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4680/events",
    "html_url": "https://github.com/expressjs/express/pull/4680",
    "id": 972778829,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NzE0MzI1MTkz",
    "number": 4680,
    "title": "Express with SSL example",
    "user": {
      "login": "mnummeli",
      "id": 7869159,
      "node_id": "MDQ6VXNlcjc4NjkxNTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7869159?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mnummeli",
      "html_url": "https://github.com/mnummeli",
      "followers_url": "https://api.github.com/users/mnummeli/followers",
      "following_url": "https://api.github.com/users/mnummeli/following{/other_user}",
      "gists_url": "https://api.github.com/users/mnummeli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mnummeli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mnummeli/subscriptions",
      "organizations_url": "https://api.github.com/users/mnummeli/orgs",
      "repos_url": "https://api.github.com/users/mnummeli/repos",
      "events_url": "https://api.github.com/users/mnummeli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mnummeli/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 55587817,
        "node_id": "MDU6TGFiZWw1NTU4NzgxNw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/needs%20tests",
        "name": "needs tests",
        "color": "e11d21",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-08-17T14:54:35Z",
    "updated_at": "2022-10-06T14:16:28Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4680",
      "html_url": "https://github.com/expressjs/express/pull/4680",
      "diff_url": "https://github.com/expressjs/express/pull/4680.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4680.patch",
      "merged_at": null
    },
    "body": "This is an example how to use Express with SSL enabled.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4680/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4680/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4678",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4678/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4678/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4678/events",
    "html_url": "https://github.com/expressjs/express/issues/4678",
    "id": 971823663,
    "node_id": "MDU6SXNzdWU5NzE4MjM2NjM=",
    "number": 4678,
    "title": "[Question] - How do I deploy an express.js Web server on the net.",
    "user": {
      "login": "Coocktail",
      "id": 58650050,
      "node_id": "MDQ6VXNlcjU4NjUwMDUw",
      "avatar_url": "https://avatars.githubusercontent.com/u/58650050?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Coocktail",
      "html_url": "https://github.com/Coocktail",
      "followers_url": "https://api.github.com/users/Coocktail/followers",
      "following_url": "https://api.github.com/users/Coocktail/following{/other_user}",
      "gists_url": "https://api.github.com/users/Coocktail/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Coocktail/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Coocktail/subscriptions",
      "organizations_url": "https://api.github.com/users/Coocktail/orgs",
      "repos_url": "https://api.github.com/users/Coocktail/repos",
      "events_url": "https://api.github.com/users/Coocktail/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Coocktail/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2021-08-16T14:54:53Z",
    "updated_at": "2021-08-17T11:28:27Z",
    "closed_at": "2021-08-16T15:56:14Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hey, How can I use a custom domain somewhat like https://example.com I do not want it to be localhost:3000 also I dont want to use the port so yea is it possible and if yes How can i achieve it",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4678/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4678/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4677",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4677/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4677/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4677/events",
    "html_url": "https://github.com/expressjs/express/issues/4677",
    "id": 971244973,
    "node_id": "MDU6SXNzdWU5NzEyNDQ5NzM=",
    "number": 4677,
    "title": "Regex as path not functioning as expected",
    "user": {
      "login": "williamhorning",
      "id": 68466727,
      "node_id": "MDQ6VXNlcjY4NDY2NzI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/68466727?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/williamhorning",
      "html_url": "https://github.com/williamhorning",
      "followers_url": "https://api.github.com/users/williamhorning/followers",
      "following_url": "https://api.github.com/users/williamhorning/following{/other_user}",
      "gists_url": "https://api.github.com/users/williamhorning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/williamhorning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/williamhorning/subscriptions",
      "organizations_url": "https://api.github.com/users/williamhorning/orgs",
      "repos_url": "https://api.github.com/users/williamhorning/repos",
      "events_url": "https://api.github.com/users/williamhorning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/williamhorning/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-08-15T23:09:39Z",
    "updated_at": "2021-08-16T00:45:41Z",
    "closed_at": "2021-08-15T23:15:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In my express app, I have the following code:\r\n```js\r\napp.all(/\\/port\\/(([1-9]\\d{0,3}|[1-5]\\d{4}|6[0-4]\\d{3}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5]))\\/.*/g,(req,res,next){\r\n   // ...\r\n})\r\n```\r\nHalf the time, when going to /port/3001 it 404s, the other half of the time it works. It seems like the regex system used by Express is the cause as testing this using \r\n```js\r\n/\\/port\\/(([1-9]\\d{0,3}|[1-5]\\d{4}|6[0-4]\\d{3}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5]))\\/.*/g.test('/port/3001')\r\n``` \r\nreturns true.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4677/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4677/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4676",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4676/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4676/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4676/events",
    "html_url": "https://github.com/expressjs/express/issues/4676",
    "id": 971146534,
    "node_id": "MDU6SXNzdWU5NzExNDY1MzQ=",
    "number": 4676,
    "title": "[Typescript] Express 4.17.1 -> 4.17.13 break middlewares (body-parser, morgan and urlencode)",
    "user": {
      "login": "c0ncentus",
      "id": 25374826,
      "node_id": "MDQ6VXNlcjI1Mzc0ODI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/25374826?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/c0ncentus",
      "html_url": "https://github.com/c0ncentus",
      "followers_url": "https://api.github.com/users/c0ncentus/followers",
      "following_url": "https://api.github.com/users/c0ncentus/following{/other_user}",
      "gists_url": "https://api.github.com/users/c0ncentus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/c0ncentus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/c0ncentus/subscriptions",
      "organizations_url": "https://api.github.com/users/c0ncentus/orgs",
      "repos_url": "https://api.github.com/users/c0ncentus/repos",
      "events_url": "https://api.github.com/users/c0ncentus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/c0ncentus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-08-15T14:25:10Z",
    "updated_at": "2021-08-16T08:07:28Z",
    "closed_at": "2021-08-16T08:07:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Handler<IncomingMessage, ServerResponse> type is not support and break some well popular middleware\r\n\r\nand have type error on \"express-serve-static-core\". \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4676/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4676/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4674",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4674/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4674/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4674/events",
    "html_url": "https://github.com/expressjs/express/issues/4674",
    "id": 968324250,
    "node_id": "MDU6SXNzdWU5NjgzMjQyNTA=",
    "number": 4674,
    "title": "bug with the decode_param",
    "user": {
      "login": "dimitrisal",
      "id": 17526510,
      "node_id": "MDQ6VXNlcjE3NTI2NTEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/17526510?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dimitrisal",
      "html_url": "https://github.com/dimitrisal",
      "followers_url": "https://api.github.com/users/dimitrisal/followers",
      "following_url": "https://api.github.com/users/dimitrisal/following{/other_user}",
      "gists_url": "https://api.github.com/users/dimitrisal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dimitrisal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dimitrisal/subscriptions",
      "organizations_url": "https://api.github.com/users/dimitrisal/orgs",
      "repos_url": "https://api.github.com/users/dimitrisal/repos",
      "events_url": "https://api.github.com/users/dimitrisal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dimitrisal/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2021-08-12T08:16:46Z",
    "updated_at": "2021-08-12T14:18:20Z",
    "closed_at": "2021-08-12T14:18:20Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello I think I found a bug in the decode_param method.\r\nIn our paths our client can mix and match English and Greek characters in the parameters, but i found that if the first character is Greek then I get the following error: \r\n\r\n{ URIError: Failed to decode param 'CE%B5%CE%B1%CF%8229102021'\r\n    at decodeURIComponent (<anonymous>)\r\n\r\nI snooped around and I found the following thing.\r\n\r\nThe val in decode param loses the first digit every second Loop resulting to removing the % from the encoded parameter if the first letter is Greek making it CE%B5%CE%B1%CF%8229102021 instead of %CE%B5%CE%B1%CF%8229102021. This actually prompts the error and throws the URIerror.\r\n\r\nIf the first letter is English then the val stays with the % and can be decoded. Below are some console logs:\r\n\r\nThis is when the first letter is Greek\r\n172 '%CE%B5%CE%B1%CF%8229102021'\r\n173 'εας29102021'\r\n172 'CE%B5%CE%B1%CF%8229102021'\r\n172 '%CE%B5%CE%B1%CF%8229102021'\r\n173 'εας29102021'\r\n172 'CE%B5%CE%B1%CF%8229102021'\r\n172 '%CE%B5%CE%B1%CF%8229102021'\r\n173 'εας29102021'\r\n172 'CE%B5%CE%B1%CF%8229102021'\r\n\r\nThis is when the first letter is English\r\n\r\n172 'e%CE%B1%CF%8229102021'\r\n173 'eας29102021'\r\n172 '%CE%B1%CF%8229102021'\r\n173 'ας29102021'\r\n172 'e%CE%B1%CF%8229102021'\r\n173 'eας29102021'\r\n172 '%CE%B1%CF%8229102021'\r\n173 'ας29102021'\r\n\r\nTherefore, the error Failed to decode param is incorrect since it can actually decode the letter but for some reason the first digit every second loop is deleted\r\n\r\nIf I remove the throw error it works as it should and i can read the param value in the service.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4674/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4674/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4673",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4673/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4673/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4673/events",
    "html_url": "https://github.com/expressjs/express/pull/4673",
    "id": 968181161,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NzEwMzE1MzE3",
    "number": 4673,
    "title": "docs: replace \"sentHeader\" with \"headersSent\" in jsdoc",
    "user": {
      "login": "zkeyoung",
      "id": 38270459,
      "node_id": "MDQ6VXNlcjM4MjcwNDU5",
      "avatar_url": "https://avatars.githubusercontent.com/u/38270459?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zkeyoung",
      "html_url": "https://github.com/zkeyoung",
      "followers_url": "https://api.github.com/users/zkeyoung/followers",
      "following_url": "https://api.github.com/users/zkeyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/zkeyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zkeyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zkeyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/zkeyoung/orgs",
      "repos_url": "https://api.github.com/users/zkeyoung/repos",
      "events_url": "https://api.github.com/users/zkeyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zkeyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2021-08-12T06:41:12Z",
    "updated_at": "2021-08-14T05:01:30Z",
    "closed_at": "2021-08-14T05:00:29Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4673",
      "html_url": "https://github.com/expressjs/express/pull/4673",
      "diff_url": "https://github.com/expressjs/express/pull/4673.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4673.patch",
      "merged_at": "2021-08-14T05:00:30Z"
    },
    "body": "When I use res.sendFile, I want to return json information on error. The code ran fine for months, but one day the code suddenly crashed and said \"Cannot set headers after they are sent to the client\" because I didn't check res.headersSent.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4673/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4673/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4672",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4672/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4672/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4672/events",
    "html_url": "https://github.com/expressjs/express/issues/4672",
    "id": 966054005,
    "node_id": "MDU6SXNzdWU5NjYwNTQwMDU=",
    "number": 4672,
    "title": "Regarding hosting",
    "user": {
      "login": "TheWonderTaser",
      "id": 85213577,
      "node_id": "MDQ6VXNlcjg1MjEzNTc3",
      "avatar_url": "https://avatars.githubusercontent.com/u/85213577?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheWonderTaser",
      "html_url": "https://github.com/TheWonderTaser",
      "followers_url": "https://api.github.com/users/TheWonderTaser/followers",
      "following_url": "https://api.github.com/users/TheWonderTaser/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheWonderTaser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheWonderTaser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheWonderTaser/subscriptions",
      "organizations_url": "https://api.github.com/users/TheWonderTaser/orgs",
      "repos_url": "https://api.github.com/users/TheWonderTaser/repos",
      "events_url": "https://api.github.com/users/TheWonderTaser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheWonderTaser/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-08-11T06:39:34Z",
    "updated_at": "2021-08-11T11:56:03Z",
    "closed_at": "2021-08-11T11:56:03Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hey, I am new to express and still learning it but I had a question, what if I wanted to host the express website live on the internet without the port? Thank you for helping in advance also I did a google search and got nothing useful ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4672/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4672/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4671",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4671/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4671/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4671/events",
    "html_url": "https://github.com/expressjs/express/issues/4671",
    "id": 965099510,
    "node_id": "MDU6SXNzdWU5NjUwOTk1MTA=",
    "number": 4671,
    "title": "Alternatives to passing values via url",
    "user": {
      "login": "da-source",
      "id": 73023767,
      "node_id": "MDQ6VXNlcjczMDIzNzY3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73023767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/da-source",
      "html_url": "https://github.com/da-source",
      "followers_url": "https://api.github.com/users/da-source/followers",
      "following_url": "https://api.github.com/users/da-source/following{/other_user}",
      "gists_url": "https://api.github.com/users/da-source/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/da-source/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/da-source/subscriptions",
      "organizations_url": "https://api.github.com/users/da-source/orgs",
      "repos_url": "https://api.github.com/users/da-source/repos",
      "events_url": "https://api.github.com/users/da-source/events{/privacy}",
      "received_events_url": "https://api.github.com/users/da-source/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-08-10T15:53:50Z",
    "updated_at": "2021-08-10T15:56:08Z",
    "closed_at": "2021-08-10T15:55:13Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I currently have a server that displays values in template. Values are gotten from dynamic url building like so:\r\n\r\n```\r\napp.get('/:val1/:val2', function(req, res, next)){\r\nres.render(\r\nval1:val1,\r\nval2:val2\r\n)\r\n}\r\n```\r\n\r\nThe idea was, that anyone could customize the template page by typing the values in url. \r\n\r\nhttp://my-template-page/val1/val2\r\n\r\nDownside of this approach is, as the number of values increases it becomes problematic handling the urls.\r\nIs there an alternative approach? I considered creating separate JS file and passing variables to iframe like so:\r\n\r\n```\r\n<script type=\"text/javascript\">\r\nparameters = {val1,val2};\r\n</script>\r\n<iframe src=\"my-template-page\"></iframe>\r\n```\r\n\r\nBut I can't get this approach to work. Are there any alternatives to passing values to template via url?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4671/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4671/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4667",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4667/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4667/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4667/events",
    "html_url": "https://github.com/expressjs/express/pull/4667",
    "id": 961649044,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NzA0NTUzNDQy",
    "number": 4667,
    "title": "Correct spelling error",
    "user": {
      "login": "AndrewHeaney",
      "id": 5108450,
      "node_id": "MDQ6VXNlcjUxMDg0NTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5108450?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AndrewHeaney",
      "html_url": "https://github.com/AndrewHeaney",
      "followers_url": "https://api.github.com/users/AndrewHeaney/followers",
      "following_url": "https://api.github.com/users/AndrewHeaney/following{/other_user}",
      "gists_url": "https://api.github.com/users/AndrewHeaney/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AndrewHeaney/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AndrewHeaney/subscriptions",
      "organizations_url": "https://api.github.com/users/AndrewHeaney/orgs",
      "repos_url": "https://api.github.com/users/AndrewHeaney/repos",
      "events_url": "https://api.github.com/users/AndrewHeaney/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AndrewHeaney/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2021-08-05T09:53:29Z",
    "updated_at": "2021-08-12T04:10:33Z",
    "closed_at": "2021-08-12T04:10:33Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4667",
      "html_url": "https://github.com/expressjs/express/pull/4667",
      "diff_url": "https://github.com/expressjs/express/pull/4667.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4667.patch",
      "merged_at": "2021-08-12T04:10:33Z"
    },
    "body": null,
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4667/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4667/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4668",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4668/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4668/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4668/events",
    "html_url": "https://github.com/expressjs/express/issues/4668",
    "id": 961843500,
    "node_id": "MDU6SXNzdWU5NjE4NDM1MDA=",
    "number": 4668,
    "title": "Passing request parameters to router",
    "user": {
      "login": "TheProgrammer21",
      "id": 52009814,
      "node_id": "MDQ6VXNlcjUyMDA5ODE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/52009814?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheProgrammer21",
      "html_url": "https://github.com/TheProgrammer21",
      "followers_url": "https://api.github.com/users/TheProgrammer21/followers",
      "following_url": "https://api.github.com/users/TheProgrammer21/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheProgrammer21/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheProgrammer21/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheProgrammer21/subscriptions",
      "organizations_url": "https://api.github.com/users/TheProgrammer21/orgs",
      "repos_url": "https://api.github.com/users/TheProgrammer21/repos",
      "events_url": "https://api.github.com/users/TheProgrammer21/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheProgrammer21/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-08-05T08:23:23Z",
    "updated_at": "2021-08-05T14:34:08Z",
    "closed_at": "2021-08-05T13:44:13Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Related to a question of another user I found on StackOverflow:\r\nhttps://stackoverflow.com/questions/34392834/express-js-how-can-i-pass-a-url-param-from-the-main-router-to-another-router-m\r\n\r\nIs the only possibility to pass a request parameter to another router, to add a custom middleware function? \r\nIt would be nice if it could be passed automatically, or is there a reason why this doesn't happen? I don't really see a good reason to be honest.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4668/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4668/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4666",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4666/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4666/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4666/events",
    "html_url": "https://github.com/expressjs/express/issues/4666",
    "id": 960642063,
    "node_id": "MDU6SXNzdWU5NjA2NDIwNjM=",
    "number": 4666,
    "title": "app.get sendFile hostname domain express.js ?",
    "user": {
      "login": "mamaev37",
      "id": 46979680,
      "node_id": "MDQ6VXNlcjQ2OTc5Njgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/46979680?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mamaev37",
      "html_url": "https://github.com/mamaev37",
      "followers_url": "https://api.github.com/users/mamaev37/followers",
      "following_url": "https://api.github.com/users/mamaev37/following{/other_user}",
      "gists_url": "https://api.github.com/users/mamaev37/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mamaev37/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mamaev37/subscriptions",
      "organizations_url": "https://api.github.com/users/mamaev37/orgs",
      "repos_url": "https://api.github.com/users/mamaev37/repos",
      "events_url": "https://api.github.com/users/mamaev37/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mamaev37/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-08-04T14:37:49Z",
    "updated_at": "2021-08-04T15:37:12Z",
    "closed_at": "2021-08-04T15:36:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "this.app.get('/', (req, res) =>{\r\n     res.sendFile(__dirname + './www/index.html'); // use hostname domain ?\r\n});\r\n\r\nHello, how to do this correctly ? connect to a domain instead of a localhost ?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4666/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4666/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4665",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4665/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4665/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4665/events",
    "html_url": "https://github.com/expressjs/express/issues/4665",
    "id": 960443220,
    "node_id": "MDU6SXNzdWU5NjA0NDMyMjA=",
    "number": 4665,
    "title": "issue with express 4.17.1 and websockets",
    "user": {
      "login": "leurs247",
      "id": 58610521,
      "node_id": "MDQ6VXNlcjU4NjEwNTIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/58610521?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leurs247",
      "html_url": "https://github.com/leurs247",
      "followers_url": "https://api.github.com/users/leurs247/followers",
      "following_url": "https://api.github.com/users/leurs247/following{/other_user}",
      "gists_url": "https://api.github.com/users/leurs247/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leurs247/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leurs247/subscriptions",
      "organizations_url": "https://api.github.com/users/leurs247/orgs",
      "repos_url": "https://api.github.com/users/leurs247/repos",
      "events_url": "https://api.github.com/users/leurs247/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leurs247/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-08-04T13:21:33Z",
    "updated_at": "2021-10-22T15:14:03Z",
    "closed_at": "2021-10-22T15:13:50Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have an issue with express v.4.17.1 and socket.io (but the same thing happens with the ws-package).\r\n\r\nCode example:\r\n````\r\n\"use strict\";\r\n\r\nconst express = require('express');\r\nconst app = express();\r\nconst server = require('http').createServer(app);\r\nconst io = require('socket.io')(server);\r\n\r\nio.on('connection', (socket) => {\r\n  console.log('user connected', socket.id);\r\n});\r\n\r\nserver.listen(5000, () => console.log('Server listening on port 5000'));\r\n````\r\nThis should expose a simple websocket server on port 5000. The problem is that the connections get refused. The client reconnects every 2-3 seconds.\r\n\r\nBy downgrading to express v.4.13.0, everything works fine, it's the only thing I've changed on the code so it is an issue with express I guess?\r\n\r\nAnyone encountered this problem?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4665/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4665/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4664",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4664/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4664/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4664/events",
    "html_url": "https://github.com/expressjs/express/issues/4664",
    "id": 960247093,
    "node_id": "MDU6SXNzdWU5NjAyNDcwOTM=",
    "number": 4664,
    "title": "response.setTimeout or request.setTimeout ?",
    "user": {
      "login": "arnaudambro",
      "id": 31724752,
      "node_id": "MDQ6VXNlcjMxNzI0NzUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/31724752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arnaudambro",
      "html_url": "https://github.com/arnaudambro",
      "followers_url": "https://api.github.com/users/arnaudambro/followers",
      "following_url": "https://api.github.com/users/arnaudambro/following{/other_user}",
      "gists_url": "https://api.github.com/users/arnaudambro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arnaudambro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arnaudambro/subscriptions",
      "organizations_url": "https://api.github.com/users/arnaudambro/orgs",
      "repos_url": "https://api.github.com/users/arnaudambro/repos",
      "events_url": "https://api.github.com/users/arnaudambro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arnaudambro/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2021-08-04T10:53:16Z",
    "updated_at": "2021-08-06T06:47:14Z",
    "closed_at": "2021-08-05T20:16:07Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have a request which makes third party API calls, and it might sometimes take more than 2-3 minutes.\r\n\r\nI found out that Express send 504 errors when the timeout is above 2 minutes, that's why I want to tell express to wait for a bit more time.\r\n\r\nOn issue #3330 there a [post comment](https://github.com/expressjs/express/issues/3330#issuecomment-390187328) about a trick that might be nice\r\n\r\n> ``` js\r\n> app.post('/xxx', function (req, res) {\r\n>      req.setTimeout(500000);\r\n> });\r\n> ```\r\n\r\nthere are a lot of thumbs up for this, so I tried to apply it in my code, but it's not working\r\n\r\nthen there is [another comment](https://github.com/expressjs/express/issues/3330#issuecomment-535096660) saying that it should be `res.setTimeout` and not `req`, and indeed it works better at home.\r\n\r\n\r\nso I tried a solution that looks good for me\r\n\r\n```js\r\nconst serverTimeout = 3000;\r\napp.get(\"/\", async (req, res, next) => {\r\n  res.setTimeout(serverTimeout, function () {\r\n    console.log(\"timedout !\");\r\n    res.status(400).send(`Too late`);\r\n  }); \r\n  console.log(\"we put a timeout\");\r\n  await new Promise((res) => setTimeout(res, 2000));\r\n  console.log(\"timeout has been waited\");\r\n  res.send(\"Hello World\");\r\n});\r\n```\r\n\r\nthis works perfectly.\r\n\r\nnow if I change `serverTimeout` to 1000, it still works, I receive `Too late` in my browser, but also the error `Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client` because of my `res.send(\"Hello World\");`\r\n\r\nI couldn't find any documentation about either `res.setTimeout` nor `req.setTimeout`, and I couldn't find more examples on stackoverflow or elsewhere\r\n\r\nwhat should be done there ?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4664/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4664/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4663",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4663/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4663/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4663/events",
    "html_url": "https://github.com/expressjs/express/issues/4663",
    "id": 959914418,
    "node_id": "MDU6SXNzdWU5NTk5MTQ0MTg=",
    "number": 4663,
    "title": "router.post() is not working",
    "user": {
      "login": "nikitaghule98",
      "id": 84223668,
      "node_id": "MDQ6VXNlcjg0MjIzNjY4",
      "avatar_url": "https://avatars.githubusercontent.com/u/84223668?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nikitaghule98",
      "html_url": "https://github.com/nikitaghule98",
      "followers_url": "https://api.github.com/users/nikitaghule98/followers",
      "following_url": "https://api.github.com/users/nikitaghule98/following{/other_user}",
      "gists_url": "https://api.github.com/users/nikitaghule98/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nikitaghule98/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nikitaghule98/subscriptions",
      "organizations_url": "https://api.github.com/users/nikitaghule98/orgs",
      "repos_url": "https://api.github.com/users/nikitaghule98/repos",
      "events_url": "https://api.github.com/users/nikitaghule98/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nikitaghule98/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-08-04T05:31:54Z",
    "updated_at": "2021-08-04T10:19:51Z",
    "closed_at": "2021-08-04T10:19:51Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "when router.post() is used\r\nconst { Router } = require(\"express\");\r\nconst express = require(\"express\");\r\nconst router = express.Router();\r\n// controller\r\nconst { createOrUpdateUser } = require(\"../controllers/auth\");\r\n\r\nrouter.post(\"/create-or-update-user\", \r\n    createOrUpdateUser);\r\n\r\nmodule.exports = router;\r\n\r\n![image](https://user-images.githubusercontent.com/84223668/128127163-01fbfd2d-e2bf-48b5-b274-d550951c17e6.png)\r\n\r\n****************************************************************************\r\n\r\nwhen router.get() is used\r\nconst { Router } = require(\"express\");\r\nconst express = require(\"express\");\r\nconst router = express.Router();\r\n// controller\r\nconst { createOrUpdateUser } = require(\"../controllers/auth\");\r\n\r\nrouter.get(\"/create-or-update-user\", \r\n    createOrUpdateUser);\r\n\r\nmodule.exports = router;\r\n\r\n![image](https://user-images.githubusercontent.com/84223668/128127048-60ff6d12-e351-4bcc-9575-bf473e3fd521.png)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4663/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4663/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4662",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4662/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4662/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4662/events",
    "html_url": "https://github.com/expressjs/express/issues/4662",
    "id": 957708501,
    "node_id": "MDU6SXNzdWU5NTc3MDg1MDE=",
    "number": 4662,
    "title": "express.static  retuen blob  ,How to change?",
    "user": {
      "login": "284668461",
      "id": 38812759,
      "node_id": "MDQ6VXNlcjM4ODEyNzU5",
      "avatar_url": "https://avatars.githubusercontent.com/u/38812759?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/284668461",
      "html_url": "https://github.com/284668461",
      "followers_url": "https://api.github.com/users/284668461/followers",
      "following_url": "https://api.github.com/users/284668461/following{/other_user}",
      "gists_url": "https://api.github.com/users/284668461/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/284668461/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/284668461/subscriptions",
      "organizations_url": "https://api.github.com/users/284668461/orgs",
      "repos_url": "https://api.github.com/users/284668461/repos",
      "events_url": "https://api.github.com/users/284668461/events{/privacy}",
      "received_events_url": "https://api.github.com/users/284668461/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-08-02T03:39:28Z",
    "updated_at": "2021-10-22T15:15:08Z",
    "closed_at": "2021-10-22T15:15:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "express.static  retuen blob  ,How to change ?\r\nWhere can I get the documentation  ?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4662/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4662/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4661",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4661/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4661/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4661/events",
    "html_url": "https://github.com/expressjs/express/issues/4661",
    "id": 957648855,
    "node_id": "MDU6SXNzdWU5NTc2NDg4NTU=",
    "number": 4661,
    "title": "Weird body with qoutes falls to undefined",
    "user": {
      "login": "omarcresp",
      "id": 27465620,
      "node_id": "MDQ6VXNlcjI3NDY1NjIw",
      "avatar_url": "https://avatars.githubusercontent.com/u/27465620?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/omarcresp",
      "html_url": "https://github.com/omarcresp",
      "followers_url": "https://api.github.com/users/omarcresp/followers",
      "following_url": "https://api.github.com/users/omarcresp/following{/other_user}",
      "gists_url": "https://api.github.com/users/omarcresp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/omarcresp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/omarcresp/subscriptions",
      "organizations_url": "https://api.github.com/users/omarcresp/orgs",
      "repos_url": "https://api.github.com/users/omarcresp/repos",
      "events_url": "https://api.github.com/users/omarcresp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/omarcresp/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-08-02T01:09:09Z",
    "updated_at": "2021-08-03T15:26:08Z",
    "closed_at": "2021-08-03T15:26:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have this post method that console.log the request body\r\n\r\n<img width=\"364\" alt=\"Screen Shot 2021-08-01 at 8 07 24 PM\" src=\"https://user-images.githubusercontent.com/27465620/127791712-42647f8b-79af-4b87-8b81-a4549d68b4d6.png\">\r\n<img width=\"462\" alt=\"Screen Shot 2021-08-01 at 8 07 42 PM\" src=\"https://user-images.githubusercontent.com/27465620/127791732-8cf1b934-7c2d-4565-9ee6-de5e5191c871.png\">\r\n\r\nthis is the console.log\r\n<img width=\"297\" alt=\"Screen Shot 2021-08-01 at 8 08 22 PM\" src=\"https://user-images.githubusercontent.com/27465620/127791763-cfa40fb8-04e3-4f45-92cd-a0a5cfc66746.png\">\r\n\r\nThe problem is that if I try to access the 'quoted' properties it results in undefined",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4661/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4661/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4660",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4660/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4660/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4660/events",
    "html_url": "https://github.com/expressjs/express/issues/4660",
    "id": 957147820,
    "node_id": "MDU6SXNzdWU5NTcxNDc4MjA=",
    "number": 4660,
    "title": "Best Practices:  Synchronous functions WITH asynchronous code blocks?",
    "user": {
      "login": "RayDeanTech",
      "id": 21373144,
      "node_id": "MDQ6VXNlcjIxMzczMTQ0",
      "avatar_url": "https://avatars.githubusercontent.com/u/21373144?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RayDeanTech",
      "html_url": "https://github.com/RayDeanTech",
      "followers_url": "https://api.github.com/users/RayDeanTech/followers",
      "following_url": "https://api.github.com/users/RayDeanTech/following{/other_user}",
      "gists_url": "https://api.github.com/users/RayDeanTech/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RayDeanTech/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RayDeanTech/subscriptions",
      "organizations_url": "https://api.github.com/users/RayDeanTech/orgs",
      "repos_url": "https://api.github.com/users/RayDeanTech/repos",
      "events_url": "https://api.github.com/users/RayDeanTech/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RayDeanTech/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2021-07-31T02:00:56Z",
    "updated_at": "2021-08-04T15:22:55Z",
    "closed_at": "2021-08-04T15:22:55Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The Express Performance Best Practices say: \"[Don't use synchronous functions](http://expressjs.com/en/advanced/best-practice-performance.html#dont-use-synchronous-functions)\".\r\n\r\nCheck out the pseudo code below.\r\n\r\nIs the synchronous function in the data model shown below still not considered a performance best practice, even though it _only_ contains an asynchronous code block?  **Could this tie up the executing process?**\r\n\r\nNotice that the Controller's  `getProducts()` is in fact `async`.\r\n\r\nHowever, Model's `getAll()` is not asynchronous.  It does call a library that _will_ return a promise (KNEX), and there is no other code in that function block.\r\n\r\n\r\n```\r\n/**\r\n * PRODUCT ROUTE\r\n */\r\nconst { getProducts } = require('./controllers/productController')\r\napp.get('/api/products', getProducts)\r\n```\r\n\r\n```\r\n/**\r\n * PRODUCT CONTROLLER\r\n */\r\nconst Product = require('../models/productModel')\r\n\r\nasync function getProducts(req, res) {\r\n    try {\r\n        const products = await Product.getAll()\r\n        console.log(products)\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    getProducts\r\n}\r\n```\r\n\r\n```\r\n/**\r\n * PRODUCT MODEL\r\n */\r\nconst db = require('../config/database')\r\n\r\nclass Product {\r\n\r\n    static getAll() {\r\n\r\n        db.raw('select * from PRODUCTS')\r\n            .then(response => { return response })\r\n            .catch(err => console.log(err));\r\n\r\n    }\r\n}\r\nmodule.exports = Product;\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4660/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4660/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4659",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4659/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4659/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4659/events",
    "html_url": "https://github.com/expressjs/express/issues/4659",
    "id": 956730737,
    "node_id": "MDU6SXNzdWU5NTY3MzA3Mzc=",
    "number": 4659,
    "title": "Suggestion for the readme",
    "user": {
      "login": "Jassi10000-zz",
      "id": 64856348,
      "node_id": "MDQ6VXNlcjY0ODU2MzQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/64856348?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Jassi10000-zz",
      "html_url": "https://github.com/Jassi10000-zz",
      "followers_url": "https://api.github.com/users/Jassi10000-zz/followers",
      "following_url": "https://api.github.com/users/Jassi10000-zz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jassi10000-zz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Jassi10000-zz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jassi10000-zz/subscriptions",
      "organizations_url": "https://api.github.com/users/Jassi10000-zz/orgs",
      "repos_url": "https://api.github.com/users/Jassi10000-zz/repos",
      "events_url": "https://api.github.com/users/Jassi10000-zz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Jassi10000-zz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-07-30T13:08:00Z",
    "updated_at": "2021-07-30T15:31:24Z",
    "closed_at": "2021-07-30T13:28:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This issue can instead be treated as a suggestion for the readme of the repository\r\n\r\n![image](https://user-images.githubusercontent.com/64856348/127656832-2054b110-79c3-45cd-be20-b2825632f291.png)\r\n\r\n\r\nCan't this code should now be updated like  :\r\n\r\n<code>import {express}  from \"express\" </code>\r\n\r\nAs the latest version of node.js allows it to treat as a module, for which we just have to add a  type: \"module\" in package.json\r\n\r\nAs node features have been updating , this suggestion can also be a good updation to readme and obvio the coding style",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4659/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4659/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4658",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4658/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4658/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4658/events",
    "html_url": "https://github.com/expressjs/express/issues/4658",
    "id": 956273818,
    "node_id": "MDU6SXNzdWU5NTYyNzM4MTg=",
    "number": 4658,
    "title": "Request triager role for ElvisLee0725",
    "user": {
      "login": "ElvisLee0725",
      "id": 6676387,
      "node_id": "MDQ6VXNlcjY2NzYzODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6676387?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ElvisLee0725",
      "html_url": "https://github.com/ElvisLee0725",
      "followers_url": "https://api.github.com/users/ElvisLee0725/followers",
      "following_url": "https://api.github.com/users/ElvisLee0725/following{/other_user}",
      "gists_url": "https://api.github.com/users/ElvisLee0725/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ElvisLee0725/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ElvisLee0725/subscriptions",
      "organizations_url": "https://api.github.com/users/ElvisLee0725/orgs",
      "repos_url": "https://api.github.com/users/ElvisLee0725/repos",
      "events_url": "https://api.github.com/users/ElvisLee0725/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ElvisLee0725/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-07-29T23:20:09Z",
    "updated_at": "2021-07-30T19:50:11Z",
    "closed_at": "2021-07-30T19:50:11Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have read and understood the project's Code of Conduct.\r\nI also have read and understood the process and best practices around Express triaging.\r\n\r\nI request for a triager role for the following GitHub organizations:\r\n\r\njshttp\r\npillarjs\r\nexpress\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4658/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4658/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4657",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4657/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4657/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4657/events",
    "html_url": "https://github.com/expressjs/express/issues/4657",
    "id": 955558534,
    "node_id": "MDU6SXNzdWU5NTU1NTg1MzQ=",
    "number": 4657,
    "title": "TypeError: Cannot read property 'apply' of undefined",
    "user": {
      "login": "Jassi10000-zz",
      "id": 64856348,
      "node_id": "MDQ6VXNlcjY0ODU2MzQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/64856348?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Jassi10000-zz",
      "html_url": "https://github.com/Jassi10000-zz",
      "followers_url": "https://api.github.com/users/Jassi10000-zz/followers",
      "following_url": "https://api.github.com/users/Jassi10000-zz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jassi10000-zz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Jassi10000-zz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jassi10000-zz/subscriptions",
      "organizations_url": "https://api.github.com/users/Jassi10000-zz/orgs",
      "repos_url": "https://api.github.com/users/Jassi10000-zz/repos",
      "events_url": "https://api.github.com/users/Jassi10000-zz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Jassi10000-zz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 12,
    "created_at": "2021-07-29T07:45:49Z",
    "updated_at": "2021-07-30T15:27:25Z",
    "closed_at": "2021-07-30T15:27:25Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "While running my node express application, am getting this error \r\n\r\n![image](https://user-images.githubusercontent.com/64856348/127452209-0964a084-e1b6-4177-8edd-206048f6c130.png)\r\n\r\n\r\nCan someone help me with this? \r\n\r\n\r\nThe code that I wrote is :\r\n![code-snapshot](https://user-images.githubusercontent.com/64856348/127454969-5078b63c-d047-4846-ac80-c6b74eb8a7d0.png)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4657/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4657/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4656",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4656/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4656/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4656/events",
    "html_url": "https://github.com/expressjs/express/issues/4656",
    "id": 952142992,
    "node_id": "MDU6SXNzdWU5NTIxNDI5OTI=",
    "number": 4656,
    "title": "Big numbers Express JS problem",
    "user": {
      "login": "vitaliyirtlach",
      "id": 63682036,
      "node_id": "MDQ6VXNlcjYzNjgyMDM2",
      "avatar_url": "https://avatars.githubusercontent.com/u/63682036?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vitaliyirtlach",
      "html_url": "https://github.com/vitaliyirtlach",
      "followers_url": "https://api.github.com/users/vitaliyirtlach/followers",
      "following_url": "https://api.github.com/users/vitaliyirtlach/following{/other_user}",
      "gists_url": "https://api.github.com/users/vitaliyirtlach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vitaliyirtlach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vitaliyirtlach/subscriptions",
      "organizations_url": "https://api.github.com/users/vitaliyirtlach/orgs",
      "repos_url": "https://api.github.com/users/vitaliyirtlach/repos",
      "events_url": "https://api.github.com/users/vitaliyirtlach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vitaliyirtlach/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2021-07-24T20:27:39Z",
    "updated_at": "2021-07-24T20:33:46Z",
    "closed_at": "2021-07-24T20:29:52Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "# Hi, developers!\r\nThis is so funny situation, but it is big problem for dev experience!\r\nI do request with Array of Numbers or String (field developers) (discord ID)\r\n\r\nExample: \r\n<img src=\"https://cdn.discordapp.com/attachments/865670771136266280/868587545850708058/88.png\" />\r\n\r\nAnd what I have in Express JS request body (console output): \r\n<img src=\"https://cdn.discordapp.com/attachments/865670771136266280/868587998550319114/90.png\" />\r\n\r\nI think Express JS round my numbers every request.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4656/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4656/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4655",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4655/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4655/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4655/events",
    "html_url": "https://github.com/expressjs/express/issues/4655",
    "id": 951579129,
    "node_id": "MDU6SXNzdWU5NTE1NzkxMjk=",
    "number": 4655,
    "title": "data is not coming on server",
    "user": {
      "login": "arunsingh28",
      "id": 48112517,
      "node_id": "MDQ6VXNlcjQ4MTEyNTE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/48112517?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arunsingh28",
      "html_url": "https://github.com/arunsingh28",
      "followers_url": "https://api.github.com/users/arunsingh28/followers",
      "following_url": "https://api.github.com/users/arunsingh28/following{/other_user}",
      "gists_url": "https://api.github.com/users/arunsingh28/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arunsingh28/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arunsingh28/subscriptions",
      "organizations_url": "https://api.github.com/users/arunsingh28/orgs",
      "repos_url": "https://api.github.com/users/arunsingh28/repos",
      "events_url": "https://api.github.com/users/arunsingh28/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arunsingh28/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 572472845,
        "node_id": "MDU6TGFiZWw1NzI0NzI4NDU=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:body-parser",
        "name": "module:body-parser",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2021-07-23T13:25:36Z",
    "updated_at": "2021-07-23T16:21:40Z",
    "closed_at": "2021-07-23T16:20:10Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "i was trying node.js in typescript and code is same as JS but data is not coming on server\r\n\r\n\r\napp.ts file\r\n```\r\nimport express from 'express'\r\nimport bodyParser from 'body-parser'\r\nimport config from '../config/config'\r\nimport logging from '../config/logger'\r\nimport { connectDB } from './utils/DB'\r\n// init express variable to app ==========\r\nconst app = express()\r\n\r\n\r\nconst NAMESPACE = 'server'\r\n\r\n\r\n// body parser ===========================\r\napp.use(express.json())\r\napp.use(express.urlencoded({ extended: false }))\r\n\r\nconnectDB()\r\n\r\n// logger ===================================\r\napp.use((req, res, next) => {\r\n    logging.info(NAMESPACE, `METHOD - [${req.method}], URL - [${req.url}], IP - [${req.socket.remoteAddress}]`)\r\n    res.on('finish', () => {\r\n        logging.info(NAMESPACE, `METHOD - [${req.method}], URL - [${req.url}], IP - [${req.socket.remoteAddress}], STATUS - [${res.statusCode}]`)\r\n    })\r\n    next()\r\n})\r\n\r\n\r\n// routes ======================================\r\nimport loginRoutes from './routes/login'\r\n\r\napp.use('/api/login', loginRoutes)\r\n\r\n\r\n\r\n// error handling ===============================\r\napp.use((req, res, next) => {\r\n    const error = new Error('Page not found');\r\n    return res.json({ message: error.message, statusCode: 404 }).status(404);\r\n})\r\n\r\n\r\n// server start =================================\r\napp.listen(config.server.port, () => {\r\n    console.log(`Server started on port ${config.server.port}`);\r\n})\r\n```\r\n\r\n\r\nroute/login.ts file\r\n```\r\nimport express from 'express'\r\nimport login_contollers from '../controllers/login'\r\nconst loginAPI = express.Router()\r\n\r\nloginAPI.post('/user', login_contollers.login)\r\n\r\n\r\nexport default loginAPI\r\n```\r\n\r\ncontroller/login.ts file\r\n\r\n```\r\nimport jwt from \"jsonwebtoken\";\r\n\r\ndeclare var process: {\r\n    env: {\r\n        JWT_SECRET_KEY: string,\r\n        JWT_EXPIRE_TIME: number\r\n    }\r\n}\r\n\r\n\r\nconsole.log(process.env.JWT_EXPIRE_TIME)\r\n\r\n// creating jsonwebtoken\r\n\r\nconst getToken = async (id: String) => {\r\n    console.log('from getToken', id)\r\n    return jwt.sign({ id }, process.env.JWT_SECRET_KEY, {\r\n        // in what time token expire\r\n        expiresIn: process.env.JWT_EXPIRE_TIME\r\n    })\r\n}\r\n\r\n\r\n// interface req {\r\n//     body: string,\r\n// }\r\n\r\n\r\nconst login = async (req: any, res: any, next: any) => {\r\n    console.log(req.body)\r\n     if (!id) {\r\n         return res.json({message:'please add id'}).status(200)\r\n     } else {\r\n         const token = await getToken(id)\r\n         console.log(token)\r\n         return res.json({ message: 'hello', token })\r\n     }\r\n    next()\r\n}\r\n\r\nconst LOGIN_API = {\r\n    login\r\n}\r\n\r\nexport default LOGIN_API\r\n```\r\n\r\n**in terminal it showing blank array like this {}**\r\n\r\nbut it did't work so i try bodyParser but that is also not working....\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4655/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4655/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4654",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4654/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4654/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4654/events",
    "html_url": "https://github.com/expressjs/express/issues/4654",
    "id": 951503167,
    "node_id": "MDU6SXNzdWU5NTE1MDMxNjc=",
    "number": 4654,
    "title": "Issues with body parser.",
    "user": {
      "login": "withmask",
      "id": 44925389,
      "node_id": "MDQ6VXNlcjQ0OTI1Mzg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/44925389?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/withmask",
      "html_url": "https://github.com/withmask",
      "followers_url": "https://api.github.com/users/withmask/followers",
      "following_url": "https://api.github.com/users/withmask/following{/other_user}",
      "gists_url": "https://api.github.com/users/withmask/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/withmask/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/withmask/subscriptions",
      "organizations_url": "https://api.github.com/users/withmask/orgs",
      "repos_url": "https://api.github.com/users/withmask/repos",
      "events_url": "https://api.github.com/users/withmask/events{/privacy}",
      "received_events_url": "https://api.github.com/users/withmask/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 572472845,
        "node_id": "MDU6TGFiZWw1NzI0NzI4NDU=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:body-parser",
        "name": "module:body-parser",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-07-23T11:40:35Z",
    "updated_at": "2021-07-23T15:00:52Z",
    "closed_at": "2021-07-23T14:41:31Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Considering the following setup:\r\n```ts\r\n  app.use(\r\n    helmet(),\r\n    (req, res, next) => {\r\n      console.log(req.headers);\r\n      if (req.header('Content-Type')?.toLowerCase() != 'application/json')\r\n        return res\r\n          .status(415)\r\n          .json({ status: false, message: 'Unsupported Media Type' });\r\n\r\n      next();\r\n    },\r\n    express.json({ limit: '10b' }),\r\n    //@ts-expect-error\r\n    (error, req: express.Request, res: express.Response, next) => {\r\n      console.log(res.destroyed);\r\n      console.error('Failed parsing body', error);\r\n      res.status(400).json({ status: false, message: 'Invalid body provided' });\r\n    }\r\n  )\r\n```\r\nThis snippet works as intended when the Content-Length header matches the Length of the actual body. However if the client gives false data, express acts with weird behavior.\r\n\r\n- [x] When the Content-Length is shorter than the body size, `res.status(400).json({ status: false, message: 'Invalid body provided' })` Only returns an empty body and a 400 status.\r\n![image](https://user-images.githubusercontent.com/44925389/126776137-8ff80354-95bc-4224-bc42-6e377dcc121a.png)\r\n\r\n     Even when Content-Length is not equal to zero, the same behavior happens\r\n     ![image](https://user-images.githubusercontent.com/44925389/126776294-9603408f-7513-4934-8412-429767c35f73.png)\r\n\r\n     And obviously the middle-ware is actually executed and i indeed receive logs of 'Failed parsing body',\r\n     ![image](https://user-images.githubusercontent.com/44925389/126776460-75b3be27-241b-4130-bfc3-d1bdb69ceaef.png)\r\n\r\n- [x] When the Content-Length is bigger than the body size, express appears to await forever and never closes the request.\r\n\r\n   ![image](https://user-images.githubusercontent.com/44925389/126776501-00353ea8-d438-4242-a32e-029451f84433.png)\r\n\r\nThis problem have been fixed by using the following snippet\r\n```ts\r\nreq.setTimeout(1000 * 60, () => {\r\n        if (res.headersSent) return;\r\n        console.log('Request timed out');\r\n        res\r\n          .status(408)\r\n          .json({\r\n            status: false,\r\n            message: 'Request timeout'\r\n          })\r\n          .end();\r\n      });\r\n```\r\n\r\nNote that i added `if (res.headersSent) return;` Because this is triggered twice for some reason.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4654/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4654/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4653",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4653/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4653/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4653/events",
    "html_url": "https://github.com/expressjs/express/issues/4653",
    "id": 950857964,
    "node_id": "MDU6SXNzdWU5NTA4NTc5NjQ=",
    "number": 4653,
    "title": "Express server not receiving whole files (sometimes)",
    "user": {
      "login": "nickgermaine",
      "id": 13626953,
      "node_id": "MDQ6VXNlcjEzNjI2OTUz",
      "avatar_url": "https://avatars.githubusercontent.com/u/13626953?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nickgermaine",
      "html_url": "https://github.com/nickgermaine",
      "followers_url": "https://api.github.com/users/nickgermaine/followers",
      "following_url": "https://api.github.com/users/nickgermaine/following{/other_user}",
      "gists_url": "https://api.github.com/users/nickgermaine/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nickgermaine/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nickgermaine/subscriptions",
      "organizations_url": "https://api.github.com/users/nickgermaine/orgs",
      "repos_url": "https://api.github.com/users/nickgermaine/repos",
      "events_url": "https://api.github.com/users/nickgermaine/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nickgermaine/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2021-07-22T16:48:20Z",
    "updated_at": "2021-07-26T16:21:51Z",
    "closed_at": "2021-07-26T16:21:50Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The issue:\r\nI have an app in production where the front end is React, and the api is express.  One of the app pages is a video upload page, that sends the file to the api (both are served through nginx).  The video file (as written to the /tmp dir) is then loaded into fluent ffmpeg and converted, uploaded to storage server, etc.\r\n\r\nI began getting reports that the upload function was not working.  Digging into this, I took note of the file size transmitted from the react app, and the size of the file received in express.  The react app always shows that sent bytes === total bytes.\r\n\r\nThe express api shows (sometimes -- specifically in instances where the function later fails in the conversion step), that not all bytes are always received.  It happens about half the time.  Sometimes the entire file is received.\r\n\r\nInitially I was using multiparty, but in my troubleshooting I've replaced that with busboy, then formidable, and the same thing is happening with all of those.  I'm not sure if it is, but it seems like an issue with express.  Currenty using express 4.16.4\r\n\r\nI'm experiencing the issue on multiple servers.  The production server, AND a beta server, AND my local development pc.\r\n\r\nOS: Ubuntu 20.04 (both servers) Windows 10 (development pc) macOS 12 (other developmetn pc)\r\nRunning express with: pm2 (servers), npm start (pc)\r\nweb server: nginx (servers), none (pc)\r\n\r\nThe specific issue that occurs is during the ffmpeg conversion, it errors out with \"invalid data found while processing this file\" because some important flags are usually stored at the end of video files, and that part of the file isn't available.  Videos range in size from 15mb to 300mb and doesn't seem to have impact on the failure rate of this specific route.\r\n\r\nI know there's a lot of variables here, but I'm hoping someone can help me with this.  I have tried EVERYTHING (I can think of), and nothing is fixing it.\r\n\r\nHere is my package.json file if that is helpful..  Idunno.\r\n`{\r\n  \"name\": \"f21-api\",\r\n  \"version\": \"0.0.0\",\r\n  \"private\": true,\r\n  \"scripts\": {\r\n    \"start\": \"node ./bin/www\"\r\n  },\r\n  \"dependencies\": {\r\n    \"@ffmpeg-installer/ffmpeg\": \"^1.1.0\",\r\n    \"@socket.io/sticky\": \"^1.0.1\",\r\n    \"aws-cloudfront-sign\": \"^2.2.0\",\r\n    \"aws-sdk\": \"^2.951.0\",\r\n    \"bcrypt\": \"^5.0.1\",\r\n    \"busboy\": \"^0.3.1\",\r\n    \"cluster\": \"^0.7.7\",\r\n    \"cookie-parser\": \"~1.4.4\",\r\n    \"cors\": \"^2.8.5\",\r\n    \"dayjs\": \"^1.10.6\",\r\n    \"debug\": \"~2.6.9\",\r\n    \"express\": \"~4.16.1\",\r\n    \"express-busboy\": \"^8.0.0\",\r\n    \"express-fileupload\": \"^1.2.1\",\r\n    \"express-formidable\": \"^1.2.0\",\r\n    \"express-ws-routes\": \"^1.1.0\",\r\n    \"farmhash\": \"^3.2.1\",\r\n    \"ffmpeg-extract-frames\": \"^2.0.2\",\r\n    \"ffprobe\": \"^1.1.2\",\r\n    \"ffprobe-static\": \"^3.0.0\",\r\n    \"fluent-ffmpeg\": \"^2.1.2\",\r\n    \"formidable\": \"git+https://github.com/node-formidable/formidable.git\",\r\n    \"get-video-dimensions\": \"^1.0.0\",\r\n    \"hls-ffmpeg\": \"0.0.9\",\r\n    \"http-errors\": \"~1.6.3\",\r\n    \"jsonwebtoken\": \"^8.5.1\",\r\n    \"lodash\": \"^4.17.21\",\r\n    \"mandrill-api\": \"^1.0.45\",\r\n    \"mongoose\": \"^5.13.3\",\r\n    \"morgan\": \"~1.9.1\",\r\n    \"multiparty\": \"^4.2.2\",\r\n    \"nodemailer\": \"^6.6.3\",\r\n    \"pdfkit\": \"^0.11.0\",\r\n    \"redis\": \"^3.1.2\",\r\n    \"sharp\": \"^0.25.4\",\r\n    \"shelljs\": \"^0.8.4\",\r\n    \"socket.io\": \"^3.1.2\",\r\n    \"socket.io-redis\": \"^6.1.1\",\r\n    \"stripe\": \"^8.164.0\",\r\n    \"ws\": \"^7.5.3\",\r\n    \"xlsx-to-json\": \"^0.3.0\",\r\n    \"xml2js\": \"^0.4.23\"\r\n  }\r\n}\r\n`",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4653/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4653/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4652",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4652/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4652/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4652/events",
    "html_url": "https://github.com/expressjs/express/issues/4652",
    "id": 949879752,
    "node_id": "MDU6SXNzdWU5NDk4Nzk3NTI=",
    "number": 4652,
    "title": "How to access the variable passed through res.renderer?",
    "user": {
      "login": "da-source",
      "id": 73023767,
      "node_id": "MDQ6VXNlcjczMDIzNzY3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73023767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/da-source",
      "html_url": "https://github.com/da-source",
      "followers_url": "https://api.github.com/users/da-source/followers",
      "following_url": "https://api.github.com/users/da-source/following{/other_user}",
      "gists_url": "https://api.github.com/users/da-source/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/da-source/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/da-source/subscriptions",
      "organizations_url": "https://api.github.com/users/da-source/orgs",
      "repos_url": "https://api.github.com/users/da-source/repos",
      "events_url": "https://api.github.com/users/da-source/events{/privacy}",
      "received_events_url": "https://api.github.com/users/da-source/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2021-07-21T16:09:37Z",
    "updated_at": "2021-07-21T19:16:51Z",
    "closed_at": "2021-07-21T16:15:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm passing a variable to my template renderer in ExpressJs like so:\r\n\r\nindex.js\r\n```\r\napp.get('/simple_view/', function(req, res, next){\r\n  title='A TITLE';\r\n  res.render('simple', {\r\n          title: title\r\n       });\r\n    });   \r\n``` \r\nI would like to access the `title` variable in a JS script on my template page, but I'm getting `Uncaught ReferenceError: title is not defined` error. \r\n\r\nsimple,pug\r\n```\r\nscript.\r\n   console.log(title);\r\n```\r\nHow can I solve this?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4652/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4652/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4651",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4651/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4651/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4651/events",
    "html_url": "https://github.com/expressjs/express/issues/4651",
    "id": 949735248,
    "node_id": "MDU6SXNzdWU5NDk3MzUyNDg=",
    "number": 4651,
    "title": "TypeError: Converting circular structure to JSON",
    "user": {
      "login": "ridhwaans",
      "id": 1103336,
      "node_id": "MDQ6VXNlcjExMDMzMzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1103336?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ridhwaans",
      "html_url": "https://github.com/ridhwaans",
      "followers_url": "https://api.github.com/users/ridhwaans/followers",
      "following_url": "https://api.github.com/users/ridhwaans/following{/other_user}",
      "gists_url": "https://api.github.com/users/ridhwaans/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ridhwaans/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ridhwaans/subscriptions",
      "organizations_url": "https://api.github.com/users/ridhwaans/orgs",
      "repos_url": "https://api.github.com/users/ridhwaans/repos",
      "events_url": "https://api.github.com/users/ridhwaans/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ridhwaans/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-07-21T13:56:11Z",
    "updated_at": "2021-07-21T14:12:37Z",
    "closed_at": "2021-07-21T14:12:31Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Getting this error consistently on one route. the request value is bound to the text field changed event on a client search box.  \r\nThe issue does not occur with any of the application's other route, only with one route.   \r\nI think its reproducible when you hit backspace on an already empty textbox and it makes a null or undefined request  \r\n\r\nfull stack trace\r\n```\r\n/server/node_modules/express/lib/response.js:1121\r\n[0]   : JSON.stringify(value);\r\n[0]              ^                    \r\n[0]\r\n[0] TypeError: Converting circular structure to JSON\r\n[0]     --> starting at object with constructor 'ClientRequest'\r\n[0]     |     property 'socket' -> object with constructor 'TLSSocket'\r\n[0]     --- property '_httpMessage' closes the circle\r\n[0]     at JSON.stringify (<anonymous>)\r\n[0]     at stringify (project/server/node_modules/express/lib/response.js:1121:34)\r\n[0]     at ServerResponse.json (project/server/node_modules/express/lib/response.js:260:14)\r\n[0]     at /server/routes/index.js:120:7\r\n[0]     at processTicksAndRejections (node:internal/process/task_queues:96:5)\r\n[0] [nodemon] app crashed - waiting for file changes before starting...\r\n```\r\n\r\nproject file project/server/routes/index.js:120:7\r\n```\r\nrouter.get('/api/services/search', async (req, res) => {\r\n  res.json(await externalSearch(req.query.type, req.query.q));\r\n});\r\n```\r\n\r\nnode_modules/express/lib/response.js:1121\r\n```\r\n1121  var json = replacer || spaces\r\n1122   ? JSON.stringify(value, replacer, spaces)\r\n1123    : JSON.stringify(value);\r\n```\r\n\r\nsimilar issue in related thread https://github.com/expressjs/express/issues/4311  \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4651/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4651/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4650",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4650/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4650/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4650/events",
    "html_url": "https://github.com/expressjs/express/issues/4650",
    "id": 949415410,
    "node_id": "MDU6SXNzdWU5NDk0MTU0MTA=",
    "number": 4650,
    "title": "Default error handler prints [object Object]",
    "user": {
      "login": "RevealedFrom",
      "id": 5305957,
      "node_id": "MDQ6VXNlcjUzMDU5NTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5305957?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RevealedFrom",
      "html_url": "https://github.com/RevealedFrom",
      "followers_url": "https://api.github.com/users/RevealedFrom/followers",
      "following_url": "https://api.github.com/users/RevealedFrom/following{/other_user}",
      "gists_url": "https://api.github.com/users/RevealedFrom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RevealedFrom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RevealedFrom/subscriptions",
      "organizations_url": "https://api.github.com/users/RevealedFrom/orgs",
      "repos_url": "https://api.github.com/users/RevealedFrom/repos",
      "events_url": "https://api.github.com/users/RevealedFrom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RevealedFrom/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-07-21T07:31:46Z",
    "updated_at": "2021-07-21T07:35:36Z",
    "closed_at": "2021-07-21T07:35:36Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In lib/application.js:\r\n\r\n```\r\nfunction logerror(err) {\r\n  /* istanbul ignore next */\r\n  if (this.get('env') !== 'test') console.error(err.stack || err.toString());\r\n}\r\n```\r\n`console.error(err.toString())` prints `[object Object]` instead of enumerating through the `err` properties. Is this the intention?\r\n\r\nShouldn't `console.error(err)` be more suitable?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4650/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4650/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4649",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4649/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4649/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4649/events",
    "html_url": "https://github.com/expressjs/express/issues/4649",
    "id": 948658668,
    "node_id": "MDU6SXNzdWU5NDg2NTg2Njg=",
    "number": 4649,
    "title": "Get child params from parent router",
    "user": {
      "login": "Joooonny",
      "id": 68290416,
      "node_id": "MDQ6VXNlcjY4MjkwNDE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/68290416?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Joooonny",
      "html_url": "https://github.com/Joooonny",
      "followers_url": "https://api.github.com/users/Joooonny/followers",
      "following_url": "https://api.github.com/users/Joooonny/following{/other_user}",
      "gists_url": "https://api.github.com/users/Joooonny/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Joooonny/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Joooonny/subscriptions",
      "organizations_url": "https://api.github.com/users/Joooonny/orgs",
      "repos_url": "https://api.github.com/users/Joooonny/repos",
      "events_url": "https://api.github.com/users/Joooonny/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Joooonny/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2021-07-20T13:32:29Z",
    "updated_at": "2021-07-21T15:45:18Z",
    "closed_at": "2021-07-20T13:56:43Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I want to get global params from a parent router like path with originalUrl.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4649/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4649/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  }
]