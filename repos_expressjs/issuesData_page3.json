[
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4915",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4915/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4915/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4915/events",
    "html_url": "https://github.com/expressjs/express/issues/4915",
    "id": 1248296872,
    "node_id": "I_kwDOAAOeZ85KZ3-o",
    "number": 4915,
    "title": "express passes to next middleware even if `next()` is not called?",
    "user": {
      "login": "touhidurrr",
      "id": 46617994,
      "node_id": "MDQ6VXNlcjQ2NjE3OTk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/46617994?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/touhidurrr",
      "html_url": "https://github.com/touhidurrr",
      "followers_url": "https://api.github.com/users/touhidurrr/followers",
      "following_url": "https://api.github.com/users/touhidurrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/touhidurrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/touhidurrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/touhidurrr/subscriptions",
      "organizations_url": "https://api.github.com/users/touhidurrr/orgs",
      "repos_url": "https://api.github.com/users/touhidurrr/repos",
      "events_url": "https://api.github.com/users/touhidurrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/touhidurrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 98481977,
        "node_id": "MDU6TGFiZWw5ODQ4MTk3Nw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2022-05-25T15:44:01Z",
    "updated_at": "2022-05-25T17:28:40Z",
    "closed_at": "2022-05-25T17:28:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In my code:\r\nhttps://github.com/touhidurrr/UncivServer.xyz/blob/ed0271efafbe5372e47f6b59cb7d43910aec5622/src/server.js#L49-L74\r\nExpress passes to nex middleware even if `413 Payload Too Large` is sent.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4915/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4915/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4914",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4914/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4914/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4914/events",
    "html_url": "https://github.com/expressjs/express/pull/4914",
    "id": 1243346200,
    "node_id": "PR_kwDOAAOeZ844M3i0",
    "number": 4914,
    "title": "examples: remove unused params",
    "user": {
      "login": "alxdrg",
      "id": 13302249,
      "node_id": "MDQ6VXNlcjEzMzAyMjQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/13302249?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alxdrg",
      "html_url": "https://github.com/alxdrg",
      "followers_url": "https://api.github.com/users/alxdrg/followers",
      "following_url": "https://api.github.com/users/alxdrg/following{/other_user}",
      "gists_url": "https://api.github.com/users/alxdrg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alxdrg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alxdrg/subscriptions",
      "organizations_url": "https://api.github.com/users/alxdrg/orgs",
      "repos_url": "https://api.github.com/users/alxdrg/repos",
      "events_url": "https://api.github.com/users/alxdrg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alxdrg/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2022-05-20T15:55:48Z",
    "updated_at": "2022-05-20T17:38:41Z",
    "closed_at": "2022-05-20T17:38:40Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4914",
      "html_url": "https://github.com/expressjs/express/pull/4914",
      "diff_url": "https://github.com/expressjs/express/pull/4914.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4914.patch",
      "merged_at": "2022-05-20T17:38:40Z"
    },
    "body": null,
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4914/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4914/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4913",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4913/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4913/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4913/events",
    "html_url": "https://github.com/expressjs/express/issues/4913",
    "id": 1242837432,
    "node_id": "I_kwDOAAOeZ85KFDG4",
    "number": 4913,
    "title": "Combinations of middleware series with \"app.all\" is broken since 4.18.0",
    "user": {
      "login": "nicokaiser",
      "id": 238631,
      "node_id": "MDQ6VXNlcjIzODYzMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/238631?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicokaiser",
      "html_url": "https://github.com/nicokaiser",
      "followers_url": "https://api.github.com/users/nicokaiser/followers",
      "following_url": "https://api.github.com/users/nicokaiser/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicokaiser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicokaiser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicokaiser/subscriptions",
      "organizations_url": "https://api.github.com/users/nicokaiser/orgs",
      "repos_url": "https://api.github.com/users/nicokaiser/repos",
      "events_url": "https://api.github.com/users/nicokaiser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicokaiser/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 12,
    "created_at": "2022-05-20T08:52:15Z",
    "updated_at": "2022-08-18T19:28:48Z",
    "closed_at": "2022-05-20T15:24:54Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "Like all `app.METHOD()`, `app.all()` takes callback functions that, according to http://expressjs.com/en/4x/api.html#app.all can be\r\n\r\n- A middleware function.\r\n- A series of middleware functions (separated by commas).\r\n- An array of middleware functions.\r\n- A combination of all of the above.\r\n\r\nWhich should make this example perfectly valid:\r\n\r\n```js\r\nconst express = require('express');\r\nconst app = express();\r\n\r\nfunction mw1 (req, res, next) { next() };\r\nfunction mw2 (req, res, next) { next() };\r\nfunction mw3 (req, res, next) { next() };\r\nfunction mw4 (req, res, next) { next() };\r\nfunction mw5 (req, res, next) { next() };\r\n\r\napp.all('/path',\r\n    mw1, // x\r\n    [\r\n        mw2, // x\r\n        [\r\n            mw3, // x\r\n            mw4 // x\r\n        ],\r\n    ],\r\n    [\r\n        mw5, // x\r\n    ],\r\n    (req, res, next) => res.send('OK')\r\n);\r\n\r\napp.use((req, res) => res.status(404).send('Not Found'));\r\napp.listen(3000);\r\n```\r\n\r\n**However with express@4.18.0 (and also 4.18.1):**\r\n\r\n```sh\r\ncurl -X GET http://localhost:3000/path  # Works (\"OK\")\r\ncurl -X POST http://localhost:3000/path  # Does not work (404)\r\n```\r\n\r\nTo make it work with POST, you can either\r\n\r\n- Comment out any line with `// x`\r\n- Change `app.all` to `app.post`\r\n- Downgrade to express@4.17.3\r\n\r\nThis is a major bug for us since it changes the behaviour of `app.all` in a semver-minor version. I will try to figure out what causes this (must be between express 4.17.3 and 4.18.0).\r\n\r\nI see that this is a quite extreme example of nested middleware invocations, but in our case these middlewares (and their combinations) come from different locations such as submodules, and thus cannot be written in a more linear way.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4913/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4913/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4912",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4912/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4912/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4912/events",
    "html_url": "https://github.com/expressjs/express/issues/4912",
    "id": 1241674090,
    "node_id": "I_kwDOAAOeZ85KAnFq",
    "number": 4912,
    "title": "Is there any subtle difference between use() / * []",
    "user": {
      "login": "wll8",
      "id": 28223260,
      "node_id": "MDQ6VXNlcjI4MjIzMjYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/28223260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wll8",
      "html_url": "https://github.com/wll8",
      "followers_url": "https://api.github.com/users/wll8/followers",
      "following_url": "https://api.github.com/users/wll8/following{/other_user}",
      "gists_url": "https://api.github.com/users/wll8/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wll8/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wll8/subscriptions",
      "organizations_url": "https://api.github.com/users/wll8/orgs",
      "repos_url": "https://api.github.com/users/wll8/repos",
      "events_url": "https://api.github.com/users/wll8/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wll8/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2022-05-19T12:07:15Z",
    "updated_at": "2022-05-20T13:42:52Z",
    "closed_at": "2022-05-20T13:42:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "``` js\r\n// 1\r\napp.use(fn)\r\n\r\n// 2\r\napp.use(`/`, fn)\r\n\r\n// 3\r\napp.use(`*`, fn)\r\n\r\n// 4\r\napp.use([], fn)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4912/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4912/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4910",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4910/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4910/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4910/events",
    "html_url": "https://github.com/expressjs/express/issues/4910",
    "id": 1238540850,
    "node_id": "I_kwDOAAOeZ85J0qIy",
    "number": 4910,
    "title": "Mounted Routes with JS Classes",
    "user": {
      "login": "jared-leddy",
      "id": 57743183,
      "node_id": "MDQ6VXNlcjU3NzQzMTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/57743183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jared-leddy",
      "html_url": "https://github.com/jared-leddy",
      "followers_url": "https://api.github.com/users/jared-leddy/followers",
      "following_url": "https://api.github.com/users/jared-leddy/following{/other_user}",
      "gists_url": "https://api.github.com/users/jared-leddy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jared-leddy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jared-leddy/subscriptions",
      "organizations_url": "https://api.github.com/users/jared-leddy/orgs",
      "repos_url": "https://api.github.com/users/jared-leddy/repos",
      "events_url": "https://api.github.com/users/jared-leddy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jared-leddy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 18291,
        "node_id": "MDU6TGFiZWwxODI5MQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2022-05-17T12:07:06Z",
    "updated_at": "2022-11-27T22:20:18Z",
    "closed_at": "2022-11-27T19:48:55Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The goal is to use the JS Class version of code, which is more efficient long term. When using the CLASS based JS, in the app.js file sample below, an error is received.\r\n\r\n```js\r\n// USERROUTER.JS FILE, MODULE.EXPORTS EXAMPLE\r\nconst router = express.Router();\r\n\r\nrouter.post('/register', authController.signup);\r\nrouter.post('/login', authController.login);\r\nrouter.get('/logout', authController.logout);\r\n\r\nmodule.exports = router;\r\n```\r\n\r\n\r\n```js\r\n// USERROUTER.JS FILE, CLASS EXAMPLE\r\nexport class UserRouter {\r\n    constructor() {}\r\n    // Open to all users\r\n    register() {\r\n        router.post('/account-register', AuthController.prototype.register);\r\n    }\r\n    login() {\r\n        router.post('/account-login', AuthController.prototype.login);\r\n    }\r\n    logout() {\r\n        router.get('/account-logout', AuthController.prototype.logout);\r\n    }\r\n}\r\n```\r\n\r\n```js\r\n// APP.JS FILE\r\n// Mounted API Routes\r\nconst apiVersion = '1.0';\r\nconst apiRoutes = `/api/v${apiVersion}`;\r\napp.use(`${apiRoutes}/users`, UserRouter);\r\n```\r\n\r\n**NOTE**<br>\r\nThis project is using Typescript. \r\n\r\nClass Example Error: ```TypeError: Class constructor UserRouter cannot be invoked without 'new'```<br>\r\n\r\nWhen using \"new\" keyword, a different error is received. \r\n\r\n```js\r\n// APP.JS FILE, Using the \"new\" keyword\r\napp.use(`${apiRoutes}/users`, new UserRouter() );\r\n```\r\n\r\nError W/ New Keyword: ```TypeError: Router.use() requires a middleware function but got a Object```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4910/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4910/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4908",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4908/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4908/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4908/events",
    "html_url": "https://github.com/expressjs/express/issues/4908",
    "id": 1236607753,
    "node_id": "I_kwDOAAOeZ85JtSMJ",
    "number": 4908,
    "title": "4 argument function is not inferred as ErrorRequestHandler in Express.use",
    "user": {
      "login": "wirekang",
      "id": 43294688,
      "node_id": "MDQ6VXNlcjQzMjk0Njg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/43294688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wirekang",
      "html_url": "https://github.com/wirekang",
      "followers_url": "https://api.github.com/users/wirekang/followers",
      "following_url": "https://api.github.com/users/wirekang/following{/other_user}",
      "gists_url": "https://api.github.com/users/wirekang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wirekang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wirekang/subscriptions",
      "organizations_url": "https://api.github.com/users/wirekang/orgs",
      "repos_url": "https://api.github.com/users/wirekang/repos",
      "events_url": "https://api.github.com/users/wirekang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wirekang/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2022-05-16T04:33:50Z",
    "updated_at": "2022-08-01T10:11:44Z",
    "closed_at": "2022-08-01T10:11:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "```typescript\r\nimport {ErrorRequestHandler} from \"express\";\r\nimport express from \"express\"\r\n\r\nconst errorHandler: ErrorRequestHandler = (err,req,res,next)=>{}\r\n\r\nconst app = express()\r\n\r\napp.use(errorHandler) // Works well with typescript\r\napp.use((err,req,res,next)=>{}) //     <-------  Wrong type here\r\n```\r\n\r\nAll arguments(err~next) is `any` type. Is it intended? ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4908/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4908/timeline",
    "performed_via_github_app": null,
    "state_reason": "not_planned"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4907",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4907/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4907/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4907/events",
    "html_url": "https://github.com/expressjs/express/issues/4907",
    "id": 1236321118,
    "node_id": "I_kwDOAAOeZ85JsMNe",
    "number": 4907,
    "title": "Better error message for broken statuses module (had \"TypeError: Cannot read properties of undefined (reading '302')\")",
    "user": {
      "login": "mk-pmb",
      "id": 3442602,
      "node_id": "MDQ6VXNlcjM0NDI2MDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3442602?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mk-pmb",
      "html_url": "https://github.com/mk-pmb",
      "followers_url": "https://api.github.com/users/mk-pmb/followers",
      "following_url": "https://api.github.com/users/mk-pmb/following{/other_user}",
      "gists_url": "https://api.github.com/users/mk-pmb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mk-pmb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mk-pmb/subscriptions",
      "organizations_url": "https://api.github.com/users/mk-pmb/orgs",
      "repos_url": "https://api.github.com/users/mk-pmb/repos",
      "events_url": "https://api.github.com/users/mk-pmb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mk-pmb/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 18291,
        "node_id": "MDU6TGFiZWwxODI5MQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2022-05-15T15:36:36Z",
    "updated_at": "2022-05-15T21:07:13Z",
    "closed_at": "2022-05-15T21:07:13Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi! I had an odd situation where I messed up my local copy of the \"statuses\" module, apparently a few months ago, and discovered it only today because express failed with\r\n\r\n> TypeError: Cannot read properties of undefined (reading '302')\r\n\r\nin [lib/response.js line 963](https://github.com/expressjs/express/blob/631ada0c645dc84c6df8788f5a7eb2b8100acea5/lib/response.js#L963=).\r\n\r\nCould we add a sanity check in express initialization that checks if `statuses.message` is at least truthy, and otherwise complain that the `statuses` module seems broken or incompatible and should be reinstalled? I could make a PR for that.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4907/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4907/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4906",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4906/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4906/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4906/events",
    "html_url": "https://github.com/expressjs/express/issues/4906",
    "id": 1232103427,
    "node_id": "I_kwDOAAOeZ85JcGgD",
    "number": 4906,
    "title": "The default error handler is not catching URIError",
    "user": {
      "login": "abdallaoui-dev",
      "id": 91975214,
      "node_id": "U_kgDOBXtuLg",
      "avatar_url": "https://avatars.githubusercontent.com/u/91975214?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abdallaoui-dev",
      "html_url": "https://github.com/abdallaoui-dev",
      "followers_url": "https://api.github.com/users/abdallaoui-dev/followers",
      "following_url": "https://api.github.com/users/abdallaoui-dev/following{/other_user}",
      "gists_url": "https://api.github.com/users/abdallaoui-dev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abdallaoui-dev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abdallaoui-dev/subscriptions",
      "organizations_url": "https://api.github.com/users/abdallaoui-dev/orgs",
      "repos_url": "https://api.github.com/users/abdallaoui-dev/repos",
      "events_url": "https://api.github.com/users/abdallaoui-dev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abdallaoui-dev/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2022-05-11T06:58:06Z",
    "updated_at": "2022-05-12T16:40:04Z",
    "closed_at": "2022-05-12T16:39:11Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "\r\n```\r\napp.use((error, req, res, next) => {\r\n   if (error instanceof URIError) {\r\n      return res.send(\"uri error\")\r\n   }\r\n\r\n  if (error) {\r\n      return res.send(\"any error\")\r\n   }   \r\n   next()\r\n\r\n  //  this is not catching URIError  \r\n})\r\n\r\n\r\napp.use((req, res, next)) => {\r\n   try {\r\n      decodeURIComponent(req.path)\r\n    } catche(error) {\r\n       return res.send(\"uri error\")\r\n   }\r\n  next()\r\n\r\n  // this works but if I add error arg it's not going to work\r\n}\r\n\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4906/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4906/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4905",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4905/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4905/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4905/events",
    "html_url": "https://github.com/expressjs/express/issues/4905",
    "id": 1231174339,
    "node_id": "I_kwDOAAOeZ85JYjrD",
    "number": 4905,
    "title": "Property `maxAge` shouldn't brutally crash on runtime when set to a very large number",
    "user": {
      "login": "SRachamim",
      "id": 1595323,
      "node_id": "MDQ6VXNlcjE1OTUzMjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1595323?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SRachamim",
      "html_url": "https://github.com/SRachamim",
      "followers_url": "https://api.github.com/users/SRachamim/followers",
      "following_url": "https://api.github.com/users/SRachamim/following{/other_user}",
      "gists_url": "https://api.github.com/users/SRachamim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SRachamim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SRachamim/subscriptions",
      "organizations_url": "https://api.github.com/users/SRachamim/orgs",
      "repos_url": "https://api.github.com/users/SRachamim/repos",
      "events_url": "https://api.github.com/users/SRachamim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SRachamim/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2022-05-10T13:33:21Z",
    "updated_at": "2022-05-10T14:11:07Z",
    "closed_at": "2022-05-10T13:46:58Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When invoking `res.cookie` with [Number.MAX_SAFE_INTEGER](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER), it crashes on runtime with the following error:\r\n\r\n```\r\nTypeError: option expires is invalid\r\n    at Object.serialize (/client/node_modules/express/node_modules/cookie/index.js:161:13)\r\n    at ServerResponse.res.cookie (/client/node_modules/express/lib/response.js:884:36)\r\n```\r\n\r\nIf an error is thrown, A runtime validation should be performed on the API (which is the `maxAge` property). The option `expires` is an implementation detail.\r\n\r\nIdeally, IMHO, an error should not be thrown (runtime errors are never acceptable). A sane default should be used as a fallback and a warning should be logged. The documentation should emphasise that `maxAge` expects a natural with a maximum limit.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4905/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4905/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4903",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4903/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4903/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4903/events",
    "html_url": "https://github.com/expressjs/express/issues/4903",
    "id": 1226641099,
    "node_id": "I_kwDOAAOeZ85JHQ7L",
    "number": 4903,
    "title": "Guidance needed: how safely use res.on('finish', ... ?",
    "user": {
      "login": "magicmark",
      "id": 1590756,
      "node_id": "MDQ6VXNlcjE1OTA3NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1590756?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/magicmark",
      "html_url": "https://github.com/magicmark",
      "followers_url": "https://api.github.com/users/magicmark/followers",
      "following_url": "https://api.github.com/users/magicmark/following{/other_user}",
      "gists_url": "https://api.github.com/users/magicmark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/magicmark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/magicmark/subscriptions",
      "organizations_url": "https://api.github.com/users/magicmark/orgs",
      "repos_url": "https://api.github.com/users/magicmark/repos",
      "events_url": "https://api.github.com/users/magicmark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/magicmark/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2022-05-05T12:59:30Z",
    "updated_at": "2022-05-05T14:05:15Z",
    "closed_at": "2022-05-05T13:38:34Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "_(I also wrote this up a question on SO here: https://stackoverflow.com/q/72114468/4396258, sorry for the xpost spam)_\r\n\r\nThis isn't a bug or anything, so apologies for opening an issue, but given the ubiquitousness of this pattern, I thought it reasonable to try and get some sort of official stance on the subject, hence the issue.\r\n\r\nSo here's a very common pattern to do a thing after a response:\r\n\r\n```js\r\nconst responseTime = (_, res, next) => {\r\n    function finish() {\r\n        // calculate time taken for request\r\n        const [seconds, nanoseconds] = process.hrtime(startAt);\r\n        const milliseconds = seconds * 1e3 + nanoseconds * 1e-6;\r\n        res.locals['responseTime'] = milliseconds;\r\n    }\r\n\r\n    // cleanup to remove memory leaks(???)\r\n    function cleanup() {\r\n        res.removeListener('finish', finish);\r\n        res.removeListener('error', cleanup);\r\n        res.removeListener('close', cleanup);\r\n    }\r\n\r\n    res.once('finish', finish);\r\n    res.once('error', cleanup);\r\n    res.once('close', cleanup);\r\n\r\n    next();\r\n};\r\n```\r\n\r\n[Random real world example of this in the wild](https://github.com/instructure/canvas-rce-api/blob/master/app/middleware/stats.js) - this was the first result i grabbed, I've seen this pattern in a bunch of codebases: https://grep.app/search?q=res.removeListener%28&filter%5Blang%5D%5B0%5D=TypeScript&filter%5Blang%5D%5B1%5D=JavaScript\r\n\r\nMy question is - is this just cargo cult? Or does this more minimal version work?\r\n\r\n```js\r\nconst responseTime = (_, res, next) => {\r\n    const startAt = process.hrtime();\r\n\r\n    res.once('finish', () => {\r\n        // calculate time taken for request\r\n        const [seconds, nanoseconds] = process.hrtime(startAt);\r\n        const milliseconds = seconds * 1e3 + nanoseconds * 1e-6;\r\n        res.locals['responseTime'] = milliseconds;\r\n    });\r\n\r\n    next();\r\n};\r\n```\r\n\r\nThe fear is \"memory leaks\" might be an issue if the .finish handler never executes (client drops the connection early) and so the function is never dropped from memory - but is this actually a concern since I assume the whole res object and all child nodes will be thrown away and GC'd?\r\n\r\nThanks!\r\n\r\ncc @dougwilson",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4903/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4903/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4901",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4901/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4901/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4901/events",
    "html_url": "https://github.com/expressjs/express/pull/4901",
    "id": 1223126033,
    "node_id": "PR_kwDOAAOeZ843LgX4",
    "number": 4901,
    "title": "Added typescript for the code base",
    "user": {
      "login": "deshanm",
      "id": 20860900,
      "node_id": "MDQ6VXNlcjIwODYwOTAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20860900?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deshanm",
      "html_url": "https://github.com/deshanm",
      "followers_url": "https://api.github.com/users/deshanm/followers",
      "following_url": "https://api.github.com/users/deshanm/following{/other_user}",
      "gists_url": "https://api.github.com/users/deshanm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deshanm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deshanm/subscriptions",
      "organizations_url": "https://api.github.com/users/deshanm/orgs",
      "repos_url": "https://api.github.com/users/deshanm/repos",
      "events_url": "https://api.github.com/users/deshanm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deshanm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2022-05-02T17:09:58Z",
    "updated_at": "2022-05-02T17:10:35Z",
    "closed_at": "2022-05-02T17:10:35Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4901",
      "html_url": "https://github.com/expressjs/express/pull/4901",
      "diff_url": "https://github.com/expressjs/express/pull/4901.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4901.patch",
      "merged_at": null
    },
    "body": null,
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4901/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4901/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4899",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4899/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4899/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4899/events",
    "html_url": "https://github.com/expressjs/express/issues/4899",
    "id": 1217955271,
    "node_id": "I_kwDOAAOeZ85ImIXH",
    "number": 4899,
    "title": "The `max sync stack` is breaking routing",
    "user": {
      "login": "minghaopu63",
      "id": 34659893,
      "node_id": "MDQ6VXNlcjM0NjU5ODkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/34659893?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minghaopu63",
      "html_url": "https://github.com/minghaopu63",
      "followers_url": "https://api.github.com/users/minghaopu63/followers",
      "following_url": "https://api.github.com/users/minghaopu63/following{/other_user}",
      "gists_url": "https://api.github.com/users/minghaopu63/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minghaopu63/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minghaopu63/subscriptions",
      "organizations_url": "https://api.github.com/users/minghaopu63/orgs",
      "repos_url": "https://api.github.com/users/minghaopu63/repos",
      "events_url": "https://api.github.com/users/minghaopu63/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minghaopu63/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 8497,
        "node_id": "MDU6TGFiZWw4NDk3",
        "url": "https://api.github.com/repos/expressjs/express/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2022-04-27T22:45:25Z",
    "updated_at": "2022-04-29T20:08:59Z",
    "closed_at": "2022-04-29T17:35:29Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "We recently updated to v4.18.0 and find some routes are not working anymore due to https://github.com/expressjs/express/commit/708ac4cdf5cd0a658d62490a9f4d78d3e1ec6612.\r\n\r\n1. This `100` limitation is not in the change log http://expressjs.com/en/changelog/4x.html#4.18.0. Can you help update it?\r\n2. Can this value be configurable?\r\n\r\nThanks",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4899/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4899/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4898",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4898/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4898/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4898/events",
    "html_url": "https://github.com/expressjs/express/pull/4898",
    "id": 1216292288,
    "node_id": "PR_kwDOAAOeZ8420b7E",
    "number": 4898,
    "title": "bench: remove unused parameter",
    "user": {
      "login": "Hashen110",
      "id": 37979557,
      "node_id": "MDQ6VXNlcjM3OTc5NTU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/37979557?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Hashen110",
      "html_url": "https://github.com/Hashen110",
      "followers_url": "https://api.github.com/users/Hashen110/followers",
      "following_url": "https://api.github.com/users/Hashen110/following{/other_user}",
      "gists_url": "https://api.github.com/users/Hashen110/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Hashen110/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Hashen110/subscriptions",
      "organizations_url": "https://api.github.com/users/Hashen110/orgs",
      "repos_url": "https://api.github.com/users/Hashen110/repos",
      "events_url": "https://api.github.com/users/Hashen110/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Hashen110/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2022-04-26T17:53:39Z",
    "updated_at": "2022-04-29T03:07:04Z",
    "closed_at": "2022-04-29T03:07:04Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4898",
      "html_url": "https://github.com/expressjs/express/pull/4898",
      "diff_url": "https://github.com/expressjs/express/pull/4898.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4898.patch",
      "merged_at": null
    },
    "body": null,
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4898/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4898/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4896",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4896/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4896/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4896/events",
    "html_url": "https://github.com/expressjs/express/issues/4896",
    "id": 1211100370,
    "node_id": "I_kwDOAAOeZ85IL-zS",
    "number": 4896,
    "title": "Shopify App Running on React/Express: Cannot read properties of undefined (reading 'from')",
    "user": {
      "login": "16BitS3G4l",
      "id": 41275280,
      "node_id": "MDQ6VXNlcjQxMjc1Mjgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/41275280?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/16BitS3G4l",
      "html_url": "https://github.com/16BitS3G4l",
      "followers_url": "https://api.github.com/users/16BitS3G4l/followers",
      "following_url": "https://api.github.com/users/16BitS3G4l/following{/other_user}",
      "gists_url": "https://api.github.com/users/16BitS3G4l/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/16BitS3G4l/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/16BitS3G4l/subscriptions",
      "organizations_url": "https://api.github.com/users/16BitS3G4l/orgs",
      "repos_url": "https://api.github.com/users/16BitS3G4l/repos",
      "events_url": "https://api.github.com/users/16BitS3G4l/events{/privacy}",
      "received_events_url": "https://api.github.com/users/16BitS3G4l/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2022-04-21T14:08:39Z",
    "updated_at": "2022-04-27T23:58:16Z",
    "closed_at": "2022-04-27T23:58:16Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi, it would be great if somebody could take a look at an issue (a bug I suspect) I'm having. Appreciate any time spent.\r\n\r\nContext:\r\n\r\nI'm building a Shopify app (based on the Shopify Polaris framework) and haven't experienced this issue before. Throughout the development of the application, no errors of this type have been encountered. It seems very arbitrary and unlikely, but after small updates, this error started popping up and interfering with programming - I removed all changes I made that day to see if it would help, but it didn't. I've attached as much information as I find relevant below. Please let me know if it's not structured enough, not enough information, or too much information.\r\n\r\nI'm running the latest version of express (see below for package.json)\r\n\r\n```\r\n{\r\n  \"name\": \"shopify-app-node\",\r\n  \"private\": true,\r\n  \"scripts\": {\r\n    \"build\": \"npm run build:client\",\r\n    \"build:client\": \"vite build --outDir dist/client\",\r\n    \"debug\": \"node --inspect-brk server/index.js\",\r\n    \"dev\": \"cross-env NODE_ENV=development nodemon server/index.js --watch ./server\",\r\n    \"prepare\": \"husky install\",\r\n    \"preserve\": \"npm run build\",\r\n    \"serve\": \"cross-env NODE_ENV=production node server/index.js\",\r\n    \"start\": \"npm run serve\",\r\n    \"test\": \"vitest --reporter=verbose\"\r\n  },\r\n  \"type\": \"module\",\r\n  \"engines\": {\r\n    \"node\": \">=16.13.0\"\r\n  },\r\n  \"dependencies\": {\r\n    \"@apollo/client\": \"^3.5.10\",\r\n    \"@shopify/app-bridge\": \"^2.0.22\",\r\n    \"@shopify/app-bridge-react\": \"^2.0.24\",\r\n    \"@shopify/app-bridge-utils\": \"^2.0.23\",\r\n    \"@shopify/polaris\": \"^9.2.2\",\r\n    \"@shopify/shopify-api\": \"^3.0.0\",\r\n    \"@vitejs/plugin-react\": \"1.2.0\",\r\n    \"compression\": \"^1.7.4\",\r\n    \"cookie-parser\": \"^1.4.6\",\r\n    \"cross-env\": \"^7.0.3\",\r\n    \"dotenv\": \"^16.0.0\",\r\n    \"express\": \"^4.17.3\",\r\n    \"graphql\": \"^16.3.0\",\r\n    \"react\": \"^17.0.2\",\r\n    \"react-color\": \"^2.19.3\",\r\n    \"react-dom\": \"^17.0.2\",\r\n    \"react-grid-gallery\": \"^0.5.5\",\r\n    \"react-qr-code\": \"^2.0.5\",\r\n    \"serve-static\": \"^1.14.1\",\r\n    \"vite\": \"^2.9.1\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"husky\": \"^7.0.4\",\r\n    \"nodemon\": \"^2.0.15\",\r\n    \"prettier\": \"^2.6.2\",\r\n    \"pretty-quick\": \"^3.1.3\",\r\n    \"supertest\": \"^6.2.2\",\r\n    \"vitest\": \"^0.9.2\"\r\n  }\r\n}\r\n```\r\nTrace from chrome devtools:\r\n```\r\nUncaught TypeError: Cannot read properties of undefined (reading 'from')\r\n    at node_modules/express/node_modules/safe-buffer/index.js (index.js:12:12)\r\n    at __require2 (chunk-5537U2Q2.js?v=c1edecdf:47:50)\r\n    at node_modules/express/lib/utils.js (utils.js:15:14)\r\n    at __require2 (chunk-5537U2Q2.js?v=c1edecdf:47:50)\r\n    at node_modules/express/lib/application.js (application.js:24:19)\r\n    at __require2 (chunk-5537U2Q2.js?v=c1edecdf:47:50)\r\n    at node_modules/express/lib/express.js (express.js:18:13)\r\n    at __require2 (chunk-5537U2Q2.js?v=c1edecdf:47:50)\r\n    at node_modules/express/index.js (index.js:11:18)\r\n    at __require2 (chunk-5537U2Q2.js?v=c1edecdf:47:50)\r\nnode_modules/express/node_modules/safe-buffer/index.js @ index.js:12\r\n__require2 @ chunk-5537U2Q2.js?v=c1edecdf:47\r\nnode_modules/express/lib/utils.js @ utils.js:15\r\n__require2 @ chunk-5537U2Q2.js?v=c1edecdf:47\r\nnode_modules/express/lib/application.js @ application.js:24\r\n__require2 @ chunk-5537U2Q2.js?v=c1edecdf:47\r\nnode_modules/express/lib/express.js @ express.js:18\r\n__require2 @ chunk-5537U2Q2.js?v=c1edecdf:47\r\nnode_modules/express/index.js @ index.js:11\r\n__require2 @ chunk-5537U2Q2.js?v=c1edecdf:47\r\n(anonymous) @ dep:express:1\r\n\r\n```\r\n\r\nHere are the code lines highlighted in the trace: \r\n``` \r\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\r\n  module.exports = buffer\r\n```\r\n\r\n```\r\nvar Buffer = require('safe-buffer').Buffer\r\n```\r\n\r\n```\r\nvar compileETag = require('./utils').compileETag;\r\n```\r\n\r\n```\r\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\r\n```\r\n\r\n```\r\nmodule.exports = require('./lib/express');\r\n```\r\n\r\nPlease let me know if there is any other information that might help out.\r\n\r\nThank you.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4896/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4896/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4894",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4894/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4894/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4894/events",
    "html_url": "https://github.com/expressjs/express/issues/4894",
    "id": 1209944514,
    "node_id": "I_kwDOAAOeZ85IHknC",
    "number": 4894,
    "title": "I want to contribute to Express.JS development with a library",
    "user": {
      "login": "RobotoSkunk",
      "id": 49355293,
      "node_id": "MDQ6VXNlcjQ5MzU1Mjkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/49355293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RobotoSkunk",
      "html_url": "https://github.com/RobotoSkunk",
      "followers_url": "https://api.github.com/users/RobotoSkunk/followers",
      "following_url": "https://api.github.com/users/RobotoSkunk/following{/other_user}",
      "gists_url": "https://api.github.com/users/RobotoSkunk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RobotoSkunk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RobotoSkunk/subscriptions",
      "organizations_url": "https://api.github.com/users/RobotoSkunk/orgs",
      "repos_url": "https://api.github.com/users/RobotoSkunk/repos",
      "events_url": "https://api.github.com/users/RobotoSkunk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RobotoSkunk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2022-04-20T16:43:45Z",
    "updated_at": "2022-04-20T16:45:14Z",
    "closed_at": "2022-04-20T16:45:14Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi, I want to contribute with a library called [recursive-routing](https://github.com/RobotoSkunk/recursive-routing). This library sets up an entire routing from a directory just calling one function.\r\n\r\nThis project it's inspired by another called `express-recursive-routes`, but with more options, more freedom and without using deprecated JavaScript features.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4894/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4894/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4893",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4893/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4893/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4893/events",
    "html_url": "https://github.com/expressjs/express/pull/4893",
    "id": 1209816907,
    "node_id": "PR_kwDOAAOeZ842f5MI",
    "number": 4893,
    "title": "fix(res.send): add Content-Length header only if Transfer-Encoding is not present",
    "user": {
      "login": "YuryShkoda",
      "id": 25773492,
      "node_id": "MDQ6VXNlcjI1NzczNDky",
      "avatar_url": "https://avatars.githubusercontent.com/u/25773492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YuryShkoda",
      "html_url": "https://github.com/YuryShkoda",
      "followers_url": "https://api.github.com/users/YuryShkoda/followers",
      "following_url": "https://api.github.com/users/YuryShkoda/following{/other_user}",
      "gists_url": "https://api.github.com/users/YuryShkoda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YuryShkoda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YuryShkoda/subscriptions",
      "organizations_url": "https://api.github.com/users/YuryShkoda/orgs",
      "repos_url": "https://api.github.com/users/YuryShkoda/repos",
      "events_url": "https://api.github.com/users/YuryShkoda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YuryShkoda/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55587817,
        "node_id": "MDU6TGFiZWw1NTU4NzgxNw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/needs%20tests",
        "name": "needs tests",
        "color": "e11d21",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2022-04-20T15:01:39Z",
    "updated_at": "2023-05-11T14:40:51Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4893",
      "html_url": "https://github.com/expressjs/express/pull/4893",
      "diff_url": "https://github.com/expressjs/express/pull/4893.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4893.patch",
      "merged_at": null
    },
    "body": "## Intent\r\n- Because `Content-Length` and `Transfer-Encoding` can't be present in the response headers together, `Content-Length` should be added only if there is no `Transfer-Encoding` header.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4893/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4893/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4892",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4892/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4892/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4892/events",
    "html_url": "https://github.com/expressjs/express/issues/4892",
    "id": 1206791972,
    "node_id": "I_kwDOAAOeZ85H7i8k",
    "number": 4892,
    "title": "ExpressJS 5 - Promise returned in function argument where a void return was expected.",
    "user": {
      "login": "maggie44",
      "id": 64841595,
      "node_id": "MDQ6VXNlcjY0ODQxNTk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/64841595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maggie44",
      "html_url": "https://github.com/maggie44",
      "followers_url": "https://api.github.com/users/maggie44/followers",
      "following_url": "https://api.github.com/users/maggie44/following{/other_user}",
      "gists_url": "https://api.github.com/users/maggie44/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maggie44/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maggie44/subscriptions",
      "organizations_url": "https://api.github.com/users/maggie44/orgs",
      "repos_url": "https://api.github.com/users/maggie44/repos",
      "events_url": "https://api.github.com/users/maggie44/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maggie44/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 98481977,
        "node_id": "MDU6TGFiZWw5ODQ4MTk3Nw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2022-04-18T08:02:59Z",
    "updated_at": "2022-04-18T14:00:58Z",
    "closed_at": "2022-04-18T14:00:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am trying to use async and await in Typescript with ExpressJS 5 beta 1 and getting the following error:\r\n\r\n`Promise returned in function argument where a void return was expected.eslint[@typescript-eslint/no-misused-promises](https://typescript-eslint.io/rules/no-misused-promises)`\r\n\r\nI had anticipated this would no longer be the case in ExpressJS 5, as noted by the ESLint maintainers: https://github.com/standard/eslint-config-standard-with-typescript/issues/613\r\n\r\nHave I missed something, or is this still not handled in Express 5?\r\n\r\n```\r\nfunction testFunction() {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve('test')\r\n    }, 1000)\r\n  })\r\n}\r\n\r\nrouter.get('/v1/sdk/device', async (_req, res) => {\r\n  const test = await testFunction()\r\n  console.log(test)\r\n  res.send()\r\n})\r\n```\r\n\r\n<img width=\"982\" alt=\"Screenshot 2022-04-18 at 09 05 50\" src=\"https://user-images.githubusercontent.com/64841595/163777628-dd5d3896-e6ad-4214-ac8a-b07cc0ffc6c1.png\">\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4892/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4892/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4891",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4891/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4891/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4891/events",
    "html_url": "https://github.com/expressjs/express/pull/4891",
    "id": 1203366324,
    "node_id": "PR_kwDOAAOeZ842LhYC",
    "number": 4891,
    "title": "Correctly invoke async router callback asynchronously",
    "user": {
      "login": "lqqyt2423",
      "id": 6959784,
      "node_id": "MDQ6VXNlcjY5NTk3ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6959784?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lqqyt2423",
      "html_url": "https://github.com/lqqyt2423",
      "followers_url": "https://api.github.com/users/lqqyt2423/followers",
      "following_url": "https://api.github.com/users/lqqyt2423/following{/other_user}",
      "gists_url": "https://api.github.com/users/lqqyt2423/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lqqyt2423/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lqqyt2423/subscriptions",
      "organizations_url": "https://api.github.com/users/lqqyt2423/orgs",
      "repos_url": "https://api.github.com/users/lqqyt2423/repos",
      "events_url": "https://api.github.com/users/lqqyt2423/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lqqyt2423/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2022-04-13T14:16:35Z",
    "updated_at": "2022-05-20T11:48:27Z",
    "closed_at": "2022-04-14T03:15:47Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4891",
      "html_url": "https://github.com/expressjs/express/pull/4891",
      "diff_url": "https://github.com/expressjs/express/pull/4891.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4891.patch",
      "merged_at": null
    },
    "body": "Sometimes this error occurs:\r\nRangeError: Maximum call stack size exceeded\r\n\r\nThis pull request can fix the error.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4891/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4891/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4890",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4890/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4890/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4890/events",
    "html_url": "https://github.com/expressjs/express/pull/4890",
    "id": 1199640976,
    "node_id": "PR_kwDOAAOeZ841_AjB",
    "number": 4890,
    "title": "Update Security.md",
    "user": {
      "login": "netcode",
      "id": 286371,
      "node_id": "MDQ6VXNlcjI4NjM3MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/286371?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/netcode",
      "html_url": "https://github.com/netcode",
      "followers_url": "https://api.github.com/users/netcode/followers",
      "following_url": "https://api.github.com/users/netcode/following{/other_user}",
      "gists_url": "https://api.github.com/users/netcode/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/netcode/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/netcode/subscriptions",
      "organizations_url": "https://api.github.com/users/netcode/orgs",
      "repos_url": "https://api.github.com/users/netcode/repos",
      "events_url": "https://api.github.com/users/netcode/events{/privacy}",
      "received_events_url": "https://api.github.com/users/netcode/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2022-04-11T08:57:04Z",
    "updated_at": "2022-04-11T23:23:24Z",
    "closed_at": "2022-04-11T23:23:24Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4890",
      "html_url": "https://github.com/expressjs/express/pull/4890",
      "diff_url": "https://github.com/expressjs/express/pull/4890.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4890.patch",
      "merged_at": "2022-04-11T23:23:23Z"
    },
    "body": "Removing the Nodesecurity project as it's dead now.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4890/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4890/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4889",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4889/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4889/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4889/events",
    "html_url": "https://github.com/expressjs/express/issues/4889",
    "id": 1198958146,
    "node_id": "I_kwDOAAOeZ85HdqZC",
    "number": 4889,
    "title": "How to hold a response? And are there something called \"maxHeldResponseCount\"?",
    "user": {
      "login": "HaloWang",
      "id": 7344724,
      "node_id": "MDQ6VXNlcjczNDQ3MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7344724?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/HaloWang",
      "html_url": "https://github.com/HaloWang",
      "followers_url": "https://api.github.com/users/HaloWang/followers",
      "following_url": "https://api.github.com/users/HaloWang/following{/other_user}",
      "gists_url": "https://api.github.com/users/HaloWang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/HaloWang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HaloWang/subscriptions",
      "organizations_url": "https://api.github.com/users/HaloWang/orgs",
      "repos_url": "https://api.github.com/users/HaloWang/repos",
      "events_url": "https://api.github.com/users/HaloWang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/HaloWang/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2022-04-10T09:33:13Z",
    "updated_at": "2022-04-27T23:35:43Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "1. I want to implement a long-polling model in my server (express.app).\r\n2. I use a map to stored incoming response, waiting (about 60 seconds later) another request to finally send stored response back.\r\n3. I find the store action will block other incoming request. I mean, the callback of `app.post(\"xxx\"...)` is not called until I close some of stored responses in step 2.\r\n\r\nSo, I wonder:\r\n\r\n1. Is it a right method for me to store response from `app.post` to implement long-polling?\r\n2. Does express.js itself set max concurrent count of held responses?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4889/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4889/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4888",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4888/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4888/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4888/events",
    "html_url": "https://github.com/expressjs/express/issues/4888",
    "id": 1197541438,
    "node_id": "I_kwDOAAOeZ85HYQg-",
    "number": 4888,
    "title": "Error: Route.get() requires a callback function but got a [object Undefined]",
    "user": {
      "login": "JoShMiQueL",
      "id": 26714939,
      "node_id": "MDQ6VXNlcjI2NzE0OTM5",
      "avatar_url": "https://avatars.githubusercontent.com/u/26714939?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoShMiQueL",
      "html_url": "https://github.com/JoShMiQueL",
      "followers_url": "https://api.github.com/users/JoShMiQueL/followers",
      "following_url": "https://api.github.com/users/JoShMiQueL/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoShMiQueL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoShMiQueL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoShMiQueL/subscriptions",
      "organizations_url": "https://api.github.com/users/JoShMiQueL/orgs",
      "repos_url": "https://api.github.com/users/JoShMiQueL/repos",
      "events_url": "https://api.github.com/users/JoShMiQueL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoShMiQueL/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2022-04-08T16:40:43Z",
    "updated_at": "2023-02-10T01:27:59Z",
    "closed_at": "2022-04-08T16:45:09Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am using typescript in my project and when I develop with nodemon I get the following error:\r\n```console\r\nError: Route.get() requires a callback function but got a [object Undefined]\r\n    at Route.<computed> [as get] (M:\\repos\\web\\api-rest\\node_modules\\express\\lib\\router\\route.js:202:15)\r\n    at Function.proto.<computed> [as get] (M:\\repos\\web\\api-rest\\node_modules\\express\\lib\\router\\index.js:516:19)                                                                               :202:15)\r\n    at Object.<anonymous> (M:\\repos\\web\\api-rest\\src\\routes\\users.ts:11:8)                      \\index.js:516:19)\r\n    at Module._compile (node:internal/modules/cjs/loader:1101:14)\r\n    at Module.m._compile (M:\\repos\\web\\api-rest\\node_modules\\ts-node\\src\\index.ts:1455:23)      \r\n    at Module._extensions..js (node:internal/modules/cjs/loader:1153:10)\r\n    at Object.require.extensions.<computed> [as .ts] (M:\\repos\\web\\api-rest\\node_modules\\ts-node\\src\\index.ts:1458:12)                                                                          \\src\\index.ts:1458:12)\r\n    at Module.load (node:internal/modules/cjs/loader:981:32)\r\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\r\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\r\n```\r\nbut when I compile it with \"tsc\" and executor normally with node it works correctly\r\nBelow is the code I am using:\r\n```typescript\r\n//controllers/users.ts\r\n\r\nimport users from './users.json'\r\nimport type { Request, Response } from 'express'\r\n\r\nconst getUsers = (_: Request, res: Response): void => {\r\n  res.status(200).json(users)\r\n}\r\n\r\nconst getUserById = (req: Request, res: Response): void => {\r\n  const { id } = req.params\r\n  const user = users.find(user => user.id === Number(id))\r\n  if (user != null) {\r\n    res.status(200).json(user)\r\n  } else {\r\n    res.status(404).json({ message: 'User not found' })\r\n  }\r\n}\r\n\r\nexport { getUsers, getUserById }\r\n```\r\n```typescript\r\n//routes/users.ts\r\n\r\nimport express from 'express'\r\n// import users from '../controllers/users.json'\r\nimport { getUsers } from '../controllers/users'\r\n// import type { Request, Response } from 'express'\r\nconst router = express.Router()\r\n\r\n// export const getUsersHere = (_: Request, res: Response): void => {\r\n//   res.status(200).json(users)\r\n// }\r\n\r\nrouter.get('/', getUsers) <--- Here is the error\r\n// router.get(':id', users.getUserById)\r\n\r\nexport default router\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4888/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4888/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4887",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4887/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4887/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4887/events",
    "html_url": "https://github.com/expressjs/express/pull/4887",
    "id": 1197012395,
    "node_id": "PR_kwDOAAOeZ84125Vb",
    "number": 4887,
    "title": "Increase timeout for mocha to 7500",
    "user": {
      "login": "grisu48",
      "id": 1527829,
      "node_id": "MDQ6VXNlcjE1Mjc4Mjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1527829?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grisu48",
      "html_url": "https://github.com/grisu48",
      "followers_url": "https://api.github.com/users/grisu48/followers",
      "following_url": "https://api.github.com/users/grisu48/following{/other_user}",
      "gists_url": "https://api.github.com/users/grisu48/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grisu48/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grisu48/subscriptions",
      "organizations_url": "https://api.github.com/users/grisu48/orgs",
      "repos_url": "https://api.github.com/users/grisu48/repos",
      "events_url": "https://api.github.com/users/grisu48/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grisu48/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 133578714,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/tests",
        "name": "tests",
        "color": "944008",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2022-04-08T08:32:46Z",
    "updated_at": "2022-04-21T11:29:19Z",
    "closed_at": "2022-04-21T00:25:22Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4887",
      "html_url": "https://github.com/expressjs/express/pull/4887",
      "diff_url": "https://github.com/expressjs/express/pull/4887.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4887.patch",
      "merged_at": "2022-04-21T00:25:22Z"
    },
    "body": "In order to fix some timeout issues in the CI on low-end hardware we increase\r\nthe timeout for mocha to 7500ms.\r\n\r\nThis is a proposed fix for https://github.com/expressjs/express/issues/4886",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4887/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4887/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4886",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4886/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4886/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4886/events",
    "html_url": "https://github.com/expressjs/express/issues/4886",
    "id": 1197009807,
    "node_id": "I_kwDOAAOeZ85HWOuP",
    "number": 4886,
    "title": "Router test runs into timeout issues on slow aarch64 hardware",
    "user": {
      "login": "grisu48",
      "id": 1527829,
      "node_id": "MDQ6VXNlcjE1Mjc4Mjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1527829?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grisu48",
      "html_url": "https://github.com/grisu48",
      "followers_url": "https://api.github.com/users/grisu48/followers",
      "following_url": "https://api.github.com/users/grisu48/following{/other_user}",
      "gists_url": "https://api.github.com/users/grisu48/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grisu48/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grisu48/subscriptions",
      "organizations_url": "https://api.github.com/users/grisu48/orgs",
      "repos_url": "https://api.github.com/users/grisu48/repos",
      "events_url": "https://api.github.com/users/grisu48/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grisu48/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578714,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/tests",
        "name": "tests",
        "color": "944008",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2022-04-08T08:30:12Z",
    "updated_at": "2022-04-27T23:36:09Z",
    "closed_at": "2022-04-27T23:36:09Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "We encounter a \"Timeout of 2000ms exceeded\" error on a rather low-powered `aarch64` device when running `npm run test-ci`:\r\n\r\n    Router\r\n    ✔ should return a function with router methods\r\n    ✔ should support .use of other routers (38ms)\r\n    ✔ should support dynamic routes\r\n    ✔ should handle blank URL\r\n    ✔ should handle missing URL\r\n    1) should not stack overflow with many registered routes\r\n    \r\n    17 passing (5s)\r\n    1 failing\r\n    \r\n      1) Router\r\n           should not stack overflow with many registered routes:\r\n         Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/opt/express/test/Router.js)\r\n          at /opt/express/test/Router.js:73:11\r\n          at Layer.handle [as handle_request] (lib/router/layer.js:35:103)\r\n          at next (lib/router/route.js:36:802)\r\n          at Route.dispatch (lib/router/route.js:34:677)\r\n          at Layer.handle [as handle_request] (lib/router/layer.js:35:103)\r\n          at /opt/express/lib/router/index.js:82:415\r\n          at Function.process_params (lib/router/index.js:93:170)\r\n          at next (lib/router/index.js:82:31)\r\n          at Function.handle (lib/router/index.js:67:194)\r\n          at Context.<anonymous> (test/Router.js:76:12)\r\n          at processImmediate (node:internal/timers:464:21)\r\n\r\n## Reproducer\r\n\r\nI run this on an emulated `aarch64` VM on my x86_64 laptop. The issue occurs on one of our hardware aarch64 workers\r\n\r\n    git clone https://github.com/expressjs/express.git\r\n    cd express\r\n    npm config set shrinkwrap false && npm rm --silent --save-dev connect-redis && npm run test-ci\r\n\r\n## Possible fix\r\n\r\n@dcermak came up with a possible fix: Add `--timeout 7500` to the [package.json](https://github.com/expressjs/express/blob/master/package.json#L94). I will add a pull request with the fix.\r\n\r\nThis solved the issue on our virtual machine.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4886/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4886/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4885",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4885/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4885/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4885/events",
    "html_url": "https://github.com/expressjs/express/pull/4885",
    "id": 1196365179,
    "node_id": "PR_kwDOAAOeZ8410wgU",
    "number": 4885,
    "title": "Extend res.links() to allow adding multiple links with the same rel #2729",
    "user": {
      "login": "andvea",
      "id": 36574883,
      "node_id": "MDQ6VXNlcjM2NTc0ODgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/36574883?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andvea",
      "html_url": "https://github.com/andvea",
      "followers_url": "https://api.github.com/users/andvea/followers",
      "following_url": "https://api.github.com/users/andvea/following{/other_user}",
      "gists_url": "https://api.github.com/users/andvea/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andvea/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andvea/subscriptions",
      "organizations_url": "https://api.github.com/users/andvea/orgs",
      "repos_url": "https://api.github.com/users/andvea/repos",
      "events_url": "https://api.github.com/users/andvea/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andvea/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2022-04-07T17:39:01Z",
    "updated_at": "2022-10-06T14:16:27Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4885",
      "html_url": "https://github.com/expressjs/express/pull/4885",
      "diff_url": "https://github.com/expressjs/express/pull/4885.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4885.patch",
      "merged_at": null
    },
    "body": "This pr fixes #2729\r\n\r\nI've done the following:\r\n\r\n- [x]  Added a new test that covers my changes\r\n- [x]  Runned linter",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4885/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4885/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4884",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4884/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4884/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4884/events",
    "html_url": "https://github.com/expressjs/express/pull/4884",
    "id": 1196261871,
    "node_id": "PR_kwDOAAOeZ8410axV",
    "number": 4884,
    "title": "examples: add missing associated labels",
    "user": {
      "login": "Hashen110",
      "id": 37979557,
      "node_id": "MDQ6VXNlcjM3OTc5NTU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/37979557?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Hashen110",
      "html_url": "https://github.com/Hashen110",
      "followers_url": "https://api.github.com/users/Hashen110/followers",
      "following_url": "https://api.github.com/users/Hashen110/following{/other_user}",
      "gists_url": "https://api.github.com/users/Hashen110/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Hashen110/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Hashen110/subscriptions",
      "organizations_url": "https://api.github.com/users/Hashen110/orgs",
      "repos_url": "https://api.github.com/users/Hashen110/repos",
      "events_url": "https://api.github.com/users/Hashen110/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Hashen110/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2022-04-07T16:05:02Z",
    "updated_at": "2022-04-12T02:43:23Z",
    "closed_at": "2022-04-12T02:43:23Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4884",
      "html_url": "https://github.com/expressjs/express/pull/4884",
      "diff_url": "https://github.com/expressjs/express/pull/4884.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4884.patch",
      "merged_at": "2022-04-12T02:43:23Z"
    },
    "body": null,
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4884/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4884/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4883",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4883/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4883/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4883/events",
    "html_url": "https://github.com/expressjs/express/pull/4883",
    "id": 1196247505,
    "node_id": "PR_kwDOAAOeZ8410YIT",
    "number": 4883,
    "title": "examples: fix condition",
    "user": {
      "login": "Hashen110",
      "id": 37979557,
      "node_id": "MDQ6VXNlcjM3OTc5NTU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/37979557?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Hashen110",
      "html_url": "https://github.com/Hashen110",
      "followers_url": "https://api.github.com/users/Hashen110/followers",
      "following_url": "https://api.github.com/users/Hashen110/following{/other_user}",
      "gists_url": "https://api.github.com/users/Hashen110/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Hashen110/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Hashen110/subscriptions",
      "organizations_url": "https://api.github.com/users/Hashen110/orgs",
      "repos_url": "https://api.github.com/users/Hashen110/repos",
      "events_url": "https://api.github.com/users/Hashen110/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Hashen110/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2022-04-07T15:58:15Z",
    "updated_at": "2022-04-29T03:09:33Z",
    "closed_at": "2022-04-29T03:09:06Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4883",
      "html_url": "https://github.com/expressjs/express/pull/4883",
      "diff_url": "https://github.com/expressjs/express/pull/4883.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4883.patch",
      "merged_at": null
    },
    "body": null,
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4883/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4883/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4882",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4882/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4882/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4882/events",
    "html_url": "https://github.com/expressjs/express/pull/4882",
    "id": 1196232076,
    "node_id": "PR_kwDOAAOeZ8410U3u",
    "number": 4882,
    "title": "test: fix typo",
    "user": {
      "login": "Hashen110",
      "id": 37979557,
      "node_id": "MDQ6VXNlcjM3OTc5NTU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/37979557?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Hashen110",
      "html_url": "https://github.com/Hashen110",
      "followers_url": "https://api.github.com/users/Hashen110/followers",
      "following_url": "https://api.github.com/users/Hashen110/following{/other_user}",
      "gists_url": "https://api.github.com/users/Hashen110/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Hashen110/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Hashen110/subscriptions",
      "organizations_url": "https://api.github.com/users/Hashen110/orgs",
      "repos_url": "https://api.github.com/users/Hashen110/repos",
      "events_url": "https://api.github.com/users/Hashen110/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Hashen110/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 133578714,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/tests",
        "name": "tests",
        "color": "944008",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2022-04-07T15:44:31Z",
    "updated_at": "2022-04-08T06:41:23Z",
    "closed_at": "2022-04-08T06:41:23Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4882",
      "html_url": "https://github.com/expressjs/express/pull/4882",
      "diff_url": "https://github.com/expressjs/express/pull/4882.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4882.patch",
      "merged_at": "2022-04-08T06:41:23Z"
    },
    "body": null,
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4882/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4882/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4880",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4880/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4880/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4880/events",
    "html_url": "https://github.com/expressjs/express/pull/4880",
    "id": 1191082646,
    "node_id": "PR_kwDOAAOeZ841jKPd",
    "number": 4880,
    "title": "Expanding the benchmark.",
    "user": {
      "login": "denizy97",
      "id": 44759493,
      "node_id": "MDQ6VXNlcjQ0NzU5NDkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/44759493?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/denizy97",
      "html_url": "https://github.com/denizy97",
      "followers_url": "https://api.github.com/users/denizy97/followers",
      "following_url": "https://api.github.com/users/denizy97/following{/other_user}",
      "gists_url": "https://api.github.com/users/denizy97/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/denizy97/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/denizy97/subscriptions",
      "organizations_url": "https://api.github.com/users/denizy97/orgs",
      "repos_url": "https://api.github.com/users/denizy97/repos",
      "events_url": "https://api.github.com/users/denizy97/events{/privacy}",
      "received_events_url": "https://api.github.com/users/denizy97/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2022-04-03T23:41:12Z",
    "updated_at": "2022-04-25T00:41:16Z",
    "closed_at": "2022-04-25T00:41:16Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4880",
      "html_url": "https://github.com/expressjs/express/pull/4880",
      "diff_url": "https://github.com/expressjs/express/pull/4880.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4880.patch",
      "merged_at": "2022-04-25T00:41:16Z"
    },
    "body": "This pull request expands the existing benchmark to also check for varying connections, and to also show average latency (instead of just reqs/sec).\r\n\r\nThis is a simple change but I think it is important since the existing benchmark is 8 years old and is lacking in a lot of ways. In the future it can be further expanded or be completely rewritten to provide a better view of Express's performance.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4880/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4880/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4879",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4879/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4879/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4879/events",
    "html_url": "https://github.com/expressjs/express/issues/4879",
    "id": 1190946627,
    "node_id": "I_kwDOAAOeZ85G_GdD",
    "number": 4879,
    "title": "The router restore function can incorrectly set variables to undefined",
    "user": {
      "login": "floftar",
      "id": 5424095,
      "node_id": "MDQ6VXNlcjU0MjQwOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5424095?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/floftar",
      "html_url": "https://github.com/floftar",
      "followers_url": "https://api.github.com/users/floftar/followers",
      "following_url": "https://api.github.com/users/floftar/following{/other_user}",
      "gists_url": "https://api.github.com/users/floftar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/floftar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/floftar/subscriptions",
      "organizations_url": "https://api.github.com/users/floftar/orgs",
      "repos_url": "https://api.github.com/users/floftar/repos",
      "events_url": "https://api.github.com/users/floftar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/floftar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2022-04-03T14:26:13Z",
    "updated_at": "2022-04-07T16:00:02Z",
    "closed_at": "2022-04-03T16:13:04Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I found a case where `request.params` becomes undefined. Here is a concrete test case to reproduce the case:\r\n\r\n```javascript\r\n// test/app.router.js\r\n\r\nit('should have req.params in finish event after handler2 calls next', function(done){\r\n  var app = express();\r\n\r\n  function handler1(req, res, next) {\r\n    res.once('finish', function() {\r\n      setTimeout(function() {\r\n        assert(req.params.id);\r\n      })\r\n    })\r\n\r\n    next()\r\n  }\r\n\r\n  function handler2(req, res, next){\r\n    res.end(req.params.id);\r\n    next()\r\n  }\r\n\r\n  app.get('/user/:id', handler1, handler2);\r\n\r\n  request(app)\r\n  .get('/user/1')\r\n  .expect(200, '1', done);\r\n})\r\n```\r\n\r\nThe test runs fine if there is no `next` call in `handler2`. The `setTimeout` in `handler1` ensures that the test fails.\r\n\r\nAs I understand it, the last `next` will cause the function `done` to be called in the router:\r\n\r\n```javascript\r\n// lib/router/index.js\r\n\r\n// no more matching layers\r\nif (idx >= stack.length) {\r\n    setImmediate(done, layerError);\r\n    return;\r\n}\r\n```\r\n\r\nThe problem is that `done` is not working correctly in this case. If there are middlewares and no router the `done` function will replace `baseUrl`, `next`, and `params` with the value `undefined`.\r\n\r\n```javascript\r\n// lib/router/index.js\r\n\r\n// restore vals\r\nfor (var i = 0; i < props.length; i++) {\r\n    obj[props[i]] = vals[i];\r\n}\r\n```\r\n\r\nHence the `setTimeout` in the `handler1`. Without a timeout, the `handler1` function mostly finishes successfully before `done` is called in the next iteration of the event loop.\r\n\r\nMy proposal to fix the problem would be to check for `undefined`:\r\n\r\n```javascript\r\n// lib/router/index.js\r\n\r\n// restore vals\r\nfor (var i = 0; i < props.length; i++) {\r\n  if (vals[i] !== undefined) {\r\n    obj[props[i]] = vals[i];\r\n  }\r\n}\r\n```\r\n\r\nBefore creating a pull request I would like to hear if I missed some details or a better solution.\r\n\r\nI think better would if the `done` function would not try to restore anything if there is no router at all. But I could not figure out a good way to do that.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4879/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4879/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4878",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4878/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4878/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4878/events",
    "html_url": "https://github.com/expressjs/express/issues/4878",
    "id": 1185274527,
    "node_id": "I_kwDOAAOeZ85Gpdqf",
    "number": 4878,
    "title": "Weird req.query behavior",
    "user": {
      "login": "VladimirMikulic",
      "id": 35997844,
      "node_id": "MDQ6VXNlcjM1OTk3ODQ0",
      "avatar_url": "https://avatars.githubusercontent.com/u/35997844?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VladimirMikulic",
      "html_url": "https://github.com/VladimirMikulic",
      "followers_url": "https://api.github.com/users/VladimirMikulic/followers",
      "following_url": "https://api.github.com/users/VladimirMikulic/following{/other_user}",
      "gists_url": "https://api.github.com/users/VladimirMikulic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VladimirMikulic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VladimirMikulic/subscriptions",
      "organizations_url": "https://api.github.com/users/VladimirMikulic/orgs",
      "repos_url": "https://api.github.com/users/VladimirMikulic/repos",
      "events_url": "https://api.github.com/users/VladimirMikulic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VladimirMikulic/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2022-03-29T18:48:20Z",
    "updated_at": "2022-03-29T18:57:54Z",
    "closed_at": "2022-03-29T18:52:35Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi! I recently encountered an interesting case of how query string shows up in `req.query` in my logs.\r\n\r\nNormal call: `https://some-api.com/?tags=tag1,tag2,tag3`\r\n\r\n```\r\n{\r\n  tags: \"tag1,tag2,tag3\"\r\n}\r\n```\r\n\r\n\r\nWeird/potentially dangerous: `https://some-api.com/?tags=tag1,tag2,tag3&tags[i]=tag4` <- notice this `tags[i]=<value>`\r\n\r\nHere's how the req.query looks like:\r\n```\r\n{\r\n  tags: [\"tag1\", \"tag2\", \"tag3\", { i: \"tag\" }]\r\n}\r\n```\r\n\r\nI would expect `tags` to be a string just like in normal call.\r\nIt shouldn't suddenly turn to an array with strings and an object at the end.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4878/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4878/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4877",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4877/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4877/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4877/events",
    "html_url": "https://github.com/expressjs/express/issues/4877",
    "id": 1185194731,
    "node_id": "I_kwDOAAOeZ85GpKLr",
    "number": 4877,
    "title": "Augment file before sending with .sendFile",
    "user": {
      "login": "kevincolten",
      "id": 4411115,
      "node_id": "MDQ6VXNlcjQ0MTExMTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4411115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevincolten",
      "html_url": "https://github.com/kevincolten",
      "followers_url": "https://api.github.com/users/kevincolten/followers",
      "following_url": "https://api.github.com/users/kevincolten/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevincolten/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevincolten/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevincolten/subscriptions",
      "organizations_url": "https://api.github.com/users/kevincolten/orgs",
      "repos_url": "https://api.github.com/users/kevincolten/repos",
      "events_url": "https://api.github.com/users/kevincolten/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevincolten/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 18291,
        "node_id": "MDU6TGFiZWwxODI5MQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2022-03-29T17:33:28Z",
    "updated_at": "2022-05-10T15:54:17Z",
    "closed_at": "2022-05-10T15:54:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Is there a way to intercept and augment the file being sent with `res.sendFile()`? I'd like to use `.sendFile` over just using `.send` because I have a dual server-based / react application, and I use the `root` option to toggle between.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4877/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4877/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4875",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4875/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4875/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4875/events",
    "html_url": "https://github.com/expressjs/express/pull/4875",
    "id": 1182488058,
    "node_id": "PR_kwDOAAOeZ841G5yi",
    "number": 4875,
    "title": "Add vulnerability",
    "user": {
      "login": "yahavi",
      "id": 11367982,
      "node_id": "MDQ6VXNlcjExMzY3OTgy",
      "avatar_url": "https://avatars.githubusercontent.com/u/11367982?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yahavi",
      "html_url": "https://github.com/yahavi",
      "followers_url": "https://api.github.com/users/yahavi/followers",
      "following_url": "https://api.github.com/users/yahavi/following{/other_user}",
      "gists_url": "https://api.github.com/users/yahavi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yahavi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yahavi/subscriptions",
      "organizations_url": "https://api.github.com/users/yahavi/orgs",
      "repos_url": "https://api.github.com/users/yahavi/repos",
      "events_url": "https://api.github.com/users/yahavi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yahavi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2022-03-27T11:06:42Z",
    "updated_at": "2022-03-27T11:06:52Z",
    "closed_at": "2022-03-27T11:06:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4875",
      "html_url": "https://github.com/expressjs/express/pull/4875",
      "diff_url": "https://github.com/expressjs/express/pull/4875.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4875.patch",
      "merged_at": null
    },
    "body": null,
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4875/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4875/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4874",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4874/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4874/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4874/events",
    "html_url": "https://github.com/expressjs/express/issues/4874",
    "id": 1182384138,
    "node_id": "I_kwDOAAOeZ85GecAK",
    "number": 4874,
    "title": "Iget double slashes.",
    "user": {
      "login": "Mastergamer433",
      "id": 75840421,
      "node_id": "MDQ6VXNlcjc1ODQwNDIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/75840421?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mastergamer433",
      "html_url": "https://github.com/Mastergamer433",
      "followers_url": "https://api.github.com/users/Mastergamer433/followers",
      "following_url": "https://api.github.com/users/Mastergamer433/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mastergamer433/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mastergamer433/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mastergamer433/subscriptions",
      "organizations_url": "https://api.github.com/users/Mastergamer433/orgs",
      "repos_url": "https://api.github.com/users/Mastergamer433/repos",
      "events_url": "https://api.github.com/users/Mastergamer433/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mastergamer433/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 18291,
        "node_id": "MDU6TGFiZWwxODI5MQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2022-03-27T06:36:09Z",
    "updated_at": "2022-04-03T16:25:43Z",
    "closed_at": "2022-04-03T16:25:43Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When i go to my site api.kimane.se/login i get \"Cannot get //login\" so the express app has appended one slash at the beggining of the path.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4874/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4874/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4873",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4873/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4873/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4873/events",
    "html_url": "https://github.com/expressjs/express/issues/4873",
    "id": 1182193888,
    "node_id": "I_kwDOAAOeZ85Gdtjg",
    "number": 4873,
    "title": "Request triager role for ghousemohamed",
    "user": {
      "login": "ghousemohamed",
      "id": 56545288,
      "node_id": "MDQ6VXNlcjU2NTQ1Mjg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/56545288?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghousemohamed",
      "html_url": "https://github.com/ghousemohamed",
      "followers_url": "https://api.github.com/users/ghousemohamed/followers",
      "following_url": "https://api.github.com/users/ghousemohamed/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghousemohamed/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghousemohamed/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghousemohamed/subscriptions",
      "organizations_url": "https://api.github.com/users/ghousemohamed/orgs",
      "repos_url": "https://api.github.com/users/ghousemohamed/repos",
      "events_url": "https://api.github.com/users/ghousemohamed/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghousemohamed/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 18291,
        "node_id": "MDU6TGFiZWwxODI5MQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2022-03-27T00:12:48Z",
    "updated_at": "2022-04-03T00:17:43Z",
    "closed_at": "2022-04-03T00:17:42Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Hi folks,\r\n\r\nI've been using express in many clients as well as side projects. But I've never understood fully well\r\nthe internals of it all. I've been browsing the code for well over a week now trying to understand it, and\r\nI'm really interested in getting my hands dirty trying to understand how it's all built and would love to\r\ncontribute. I've been actively contributing to Ruby on Rails, and have just now begun to go through the\r\nPhoenix framework. As an extension of my efforts, I would also like to find out how I can contribute to express.\r\n\r\n1. [My RoR contributions](https://github.com/rails/rails/pulls?page=1&q=author%3Aghousemohamed)\r\n2. [My Phoenix contributions](https://github.com/phoenixframework/phoenix/pulls/ghousemohamed)\r\n\r\n- [x] I have read and understood the project's Code of Conduct.\r\n- [x] I also have read and understood the process and best practices around Express triaging.\r\n\r\nI request for a triager role for the following GitHub organizations:\r\n\r\n- [x] jshttp\r\n- [x] pillarjs\r\n- [x] express",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4873/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4873/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4872",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4872/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4872/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4872/events",
    "html_url": "https://github.com/expressjs/express/pull/4872",
    "id": 1182180834,
    "node_id": "PR_kwDOAAOeZ841F26C",
    "number": 4872,
    "title": "docs: fix typo: http -> HTTP",
    "user": {
      "login": "ghousemohamed",
      "id": 56545288,
      "node_id": "MDQ6VXNlcjU2NTQ1Mjg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/56545288?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghousemohamed",
      "html_url": "https://github.com/ghousemohamed",
      "followers_url": "https://api.github.com/users/ghousemohamed/followers",
      "following_url": "https://api.github.com/users/ghousemohamed/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghousemohamed/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghousemohamed/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghousemohamed/subscriptions",
      "organizations_url": "https://api.github.com/users/ghousemohamed/orgs",
      "repos_url": "https://api.github.com/users/ghousemohamed/repos",
      "events_url": "https://api.github.com/users/ghousemohamed/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghousemohamed/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2022-03-26T23:49:10Z",
    "updated_at": "2022-04-10T03:44:12Z",
    "closed_at": "2022-04-10T03:44:12Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4872",
      "html_url": "https://github.com/expressjs/express/pull/4872",
      "diff_url": "https://github.com/expressjs/express/pull/4872.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4872.patch",
      "merged_at": "2022-04-10T03:44:12Z"
    },
    "body": "Noticed this while going through the docs and code. Apologies if this is a non-trivial one.\r\nI hope to be able to make a meaningful contribution should I come across anything while trying\r\nto understand expressjs's internals.\r\n\r\nCheers! 😄",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4872/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4872/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4869",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4869/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4869/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4869/events",
    "html_url": "https://github.com/expressjs/express/pull/4869",
    "id": 1175158505,
    "node_id": "PR_kwDOAAOeZ840umj2",
    "number": 4869,
    "title": "Fix JSDoc Function type",
    "user": {
      "login": "HanMoeHtet",
      "id": 59571458,
      "node_id": "MDQ6VXNlcjU5NTcxNDU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/59571458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/HanMoeHtet",
      "html_url": "https://github.com/HanMoeHtet",
      "followers_url": "https://api.github.com/users/HanMoeHtet/followers",
      "following_url": "https://api.github.com/users/HanMoeHtet/following{/other_user}",
      "gists_url": "https://api.github.com/users/HanMoeHtet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/HanMoeHtet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HanMoeHtet/subscriptions",
      "organizations_url": "https://api.github.com/users/HanMoeHtet/orgs",
      "repos_url": "https://api.github.com/users/HanMoeHtet/repos",
      "events_url": "https://api.github.com/users/HanMoeHtet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/HanMoeHtet/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2022-03-21T10:11:25Z",
    "updated_at": "2022-03-22T03:10:22Z",
    "closed_at": "2022-03-22T03:10:22Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4869",
      "html_url": "https://github.com/expressjs/express/pull/4869",
      "diff_url": "https://github.com/expressjs/express/pull/4869.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4869.patch",
      "merged_at": null
    },
    "body": "Before:\r\n\r\n    @param {function} next\r\n\r\nAfter: \r\n\r\n    @param {Function} next\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4869/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4869/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4868",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4868/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4868/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4868/events",
    "html_url": "https://github.com/expressjs/express/pull/4868",
    "id": 1174589566,
    "node_id": "PR_kwDOAAOeZ840s8ll",
    "number": 4868,
    "title": "fix: continue is unnecessary as the last statement in a loop",
    "user": {
      "login": "Hashen110",
      "id": 37979557,
      "node_id": "MDQ6VXNlcjM3OTc5NTU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/37979557?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Hashen110",
      "html_url": "https://github.com/Hashen110",
      "followers_url": "https://api.github.com/users/Hashen110/followers",
      "following_url": "https://api.github.com/users/Hashen110/following{/other_user}",
      "gists_url": "https://api.github.com/users/Hashen110/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Hashen110/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Hashen110/subscriptions",
      "organizations_url": "https://api.github.com/users/Hashen110/orgs",
      "repos_url": "https://api.github.com/users/Hashen110/repos",
      "events_url": "https://api.github.com/users/Hashen110/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Hashen110/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2022-03-20T15:38:22Z",
    "updated_at": "2022-03-21T06:12:54Z",
    "closed_at": "2022-03-21T06:12:54Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4868",
      "html_url": "https://github.com/expressjs/express/pull/4868",
      "diff_url": "https://github.com/expressjs/express/pull/4868.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4868.patch",
      "merged_at": "2022-03-21T06:12:54Z"
    },
    "body": null,
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4868/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4868/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4867",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4867/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4867/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4867/events",
    "html_url": "https://github.com/expressjs/express/pull/4867",
    "id": 1174571934,
    "node_id": "PR_kwDOAAOeZ840s6A5",
    "number": 4867,
    "title": "fix: parameter index is not described in JSDoc",
    "user": {
      "login": "Hashen110",
      "id": 37979557,
      "node_id": "MDQ6VXNlcjM3OTc5NTU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/37979557?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Hashen110",
      "html_url": "https://github.com/Hashen110",
      "followers_url": "https://api.github.com/users/Hashen110/followers",
      "following_url": "https://api.github.com/users/Hashen110/following{/other_user}",
      "gists_url": "https://api.github.com/users/Hashen110/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Hashen110/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Hashen110/subscriptions",
      "organizations_url": "https://api.github.com/users/Hashen110/orgs",
      "repos_url": "https://api.github.com/users/Hashen110/repos",
      "events_url": "https://api.github.com/users/Hashen110/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Hashen110/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2022-03-20T14:43:40Z",
    "updated_at": "2022-03-21T01:11:45Z",
    "closed_at": "2022-03-21T01:11:44Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4867",
      "html_url": "https://github.com/expressjs/express/pull/4867",
      "diff_url": "https://github.com/expressjs/express/pull/4867.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4867.patch",
      "merged_at": "2022-03-21T01:11:44Z"
    },
    "body": null,
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4867/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4867/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4866",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4866/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4866/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4866/events",
    "html_url": "https://github.com/expressjs/express/pull/4866",
    "id": 1174567818,
    "node_id": "PR_kwDOAAOeZ840s5Y8",
    "number": 4866,
    "title": "fix: remove deprecated html attribute",
    "user": {
      "login": "Hashen110",
      "id": 37979557,
      "node_id": "MDQ6VXNlcjM3OTc5NTU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/37979557?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Hashen110",
      "html_url": "https://github.com/Hashen110",
      "followers_url": "https://api.github.com/users/Hashen110/followers",
      "following_url": "https://api.github.com/users/Hashen110/following{/other_user}",
      "gists_url": "https://api.github.com/users/Hashen110/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Hashen110/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Hashen110/subscriptions",
      "organizations_url": "https://api.github.com/users/Hashen110/orgs",
      "repos_url": "https://api.github.com/users/Hashen110/repos",
      "events_url": "https://api.github.com/users/Hashen110/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Hashen110/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2022-03-20T14:29:27Z",
    "updated_at": "2022-03-20T20:30:06Z",
    "closed_at": "2022-03-20T20:30:06Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4866",
      "html_url": "https://github.com/expressjs/express/pull/4866",
      "diff_url": "https://github.com/expressjs/express/pull/4866.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4866.patch",
      "merged_at": "2022-03-20T20:30:06Z"
    },
    "body": "[MDN doc](https://developer.mozilla.org/en-US/docs/web/html/element/style#deprecated_attributes)",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4866/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4866/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4865",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4865/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4865/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4865/events",
    "html_url": "https://github.com/expressjs/express/pull/4865",
    "id": 1174488135,
    "node_id": "PR_kwDOAAOeZ840stNN",
    "number": 4865,
    "title": "CVE-2021-44907",
    "user": {
      "login": "jmargieh",
      "id": 7428661,
      "node_id": "MDQ6VXNlcjc0Mjg2NjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7428661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmargieh",
      "html_url": "https://github.com/jmargieh",
      "followers_url": "https://api.github.com/users/jmargieh/followers",
      "following_url": "https://api.github.com/users/jmargieh/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmargieh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmargieh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmargieh/subscriptions",
      "organizations_url": "https://api.github.com/users/jmargieh/orgs",
      "repos_url": "https://api.github.com/users/jmargieh/repos",
      "events_url": "https://api.github.com/users/jmargieh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmargieh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 133578716,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/deps",
        "name": "deps",
        "color": "444444",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2022-03-20T09:39:53Z",
    "updated_at": "2022-08-22T17:27:14Z",
    "closed_at": "2022-03-20T14:43:31Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4865",
      "html_url": "https://github.com/expressjs/express/pull/4865",
      "diff_url": "https://github.com/expressjs/express/pull/4865.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4865.patch",
      "merged_at": null
    },
    "body": "https://www.whitesourcesoftware.com/vulnerability-database/CVE-2021-44907",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4865/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4865/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4863",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4863/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4863/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4863/events",
    "html_url": "https://github.com/expressjs/express/issues/4863",
    "id": 1173866719,
    "node_id": "I_kwDOAAOeZ85F98jf",
    "number": 4863,
    "title": "Allow default value for express.json()",
    "user": {
      "login": "bali182",
      "id": 3879181,
      "node_id": "MDQ6VXNlcjM4NzkxODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3879181?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bali182",
      "html_url": "https://github.com/bali182",
      "followers_url": "https://api.github.com/users/bali182/followers",
      "following_url": "https://api.github.com/users/bali182/following{/other_user}",
      "gists_url": "https://api.github.com/users/bali182/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bali182/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bali182/subscriptions",
      "organizations_url": "https://api.github.com/users/bali182/orgs",
      "repos_url": "https://api.github.com/users/bali182/repos",
      "events_url": "https://api.github.com/users/bali182/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bali182/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 572472845,
        "node_id": "MDU6TGFiZWw1NzI0NzI4NDU=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:body-parser",
        "name": "module:body-parser",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2022-03-18T18:00:52Z",
    "updated_at": "2022-03-19T22:54:54Z",
    "closed_at": "2022-03-18T18:03:27Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In v4.17.3 `request.body` falls back to an empty object in case no request body was provided. This is not helpful when trying to validate the request body, as I have no idea if the user actually sent `{}`, or no response was sent at all, and the body parser decided to make it an empty object.\r\n\r\nI'd suggest allowing:\r\n\r\n```js\r\napp.use(express.json({ default: undefined }))\r\n```\r\n\r\nOr something similar, that would allow overwriting the no response body behaviour in a backward compatible way.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4863/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4863/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4861",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4861/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4861/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4861/events",
    "html_url": "https://github.com/expressjs/express/pull/4861",
    "id": 1172638935,
    "node_id": "PR_kwDOAAOeZ840nNcb",
    "number": 4861,
    "title": "Use object with null prototype for various app properties",
    "user": {
      "login": "EvanHahn",
      "id": 777712,
      "node_id": "MDQ6VXNlcjc3NzcxMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/777712?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EvanHahn",
      "html_url": "https://github.com/EvanHahn",
      "followers_url": "https://api.github.com/users/EvanHahn/followers",
      "following_url": "https://api.github.com/users/EvanHahn/following{/other_user}",
      "gists_url": "https://api.github.com/users/EvanHahn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EvanHahn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EvanHahn/subscriptions",
      "organizations_url": "https://api.github.com/users/EvanHahn/orgs",
      "repos_url": "https://api.github.com/users/EvanHahn/repos",
      "events_url": "https://api.github.com/users/EvanHahn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EvanHahn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 98481977,
        "node_id": "MDU6TGFiZWw5ODQ4MTk3Nw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/11",
      "html_url": "https://github.com/expressjs/express/milestone/11",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/11/labels",
      "id": 739972,
      "node_id": "MDk6TWlsZXN0b25lNzM5OTcy",
      "number": 11,
      "title": "5.0",
      "description": "",
      "creator": {
        "login": "Fishrock123",
        "id": 1093990,
        "node_id": "MDQ6VXNlcjEwOTM5OTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1093990?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fishrock123",
        "html_url": "https://github.com/Fishrock123",
        "followers_url": "https://api.github.com/users/Fishrock123/followers",
        "following_url": "https://api.github.com/users/Fishrock123/following{/other_user}",
        "gists_url": "https://api.github.com/users/Fishrock123/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Fishrock123/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Fishrock123/subscriptions",
        "organizations_url": "https://api.github.com/users/Fishrock123/orgs",
        "repos_url": "https://api.github.com/users/Fishrock123/repos",
        "events_url": "https://api.github.com/users/Fishrock123/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Fishrock123/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 8,
      "closed_issues": 12,
      "state": "open",
      "created_at": "2014-08-01T16:41:47Z",
      "updated_at": "2023-03-04T23:52:31Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 1,
    "created_at": "2022-03-17T17:36:05Z",
    "updated_at": "2023-04-17T23:11:52Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4861",
      "html_url": "https://github.com/expressjs/express/pull/4861",
      "diff_url": "https://github.com/expressjs/express/pull/4861.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4861.patch",
      "merged_at": null
    },
    "body": "See [discussion here](https://github.com/expressjs/express/pull/4835#discussion_r811355575).\r\n\r\n`app.cache`, `app.engines`, and `app.settings` are now created with `Object.create(null)` instead of `{}`.\r\n\r\nThis also adds a test that `app.locals` is created the same way.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4861/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4861/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4860",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4860/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4860/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4860/events",
    "html_url": "https://github.com/expressjs/express/pull/4860",
    "id": 1172290113,
    "node_id": "PR_kwDOAAOeZ840mC2V",
    "number": 4860,
    "title": "Replace deprecated String.prototype.substr()",
    "user": {
      "login": "CommanderRoot",
      "id": 4395417,
      "node_id": "MDQ6VXNlcjQzOTU0MTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4395417?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CommanderRoot",
      "html_url": "https://github.com/CommanderRoot",
      "followers_url": "https://api.github.com/users/CommanderRoot/followers",
      "following_url": "https://api.github.com/users/CommanderRoot/following{/other_user}",
      "gists_url": "https://api.github.com/users/CommanderRoot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CommanderRoot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CommanderRoot/subscriptions",
      "organizations_url": "https://api.github.com/users/CommanderRoot/orgs",
      "repos_url": "https://api.github.com/users/CommanderRoot/repos",
      "events_url": "https://api.github.com/users/CommanderRoot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CommanderRoot/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2022-03-17T12:01:47Z",
    "updated_at": "2022-03-20T19:13:42Z",
    "closed_at": "2022-03-20T19:13:42Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4860",
      "html_url": "https://github.com/expressjs/express/pull/4860",
      "diff_url": "https://github.com/expressjs/express/pull/4860.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4860.patch",
      "merged_at": "2022-03-20T19:13:42Z"
    },
    "body": "[String.prototype.substr()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/substr) is deprecated so we replace it with [String.prototype.slice()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/slice) or [String.prototype.substring()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/substring) which work similarily but aren't deprecated.\r\n.substr() probably isn't going away anytime soon but the change is trivial so it doesn't hurt to do it.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4860/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4860/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4858",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4858/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4858/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4858/events",
    "html_url": "https://github.com/expressjs/express/pull/4858",
    "id": 1170759158,
    "node_id": "PR_kwDOAAOeZ840hOi0",
    "number": 4858,
    "title": "Prettier Config File",
    "user": {
      "login": "jeanpierrecarvalho",
      "id": 90358872,
      "node_id": "MDQ6VXNlcjkwMzU4ODcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/90358872?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jeanpierrecarvalho",
      "html_url": "https://github.com/jeanpierrecarvalho",
      "followers_url": "https://api.github.com/users/jeanpierrecarvalho/followers",
      "following_url": "https://api.github.com/users/jeanpierrecarvalho/following{/other_user}",
      "gists_url": "https://api.github.com/users/jeanpierrecarvalho/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jeanpierrecarvalho/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jeanpierrecarvalho/subscriptions",
      "organizations_url": "https://api.github.com/users/jeanpierrecarvalho/orgs",
      "repos_url": "https://api.github.com/users/jeanpierrecarvalho/repos",
      "events_url": "https://api.github.com/users/jeanpierrecarvalho/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jeanpierrecarvalho/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2022-03-16T09:31:23Z",
    "updated_at": "2022-03-18T09:14:23Z",
    "closed_at": "2022-03-16T15:43:53Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4858",
      "html_url": "https://github.com/expressjs/express/pull/4858",
      "diff_url": "https://github.com/expressjs/express/pull/4858.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4858.patch",
      "merged_at": null
    },
    "body": "Added .prettierrc file",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4858/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4858/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4857",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4857/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4857/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4857/events",
    "html_url": "https://github.com/expressjs/express/issues/4857",
    "id": 1170536601,
    "node_id": "I_kwDOAAOeZ85FxPiZ",
    "number": 4857,
    "title": "Questions: Express next() parameter in a function",
    "user": {
      "login": "khafidprayoga",
      "id": 49889543,
      "node_id": "MDQ6VXNlcjQ5ODg5NTQz",
      "avatar_url": "https://avatars.githubusercontent.com/u/49889543?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/khafidprayoga",
      "html_url": "https://github.com/khafidprayoga",
      "followers_url": "https://api.github.com/users/khafidprayoga/followers",
      "following_url": "https://api.github.com/users/khafidprayoga/following{/other_user}",
      "gists_url": "https://api.github.com/users/khafidprayoga/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/khafidprayoga/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/khafidprayoga/subscriptions",
      "organizations_url": "https://api.github.com/users/khafidprayoga/orgs",
      "repos_url": "https://api.github.com/users/khafidprayoga/repos",
      "events_url": "https://api.github.com/users/khafidprayoga/events{/privacy}",
      "received_events_url": "https://api.github.com/users/khafidprayoga/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2022-03-16T04:45:30Z",
    "updated_at": "2022-03-23T05:04:21Z",
    "closed_at": "2022-03-16T04:50:38Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When i built auth app\r\n\r\nMy middlewares:\r\n- protected (for check token)\r\n- controllers (to validate body data and interact with services)\r\n- exceptions (sent error status to client if internal error thrown)\r\n\r\nwhen i use `next(id)` on protected middleware it throws and error and skip controllers. \r\nIt goes to exceptions middleware (skip the controllers). In my case i need pass id to the expected contollers but it gives error.\r\n\r\nand work excatly as expected, when i change my code to\r\n```js\r\ntry{\r\n    const {id} = await verifyToken()\r\n    req.id = id\r\n    next()\r\n}catch(error){\r\n    next(error)\r\n}\r\n```\r\n\r\nMy question:\r\nif i pass a parameter to next() interface, does it redirect to express internal error handler? even if i dont use try-catch statements",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4857/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4857/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4855",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4855/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4855/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4855/events",
    "html_url": "https://github.com/expressjs/express/pull/4855",
    "id": 1168263086,
    "node_id": "PR_kwDOAAOeZ840Y83H",
    "number": 4855,
    "title": "Add root support in res.download()",
    "user": {
      "login": "mmito",
      "id": 45098081,
      "node_id": "MDQ6VXNlcjQ1MDk4MDgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/45098081?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mmito",
      "html_url": "https://github.com/mmito",
      "followers_url": "https://api.github.com/users/mmito/followers",
      "following_url": "https://api.github.com/users/mmito/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmito/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mmito/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmito/subscriptions",
      "organizations_url": "https://api.github.com/users/mmito/orgs",
      "repos_url": "https://api.github.com/users/mmito/repos",
      "events_url": "https://api.github.com/users/mmito/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mmito/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/18",
      "html_url": "https://github.com/expressjs/express/milestone/18",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/18/labels",
      "id": 5234171,
      "node_id": "MDk6TWlsZXN0b25lNTIzNDE3MQ==",
      "number": 18,
      "title": "4.18",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 15,
      "state": "closed",
      "created_at": "2020-03-24T23:16:48Z",
      "updated_at": "2022-04-24T22:50:58Z",
      "due_on": null,
      "closed_at": "2022-04-24T22:50:58Z"
    },
    "comments": 0,
    "created_at": "2022-03-14T11:49:09Z",
    "updated_at": "2022-03-25T04:33:14Z",
    "closed_at": "2022-03-25T04:33:14Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4855",
      "html_url": "https://github.com/expressjs/express/pull/4855",
      "diff_url": "https://github.com/expressjs/express/pull/4855.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4855.patch",
      "merged_at": "2022-03-25T04:33:14Z"
    },
    "body": "This pull request addresses the abnormal root behaviour in `res.download()` in #4834. It provides the non-breaking change to the code suggested in the linked issue (thus resolving the filename to an absolute path *only* if `options.root` is not set).\r\n\r\nI have:\r\n- [x] added a test covering the change (as `res.download()` relies on `res.sendFile()`, all of the various cases with root in options get dealt with in the sendFile tests).\r\n- [x] run linter.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4855/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4855/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4854",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4854/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4854/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4854/events",
    "html_url": "https://github.com/expressjs/express/issues/4854",
    "id": 1167650488,
    "node_id": "I_kwDOAAOeZ85FmO64",
    "number": 4854,
    "title": "RFC: drop mutation of IncomingMessage owned fields, write only to new, augmented fields",
    "user": {
      "login": "cdaringe",
      "id": 1003261,
      "node_id": "MDQ6VXNlcjEwMDMyNjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1003261?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cdaringe",
      "html_url": "https://github.com/cdaringe",
      "followers_url": "https://api.github.com/users/cdaringe/followers",
      "following_url": "https://api.github.com/users/cdaringe/following{/other_user}",
      "gists_url": "https://api.github.com/users/cdaringe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cdaringe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cdaringe/subscriptions",
      "organizations_url": "https://api.github.com/users/cdaringe/orgs",
      "repos_url": "https://api.github.com/users/cdaringe/repos",
      "events_url": "https://api.github.com/users/cdaringe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cdaringe/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2022-03-13T18:00:02Z",
    "updated_at": "2022-03-15T22:22:29Z",
    "closed_at": "2022-03-13T18:19:11Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "# Problem\r\n\r\n`express` mutates `req.url`, and saves the un-mutated version onto `originalUrl`, making URL driven _generic_ middleware hard to design.\r\n\r\nRef: https://github.com/chimurai/http-proxy-middleware/pull/723\r\n\r\nApologies if this topic has already been discussed, I did execute a cursory search and didn't see it, but I miss things time to time.\r\n\r\n# Context\r\n\r\n`http.IncomingMessage` is the `http` module's owned memory, and thus could be considered memory not open for writing. The writing to this memory prevents me from fixing problematic typescript issues in `http-proxy-middleware`. To make `http-proxy-middleware` generic is to decouple it from all frameworks that it supports--express, connect, raw http, koa, fastify, ...the works!\r\n\r\nHowever, because express mutates req.url, I cannot trust `http.IncomingMessage::url`, and either have to:\r\n\r\n1. burden users with passing to HPM the same prefix they  use in `app.use(prefix, ...)`, then additionally track that prefix internally to the HPM lib, or\r\n2. have `express` conditionals within HPM that sniff specifically for indicators of this framework, and use alternate logic.\r\n    1. this is the current state of http-proxy-middleware, but to make it play nicely with other server providers, we're now trying to avoid this\r\n\r\n# Solutions\r\n\r\n1. write to new, owned memory only:\r\n\r\n```js\r\n// GET /api/foo/bar\r\nreq.url // untouched, /api/foo/bar\r\n\r\napp.use('/api', ...)\r\nreq.express.url // /foo/bar\r\nreq.express.base // /api\r\n```\r\n\r\n2. don't mutate URL at all. offer functions for users to derive relative path to the base/prefix path\r\n\r\n3. offer a `.relativePathname`, yielding `req.url` - `sum(...nestedPrefixes)`\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4854/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4854/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4853",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4853/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4853/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4853/events",
    "html_url": "https://github.com/expressjs/express/pull/4853",
    "id": 1167270166,
    "node_id": "PR_kwDOAAOeZ840V5oF",
    "number": 4853,
    "title": "Use es6 template literal syntax for logging errors",
    "user": {
      "login": "haneenmahd",
      "id": 72091386,
      "node_id": "MDQ6VXNlcjcyMDkxMzg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/72091386?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haneenmahd",
      "html_url": "https://github.com/haneenmahd",
      "followers_url": "https://api.github.com/users/haneenmahd/followers",
      "following_url": "https://api.github.com/users/haneenmahd/following{/other_user}",
      "gists_url": "https://api.github.com/users/haneenmahd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haneenmahd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haneenmahd/subscriptions",
      "organizations_url": "https://api.github.com/users/haneenmahd/orgs",
      "repos_url": "https://api.github.com/users/haneenmahd/repos",
      "events_url": "https://api.github.com/users/haneenmahd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haneenmahd/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 18291,
        "node_id": "MDU6TGFiZWwxODI5MQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1",
        "default": false,
        "description": null
      },
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 98481977,
        "node_id": "MDU6TGFiZWw5ODQ4MTk3Nw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2022-03-12T12:09:55Z",
    "updated_at": "2022-07-16T07:00:02Z",
    "closed_at": "2022-07-16T07:00:01Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4853",
      "html_url": "https://github.com/expressjs/express/pull/4853",
      "diff_url": "https://github.com/expressjs/express/pull/4853.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4853.patch",
      "merged_at": null
    },
    "body": "I have changed the code from using the old style of concatenating strings using + and have used es6 string literals.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4853/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4853/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4852",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4852/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4852/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4852/events",
    "html_url": "https://github.com/expressjs/express/pull/4852",
    "id": 1162946553,
    "node_id": "PR_kwDOAAOeZ840HuG2",
    "number": 4852,
    "title": "res.clearCookie() now ignores maxAge",
    "user": {
      "login": "tjarbo",
      "id": 16938041,
      "node_id": "MDQ6VXNlcjE2OTM4MDQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/16938041?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tjarbo",
      "html_url": "https://github.com/tjarbo",
      "followers_url": "https://api.github.com/users/tjarbo/followers",
      "following_url": "https://api.github.com/users/tjarbo/following{/other_user}",
      "gists_url": "https://api.github.com/users/tjarbo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tjarbo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tjarbo/subscriptions",
      "organizations_url": "https://api.github.com/users/tjarbo/orgs",
      "repos_url": "https://api.github.com/users/tjarbo/repos",
      "events_url": "https://api.github.com/users/tjarbo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tjarbo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 98481977,
        "node_id": "MDU6TGFiZWw5ODQ4MTk3Nw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2022-03-08T17:48:33Z",
    "updated_at": "2023-05-10T10:48:33Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4852",
      "html_url": "https://github.com/expressjs/express/pull/4852",
      "diff_url": "https://github.com/expressjs/express/pull/4852.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4852.patch",
      "merged_at": null
    },
    "body": "This pr fixes #4851.\r\n\r\nI have ...\r\n- [X] added a new test that covers my changes\r\n- [X] run linter",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4852/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4852/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4851",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4851/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4851/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4851/events",
    "html_url": "https://github.com/expressjs/express/issues/4851",
    "id": 1162831138,
    "node_id": "I_kwDOAAOeZ85FT2Ui",
    "number": 4851,
    "title": "`res.clearCookie()` does not ignore `maxAge`",
    "user": {
      "login": "tjarbo",
      "id": 16938041,
      "node_id": "MDQ6VXNlcjE2OTM4MDQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/16938041?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tjarbo",
      "html_url": "https://github.com/tjarbo",
      "followers_url": "https://api.github.com/users/tjarbo/followers",
      "following_url": "https://api.github.com/users/tjarbo/following{/other_user}",
      "gists_url": "https://api.github.com/users/tjarbo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tjarbo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tjarbo/subscriptions",
      "organizations_url": "https://api.github.com/users/tjarbo/orgs",
      "repos_url": "https://api.github.com/users/tjarbo/repos",
      "events_url": "https://api.github.com/users/tjarbo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tjarbo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 98481977,
        "node_id": "MDU6TGFiZWw5ODQ4MTk3Nw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2022-03-08T15:58:58Z",
    "updated_at": "2023-05-10T10:49:29Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi everyone!\r\nI just ran into a bug, where `res.clearCookie()` does not work properly.\r\n\r\n## What happen?\r\nAccording to the typescript definitions, `res.clearCookie()` accepts `CookieOptions` as a second parameter (see [here](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/23e0b071471f0120d7c03c5abf206f41e832133b/types/express-serve-static-core/index.d.ts#L920)) which includes the `maxAge` attribute. But if the `maxAge` is set, the cookie won't be deleted.\r\n\r\n## What do I expect?\r\n`.clearCookie()`should ignore (or delete) the `maxAge` attribute, because it is used to calculate the `expire` attribute afterwards in `.cookie()`;\r\n\r\n## Research\r\nI already located the bug and would like to provide a pr to fix this.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4851/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4851/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4850",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4850/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4850/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4850/events",
    "html_url": "https://github.com/expressjs/express/issues/4850",
    "id": 1160754069,
    "node_id": "I_kwDOAAOeZ85FL7OV",
    "number": 4850,
    "title": "Question about v5 supporting old Node versions",
    "user": {
      "login": "rafaell-lycan",
      "id": 1516450,
      "node_id": "MDQ6VXNlcjE1MTY0NTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1516450?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rafaell-lycan",
      "html_url": "https://github.com/rafaell-lycan",
      "followers_url": "https://api.github.com/users/rafaell-lycan/followers",
      "following_url": "https://api.github.com/users/rafaell-lycan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rafaell-lycan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rafaell-lycan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rafaell-lycan/subscriptions",
      "organizations_url": "https://api.github.com/users/rafaell-lycan/orgs",
      "repos_url": "https://api.github.com/users/rafaell-lycan/repos",
      "events_url": "https://api.github.com/users/rafaell-lycan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rafaell-lycan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2022-03-06T23:56:20Z",
    "updated_at": "2022-03-06T23:59:46Z",
    "closed_at": "2022-03-06T23:59:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Mostly/Probably a silly question regarding Node support, *but why keep maintaining old node versions?*\r\n\r\nAFAIK by dropping the old versions of Node and setting a somewhat newer version like v8 at least would not only take advantage of new features but also allow the framework to reduce a considerable amount of code.\r\n\r\nV5 will still require the same good old **Node.js 4+** from 2015 and that's the piece I don't process.\r\n\r\nAs the V5 would be a major release, wouldn't be a good idea to detach that old support in favor of a cleaner code that could potentially make Express faster?\r\n\r\nThat was something I've been thinking over the past days while testing the V5, I definitely know it's nice to give support for old versions, but I guess it should be a limit of how much should be sacrificed in favor of it.\r\n\r\nAnywho, I know for a fact this won't happen soon, but it might be something nice to have in mind on following discussions across the community.\r\n\r\n**Side note here:** My company mostly sticks on the LTS version, and we've upgraded the last services from Node v12 to v16 last year which gave us a nice performance increase overall. I'm wondering how fast Express would be by dropping support to old versions.\r\n\r\nCheers 👋 \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4850/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4850/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4849",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4849/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4849/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4849/events",
    "html_url": "https://github.com/expressjs/express/pull/4849",
    "id": 1160647762,
    "node_id": "PR_kwDOAAOeZ840ARa6",
    "number": 4849,
    "title": "add a comment and refactor layer file",
    "user": {
      "login": "hamidoujand",
      "id": 66955541,
      "node_id": "MDQ6VXNlcjY2OTU1NTQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/66955541?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hamidoujand",
      "html_url": "https://github.com/hamidoujand",
      "followers_url": "https://api.github.com/users/hamidoujand/followers",
      "following_url": "https://api.github.com/users/hamidoujand/following{/other_user}",
      "gists_url": "https://api.github.com/users/hamidoujand/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hamidoujand/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hamidoujand/subscriptions",
      "organizations_url": "https://api.github.com/users/hamidoujand/orgs",
      "repos_url": "https://api.github.com/users/hamidoujand/repos",
      "events_url": "https://api.github.com/users/hamidoujand/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hamidoujand/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2022-03-06T16:03:41Z",
    "updated_at": "2022-03-06T16:26:15Z",
    "closed_at": "2022-03-06T16:05:25Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4849",
      "html_url": "https://github.com/expressjs/express/pull/4849",
      "diff_url": "https://github.com/expressjs/express/pull/4849.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4849.patch",
      "merged_at": null
    },
    "body": null,
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4849/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4849/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4846",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4846/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4846/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4846/events",
    "html_url": "https://github.com/expressjs/express/issues/4846",
    "id": 1156873459,
    "node_id": "I_kwDOAAOeZ85E9Hzz",
    "number": 4846,
    "title": "express still need “view engines”？",
    "user": {
      "login": "ryouaki",
      "id": 9922563,
      "node_id": "MDQ6VXNlcjk5MjI1NjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9922563?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryouaki",
      "html_url": "https://github.com/ryouaki",
      "followers_url": "https://api.github.com/users/ryouaki/followers",
      "following_url": "https://api.github.com/users/ryouaki/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryouaki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryouaki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryouaki/subscriptions",
      "organizations_url": "https://api.github.com/users/ryouaki/orgs",
      "repos_url": "https://api.github.com/users/ryouaki/repos",
      "events_url": "https://api.github.com/users/ryouaki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryouaki/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2022-03-02T09:19:50Z",
    "updated_at": "2022-03-25T04:10:48Z",
    "closed_at": "2022-03-25T04:10:48Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Most people on my side use express just for api server。\r\n\r\nSo, why not remove “view engines” out as a middleware like a single npm package？",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4846/reactions",
      "total_count": 5,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 1,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4846/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4845",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4845/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4845/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4845/events",
    "html_url": "https://github.com/expressjs/express/issues/4845",
    "id": 1155377581,
    "node_id": "I_kwDOAAOeZ85E3amt",
    "number": 4845,
    "title": "Question about typescript",
    "user": {
      "login": "rafaelbellintani",
      "id": 9978368,
      "node_id": "MDQ6VXNlcjk5NzgzNjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9978368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rafaelbellintani",
      "html_url": "https://github.com/rafaelbellintani",
      "followers_url": "https://api.github.com/users/rafaelbellintani/followers",
      "following_url": "https://api.github.com/users/rafaelbellintani/following{/other_user}",
      "gists_url": "https://api.github.com/users/rafaelbellintani/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rafaelbellintani/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rafaelbellintani/subscriptions",
      "organizations_url": "https://api.github.com/users/rafaelbellintani/orgs",
      "repos_url": "https://api.github.com/users/rafaelbellintani/repos",
      "events_url": "https://api.github.com/users/rafaelbellintani/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rafaelbellintani/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2022-03-01T14:02:48Z",
    "updated_at": "2022-03-13T19:05:09Z",
    "closed_at": "2022-03-13T19:05:09Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Is it safe to use @types/express? the last package has been update in 2021. There's another way to use express with ESM?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4845/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4845/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4844",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4844/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4844/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4844/events",
    "html_url": "https://github.com/expressjs/express/issues/4844",
    "id": 1153804954,
    "node_id": "I_kwDOAAOeZ85Exaqa",
    "number": 4844,
    "title": "Wildcards don't work anymore in v5",
    "user": {
      "login": "hrueger",
      "id": 18656830,
      "node_id": "MDQ6VXNlcjE4NjU2ODMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/18656830?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrueger",
      "html_url": "https://github.com/hrueger",
      "followers_url": "https://api.github.com/users/hrueger/followers",
      "following_url": "https://api.github.com/users/hrueger/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrueger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrueger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrueger/subscriptions",
      "organizations_url": "https://api.github.com/users/hrueger/orgs",
      "repos_url": "https://api.github.com/users/hrueger/repos",
      "events_url": "https://api.github.com/users/hrueger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrueger/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 98481977,
        "node_id": "MDU6TGFiZWw5ODQ4MTk3Nw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 11,
    "created_at": "2022-02-28T08:37:52Z",
    "updated_at": "2022-02-28T13:33:56Z",
    "closed_at": "2022-02-28T10:41:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\r\nI'm using express to serve an Angular app. This has a few files which need to be served statically (`index.html`, some css, js and images) and then has its own routing which means that all other URLs need to serve the `index.html`.\r\n\r\nIn Express 4 I was able to do this:\r\n```TypeScript\r\napp.use(\"/\", express.static(\"/app/dist/frontend\", {dotfiles: \"allow\"}));\r\napp.use(\"*\", express.static(\"/app/dist/frontend/index.html\", {dotfiles: \"allow\"}));\r\n```\r\n\r\nHowever, in Express 5 it always returns 404 for `/myCustomRoute`...\r\nHere are the logs (`debug=*`):\r\n```\r\n  body-parser:json skip empty body +13s\r\n  send stat \"A:\\app\\dist\\frontend\\myCustomRoute\" +13s\r\n  finalhandler default 404 +2ms\r\n```\r\n\r\nIt doesn't help to set `fallthrough: true`...\r\n\r\nI'd really like to contribute a fix if you can point me in the right direction. We really need Express 5 because of its improved error handling with promises.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4844/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4844/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4843",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4843/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4843/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4843/events",
    "html_url": "https://github.com/expressjs/express/pull/4843",
    "id": 1153756164,
    "node_id": "PR_kwDOAAOeZ84zpbmK",
    "number": 4843,
    "title": "replace \"replaces\" with \"replacer\" in jsdoc",
    "user": {
      "login": "apeltop",
      "id": 23271922,
      "node_id": "MDQ6VXNlcjIzMjcxOTIy",
      "avatar_url": "https://avatars.githubusercontent.com/u/23271922?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apeltop",
      "html_url": "https://github.com/apeltop",
      "followers_url": "https://api.github.com/users/apeltop/followers",
      "following_url": "https://api.github.com/users/apeltop/following{/other_user}",
      "gists_url": "https://api.github.com/users/apeltop/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apeltop/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apeltop/subscriptions",
      "organizations_url": "https://api.github.com/users/apeltop/orgs",
      "repos_url": "https://api.github.com/users/apeltop/repos",
      "events_url": "https://api.github.com/users/apeltop/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apeltop/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2022-02-28T07:39:16Z",
    "updated_at": "2022-03-18T14:53:15Z",
    "closed_at": "2022-03-01T02:12:05Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4843",
      "html_url": "https://github.com/expressjs/express/pull/4843",
      "diff_url": "https://github.com/expressjs/express/pull/4843.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4843.patch",
      "merged_at": "2022-03-01T02:12:05Z"
    },
    "body": "I hope it helps.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4843/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4843/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4842",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4842/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4842/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4842/events",
    "html_url": "https://github.com/expressjs/express/pull/4842",
    "id": 1153754641,
    "node_id": "PR_kwDOAAOeZ84zpbSM",
    "number": 4842,
    "title": "docs: replace \"replaces\" with \"replacer\" in jsdoc",
    "user": {
      "login": "apeltop",
      "id": 23271922,
      "node_id": "MDQ6VXNlcjIzMjcxOTIy",
      "avatar_url": "https://avatars.githubusercontent.com/u/23271922?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apeltop",
      "html_url": "https://github.com/apeltop",
      "followers_url": "https://api.github.com/users/apeltop/followers",
      "following_url": "https://api.github.com/users/apeltop/following{/other_user}",
      "gists_url": "https://api.github.com/users/apeltop/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apeltop/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apeltop/subscriptions",
      "organizations_url": "https://api.github.com/users/apeltop/orgs",
      "repos_url": "https://api.github.com/users/apeltop/repos",
      "events_url": "https://api.github.com/users/apeltop/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apeltop/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2022-02-28T07:37:00Z",
    "updated_at": "2022-02-28T07:37:13Z",
    "closed_at": "2022-02-28T07:37:13Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4842",
      "html_url": "https://github.com/expressjs/express/pull/4842",
      "diff_url": "https://github.com/expressjs/express/pull/4842.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4842.patch",
      "merged_at": null
    },
    "body": "I hope it helps.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4842/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4842/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4839",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4839/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4839/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4839/events",
    "html_url": "https://github.com/expressjs/express/issues/4839",
    "id": 1148032079,
    "node_id": "I_kwDOAAOeZ85EbZRP",
    "number": 4839,
    "title": "Error when running Express App: \"Primordials not defined\"",
    "user": {
      "login": "PatrickLumenus",
      "id": 49834365,
      "node_id": "MDQ6VXNlcjQ5ODM0MzY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/49834365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PatrickLumenus",
      "html_url": "https://github.com/PatrickLumenus",
      "followers_url": "https://api.github.com/users/PatrickLumenus/followers",
      "following_url": "https://api.github.com/users/PatrickLumenus/following{/other_user}",
      "gists_url": "https://api.github.com/users/PatrickLumenus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PatrickLumenus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PatrickLumenus/subscriptions",
      "organizations_url": "https://api.github.com/users/PatrickLumenus/orgs",
      "repos_url": "https://api.github.com/users/PatrickLumenus/repos",
      "events_url": "https://api.github.com/users/PatrickLumenus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PatrickLumenus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2022-02-23T12:29:47Z",
    "updated_at": "2022-02-23T15:02:34Z",
    "closed_at": "2022-02-23T15:00:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am having this weird issue running my Express app after the project is built using Rollup.\n\n```\nError: Command failed: node /path/to/project/dist/index.js\nfs.js:45\n} = primordials;\n    ^\n\nReferenceError: primordials is not defined\n```\nI wasn't really sure where this was coming from. After reviewing the dependency tree, I noticed that there was an express-handlebars Packsge that dependent on graceful-fs, which depends on the primordials Packsge in question,\n\nHow would I fix this issue?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4839/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4839/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4838",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4838/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4838/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4838/events",
    "html_url": "https://github.com/expressjs/express/issues/4838",
    "id": 1146341077,
    "node_id": "I_kwDOAAOeZ85EU8bV",
    "number": 4838,
    "title": "Express router ignores strict option and incorrectly reports req.baseUrl",
    "user": {
      "login": "gh-andre",
      "id": 7843659,
      "node_id": "MDQ6VXNlcjc4NDM2NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7843659?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gh-andre",
      "html_url": "https://github.com/gh-andre",
      "followers_url": "https://api.github.com/users/gh-andre/followers",
      "following_url": "https://api.github.com/users/gh-andre/following{/other_user}",
      "gists_url": "https://api.github.com/users/gh-andre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gh-andre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gh-andre/subscriptions",
      "organizations_url": "https://api.github.com/users/gh-andre/orgs",
      "repos_url": "https://api.github.com/users/gh-andre/repos",
      "events_url": "https://api.github.com/users/gh-andre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gh-andre/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2022-02-22T00:53:45Z",
    "updated_at": "2022-02-23T01:09:38Z",
    "closed_at": "2022-02-22T00:58:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Using this setup:\r\n```javascript\r\napp.set(\"strict routing\", true);\r\n\r\nlet router_x = express.Router({strict: true});\r\n\r\nrouter_x.use(\"/j/1\", index_get);\r\nrouter_x.use(\"/j\", index_get);\r\nrouter_x.use(not_found);\r\n\r\napp.use(\"/x\", router_x);\r\n\r\napp.get(\"/a/1\", index_get);\r\napp.get(\"/a\", index_get);\r\napp.get(\"/\", index_get);\r\napp.use(not_found);\r\n```\r\nand requesting `/x/j/1`, reports `req.baseUrl` as `/x/j/1` and `req.path` as `/`. I expect the base URL reported as the mount point for the router instance, which is `/x` in this case, but instead it just uses the current route as the base URL. \r\n\r\nMoreover, the router is configured with `strict: true`, but it accepts any additional path segments. For example, I can request `/x/j/3/2/1` and it will report `req.baseUrl` as `/x/j` and `req.path` as `/3/2/1`.\r\n\r\nThe same logic against the application router in the example above works as expected, so requesting `/a/` and `/a/1/` both return `404` and `/a` and `/a/1` both work properly.\r\n\r\nI found this issue about the strict option not being respected if a router is configured with the `/` path, but this is not the case here, so it seems to be a different issue. \r\n\r\nhttps://github.com/expressjs/express/issues/2281\r\n\r\nHere's a more complete sample that shows strict routing working properly at the application level and two routers, one with strict routing and one without, both working the same way.\r\n\r\n[express-route-opts-bug.zip](https://github.com/expressjs/express/files/8112824/express-route-opts-bug.zip)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4838/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4838/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4836",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4836/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4836/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4836/events",
    "html_url": "https://github.com/expressjs/express/issues/4836",
    "id": 1146293240,
    "node_id": "I_kwDOAAOeZ85EUwv4",
    "number": 4836,
    "title": "how to render conditional templates in res.render()",
    "user": {
      "login": "moezbenrebah",
      "id": 57503360,
      "node_id": "MDQ6VXNlcjU3NTAzMzYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/57503360?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/moezbenrebah",
      "html_url": "https://github.com/moezbenrebah",
      "followers_url": "https://api.github.com/users/moezbenrebah/followers",
      "following_url": "https://api.github.com/users/moezbenrebah/following{/other_user}",
      "gists_url": "https://api.github.com/users/moezbenrebah/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/moezbenrebah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/moezbenrebah/subscriptions",
      "organizations_url": "https://api.github.com/users/moezbenrebah/orgs",
      "repos_url": "https://api.github.com/users/moezbenrebah/repos",
      "events_url": "https://api.github.com/users/moezbenrebah/events{/privacy}",
      "received_events_url": "https://api.github.com/users/moezbenrebah/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2022-02-21T23:03:34Z",
    "updated_at": "2022-02-21T23:06:18Z",
    "closed_at": "2022-02-21T23:06:18Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi everyone, I'm a student in web development, I built a web application, where I tried to implement in one of the route handler function a way to render 2 templates whenever its condition is fulfilled, but I didn't figure out how to reach my goal, so I tried like below, but it didn't work:\r\n```js\r\nexports.myBookedTravels = catchAsyncHandler( async(req, res, next) => {\r\n  // find all booked travels based on user id\r\n  const bookedTravels = await Booking.find({ user: req.user.id });\r\n\r\n  // find all travels that includes the above id (bookedTravels)\r\n  const travelsIds = bookedTravels.map(item => item.travel);\r\n  const travels = await Travel.find({ _id: { $in: travelsIds } });\r\n\r\n  // Render the page that contains the booked travels || an empty page with a simple text\r\n  if (!bookedTravels) res.render('nobooking')\r\n  else {\r\n    res.status(200).render('overview', {\r\n      title: 'My travels',\r\n      travels\r\n    });\r\n  }\r\n});\r\n```\r\nSorry, I'm a beginner and I try to find an adequate solution to my case but I didn't, and I'll appreciate your suggestions",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4836/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4836/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4835",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4835/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4835/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4835/events",
    "html_url": "https://github.com/expressjs/express/pull/4835",
    "id": 1146106774,
    "node_id": "PR_kwDOAAOeZ84zPpWN",
    "number": 4835,
    "title": "Ignore settings on Object.prototype",
    "user": {
      "login": "EvanHahn",
      "id": 777712,
      "node_id": "MDQ6VXNlcjc3NzcxMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/777712?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EvanHahn",
      "html_url": "https://github.com/EvanHahn",
      "followers_url": "https://api.github.com/users/EvanHahn/followers",
      "following_url": "https://api.github.com/users/EvanHahn/following{/other_user}",
      "gists_url": "https://api.github.com/users/EvanHahn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EvanHahn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EvanHahn/subscriptions",
      "organizations_url": "https://api.github.com/users/EvanHahn/orgs",
      "repos_url": "https://api.github.com/users/EvanHahn/repos",
      "events_url": "https://api.github.com/users/EvanHahn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EvanHahn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 98481977,
        "node_id": "MDU6TGFiZWw5ODQ4MTk3Nw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2022-02-21T18:19:53Z",
    "updated_at": "2023-04-17T23:11:51Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4835",
      "html_url": "https://github.com/expressjs/express/pull/4835",
      "diff_url": "https://github.com/expressjs/express/pull/4835.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4835.patch",
      "merged_at": null
    },
    "body": "Before:\r\n\r\n```js\r\napp.get('hasOwnProperty');\r\n// => [Function: hasOwnProperty]\r\n\r\napp.enabled('hasOwnProperty');\r\n// => true\r\n```\r\n\r\nAfter:\r\n\r\n```js\r\napp.get('hasOwnProperty');\r\n// => undefined\r\n\r\napp.enabled('hasOwnProperty');\r\n// => false\r\n```\r\n\r\nSee #4802 for more details. Similar to #4803, but for Express 5.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4835/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4835/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4834",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4834/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4834/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4834/events",
    "html_url": "https://github.com/expressjs/express/issues/4834",
    "id": 1145890668,
    "node_id": "I_kwDOAAOeZ85ETOds",
    "number": 4834,
    "title": "res.download building a wrong path when root options is set",
    "user": {
      "login": "Fischerfredl",
      "id": 2673788,
      "node_id": "MDQ6VXNlcjI2NzM3ODg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2673788?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Fischerfredl",
      "html_url": "https://github.com/Fischerfredl",
      "followers_url": "https://api.github.com/users/Fischerfredl/followers",
      "following_url": "https://api.github.com/users/Fischerfredl/following{/other_user}",
      "gists_url": "https://api.github.com/users/Fischerfredl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Fischerfredl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Fischerfredl/subscriptions",
      "organizations_url": "https://api.github.com/users/Fischerfredl/orgs",
      "repos_url": "https://api.github.com/users/Fischerfredl/repos",
      "events_url": "https://api.github.com/users/Fischerfredl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Fischerfredl/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 8497,
        "node_id": "MDU6TGFiZWw4NDk3",
        "url": "https://api.github.com/repos/expressjs/express/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true,
        "description": null
      },
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2022-02-21T14:44:07Z",
    "updated_at": "2022-04-24T22:48:05Z",
    "closed_at": "2022-04-24T22:48:05Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello everyone!\r\n\r\nI just ran into a bug in `res.download` which is also an inconsistency between `res.download` and `res.sendFile`. \r\n\r\n## The bug\r\n\r\n`res.download` breaks for relative paths when specifying a root in the options argument. Express tries to access the following path: `{options.root}/{process.cwd()}/{path}`. Expected is `{options.root}/{path}`\r\n\r\n\r\n## Example\r\n\r\nIn the example below I try to access the file `/dev/null`. The following Error is raised when navigating to `/download` \r\n\r\n```\r\nError: ENOENT: no such file or directory, stat '/dev/home/user/my-project/null'\r\n```\r\n\r\n\r\n```js\r\nconst express = require('express')                                                                            \r\n                                                                                                              \r\nconst app = express()                                                                                         \r\n  .get('/', (req, res) => {                                                                                   \r\n    res.send(`                                                                                                \r\n<ul>                                                                                                          \r\n  <li><a href=\"/sendFile\">res.sendFile</a></li>                                                               \r\n  <li><a href=\"/download\">res.download</a></li>                                                               \r\n</ul>                                                                                                         \r\n`)                                                                                                            \r\n  })                                                                                                          \r\n  .get('/sendFile', (req, res) => {                                                                           \r\n    res.sendFile('null', { root: '/dev' })                                                                    \r\n  })                                                                                                          \r\n  .get('/download', (req, res) => {                                                                           \r\n    res.download('null', 'null', { root: '/dev' })                                                            \r\n  })                                                                                                          \r\n  .listen(() => {                                                                                             \r\n    console.log(`Listening on http://localhost:${app.address().port}`)                                        \r\n  })   \r\n```\r\n\r\n`res.sendFile` works as expected.\r\n\r\n## Expectation\r\n\r\nMy assumption that `res.download` should behave like `res.sendFile` is based on the following line of the [documentation]()\r\n> The optional options argument passes through to the underlying [res.sendFile()](https://expressjs.com/en/4x/api.html#res.sendFile) call, and takes the exact same parameters.\r\n\r\n## Cause\r\n\r\nProblematic is the following line in res.download: [/lib/response.js:575](https://github.com/expressjs/express/blob/master/lib/response.js#L575):\r\n\r\n```js\r\n  // Resolve the full path for sendFile\r\n  var fullPath = resolve(path);\r\n```\r\n\r\nThe resolve method is imported from the 'path' module: https://nodejs.org/api/path.html#pathresolvepaths This is where the current working directory gets added. Anyway `res.sendFile` won't allow relative paths at all without a root specified. So I suggest to leave out the `path.resolve` call at all for a breaking release. For a non breaking fix one could only call `path.resolve` if root is not set in options.\r\n\r\n## Research\r\n\r\nI have only looked briefly but have not found this fixed in the 5.x branch.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4834/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4834/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4833",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4833/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4833/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4833/events",
    "html_url": "https://github.com/expressjs/express/issues/4833",
    "id": 1145881941,
    "node_id": "I_kwDOAAOeZ85ETMVV",
    "number": 4833,
    "title": "Middleware on app.use that will only get called on '/'?",
    "user": {
      "login": "alexndr-n",
      "id": 40042353,
      "node_id": "MDQ6VXNlcjQwMDQyMzUz",
      "avatar_url": "https://avatars.githubusercontent.com/u/40042353?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexndr-n",
      "html_url": "https://github.com/alexndr-n",
      "followers_url": "https://api.github.com/users/alexndr-n/followers",
      "following_url": "https://api.github.com/users/alexndr-n/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexndr-n/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexndr-n/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexndr-n/subscriptions",
      "organizations_url": "https://api.github.com/users/alexndr-n/orgs",
      "repos_url": "https://api.github.com/users/alexndr-n/repos",
      "events_url": "https://api.github.com/users/alexndr-n/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexndr-n/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2022-02-21T14:36:10Z",
    "updated_at": "2022-03-25T04:10:39Z",
    "closed_at": "2022-03-25T04:10:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "So I'm serving a web page on the root route '/', and this page had an authentication middleware. Using regular \r\n\r\n`app.use('/', authorizeFront, express.static('../client/dist'));`\r\n\r\nwould cause every route to be authenticated, which is what I'm trying to avoid. I've also tried using regex to match exactly '/' but it doesn't seem to be working.\r\n\r\n`app.use('/^/$/', authorizeFront, express.static('../client/dist'));`\r\n\r\nIs there any official way to do this? Thanks!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4833/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4833/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4832",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4832/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4832/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4832/events",
    "html_url": "https://github.com/expressjs/express/issues/4832",
    "id": 1145167815,
    "node_id": "I_kwDOAAOeZ85EQd_H",
    "number": 4832,
    "title": "Unable to serve base64 pngs",
    "user": {
      "login": "a-digitalarcana",
      "id": 94761559,
      "node_id": "U_kgDOBaXyVw",
      "avatar_url": "https://avatars.githubusercontent.com/u/94761559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/a-digitalarcana",
      "html_url": "https://github.com/a-digitalarcana",
      "followers_url": "https://api.github.com/users/a-digitalarcana/followers",
      "following_url": "https://api.github.com/users/a-digitalarcana/following{/other_user}",
      "gists_url": "https://api.github.com/users/a-digitalarcana/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/a-digitalarcana/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/a-digitalarcana/subscriptions",
      "organizations_url": "https://api.github.com/users/a-digitalarcana/orgs",
      "repos_url": "https://api.github.com/users/a-digitalarcana/repos",
      "events_url": "https://api.github.com/users/a-digitalarcana/events{/privacy}",
      "received_events_url": "https://api.github.com/users/a-digitalarcana/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2022-02-20T23:33:39Z",
    "updated_at": "2022-02-21T03:00:21Z",
    "closed_at": "2022-02-20T23:37:05Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm trying to serve a dynamically generated png file, but seem to be missing something.  The data appears to be sent, but the browser (Chrome) just renders a broken image icon.\r\n\r\n```\r\nconst express = require('express');\r\nconst app = express();\r\nconst port = 3000;\r\n\r\napp.get('/', function(req, res) {\r\n  res.send(`<img src=\"/png/\"/>`);\r\n});\r\n\r\napp.get(\"/png/\", function(req, res) {\r\n  console.log(\"request img\");\r\n  const img = \"iVBORw0KGgoAAAANSUhEUgAAANwAAADcCAYAAAAbWs+BAAAGwElEQVR4Ae3cwZFbNxBFUY5rkrDTmKAUk5QT03Aa44U22KC7NHptw+DRikVAXf8fzC3u8Hj4R4AAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAgZzAW26USQT+e4HPx+Mz+RRvj0e0kT+SD2cWAQK1gOBqH6sEogKCi3IaRqAWEFztY5VAVEBwUU7DCNQCgqt9rBKICgguymkYgVpAcLWPVQJRAcFFOQ0jUAsIrvaxSiAqILgop2EEagHB1T5WCUQFBBflNIxALSC42scqgaiA4KKchhGoBQRX+1glEBUQXJTTMAK1gOBqH6sEogKCi3IaRqAWeK+Xb1z9iN558fHxcSPS9p2ezx/ROz4e4TtIHt+3j/61hW9f+2+7/+UXbifjewIDAoIbQDWSwE5AcDsZ3xMYEBDcAKqRBHYCgtvJ+J7AgIDgBlCNJLATENxOxvcEBgQEN4BqJIGdgOB2Mr4nMCAguAFUIwnsBAS3k/E9gQEBwQ2gGklgJyC4nYzvCQwICG4A1UgCOwHB7WR8T2BAQHADqEYS2AkIbifjewIDAoIbQDWSwE5AcDsZ3xMYEEjfTzHwiK91B8npd6Q8n8/oGQ/ckRJ9vvQwv3BpUfMIFAKCK3AsEUgLCC4tah6BQkBwBY4lAmkBwaVFzSNQCAiuwLFEIC0guLSoeQQKAcEVOJYIpAUElxY1j0AhILgCxxKBtIDg0qLmESgEBFfgWCKQFhBcWtQ8AoWA4AocSwTSAoJLi5pHoBAQXIFjiUBaQHBpUfMIFAKCK3AsEUgLCC4tah6BQmDgTpPsHSTFs39p6fQ7Q770UsV/Ov19X+2OFL9wxR+rJQJpAcGlRc0jUAgIrsCxRCAtILi0qHkECgHBFTiWCKQFBJcWNY9AISC4AscSgbSA4NKi5hEoBARX4FgikBYQXFrUPAKFgOAKHEsE0gKCS4uaR6AQEFyBY4lAWkBwaVHzCBQCgitwLBFICwguLWoegUJAcAWOJQJpAcGlRc0jUAgIrsCxRCAt8J4eePq89B0ar3ZnyOnve/rfn1+400/I810lILirjtPLnC4guNNPyPNdJSC4q47Ty5wuILjTT8jzXSUguKuO08ucLiC400/I810lILirjtPLnC4guNNPyPNdJSC4q47Ty5wuILjTT8jzXSUguKuO08ucLiC400/I810lILirjtPLnC4guNNPyPNdJSC4q47Ty5wuILjTT8jzXSUguKuO08ucLiC400/I810l8JZ/m78+szP/zI47fJo7Q37vgJ7PHwN/07/3TOv/9gu3avhMYFhAcMPAxhNYBQS3avhMYFhAcMPAxhNYBQS3avhMYFhAcMPAxhNYBQS3avhMYFhAcMPAxhNYBQS3avhMYFhAcMPAxhNYBQS3avhMYFhAcMPAxhNYBQS3avhMYFhAcMPAxhNYBQS3avhMYFhAcMPAxhNYBQS3avhMYFhAcMPAxhNYBQS3avhMYFhg4P6H9J0maYHXuiMlrXf+vOfA33Turf3C5SxNItAKCK4lsoFATkBwOUuTCLQCgmuJbCCQExBcztIkAq2A4FoiGwjkBASXszSJQCsguJbIBgI5AcHlLE0i0AoIriWygUBOQHA5S5MItAKCa4lsIJATEFzO0iQCrYDgWiIbCOQEBJezNIlAKyC4lsgGAjkBweUsTSLQCgiuJbKBQE5AcDlLkwi0Akff//Dz6U+/I6U1/sUNr3bnytl3kPzi4bXb/cK1RDYQyAkILmdpEoFWQHAtkQ0EcgKCy1maRKAVEFxLZAOBnIDgcpYmEWgFBNcS2UAgJyC4nKVJBFoBwbVENhDICQguZ2kSgVZAcC2RDQRyAoLLWZpEoBUQXEtkA4GcgOByliYRaAUE1xLZQCAnILicpUkEWgHBtUQ2EMgJCC5naRKBVkBwLZENBHIC/4M7TXIv+3PS22d24qvdQfL3C/7N5P5i/MLlLE0i0AoIriWygUBOQHA5S5MItAKCa4lsIJATEFzO0iQCrYDgWiIbCOQEBJezNIlAKyC4lsgGAjkBweUsTSLQCgiuJbKBQE5AcDlLkwi0AoJriWwgkBMQXM7SJAKtgOBaIhsI5AQEl7M0iUArILiWyAYCOQHB5SxNItAKCK4lsoFATkBwOUuTCBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIDAvyrwDySEJ2VQgUSoAAAAAElFTkSuQmCC\";\r\n  //res.type('png');\r\n  res.writeHead(200, {\r\n    'Content-Type': 'image/png',\r\n    'Content-Length': img.length\r\n  });\r\n  res.end(img); \r\n});\r\n\r\napp.listen(port, function() {\r\n  console.log(`listening on port ${port}!`)\r\n});\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4832/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4832/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4831",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4831/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4831/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4831/events",
    "html_url": "https://github.com/expressjs/express/issues/4831",
    "id": 1145089712,
    "node_id": "I_kwDOAAOeZ85EQK6w",
    "number": 4831,
    "title": "5.x typescript",
    "user": {
      "login": "naseemkullah",
      "id": 24660299,
      "node_id": "MDQ6VXNlcjI0NjYwMjk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/24660299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naseemkullah",
      "html_url": "https://github.com/naseemkullah",
      "followers_url": "https://api.github.com/users/naseemkullah/followers",
      "following_url": "https://api.github.com/users/naseemkullah/following{/other_user}",
      "gists_url": "https://api.github.com/users/naseemkullah/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naseemkullah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naseemkullah/subscriptions",
      "organizations_url": "https://api.github.com/users/naseemkullah/orgs",
      "repos_url": "https://api.github.com/users/naseemkullah/repos",
      "events_url": "https://api.github.com/users/naseemkullah/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naseemkullah/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2022-02-20T17:53:00Z",
    "updated_at": "2022-02-20T17:55:29Z",
    "closed_at": "2022-02-20T17:55:29Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Would there a PR porting the codebase to typescript for 5.x be well received?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4831/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4831/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4829",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4829/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4829/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4829/events",
    "html_url": "https://github.com/expressjs/express/pull/4829",
    "id": 1144713367,
    "node_id": "PR_kwDOAAOeZ84zLOpB",
    "number": 4829,
    "title": "Removed '$' sign from bash code in README as it is too copied along with the bash code",
    "user": {
      "login": "shree-c",
      "id": 58801143,
      "node_id": "MDQ6VXNlcjU4ODAxMTQz",
      "avatar_url": "https://avatars.githubusercontent.com/u/58801143?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shree-c",
      "html_url": "https://github.com/shree-c",
      "followers_url": "https://api.github.com/users/shree-c/followers",
      "following_url": "https://api.github.com/users/shree-c/following{/other_user}",
      "gists_url": "https://api.github.com/users/shree-c/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shree-c/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shree-c/subscriptions",
      "organizations_url": "https://api.github.com/users/shree-c/orgs",
      "repos_url": "https://api.github.com/users/shree-c/repos",
      "events_url": "https://api.github.com/users/shree-c/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shree-c/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2022-02-19T13:46:53Z",
    "updated_at": "2022-02-19T17:00:11Z",
    "closed_at": "2022-02-19T17:00:11Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4829",
      "html_url": "https://github.com/expressjs/express/pull/4829",
      "diff_url": "https://github.com/expressjs/express/pull/4829.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4829.patch",
      "merged_at": null
    },
    "body": null,
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4829/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4829/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4828",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4828/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4828/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4828/events",
    "html_url": "https://github.com/expressjs/express/issues/4828",
    "id": 1141519577,
    "node_id": "I_kwDOAAOeZ85ECjTZ",
    "number": 4828,
    "title": "Handle async error by default",
    "user": {
      "login": "carsonwah",
      "id": 25053707,
      "node_id": "MDQ6VXNlcjI1MDUzNzA3",
      "avatar_url": "https://avatars.githubusercontent.com/u/25053707?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carsonwah",
      "html_url": "https://github.com/carsonwah",
      "followers_url": "https://api.github.com/users/carsonwah/followers",
      "following_url": "https://api.github.com/users/carsonwah/following{/other_user}",
      "gists_url": "https://api.github.com/users/carsonwah/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carsonwah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carsonwah/subscriptions",
      "organizations_url": "https://api.github.com/users/carsonwah/orgs",
      "repos_url": "https://api.github.com/users/carsonwah/repos",
      "events_url": "https://api.github.com/users/carsonwah/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carsonwah/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2022-02-17T15:51:09Z",
    "updated_at": "2022-02-17T15:58:43Z",
    "closed_at": "2022-02-17T15:58:43Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Right now, the following code will crash and stops the whole server:\r\n\r\n```\r\nconst someAsyncFunc = async () => { throw new Error() }\r\n\r\napp.get('/', async (req, res, next) => {\r\n  await someAsyncFunc();\r\n});\r\n```\r\n\r\nI believe this is not desirable for 99% of the developers.\r\n\r\nFrom [official doc on error handling](https://expressjs.com/en/guide/error-handling.html):\r\n\r\n> For errors returned from asynchronous functions invoked by route handlers and middleware, **you must pass them to the next() function**, where Express will catch and process them.\r\n\r\nBasically developers have to repeat this in all async handlers:\r\n\r\n```\r\napp.get('/', async (req, res, next) => {\r\n  try {\r\n    await someAsyncFunc();\r\n  } catch (err) {\r\n    next(err);\r\n  }\r\n});\r\n```\r\n\r\nTo prevent repeating the code, the best I can do is to use [express-async-handler](https://github.com/Abazhenov/express-async-handler), which is basically a wrapper to do the above:\r\n\r\n```\r\nconst asyncHandler = require('express-async-handler');\r\n\r\napp.get('/', asyncHandler(async (req, res, next) => {\r\n  await someAsyncFunc();\r\n}));\r\n```\r\n\r\nIn synchronous handler, exceptions are already auto-handled by Express. Is there any reason we do not do the same in async case? Why ask user to explicitly do this repeatedly themselves?\r\n\r\nIf there is no specific reason, I would suggest auto-handling async exception as a feature request.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4828/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4828/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4827",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4827/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4827/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4827/events",
    "html_url": "https://github.com/expressjs/express/issues/4827",
    "id": 1140874647,
    "node_id": "I_kwDOAAOeZ85EAF2X",
    "number": 4827,
    "title": "how Port multiplexing with node express？",
    "user": {
      "login": "hktalent",
      "id": 18223385,
      "node_id": "MDQ6VXNlcjE4MjIzMzg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/18223385?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hktalent",
      "html_url": "https://github.com/hktalent",
      "followers_url": "https://api.github.com/users/hktalent/followers",
      "following_url": "https://api.github.com/users/hktalent/following{/other_user}",
      "gists_url": "https://api.github.com/users/hktalent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hktalent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hktalent/subscriptions",
      "organizations_url": "https://api.github.com/users/hktalent/orgs",
      "repos_url": "https://api.github.com/users/hktalent/repos",
      "events_url": "https://api.github.com/users/hktalent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hktalent/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 18291,
        "node_id": "MDU6TGFiZWwxODI5MQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2022-02-17T04:50:59Z",
    "updated_at": "2022-02-17T15:48:38Z",
    "closed_at": "2022-02-17T15:48:38Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "how Port multiplexing with node express？\r\n\r\nI want to use one port for web netcat and express  web app\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4827/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4827/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4826",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4826/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4826/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4826/events",
    "html_url": "https://github.com/expressjs/express/issues/4826",
    "id": 1140803041,
    "node_id": "I_kwDOAAOeZ85D_0Xh",
    "number": 4826,
    "title": "void' is not assignable to type 'Send<any, Response<any, Record<string, any>>>",
    "user": {
      "login": "maggie44",
      "id": 64841595,
      "node_id": "MDQ6VXNlcjY0ODQxNTk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/64841595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maggie44",
      "html_url": "https://github.com/maggie44",
      "followers_url": "https://api.github.com/users/maggie44/followers",
      "following_url": "https://api.github.com/users/maggie44/following{/other_user}",
      "gists_url": "https://api.github.com/users/maggie44/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maggie44/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maggie44/subscriptions",
      "organizations_url": "https://api.github.com/users/maggie44/orgs",
      "repos_url": "https://api.github.com/users/maggie44/repos",
      "events_url": "https://api.github.com/users/maggie44/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maggie44/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2022-02-17T02:36:42Z",
    "updated_at": "2022-03-14T16:53:15Z",
    "closed_at": "2022-02-17T02:40:10Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am working on some middleware that caches responses and coding in Typescript. My `res.send` line however, reports an error in Visual Studio.\r\n\r\n```\r\nType '(body: any) => void' is not assignable to type 'Send<any, Response<any, Record<string, any>>>'.\r\n  Type 'void' is not assignable to type 'Response<any, Record<string, any>>'.ts(2322)\r\n```\r\n\r\nIf I add a return statement to the code, the error goes away (`return body`). But then this piece of code runs twice (if I put console.log('test') in there, I see the message twice and subsequently it is caching items twice), once for the return statement and once for `res.sendResponse(body)` it seems. \r\n\r\nThe basic idea of this piece comes from here in JS: https://medium.com/the-node-js-collection/simple-server-side-cache-for-express-js-with-node-js-45ff296ca0f0\r\n\r\n```\r\n        res.sendResponse = res.send\r\n        res.send = (body) => {\r\n          res.sendResponse(body)\r\n          if (req.method === 'GET') {\r\n            // Only use cache on GET requests. When not GET, this middleware only acts as a queue.\r\n            requestCache.push({\r\n              cachedData: body, // Add the new item to the permanent cache\r\n              queueName: req.url, // Add the request URL to the item for later reference\r\n              runtime: new Date().getTime() // Add the time the request was made\r\n            })\r\n          }\r\n        }\r\n```\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4826/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4826/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4825",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4825/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4825/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4825/events",
    "html_url": "https://github.com/expressjs/express/issues/4825",
    "id": 1140293545,
    "node_id": "I_kwDOAAOeZ85D93-p",
    "number": 4825,
    "title": "[feature request] disable decode_param for path routing",
    "user": {
      "login": "lublak",
      "id": 44057030,
      "node_id": "MDQ6VXNlcjQ0MDU3MDMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/44057030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lublak",
      "html_url": "https://github.com/lublak",
      "followers_url": "https://api.github.com/users/lublak/followers",
      "following_url": "https://api.github.com/users/lublak/following{/other_user}",
      "gists_url": "https://api.github.com/users/lublak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lublak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lublak/subscriptions",
      "organizations_url": "https://api.github.com/users/lublak/orgs",
      "repos_url": "https://api.github.com/users/lublak/repos",
      "events_url": "https://api.github.com/users/lublak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lublak/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2022-02-16T16:41:08Z",
    "updated_at": "2022-02-17T10:14:48Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have some special urls thats get mapped to local files like image50%.png.\r\n\r\n```\r\napp.get('/open/:path(*)', (req, res) => {})\r\n```\r\n\r\nBut it doesn't work because express automaticly calls decode_param.\r\nIt throws `Failed to decode param`.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4825/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4825/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4824",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4824/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4824/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4824/events",
    "html_url": "https://github.com/expressjs/express/issues/4824",
    "id": 1140074038,
    "node_id": "I_kwDOAAOeZ85D9CY2",
    "number": 4824,
    "title": "HTTP HEAD request giving ERR_STREAM_WRITE_AFTER_END error with node express 4.x",
    "user": {
      "login": "jatinseth2007",
      "id": 8512903,
      "node_id": "MDQ6VXNlcjg1MTI5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8512903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jatinseth2007",
      "html_url": "https://github.com/jatinseth2007",
      "followers_url": "https://api.github.com/users/jatinseth2007/followers",
      "following_url": "https://api.github.com/users/jatinseth2007/following{/other_user}",
      "gists_url": "https://api.github.com/users/jatinseth2007/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jatinseth2007/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jatinseth2007/subscriptions",
      "organizations_url": "https://api.github.com/users/jatinseth2007/orgs",
      "repos_url": "https://api.github.com/users/jatinseth2007/repos",
      "events_url": "https://api.github.com/users/jatinseth2007/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jatinseth2007/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 95025063,
        "node_id": "MDU6TGFiZWw5NTAyNTA2Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2022-02-16T14:12:03Z",
    "updated_at": "2022-03-27T06:10:22Z",
    "closed_at": "2022-03-27T06:10:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have a health check route for my application which we use to check the application's health, it's a ```GET``` route but clients send ```HTTP HEAD``` call to the same route but I am getting ```ERR_STREAM_WRITE_AFTER_END``` error. When digging into that I found out whenever I try to send response data for type ```HEAD``` call this error comes but couldn't find the actual reason for the same. Can someone explain why it's behaving this way? The sample code is given below.\r\n\r\nCode with error, it's giving error even with ```res.json``` and ```res.send```\r\n\r\n````\r\nrouter.get('/health', function (req, res) {\r\n    res.send({\r\n        message: \"working great!!!\"\r\n    });\r\n    res.end();\r\n});\r\n````",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4824/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4824/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4821",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4821/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4821/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4821/events",
    "html_url": "https://github.com/expressjs/express/issues/4821",
    "id": 1136316482,
    "node_id": "I_kwDOAAOeZ85DutBC",
    "number": 4821,
    "title": "Needs to has a better static",
    "user": {
      "login": "Mruhankhan",
      "id": 71145148,
      "node_id": "MDQ6VXNlcjcxMTQ1MTQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/71145148?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mruhankhan",
      "html_url": "https://github.com/Mruhankhan",
      "followers_url": "https://api.github.com/users/Mruhankhan/followers",
      "following_url": "https://api.github.com/users/Mruhankhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mruhankhan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mruhankhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mruhankhan/subscriptions",
      "organizations_url": "https://api.github.com/users/Mruhankhan/orgs",
      "repos_url": "https://api.github.com/users/Mruhankhan/repos",
      "events_url": "https://api.github.com/users/Mruhankhan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mruhankhan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2022-02-13T19:16:06Z",
    "updated_at": "2022-03-13T19:05:36Z",
    "closed_at": "2022-03-13T19:05:36Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Express is nice and I use it most on my projects but it need to get rid of making static file in roughts I dont want to make a folder for every html file. ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4821/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4821/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4818",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4818/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4818/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4818/events",
    "html_url": "https://github.com/expressjs/express/issues/4818",
    "id": 1128471221,
    "node_id": "I_kwDOAAOeZ85DQxq1",
    "number": 4818,
    "title": "TypeError: callSite.getFileName is not a function",
    "user": {
      "login": "snehahaldankar",
      "id": 18206617,
      "node_id": "MDQ6VXNlcjE4MjA2NjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/18206617?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/snehahaldankar",
      "html_url": "https://github.com/snehahaldankar",
      "followers_url": "https://api.github.com/users/snehahaldankar/followers",
      "following_url": "https://api.github.com/users/snehahaldankar/following{/other_user}",
      "gists_url": "https://api.github.com/users/snehahaldankar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/snehahaldankar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/snehahaldankar/subscriptions",
      "organizations_url": "https://api.github.com/users/snehahaldankar/orgs",
      "repos_url": "https://api.github.com/users/snehahaldankar/repos",
      "events_url": "https://api.github.com/users/snehahaldankar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/snehahaldankar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2022-02-09T12:21:20Z",
    "updated_at": "2022-03-13T19:06:04Z",
    "closed_at": "2022-03-13T19:06:04Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Tried changing node version to 10,12,14. No luck.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4818/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4818/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4817",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4817/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4817/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4817/events",
    "html_url": "https://github.com/expressjs/express/issues/4817",
    "id": 1127799858,
    "node_id": "I_kwDOAAOeZ85DONwy",
    "number": 4817,
    "title": "No default jsDelivr CDN file set",
    "user": {
      "login": "natasha-955",
      "id": 99059221,
      "node_id": "U_kgDOBeeGFQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/99059221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/natasha-955",
      "html_url": "https://github.com/natasha-955",
      "followers_url": "https://api.github.com/users/natasha-955/followers",
      "following_url": "https://api.github.com/users/natasha-955/following{/other_user}",
      "gists_url": "https://api.github.com/users/natasha-955/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/natasha-955/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/natasha-955/subscriptions",
      "organizations_url": "https://api.github.com/users/natasha-955/orgs",
      "repos_url": "https://api.github.com/users/natasha-955/repos",
      "events_url": "https://api.github.com/users/natasha-955/events{/privacy}",
      "received_events_url": "https://api.github.com/users/natasha-955/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2022-02-08T21:56:58Z",
    "updated_at": "2022-02-08T22:09:12Z",
    "closed_at": "2022-02-08T22:06:13Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "[This package](https://www.jsdelivr.com/package/npm/express) doesn't have a [default file](https://www.jsdelivr.com/features#publishing-packages) set. You can set it via `jsdelivr`, `browser`, or `main` field in `package.json`",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4817/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4817/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4814",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4814/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4814/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4814/events",
    "html_url": "https://github.com/expressjs/express/pull/4814",
    "id": 1125243100,
    "node_id": "PR_kwDOAAOeZ84yIiws",
    "number": 4814,
    "title": "replace wierd syntax with clear expression",
    "user": {
      "login": "thst71",
      "id": 49093997,
      "node_id": "MDQ6VXNlcjQ5MDkzOTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/49093997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thst71",
      "html_url": "https://github.com/thst71",
      "followers_url": "https://api.github.com/users/thst71/followers",
      "following_url": "https://api.github.com/users/thst71/following{/other_user}",
      "gists_url": "https://api.github.com/users/thst71/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thst71/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thst71/subscriptions",
      "organizations_url": "https://api.github.com/users/thst71/orgs",
      "repos_url": "https://api.github.com/users/thst71/repos",
      "events_url": "https://api.github.com/users/thst71/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thst71/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2022-02-06T16:05:05Z",
    "updated_at": "2022-02-08T03:24:25Z",
    "closed_at": "2022-02-08T03:24:25Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4814",
      "html_url": "https://github.com/expressjs/express/pull/4814",
      "diff_url": "https://github.com/expressjs/express/pull/4814.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4814.patch",
      "merged_at": "2022-02-08T03:24:25Z"
    },
    "body": "The use of `!~` hides the completely understandable `apiKeys.indexOf(key) < 0` or `if(!apiKeys.includes(key))`.\r\nSince this is example code, this should be crisp and clean. \r\nI don't see any advantage or improvement in the use of a \"bitwise negation of -1 is 0 and thus falsy, so I can use a boolean not on it for my if statement\" to replace a straight \"result is less than 0\". I even would consider it is slower than a simple compare, since it's two operations. The newer API (includes) is even more literate in coding style. \r\nI suggest this is fixed.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4814/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4814/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4812",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4812/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4812/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4812/events",
    "html_url": "https://github.com/expressjs/express/pull/4812",
    "id": 1125000233,
    "node_id": "PR_kwDOAAOeZ84yH19J",
    "number": 4812,
    "title": "chore(std bump): Updated debug's version to 4.3.3",
    "user": {
      "login": "imjamesb",
      "id": 35933830,
      "node_id": "MDQ6VXNlcjM1OTMzODMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/35933830?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/imjamesb",
      "html_url": "https://github.com/imjamesb",
      "followers_url": "https://api.github.com/users/imjamesb/followers",
      "following_url": "https://api.github.com/users/imjamesb/following{/other_user}",
      "gists_url": "https://api.github.com/users/imjamesb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/imjamesb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/imjamesb/subscriptions",
      "organizations_url": "https://api.github.com/users/imjamesb/orgs",
      "repos_url": "https://api.github.com/users/imjamesb/repos",
      "events_url": "https://api.github.com/users/imjamesb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/imjamesb/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 133578716,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/deps",
        "name": "deps",
        "color": "444444",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2022-02-05T18:29:50Z",
    "updated_at": "2022-02-05T18:35:00Z",
    "closed_at": "2022-02-05T18:34:31Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4812",
      "html_url": "https://github.com/expressjs/express/pull/4812",
      "diff_url": "https://github.com/expressjs/express/pull/4812.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4812.patch",
      "merged_at": null
    },
    "body": "There's an issue with debug showing different timestamp formats on different versions. As far as I'm aware it introduces no errors to upgrade.\r\n\r\nhttps://github.com/debug-js/debug/issues/867\r\n\r\n@Qix- asked to be mentioned",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4812/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4812/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4811",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4811/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4811/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4811/events",
    "html_url": "https://github.com/expressjs/express/issues/4811",
    "id": 1124940400,
    "node_id": "I_kwDOAAOeZ85DDTpw",
    "number": 4811,
    "title": "npm ERR! syscall rename",
    "user": {
      "login": "Nit-nit",
      "id": 94877880,
      "node_id": "U_kgDOBae4uA",
      "avatar_url": "https://avatars.githubusercontent.com/u/94877880?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Nit-nit",
      "html_url": "https://github.com/Nit-nit",
      "followers_url": "https://api.github.com/users/Nit-nit/followers",
      "following_url": "https://api.github.com/users/Nit-nit/following{/other_user}",
      "gists_url": "https://api.github.com/users/Nit-nit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Nit-nit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Nit-nit/subscriptions",
      "organizations_url": "https://api.github.com/users/Nit-nit/orgs",
      "repos_url": "https://api.github.com/users/Nit-nit/repos",
      "events_url": "https://api.github.com/users/Nit-nit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Nit-nit/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2022-02-05T14:11:56Z",
    "updated_at": "2022-02-05T18:45:08Z",
    "closed_at": "2022-02-05T18:45:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "```js\n~ $ npm install express --save\nnpm ERR! code ENOTEMPTY\nnpm ERR! syscall rename\nnpm ERR! path /data/data/com.termux/files/home/node_modules/ansi-styles\nnpm ERR! dest /data/data/com.termux/files/home/node_modules/.ansi-styles-RPQb6dFf\nnpm ERR! errno -39\nnpm ERR! ENOTEMPTY: directory not empty, rename '/data/data/com.termux/files/home/node_modules/ansi-styles' -> '/data/data/com.termux/files/home/node_modules/.ansi-styles-RPQb6dFf'\n\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     /data/data/com.termux/files/home/.npm/_logs/2022-02-05T14_08_26_599Z-debug-0.log\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4811/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4811/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4810",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4810/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4810/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4810/events",
    "html_url": "https://github.com/expressjs/express/issues/4810",
    "id": 1124932368,
    "node_id": "I_kwDOAAOeZ85DDRsQ",
    "number": 4810,
    "title": " Unable to send a 404 error using Node.js with express #40 ",
    "user": {
      "login": "sal-420",
      "id": 37274311,
      "node_id": "MDQ6VXNlcjM3Mjc0MzEx",
      "avatar_url": "https://avatars.githubusercontent.com/u/37274311?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sal-420",
      "html_url": "https://github.com/sal-420",
      "followers_url": "https://api.github.com/users/sal-420/followers",
      "following_url": "https://api.github.com/users/sal-420/following{/other_user}",
      "gists_url": "https://api.github.com/users/sal-420/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sal-420/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sal-420/subscriptions",
      "organizations_url": "https://api.github.com/users/sal-420/orgs",
      "repos_url": "https://api.github.com/users/sal-420/repos",
      "events_url": "https://api.github.com/users/sal-420/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sal-420/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2022-02-05T13:34:07Z",
    "updated_at": "2022-02-16T05:07:20Z",
    "closed_at": "2022-02-15T17:07:34Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Using VS Code, WIN10, express@4.17.2 , Node v16.13.1, NPM 8.1.2 and Simple Rest Client v1.4.2\r\n\r\nI am learning therefore I do not know if this is a Node or Express issue.\r\n['object object ]' is returned in the response instead of the expected status code and message\r\n\r\nThe error line --> return res.status(404).send({message: 'user does not exist'});\r\nalso tried --> return res.status(404).json({message: 'user does not exist'});\r\n\r\nImages of found (good) and not found (bad) posted on postimage.org https://postimg.cc/gallery/z855xh2\r\n\r\nThe complete function where the error occurs.\r\n```js\r\nrouter.get('/accounts/:user', (req, res) => {\r\nconst user = req.params.user;\r\nconsole.log('at ' + user);\r\nconst account = db[user];\r\nif (!account) {\r\nconsole.log('about to send 404 response');\r\n  return res.status(404).send({message: 'user does not exist'});\r\n}\r\nreturn res.json(account);\r\n});\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4810/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4810/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4809",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4809/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4809/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4809/events",
    "html_url": "https://github.com/expressjs/express/issues/4809",
    "id": 1124640190,
    "node_id": "I_kwDOAAOeZ85DCKW-",
    "number": 4809,
    "title": "feat: Ignore folders created by ideas",
    "user": {
      "login": "Ricardo-Costa",
      "id": 13888035,
      "node_id": "MDQ6VXNlcjEzODg4MDM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13888035?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ricardo-Costa",
      "html_url": "https://github.com/Ricardo-Costa",
      "followers_url": "https://api.github.com/users/Ricardo-Costa/followers",
      "following_url": "https://api.github.com/users/Ricardo-Costa/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ricardo-Costa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ricardo-Costa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ricardo-Costa/subscriptions",
      "organizations_url": "https://api.github.com/users/Ricardo-Costa/orgs",
      "repos_url": "https://api.github.com/users/Ricardo-Costa/repos",
      "events_url": "https://api.github.com/users/Ricardo-Costa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ricardo-Costa/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2022-02-04T21:42:14Z",
    "updated_at": "2022-02-04T21:43:41Z",
    "closed_at": "2022-02-04T21:43:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Just update the .gitignore file so it doesn't see unnecessary folders.\r\n\r\n![Screenshot_20220204_181555](https://user-images.githubusercontent.com/13888035/152604151-2df0a04e-eef3-4eef-a466-77dd62c13d94.png)",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4809/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4809/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4808",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4808/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4808/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4808/events",
    "html_url": "https://github.com/expressjs/express/issues/4808",
    "id": 1124416696,
    "node_id": "I_kwDOAAOeZ85DBTy4",
    "number": 4808,
    "title": "EADDRINUSE code in express",
    "user": {
      "login": "tarunsinghh",
      "id": 6620331,
      "node_id": "MDQ6VXNlcjY2MjAzMzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6620331?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tarunsinghh",
      "html_url": "https://github.com/tarunsinghh",
      "followers_url": "https://api.github.com/users/tarunsinghh/followers",
      "following_url": "https://api.github.com/users/tarunsinghh/following{/other_user}",
      "gists_url": "https://api.github.com/users/tarunsinghh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tarunsinghh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tarunsinghh/subscriptions",
      "organizations_url": "https://api.github.com/users/tarunsinghh/orgs",
      "repos_url": "https://api.github.com/users/tarunsinghh/repos",
      "events_url": "https://api.github.com/users/tarunsinghh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tarunsinghh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2022-02-04T16:59:02Z",
    "updated_at": "2022-04-01T16:58:42Z",
    "closed_at": "2022-02-04T17:02:22Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "\r\n```js\r\n// using nodejs we can write code to retry to listen on port using\r\nconst server = http.createServer().listen(3000);\r\nserver.on('error',function(err) {\r\n    if (err.code === 'EADDRINUSE') {\r\n        console.log('Address in use, retrying...');\r\n        setTimeout(() => {\r\n            server.close();\r\n            server.listen(3000, 'localhost');\r\n        }, 1000);\r\n    }\r\n});\r\n```\r\nhow to do this same thing in express \r\n```js\r\nconst app = require('express')();\r\napp.on('err',function(err) {\r\nconsole.log('error occured'); // this doesnt work\r\n});\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4808/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4808/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4807",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4807/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4807/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4807/events",
    "html_url": "https://github.com/expressjs/express/issues/4807",
    "id": 1124140542,
    "node_id": "I_kwDOAAOeZ85DAQX-",
    "number": 4807,
    "title": "[suggestion] send/respond with blob",
    "user": {
      "login": "jimmywarting",
      "id": 1148376,
      "node_id": "MDQ6VXNlcjExNDgzNzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1148376?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimmywarting",
      "html_url": "https://github.com/jimmywarting",
      "followers_url": "https://api.github.com/users/jimmywarting/followers",
      "following_url": "https://api.github.com/users/jimmywarting/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimmywarting/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimmywarting/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimmywarting/subscriptions",
      "organizations_url": "https://api.github.com/users/jimmywarting/orgs",
      "repos_url": "https://api.github.com/users/jimmywarting/repos",
      "events_url": "https://api.github.com/users/jimmywarting/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimmywarting/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 163600,
        "node_id": "MDU6TGFiZWwxNjM2MDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2022-02-04T12:17:45Z",
    "updated_at": "2023-05-29T21:24:51Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "NodeJS now has support for Blob's globally, \r\n...earlier you had to load it from `require('buffer').Blob`\r\n\r\nit would be cool / awesome if it where possible to respond with a Blob by doing something like\r\n\r\n```js\r\nconst str = `<h1>Hello World</h1>`\r\nconst blob = new Blob([str], { type: 'text/html' })\r\nconst file = new File([blob], 'index.html', { type: 'text/html' })\r\n\r\napp.get('/', (req, res) => {\r\n  res.send(blob) // or:\r\n  res.download(blob, 'name.html')\r\n  res.download(file) // name taken from file instead\r\n})\r\n```\r\n\r\nDoing this would take care of \r\n1. Setting the response header `content-type` to the blob's type (only if content-type haven't been set manually)\r\n2. Setting the response header `content-length` to the blob's size\r\n3. and pipe the data from `blob.stream()` to the response\r\n4. if you used `res.download(blob)` then it would also add content-disposition attachment header\r\n\r\n<s>it's also looking like if node will at some point add a way of getting blobs from the filesystem also, but i don't know when.\r\nref: https://github.com/nodejs/node/issues/39015</s>\r\n\r\nedit: NodeJS just shipped `fs.openAsBlob(path, { type })` in v20+\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4807/reactions",
      "total_count": 11,
      "+1": 11,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4807/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4805",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4805/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4805/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4805/events",
    "html_url": "https://github.com/expressjs/express/pull/4805",
    "id": 1123757434,
    "node_id": "PR_kwDOAAOeZ84yD4Pc",
    "number": 4805,
    "title": "lib: fix typo ocurred -> occurred",
    "user": {
      "login": "caioagiani",
      "id": 56451511,
      "node_id": "MDQ6VXNlcjU2NDUxNTEx",
      "avatar_url": "https://avatars.githubusercontent.com/u/56451511?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/caioagiani",
      "html_url": "https://github.com/caioagiani",
      "followers_url": "https://api.github.com/users/caioagiani/followers",
      "following_url": "https://api.github.com/users/caioagiani/following{/other_user}",
      "gists_url": "https://api.github.com/users/caioagiani/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/caioagiani/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/caioagiani/subscriptions",
      "organizations_url": "https://api.github.com/users/caioagiani/orgs",
      "repos_url": "https://api.github.com/users/caioagiani/repos",
      "events_url": "https://api.github.com/users/caioagiani/events{/privacy}",
      "received_events_url": "https://api.github.com/users/caioagiani/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2022-02-04T02:55:34Z",
    "updated_at": "2022-02-04T04:56:12Z",
    "closed_at": "2022-02-04T04:50:07Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4805",
      "html_url": "https://github.com/expressjs/express/pull/4805",
      "diff_url": "https://github.com/expressjs/express/pull/4805.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4805.patch",
      "merged_at": "2022-02-04T04:50:08Z"
    },
    "body": "- `lib/response.js`: ocurred -> **occurred**",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4805/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4805/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4804",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4804/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4804/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4804/events",
    "html_url": "https://github.com/expressjs/express/issues/4804",
    "id": 1123651818,
    "node_id": "I_kwDOAAOeZ85C-ZDq",
    "number": 4804,
    "title": "Having 'index.html' file in root directory of static assets causes weird behaviors",
    "user": {
      "login": "shuaibw",
      "id": 57074038,
      "node_id": "MDQ6VXNlcjU3MDc0MDM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/57074038?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shuaibw",
      "html_url": "https://github.com/shuaibw",
      "followers_url": "https://api.github.com/users/shuaibw/followers",
      "following_url": "https://api.github.com/users/shuaibw/following{/other_user}",
      "gists_url": "https://api.github.com/users/shuaibw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shuaibw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shuaibw/subscriptions",
      "organizations_url": "https://api.github.com/users/shuaibw/orgs",
      "repos_url": "https://api.github.com/users/shuaibw/repos",
      "events_url": "https://api.github.com/users/shuaibw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shuaibw/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2022-02-03T23:19:29Z",
    "updated_at": "2022-02-04T01:28:35Z",
    "closed_at": "2022-02-03T23:23:35Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "```\r\napp.js\r\nfrontend/\r\n    index.html\r\n    home.html\r\n````\r\nSuppose I have the above file structure in my project, and the following code in app.js.\r\n```\r\nconst morgan = require('morgan');\r\nconst express = require('express');\r\n\r\nconst app = express();\r\napp.use(express.static('frontend'));\r\napp.use(morgan('dev'));\r\n\r\napp.listen(3000, () => {\r\n    console.log('Server listeing at 3000');\r\n});\r\n\r\n```\r\nClearly, there's not a single HTTP request handling in app.js. But if you type `http://localhost:3000` in your browser, it automatically loads the index.html page for you, without logging any HTTP request. It should have displayed `Cannot GET /`, but it doesn't.\r\nIf you rename the `index.html` to any other name, say `login.html`, then going to `http://localhost:3000` displays the message `Cannot GET /`, which is as expected.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4804/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4804/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4803",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4803/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4803/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4803/events",
    "html_url": "https://github.com/expressjs/express/pull/4803",
    "id": 1122554574,
    "node_id": "PR_kwDOAAOeZ84x_8CK",
    "number": 4803,
    "title": "Ignore settings on Object.prototype",
    "user": {
      "login": "EvanHahn",
      "id": 777712,
      "node_id": "MDQ6VXNlcjc3NzcxMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/777712?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EvanHahn",
      "html_url": "https://github.com/EvanHahn",
      "followers_url": "https://api.github.com/users/EvanHahn/followers",
      "following_url": "https://api.github.com/users/EvanHahn/following{/other_user}",
      "gists_url": "https://api.github.com/users/EvanHahn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EvanHahn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EvanHahn/subscriptions",
      "organizations_url": "https://api.github.com/users/EvanHahn/orgs",
      "repos_url": "https://api.github.com/users/EvanHahn/repos",
      "events_url": "https://api.github.com/users/EvanHahn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EvanHahn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/18",
      "html_url": "https://github.com/expressjs/express/milestone/18",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/18/labels",
      "id": 5234171,
      "node_id": "MDk6TWlsZXN0b25lNTIzNDE3MQ==",
      "number": 18,
      "title": "4.18",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 15,
      "state": "closed",
      "created_at": "2020-03-24T23:16:48Z",
      "updated_at": "2022-04-24T22:50:58Z",
      "due_on": null,
      "closed_at": "2022-04-24T22:50:58Z"
    },
    "comments": 1,
    "created_at": "2022-02-03T01:18:44Z",
    "updated_at": "2022-02-21T17:27:46Z",
    "closed_at": "2022-02-21T16:28:20Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4803",
      "html_url": "https://github.com/expressjs/express/pull/4803",
      "diff_url": "https://github.com/expressjs/express/pull/4803.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4803.patch",
      "merged_at": "2022-02-21T16:28:20Z"
    },
    "body": "Before:\r\n\r\n```js\r\napp.get('hasOwnProperty');\r\n// => [Function: hasOwnProperty]\r\n\r\napp.enabled('hasOwnProperty');\r\n// => true\r\n```\r\n\r\nAfter:\r\n\r\n```js\r\napp.get('hasOwnProperty');\r\n// => undefined\r\n\r\napp.enabled('hasOwnProperty');\r\n// => false\r\n```\r\n\r\nSee #4802 for more details.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4803/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4803/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4802",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4802/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4802/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4802/events",
    "html_url": "https://github.com/expressjs/express/issues/4802",
    "id": 1122531007,
    "node_id": "I_kwDOAAOeZ85C6Ha_",
    "number": 4802,
    "title": "Settings includes values on Object.prototype",
    "user": {
      "login": "EvanHahn",
      "id": 777712,
      "node_id": "MDQ6VXNlcjc3NzcxMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/777712?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EvanHahn",
      "html_url": "https://github.com/EvanHahn",
      "followers_url": "https://api.github.com/users/EvanHahn/followers",
      "following_url": "https://api.github.com/users/EvanHahn/following{/other_user}",
      "gists_url": "https://api.github.com/users/EvanHahn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EvanHahn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EvanHahn/subscriptions",
      "organizations_url": "https://api.github.com/users/EvanHahn/orgs",
      "repos_url": "https://api.github.com/users/EvanHahn/repos",
      "events_url": "https://api.github.com/users/EvanHahn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EvanHahn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2022-02-03T00:39:16Z",
    "updated_at": "2022-04-24T22:48:05Z",
    "closed_at": "2022-04-24T22:48:05Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "App settings pull from `Object.prototype` if they're missing on the `settings` object.\r\n\r\n```js\r\nconst app = require('express')();\r\n\r\napp.get('hasOwnProperty');\r\n// => [Function: hasOwnProperty]\r\n\r\napp.enabled('hasOwnProperty');\r\n// => true\r\n```\r\n\r\nIs this intentional? If not, I'm happy to help fix.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4802/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4802/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4800",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4800/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4800/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4800/events",
    "html_url": "https://github.com/expressjs/express/issues/4800",
    "id": 1120640585,
    "node_id": "I_kwDOAAOeZ85Cy55J",
    "number": 4800,
    "title": "Route paths do only prefix matching - unable to add $ to last route param (to mark end of route)",
    "user": {
      "login": "Sebi2020",
      "id": 1862664,
      "node_id": "MDQ6VXNlcjE4NjI2NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1862664?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sebi2020",
      "html_url": "https://github.com/Sebi2020",
      "followers_url": "https://api.github.com/users/Sebi2020/followers",
      "following_url": "https://api.github.com/users/Sebi2020/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sebi2020/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sebi2020/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sebi2020/subscriptions",
      "organizations_url": "https://api.github.com/users/Sebi2020/orgs",
      "repos_url": "https://api.github.com/users/Sebi2020/repos",
      "events_url": "https://api.github.com/users/Sebi2020/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sebi2020/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2022-02-01T12:59:09Z",
    "updated_at": "2022-02-04T05:47:19Z",
    "closed_at": "2022-02-01T13:14:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "For example if you have a route like:\r\n`/app/:param1`\r\nThis route is matched not only by `/app/[value]`, but also by `/app/[value]/any/long/trailing/stuff/that/should/not/be/part/of/route`.\r\nI tried to explicitly tell express, that the route should end with param1 without any trailing parameters (or slashes)  by modifying the route like this: `/app/:param1$`, but it looks like this is not possible.\r\nAt least in an TypeScript environment Typescript interprets the `$` as a part of the route parameter name (thus the parameter is expected to be accessed via `req.params.param1$` instead of `req.params.param1`).\r\n\r\n`express` version:  4.17.2\r\n`@types/express` version: 4.17.13",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4800/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4800/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4799",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4799/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4799/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4799/events",
    "html_url": "https://github.com/expressjs/express/issues/4799",
    "id": 1119021899,
    "node_id": "I_kwDOAAOeZ85CsutL",
    "number": 4799,
    "title": "Chrome is not set my cookies on Frontend (ReactJs) which is come from Backend (ExpressJs) application.",
    "user": {
      "login": "naseemkhan7021",
      "id": 35251956,
      "node_id": "MDQ6VXNlcjM1MjUxOTU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/35251956?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naseemkhan7021",
      "html_url": "https://github.com/naseemkhan7021",
      "followers_url": "https://api.github.com/users/naseemkhan7021/followers",
      "following_url": "https://api.github.com/users/naseemkhan7021/following{/other_user}",
      "gists_url": "https://api.github.com/users/naseemkhan7021/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naseemkhan7021/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naseemkhan7021/subscriptions",
      "organizations_url": "https://api.github.com/users/naseemkhan7021/orgs",
      "repos_url": "https://api.github.com/users/naseemkhan7021/repos",
      "events_url": "https://api.github.com/users/naseemkhan7021/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naseemkhan7021/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 95025063,
        "node_id": "MDU6TGFiZWw5NTAyNTA2Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2022-01-31T06:17:47Z",
    "updated_at": "2022-02-22T04:37:05Z",
    "closed_at": "2022-02-22T04:37:04Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Is there anyone please tell me why my chrome is not setting my cookie on the client-side ?? I try many times to see all possible solutions but still got the same issue in chrome(client site).\r\n\r\n**My DevTool Header.** **why both table is not matched ????**\r\n![cose1](https://user-images.githubusercontent.com/35251956/151747180-f771c485-90e5-48e6-9499-1367c7504db2.png)\r\n\r\n**Chrome Issue says**\r\n![cose2](https://user-images.githubusercontent.com/35251956/151747210-d89f4cb4-c9ee-4d60-8178-00a8942e613d.png)\r\n\r\n**Response Headers**\r\n![cose3](https://user-images.githubusercontent.com/35251956/151747259-2c078875-20f8-48ca-bcfb-ecd13796200f.png)\r\n\r\n**Request Headers**\r\n![cose4](https://user-images.githubusercontent.com/35251956/151747269-2e065354-4cb4-4518-b88f-a77c3029faf7.png)\r\n\r\n**Cors Setting in Express Backend**\r\n![cose5](https://user-images.githubusercontent.com/35251956/151747282-e25dde8c-9fed-4c5e-b121-8a16804b0530.png)\r\n\r\n**Cookie config in Express Backend**\r\n![cose6](https://user-images.githubusercontent.com/35251956/151747301-3f737346-1401-4775-a97d-e63d73b8e76c.png)\r\n\r\n**Axios Call in Frontend**\r\n![cose7](https://user-images.githubusercontent.com/35251956/151747334-ac2c7aa7-42e3-494d-9169-4d0447f1ea0a.png)\r\n\r\n**Frontend Dependencies**\r\n![cose8](https://user-images.githubusercontent.com/35251956/151747492-58bbcabd-4d0e-4548-8f04-cd1172c45d44.png)\r\n\r\n**Backend Dependencies**\r\n![cose9](https://user-images.githubusercontent.com/35251956/151747500-295d38a3-3d5a-42a7-ab88-4461fb0e025d.png)\r\n\r\n**I also changed my dependencies version both Frontend and Backend. But still does not work. I also changed SameSite and secure both for 'Lax', 'Strict', and 'None'.**\r\n\r\n**The same code was running properly in my other application. !!**\r\n\r\n**Please see all photos 👆👆 to understand my question better**",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4799/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 1,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4799/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4798",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4798/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4798/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4798/events",
    "html_url": "https://github.com/expressjs/express/issues/4798",
    "id": 1118248626,
    "node_id": "I_kwDOAAOeZ85Cpx6y",
    "number": 4798,
    "title": "support for Babel 7 / ES6",
    "user": {
      "login": "Windrill",
      "id": 13634511,
      "node_id": "MDQ6VXNlcjEzNjM0NTEx",
      "avatar_url": "https://avatars.githubusercontent.com/u/13634511?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Windrill",
      "html_url": "https://github.com/Windrill",
      "followers_url": "https://api.github.com/users/Windrill/followers",
      "following_url": "https://api.github.com/users/Windrill/following{/other_user}",
      "gists_url": "https://api.github.com/users/Windrill/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Windrill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Windrill/subscriptions",
      "organizations_url": "https://api.github.com/users/Windrill/orgs",
      "repos_url": "https://api.github.com/users/Windrill/repos",
      "events_url": "https://api.github.com/users/Windrill/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Windrill/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2022-01-29T15:29:35Z",
    "updated_at": "2022-01-29T15:49:16Z",
    "closed_at": "2022-01-29T15:44:07Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "trying to use common module exports (export function test() {{) using express.js and Babel version 7, but transpiling using Babel caused errors pop up from express's dependencies.\r\n\r\nExpress's dependency bodyparser (indierect ) and depd (direct dependency)\r\n```\r\nindex.js:252\r\n  var file = callSite.getFileName() || '<anonymous>'\r\n                      ^\r\n\r\nTypeError: callSite.getFileName is not a function\r\n```\r\n\r\n```\r\n  \"dependencies\": {\r\n    \"@babel/cli\": \"^7.16.8\",\r\n    \"@babel/node\": \"^7.16.8\",\r\n    \"ejs\": \"^3.1.6\",\r\n    \"express\": \"^4.17.1\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@babel/core\": \"^7.16.12\",\r\n    \"@babel/preset-env\": \"^7.16.11\",\r\n    \"nodemon\": \"^2.0.7\"\r\n  }\r\n  \"scripts\": {\r\n    \"start\": \"nodemon index.js --exec babel-node\",\r\n  },\r\n```\r\nbabel's settings for reference:\r\n```\r\n{\r\n  \"presets\": [\r\n    \"@babel/preset-env\"\r\n  ]\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4798/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4798/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4797",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4797/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4797/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4797/events",
    "html_url": "https://github.com/expressjs/express/issues/4797",
    "id": 1116698003,
    "node_id": "I_kwDOAAOeZ85Cj3WT",
    "number": 4797,
    "title": "Some test files fail if I run them seperately",
    "user": {
      "login": "rishabh-arya95",
      "id": 22667644,
      "node_id": "MDQ6VXNlcjIyNjY3NjQ0",
      "avatar_url": "https://avatars.githubusercontent.com/u/22667644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rishabh-arya95",
      "html_url": "https://github.com/rishabh-arya95",
      "followers_url": "https://api.github.com/users/rishabh-arya95/followers",
      "following_url": "https://api.github.com/users/rishabh-arya95/following{/other_user}",
      "gists_url": "https://api.github.com/users/rishabh-arya95/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rishabh-arya95/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rishabh-arya95/subscriptions",
      "organizations_url": "https://api.github.com/users/rishabh-arya95/orgs",
      "repos_url": "https://api.github.com/users/rishabh-arya95/repos",
      "events_url": "https://api.github.com/users/rishabh-arya95/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rishabh-arya95/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578714,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/tests",
        "name": "tests",
        "color": "944008",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2022-01-27T20:17:13Z",
    "updated_at": "2022-02-02T07:00:23Z",
    "closed_at": "2022-02-02T07:00:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I was doing local development, If I execute some test files separately they fail with TypeError exception\r\n\r\nexample:\r\n ```\r\n  app\r\n    .engine(ext, fn)\r\n      1) should map a template engine\r\n\r\n\r\n  0 passing (12ms)\r\n  1 failing\r\n\r\n  1) app\r\n       .engine(ext, fn)\r\n         should map a template engine:\r\n     Uncaught TypeError: Cannot read property 'equal' of undefined\r\n      at /private/tmp/express/test/app.engine.js:25:20\r\n      at /private/tmp/express/test/app.engine.js:10:5\r\n      at FSReqCallback.readFileAfterClose [as oncomplete] (internal/fs/read_file_context.js:73:3)\r\n\r\n```\r\nI see `should` has not been imported in some files so that is the reason, it would we better if we import it in the test  files wherever required and not make files dependent on each other.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4797/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4797/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4794",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4794/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4794/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4794/events",
    "html_url": "https://github.com/expressjs/express/pull/4794",
    "id": 1113515237,
    "node_id": "PR_kwDOAAOeZ84xikc5",
    "number": 4794,
    "title": "Issue #4788 - ESM Module Example",
    "user": {
      "login": "Segmentational",
      "id": 60639231,
      "node_id": "MDQ6VXNlcjYwNjM5MjMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/60639231?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Segmentational",
      "html_url": "https://github.com/Segmentational",
      "followers_url": "https://api.github.com/users/Segmentational/followers",
      "following_url": "https://api.github.com/users/Segmentational/following{/other_user}",
      "gists_url": "https://api.github.com/users/Segmentational/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Segmentational/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Segmentational/subscriptions",
      "organizations_url": "https://api.github.com/users/Segmentational/orgs",
      "repos_url": "https://api.github.com/users/Segmentational/repos",
      "events_url": "https://api.github.com/users/Segmentational/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Segmentational/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2022-01-25T07:18:01Z",
    "updated_at": "2022-02-17T05:33:15Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4794",
      "html_url": "https://github.com/expressjs/express/pull/4794",
      "diff_url": "https://github.com/expressjs/express/pull/4794.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4794.patch",
      "merged_at": null
    },
    "body": "It's getting incredibly late here, but I mocked up a quick example that demonstrates how to use `express` via an ESM module. I've been using ECMA modules for a little while now, and can include a much more complex example upon request. There's a bit of power using modules vs. the CommonJS approach. Imho, as an example, it's a bit easier to add middleware. There's a lot of ease, too, when using `async`. \r\n\r\nHowever, `express@^5` is required. I believe this has to do with the impressive compatibility `express` has kept with the various node versions. ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4794/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4794/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4791",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4791/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4791/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4791/events",
    "html_url": "https://github.com/expressjs/express/issues/4791",
    "id": 1113466314,
    "node_id": "I_kwDOAAOeZ85CXiXK",
    "number": 4791,
    "title": "Express. static invalid in PM2 production environment",
    "user": {
      "login": "whitedxz",
      "id": 82805837,
      "node_id": "MDQ6VXNlcjgyODA1ODM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/82805837?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/whitedxz",
      "html_url": "https://github.com/whitedxz",
      "followers_url": "https://api.github.com/users/whitedxz/followers",
      "following_url": "https://api.github.com/users/whitedxz/following{/other_user}",
      "gists_url": "https://api.github.com/users/whitedxz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/whitedxz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/whitedxz/subscriptions",
      "organizations_url": "https://api.github.com/users/whitedxz/orgs",
      "repos_url": "https://api.github.com/users/whitedxz/repos",
      "events_url": "https://api.github.com/users/whitedxz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/whitedxz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2022-01-25T06:08:08Z",
    "updated_at": "2022-02-02T06:59:51Z",
    "closed_at": "2022-02-02T06:59:51Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "\r\nIs what circumstance can make static resource is invalid, I met this problem in a production environment, the path I'm sure the server is a path, through the \"domain name\" (HTTTP: / / www.xx.xx/resourceName) \"access return status code is\" 404 \", However, in a development environment access through (\"localhost:9000/ resource name \") is fine\r\n\r\nmy  code:\r\napp.use(express.static(path.join(__dirname, '../public')));",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4791/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4791/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4789",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4789/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4789/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4789/events",
    "html_url": "https://github.com/expressjs/express/issues/4789",
    "id": 1112310718,
    "node_id": "I_kwDOAAOeZ85CTIO-",
    "number": 4789,
    "title": "Server.close doesn't clean idle keep-alive connections",
    "user": {
      "login": "Taxi4you",
      "id": 41004207,
      "node_id": "MDQ6VXNlcjQxMDA0MjA3",
      "avatar_url": "https://avatars.githubusercontent.com/u/41004207?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Taxi4you",
      "html_url": "https://github.com/Taxi4you",
      "followers_url": "https://api.github.com/users/Taxi4you/followers",
      "following_url": "https://api.github.com/users/Taxi4you/following{/other_user}",
      "gists_url": "https://api.github.com/users/Taxi4you/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Taxi4you/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Taxi4you/subscriptions",
      "organizations_url": "https://api.github.com/users/Taxi4you/orgs",
      "repos_url": "https://api.github.com/users/Taxi4you/repos",
      "events_url": "https://api.github.com/users/Taxi4you/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Taxi4you/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2022-01-24T08:17:47Z",
    "updated_at": "2022-01-24T14:41:33Z",
    "closed_at": "2022-01-24T14:08:53Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Currently, there is no way to gracefully shutdown Node.js apps written with Express.\r\n\r\n`server.close()`\r\n\r\nWill hold for hours, since there keep-alive connections holding it.\r\n\r\nWhat about adding new feature to fix the server.close and make it a robust one?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4789/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4789/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4788",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4788/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4788/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4788/events",
    "html_url": "https://github.com/expressjs/express/issues/4788",
    "id": 1110705788,
    "node_id": "I_kwDOAAOeZ85CNAZ8",
    "number": 4788,
    "title": "Native support for esm clients",
    "user": {
      "login": "plastikfan",
      "id": 49785914,
      "node_id": "MDQ6VXNlcjQ5Nzg1OTE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/49785914?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/plastikfan",
      "html_url": "https://github.com/plastikfan",
      "followers_url": "https://api.github.com/users/plastikfan/followers",
      "following_url": "https://api.github.com/users/plastikfan/following{/other_user}",
      "gists_url": "https://api.github.com/users/plastikfan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/plastikfan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/plastikfan/subscriptions",
      "organizations_url": "https://api.github.com/users/plastikfan/orgs",
      "repos_url": "https://api.github.com/users/plastikfan/repos",
      "events_url": "https://api.github.com/users/plastikfan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/plastikfan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 18291,
        "node_id": "MDU6TGFiZWwxODI5MQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1",
        "default": false,
        "description": null
      },
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2022-01-21T17:11:36Z",
    "updated_at": "2022-02-18T11:02:05Z",
    "closed_at": "2022-02-18T11:02:05Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Attempting to import from express from an esm package, does not currently work:\r\n\r\n```javascript\r\nimport express from \"express\";\r\n```\r\n\r\nTaking a look at express's root index.js reveals:\r\n\r\n```javascript\r\nmodule.exports = require('./lib/express');\r\n```\r\n\r\nthis is not compatible with esm clients. The client needs to use the esm require workaround, but the user may not be aware of what this is. Eg, I am currently using rollup/typescript in an esm module and attempted to import express and was faced with a confusing error message that did not accurately reflect the problem at hand:\r\n\r\n```\r\n[16:21:47] Error: Unexpected token (Note that you need @rollup/plugin-json to import JSON files)\r\n    at error (file:///home/plastikfan/dev/tutorials/auth0/auth0-node-express-tut/node_modules/rollup/dist/es/shared/rollup.js:10332:30)\r\n    at Module.error (file:///home/plastikfan/dev/tutorials/auth0/auth0-node-express-tut/node_modules/rollup/dist/es/shared/rollup.js:12251:16)\r\n    at Module.tryParse (file:///home/plastikfan/dev/tutorials/auth0/auth0-node-express-tut/node_modules/rollup/dist/es/shared/rollup.js:12654:25)\r\n    at Module.setSource (file:///home/plastikfan/dev/tutorials/auth0/auth0-node-express-tut/node_modules/rollup/dist/es/shared/rollup.js:12557:24)\r\n    at ModuleLoader.addModuleSource (file:///home/plastikfan/dev/tutorials/auth0/auth0-node-express-tut/node_modules/rollup/dist/es/shared/rollup.js:22021:20)\r\n```\r\n\r\nThe user needs to esm require instead (but really ought not to):\r\n\r\n```javascript\r\nimport { createRequire } from \"module\";\r\nconst require = createRequire(import.meta.url);\r\nconst express = require(\"express\");\r\n```\r\n\r\nNow that esm is becoming established it would be good for express to get onboard the esm bandwagon and natively support it for a better developer exprience.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4788/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4788/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4787",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4787/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4787/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4787/events",
    "html_url": "https://github.com/expressjs/express/pull/4787",
    "id": 1107686776,
    "node_id": "PR_kwDOAAOeZ84xPgfc",
    "number": 4787,
    "title": "update copyright dates across the project",
    "user": {
      "login": "marsonya",
      "id": 16393876,
      "node_id": "MDQ6VXNlcjE2MzkzODc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/16393876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marsonya",
      "html_url": "https://github.com/marsonya",
      "followers_url": "https://api.github.com/users/marsonya/followers",
      "following_url": "https://api.github.com/users/marsonya/following{/other_user}",
      "gists_url": "https://api.github.com/users/marsonya/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marsonya/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marsonya/subscriptions",
      "organizations_url": "https://api.github.com/users/marsonya/orgs",
      "repos_url": "https://api.github.com/users/marsonya/repos",
      "events_url": "https://api.github.com/users/marsonya/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marsonya/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2022-01-19T06:09:26Z",
    "updated_at": "2022-01-19T06:11:54Z",
    "closed_at": "2022-01-19T06:10:35Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4787",
      "html_url": "https://github.com/expressjs/express/pull/4787",
      "diff_url": "https://github.com/expressjs/express/pull/4787.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4787.patch",
      "merged_at": null
    },
    "body": "the copyright year was last updated in 2015.\r\nset the copyright to latest (2022) date.\r\n\r\nchanges are in js files and LICENSE file.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4787/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4787/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4786",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4786/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4786/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4786/events",
    "html_url": "https://github.com/expressjs/express/issues/4786",
    "id": 1106058826,
    "node_id": "I_kwDOAAOeZ85B7R5K",
    "number": 4786,
    "title": "routes conflict ",
    "user": {
      "login": "amirho1",
      "id": 53734934,
      "node_id": "MDQ6VXNlcjUzNzM0OTM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/53734934?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amirho1",
      "html_url": "https://github.com/amirho1",
      "followers_url": "https://api.github.com/users/amirho1/followers",
      "following_url": "https://api.github.com/users/amirho1/following{/other_user}",
      "gists_url": "https://api.github.com/users/amirho1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amirho1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amirho1/subscriptions",
      "organizations_url": "https://api.github.com/users/amirho1/orgs",
      "repos_url": "https://api.github.com/users/amirho1/repos",
      "events_url": "https://api.github.com/users/amirho1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amirho1/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2022-01-17T16:30:58Z",
    "updated_at": "2022-01-19T06:30:58Z",
    "closed_at": "2022-01-17T17:21:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "problem with routes I have a work route and I want to get data in two ways one an individual work with id (/:id) and a list of works that can have limits and skip  as parameters (/:limit/:skip) but the problem is here that whatever I try to send to the second route (/:limit/:skip) will reach to the first one (/:id) I changed the  order of routes and did some other tricks the funniest part is I tried to add a route to stop the conflict  => (/withParams/:limit/:skip) but it's reaching as params to the (/:id) routes => \"withParams\"  \r\n\r\nI want to mention that I'm using express besides next.js  \r\n\r\nthe work routes file\r\n```javascript\r\nimport express from \"express\";\r\nimport { Work, joiSchema } from \"../db/models/work\";\r\nimport { CallbackError } from \"mongoose\";\r\n\r\nconst router = express.Router();\r\nrouter.get(\"/withParams/:limit/:skip\", async (req, res) => {\r\n  console.log(req.params);\r\n  try {\r\n    await Work.find()\r\n      .then(data =>\r\n        res.header({ \"Content-Type\": \"application/json\" }).send(data)\r\n      )\r\n      .catch(err => res.status(500).send(err));\r\n  } catch (err) {\r\n    res.status(500).send();\r\n  }\r\n});\r\n\r\nrouter.get(\"/:id\", async ({ params: { id } }, res) => {\r\n  if (!id || isNaN(+id)) return res.status(400).send(\"bad request\");\r\n  try {\r\n    await Work.findOne({ _id: id })\r\n      .then(data => {\r\n        if (!data)\r\n          return res.status(404).send(`user with id:${id} doesn't exist`);\r\n        res.header({ \"Content-Type\": \"application/json\" }).send(data);\r\n      })\r\n      .catch(err => {\r\n        res.status(500).send(err);\r\n      });\r\n  } catch (err) {\r\n    res.status(500).send(err);\r\n  }\r\n});\r\n\r\nrouter.post(\"/\", async ({ body }, res) => {\r\n  try {\r\n    if (!body) {\r\n      return res.status(400).send(\"body object is undefined\");\r\n    }\r\n    const { error } = joiSchema.validate(body);\r\n    if (error) {\r\n      return res.status(400).send(error.message);\r\n    }\r\n\r\n    Work.create(body, (err: CallbackError, item: any) => {\r\n      if (err) console.error(err);\r\n      else {\r\n        item.save();\r\n        res.send(item);\r\n      }\r\n    });\r\n  } catch (err) {\r\n    res.status(500).send(err);\r\n  }\r\n});\r\n\r\nrouter.delete(\"/:id\", async ({ params: { id } }, res) => {\r\n  try {\r\n    if (!id) return res.status(400).send(\"id parameter is required\");\r\n\r\n    await Work.deleteOne({ _id: id })\r\n      .then(data => {\r\n        if (data.deletedCount) res.send(data);\r\n        else res.status(404).send(`there isn't any user with id: ${id}`);\r\n      })\r\n      .catch(err => res.status(500).send(err));\r\n  } catch (err) {\r\n    res.status(500).send(err);\r\n  }\r\n});\r\n\r\nrouter.put(\"/:id\", async ({ params: { id }, body }, res) => {\r\n  try {\r\n    const { error } = joiSchema.validate(body);\r\n\r\n    if (!error)\r\n      await Work.updateOne({ _id: id }, body)\r\n        .then(data => {\r\n          res.send(JSON.stringify(data));\r\n        })\r\n        .catch(err => {\r\n          res.status(404).send(`User with id: ${id} doesn't exist`);\r\n        });\r\n    else res.status(400).send(error);\r\n  } catch (err) {\r\n    res.status(500).send(err);\r\n  }\r\n});\r\n\r\nexport default router;\r\n\r\n```\r\n\r\nand I use a separate file for using routes \r\n```javascript \r\nimport { Express } from \"express\";\r\nimport userRouter from \"./user\";\r\nimport worksRouter from \"./works\";\r\nimport authRouter from \"./auth\";\r\nimport signoutRouter from \"./signout\";\r\nimport isLoginRouter from \"./isLogin\";\r\nimport whose from \"./whose\";\r\n\r\nexport default function routes(server: Express, handle: any) {\r\n  server.use(\"/api/users\", userRouter);\r\n  server.use(\"/api/works\", worksRouter);\r\n  server.use(\"/api/auth\", authRouter);\r\n  server.use(\"/api/signout\", signoutRouter);\r\n  server.use(\"/api/isLogin\", isLoginRouter);\r\n  server.use(\"/api/whose\", whose);\r\n}\r\n```\r\n\r\nthe request that I'm sending \r\n```javascript\r\nexport const getWorks = createAsyncThunk(\"work/get\", async () => {\r\n  try {\r\n    const result = await Api({\r\n      method: \"GET\",\r\n      url: \"/api/works/withParams\",\r\n      params: { limit: 10, skip: 10 },\r\n    });\r\n    return result.data;\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n});\r\n```\r\n\r\n\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4786/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4786/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4784",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4784/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4784/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4784/events",
    "html_url": "https://github.com/expressjs/express/issues/4784",
    "id": 1105008938,
    "node_id": "I_kwDOAAOeZ85B3Rkq",
    "number": 4784,
    "title": "Express route param is undefined when I use express.Router()",
    "user": {
      "login": "ItsRealmy",
      "id": 43610767,
      "node_id": "MDQ6VXNlcjQzNjEwNzY3",
      "avatar_url": "https://avatars.githubusercontent.com/u/43610767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ItsRealmy",
      "html_url": "https://github.com/ItsRealmy",
      "followers_url": "https://api.github.com/users/ItsRealmy/followers",
      "following_url": "https://api.github.com/users/ItsRealmy/following{/other_user}",
      "gists_url": "https://api.github.com/users/ItsRealmy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ItsRealmy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ItsRealmy/subscriptions",
      "organizations_url": "https://api.github.com/users/ItsRealmy/orgs",
      "repos_url": "https://api.github.com/users/ItsRealmy/repos",
      "events_url": "https://api.github.com/users/ItsRealmy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ItsRealmy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2022-01-16T10:07:49Z",
    "updated_at": "2022-01-16T10:11:03Z",
    "closed_at": "2022-01-16T10:10:55Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "So imagine if the current file I'm in is an express.Router() for the endpoint /post.\r\n\r\nI tried to require a different router within the /post router called /:id (which is a url param), sorta like this: `router.use(\"/:id\", require(\"./idRouter\"));`. So, if I go to idRouter.js (which' route is /post/:id) and write something like this:\r\n\r\n```js\r\nrouter.get(\"/like\", (req, res) => {\r\n  console.log(req.params.id)\r\n  res.send({status:\"SUCCESS\"});\r\n});\r\n```\r\n\r\nAnd then if I go to the endpoint in a browser (for example /post/12345/like) it does respond with {\"status\":\"SUCCESS\"} but `req.params.id` is undefined, so I can't use it. Is this a bug or is this deliberate (for some reason)?\r\n\r\nNote: `req.params` is an empty object",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4784/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4784/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4783",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4783/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4783/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4783/events",
    "html_url": "https://github.com/expressjs/express/issues/4783",
    "id": 1097051826,
    "node_id": "I_kwDOAAOeZ85BY66y",
    "number": 4783,
    "title": "Res.locals data changes during async/await",
    "user": {
      "login": "ColtraneNadler",
      "id": 8130184,
      "node_id": "MDQ6VXNlcjgxMzAxODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8130184?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ColtraneNadler",
      "html_url": "https://github.com/ColtraneNadler",
      "followers_url": "https://api.github.com/users/ColtraneNadler/followers",
      "following_url": "https://api.github.com/users/ColtraneNadler/following{/other_user}",
      "gists_url": "https://api.github.com/users/ColtraneNadler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ColtraneNadler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ColtraneNadler/subscriptions",
      "organizations_url": "https://api.github.com/users/ColtraneNadler/orgs",
      "repos_url": "https://api.github.com/users/ColtraneNadler/repos",
      "events_url": "https://api.github.com/users/ColtraneNadler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ColtraneNadler/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2022-01-08T22:44:29Z",
    "updated_at": "2022-02-02T20:18:27Z",
    "closed_at": "2022-02-02T20:18:27Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I've never experienced this before...\r\nbut the res.locals object in one handler will change to point to the locals object of another authenticated user if they make a request around the same time while waiting for the database call to comeback via await.\r\n\r\nUsing-\r\n\"connect-redis\": \"^6.0.0\",\r\n    \"cookie-parser\": \"^1.4.6\",\r\n    \"dotenv\": \"^10.0.0\",\r\n    \"ejs\": \"^3.1.6\",\r\n    \"express\": \"^4.17.2\",\r\n    \"express-session\": \"^1.17.2\",\r\n    \"ioredis\": \"^4.28.2\",\r\n\r\ni.e in the following code-\r\nreq.user.id = 5, res.locals.user.id = 5\r\nafter await response\r\nreq.user.id = 5, res.locals.user.id = 20 *or some other user's id, if they made a request around the same time\r\n\r\n```\r\napp.get('/dashboard', auth, async (req, res) => {\r\n\tlet default_date = new Date();\r\n\r\n\tif (req.user.subscription) {\r\n\t\tlet additional_message;\r\n\t\tif(!req.user.subscription.active) {\r\n\t\t\tif (req.user.subscription.failure_reason != \"\") {\r\n\t\t\t\tadditional_message = \"Error\";\r\n\t\t\t}\r\n\t\t\treturn res.redirect('/account#nav-payment');\r\n\t\t}\r\n\t} else {\r\n\t\treturn res.send(404);\r\n\t}\r\n\r\n\tconsole.log('req user / res user', req.user.id, res.locals.user.id);\r\n\tlet online = await User.findAll({\r\n\t\twhere: { last_seen: { [Op.gte]: Date.now() - 1000 * 60 * 30 } },\r\n\t\tattributes: ['name', 'is_advisor', 'id']\r\n\t})\r\n\tconsole.log('req user / res user', req.user.id, res.locals.user.id);\r\n\tres.render('dashboard', {online});\r\n});\r\n```\r\n\r\nHas anyone ever experienced this? If so, do you know how to fix this?\r\nOtherwise it's rendering a different user's information when they hit certain routes with async/await in the request handlers.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4783/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4783/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4782",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4782/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4782/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4782/events",
    "html_url": "https://github.com/expressjs/express/issues/4782",
    "id": 1096864109,
    "node_id": "I_kwDOAAOeZ85BYNFt",
    "number": 4782,
    "title": "one element array in request query is being parsed as string",
    "user": {
      "login": "phyokyawdev",
      "id": 71428841,
      "node_id": "MDQ6VXNlcjcxNDI4ODQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/71428841?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phyokyawdev",
      "html_url": "https://github.com/phyokyawdev",
      "followers_url": "https://api.github.com/users/phyokyawdev/followers",
      "following_url": "https://api.github.com/users/phyokyawdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/phyokyawdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phyokyawdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phyokyawdev/subscriptions",
      "organizations_url": "https://api.github.com/users/phyokyawdev/orgs",
      "repos_url": "https://api.github.com/users/phyokyawdev/repos",
      "events_url": "https://api.github.com/users/phyokyawdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phyokyawdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2022-01-08T08:05:18Z",
    "updated_at": "2022-01-08T08:27:48Z",
    "closed_at": "2022-01-08T08:27:48Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "    \"compression\": \"^1.7.4\",\r\n    \"cookie-session\": \"^1.4.0\",\r\n    \"express\": \"^4.17.1\",\r\n    \"express-actuator\": \"^1.8.0\",\r\n    \"express-async-errors\": \"^3.1.1\",\r\n    \"express-validator\": \"^6.14.0\",\r\n    \"helmet\": \"^4.6.0\",",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4782/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4782/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4780",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4780/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4780/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4780/events",
    "html_url": "https://github.com/expressjs/express/issues/4780",
    "id": 1093878326,
    "node_id": "I_kwDOAAOeZ85BM0I2",
    "number": 4780,
    "title": "why app.get() get called twice and the second one with \"as=json\" query string appended?",
    "user": {
      "login": "frankchen76",
      "id": 9618662,
      "node_id": "MDQ6VXNlcjk2MTg2NjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9618662?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frankchen76",
      "html_url": "https://github.com/frankchen76",
      "followers_url": "https://api.github.com/users/frankchen76/followers",
      "following_url": "https://api.github.com/users/frankchen76/following{/other_user}",
      "gists_url": "https://api.github.com/users/frankchen76/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frankchen76/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frankchen76/subscriptions",
      "organizations_url": "https://api.github.com/users/frankchen76/orgs",
      "repos_url": "https://api.github.com/users/frankchen76/repos",
      "events_url": "https://api.github.com/users/frankchen76/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frankchen76/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2022-01-05T00:55:32Z",
    "updated_at": "2022-01-05T04:05:06Z",
    "closed_at": "2022-01-05T04:05:06Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I created a simple code\r\n```javascript\r\nconst express = require('express');\r\nconst favicon = require('serve-favicon');\r\nconst path = require('path');\r\nconst utils = require('./utils');\r\n\r\nconst port = process.env.PORT || 3000;\r\nconst app = express();\r\n\r\napp.use(favicon(path.join(__dirname, '../public', 'favicon.ico')));\r\n\r\n// Log request\r\napp.use(utils.appLogger);\r\n\r\napp.get('/test.html', (req, res) => {\r\n    console.log(\"test.html\");\r\n    return res.send(\"<H1>test</H1>\");\r\n});\r\n\r\n// root route - serve static file\r\napp.get('/', (req, res) => {\r\n    return res.sendFile(path.join(__dirname, '../public/client.html'));\r\n\r\n});\r\n\r\n// Catch errors\r\napp.use(utils.logErrors);\r\napp.use(utils.clientError404Handler);\r\napp.use(utils.clientError500Handler);\r\napp.use(utils.errorHandler);\r\n\r\napp.listen(port, () => {\r\n    console.log(`Server has started on port ${port}!`);\r\n});\r\n\r\n```\r\nwhen I visited http://locahost:3000/test.html, I got the below log from console\r\n```BASH\r\nC:\\GitHub\\Samples\\js-e2e-express-server-main>npm start\r\n\r\n> js-e2e-express-server@1.0.0 start C:\\GitHub\\Samples\\js-e2e-express-server-main\r\n> nodemon dist/server3.js\r\n\r\n[nodemon] to restart at any time, enter `rs`\r\n[nodemon] watching path(s): *.*\r\n[nodemon] watching extensions: js,mjs,json\r\n[nodemon] starting `node dist/server3.js`\r\nServer has started on port 3000!\r\n::1 - GET /test.html 200\r\ntest.html\r\n::1 - GET /test.html?as=json 200\r\ntest.html\r\n```\r\nCan people help me to understand why test.html got called twice and second one with \"as=json\" query string attached? How can I disable that?\r\nexpress version: v4.17.1\r\nnode version: v14.15.1\r\n\r\nThanks",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4780/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4780/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4777",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4777/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4777/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4777/events",
    "html_url": "https://github.com/expressjs/express/issues/4777",
    "id": 1086611395,
    "node_id": "I_kwDOAAOeZ85AxF_D",
    "number": 4777,
    "title": "Redirect to https",
    "user": {
      "login": "jsanz1209",
      "id": 25035827,
      "node_id": "MDQ6VXNlcjI1MDM1ODI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/25035827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jsanz1209",
      "html_url": "https://github.com/jsanz1209",
      "followers_url": "https://api.github.com/users/jsanz1209/followers",
      "following_url": "https://api.github.com/users/jsanz1209/following{/other_user}",
      "gists_url": "https://api.github.com/users/jsanz1209/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jsanz1209/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jsanz1209/subscriptions",
      "organizations_url": "https://api.github.com/users/jsanz1209/orgs",
      "repos_url": "https://api.github.com/users/jsanz1209/repos",
      "events_url": "https://api.github.com/users/jsanz1209/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jsanz1209/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2021-12-22T09:10:39Z",
    "updated_at": "2022-03-27T06:06:26Z",
    "closed_at": "2022-03-27T06:06:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi! I'm running my express server inside a docker container, but I don't get to redirect http requests to https protocol.\r\n\r\nI've tried with a few options, as for example, adding a 'express-http-to-https' to server.ts or enabling trust proxy but I get nothing.\r\n\r\nCan you guys give a hand?\r\n\r\nThanks",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4777/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4777/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  }
]