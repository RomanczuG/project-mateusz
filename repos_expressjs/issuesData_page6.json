[
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4527",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4527/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4527/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4527/events",
    "html_url": "https://github.com/expressjs/express/issues/4527",
    "id": 806176982,
    "node_id": "MDU6SXNzdWU4MDYxNzY5ODI=",
    "number": 4527,
    "title": "express-generator has no \"npm run build\"",
    "user": {
      "login": "quantrpeter",
      "id": 50471577,
      "node_id": "MDQ6VXNlcjUwNDcxNTc3",
      "avatar_url": "https://avatars.githubusercontent.com/u/50471577?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/quantrpeter",
      "html_url": "https://github.com/quantrpeter",
      "followers_url": "https://api.github.com/users/quantrpeter/followers",
      "following_url": "https://api.github.com/users/quantrpeter/following{/other_user}",
      "gists_url": "https://api.github.com/users/quantrpeter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/quantrpeter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/quantrpeter/subscriptions",
      "organizations_url": "https://api.github.com/users/quantrpeter/orgs",
      "repos_url": "https://api.github.com/users/quantrpeter/repos",
      "events_url": "https://api.github.com/users/quantrpeter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/quantrpeter/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-02-11T08:26:08Z",
    "updated_at": "2021-02-11T09:10:27Z",
    "closed_at": "2021-02-11T09:10:27Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi\r\n   express-generator has no \"npm run build\", how can i build production version?\r\nthanks\r\nPeter",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4527/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4527/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4526",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4526/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4526/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4526/events",
    "html_url": "https://github.com/expressjs/express/issues/4526",
    "id": 804376293,
    "node_id": "MDU6SXNzdWU4MDQzNzYyOTM=",
    "number": 4526,
    "title": "Avoid error of validating json input",
    "user": {
      "login": "moezemara",
      "id": 39069875,
      "node_id": "MDQ6VXNlcjM5MDY5ODc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/39069875?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/moezemara",
      "html_url": "https://github.com/moezemara",
      "followers_url": "https://api.github.com/users/moezemara/followers",
      "following_url": "https://api.github.com/users/moezemara/following{/other_user}",
      "gists_url": "https://api.github.com/users/moezemara/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/moezemara/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/moezemara/subscriptions",
      "organizations_url": "https://api.github.com/users/moezemara/orgs",
      "repos_url": "https://api.github.com/users/moezemara/repos",
      "events_url": "https://api.github.com/users/moezemara/events{/privacy}",
      "received_events_url": "https://api.github.com/users/moezemara/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2021-02-09T09:36:00Z",
    "updated_at": "2021-02-13T19:00:32Z",
    "closed_at": "2021-02-13T19:00:32Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm getting this error only when I send invalid form of json request\r\nhow do i validate the user input if it's a valid json ?\r\n```\r\n\t<pre>SyntaxError: Unexpected token u in JSON at position 7<br> &nbsp; &nbsp;at JSON.parse (&lt;anonymous&gt;)<br> &nbsp; &nbsp;at parse (C:\\Users\\midoe\\Desktop\\competetion\\node_modules\\body-parser\\lib\\types\\json.js:89:19)<br> &nbsp; &nbsp;at C:\\Users\\midoe\\Desktop\\competetion\\node_modules\\body-parser\\lib\\read.js:121:18<br> &nbsp; &nbsp;at invokeCallback (C:\\Users\\midoe\\Desktop\\competetion\\node_modules\\raw-body\\index.js:224:16)<br> &nbsp; &nbsp;at done (C:\\Users\\midoe\\Desktop\\competetion\\node_modules\\raw-body\\index.js:213:7)<br> &nbsp; &nbsp;at IncomingMessage.onEnd (C:\\Users\\midoe\\Desktop\\competetion\\node_modules\\raw-body\\index.js:273:7)<br> &nbsp; &nbsp;at IncomingMessage.emit (events.js:327:22)<br> &nbsp; &nbsp;at endReadableNT (_stream_readable.js:1220:12)<br> &nbsp; &nbsp;at processTicksAndRejections (internal/process/task_queues.js:84:21)</pre>\r\n```\r\n```js\r\n  createUser: (req, res) => {\r\n    const validate = createUser_schema.validate(req.body)\r\n    if (validate.error){\r\n      return res.status(400).json({\r\n        success: 0,\r\n        message: validate.error.details[0].message\r\n      })\r\n    }\r\n    const body = req.body\r\n    const salt = genSaltSync(10);\r\n    body.password = hashSync(body.password, salt);\r\n    create(body, (err, results) => {\r\n      if (err) {\r\n        console.log(err)\r\n        return res.status(500).json({\r\n          success: 0,\r\n          message: \"Database error\",\r\n          reason: err.sqlMessage\r\n        })\r\n      }\r\n      if (results) {\r\n        return res.status(200).json({\r\n          success: 1,\r\n          message: {name: body.name, email: body.email}\r\n        })\r\n      }\r\n    })\r\n  }\r\n ```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4526/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4526/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4525",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4525/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4525/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4525/events",
    "html_url": "https://github.com/expressjs/express/issues/4525",
    "id": 803552786,
    "node_id": "MDU6SXNzdWU4MDM1NTI3ODY=",
    "number": 4525,
    "title": "Expressjs dealing with high traffic",
    "user": {
      "login": "moezemara",
      "id": 39069875,
      "node_id": "MDQ6VXNlcjM5MDY5ODc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/39069875?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/moezemara",
      "html_url": "https://github.com/moezemara",
      "followers_url": "https://api.github.com/users/moezemara/followers",
      "following_url": "https://api.github.com/users/moezemara/following{/other_user}",
      "gists_url": "https://api.github.com/users/moezemara/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/moezemara/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/moezemara/subscriptions",
      "organizations_url": "https://api.github.com/users/moezemara/orgs",
      "repos_url": "https://api.github.com/users/moezemara/repos",
      "events_url": "https://api.github.com/users/moezemara/events{/privacy}",
      "received_events_url": "https://api.github.com/users/moezemara/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2021-02-08T13:12:00Z",
    "updated_at": "2021-02-09T22:56:55Z",
    "closed_at": "2021-02-09T22:56:55Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "So I want to know how do I wait for response to be sent to the user ?\r\n\r\nlets say my code has some sort of external requests that takes few seconds to response so using async functions the code waits for the response of that request then process it and sends the result back to the user, but it works only for 1 user meaning that if i request like 100 requests per time I will be getting a response but with conflicts of the entered data\r\nlike the request number 62 had the response of the request number 33 and so.\r\nhow do I mange this ? are there any libraries or methods to overcome it or it's just some sort of errors in my code ? ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4525/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4525/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4524",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4524/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4524/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4524/events",
    "html_url": "https://github.com/expressjs/express/issues/4524",
    "id": 802294645,
    "node_id": "MDU6SXNzdWU4MDIyOTQ2NDU=",
    "number": 4524,
    "title": "[BUG] Pattern matching",
    "user": {
      "login": "cojack",
      "id": 334297,
      "node_id": "MDQ6VXNlcjMzNDI5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/334297?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cojack",
      "html_url": "https://github.com/cojack",
      "followers_url": "https://api.github.com/users/cojack/followers",
      "following_url": "https://api.github.com/users/cojack/following{/other_user}",
      "gists_url": "https://api.github.com/users/cojack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cojack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cojack/subscriptions",
      "organizations_url": "https://api.github.com/users/cojack/orgs",
      "repos_url": "https://api.github.com/users/cojack/repos",
      "events_url": "https://api.github.com/users/cojack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cojack/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-02-05T16:19:04Z",
    "updated_at": "2021-02-08T08:58:28Z",
    "closed_at": "2021-02-08T08:58:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi guys,\r\nIt can't be like that\r\n\r\n`GET /resource/:id`\r\nwill be mapped for resource like:\r\n\r\n`GET /resource/subresource`\r\n\r\nSeriously, `GET /resource/:id` and `GET /resource/subresource` can't have the same wage for matching if there is 100% strict match.\r\n\r\nYou have to rethink your matching pattern. Where child router is overtaken by parent, just because it have a `dynamic` parameter match.\r\n\r\nAlso reorder routes is **NOT** a solution.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4524/reactions",
      "total_count": 6,
      "+1": 3,
      "-1": 3,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4524/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4523",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4523/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4523/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4523/events",
    "html_url": "https://github.com/expressjs/express/issues/4523",
    "id": 802016490,
    "node_id": "MDU6SXNzdWU4MDIwMTY0OTA=",
    "number": 4523,
    "title": "Router events (enabling route documentation) – feature request",
    "user": {
      "login": "mkastner",
      "id": 287486,
      "node_id": "MDQ6VXNlcjI4NzQ4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/287486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkastner",
      "html_url": "https://github.com/mkastner",
      "followers_url": "https://api.github.com/users/mkastner/followers",
      "following_url": "https://api.github.com/users/mkastner/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkastner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkastner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkastner/subscriptions",
      "organizations_url": "https://api.github.com/users/mkastner/orgs",
      "repos_url": "https://api.github.com/users/mkastner/repos",
      "events_url": "https://api.github.com/users/mkastner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkastner/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578715,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTU=",
        "url": "https://api.github.com/repos/expressjs/express/labels/future",
        "name": "future",
        "color": "e102d8",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2021-02-05T09:47:40Z",
    "updated_at": "2022-06-02T18:36:26Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am very fond of the express router for it provides a great deal of flexibility. But I have somewhat problems keeping track of all the routes, middleware locations and methods.\r\n\r\nIt would be great if there was an event implementation that fires up, if e.g. a middleware handler, another route or a method handler is added.\r\n\r\nIt would then be easy to keep track of the routes and eventually build a documentation.\r\n\r\nSince the lines above might not well explain what I have in mind, I have given this some more thought an created a little example module, which is basically a wrapper/decorator for the express router, which sort of mimics and extends the express router behavior.\r\n\r\nI hope this example helps explaining why an evented router might be helpful indeed. It's not great code, but rather a quick and dirty hack:\r\n\r\nhttps://github.com/mkastner/mk-express-router-doc\r\n\r\nI don't want to be pushing this too far: but if one could add some documentation on the fly to each respective route and path – that would be the icing on the cake.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4523/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4523/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4522",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4522/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4522/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4522/events",
    "html_url": "https://github.com/expressjs/express/pull/4522",
    "id": 798897924,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTY1NjMzODA0",
    "number": 4522,
    "title": "Updated code to use const, let and arrow functions",
    "user": {
      "login": "marsonya",
      "id": 16393876,
      "node_id": "MDQ6VXNlcjE2MzkzODc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/16393876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marsonya",
      "html_url": "https://github.com/marsonya",
      "followers_url": "https://api.github.com/users/marsonya/followers",
      "following_url": "https://api.github.com/users/marsonya/following{/other_user}",
      "gists_url": "https://api.github.com/users/marsonya/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marsonya/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marsonya/subscriptions",
      "organizations_url": "https://api.github.com/users/marsonya/orgs",
      "repos_url": "https://api.github.com/users/marsonya/repos",
      "events_url": "https://api.github.com/users/marsonya/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marsonya/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      },
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-02-02T03:41:36Z",
    "updated_at": "2021-02-02T08:28:06Z",
    "closed_at": "2021-02-02T08:18:21Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4522",
      "html_url": "https://github.com/expressjs/express/pull/4522",
      "diff_url": "https://github.com/expressjs/express/pull/4522.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4522.patch",
      "merged_at": null
    },
    "body": "Updated benchmarks/middleware.js to use let and const instead of var\r\nand replaced function keywords with arrow functions.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4522/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4522/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4520",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4520/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4520/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4520/events",
    "html_url": "https://github.com/expressjs/express/pull/4520",
    "id": 797618023,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTY0NTgyNDIw",
    "number": 4520,
    "title": "Add discord",
    "user": {
      "login": "sayantan300",
      "id": 62213554,
      "node_id": "MDQ6VXNlcjYyMjEzNTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/62213554?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sayantan300",
      "html_url": "https://github.com/sayantan300",
      "followers_url": "https://api.github.com/users/sayantan300/followers",
      "following_url": "https://api.github.com/users/sayantan300/following{/other_user}",
      "gists_url": "https://api.github.com/users/sayantan300/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sayantan300/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sayantan300/subscriptions",
      "organizations_url": "https://api.github.com/users/sayantan300/orgs",
      "repos_url": "https://api.github.com/users/sayantan300/repos",
      "events_url": "https://api.github.com/users/sayantan300/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sayantan300/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 30,
    "created_at": "2021-01-31T04:46:27Z",
    "updated_at": "2021-04-21T12:40:37Z",
    "closed_at": "2021-04-21T12:40:32Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4520",
      "html_url": "https://github.com/expressjs/express/pull/4520",
      "diff_url": "https://github.com/expressjs/express/pull/4520.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4520.patch",
      "merged_at": null
    },
    "body": "From the author of issue #4477 \r\nAdded discord server link. There are quite some members that joined even if the issue hasn't been resolved, so I think it's great to use a discord server, apart from other communities and discussion.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4520/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4520/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4519",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4519/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4519/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4519/events",
    "html_url": "https://github.com/expressjs/express/issues/4519",
    "id": 796866344,
    "node_id": "MDU6SXNzdWU3OTY4NjYzNDQ=",
    "number": 4519,
    "title": "Method/ Attribute in Response object to get response body",
    "user": {
      "login": "ShubhankarKG",
      "id": 50791000,
      "node_id": "MDQ6VXNlcjUwNzkxMDAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/50791000?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ShubhankarKG",
      "html_url": "https://github.com/ShubhankarKG",
      "followers_url": "https://api.github.com/users/ShubhankarKG/followers",
      "following_url": "https://api.github.com/users/ShubhankarKG/following{/other_user}",
      "gists_url": "https://api.github.com/users/ShubhankarKG/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ShubhankarKG/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ShubhankarKG/subscriptions",
      "organizations_url": "https://api.github.com/users/ShubhankarKG/orgs",
      "repos_url": "https://api.github.com/users/ShubhankarKG/repos",
      "events_url": "https://api.github.com/users/ShubhankarKG/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ShubhankarKG/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-01-29T13:05:27Z",
    "updated_at": "2021-01-29T14:00:13Z",
    "closed_at": "2021-01-29T14:00:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "We have an API that runs something like this.\r\n\r\n```javascript\r\napp.get('/route', user.isAuth, cache.getFromCache, model.getFromDB, cache.setCache);\r\n```\r\n\r\nWe would like to get the response body (we prepare in model.getFromDB) to be available to the next request handler as well. \r\nWhat we currently do is:\r\n\r\n```javascript\r\nasync getFromDB() {\r\n    // ...\r\n    res.locals.cache = body;\r\n    res.status(200).json(body);\r\n}\r\n```\r\n\r\nAs should be obvious, this is a bit tricky, and someone can easily forget to do this part. Can we have a method or an attribute that stores the body, like `res.body` perhaps?\r\n\r\nThanks.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4519/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4519/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4518",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4518/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4518/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4518/events",
    "html_url": "https://github.com/expressjs/express/issues/4518",
    "id": 795284601,
    "node_id": "MDU6SXNzdWU3OTUyODQ2MDE=",
    "number": 4518,
    "title": "Middleware Parameter Stickyness",
    "user": {
      "login": "danleegion",
      "id": 29412828,
      "node_id": "MDQ6VXNlcjI5NDEyODI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/29412828?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danleegion",
      "html_url": "https://github.com/danleegion",
      "followers_url": "https://api.github.com/users/danleegion/followers",
      "following_url": "https://api.github.com/users/danleegion/following{/other_user}",
      "gists_url": "https://api.github.com/users/danleegion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danleegion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danleegion/subscriptions",
      "organizations_url": "https://api.github.com/users/danleegion/orgs",
      "repos_url": "https://api.github.com/users/danleegion/repos",
      "events_url": "https://api.github.com/users/danleegion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danleegion/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-01-27T17:09:17Z",
    "updated_at": "2021-01-27T17:26:59Z",
    "closed_at": "2021-01-27T17:15:03Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "It seems like when calling middleware with parameter the parameter gets sticky/cached. Consider this example code\r\n\r\n```\r\nconst express = require(\"express\");\r\n\r\nconst port = process.env.PORT || 8888;\r\nconst app = express();\r\nconst expressRoute = express.Router();\r\n\r\nconst someMidWare = (myParam) => {\r\n  return (req, res, next) => {\r\n    if (myParam === \"GoodParam\") {\r\n      myParam = \"OtherParam\";\r\n      return res.send(`Inside Good MidWare with Param ${req.query.someid}`);\r\n    }\r\n\r\n    return next();\r\n  };\r\n};\r\n\r\nexpressRoute.get(\"/\", someMidWare(\"GoodParam\"), async (req, res) => {\r\n  if (req.query.someid) {\r\n    return res.send(req.query.someid);\r\n  }\r\n\r\n  return res.send(\"Send me something\");\r\n});\r\n\r\napp.use(expressRoute);\r\napp.listen(port, () => {\r\n  console.log(`Application started on port ${port}`);\r\n});\r\n```\r\nWhen calling http://localhost:8888/?someid=12345\r\n\r\nWe are expecting to see \"Inside Good MidWare with Param 12345 all the time, but this is untrue, when you run the code you will get the following output when you reach out to the site multiple time\r\n\r\n1. Inside Good MidWare with Param 12345\r\n2. 12345",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4518/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4518/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4517",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4517/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4517/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4517/events",
    "html_url": "https://github.com/expressjs/express/issues/4517",
    "id": 793156618,
    "node_id": "MDU6SXNzdWU3OTMxNTY2MTg=",
    "number": 4517,
    "title": "Error: .post() requires callback functions but got a [object Undefined] not working",
    "user": {
      "login": "suryavanshiva",
      "id": 69349401,
      "node_id": "MDQ6VXNlcjY5MzQ5NDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/69349401?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/suryavanshiva",
      "html_url": "https://github.com/suryavanshiva",
      "followers_url": "https://api.github.com/users/suryavanshiva/followers",
      "following_url": "https://api.github.com/users/suryavanshiva/following{/other_user}",
      "gists_url": "https://api.github.com/users/suryavanshiva/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/suryavanshiva/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/suryavanshiva/subscriptions",
      "organizations_url": "https://api.github.com/users/suryavanshiva/orgs",
      "repos_url": "https://api.github.com/users/suryavanshiva/repos",
      "events_url": "https://api.github.com/users/suryavanshiva/events{/privacy}",
      "received_events_url": "https://api.github.com/users/suryavanshiva/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2021-01-25T08:23:19Z",
    "updated_at": "2021-12-13T12:42:05Z",
    "closed_at": "2021-01-25T08:51:13Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "help me solving this error",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4517/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4517/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4516",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4516/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4516/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4516/events",
    "html_url": "https://github.com/expressjs/express/issues/4516",
    "id": 793083901,
    "node_id": "MDU6SXNzdWU3OTMwODM5MDE=",
    "number": 4516,
    "title": "Feature Request",
    "user": {
      "login": "LingleDev",
      "id": 28402801,
      "node_id": "MDQ6VXNlcjI4NDAyODAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/28402801?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LingleDev",
      "html_url": "https://github.com/LingleDev",
      "followers_url": "https://api.github.com/users/LingleDev/followers",
      "following_url": "https://api.github.com/users/LingleDev/following{/other_user}",
      "gists_url": "https://api.github.com/users/LingleDev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LingleDev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LingleDev/subscriptions",
      "organizations_url": "https://api.github.com/users/LingleDev/orgs",
      "repos_url": "https://api.github.com/users/LingleDev/repos",
      "events_url": "https://api.github.com/users/LingleDev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LingleDev/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2021-01-25T06:42:13Z",
    "updated_at": "2021-01-25T07:01:13Z",
    "closed_at": "2021-01-25T07:00:37Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hey! Thanks for making such a great library. I use this for multiple projects. I just wanted to suggest a feature be added to Express.\r\n\r\nAdding a capability for `res.sendFile` to take a Buffer instead of a file path would be very useful, as for my website I use image manipulation to generate images. This would be incredibly useful to me, and probably lots of other people.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4516/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4516/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4515",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4515/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4515/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4515/events",
    "html_url": "https://github.com/expressjs/express/pull/4515",
    "id": 793023920,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTYwNzc3MDc5",
    "number": 4515,
    "title": "Added installation method for yarn",
    "user": {
      "login": "Prashoon123",
      "id": 64588766,
      "node_id": "MDQ6VXNlcjY0NTg4NzY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/64588766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Prashoon123",
      "html_url": "https://github.com/Prashoon123",
      "followers_url": "https://api.github.com/users/Prashoon123/followers",
      "following_url": "https://api.github.com/users/Prashoon123/following{/other_user}",
      "gists_url": "https://api.github.com/users/Prashoon123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Prashoon123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Prashoon123/subscriptions",
      "organizations_url": "https://api.github.com/users/Prashoon123/orgs",
      "repos_url": "https://api.github.com/users/Prashoon123/repos",
      "events_url": "https://api.github.com/users/Prashoon123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Prashoon123/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      },
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-01-25T04:56:11Z",
    "updated_at": "2021-01-25T05:00:26Z",
    "closed_at": "2021-01-25T04:58:13Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4515",
      "html_url": "https://github.com/expressjs/express/pull/4515",
      "diff_url": "https://github.com/expressjs/express/pull/4515.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4515.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4515/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4515/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4514",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4514/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4514/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4514/events",
    "html_url": "https://github.com/expressjs/express/issues/4514",
    "id": 789855641,
    "node_id": "MDU6SXNzdWU3ODk4NTU2NDE=",
    "number": 4514,
    "title": "Working incorect when in path there is line",
    "user": {
      "login": "DavitSo",
      "id": 45847601,
      "node_id": "MDQ6VXNlcjQ1ODQ3NjAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/45847601?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DavitSo",
      "html_url": "https://github.com/DavitSo",
      "followers_url": "https://api.github.com/users/DavitSo/followers",
      "following_url": "https://api.github.com/users/DavitSo/following{/other_user}",
      "gists_url": "https://api.github.com/users/DavitSo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DavitSo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DavitSo/subscriptions",
      "organizations_url": "https://api.github.com/users/DavitSo/orgs",
      "repos_url": "https://api.github.com/users/DavitSo/repos",
      "events_url": "https://api.github.com/users/DavitSo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DavitSo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2021-01-20T10:36:37Z",
    "updated_at": "2021-01-20T19:48:37Z",
    "closed_at": "2021-01-20T19:40:07Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have 2 endpoints which have to return objects and object with specified object-id\r\nSo I'm creating router with 2 paths\r\n/object                 \r\n/object/:object-id  -- http://localhost:8080/object/123456789 returns 404\r\nBut second one I cant call, it gives 404\r\nIs there any restriction in path names?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4514/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4514/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4513",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4513/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4513/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4513/events",
    "html_url": "https://github.com/expressjs/express/issues/4513",
    "id": 789145766,
    "node_id": "MDU6SXNzdWU3ODkxNDU3NjY=",
    "number": 4513,
    "title": "[Bug] Error handler not a part of route stack",
    "user": {
      "login": "gear4s",
      "id": 832900,
      "node_id": "MDQ6VXNlcjgzMjkwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/832900?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gear4s",
      "html_url": "https://github.com/gear4s",
      "followers_url": "https://api.github.com/users/gear4s/followers",
      "following_url": "https://api.github.com/users/gear4s/following{/other_user}",
      "gists_url": "https://api.github.com/users/gear4s/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gear4s/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gear4s/subscriptions",
      "organizations_url": "https://api.github.com/users/gear4s/orgs",
      "repos_url": "https://api.github.com/users/gear4s/repos",
      "events_url": "https://api.github.com/users/gear4s/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gear4s/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-01-19T15:58:33Z",
    "updated_at": "2021-01-19T16:33:42Z",
    "closed_at": "2021-01-19T16:06:29Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I've currently got this code, effectively:\r\n```js\r\nconst app = express()\r\napp.post(\r\n  \"/user\",\r\n  (req, res, next) => next(),\r\n  (req, res) => {\r\n    throw new Error(\"Fail\");\r\n  }\r\n);\r\napp.post(\r\n  \"/login\",\r\n  (req, res, next) => next(),\r\n  (req, res) => {\r\n    throw new Error(\"Fail\");\r\n  }\r\n);\r\napp.post(\r\n  \"/register\",\r\n  (req, res, next) => next(),\r\n  (req, res) => {\r\n    throw new Error(\"Fail\");\r\n  }\r\n);\r\napp.use((err, req, res, next) => {\r\n  console.log(err)\r\n});\n```\r\n\r\nHowever, the error handler is not being executed. Any idea why ?\r\n\r\nThis is a gist with some debugging info: https://gist.github.com/gear4s/f5fdf1b324fb896086166b69e5358451",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4513/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4513/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4512",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4512/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4512/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4512/events",
    "html_url": "https://github.com/expressjs/express/pull/4512",
    "id": 788164024,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTU2NzIwNzAw",
    "number": 4512,
    "title": "Update the app function in express.js",
    "user": {
      "login": "mehanalavimajd",
      "id": 74927578,
      "node_id": "MDQ6VXNlcjc0OTI3NTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/74927578?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mehanalavimajd",
      "html_url": "https://github.com/mehanalavimajd",
      "followers_url": "https://api.github.com/users/mehanalavimajd/followers",
      "following_url": "https://api.github.com/users/mehanalavimajd/following{/other_user}",
      "gists_url": "https://api.github.com/users/mehanalavimajd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mehanalavimajd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mehanalavimajd/subscriptions",
      "organizations_url": "https://api.github.com/users/mehanalavimajd/orgs",
      "repos_url": "https://api.github.com/users/mehanalavimajd/repos",
      "events_url": "https://api.github.com/users/mehanalavimajd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mehanalavimajd/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-01-18T10:57:31Z",
    "updated_at": "2021-01-18T15:38:40Z",
    "closed_at": "2021-01-18T15:16:36Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4512",
      "html_url": "https://github.com/expressjs/express/pull/4512",
      "diff_url": "https://github.com/expressjs/express/pull/4512.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4512.patch",
      "merged_at": null
    },
    "body": "Changed the app function to a arrow function",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4512/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4512/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4511",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4511/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4511/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4511/events",
    "html_url": "https://github.com/expressjs/express/pull/4511",
    "id": 784109834,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTUzMzUzNDU4",
    "number": 4511,
    "title": "Typescript example",
    "user": {
      "login": "keithics",
      "id": 229427,
      "node_id": "MDQ6VXNlcjIyOTQyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/229427?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/keithics",
      "html_url": "https://github.com/keithics",
      "followers_url": "https://api.github.com/users/keithics/followers",
      "following_url": "https://api.github.com/users/keithics/following{/other_user}",
      "gists_url": "https://api.github.com/users/keithics/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/keithics/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/keithics/subscriptions",
      "organizations_url": "https://api.github.com/users/keithics/orgs",
      "repos_url": "https://api.github.com/users/keithics/repos",
      "events_url": "https://api.github.com/users/keithics/events{/privacy}",
      "received_events_url": "https://api.github.com/users/keithics/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-01-12T10:28:38Z",
    "updated_at": "2021-01-12T17:49:35Z",
    "closed_at": "2021-01-12T17:49:35Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4511",
      "html_url": "https://github.com/expressjs/express/pull/4511",
      "diff_url": "https://github.com/expressjs/express/pull/4511.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4511.patch",
      "merged_at": null
    },
    "body": "basic example using typescript",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4511/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4511/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4510",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4510/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4510/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4510/events",
    "html_url": "https://github.com/expressjs/express/issues/4510",
    "id": 783930334,
    "node_id": "MDU6SXNzdWU3ODM5MzAzMzQ=",
    "number": 4510,
    "title": "Randomly matching routes",
    "user": {
      "login": "sujeet-agrahari",
      "id": 22151975,
      "node_id": "MDQ6VXNlcjIyMTUxOTc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/22151975?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sujeet-agrahari",
      "html_url": "https://github.com/sujeet-agrahari",
      "followers_url": "https://api.github.com/users/sujeet-agrahari/followers",
      "following_url": "https://api.github.com/users/sujeet-agrahari/following{/other_user}",
      "gists_url": "https://api.github.com/users/sujeet-agrahari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sujeet-agrahari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sujeet-agrahari/subscriptions",
      "organizations_url": "https://api.github.com/users/sujeet-agrahari/orgs",
      "repos_url": "https://api.github.com/users/sujeet-agrahari/repos",
      "events_url": "https://api.github.com/users/sujeet-agrahari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sujeet-agrahari/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2021-01-12T05:44:58Z",
    "updated_at": "2021-01-19T15:12:50Z",
    "closed_at": "2021-01-19T13:48:05Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have my routes setup as below.\r\n```\r\nconst express = require('express');\r\n\r\nconst app = express();\r\n\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: true }));\r\n\r\n// load routes\r\nrequire('./loader/routes')(app);\r\n\r\nmodule.exports = app;\r\n```\r\n```\r\nconst Router = require('../router');\r\n// Middlewares\r\nconst auth = require('../middlewares/auth');\r\n\r\nmodule.exports = function getRoutes(app) {\r\n  app.use('/api/v1/services', Router.ServiceRoutes);\r\n  app.use('/api/v1/master-vehicles', Router.MasterVehicleRoutes);\r\n}\r\n```\r\n```\r\nconst router= require('express').Router();\r\n\r\nconst MasterVehicleController = require('../controllers/MasterVehicleController');\r\nconst MasterVehicleRoutes = require('./MasterVehicleRouter')({\r\n  router: express.Router(),\r\n  MasterVehicleController,\r\n  makeExpressCallback,\r\n});\r\nconst ServiceController = require('../controllers/ServiceController');\r\nconst ServiceRoutes = require('./ServiceRouter')({\r\n  router: express.Router(),\r\n  ServiceController,\r\n  makeExpressCallback,\r\n});\r\n```\r\n```\r\nmodule.exports = ({\r\n  router,\r\n  MasterVehicleController,\r\n  makeExpressCallback,\r\n}) => {\r\n  router.get(\r\n    '/',\r\n    makeExpressCallback(MasterVehicleController.getAllVehicles),\r\n  );\r\n  router.get(\r\n    '/:id',\r\n    makeExpressCallback(MasterVehicleController.getVehicleById),\r\n  );\r\n  return router;\r\n};\r\n```\r\n```\r\nmodule.exports = ({\r\n  router,\r\n  ServiceRequestController,\r\n  makeExpressCallback,\r\n}) => {\r\n  router.put(\r\n    '/',\r\n    makeExpressCallback(ServiceRequestController.changeRequestStatus),\r\n  );\r\n  router.get(\r\n    '/:id',\r\n    makeExpressCallback(ServiceRequestController.getRequestDetail),\r\n  );\r\n  return router;\r\n};\r\n```\r\nIt is matching routes randomly, sometimes it matches with `master-vehicles` and sometimes it matches with some other routes.\r\n\r\nWhy is this happening?\r\n\r\nI could solve it though by passing new instances of router to each one like `router: express.Router()`\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4510/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4510/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4509",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4509/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4509/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4509/events",
    "html_url": "https://github.com/expressjs/express/issues/4509",
    "id": 783869528,
    "node_id": "MDU6SXNzdWU3ODM4Njk1Mjg=",
    "number": 4509,
    "title": "; charset=utf-8 in Content-Type header breaks compatibility with Mosaic 2.1.1 ",
    "user": {
      "login": "ssshake",
      "id": 1675868,
      "node_id": "MDQ6VXNlcjE2NzU4Njg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1675868?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssshake",
      "html_url": "https://github.com/ssshake",
      "followers_url": "https://api.github.com/users/ssshake/followers",
      "following_url": "https://api.github.com/users/ssshake/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssshake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssshake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssshake/subscriptions",
      "organizations_url": "https://api.github.com/users/ssshake/orgs",
      "repos_url": "https://api.github.com/users/ssshake/repos",
      "events_url": "https://api.github.com/users/ssshake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssshake/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2021-01-12T03:10:01Z",
    "updated_at": "2021-01-21T15:12:37Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello, I know this has been asked before and I know the response is that CHARSET=UTF-8 is enforced in the package because of security concerns. \r\n\r\nThis has been discussed in this closed issue: https://github.com/expressjs/express/issues/3490\r\n\r\nHowever I have a particular use case. I run a site called theoldnet.com and I serve up 1990's internet content to people like me who collect vintage computers. \r\n\r\nThis means we are trying to access the site using old browsers like Mosaic 2.1.1. \r\n\r\nThese old browsers do not like the semi-colon suffix on modern Content-Type headers. It breaks the ability to render the page entirely. \r\n\r\nCan you tell me where this is enforced in the source code? If need be I can disable this myself and maintain my own fork. My service depends heavily on express and the entire point of the service is to provide cross-browser compatibility dating back to the worlds first web browsers. \r\n\r\nI did a search for text/html; chartset=utf-8 in the code base and the dependencies. I could not find the cause of this charset being injected on every request.  \r\n\r\nYour help would be appreciated, thanks!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4509/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4509/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4508",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4508/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4508/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4508/events",
    "html_url": "https://github.com/expressjs/express/issues/4508",
    "id": 783838220,
    "node_id": "MDU6SXNzdWU3ODM4MzgyMjA=",
    "number": 4508,
    "title": "Deeply nested routers do not always remove URL prefix",
    "user": {
      "login": "0x0blu",
      "id": 4368958,
      "node_id": "MDQ6VXNlcjQzNjg5NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4368958?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0x0blu",
      "html_url": "https://github.com/0x0blu",
      "followers_url": "https://api.github.com/users/0x0blu/followers",
      "following_url": "https://api.github.com/users/0x0blu/following{/other_user}",
      "gists_url": "https://api.github.com/users/0x0blu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0x0blu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0x0blu/subscriptions",
      "organizations_url": "https://api.github.com/users/0x0blu/orgs",
      "repos_url": "https://api.github.com/users/0x0blu/repos",
      "events_url": "https://api.github.com/users/0x0blu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0x0blu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-01-12T01:40:49Z",
    "updated_at": "2021-01-12T01:46:02Z",
    "closed_at": "2021-01-12T01:46:02Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "# Scenario\r\n\r\nHaving deeply-nested routers may cause it to not rewrite URL correctly.\r\n\r\n```js\r\nimport express, { Router } from \"express\";\r\n\r\nconst routerC = Router();\r\nrouterC.use(printUrl);\r\nrouterC.get(\"/\", (req, res) => res.json({ message: \"OK\" }));\r\n\r\nconst routerB = Router();\r\nrouterB.use(printUrl);\r\nrouterB.get(\"/c\", routerC);\r\n\r\nconst routerA = Router();\r\nrouterA.use(printUrl);\r\nrouterA.use(\"/b\", routerB);\r\n\r\nconst app = express();\r\napp.use(printUrl);\r\napp.use(\"/a\", routerA);\r\n\r\nfunction printUrl(req, res, next) {\r\n  console.log(req.url);\r\n  next();\r\n}\r\n\r\napp.listen(3000);\r\n```\r\n\r\n## Expected\r\n\r\nVisiting `/a/b/c` gets the response `{\"message\":\"OK\"}`, and prints the following to `stdout`:\r\n```\r\n/a/b/c\r\n/b/c\r\n/c\r\n/\r\n```\r\n\r\n## Actual\r\n\r\nVisiting `/a/b/c` returns 404, and the stdout would have:\r\n```\r\n/a/b/c\r\n/b/c\r\n/c\r\n/c\r\n```\r\n\r\n## Environment\r\n\r\nExpress version: 4.17.1\r\nNode version: 15.5.1\r\nOS: Arch Linux",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4508/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4508/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4507",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4507/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4507/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4507/events",
    "html_url": "https://github.com/expressjs/express/issues/4507",
    "id": 783360670,
    "node_id": "MDU6SXNzdWU3ODMzNjA2NzA=",
    "number": 4507,
    "title": "Send Error Message is not Working",
    "user": {
      "login": "Roharui",
      "id": 39794747,
      "node_id": "MDQ6VXNlcjM5Nzk0NzQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/39794747?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Roharui",
      "html_url": "https://github.com/Roharui",
      "followers_url": "https://api.github.com/users/Roharui/followers",
      "following_url": "https://api.github.com/users/Roharui/following{/other_user}",
      "gists_url": "https://api.github.com/users/Roharui/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Roharui/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Roharui/subscriptions",
      "organizations_url": "https://api.github.com/users/Roharui/orgs",
      "repos_url": "https://api.github.com/users/Roharui/repos",
      "events_url": "https://api.github.com/users/Roharui/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Roharui/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-01-11T13:13:33Z",
    "updated_at": "2021-01-11T14:34:26Z",
    "closed_at": "2021-01-11T14:34:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm currently working error handle on express. but there is problem that does not send status text well.\r\n\r\n![image](https://user-images.githubusercontent.com/39794747/104186494-d8241d00-5459-11eb-805f-d47cc8782fec.png)\r\n\r\n![image](https://user-images.githubusercontent.com/39794747/104186419-b7f45e00-5459-11eb-8ca6-4d6c7d949f98.png)\r\n\r\nI set status text to `TEST Code` but status text is `Not Found`.\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4507/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4507/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4506",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4506/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4506/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4506/events",
    "html_url": "https://github.com/expressjs/express/issues/4506",
    "id": 781843667,
    "node_id": "MDU6SXNzdWU3ODE4NDM2Njc=",
    "number": 4506,
    "title": "Support for PHP input",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-01-08T04:56:42Z",
    "updated_at": "2021-01-08T04:59:24Z",
    "closed_at": "2021-01-08T04:59:18Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "## Form\r\nSo, in my website a want a form to take user input. Now I have made it, and I need to use PHP to take in user input. \r\nBut in normal EJS you can't actually put the PHP tag (<?php?>). Now I want the user input to go through some PHP \r\nfunctions.\r\n\r\nHow can I do this? Is there a way to actually connect PHP with EJS and then take in the user input? \r\n**Note: I came to expressjs because I am too lazy to make the backend of my website with PHP, then obviously its possible!**\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4506/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4506/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4505",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4505/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4505/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4505/events",
    "html_url": "https://github.com/expressjs/express/pull/4505",
    "id": 781106784,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTUwODg3NTQx",
    "number": 4505,
    "title": "correcting indentation in new correct indentation branch",
    "user": {
      "login": "yash0307jain",
      "id": 44037814,
      "node_id": "MDQ6VXNlcjQ0MDM3ODE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/44037814?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yash0307jain",
      "html_url": "https://github.com/yash0307jain",
      "followers_url": "https://api.github.com/users/yash0307jain/followers",
      "following_url": "https://api.github.com/users/yash0307jain/following{/other_user}",
      "gists_url": "https://api.github.com/users/yash0307jain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yash0307jain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yash0307jain/subscriptions",
      "organizations_url": "https://api.github.com/users/yash0307jain/orgs",
      "repos_url": "https://api.github.com/users/yash0307jain/repos",
      "events_url": "https://api.github.com/users/yash0307jain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yash0307jain/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-01-07T07:44:43Z",
    "updated_at": "2021-01-07T13:16:47Z",
    "closed_at": "2021-01-07T13:16:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4505",
      "html_url": "https://github.com/expressjs/express/pull/4505",
      "diff_url": "https://github.com/expressjs/express/pull/4505.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4505.patch",
      "merged_at": null
    },
    "body": "correcting indentation in a new branch and will improve in test cases as well",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4505/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4505/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4504",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4504/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4504/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4504/events",
    "html_url": "https://github.com/expressjs/express/issues/4504",
    "id": 781057071,
    "node_id": "MDU6SXNzdWU3ODEwNTcwNzE=",
    "number": 4504,
    "title": "Custom API Views",
    "user": {
      "login": "yash0307jain",
      "id": 44037814,
      "node_id": "MDQ6VXNlcjQ0MDM3ODE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/44037814?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yash0307jain",
      "html_url": "https://github.com/yash0307jain",
      "followers_url": "https://api.github.com/users/yash0307jain/followers",
      "following_url": "https://api.github.com/users/yash0307jain/following{/other_user}",
      "gists_url": "https://api.github.com/users/yash0307jain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yash0307jain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yash0307jain/subscriptions",
      "organizations_url": "https://api.github.com/users/yash0307jain/orgs",
      "repos_url": "https://api.github.com/users/yash0307jain/repos",
      "events_url": "https://api.github.com/users/yash0307jain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yash0307jain/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2021-01-07T06:07:43Z",
    "updated_at": "2021-05-11T12:28:02Z",
    "closed_at": "2021-05-11T12:28:02Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Can we introduce custom API views like Django?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4504/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4504/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4503",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4503/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4503/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4503/events",
    "html_url": "https://github.com/expressjs/express/issues/4503",
    "id": 779971406,
    "node_id": "MDU6SXNzdWU3Nzk5NzE0MDY=",
    "number": 4503,
    "title": "There is a warning when building webpack. \"Critical Dependency: A dependency request is an expression.\"",
    "user": {
      "login": "kerry-Cho",
      "id": 20694053,
      "node_id": "MDQ6VXNlcjIwNjk0MDUz",
      "avatar_url": "https://avatars.githubusercontent.com/u/20694053?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kerry-Cho",
      "html_url": "https://github.com/kerry-Cho",
      "followers_url": "https://api.github.com/users/kerry-Cho/followers",
      "following_url": "https://api.github.com/users/kerry-Cho/following{/other_user}",
      "gists_url": "https://api.github.com/users/kerry-Cho/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kerry-Cho/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kerry-Cho/subscriptions",
      "organizations_url": "https://api.github.com/users/kerry-Cho/orgs",
      "repos_url": "https://api.github.com/users/kerry-Cho/repos",
      "events_url": "https://api.github.com/users/kerry-Cho/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kerry-Cho/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-01-06T03:53:19Z",
    "updated_at": "2021-01-06T04:10:05Z",
    "closed_at": "2021-01-06T04:10:02Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": " When the webpack is trying to put the express in a bundle, \r\nwe get an optimization warning due to an expression in require() of the express library\r\n\r\nThe last require() has an expression as argument.\r\nCan we rid of this warn?\r\nhttps://github.com/expressjs/express/blob/508936853a6e311099c9985d4c11a4b1b8f6af07/lib/view.js#L81",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4503/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4503/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4502",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4502/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4502/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4502/events",
    "html_url": "https://github.com/expressjs/express/issues/4502",
    "id": 779666661,
    "node_id": "MDU6SXNzdWU3Nzk2NjY2NjE=",
    "number": 4502,
    "title": "erre npm",
    "user": {
      "login": "abhaypratapsingh099",
      "id": 76975089,
      "node_id": "MDQ6VXNlcjc2OTc1MDg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/76975089?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abhaypratapsingh099",
      "html_url": "https://github.com/abhaypratapsingh099",
      "followers_url": "https://api.github.com/users/abhaypratapsingh099/followers",
      "following_url": "https://api.github.com/users/abhaypratapsingh099/following{/other_user}",
      "gists_url": "https://api.github.com/users/abhaypratapsingh099/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abhaypratapsingh099/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abhaypratapsingh099/subscriptions",
      "organizations_url": "https://api.github.com/users/abhaypratapsingh099/orgs",
      "repos_url": "https://api.github.com/users/abhaypratapsingh099/repos",
      "events_url": "https://api.github.com/users/abhaypratapsingh099/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abhaypratapsingh099/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-01-05T22:30:31Z",
    "updated_at": "2021-01-06T09:21:55Z",
    "closed_at": "2021-01-06T09:21:55Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "npm ERR! JSON.parse package.json must be actual JSON, not just JavaScript.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4502/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4502/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4501",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4501/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4501/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4501/events",
    "html_url": "https://github.com/expressjs/express/issues/4501",
    "id": 777574299,
    "node_id": "MDU6SXNzdWU3Nzc1NzQyOTk=",
    "number": 4501,
    "title": "How to decode URI parameter in Express JS",
    "user": {
      "login": "HenryDinh86",
      "id": 20413738,
      "node_id": "MDQ6VXNlcjIwNDEzNzM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/20413738?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/HenryDinh86",
      "html_url": "https://github.com/HenryDinh86",
      "followers_url": "https://api.github.com/users/HenryDinh86/followers",
      "following_url": "https://api.github.com/users/HenryDinh86/following{/other_user}",
      "gists_url": "https://api.github.com/users/HenryDinh86/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/HenryDinh86/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HenryDinh86/subscriptions",
      "organizations_url": "https://api.github.com/users/HenryDinh86/orgs",
      "repos_url": "https://api.github.com/users/HenryDinh86/repos",
      "events_url": "https://api.github.com/users/HenryDinh86/events{/privacy}",
      "received_events_url": "https://api.github.com/users/HenryDinh86/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-01-03T05:02:53Z",
    "updated_at": "2021-01-03T12:15:28Z",
    "closed_at": "2021-01-03T12:15:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi Guys,\r\n\r\nIm trying to send a GET request to my node express route with ajax but i cant figure out how to decode the URI param.\r\n\r\nThis is whats getting sent to the request:  GET /exercises/Day%201.\r\n\r\nI want to decode it so it'll be something like --> Day 1\r\n\r\nThen my query will be something like the following:\r\n\r\n router.get('/:dayOfWeek', async (req, res) => {\r\n  try {\r\n    const dow = req.params.dayOfWeek;\r\n    const program = await Program.findOne({ user: req.user.id })\r\n      .populate({\r\n        path: 'exercises',\r\n        match: { dayOfWeek: dow }\r\n      })\r\n      .exec();\r\n\r\n### JS file\r\n\r\n$('#dayOfWeek').on('change', function() {\r\n    const dayOfWeek = $('#dayOfWeek').val();\r\n    const encoded = encodeURI(dayOfWeek);\r\n    $.ajax({\r\n      type: 'GET',\r\n      url: `/exercises/${encoded}`,\r\n      dataType: 'json'\r\n    }).done((programs) => {\r\n      console.log(programs);\r\n    });\r\n  });\r\n### Routes File\r\nrouter.get('/:dayOfWeek', async (req, res) => {\r\n  try {\r\n    const dow = req.params.dayOfWeek;\r\n    const program = await Program.findOne({ user: req.user.id })\r\n      .populate({\r\n        path: 'exercises',\r\n        match: { dayOfWeek: dow }\r\n      })\r\n      .exec();\r\n    //.lean();\r\n    res.send(program);\r\n  }\r\n\r\nThanks for the help guys.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4501/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4501/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4500",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4500/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4500/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4500/events",
    "html_url": "https://github.com/expressjs/express/pull/4500",
    "id": 777497381,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTQ3Nzc5MTE1",
    "number": 4500,
    "title": "Fix include tag as it wasn't working",
    "user": {
      "login": "Sylveondev",
      "id": 71215126,
      "node_id": "MDQ6VXNlcjcxMjE1MTI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/71215126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sylveondev",
      "html_url": "https://github.com/Sylveondev",
      "followers_url": "https://api.github.com/users/Sylveondev/followers",
      "following_url": "https://api.github.com/users/Sylveondev/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sylveondev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sylveondev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sylveondev/subscriptions",
      "organizations_url": "https://api.github.com/users/Sylveondev/orgs",
      "repos_url": "https://api.github.com/users/Sylveondev/repos",
      "events_url": "https://api.github.com/users/Sylveondev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sylveondev/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-01-02T17:38:15Z",
    "updated_at": "2021-01-04T14:15:42Z",
    "closed_at": "2021-01-03T12:07:04Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4500",
      "html_url": "https://github.com/expressjs/express/pull/4500",
      "diff_url": "https://github.com/expressjs/express/pull/4500.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4500.patch",
      "merged_at": null
    },
    "body": "The current ejs include tag listed here results in a error. I fixed it to include a minus after the % as that worked for me.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4500/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4500/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4499",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4499/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4499/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4499/events",
    "html_url": "https://github.com/expressjs/express/issues/4499",
    "id": 776922136,
    "node_id": "MDU6SXNzdWU3NzY5MjIxMzY=",
    "number": 4499,
    "title": "Is there a way to redirect silently ?",
    "user": {
      "login": "qlereboursBS",
      "id": 27200095,
      "node_id": "MDQ6VXNlcjI3MjAwMDk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/27200095?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qlereboursBS",
      "html_url": "https://github.com/qlereboursBS",
      "followers_url": "https://api.github.com/users/qlereboursBS/followers",
      "following_url": "https://api.github.com/users/qlereboursBS/following{/other_user}",
      "gists_url": "https://api.github.com/users/qlereboursBS/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qlereboursBS/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qlereboursBS/subscriptions",
      "organizations_url": "https://api.github.com/users/qlereboursBS/orgs",
      "repos_url": "https://api.github.com/users/qlereboursBS/repos",
      "events_url": "https://api.github.com/users/qlereboursBS/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qlereboursBS/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-12-31T11:08:04Z",
    "updated_at": "2021-01-04T14:16:21Z",
    "closed_at": "2021-01-04T12:11:51Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello,\r\nfirst, I'd like to say that this is a question, please add the question tag to this issue.\r\n\r\nMy question is: Is there a way to redirect silently?\r\nWhat I mean by \"redirect silently\" is that I don't want the user that is requesting to know that there was a redirection:\r\n - It shouldn't answer with a 3xx code, but with the code returned by the route it's been redirected to\r\n - Any header should show the URL we've been redirected to\r\n\r\nIf you want to know more, this is for an API versioning use case (the user reaches `/api/users` and we created an interceptor that redirects to `/api/v7/users` depending on the api he passed as a header, we'll know which version he's using).",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4499/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4499/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4498",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4498/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4498/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4498/events",
    "html_url": "https://github.com/expressjs/express/issues/4498",
    "id": 776672631,
    "node_id": "MDU6SXNzdWU3NzY2NzI2MzE=",
    "number": 4498,
    "title": "Feature: add webpack in order to have a lower bundle size",
    "user": {
      "login": "euberdeveloper",
      "id": 33126163,
      "node_id": "MDQ6VXNlcjMzMTI2MTYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/33126163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/euberdeveloper",
      "html_url": "https://github.com/euberdeveloper",
      "followers_url": "https://api.github.com/users/euberdeveloper/followers",
      "following_url": "https://api.github.com/users/euberdeveloper/following{/other_user}",
      "gists_url": "https://api.github.com/users/euberdeveloper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/euberdeveloper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/euberdeveloper/subscriptions",
      "organizations_url": "https://api.github.com/users/euberdeveloper/orgs",
      "repos_url": "https://api.github.com/users/euberdeveloper/repos",
      "events_url": "https://api.github.com/users/euberdeveloper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/euberdeveloper/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-12-30T23:14:02Z",
    "updated_at": "2022-01-20T15:13:06Z",
    "closed_at": "2020-12-30T23:16:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I think that webpack could be a good option in order to reduce the package size. I have already done it [here](https://github.com/expressjs/express/pull/4497), but it appears that only with nodejs 5 on travis it cannot install the dependencies ([here](https://travis-ci.org/github/euberdeveloper/express)).  Actually I tried it only with the last version of node and worked, it could be a starting point.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4498/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4498/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4497",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4497/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4497/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4497/events",
    "html_url": "https://github.com/expressjs/express/pull/4497",
    "id": 776659866,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTQ3MTA2MjMw",
    "number": 4497,
    "title": "perf: add webpack",
    "user": {
      "login": "euberdeveloper",
      "id": 33126163,
      "node_id": "MDQ6VXNlcjMzMTI2MTYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/33126163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/euberdeveloper",
      "html_url": "https://github.com/euberdeveloper",
      "followers_url": "https://api.github.com/users/euberdeveloper/followers",
      "following_url": "https://api.github.com/users/euberdeveloper/following{/other_user}",
      "gists_url": "https://api.github.com/users/euberdeveloper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/euberdeveloper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/euberdeveloper/subscriptions",
      "organizations_url": "https://api.github.com/users/euberdeveloper/orgs",
      "repos_url": "https://api.github.com/users/euberdeveloper/repos",
      "events_url": "https://api.github.com/users/euberdeveloper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/euberdeveloper/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-12-30T22:22:47Z",
    "updated_at": "2020-12-30T22:28:07Z",
    "closed_at": "2020-12-30T22:27:22Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4497",
      "html_url": "https://github.com/expressjs/express/pull/4497",
      "diff_url": "https://github.com/expressjs/express/pull/4497.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4497.patch",
      "merged_at": null
    },
    "body": "The `lib` folder and the `index.js` weigh `98,2KB`. \r\n\r\nThis code could be bundled through `webpack` in a unique `index.js` file. After adding webpack, all the code weigh `30,0KB`, which is more than three times lower than the unbundled package.\r\n\r\nOnly the `HISTORY` file, which is included in the published npm package, weigh `109KB`, but I think that adding a bundler is always an improvement.\r\n\r\nHence in this pullrequest I added webpack and the npm script to bundle the package.\r\n\r\nChanges:\r\n- Added `webpack` deps to the dev dependencies of `package.json`\r\n- Added a `webpack.config.js`, adding it in the `.eslintignore`\r\n- On `view.js`, I added a `__non_webpack_require__` where there was the dynamic `require(mod)`. This is because when you require a `var`, in order to keep it as a `require` after webpacking it, you should add `__non_webpack_require__`. This does not brake the code because it is used only if `process.env.WEBPACKING` is defined, which happens only when running webpack.\r\n- On `package.json`, as for the code, in `files`, only the generated `bundled` folder is published. A script for cleaning and bundling is added and also the `prepublishOnly` script was added.\r\n- On `package.json`, the `main` has been set to `bundled/index.js`\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4497/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4497/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4496",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4496/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4496/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4496/events",
    "html_url": "https://github.com/expressjs/express/issues/4496",
    "id": 775105343,
    "node_id": "MDU6SXNzdWU3NzUxMDUzNDM=",
    "number": 4496,
    "title": "req.secure gives false even when it's https",
    "user": {
      "login": "damagicalcat",
      "id": 73037964,
      "node_id": "MDQ6VXNlcjczMDM3OTY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/73037964?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damagicalcat",
      "html_url": "https://github.com/damagicalcat",
      "followers_url": "https://api.github.com/users/damagicalcat/followers",
      "following_url": "https://api.github.com/users/damagicalcat/following{/other_user}",
      "gists_url": "https://api.github.com/users/damagicalcat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damagicalcat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damagicalcat/subscriptions",
      "organizations_url": "https://api.github.com/users/damagicalcat/orgs",
      "repos_url": "https://api.github.com/users/damagicalcat/repos",
      "events_url": "https://api.github.com/users/damagicalcat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damagicalcat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-12-27T20:46:51Z",
    "updated_at": "2020-12-28T16:00:10Z",
    "closed_at": "2020-12-28T16:00:10Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In the documentation it says **req.secure** is equivalent to **req.protocol === 'https'**\r\n\r\nHowever req.secure returns false even if it was https",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4496/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4496/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4495",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4495/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4495/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4495/events",
    "html_url": "https://github.com/expressjs/express/issues/4495",
    "id": 775082118,
    "node_id": "MDU6SXNzdWU3NzUwODIxMTg=",
    "number": 4495,
    "title": "Hi, any idea why I am getting this error in node js?",
    "user": {
      "login": "Mirwes",
      "id": 61035569,
      "node_id": "MDQ6VXNlcjYxMDM1NTY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/61035569?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mirwes",
      "html_url": "https://github.com/Mirwes",
      "followers_url": "https://api.github.com/users/Mirwes/followers",
      "following_url": "https://api.github.com/users/Mirwes/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mirwes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mirwes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mirwes/subscriptions",
      "organizations_url": "https://api.github.com/users/Mirwes/orgs",
      "repos_url": "https://api.github.com/users/Mirwes/repos",
      "events_url": "https://api.github.com/users/Mirwes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mirwes/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2020-12-27T17:58:20Z",
    "updated_at": "2020-12-28T18:38:23Z",
    "closed_at": "2020-12-27T18:42:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Here's code for JSON \r\n\r\n{\r\n  \"name\": \"myserver\",\r\n  \"version\": \"1.0.0\",\r\n  \"description\": \"form\",\r\n  \"main\": \"index.js\",\r\n  \"scripts\": {\r\n    \"start\":\"node index.js\",\r\n    \"myserver\":\"nodemon index.js\",\r\n    \"newtailor\":\"npm start --prefix newtailor\",\r\n    \"dev\":\"concurrently \\\"npm run myserver\\\" \\\"npm run newtailor\\\"\"\r\n  },\r\n  \"author\": \"wes\",\r\n  \"license\": \"ISC\",\r\n  \"dependencies\": {\r\n    \"body-parser\": \"^1.19.0\",\r\n    \"concurrently\": \"^5.3.0\",\r\n    \"cors\": \"^2.8.5\",\r\n    \"express\": \"^4.17.1\",\r\n    \"nodemailer\": \"^6.4.17\",\r\n    \"nodemon\": \"^2.0.6\"\r\n  }\r\n}\r\n\r\n\r\nThis is the error it returns\r\n\r\nnpm ERR! JSON.parse     \"newtailor\":\"npm...'\r\nnpm ERR! JSON.parse Failed to parse package.json data.\r\nnpm ERR! JSON.parse package.json must be actual JSON, not just JavaScript.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4495/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4495/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4494",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4494/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4494/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4494/events",
    "html_url": "https://github.com/expressjs/express/issues/4494",
    "id": 774811434,
    "node_id": "MDU6SXNzdWU3NzQ4MTE0MzQ=",
    "number": 4494,
    "title": "req.hostname getting undefined when listening event 'upgrade'",
    "user": {
      "login": "MurylloEx",
      "id": 32225687,
      "node_id": "MDQ6VXNlcjMyMjI1Njg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/32225687?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MurylloEx",
      "html_url": "https://github.com/MurylloEx",
      "followers_url": "https://api.github.com/users/MurylloEx/followers",
      "following_url": "https://api.github.com/users/MurylloEx/following{/other_user}",
      "gists_url": "https://api.github.com/users/MurylloEx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MurylloEx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MurylloEx/subscriptions",
      "organizations_url": "https://api.github.com/users/MurylloEx/orgs",
      "repos_url": "https://api.github.com/users/MurylloEx/repos",
      "events_url": "https://api.github.com/users/MurylloEx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MurylloEx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-12-26T02:38:55Z",
    "updated_at": "2020-12-26T02:41:38Z",
    "closed_at": "2020-12-26T02:41:32Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello everyone.\r\n\r\nFirst of all, I would like to wish a merry christmas and a happy new year to all the people who read this issue. \r\n\r\nRecently I've been working with websockets and trying to route them through the 'node-http-proxy' package which does it with a good job. However, to route the websockets I need to listen to the .on event ('upgrade') and obtain its origin host to decide which proxy I will forward my socket to. In my test scenarios, running Express v 4.17.1 and node-http-proxy v. 1.1.9 when I try to connect using a browser websocket I receive the 'upgrade' event as expected but the req.hostname property is undefined while the req.headers.host property is set.\r\n\r\nAny idea why this is happening? If this feature isnt supported yet, I would appreciate it if req.hostname was also available for the upgrade event. \r\n\r\nMy node.js version is 10.16.0\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4494/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4494/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4493",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4493/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4493/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4493/events",
    "html_url": "https://github.com/expressjs/express/issues/4493",
    "id": 774648756,
    "node_id": "MDU6SXNzdWU3NzQ2NDg3NTY=",
    "number": 4493,
    "title": "Can't install express ",
    "user": {
      "login": "fdciabdul",
      "id": 31664438,
      "node_id": "MDQ6VXNlcjMxNjY0NDM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/31664438?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fdciabdul",
      "html_url": "https://github.com/fdciabdul",
      "followers_url": "https://api.github.com/users/fdciabdul/followers",
      "following_url": "https://api.github.com/users/fdciabdul/following{/other_user}",
      "gists_url": "https://api.github.com/users/fdciabdul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fdciabdul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fdciabdul/subscriptions",
      "organizations_url": "https://api.github.com/users/fdciabdul/orgs",
      "repos_url": "https://api.github.com/users/fdciabdul/repos",
      "events_url": "https://api.github.com/users/fdciabdul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fdciabdul/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-12-25T06:32:37Z",
    "updated_at": "2020-12-25T14:36:55Z",
    "closed_at": "2020-12-25T13:49:01Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "![Screenshot from 2020-12-25 13-31-07](https://user-images.githubusercontent.com/31664438/103123091-9bb09d00-46b5-11eb-8d0a-162948c85f83.png)\r\n\r\nIn ubuntu 20 Groovy",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4493/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4493/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4492",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4492/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4492/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4492/events",
    "html_url": "https://github.com/expressjs/express/pull/4492",
    "id": 774589495,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTQ1NDg3MTI4",
    "number": 4492,
    "title": "Webpack support",
    "user": {
      "login": "panpansh",
      "id": 790586,
      "node_id": "MDQ6VXNlcjc5MDU4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790586?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/panpansh",
      "html_url": "https://github.com/panpansh",
      "followers_url": "https://api.github.com/users/panpansh/followers",
      "following_url": "https://api.github.com/users/panpansh/following{/other_user}",
      "gists_url": "https://api.github.com/users/panpansh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/panpansh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/panpansh/subscriptions",
      "organizations_url": "https://api.github.com/users/panpansh/orgs",
      "repos_url": "https://api.github.com/users/panpansh/repos",
      "events_url": "https://api.github.com/users/panpansh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/panpansh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55587817,
        "node_id": "MDU6TGFiZWw1NTU4NzgxNw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/needs%20tests",
        "name": "needs tests",
        "color": "e11d21",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-12-25T00:47:02Z",
    "updated_at": "2020-12-25T15:33:32Z",
    "closed_at": "2020-12-25T15:33:16Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4492",
      "html_url": "https://github.com/expressjs/express/pull/4492",
      "diff_url": "https://github.com/expressjs/express/pull/4492.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4492.patch",
      "merged_at": null
    },
    "body": "```js\r\nUsage : \r\n// normal use == no changes\r\napp.set('view engine', 'pug');\r\n// webpack use\r\nconst view_engine = require('pug');\r\napp.set('view engine', { name: 'pug', req: view_engine });\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4492/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4492/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4491",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4491/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4491/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4491/events",
    "html_url": "https://github.com/expressjs/express/issues/4491",
    "id": 774551051,
    "node_id": "MDU6SXNzdWU3NzQ1NTEwNTE=",
    "number": 4491,
    "title": "Alternative to not hack express for webpack",
    "user": {
      "login": "panpansh",
      "id": 790586,
      "node_id": "MDQ6VXNlcjc5MDU4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790586?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/panpansh",
      "html_url": "https://github.com/panpansh",
      "followers_url": "https://api.github.com/users/panpansh/followers",
      "following_url": "https://api.github.com/users/panpansh/following{/other_user}",
      "gists_url": "https://api.github.com/users/panpansh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/panpansh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/panpansh/subscriptions",
      "organizations_url": "https://api.github.com/users/panpansh/orgs",
      "repos_url": "https://api.github.com/users/panpansh/repos",
      "events_url": "https://api.github.com/users/panpansh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/panpansh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2020-12-24T20:13:37Z",
    "updated_at": "2020-12-25T03:37:29Z",
    "closed_at": "2020-12-25T01:04:38Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "is there an alternative to not hack express in order to be bundled with webpack ?\r\nhere i'm using 'pug' by default : \r\n\r\nexpress/lib/view.js:81\r\n```js\r\nvar fn = require('pug').__express\r\n```\r\n\r\nregards",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4491/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4491/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4490",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4490/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4490/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4490/events",
    "html_url": "https://github.com/expressjs/express/issues/4490",
    "id": 772425648,
    "node_id": "MDU6SXNzdWU3NzI0MjU2NDg=",
    "number": 4490,
    "title": "Update copyright notice in license.",
    "user": {
      "login": "mollthecoder",
      "id": 63081316,
      "node_id": "MDQ6VXNlcjYzMDgxMzE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/63081316?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mollthecoder",
      "html_url": "https://github.com/mollthecoder",
      "followers_url": "https://api.github.com/users/mollthecoder/followers",
      "following_url": "https://api.github.com/users/mollthecoder/following{/other_user}",
      "gists_url": "https://api.github.com/users/mollthecoder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mollthecoder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mollthecoder/subscriptions",
      "organizations_url": "https://api.github.com/users/mollthecoder/orgs",
      "repos_url": "https://api.github.com/users/mollthecoder/repos",
      "events_url": "https://api.github.com/users/mollthecoder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mollthecoder/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-12-21T19:58:52Z",
    "updated_at": "2020-12-21T20:12:56Z",
    "closed_at": "2020-12-21T20:00:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In the license, the year on the copyright notice needs updated.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4490/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4490/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4489",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4489/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4489/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4489/events",
    "html_url": "https://github.com/expressjs/express/issues/4489",
    "id": 771391470,
    "node_id": "MDU6SXNzdWU3NzEzOTE0NzA=",
    "number": 4489,
    "title": "update version of array-flatten dependency",
    "user": {
      "login": "peZhmanParsaee",
      "id": 10687474,
      "node_id": "MDQ6VXNlcjEwNjg3NDc0",
      "avatar_url": "https://avatars.githubusercontent.com/u/10687474?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/peZhmanParsaee",
      "html_url": "https://github.com/peZhmanParsaee",
      "followers_url": "https://api.github.com/users/peZhmanParsaee/followers",
      "following_url": "https://api.github.com/users/peZhmanParsaee/following{/other_user}",
      "gists_url": "https://api.github.com/users/peZhmanParsaee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/peZhmanParsaee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/peZhmanParsaee/subscriptions",
      "organizations_url": "https://api.github.com/users/peZhmanParsaee/orgs",
      "repos_url": "https://api.github.com/users/peZhmanParsaee/repos",
      "events_url": "https://api.github.com/users/peZhmanParsaee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/peZhmanParsaee/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-12-19T14:33:24Z",
    "updated_at": "2020-12-19T15:50:04Z",
    "closed_at": "2020-12-19T15:49:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi all,\r\n\r\nI've got an error when trying to install express via npm install. The error is:\r\n\r\n`\r\nnpm ERR! code E404\r\nnpm ERR! 404 Not Found - GET http://registry.npmjs.org/array-flatten\r\nnpm ERR! 404 \r\nnpm ERR! 404  'array-flatten@1.1.1' is not in the npm registry.\r\nnpm ERR! 404 You should bug the author to publish it (or use the name yourself!)\r\nnpm ERR! 404 It was specified as a dependency of 'express'\r\n`\r\n\r\nAs error said version 1.1.1 of array-flatten is not in the npm registry anymore. So, I updated it to the latest version and make a pull request ( #4488 ). I wonder if you accept my change.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4489/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4489/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4488",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4488/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4488/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4488/events",
    "html_url": "https://github.com/expressjs/express/pull/4488",
    "id": 771390388,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTQyOTMzNDk0",
    "number": 4488,
    "title": "update version of array-flatten to 3.0.0",
    "user": {
      "login": "peZhmanParsaee",
      "id": 10687474,
      "node_id": "MDQ6VXNlcjEwNjg3NDc0",
      "avatar_url": "https://avatars.githubusercontent.com/u/10687474?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/peZhmanParsaee",
      "html_url": "https://github.com/peZhmanParsaee",
      "followers_url": "https://api.github.com/users/peZhmanParsaee/followers",
      "following_url": "https://api.github.com/users/peZhmanParsaee/following{/other_user}",
      "gists_url": "https://api.github.com/users/peZhmanParsaee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/peZhmanParsaee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/peZhmanParsaee/subscriptions",
      "organizations_url": "https://api.github.com/users/peZhmanParsaee/orgs",
      "repos_url": "https://api.github.com/users/peZhmanParsaee/repos",
      "events_url": "https://api.github.com/users/peZhmanParsaee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/peZhmanParsaee/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 133578716,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/deps",
        "name": "deps",
        "color": "444444",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-12-19T14:26:40Z",
    "updated_at": "2020-12-19T16:51:52Z",
    "closed_at": "2020-12-19T16:51:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4488",
      "html_url": "https://github.com/expressjs/express/pull/4488",
      "diff_url": "https://github.com/expressjs/express/pull/4488.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4488.patch",
      "merged_at": null
    },
    "body": "An express dependency, named array-flatten with version 1.1.1 is not in npm registry anymore. \r\nI updated the version of array-flatten to 3.0.0 (latest version)",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4488/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4488/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4487",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4487/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4487/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4487/events",
    "html_url": "https://github.com/expressjs/express/issues/4487",
    "id": 770486334,
    "node_id": "MDU6SXNzdWU3NzA0ODYzMzQ=",
    "number": 4487,
    "title": "Why Expressjs code base is not being updated to new javaScript/Nodejs standards",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-12-18T01:04:38Z",
    "updated_at": "2021-04-17T20:59:33Z",
    "closed_at": "2020-12-18T01:10:45Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "We all know Expressjs is the **greatest perfect** Nodejs framework ever created and everyone love it, use it and if you are new to Nodejs its the first thing you learn (many books about Nodejs/JavaScript are just teaching Expressjs). \r\n\r\nQuestions:\r\n1. Why Expressjs code base is not being updated to newer JavaScript/Nodejs standards. \r\n2. Why such a great open source project is abandoned?\r\n3. Is Expressjs a dead open source project?\r\n4. Will there ever be express 5, 6, 7, 8?\r\n5. Why no one is updating it or interested in updating?\r\n6. Is it safe to use express for future projects\r\nand more questions and more questions.....?\r\n\r\nHappy coding,\r\nThank You\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4487/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4487/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4486",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4486/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4486/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4486/events",
    "html_url": "https://github.com/expressjs/express/issues/4486",
    "id": 767902153,
    "node_id": "MDU6SXNzdWU3Njc5MDIxNTM=",
    "number": 4486,
    "title": "Feature request: Auto generate app.listen port",
    "user": {
      "login": "jinnatul",
      "id": 31995155,
      "node_id": "MDQ6VXNlcjMxOTk1MTU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/31995155?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jinnatul",
      "html_url": "https://github.com/jinnatul",
      "followers_url": "https://api.github.com/users/jinnatul/followers",
      "following_url": "https://api.github.com/users/jinnatul/following{/other_user}",
      "gists_url": "https://api.github.com/users/jinnatul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jinnatul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jinnatul/subscriptions",
      "organizations_url": "https://api.github.com/users/jinnatul/orgs",
      "repos_url": "https://api.github.com/users/jinnatul/repos",
      "events_url": "https://api.github.com/users/jinnatul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jinnatul/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-12-15T17:43:15Z",
    "updated_at": "2020-12-15T17:46:02Z",
    "closed_at": "2020-12-15T17:44:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "We know, when we create a react application then, it automatically creates a port and runs the application to this port. \r\n\r\nIn the case when we create an express server then we provide a custom port like this\r\n```js\r\napp.listen(3000)\r\n```\r\nI face some issues when I use a custom port number.\r\n\r\nIt's possible to generate a port automatically?\r\n\r\nExample: 1st time my application run on 3000 number port but when 3000 number port is busy then it's run on 3001 number port automatically (Like react application generate auto port).",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4486/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4486/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4485",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4485/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4485/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4485/events",
    "html_url": "https://github.com/expressjs/express/issues/4485",
    "id": 766957290,
    "node_id": "MDU6SXNzdWU3NjY5NTcyOTA=",
    "number": 4485,
    "title": "Html image not working.",
    "user": {
      "login": "TheFinality",
      "id": 67923032,
      "node_id": "MDQ6VXNlcjY3OTIzMDMy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67923032?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheFinality",
      "html_url": "https://github.com/TheFinality",
      "followers_url": "https://api.github.com/users/TheFinality/followers",
      "following_url": "https://api.github.com/users/TheFinality/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheFinality/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheFinality/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheFinality/subscriptions",
      "organizations_url": "https://api.github.com/users/TheFinality/orgs",
      "repos_url": "https://api.github.com/users/TheFinality/repos",
      "events_url": "https://api.github.com/users/TheFinality/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheFinality/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-12-14T21:47:23Z",
    "updated_at": "2020-12-15T15:41:04Z",
    "closed_at": "2020-12-15T15:40:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "So basically, i put a file in pfps/1.jpg. I did res.sendFile(__dirname + 'pfps/1.jpg'), and that worked. But when i do \r\nlet path = (__dirname + 'pfps/1.jpg')\r\nres.send(`\r\n<img src=${path}>\r\n`), it does not work. the image does not load.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4485/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4485/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4484",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4484/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4484/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4484/events",
    "html_url": "https://github.com/expressjs/express/issues/4484",
    "id": 765540606,
    "node_id": "MDU6SXNzdWU3NjU1NDA2MDY=",
    "number": 4484,
    "title": "Static images are not being served with express.static",
    "user": {
      "login": "jblevins1991",
      "id": 1040084,
      "node_id": "MDQ6VXNlcjEwNDAwODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1040084?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jblevins1991",
      "html_url": "https://github.com/jblevins1991",
      "followers_url": "https://api.github.com/users/jblevins1991/followers",
      "following_url": "https://api.github.com/users/jblevins1991/following{/other_user}",
      "gists_url": "https://api.github.com/users/jblevins1991/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jblevins1991/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jblevins1991/subscriptions",
      "organizations_url": "https://api.github.com/users/jblevins1991/orgs",
      "repos_url": "https://api.github.com/users/jblevins1991/repos",
      "events_url": "https://api.github.com/users/jblevins1991/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jblevins1991/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-12-13T17:16:54Z",
    "updated_at": "2020-12-13T18:02:02Z",
    "closed_at": "2020-12-13T18:02:02Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am currently  on express v4.17.1 and have a very simple express application that sits in front of a spa. I wanted to add static images to this express application, but I get 404s on all of the images in my `static/cards` directory. Any help would be appreciated.\r\n\r\nFor context, the spa is served to the browser just fine. Just none of the images.\r\n\r\n```\r\nconst express = require('express')\r\nconst path = require('path')\r\nconst wwwhisper = require('connect-wwwhisper')\r\n\r\nconst app = express()\r\nconst port = process.env.PORT || 3000\r\n\r\napp.use(wwwhisper())\r\n\r\n// serve files from dist\r\napp.use(express.static(path.resolve(__dirname, 'dist')))\r\n\r\n// serve files from static\r\napp.use('/cards', express.static(path.resolve(__dirname, 'static', 'cards')))\r\n\r\n// spa catch all\r\napp.get('*', (request, response) => {\r\n    response.sendFile(path.resolve(__dirname, 'dist', 'index.html'))\r\n})\r\n\r\napp.listen(port, () => console.log(`Server started on port ${port}.`))\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4484/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4484/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4483",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4483/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4483/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4483/events",
    "html_url": "https://github.com/expressjs/express/issues/4483",
    "id": 765458734,
    "node_id": "MDU6SXNzdWU3NjU0NTg3MzQ=",
    "number": 4483,
    "title": "Is there anyway to catch the socket error event?",
    "user": {
      "login": "sc0Vu",
      "id": 10494397,
      "node_id": "MDQ6VXNlcjEwNDk0Mzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10494397?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sc0Vu",
      "html_url": "https://github.com/sc0Vu",
      "followers_url": "https://api.github.com/users/sc0Vu/followers",
      "following_url": "https://api.github.com/users/sc0Vu/following{/other_user}",
      "gists_url": "https://api.github.com/users/sc0Vu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sc0Vu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sc0Vu/subscriptions",
      "organizations_url": "https://api.github.com/users/sc0Vu/orgs",
      "repos_url": "https://api.github.com/users/sc0Vu/repos",
      "events_url": "https://api.github.com/users/sc0Vu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sc0Vu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-12-13T15:12:04Z",
    "updated_at": "2020-12-14T06:56:12Z",
    "closed_at": "2020-12-14T06:56:07Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi there,\r\n\r\nThanks for this great library, it works great.\r\n\r\nRecently I tried to debug the request from our gateway server (using golang), client always failed\r\nto load the second request with `HTTP / 1.1 400 connection:close`. And there was no error log in\r\nexpress server.\r\n\r\nAfter debug deeper into Socket (`res.socket.on('error')`), I found connection was closed because of\r\n HPE_INVALID_METHOD (http parser in nodejs).\r\n\r\nI was thinking iss there anyway to catch socket error in express?\r\n\r\nThanks!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4483/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4483/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4482",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4482/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4482/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4482/events",
    "html_url": "https://github.com/expressjs/express/issues/4482",
    "id": 763168951,
    "node_id": "MDU6SXNzdWU3NjMxNjg5NTE=",
    "number": 4482,
    "title": "clearCookie not working",
    "user": {
      "login": "TheFinality",
      "id": 67923032,
      "node_id": "MDQ6VXNlcjY3OTIzMDMy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67923032?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheFinality",
      "html_url": "https://github.com/TheFinality",
      "followers_url": "https://api.github.com/users/TheFinality/followers",
      "following_url": "https://api.github.com/users/TheFinality/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheFinality/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheFinality/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheFinality/subscriptions",
      "organizations_url": "https://api.github.com/users/TheFinality/orgs",
      "repos_url": "https://api.github.com/users/TheFinality/repos",
      "events_url": "https://api.github.com/users/TheFinality/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheFinality/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2020-12-12T01:54:06Z",
    "updated_at": "2020-12-15T21:07:42Z",
    "closed_at": "2020-12-15T21:07:38Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "clearCookie is not working, it works in the example all the time, but in my code, it only worked once....",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4482/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4482/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4481",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4481/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4481/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4481/events",
    "html_url": "https://github.com/expressjs/express/issues/4481",
    "id": 761451068,
    "node_id": "MDU6SXNzdWU3NjE0NTEwNjg=",
    "number": 4481,
    "title": "Rendering with view engine fails with Yarn v2 workspaces",
    "user": {
      "login": "brandon-leapyear",
      "id": 27799541,
      "node_id": "MDQ6VXNlcjI3Nzk5NTQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/27799541?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brandon-leapyear",
      "html_url": "https://github.com/brandon-leapyear",
      "followers_url": "https://api.github.com/users/brandon-leapyear/followers",
      "following_url": "https://api.github.com/users/brandon-leapyear/following{/other_user}",
      "gists_url": "https://api.github.com/users/brandon-leapyear/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brandon-leapyear/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brandon-leapyear/subscriptions",
      "organizations_url": "https://api.github.com/users/brandon-leapyear/orgs",
      "repos_url": "https://api.github.com/users/brandon-leapyear/repos",
      "events_url": "https://api.github.com/users/brandon-leapyear/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brandon-leapyear/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-12-10T17:38:43Z",
    "updated_at": "2020-12-10T18:01:47Z",
    "closed_at": "2020-12-10T18:00:27Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "We're trying to upgrade to Yarn v2 in our project, which uses NestJS in a Yarn workspace. Yarn v2 adds Plug-n-Play which enforces dependencies explicitly list their dependencies. When running our server and calling an endpoint that renders a pug template, we get:\r\n```\r\nexpress tried to access pug, but it isn't declared in its dependencies; this makes the require call ambiguous and unsound.\r\n\r\nRequired package: pug (via \"pug\")\r\nRequired by: express@npm:4.17.1 (via /Users/bchinn/Desktop/yarn2/express-pug-error/.yarn/cache/express-npm-4.17.1-6815ee6bf9-c4b470d623.zip/node_modules/express/lib/)\r\n\r\nRequire stack:\r\n- /Users/bchinn/Desktop/yarn2/express-pug-error/.yarn/cache/express-npm-4.17.1-6815ee6bf9-c4b470d623.zip/node_modules/express/lib/view.js\r\n- /Users/bchinn/Desktop/yarn2/express-pug-error/.yarn/cache/express-npm-4.17.1-6815ee6bf9-c4b470d623.zip/node_modules/express/lib/application.js\r\n- /Users/bchinn/Desktop/yarn2/express-pug-error/.yarn/cache/express-npm-4.17.1-6815ee6bf9-c4b470d623.zip/node_modules/express/lib/express.js\r\n- /Users/bchinn/Desktop/yarn2/express-pug-error/.yarn/cache/express-npm-4.17.1-6815ee6bf9-c4b470d623.zip/node_modules/express/index.js\r\n- /Users/bchinn/Desktop/yarn2/express-pug-error/.yarn/$$virtual/@nestjs-platform-express-virtual-71cd35a84f/0/cache/@nestjs-platform-express-npm-7.5.5-1f245a935a-8af8bba8dc.zip/node_modules/@nestjs/platform-express/adapters/express-adapter.js\r\n- /Users/bchinn/Desktop/yarn2/express-pug-error/.yarn/$$virtual/@nestjs-platform-express-virtual-71cd35a84f/0/cache/@nestjs-platform-express-npm-7.5.5-1f245a935a-8af8bba8dc.zip/node_modules/@nestjs/platform-express/adapters/index.js\r\n- /Users/bchinn/Desktop/yarn2/express-pug-error/.yarn/$$virtual/@nestjs-platform-express-virtual-71cd35a84f/0/cache/@nestjs-platform-express-npm-7.5.5-1f245a935a-8af8bba8dc.zip/node_modules/@nestjs/platform-express/index.js\r\n- /Users/bchinn/Desktop/yarn2/express-pug-error/.yarn/unplugged/@nestjs-core-virtual-74f5478e67/node_modules/@nestjs/core/nest-factory.js\r\n- /Users/bchinn/Desktop/yarn2/express-pug-error/.yarn/unplugged/@nestjs-core-virtual-74f5478e67/node_modules/@nestjs/core/index.js\r\n- /Users/bchinn/Desktop/yarn2/express-pug-error/foo/dist/main.js +9467ms\r\n```\r\nI was able to repro it below using just express, but it seems like this only happens in a workspace. If you run the `yarn` commands below in the `foo` directory (and just `yarn node main.js`) it works.\r\n\r\nI am a little confused why it works without workspaces, but that's a separate question for Yarn (@arcanis if you want to step into this). It seems like the best solution is to have the user resolve the path to the view engine themselves; e.g. instead of\r\n```js\r\n// 'pug' determines both default extension and default module to require\r\napp.set('view engine', 'pug')\r\n\r\n// renders index.pug, requiring 'pug'\r\nres.render('index')\r\n\r\n// renders index.foo, requiring 'foo'\r\nres.render('index.foo')\r\n```\r\ndo\r\n```js\r\n// any engine the user wants to use to render needs to\r\n// be defined here\r\n// maps extension => module\r\napp.set('view engines', {\r\n  pug: require.resolve('pug'),\r\n  foo: require.resolve('foo'),\r\n})\r\n// specifies the default extension\r\napp.set('default view engine', 'pug')\r\n\r\n// shortcut for\r\n//   app.set('view engines', { pug: require.resolve('pug') })\r\n//   app.set('default view engine', 'pug')\r\napp.set('view engine', 'pug', require.resolve('pug'))\r\n\r\n// renders index.pug, requiring 'require.resolve('pug')'\r\nres.render('index')\r\n\r\n// renders index.pug, requiring 'require.resolve('pug')'\r\nres.render('index.pug')\r\n\r\n// renders index.foo, requiring 'require.resolve('foo')'\r\nres.render('index.foo')\r\n```\r\n\r\n## Minimal Repro\r\n\r\n1. Download [repro.tar.gz](https://github.com/expressjs/express/files/5674562/repro.tar.gz)\r\n    1. Contains a top-level `package.json` file that lists `foo/` as a workspace\r\n    1. Contains `foo/` with `main.js` and `package.json`\r\n1. Extract in a new directory\r\n1. `yarn set version berry` (skip this step to use yarn v1, which works)\r\n1. `yarn`\r\n1. `yarn workspace foo node main.js`\r\n1. `curl localhost:3000`\r\n\r\nYarn v2 gets me\r\n```\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n<meta charset=\"utf-8\">\r\n<title>Error</title>\r\n</head>\r\n<body>\r\n<pre>Error: express tried to access pug, but it isn&#39;t declared in its dependencies; this makes the require call ambiguous and unsound.<br><br>Required package: pug (via &quot;pug&quot;)<br>Required by: express@npm:4.17.1 (via /Users/bchinn/Desktop/yarn2/foo/.yarn/cache/express-npm-4.17.1-6815ee6bf9-c4b470d623.zip/node_modules/express/lib/)<br><br>Require stack:<br>- /Users/bchinn/Desktop/yarn2/foo/.yarn/cache/express-npm-4.17.1-6815ee6bf9-c4b470d623.zip/node_modules/express/lib/view.js<br>- /Users/bchinn/Desktop/yarn2/foo/.yarn/cache/express-npm-4.17.1-6815ee6bf9-c4b470d623.zip/node_modules/express/lib/application.js<br>- /Users/bchinn/Desktop/yarn2/foo/.yarn/cache/express-npm-4.17.1-6815ee6bf9-c4b470d623.zip/node_modules/express/lib/express.js<br>- /Users/bchinn/Desktop/yarn2/foo/.yarn/cache/express-npm-4.17.1-6815ee6bf9-c4b470d623.zip/node_modules/express/index.js<br>- /Users/bchinn/Desktop/yarn2/foo/foo/main.js<br> &nbsp; &nbsp;at internalTools_makeError (/Users/bchinn/Desktop/yarn2/foo/.pnp.js:5784:34)<br> &nbsp; &nbsp;at resolveToUnqualified (/Users/bchinn/Desktop/yarn2/foo/.pnp.js:6749:23)<br> &nbsp; &nbsp;at resolveRequest (/Users/bchinn/Desktop/yarn2/foo/.pnp.js:6841:29)<br> &nbsp; &nbsp;at Object.resolveRequest (/Users/bchinn/Desktop/yarn2/foo/.pnp.js:6919:26)<br> &nbsp; &nbsp;at Function.external_module_.Module._resolveFilename (/Users/bchinn/Desktop/yarn2/foo/.pnp.js:6017:34)<br> &nbsp; &nbsp;at Function.external_module_.Module._load (/Users/bchinn/Desktop/yarn2/foo/.pnp.js:5882:48)<br> &nbsp; &nbsp;at Module.require (internal/modules/cjs/loader.js:965:19)<br> &nbsp; &nbsp;at require (internal/modules/cjs/helpers.js:88:18)<br> &nbsp; &nbsp;at new View (/Users/bchinn/Desktop/yarn2/foo/.yarn/cache/express-npm-4.17.1-6815ee6bf9-c4b470d623.zip/node_modules/express/lib/view.js:81:14)<br> &nbsp; &nbsp;at Function.render (/Users/bchinn/Desktop/yarn2/foo/.yarn/cache/express-npm-4.17.1-6815ee6bf9-c4b470d623.zip/node_modules/express/lib/application.js:570:12)</pre>\r\n</body>\r\n</html>\r\n```\r\nwhile Yarn v1 gets me\r\n```\r\n<p>hello world</p>\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4481/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4481/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4480",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4480/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4480/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4480/events",
    "html_url": "https://github.com/expressjs/express/issues/4480",
    "id": 759722634,
    "node_id": "MDU6SXNzdWU3NTk3MjI2MzQ=",
    "number": 4480,
    "title": "How to grouping route?",
    "user": {
      "login": "yoyhosoft",
      "id": 2453589,
      "node_id": "MDQ6VXNlcjI0NTM1ODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2453589?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yoyhosoft",
      "html_url": "https://github.com/yoyhosoft",
      "followers_url": "https://api.github.com/users/yoyhosoft/followers",
      "following_url": "https://api.github.com/users/yoyhosoft/following{/other_user}",
      "gists_url": "https://api.github.com/users/yoyhosoft/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yoyhosoft/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yoyhosoft/subscriptions",
      "organizations_url": "https://api.github.com/users/yoyhosoft/orgs",
      "repos_url": "https://api.github.com/users/yoyhosoft/repos",
      "events_url": "https://api.github.com/users/yoyhosoft/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yoyhosoft/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-12-08T19:37:05Z",
    "updated_at": "2020-12-09T04:42:49Z",
    "closed_at": "2020-12-09T04:42:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Actually I already found some solution like:\r\n\r\n```js\r\nexpress.application.prefix = express.Router.prefix = function (path, configure) {\r\n    let router = express.Router();\r\n    this.use(path, router);\r\n    configure(router);\r\n    return router;\r\n};\r\nconst app = express();\r\n.\r\n.\r\napp.prefix('/api/v1', function (apiV1) {\r\n     \r\n    apiV1.get(\"/\", (req, res) => {    // /api/v1\r\n        res\r\n        .status(200)\r\n        .json({\r\n            message: 'NULL'\r\n        });\r\n    });\r\n\r\n    apiV1.get('/all', async (req, res) => {    // /api/v1/all\r\n        let models = await Models.findAll({\r\n            // raw: true,\r\n        });\r\n\r\n        res\r\n        .status(200)\r\n        .json(models);\r\n    })\r\n});\r\n```\r\nBut, it's will be beater if expressjs have functional like this.\r\nSo, event if some one know function name in expressjs or have some example code please help me.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4480/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4480/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4479",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4479/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4479/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4479/events",
    "html_url": "https://github.com/expressjs/express/issues/4479",
    "id": 759449677,
    "node_id": "MDU6SXNzdWU3NTk0NDk2Nzc=",
    "number": 4479,
    "title": "express.Router() middleware call stack bug",
    "user": {
      "login": "mdmaodun",
      "id": 74582103,
      "node_id": "MDQ6VXNlcjc0NTgyMTAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/74582103?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mdmaodun",
      "html_url": "https://github.com/mdmaodun",
      "followers_url": "https://api.github.com/users/mdmaodun/followers",
      "following_url": "https://api.github.com/users/mdmaodun/following{/other_user}",
      "gists_url": "https://api.github.com/users/mdmaodun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mdmaodun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mdmaodun/subscriptions",
      "organizations_url": "https://api.github.com/users/mdmaodun/orgs",
      "repos_url": "https://api.github.com/users/mdmaodun/repos",
      "events_url": "https://api.github.com/users/mdmaodun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mdmaodun/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-12-08T13:33:17Z",
    "updated_at": "2020-12-08T13:35:45Z",
    "closed_at": "2020-12-08T13:35:45Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "## app.js\r\n```javascript\r\nconst express = require('express');\r\n\r\nconst app = express();\r\n\r\napp.use((req, res, next) => {\r\n  console.log('1');\r\n  next();\r\n  console.log('2');\r\n});\r\n\r\napp.use('/user', require('./router/user.js'));\r\n\r\napp.use((req, res, next) => {\r\n  console.log('3');\r\n  next();\r\n  console.log('4');\r\n});\r\n\r\napp.listen(80, () => {\r\n  console.log('start at http://localhost');\r\n});\r\n```\r\n\r\n------\r\n\r\n## router/user.js\r\n```javascript\r\nconst express = require('express');\r\n\r\nconst router = express.Router();\r\n\r\nrouter.get('/list', (req, res, next) => {\r\n  console.log('5');\r\n  next();\r\n  console.log('6');\r\n});\r\n\r\nrouter.get('/list', (req, res, next) => {\r\n  console.log('7');\r\n  next();\r\n  console.log('8');\r\n});\r\n\r\nmodule.exports = router;\r\n```\r\n\r\n------\r\n\r\n## GET /user/list\r\n> bug: 1 5 7 8 6 2 3 4\r\n> should: 1 5 7 3 4 8 6 2",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4479/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4479/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4478",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4478/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4478/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4478/events",
    "html_url": "https://github.com/expressjs/express/issues/4478",
    "id": 758149196,
    "node_id": "MDU6SXNzdWU3NTgxNDkxOTY=",
    "number": 4478,
    "title": "Internal routing",
    "user": {
      "login": "kien5436",
      "id": 23404165,
      "node_id": "MDQ6VXNlcjIzNDA0MTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23404165?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kien5436",
      "html_url": "https://github.com/kien5436",
      "followers_url": "https://api.github.com/users/kien5436/followers",
      "following_url": "https://api.github.com/users/kien5436/following{/other_user}",
      "gists_url": "https://api.github.com/users/kien5436/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kien5436/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kien5436/subscriptions",
      "organizations_url": "https://api.github.com/users/kien5436/orgs",
      "repos_url": "https://api.github.com/users/kien5436/repos",
      "events_url": "https://api.github.com/users/kien5436/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kien5436/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-12-07T04:42:03Z",
    "updated_at": "2020-12-07T05:20:44Z",
    "closed_at": "2020-12-07T05:18:48Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm using Express version 4.17.1 and want to implement internal routing in app.\r\nExample, I have 2 routes like this:\r\n```js\r\nfunction register(req, res, next) {\r\n  // validate infos\r\n  ...\r\n  // forward to `token` route\r\n  next('/token') // not work, I know\r\n}\r\n\r\nfunction token(req, res, next) {\r\n  const token = generate(req.user);\r\n  res.json({ token })\r\n}\r\n\r\nrouter\r\n  .use('/register', register)\r\n  .use('/token', token)\r\n```\r\nAfter user requesting a valid registration, the router will forward user infomations to `token` route to generate new access token and send response to user. However, according to the docs, `next` function only accepts `route` and `router` as valid arguments, others will be considered as error message. On the other side, the `token` route must be placed after `register` route to forwarding work. I want a method like `forward` which can call to any route without having to worry about ordering or nesting. The docs also say\r\n![image](https://user-images.githubusercontent.com/23404165/101309956-36b91280-3880-11eb-8e55-cfc501710cfa.png)\r\nbut there are no instructions on how to use it!\r\nI found an disscussion on [StackOverflow](https://stackoverflow.com/questions/18136323/forward-request-to-alternate-request-handler-instead-of-redirect), I tried all of solutions, only one worked: define a separate function and call it inside route. But I want a clearer and beautiful way like `forward('/any/route')`.\r\nCan you consider to add a new method to resolve this problem?\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4478/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4478/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4477",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4477/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4477/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4477/events",
    "html_url": "https://github.com/expressjs/express/issues/4477",
    "id": 757846440,
    "node_id": "MDU6SXNzdWU3NTc4NDY0NDA=",
    "number": 4477,
    "title": "Discord server as another new community!",
    "user": {
      "login": "sayantan300",
      "id": 62213554,
      "node_id": "MDQ6VXNlcjYyMjEzNTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/62213554?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sayantan300",
      "html_url": "https://github.com/sayantan300",
      "followers_url": "https://api.github.com/users/sayantan300/followers",
      "following_url": "https://api.github.com/users/sayantan300/following{/other_user}",
      "gists_url": "https://api.github.com/users/sayantan300/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sayantan300/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sayantan300/subscriptions",
      "organizations_url": "https://api.github.com/users/sayantan300/orgs",
      "repos_url": "https://api.github.com/users/sayantan300/repos",
      "events_url": "https://api.github.com/users/sayantan300/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sayantan300/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 163600,
        "node_id": "MDU6TGFiZWwxNjM2MDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 37,
    "created_at": "2020-12-06T04:52:13Z",
    "updated_at": "2021-04-23T13:05:59Z",
    "closed_at": "2021-04-23T13:05:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "There are a lot of communities listed in ur readme, but there's an important group missing, and there are a lot of coders using express and are on discord. This can view discord [website] (https://discord.com) and look at its features. \r\nAll the communities listed on ur documentation are not popular as discord. So let's have one in discord. And since it's a open source project, you are also qualified in their own source communities\r\nhttps://discord.com/open-source\r\nI'm very much sure that if you all create a server for helping each other on discord, you will get over 10000+ members because this npm package is an important part in web apps created with nodejs 😅. If you all are ready for it, kindly let me know here...",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4477/reactions",
      "total_count": 5,
      "+1": 5,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4477/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4474",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4474/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4474/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4474/events",
    "html_url": "https://github.com/expressjs/express/pull/4474",
    "id": 755587939,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTMxMjcxNTg2",
    "number": 4474,
    "title": "Update index.js",
    "user": {
      "login": "santimirandarp",
      "id": 29411936,
      "node_id": "MDQ6VXNlcjI5NDExOTM2",
      "avatar_url": "https://avatars.githubusercontent.com/u/29411936?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/santimirandarp",
      "html_url": "https://github.com/santimirandarp",
      "followers_url": "https://api.github.com/users/santimirandarp/followers",
      "following_url": "https://api.github.com/users/santimirandarp/following{/other_user}",
      "gists_url": "https://api.github.com/users/santimirandarp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/santimirandarp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/santimirandarp/subscriptions",
      "organizations_url": "https://api.github.com/users/santimirandarp/orgs",
      "repos_url": "https://api.github.com/users/santimirandarp/repos",
      "events_url": "https://api.github.com/users/santimirandarp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/santimirandarp/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-12-02T20:28:43Z",
    "updated_at": "2020-12-03T20:00:41Z",
    "closed_at": "2020-12-03T20:00:25Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4474",
      "html_url": "https://github.com/expressjs/express/pull/4474",
      "diff_url": "https://github.com/expressjs/express/pull/4474.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4474.patch",
      "merged_at": null
    },
    "body": "Just included a nicer notation",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4474/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4474/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4473",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4473/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4473/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4473/events",
    "html_url": "https://github.com/expressjs/express/issues/4473",
    "id": 752923119,
    "node_id": "MDU6SXNzdWU3NTI5MjMxMTk=",
    "number": 4473,
    "title": "ESM exports",
    "user": {
      "login": "ssslambda",
      "id": 66798311,
      "node_id": "MDQ6VXNlcjY2Nzk4MzEx",
      "avatar_url": "https://avatars.githubusercontent.com/u/66798311?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssslambda",
      "html_url": "https://github.com/ssslambda",
      "followers_url": "https://api.github.com/users/ssslambda/followers",
      "following_url": "https://api.github.com/users/ssslambda/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssslambda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssslambda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssslambda/subscriptions",
      "organizations_url": "https://api.github.com/users/ssslambda/orgs",
      "repos_url": "https://api.github.com/users/ssslambda/repos",
      "events_url": "https://api.github.com/users/ssslambda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssslambda/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-11-29T13:57:22Z",
    "updated_at": "2020-11-29T19:26:32Z",
    "closed_at": "2020-11-29T19:22:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Node supports both CJS and ESM exports, [for imports] depending on type field in package.json, so it would be nice if there was a way to import express as ESM, not only CJS",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4473/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4473/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4472",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4472/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4472/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4472/events",
    "html_url": "https://github.com/expressjs/express/issues/4472",
    "id": 752837726,
    "node_id": "MDU6SXNzdWU3NTI4Mzc3MjY=",
    "number": 4472,
    "title": "IP Address Given by Express is Wrong",
    "user": {
      "login": "damagicalcat",
      "id": 73037964,
      "node_id": "MDQ6VXNlcjczMDM3OTY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/73037964?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damagicalcat",
      "html_url": "https://github.com/damagicalcat",
      "followers_url": "https://api.github.com/users/damagicalcat/followers",
      "following_url": "https://api.github.com/users/damagicalcat/following{/other_user}",
      "gists_url": "https://api.github.com/users/damagicalcat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damagicalcat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damagicalcat/subscriptions",
      "organizations_url": "https://api.github.com/users/damagicalcat/orgs",
      "repos_url": "https://api.github.com/users/damagicalcat/repos",
      "events_url": "https://api.github.com/users/damagicalcat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damagicalcat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-11-29T04:45:02Z",
    "updated_at": "2020-11-29T05:32:20Z",
    "closed_at": "2020-11-29T05:32:19Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Recently, I realized the IP addresses given by express.js with req.ip is wrong, when I visit my website express.js gives me an ip address that I never heard of and have no information for when I look it up. But when I visit an ip website like whatismyip.com it gives me my correct ip.\r\nI am not using a proxy or a vpn.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4472/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4472/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4471",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4471/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4471/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4471/events",
    "html_url": "https://github.com/expressjs/express/pull/4471",
    "id": 752834138,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTI5MDUzODU4",
    "number": 4471,
    "title": "Improve 404 response message language in web-service example",
    "user": {
      "login": "aalaap",
      "id": 79404,
      "node_id": "MDQ6VXNlcjc5NDA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/79404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aalaap",
      "html_url": "https://github.com/aalaap",
      "followers_url": "https://api.github.com/users/aalaap/followers",
      "following_url": "https://api.github.com/users/aalaap/following{/other_user}",
      "gists_url": "https://api.github.com/users/aalaap/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aalaap/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aalaap/subscriptions",
      "organizations_url": "https://api.github.com/users/aalaap/orgs",
      "repos_url": "https://api.github.com/users/aalaap/repos",
      "events_url": "https://api.github.com/users/aalaap/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aalaap/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-11-29T04:15:51Z",
    "updated_at": "2021-12-16T20:12:38Z",
    "closed_at": "2021-12-16T20:12:38Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4471",
      "html_url": "https://github.com/expressjs/express/pull/4471",
      "diff_url": "https://github.com/expressjs/express/pull/4471.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4471.patch",
      "merged_at": "2021-12-16T20:12:38Z"
    },
    "body": "This is a minor improvement to the language of one of the error responses (404) from the [web-service](https://github.com/expressjs/express/tree/master/examples/web-service) example, which also makes the message clearer:\r\n\r\n```\r\nSorry, can't find that\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4471/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4471/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4467",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4467/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4467/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4467/events",
    "html_url": "https://github.com/expressjs/express/issues/4467",
    "id": 751382271,
    "node_id": "MDU6SXNzdWU3NTEzODIyNzE=",
    "number": 4467,
    "title": "Error using typescript",
    "user": {
      "login": "Mister-Hope",
      "id": 33315834,
      "node_id": "MDQ6VXNlcjMzMzE1ODM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/33315834?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mister-Hope",
      "html_url": "https://github.com/Mister-Hope",
      "followers_url": "https://api.github.com/users/Mister-Hope/followers",
      "following_url": "https://api.github.com/users/Mister-Hope/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mister-Hope/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mister-Hope/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mister-Hope/subscriptions",
      "organizations_url": "https://api.github.com/users/Mister-Hope/orgs",
      "repos_url": "https://api.github.com/users/Mister-Hope/repos",
      "events_url": "https://api.github.com/users/Mister-Hope/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mister-Hope/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-11-26T08:16:24Z",
    "updated_at": "2020-11-26T08:18:31Z",
    "closed_at": "2020-11-26T08:18:13Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "```ts\r\napp.get(\"/manifest.webmanifest\", async (_req, res) => {\r\n   res.send(await getManifest(pwaOptions));\r\n});\r\n```\r\n\r\nis failing after a recent upgrade:\r\n\r\n```\r\nPromise returned in function argument where a void return was expected.\r\n```\r\n\r\n`RequestHandler` should be`Promise<void> | void` instead of `void`: \r\n\r\n```ts\r\nexport interface RequestHandler<P = ParamsDictionary, ResBody = any, ReqBody = any, ReqQuery = ParsedQs> {\r\n    // tslint:disable-next-line callable-types (This is extended from and can't extend from a type alias in ts<2.2\r\n    (req: Request<P, ResBody, ReqBody, ReqQuery>, res: Response<ResBody>, next: NextFunction): void;\r\n}\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4467/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4467/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4466",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4466/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4466/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4466/events",
    "html_url": "https://github.com/expressjs/express/issues/4466",
    "id": 750788085,
    "node_id": "MDU6SXNzdWU3NTA3ODgwODU=",
    "number": 4466,
    "title": "Express Server ContextPath like Other Servers",
    "user": {
      "login": "jishanshaikh",
      "id": 22613220,
      "node_id": "MDQ6VXNlcjIyNjEzMjIw",
      "avatar_url": "https://avatars.githubusercontent.com/u/22613220?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jishanshaikh",
      "html_url": "https://github.com/jishanshaikh",
      "followers_url": "https://api.github.com/users/jishanshaikh/followers",
      "following_url": "https://api.github.com/users/jishanshaikh/following{/other_user}",
      "gists_url": "https://api.github.com/users/jishanshaikh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jishanshaikh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jishanshaikh/subscriptions",
      "organizations_url": "https://api.github.com/users/jishanshaikh/orgs",
      "repos_url": "https://api.github.com/users/jishanshaikh/repos",
      "events_url": "https://api.github.com/users/jishanshaikh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jishanshaikh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-11-25T12:46:30Z",
    "updated_at": "2020-11-27T06:00:09Z",
    "closed_at": "2020-11-25T15:25:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\r\n\r\nWe want a facility of context  path like you have in any other server.\r\n\r\nSo when my images is loaded from public folder path of image will be **\"https://ip:port/contextpath/image.png\"** in network tab.\r\n\r\nIf no facility is present then we are fine with work round also",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4466/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4466/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4465",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4465/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4465/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4465/events",
    "html_url": "https://github.com/expressjs/express/issues/4465",
    "id": 746886743,
    "node_id": "MDU6SXNzdWU3NDY4ODY3NDM=",
    "number": 4465,
    "title": "Response's status code depends on function call order",
    "user": {
      "login": "cngkaygusuz",
      "id": 1507670,
      "node_id": "MDQ6VXNlcjE1MDc2NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1507670?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cngkaygusuz",
      "html_url": "https://github.com/cngkaygusuz",
      "followers_url": "https://api.github.com/users/cngkaygusuz/followers",
      "following_url": "https://api.github.com/users/cngkaygusuz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cngkaygusuz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cngkaygusuz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cngkaygusuz/subscriptions",
      "organizations_url": "https://api.github.com/users/cngkaygusuz/orgs",
      "repos_url": "https://api.github.com/users/cngkaygusuz/repos",
      "events_url": "https://api.github.com/users/cngkaygusuz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cngkaygusuz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-11-19T20:09:05Z",
    "updated_at": "2020-11-19T20:13:03Z",
    "closed_at": "2020-11-19T20:12:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This one tripped me up, and I could not find anything specific to it. The following example:\r\n\r\n```js\r\nconst express = require('express')\r\nconst app = express()\r\nconst port = 3333\r\n\r\napp.get('/', (req, res) => {\r\n  res.send('Hello World!');\r\n  res.status(404);\r\n})\r\n\r\napp.listen(port, () => {\r\n  console.log(`Example app listening at http://localhost:${port}`)\r\n})\r\n```\r\n\r\nreturns HTTP status code of 200. If you flip the order of `res.status` and `res.send`, things start working as expected. Is this a bug, or I am missing something?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4465/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4465/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4463",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4463/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4463/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4463/events",
    "html_url": "https://github.com/expressjs/express/issues/4463",
    "id": 743773109,
    "node_id": "MDU6SXNzdWU3NDM3NzMxMDk=",
    "number": 4463,
    "title": "Memory leak in sendfile",
    "user": {
      "login": "mustard123",
      "id": 14769359,
      "node_id": "MDQ6VXNlcjE0NzY5MzU5",
      "avatar_url": "https://avatars.githubusercontent.com/u/14769359?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mustard123",
      "html_url": "https://github.com/mustard123",
      "followers_url": "https://api.github.com/users/mustard123/followers",
      "following_url": "https://api.github.com/users/mustard123/following{/other_user}",
      "gists_url": "https://api.github.com/users/mustard123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mustard123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mustard123/subscriptions",
      "organizations_url": "https://api.github.com/users/mustard123/orgs",
      "repos_url": "https://api.github.com/users/mustard123/repos",
      "events_url": "https://api.github.com/users/mustard123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mustard123/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-11-16T11:50:24Z",
    "updated_at": "2020-11-17T08:40:06Z",
    "closed_at": "2020-11-16T18:14:35Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In the Response object (https://github.com/expressjs/express/blob/master/lib/response.js)\r\nin the function on line 1021,the file stream is not closed when the request is aborted which leads to a memory leak for example when downloads are cancelled. Also in the lines 1041 in the onerror() function.\r\n\r\n```\r\n// pipe the send file stream\r\nfunction sendfile(res, file, options, callback) {\r\n     .....\r\n\r\n  // request aborted\r\n  function onaborted() {\r\n    if (done) return;\r\n    done = true;\r\n\r\n    var err = new Error('Request aborted');\r\n    err.code = 'ECONNABORTED';\r\n    // -------  ADD THIS LINE TO CLOSE THE FILESTREAM AND RELEASE THE RESOURCES TO PREVENT LEAK\r\n    file.destroy()\r\n    //-------------\r\n    callback(err);\r\n  }\r\n....\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4463/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4463/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4462",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4462/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4462/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4462/events",
    "html_url": "https://github.com/expressjs/express/issues/4462",
    "id": 743054342,
    "node_id": "MDU6SXNzdWU3NDMwNTQzNDI=",
    "number": 4462,
    "title": "How to set max execution time for a request ? (Response timeout)",
    "user": {
      "login": "kamal-brill",
      "id": 46436784,
      "node_id": "MDQ6VXNlcjQ2NDM2Nzg0",
      "avatar_url": "https://avatars.githubusercontent.com/u/46436784?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kamal-brill",
      "html_url": "https://github.com/kamal-brill",
      "followers_url": "https://api.github.com/users/kamal-brill/followers",
      "following_url": "https://api.github.com/users/kamal-brill/following{/other_user}",
      "gists_url": "https://api.github.com/users/kamal-brill/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kamal-brill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kamal-brill/subscriptions",
      "organizations_url": "https://api.github.com/users/kamal-brill/orgs",
      "repos_url": "https://api.github.com/users/kamal-brill/repos",
      "events_url": "https://api.github.com/users/kamal-brill/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kamal-brill/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-11-14T18:24:08Z",
    "updated_at": "2020-11-17T14:41:57Z",
    "closed_at": "2020-11-17T14:38:33Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi all, I want to send 504 (Gateway timeout) error when request to my Express application, is not completed within \"X\" milliseconds. \r\n\r\nI have tried,\r\n\r\n1.\r\n````js\r\nserver.timeout = X;\r\n````\r\n\r\n\r\n2.\r\n````js\r\nserver.setTimeout(X);\r\n````\r\n\r\n3.\r\n````js\r\napp.use((req, res, next) => {\r\n  res.setTimeout(X, () => {\r\n    const err = new Error();\r\n    err.name = 'ResponseTimeoutError';\r\n    err.data = null;\r\n    err.statusCode = 504;\r\n    err.message = 'Response timedout';\r\n    next(err);\r\n  });\r\n  next();\r\n});\r\n````\r\n\r\nAnd few node modules as well.\r\n\r\nNone of them worked. All of them, work properly for first few requests after that the requests are not getting timed out. So, how can I set the maximum time for a request ? (like `max_execution_time` in PHP)",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4462/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4462/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4461",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4461/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4461/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4461/events",
    "html_url": "https://github.com/expressjs/express/pull/4461",
    "id": 742336061,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTIwNDg2NDY0",
    "number": 4461,
    "title": "docs(examples): add links to sql database examples",
    "user": {
      "login": "nikolasburk",
      "id": 4058327,
      "node_id": "MDQ6VXNlcjQwNTgzMjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4058327?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nikolasburk",
      "html_url": "https://github.com/nikolasburk",
      "followers_url": "https://api.github.com/users/nikolasburk/followers",
      "following_url": "https://api.github.com/users/nikolasburk/following{/other_user}",
      "gists_url": "https://api.github.com/users/nikolasburk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nikolasburk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nikolasburk/subscriptions",
      "organizations_url": "https://api.github.com/users/nikolasburk/orgs",
      "repos_url": "https://api.github.com/users/nikolasburk/repos",
      "events_url": "https://api.github.com/users/nikolasburk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nikolasburk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 22,
    "created_at": "2020-11-13T10:16:08Z",
    "updated_at": "2021-12-16T20:47:52Z",
    "closed_at": "2021-12-16T20:47:52Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4461",
      "html_url": "https://github.com/expressjs/express/pull/4461",
      "diff_url": "https://github.com/expressjs/express/pull/4461.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4461.patch",
      "merged_at": null
    },
    "body": "I'd love to add some examples to the repo that show how to use Express with a database in different scenarios, e.g. for building fullstack apps or REST and GraphQL APIs.\r\n\r\nAt Prisma, we created a number of ready-to-run [examples](https://github.com/prisma/prisma-examples/) that show how to use Express in these different scenarios. I was wondering whether I should be duplicating the examples but I think it makes more sense to just link out to them ([that's e.g. also what the Next.js folks are doing](https://github.com/vercel/next.js/tree/canary/examples/with-prisma)) because we make sure these examples are maintained, functional and als update their dependencies using renovate.\r\n\r\nWould love to hear some thoughts on whether linking out to an external example is fine in this case or whether it's preferred to duplicate the examples?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4461/reactions",
      "total_count": 3,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4461/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4460",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4460/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4460/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4460/events",
    "html_url": "https://github.com/expressjs/express/issues/4460",
    "id": 741046926,
    "node_id": "MDU6SXNzdWU3NDEwNDY5MjY=",
    "number": 4460,
    "title": "Make many custom request objects",
    "user": {
      "login": "zthaver",
      "id": 47486742,
      "node_id": "MDQ6VXNlcjQ3NDg2NzQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/47486742?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zthaver",
      "html_url": "https://github.com/zthaver",
      "followers_url": "https://api.github.com/users/zthaver/followers",
      "following_url": "https://api.github.com/users/zthaver/following{/other_user}",
      "gists_url": "https://api.github.com/users/zthaver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zthaver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zthaver/subscriptions",
      "organizations_url": "https://api.github.com/users/zthaver/orgs",
      "repos_url": "https://api.github.com/users/zthaver/repos",
      "events_url": "https://api.github.com/users/zthaver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zthaver/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-11-11T20:25:00Z",
    "updated_at": "2020-11-12T00:59:45Z",
    "closed_at": "2020-11-11T20:53:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have already extended the express request object and made my own custom object. However, I was wondering how I could do another custom object with different properties, so I was wondering how to go about that. For example here is what I want my custom object to be?\r\n```ts\r\n interface customRequest {\r\n    prop1: string;\r\n    prop2: number;\r\n  }\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4460/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4460/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4459",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4459/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4459/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4459/events",
    "html_url": "https://github.com/expressjs/express/issues/4459",
    "id": 740281194,
    "node_id": "MDU6SXNzdWU3NDAyODExOTQ=",
    "number": 4459,
    "title": "issue with request header encoding",
    "user": {
      "login": "zzhan223",
      "id": 12809183,
      "node_id": "MDQ6VXNlcjEyODA5MTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/12809183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zzhan223",
      "html_url": "https://github.com/zzhan223",
      "followers_url": "https://api.github.com/users/zzhan223/followers",
      "following_url": "https://api.github.com/users/zzhan223/following{/other_user}",
      "gists_url": "https://api.github.com/users/zzhan223/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zzhan223/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zzhan223/subscriptions",
      "organizations_url": "https://api.github.com/users/zzhan223/orgs",
      "repos_url": "https://api.github.com/users/zzhan223/repos",
      "events_url": "https://api.github.com/users/zzhan223/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zzhan223/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-11-10T22:14:00Z",
    "updated_at": "2020-11-10T22:16:12Z",
    "closed_at": "2020-11-10T22:16:12Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "user-agent header `Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5 (Ergänzendes Update)) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.1.1 Safari/605.1.15` is being converted to `Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5 (ErgÃ¤nzendes Update)) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.1.1 Safari/605.1.15`\r\n\r\nMy app is running on 4.16.4",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4459/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4459/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4458",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4458/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4458/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4458/events",
    "html_url": "https://github.com/expressjs/express/issues/4458",
    "id": 740065773,
    "node_id": "MDU6SXNzdWU3NDAwNjU3NzM=",
    "number": 4458,
    "title": "Node 14.15.0 Unable to send files with multipart formdata",
    "user": {
      "login": "superheri",
      "id": 30275781,
      "node_id": "MDQ6VXNlcjMwMjc1Nzgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/30275781?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/superheri",
      "html_url": "https://github.com/superheri",
      "followers_url": "https://api.github.com/users/superheri/followers",
      "following_url": "https://api.github.com/users/superheri/following{/other_user}",
      "gists_url": "https://api.github.com/users/superheri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/superheri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/superheri/subscriptions",
      "organizations_url": "https://api.github.com/users/superheri/orgs",
      "repos_url": "https://api.github.com/users/superheri/repos",
      "events_url": "https://api.github.com/users/superheri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/superheri/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2020-11-10T16:39:04Z",
    "updated_at": "2020-11-23T15:50:55Z",
    "closed_at": "2020-11-10T16:40:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "<!--\r\nThank you for reporting an issue.\r\n\r\nThis issue tracker is for bugs and issues found within Node.js core.\r\nIf you require more general support please file an issue on our help\r\nrepo. https://github.com/nodejs/help\r\n\r\n\r\nPlease fill in as much of the template below as you're able.\r\n\r\nVersion: output of `node -v`\r\nPlatform: output of `uname -a` (UNIX), or version and 32 or 64-bit (Windows)\r\nSubsystem: if known, please specify affected core module name\r\n-->\r\n\r\n* **Version**: 14.15.0\r\n* **Platform**: Windows 10 2004\r\n* **Subsystem**:\r\n\r\n### What steps will reproduce the bug?\r\n\r\nUploading a file using express is not working anymore. The file is most of the time (sometimes it works, don't know why) not really sended correctly to the server. I tried using express-fileupload and multer but none of them are working properly.\r\n\r\nIt's not giving any error, just jamming there without log.\r\n\r\n<!--\r\nEnter details about your bug, preferably a simple code snippet that can be\r\nrun using `node` directly without installing third-party dependencies.\r\n-->\r\n\r\n### How often does it reproduce? Is there a required condition?\r\n\r\n### What is the expected behavior?\r\n\r\nI expect the file to be on the webserver and my middlewares to continue the request with the file.\r\n\r\n<!--\r\nIf possible please provide textual output instead of screenshots.\r\n-->\r\n\r\n### What do you see instead?\r\n\r\nIt it jamming at a point I don't know. All I can see is that if I use a temporary folder, the file is only there partly.\r\n\r\n<!--\r\nIf possible please provide textual output instead of screenshots.\r\n-->\r\n\r\n### Additional information\r\n\r\n<!--\r\nTell us anything else you think we should know.\r\n-->\r\nThe only way for me to get it working is now to downgrade the version of node to 12... Not much interesting.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4458/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4458/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4457",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4457/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4457/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4457/events",
    "html_url": "https://github.com/expressjs/express/issues/4457",
    "id": 738269821,
    "node_id": "MDU6SXNzdWU3MzgyNjk4MjE=",
    "number": 4457,
    "title": "IDE complains that .json() takes no arguments. ",
    "user": {
      "login": "seanonthenet",
      "id": 4939629,
      "node_id": "MDQ6VXNlcjQ5Mzk2Mjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4939629?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seanonthenet",
      "html_url": "https://github.com/seanonthenet",
      "followers_url": "https://api.github.com/users/seanonthenet/followers",
      "following_url": "https://api.github.com/users/seanonthenet/following{/other_user}",
      "gists_url": "https://api.github.com/users/seanonthenet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seanonthenet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seanonthenet/subscriptions",
      "organizations_url": "https://api.github.com/users/seanonthenet/orgs",
      "repos_url": "https://api.github.com/users/seanonthenet/repos",
      "events_url": "https://api.github.com/users/seanonthenet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seanonthenet/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-11-07T10:22:18Z",
    "updated_at": "2020-11-08T19:36:50Z",
    "closed_at": "2020-11-08T10:11:52Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Is this an issue with express definitions?\r\n\r\n![Screenshot 2020-11-07 at 12 21 44](https://user-images.githubusercontent.com/4939629/98438583-dd7c8880-20f3-11eb-9037-404eb521f088.png)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4457/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4457/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4456",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4456/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4456/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4456/events",
    "html_url": "https://github.com/expressjs/express/issues/4456",
    "id": 737326725,
    "node_id": "MDU6SXNzdWU3MzczMjY3MjU=",
    "number": 4456,
    "title": "How to add A custom reponse object type?",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 24,
    "created_at": "2020-11-05T22:58:02Z",
    "updated_at": "2020-11-06T22:36:43Z",
    "closed_at": "2020-11-06T22:36:43Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "How can I makemy response object  of a custom type?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4456/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4456/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4455",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4455/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4455/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4455/events",
    "html_url": "https://github.com/expressjs/express/issues/4455",
    "id": 737310517,
    "node_id": "MDU6SXNzdWU3MzczMTA1MTc=",
    "number": 4455,
    "title": "Add getter for raw query string",
    "user": {
      "login": "raycharius",
      "id": 21269165,
      "node_id": "MDQ6VXNlcjIxMjY5MTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/21269165?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raycharius",
      "html_url": "https://github.com/raycharius",
      "followers_url": "https://api.github.com/users/raycharius/followers",
      "following_url": "https://api.github.com/users/raycharius/following{/other_user}",
      "gists_url": "https://api.github.com/users/raycharius/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raycharius/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raycharius/subscriptions",
      "organizations_url": "https://api.github.com/users/raycharius/orgs",
      "repos_url": "https://api.github.com/users/raycharius/repos",
      "events_url": "https://api.github.com/users/raycharius/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raycharius/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2020-11-05T22:23:20Z",
    "updated_at": "2020-11-05T23:09:30Z",
    "closed_at": "2020-11-05T22:31:33Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm working on some redirect logic for an application, and I'm thinking that Express could benefit from a getter method that returns the raw value of the query string.\r\n\r\nThis is important when redirecting, while keeping the same query string appended to the target location. \r\n\r\n**Currently, to do that you either have to:**\r\n\r\n- Parse `req.originalUrl`.\r\n\r\n- Take the `req.query` object and map it to a string.\r\n\r\nThe second could result in unexpected behavior, such as when there is an array of values. Referring to the documentation for Express 4.x:\r\n```javascript\r\n// GET /shoes?color[]=blue&color[]=black&color[]=red\r\nconsole.dir(req.query.color)\r\n// => ['blue', 'black', 'red']\r\n```\r\n\r\nThe first option is definitely viable, but since the raw query string is readily available in the undocumented, private property `req._parsedUrl.query`, why not add a getter method?\r\n\r\nWhile this may be an edge case for some, it's just probably just as much of an edge case as those when you would need the full value of `req.originalUrl`. \r\n\r\nIn addition, I believe a `fullPath` getter method would also be useful in this respect, where you would have access to the full path, regardless of where you are in the middleware.\r\n\r\nI'm happy to send over a PR. \r\n\r\nThanks!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4455/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4455/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4454",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4454/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4454/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4454/events",
    "html_url": "https://github.com/expressjs/express/pull/4454",
    "id": 734907560,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTE0MzkxOTM0",
    "number": 4454,
    "title": "Add 'json stringifier' option",
    "user": {
      "login": "brandon-leapyear",
      "id": 27799541,
      "node_id": "MDQ6VXNlcjI3Nzk5NTQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/27799541?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brandon-leapyear",
      "html_url": "https://github.com/brandon-leapyear",
      "followers_url": "https://api.github.com/users/brandon-leapyear/followers",
      "following_url": "https://api.github.com/users/brandon-leapyear/following{/other_user}",
      "gists_url": "https://api.github.com/users/brandon-leapyear/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brandon-leapyear/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brandon-leapyear/subscriptions",
      "organizations_url": "https://api.github.com/users/brandon-leapyear/orgs",
      "repos_url": "https://api.github.com/users/brandon-leapyear/repos",
      "events_url": "https://api.github.com/users/brandon-leapyear/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brandon-leapyear/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-11-02T23:28:51Z",
    "updated_at": "2022-10-06T14:16:28Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4454",
      "html_url": "https://github.com/expressjs/express/pull/4454",
      "diff_url": "https://github.com/expressjs/express/pull/4454.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4454.patch",
      "merged_at": null
    },
    "body": "Fixes https://github.com/expressjs/express/issues/4453\r\n\r\n**Please direct all discussion to the issue page**",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4454/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4454/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4453",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4453/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4453/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4453/events",
    "html_url": "https://github.com/expressjs/express/issues/4453",
    "id": 734895187,
    "node_id": "MDU6SXNzdWU3MzQ4OTUxODc=",
    "number": 4453,
    "title": "Allow specifying JSON stringifier",
    "user": {
      "login": "brandon-leapyear",
      "id": 27799541,
      "node_id": "MDQ6VXNlcjI3Nzk5NTQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/27799541?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brandon-leapyear",
      "html_url": "https://github.com/brandon-leapyear",
      "followers_url": "https://api.github.com/users/brandon-leapyear/followers",
      "following_url": "https://api.github.com/users/brandon-leapyear/following{/other_user}",
      "gists_url": "https://api.github.com/users/brandon-leapyear/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brandon-leapyear/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brandon-leapyear/subscriptions",
      "organizations_url": "https://api.github.com/users/brandon-leapyear/orgs",
      "repos_url": "https://api.github.com/users/brandon-leapyear/repos",
      "events_url": "https://api.github.com/users/brandon-leapyear/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brandon-leapyear/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 18291,
        "node_id": "MDU6TGFiZWwxODI5MQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1",
        "default": false,
        "description": null
      },
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 17,
    "created_at": "2020-11-02T23:01:37Z",
    "updated_at": "2023-07-03T16:01:37Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "It would be great to be able to override the [`JSON.stringify`](https://github.com/expressjs/express/blob/508936853a6e311099c9985d4c11a4b1b8f6af07/lib/response.js#L1122-L1123) call in `res.json()`, to use `json-bigint` to serialize JSON objects",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4453/reactions",
      "total_count": 21,
      "+1": 21,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4453/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4452",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4452/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4452/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4452/events",
    "html_url": "https://github.com/expressjs/express/issues/4452",
    "id": 734267390,
    "node_id": "MDU6SXNzdWU3MzQyNjczOTA=",
    "number": 4452,
    "title": "express.Router hitting 404 instead of route when separated in own files",
    "user": {
      "login": "ketus",
      "id": 9350920,
      "node_id": "MDQ6VXNlcjkzNTA5MjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9350920?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ketus",
      "html_url": "https://github.com/ketus",
      "followers_url": "https://api.github.com/users/ketus/followers",
      "following_url": "https://api.github.com/users/ketus/following{/other_user}",
      "gists_url": "https://api.github.com/users/ketus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ketus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ketus/subscriptions",
      "organizations_url": "https://api.github.com/users/ketus/orgs",
      "repos_url": "https://api.github.com/users/ketus/repos",
      "events_url": "https://api.github.com/users/ketus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ketus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-11-02T07:36:25Z",
    "updated_at": "2020-11-02T08:20:27Z",
    "closed_at": "2020-11-02T07:41:51Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi guys,\r\n\r\nI'm reposting from SO because it might as well be a bug. I'm sorry in advance if it's just my lack of knowledge.\r\nOriginal question:\r\nhttps://stackoverflow.com/questions/64320944/express-router-hitting-404-instead-of-route-when-separated-in-own-files\r\n\r\nI am having trouble understanding weird express.Router() behaviour. I decided to tidy up my routes to enable better API versioning. If I keep flatter structure like below, everything works as expected :\r\n\r\n**v1.js (api version / api index file)**\r\n```\r\nmodule.exports = router;\r\nrouter.post('/orders',    auth.isUser, OrderController.create);\r\nrouter.get('/orders',     auth.isUser, OrderController.getAll);\r\nrouter.get('/orders/:id', auth.isUser, OrderController.get);\r\nrouter.put('/orders/:id', auth.isEmployee, OrderController.update);\r\n```\r\n\r\n**app.js**\r\n```\r\napp.use('/v1', v1);\r\n\r\n// catch 404 and forward to error handler\r\napp.use(function (req, res, next) {\r\n  const err = new Error('Not Found');\r\n  err.status = 404;\r\n  next(err);\r\n});\r\n```\r\n\r\nbut if I move these routes to a separate file, export Router and import it as below:\r\n\r\n**ordersRoutes.js**\r\n\r\n```\r\nconst express = require('express');\r\nconst router = express.Router();\r\nconst auth = require('../middleware/auth');\r\nconst OrderController = require('../controllers/OrderController');\r\n\r\nmodule.exports = router;\r\n\r\n// routes for endpoint\r\n// hostname/v1/orders/*\r\nrouter.post(    '/orders',        auth.isUser, OrderController.create);\r\nrouter.get(     '/orders',        auth.isUser, OrderController.getAll);\r\nrouter.get(     '/orders/:id',    auth.isUser, OrderController.get);\r\nrouter.put(     '/orders/:id',    auth.isEmployee, OrderController.update);\r\n```\r\n\r\n**v1.js**\r\n\r\n```\r\nconst router              = express.Router();\r\nconst ordersRoutes = require('./ordersRoutes');\r\n\r\nmodule.exports = router;\r\n\r\nrouter.use( '/orders',     ordersRoutes         );\r\n```\r\nI hit 404 on every order route, which is weird because the same approach with other file works just fine (I compared them many times... :( ). My assumption is that it has to do with too many instances of Router or maybe ordering of routes, but I cant put my finger on it. Any ideas are much appreciated. Thanks in advance!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4452/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4452/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4451",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4451/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4451/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4451/events",
    "html_url": "https://github.com/expressjs/express/issues/4451",
    "id": 734011474,
    "node_id": "MDU6SXNzdWU3MzQwMTE0NzQ=",
    "number": 4451,
    "title": "Maintenance status and roadmap of Express",
    "user": {
      "login": "csvan",
      "id": 1127729,
      "node_id": "MDQ6VXNlcjExMjc3Mjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1127729?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/csvan",
      "html_url": "https://github.com/csvan",
      "followers_url": "https://api.github.com/users/csvan/followers",
      "following_url": "https://api.github.com/users/csvan/following{/other_user}",
      "gists_url": "https://api.github.com/users/csvan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/csvan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/csvan/subscriptions",
      "organizations_url": "https://api.github.com/users/csvan/orgs",
      "repos_url": "https://api.github.com/users/csvan/repos",
      "events_url": "https://api.github.com/users/csvan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/csvan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-11-01T16:52:57Z",
    "updated_at": "2020-11-01T19:45:21Z",
    "closed_at": "2020-11-01T17:00:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I was wondering if Express is actively maintained and if there is an official roadmap in place for Express somewhere? This would help greatly in planning the long term strategies for those of us using Express in our own stacks.\r\n\r\nI found the following, but it does not seem to give a clear timeline: https://github.com/expressjs/express/pull/2237",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4451/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 2
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4451/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4450",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4450/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4450/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4450/events",
    "html_url": "https://github.com/expressjs/express/issues/4450",
    "id": 733926782,
    "node_id": "MDU6SXNzdWU3MzM5MjY3ODI=",
    "number": 4450,
    "title": "Is there any express field or method that allows one retrieve the response body?",
    "user": {
      "login": "tiemma",
      "id": 14789630,
      "node_id": "MDQ6VXNlcjE0Nzg5NjMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/14789630?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tiemma",
      "html_url": "https://github.com/tiemma",
      "followers_url": "https://api.github.com/users/tiemma/followers",
      "following_url": "https://api.github.com/users/tiemma/following{/other_user}",
      "gists_url": "https://api.github.com/users/tiemma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tiemma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tiemma/subscriptions",
      "organizations_url": "https://api.github.com/users/tiemma/orgs",
      "repos_url": "https://api.github.com/users/tiemma/repos",
      "events_url": "https://api.github.com/users/tiemma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tiemma/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2020-11-01T10:02:00Z",
    "updated_at": "2020-11-07T15:54:48Z",
    "closed_at": "2020-11-01T17:06:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am currently writing an internal tool to help with our API documentation.\r\n\r\nIs there any `res`  field or method that provides the request body for every request?\r\n\r\nMore like a hook or event that gets emitted once a response is sent.\r\n\r\nI've come across the 'finish' node event from http but that doesn't provide the request body within the res object.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4450/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4450/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4449",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4449/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4449/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4449/events",
    "html_url": "https://github.com/expressjs/express/issues/4449",
    "id": 732390723,
    "node_id": "MDU6SXNzdWU3MzIzOTA3MjM=",
    "number": 4449,
    "title": "Request triager role for Asing1001",
    "user": {
      "login": "Asing1001",
      "id": 6785698,
      "node_id": "MDQ6VXNlcjY3ODU2OTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6785698?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Asing1001",
      "html_url": "https://github.com/Asing1001",
      "followers_url": "https://api.github.com/users/Asing1001/followers",
      "following_url": "https://api.github.com/users/Asing1001/following{/other_user}",
      "gists_url": "https://api.github.com/users/Asing1001/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Asing1001/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Asing1001/subscriptions",
      "organizations_url": "https://api.github.com/users/Asing1001/orgs",
      "repos_url": "https://api.github.com/users/Asing1001/repos",
      "events_url": "https://api.github.com/users/Asing1001/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Asing1001/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-10-29T14:58:57Z",
    "updated_at": "2021-11-17T17:48:27Z",
    "closed_at": "2021-11-17T17:48:27Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have read and understood the project's Code of Conduct.\r\nI also have read and understood the process and best practices around Express triaging.\r\n\r\nI request for a triager role for the following GitHub organizations:\r\n\r\njshttp\r\nexpress\r\n\r\nThank you.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4449/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4449/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4448",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4448/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4448/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4448/events",
    "html_url": "https://github.com/expressjs/express/issues/4448",
    "id": 732148635,
    "node_id": "MDU6SXNzdWU3MzIxNDg2MzU=",
    "number": 4448,
    "title": "performance on static etag disabled are worse than with etag enabled",
    "user": {
      "login": "simone-sanfratello",
      "id": 5823031,
      "node_id": "MDQ6VXNlcjU4MjMwMzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5823031?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simone-sanfratello",
      "html_url": "https://github.com/simone-sanfratello",
      "followers_url": "https://api.github.com/users/simone-sanfratello/followers",
      "following_url": "https://api.github.com/users/simone-sanfratello/following{/other_user}",
      "gists_url": "https://api.github.com/users/simone-sanfratello/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simone-sanfratello/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simone-sanfratello/subscriptions",
      "organizations_url": "https://api.github.com/users/simone-sanfratello/orgs",
      "repos_url": "https://api.github.com/users/simone-sanfratello/repos",
      "events_url": "https://api.github.com/users/simone-sanfratello/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simone-sanfratello/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-10-29T09:28:07Z",
    "updated_at": "2021-09-12T06:13:53Z",
    "closed_at": "2021-09-12T06:13:53Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\r\n\r\nI noticed disabling `etag` on `express.static` performance are (a little) worse than with the `etag` enabled, while I would expect the opposite.\r\n\r\nrun on node 10.22, but same with node 12 and 14\r\n\r\nhere the code, large.html is ~3MB, medium.html ~15kB, small.html ~50b\r\n\r\nhttps://gist.github.com/simone-sanfratello/dd67f1b2fa24c88984a1ed98e8f5928b\r\n\r\nresult\r\n\r\n```txt\r\nbenchmarking large.html ON\r\nRunning 10s test @ http://localhost:9876/large.html\r\n  8 threads and 100 connections\r\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\r\n    Latency   210.86ms   28.50ms 377.90ms   86.36%\r\n    Req/Sec    57.33     25.88   121.00     60.60%\r\n  4502 requests in 10.03s, 16.02GB read\r\nRequests/sec:    448.95\r\nTransfer/sec:      1.60GB\r\n\r\n----------------------------\r\nbenchmarking large.html off\r\nRunning 10s test @ http://localhost:9876/large.html\r\n  8 threads and 100 connections\r\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\r\n    Latency   226.77ms   27.01ms 361.56ms   76.54%\r\n    Req/Sec    53.29     24.15   111.00     66.85%\r\n  4195 requests in 10.04s, 14.89GB read\r\nRequests/sec:    417.98\r\nTransfer/sec:      1.48GB\r\n\r\n----------------------------\r\nbenchmarking medium.html ON\r\nRunning 10s test @ http://localhost:9876/medium.html\r\n  8 threads and 100 connections\r\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\r\n    Latency    13.67ms   16.02ms 142.15ms   79.93%\r\n    Req/Sec     1.62k   391.82     8.13k    88.94%\r\n  128306 requests in 10.10s, 2.24GB read\r\nRequests/sec:  12702.92\r\nTransfer/sec:    226.70MB\r\n\r\n----------------------------\r\nbenchmarking medium.html off\r\nRunning 10s test @ http://localhost:9876/medium.html\r\n  8 threads and 100 connections\r\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\r\n    Latency    13.43ms   15.50ms 114.69ms   79.55%\r\n    Req/Sec     1.64k   304.99     2.30k    85.09%\r\n  129980 requests in 10.02s, 2.26GB read\r\nRequests/sec:  12969.41\r\nTransfer/sec:    231.11MB\r\n\r\n----------------------------\r\nbenchmarking small.html ON\r\nRunning 10s test @ http://localhost:9876/small.html\r\n  8 threads and 100 connections\r\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\r\n    Latency     6.60ms    3.30ms  77.75ms   96.68%\r\n    Req/Sec     1.89k   316.37     2.50k    93.38%\r\n  150661 requests in 10.04s, 47.85MB read\r\nRequests/sec:  15001.94\r\nTransfer/sec:      4.76MB\r\n\r\n----------------------------\r\nbenchmarking small.html off\r\nRunning 10s test @ http://localhost:9876/small.html\r\n  8 threads and 100 connections\r\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\r\n    Latency     6.68ms    5.19ms 115.99ms   97.61%\r\n    Req/Sec     1.92k   311.41     2.85k    93.35%\r\n  152776 requests in 10.06s, 44.73MB read\r\nRequests/sec:  15193.44\r\nTransfer/sec:      4.45MB\r\n\r\n----------------------------\r\n\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4448/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4448/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4446",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4446/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4446/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4446/events",
    "html_url": "https://github.com/expressjs/express/issues/4446",
    "id": 731971998,
    "node_id": "MDU6SXNzdWU3MzE5NzE5OTg=",
    "number": 4446,
    "title": "the nest router can not get the our router params",
    "user": {
      "login": "jianwang-beijing",
      "id": 54609180,
      "node_id": "MDQ6VXNlcjU0NjA5MTgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/54609180?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jianwang-beijing",
      "html_url": "https://github.com/jianwang-beijing",
      "followers_url": "https://api.github.com/users/jianwang-beijing/followers",
      "following_url": "https://api.github.com/users/jianwang-beijing/following{/other_user}",
      "gists_url": "https://api.github.com/users/jianwang-beijing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jianwang-beijing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jianwang-beijing/subscriptions",
      "organizations_url": "https://api.github.com/users/jianwang-beijing/orgs",
      "repos_url": "https://api.github.com/users/jianwang-beijing/repos",
      "events_url": "https://api.github.com/users/jianwang-beijing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jianwang-beijing/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-10-29T03:44:07Z",
    "updated_at": "2020-10-29T03:46:26Z",
    "closed_at": "2020-10-29T03:46:12Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello, I have a use express to create some RESTful API for testing. I find the inner router can not get the outer router params. The code looks:\r\n`main.js`\r\n```\r\nconst express = require('express');\r\nconst app = new express();\r\nconst orgRouter = require('./org/org-router')\r\n\r\n\r\napp.use('/api', orgRouter);\r\napp.get('/health', (req, res) => {\r\n  res.json({ status: 'ok', now: Date.now() });\r\n});\r\n\r\napp.listen(3000, () => {\r\n  console.log('listening at 3000');\r\n});\r\n\r\n```\r\n`org.js`\r\n```\r\nconst express = require('express');\r\nconst router = express.Router();\r\nconst userRoute = require('../user/user-router');\r\n\r\nrouter.use('/:orgId', userRoute);\r\n\r\nmodule.exports = router;\r\n```\r\n`user.js`\r\n```\r\nconst express = require('express');\r\nconst router = express.Router();\r\n\r\nrouter.get('/:userId', (req, res) => {\r\n  res.json({ ...req.params });\r\n});\r\n\r\nmodule.exports = router;\r\n```\r\nI run my program: `nodemon main.js`, test the api the below command:\r\n```\r\ncurl -s http://localhost:3000/api/1/2 | jq\r\n{\r\n  \"userId\": \"2\"\r\n}\r\n```\r\nBut I want also to know the `orgId`, how to do?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4446/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4446/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4445",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4445/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4445/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4445/events",
    "html_url": "https://github.com/expressjs/express/issues/4445",
    "id": 728628046,
    "node_id": "MDU6SXNzdWU3Mjg2MjgwNDY=",
    "number": 4445,
    "title": "Should Express block view files from outside the views folders?",
    "user": {
      "login": "samsch",
      "id": 10436679,
      "node_id": "MDQ6VXNlcjEwNDM2Njc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/10436679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/samsch",
      "html_url": "https://github.com/samsch",
      "followers_url": "https://api.github.com/users/samsch/followers",
      "following_url": "https://api.github.com/users/samsch/following{/other_user}",
      "gists_url": "https://api.github.com/users/samsch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/samsch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/samsch/subscriptions",
      "organizations_url": "https://api.github.com/users/samsch/orgs",
      "repos_url": "https://api.github.com/users/samsch/repos",
      "events_url": "https://api.github.com/users/samsch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/samsch/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-10-24T01:42:18Z",
    "updated_at": "2020-10-24T01:51:57Z",
    "closed_at": "2020-10-24T01:49:25Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Right now something like\r\n```js\r\nres.render('../../file.jsx');\r\n```\r\nwhich finds a file is resolved to an absolute path and passed directly through to the rendering engine.\r\n\r\nI think this is longstanding functionality, but the language on the Express website docs doesn't make it clear that the views folder is simply the path resolve base, and that Express does not ensure that a resolved filepath is actually inside the views folder.\r\n\r\nAs someone not super familiar with the Express view engine, I was surprised to find this after testing it. This seems like a potential security issue if someone expects \"views are in the views folder\" to hold strictly true and allows user input.\r\n\r\nMaybe this could be behind an option that defaults to enforcing paths resolve inside one of the view folders, and can optionally be toggled to the current functionality.\r\n\r\nAt least it seems like this should be mentioned on the documentation page.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4445/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4445/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4444",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4444/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4444/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4444/events",
    "html_url": "https://github.com/expressjs/express/pull/4444",
    "id": 728035373,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTA4ODE2ODg1",
    "number": 4444,
    "title": "Tester",
    "user": {
      "login": "rad10head7",
      "id": 52474495,
      "node_id": "MDQ6VXNlcjUyNDc0NDk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/52474495?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rad10head7",
      "html_url": "https://github.com/rad10head7",
      "followers_url": "https://api.github.com/users/rad10head7/followers",
      "following_url": "https://api.github.com/users/rad10head7/following{/other_user}",
      "gists_url": "https://api.github.com/users/rad10head7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rad10head7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rad10head7/subscriptions",
      "organizations_url": "https://api.github.com/users/rad10head7/orgs",
      "repos_url": "https://api.github.com/users/rad10head7/repos",
      "events_url": "https://api.github.com/users/rad10head7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rad10head7/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-10-23T08:50:05Z",
    "updated_at": "2020-10-23T13:26:12Z",
    "closed_at": "2020-10-23T08:51:04Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4444",
      "html_url": "https://github.com/expressjs/express/pull/4444",
      "diff_url": "https://github.com/expressjs/express/pull/4444.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4444.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4444/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4444/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4443",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4443/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4443/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4443/events",
    "html_url": "https://github.com/expressjs/express/issues/4443",
    "id": 727767306,
    "node_id": "MDU6SXNzdWU3Mjc3NjczMDY=",
    "number": 4443,
    "title": "express how to access params from uri segment",
    "user": {
      "login": "craigcosmo",
      "id": 538657,
      "node_id": "MDQ6VXNlcjUzODY1Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/538657?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/craigcosmo",
      "html_url": "https://github.com/craigcosmo",
      "followers_url": "https://api.github.com/users/craigcosmo/followers",
      "following_url": "https://api.github.com/users/craigcosmo/following{/other_user}",
      "gists_url": "https://api.github.com/users/craigcosmo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/craigcosmo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/craigcosmo/subscriptions",
      "organizations_url": "https://api.github.com/users/craigcosmo/orgs",
      "repos_url": "https://api.github.com/users/craigcosmo/repos",
      "events_url": "https://api.github.com/users/craigcosmo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/craigcosmo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-10-22T22:44:31Z",
    "updated_at": "2020-10-22T22:59:35Z",
    "closed_at": "2020-10-22T22:59:31Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "My link is like this, I want to access number **16** on server\r\n\r\n```\r\nhttp://website.com/getItem/16\r\n```\r\n\r\nmy routes **getIitem.js** like this\r\n```js\r\nlet router = express.Router()\r\nrouter.get('/', async (req, res, next) => {\r\n\tconsole.log(req.params) // got empty object\r\n\tres.send('good') \r\n})\r\nmodule.exports = router\r\n\r\n```\r\n\r\nmy **app.js** is like this\r\n\r\n```js\r\nvar getItem = require('./routes/getItem')\r\napp.use('/getItem/:id', getItem)\r\nmodule.exports = app\r\n\r\n```\r\n\r\n\r\nProblem: When I console.log reg.params, got an empty object\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4443/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4443/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4442",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4442/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4442/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4442/events",
    "html_url": "https://github.com/expressjs/express/issues/4442",
    "id": 727751605,
    "node_id": "MDU6SXNzdWU3Mjc3NTE2MDU=",
    "number": 4442,
    "title": "express how to access param query string",
    "user": {
      "login": "craigcosmo",
      "id": 538657,
      "node_id": "MDQ6VXNlcjUzODY1Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/538657?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/craigcosmo",
      "html_url": "https://github.com/craigcosmo",
      "followers_url": "https://api.github.com/users/craigcosmo/followers",
      "following_url": "https://api.github.com/users/craigcosmo/following{/other_user}",
      "gists_url": "https://api.github.com/users/craigcosmo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/craigcosmo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/craigcosmo/subscriptions",
      "organizations_url": "https://api.github.com/users/craigcosmo/orgs",
      "repos_url": "https://api.github.com/users/craigcosmo/repos",
      "events_url": "https://api.github.com/users/craigcosmo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/craigcosmo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-10-22T22:06:34Z",
    "updated_at": "2020-10-22T22:20:05Z",
    "closed_at": "2020-10-22T22:20:05Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "My link is like this, I want to access number **16** on server\r\n\r\n```\r\nhttp://website.com/getItem/16\r\n```\r\n\r\nmy routes **getIitem.js** like this\r\n```js\r\n\r\nrouter.get('/', async (req, res, next) => {\r\n\tconsole.log(req) // not work\t\r\n\tres.send('good') \r\n})\r\nmodule.exports = router\r\n\r\n```\r\n\r\nmy **app.js** is like this\r\n\r\n```js\r\nvar getItem = require('./routes/getItem')\r\napp.use('/getItem/:id', getItem)\r\nmodule.exports = app\r\n\r\n```\r\n\r\n\r\nProblem: When I console.log reg I got error, req is not defined. Is there something wrong with my routes?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4442/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4442/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4441",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4441/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4441/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4441/events",
    "html_url": "https://github.com/expressjs/express/issues/4441",
    "id": 727733638,
    "node_id": "MDU6SXNzdWU3Mjc3MzM2Mzg=",
    "number": 4441,
    "title": "Routes are disappearing",
    "user": {
      "login": "digipigeon",
      "id": 409141,
      "node_id": "MDQ6VXNlcjQwOTE0MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/409141?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/digipigeon",
      "html_url": "https://github.com/digipigeon",
      "followers_url": "https://api.github.com/users/digipigeon/followers",
      "following_url": "https://api.github.com/users/digipigeon/following{/other_user}",
      "gists_url": "https://api.github.com/users/digipigeon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/digipigeon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/digipigeon/subscriptions",
      "organizations_url": "https://api.github.com/users/digipigeon/orgs",
      "repos_url": "https://api.github.com/users/digipigeon/repos",
      "events_url": "https://api.github.com/users/digipigeon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/digipigeon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-10-22T21:29:28Z",
    "updated_at": "2021-08-29T16:17:03Z",
    "closed_at": "2021-08-29T16:17:03Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello,\r\n\r\nI have a long term project built with express and generally functioning very well.\r\n\r\nAfter what seems like an arbitrary time (generally more than 1 hour), a large portion of the routes disappear and 404 errors are returned. I am unable to reproduce this problem on demand however I can confirm that the problem happens on both our development and our live server. Both on Ubuntu 20.04 and Nodejs 12, Express 4.17.1. I did suspect that there is something related to a back-end database inaccessibility using the Knex library, as this in the past has correlated with database connections being unavailable, but again this is a guess.\r\n\r\nI investigated within the endpoint for a while convinced that the problem was something on my side. But I decided to add a route that printed `app._router.stack` fortunately this route remained after it last crashed.\r\n\r\nI outputted before and after. Before I have just under 600 routes. After this incident I have 150\r\n\r\nThe other difference (which may be complete unrelated and completely normal) is a few of the routes which are remaining some change.\r\n\r\nI am also unable to correlate if any particular activity is causing these routes to disappear either.\r\n\r\nFrom\r\n\r\n```\r\n{\r\n\t\"name\": \"bound dispatch\",\t\t\t\t\t\t\t\r\n\t\"keys\": [],\r\n\t\"regexp\": {\r\n\t\t\"fast_star\": false,\r\n\t\t\"fast_slash\": false\r\n\t},\r\n\t\"route\": {\r\n\t\t\"path\": \"/api/cp/breakout\",\r\n\t\t\"stack\": [{\r\n\t\t\t\"name\": \"<anonymous>\",\r\n\t\t\t\"keys\": [],\r\n\t\t\t\"regexp\": {\r\n\t\t\t\t\"fast_star\": false,\r\n\t\t\t\t\"fast_slash\": false\r\n\t\t\t},\r\n\t\t\t\"method\": \"post\"\r\n\t\t}],\r\n\t\t\"methods\": {\r\n\t\t\t\"post\": true\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\nTo\r\n```\r\n{\r\n\t\"name\": \"bound dispatch\",\r\n\t\"params\": {},\r\n\t\"path\": \"/api/cp/breakout\",\r\n\t\"keys\": [],\r\n\t\"regexp\": {\r\n\t\t\"fast_star\": false,\r\n\t\t\"fast_slash\": false\r\n\t},\r\n\t\"route\": {\r\n\t\t\"path\": \"/api/cp/breakout\",\r\n\t\t\"stack\": [{\r\n\t\t\t\"name\": \"<anonymous>\",\r\n\t\t\t\"keys\": [],\r\n\t\t\t\"regexp\": {\r\n\t\t\t\t\"fast_star\": false,\r\n\t\t\t\t\"fast_slash\": false\r\n\t\t\t},\r\n\t\t\t\"method\": \"post\"\r\n\t\t}],\r\n\t\t\"methods\": {\r\n\t\t\t\"post\": true\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\nNote the extra:\r\n\r\n```\r\n\t\"params\": {},\r\n\t\"path\": \"/api/cp/breakout\",\r\n```\r\n\r\nThere does not appear to be anything in the error logs indicating that something has happened, nor have I been able to find this problem documented elsewhere.\r\n\r\nI would greatly appreciate any help in getting to the next step in debugging this unusual problem.\r\n\r\nThanks",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4441/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4441/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4440",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4440/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4440/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4440/events",
    "html_url": "https://github.com/expressjs/express/issues/4440",
    "id": 727558383,
    "node_id": "MDU6SXNzdWU3Mjc1NTgzODM=",
    "number": 4440,
    "title": "Export version number in express v5",
    "user": {
      "login": "tranvansang",
      "id": 13043196,
      "node_id": "MDQ6VXNlcjEzMDQzMTk2",
      "avatar_url": "https://avatars.githubusercontent.com/u/13043196?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tranvansang",
      "html_url": "https://github.com/tranvansang",
      "followers_url": "https://api.github.com/users/tranvansang/followers",
      "following_url": "https://api.github.com/users/tranvansang/following{/other_user}",
      "gists_url": "https://api.github.com/users/tranvansang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tranvansang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tranvansang/subscriptions",
      "organizations_url": "https://api.github.com/users/tranvansang/orgs",
      "repos_url": "https://api.github.com/users/tranvansang/repos",
      "events_url": "https://api.github.com/users/tranvansang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tranvansang/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2020-10-22T16:50:58Z",
    "updated_at": "2020-10-22T17:13:49Z",
    "closed_at": "2020-10-22T17:13:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am the author of an async middleware handler library, in the library, I implement several middleware utility functions where I want to customize the behavior which depends on the version of express.\r\n\r\nFor example: in express <= 4.x, a rejected promise is ignored, while it is caught in express >= 5.x.\r\n\r\nhttps://github.com/tranvansang/middleware-async/blob/9e4812321360ebc8451b33fe6d3cd0b11c1e32c0/test/middlewareToPromise.test.ts#L42\r\n\r\nIt would be thankful if express exports its own version number from the module so I can check it out from my library.\r\n\r\nSample implementation from webpack: https://github.com/webpack/webpack/blob/master/lib/index.js#L89",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4440/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4440/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4439",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4439/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4439/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4439/events",
    "html_url": "https://github.com/expressjs/express/issues/4439",
    "id": 727544592,
    "node_id": "MDU6SXNzdWU3Mjc1NDQ1OTI=",
    "number": 4439,
    "title": "Pug template evaluates before middleware",
    "user": {
      "login": "y1n",
      "id": 13171326,
      "node_id": "MDQ6VXNlcjEzMTcxMzI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/13171326?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/y1n",
      "html_url": "https://github.com/y1n",
      "followers_url": "https://api.github.com/users/y1n/followers",
      "following_url": "https://api.github.com/users/y1n/following{/other_user}",
      "gists_url": "https://api.github.com/users/y1n/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/y1n/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/y1n/subscriptions",
      "organizations_url": "https://api.github.com/users/y1n/orgs",
      "repos_url": "https://api.github.com/users/y1n/repos",
      "events_url": "https://api.github.com/users/y1n/events{/privacy}",
      "received_events_url": "https://api.github.com/users/y1n/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-10-22T16:31:06Z",
    "updated_at": "2020-10-22T21:34:06Z",
    "closed_at": "2020-10-22T21:34:06Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello! \r\n\r\nSo recently I've started getting template error:\r\n```\r\nTypeError: D:\\user\\ch\\views\\layout.pug:9\r\n    7|\r\n    8|   body.grail\r\n  > 9|     aside.toast.deterred.hide.display-none#clipboard_toast=get_locale('toast_copied_to_clipboard')\r\n    10|     each message in success_messages\r\n    11|       aside.toast=message\r\n    12|     each message in error_messages\r\n```\r\n**get_locale** is defined in middleware as **res.locals.get_locale** before routes are set.\r\nIt seems like things never reach the middleware as template gets evaluated first (and throws error ending the sequence). Does it happen to anyone else or maybe I'm just missing out on something? That has started happening right after I've moved the project to new machine where newer NodeJS is installed (maybe the reason, just in case).",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4439/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4439/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4438",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4438/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4438/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4438/events",
    "html_url": "https://github.com/expressjs/express/issues/4438",
    "id": 726720492,
    "node_id": "MDU6SXNzdWU3MjY3MjA0OTI=",
    "number": 4438,
    "title": "Can the Node.js website redesign make use of the \"Express\" logo?",
    "user": {
      "login": "jemjam",
      "id": 8083892,
      "node_id": "MDQ6VXNlcjgwODM4OTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8083892?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jemjam",
      "html_url": "https://github.com/jemjam",
      "followers_url": "https://api.github.com/users/jemjam/followers",
      "following_url": "https://api.github.com/users/jemjam/following{/other_user}",
      "gists_url": "https://api.github.com/users/jemjam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jemjam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jemjam/subscriptions",
      "organizations_url": "https://api.github.com/users/jemjam/orgs",
      "repos_url": "https://api.github.com/users/jemjam/repos",
      "events_url": "https://api.github.com/users/jemjam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jemjam/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-10-21T17:44:56Z",
    "updated_at": "2020-10-21T17:49:07Z",
    "closed_at": "2020-10-21T17:47:55Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Howdy! I'm here with a request on behalf of the [Node.js website redesign project](https://github.com/nodejs/nodejs.dev). We're going through the paces rebuilding our flagship site and **wanted to formally inquire if we could use the `express` logo in our content.** \r\n\r\nWe also have [an issue to track this on our side](https://github.com/nodejs/nodejs.dev/issues/818) and just wanted to make sure we had your _express_ permission to use it. ;)\r\n\r\nIf this isn't the right channel to ask, I'll dig around a bit more. Please advise if there is anyone in particular I should be asking. If this channel works fine, I'm mainly looking for your consent. Beyond that, if you have any guidelines for use or specific files we should be focused on, just let me know and I'll do my best to accommodate.\r\n\r\nThanks for all the work you do to maintain such a well relied upon package!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4438/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4438/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4436",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4436/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4436/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4436/events",
    "html_url": "https://github.com/expressjs/express/issues/4436",
    "id": 725840230,
    "node_id": "MDU6SXNzdWU3MjU4NDAyMzA=",
    "number": 4436,
    "title": "Unmounting middleware",
    "user": {
      "login": "jmelis",
      "id": 126666,
      "node_id": "MDQ6VXNlcjEyNjY2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmelis",
      "html_url": "https://github.com/jmelis",
      "followers_url": "https://api.github.com/users/jmelis/followers",
      "following_url": "https://api.github.com/users/jmelis/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmelis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmelis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmelis/subscriptions",
      "organizations_url": "https://api.github.com/users/jmelis/orgs",
      "repos_url": "https://api.github.com/users/jmelis/repos",
      "events_url": "https://api.github.com/users/jmelis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmelis/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-10-20T18:29:50Z",
    "updated_at": "2020-10-20T18:37:24Z",
    "closed_at": "2020-10-20T18:37:20Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Mounting a middleware function is documented here: https://expressjs.com/en/5x/api.html#app.use\r\n\r\nI have a use case to unmount a middleware function: I'm exposing an express server with a dynamic collection of ApolloServers. Once the data has expired, I want to unmount it.\r\n\r\nThe current way I'm accomplishing this is by splicing `app._router.stack`. This feels like an unsupported method which may break in any future express version.\r\n\r\nWhat is the recommended approach here? Could we request a supported way to unmount a middleware function?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4436/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4436/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4435",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4435/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4435/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4435/events",
    "html_url": "https://github.com/expressjs/express/issues/4435",
    "id": 725168214,
    "node_id": "MDU6SXNzdWU3MjUxNjgyMTQ=",
    "number": 4435,
    "title": "Routes js files throws `array-flatten` dependency error: TypeError('each array member must be [ee, events...]')",
    "user": {
      "login": "PJColombo",
      "id": 33203511,
      "node_id": "MDQ6VXNlcjMzMjAzNTEx",
      "avatar_url": "https://avatars.githubusercontent.com/u/33203511?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PJColombo",
      "html_url": "https://github.com/PJColombo",
      "followers_url": "https://api.github.com/users/PJColombo/followers",
      "following_url": "https://api.github.com/users/PJColombo/following{/other_user}",
      "gists_url": "https://api.github.com/users/PJColombo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PJColombo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PJColombo/subscriptions",
      "organizations_url": "https://api.github.com/users/PJColombo/orgs",
      "repos_url": "https://api.github.com/users/PJColombo/repos",
      "events_url": "https://api.github.com/users/PJColombo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PJColombo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-10-20T03:50:52Z",
    "updated_at": "2020-10-20T04:05:46Z",
    "closed_at": "2020-10-20T03:55:07Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello.\r\nI've implemented a small api using express. The app was working well until today. The thing is that I haven't modified any of the files that fail.\r\n\r\nWhen I run the app I get the following error: \r\n\r\n```\r\n/home/paulo/Documents/projects/work-projects/P2PModels/task-allocation-prototype/amara-api-proxy/node_modules/array-flatten/index.js:34\r\n      throw new TypeError('each array member must be [ee, events...]')\r\n      ^\r\n\r\nTypeError: each array member must be [ee, events...]\r\n    at first (/home/paulo/Documents/projects/work-projects/P2PModels/task-allocation-prototype/amara-api-proxy/node_modules/array-flatten/index.js:34:13)\r\n    at Route.(anonymous function) [as post] (/home/paulo/Documents/projects/work-projects/P2PModels/task-allocation-prototype/amara-api-proxy/node_modules/express/lib/router/route.js:194:19)\r\n    at Function.proto.(anonymous function) [as post] (/home/paulo/Documents/projects/work-projects/P2PModels/task-allocation-prototype/amara-api-proxy/node_modules/express/lib/router/index.js:510:19)\r\n    at Object.<anonymous> (/home/paulo/Documents/projects/work-projects/P2PModels/task-allocation-prototype/amara-api-proxy/routes/api/rating/addRating.js:4:48)\r\n    at Module._compile (internal/modules/cjs/loader.js:701:30)\r\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:712:10)\r\n    at Module.load (internal/modules/cjs/loader.js:600:32)\r\n    at tryModuleLoad (internal/modules/cjs/loader.js:539:12)\r\n    at Function.Module._load (internal/modules/cjs/loader.js:531:3)\r\n    at Module.require (internal/modules/cjs/loader.js:637:17)\r\n^[[A^CApp has quit\r\n\r\npaulo@HAL9000:~/Documents/projects/work-projects/P2PModels/task-allocation-prototype/amara-api-proxy$ npm start\r\n\r\n> amara-api-proxy@1.0.0 start /home/paulo/Documents/projects/work-projects/P2PModels/task-allocation-prototype/amara-api-proxy\r\n> node index.js\r\n\r\nNgrok tunnel opened at https://68d65d376574.ngrok.io\r\nApp has started on port 5000\r\n/home/paulo/Documents/projects/work-projects/P2PModels/task-allocation-prototype/amara-api-proxy/node_modules/array-flatten/index.js:34\r\n      throw new TypeError('each array member must be [ee, events...]')\r\n      ^\r\n\r\nTypeError: each array member must be [ee, events...]\r\n    at first (/home/paulo/Documents/projects/work-projects/P2PModels/task-allocation-prototype/amara-api-proxy/node_modules/array-flatten/index.js:34:13)\r\n    at Route.(anonymous function) [as post] (/home/paulo/Documents/projects/work-projects/P2PModels/task-allocation-prototype/amara-api-proxy/node_modules/express/lib/router/route.js:195:19)\r\n    at Function.proto.(anonymous function) [as post] (/home/paulo/Documents/projects/work-projects/P2PModels/task-allocation-prototype/amara-api-proxy/node_modules/express/lib/router/index.js:510:19)\r\n    at Object.<anonymous> (/home/paulo/Documents/projects/work-projects/P2PModels/task-allocation-prototype/amara-api-proxy/routes/api/rating/addRating.js:4:48)\r\n    at Module._compile (internal/modules/cjs/loader.js:701:30)\r\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:712:10)\r\n    at Module.load (internal/modules/cjs/loader.js:600:32)\r\n    at tryModuleLoad (internal/modules/cjs/loader.js:539:12)\r\n    at Function.Module._load (internal/modules/cjs/loader.js:531:3)\r\n    at Module.require (internal/modules/cjs/loader.js:637:17)\r\n```\r\nApparently there is some problem with the `array-flatten` dependency, specifically the `flatten()` method and its params:\r\n```\r\n....\r\n    if (!Array.isArray(arr) || arr.length < 2)\r\n      throw new TypeError('each array member must be [ee, events...]')\r\n...\r\n```\r\n\r\nThis is the route js file (`addRating.js`) that is throwing the error: \r\n\r\n```\r\nconst Router = require('express').Router\r\nconst db = require('../../../models')\r\n\r\nmodule.exports = Router({ mergeParams: true }).post(\r\n  '/ratings',\r\n  async (req, res, next) => {\r\n    try {\r\n      const { userId, date, score } = req.body\r\n      const lastId = await db.daoRatings.createRating(userId, date, score)\r\n      console.log(userId, date, score)\r\n      return res.json({ lastId })\r\n    } catch (error) {\r\n      next(error)\r\n    }\r\n  }\r\n)\r\n```\r\n\r\nI haven't modified any of those files in a while and I really don't know what could it be. I tried to clone the last working version of my [repo](https://github.com/P2PModels/task-allocation-prototype/tree/develop/amara-api-proxy)  and throws the same error\r\n\r\nAny ideas ?\r\n\r\nMy express version is: `\"^4.17.1\"`\r\n\r\n\r\nThanks in advanced. ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4435/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4435/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4434",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4434/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4434/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4434/events",
    "html_url": "https://github.com/expressjs/express/pull/4434",
    "id": 724080536,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTA1NTI3MjA1",
    "number": 4434,
    "title": "express.urlencoded({ extended: true }) is sync ?",
    "user": {
      "login": "DataBender76",
      "id": 65077275,
      "node_id": "MDQ6VXNlcjY1MDc3Mjc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/65077275?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DataBender76",
      "html_url": "https://github.com/DataBender76",
      "followers_url": "https://api.github.com/users/DataBender76/followers",
      "following_url": "https://api.github.com/users/DataBender76/following{/other_user}",
      "gists_url": "https://api.github.com/users/DataBender76/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DataBender76/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DataBender76/subscriptions",
      "organizations_url": "https://api.github.com/users/DataBender76/orgs",
      "repos_url": "https://api.github.com/users/DataBender76/repos",
      "events_url": "https://api.github.com/users/DataBender76/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DataBender76/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-10-18T19:30:56Z",
    "updated_at": "2020-10-18T19:57:05Z",
    "closed_at": "2020-10-18T19:53:55Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4434",
      "html_url": "https://github.com/expressjs/express/pull/4434",
      "diff_url": "https://github.com/expressjs/express/pull/4434.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4434.patch",
      "merged_at": null
    },
    "body": "Hello,\r\n\r\nI have a problem with function `express.urlencoded({ extended: true }`,\r\nWhen i call url POST with body values, express.urlencoded execute any functions in sync\r\n\r\n`node --trace-sync-io index.js`\r\n\r\nMy version express is :\r\n\"dependencies\": {\r\n    \"express\": \"^4.17.1\"\r\n  }\r\n\r\nDon’t use synchronous functions\r\nSynchronous functions and methods tie up the executing process until they return. A single call to a synchronous function might return in a few microseconds or milliseconds, however in high-traffic websites, these calls add up and reduce the performance of the app. Avoid their use in production.\r\n\r\nAlthough Node and many modules provide synchronous and asynchronous versions of their functions, always use the asynchronous version in production. The only time when a synchronous function can be justified is upon initial startup.\r\n\r\nIf you are using Node.js 4.0+ or io.js 2.1.0+, you can use the --trace-sync-io command-line flag to print a warning and a stack trace whenever your application uses a synchronous API. Of course, you wouldn’t want to use this in production, but rather to ensure that your code is ready for production. See the node command-line options documentation for more information.\r\n\r\n\r\n```\r\nWARNING: Detected use of sync API\r\n    at realpathSync (fs.js:1638:13)\r\n    at toRealPath (internal/modules/cjs/loader.js:362:13)\r\n    at tryFile (internal/modules/cjs/loader.js:358:10)\r\n    at tryExtensions (internal/modules/cjs/loader.js:370:22)\r\n    at tryPackage (internal/modules/cjs/loader.js:310:12)\r\n    at Module._findPath (internal/modules/cjs/loader.js:534:18)\r\n    at Module._resolveFilename (internal/modules/cjs/loader.js:880:27)\r\n    at Module._load (internal/modules/cjs/loader.js:743:27)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n(node:23488) WARNING: Detected use of sync API\r\n    at realpathSync (fs.js:1680:29)\r\n    at toRealPath (internal/modules/cjs/loader.js:362:13)\r\n    at tryFile (internal/modules/cjs/loader.js:358:10)\r\n    at tryExtensions (internal/modules/cjs/loader.js:370:22)\r\n    at tryPackage (internal/modules/cjs/loader.js:310:12)\r\n    at Module._findPath (internal/modules/cjs/loader.js:534:18)\r\n    at Module._resolveFilename (internal/modules/cjs/loader.js:880:27)\r\n    at Module._load (internal/modules/cjs/loader.js:743:27)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n(node:23488) WARNING: Detected use of sync API\r\n    at realpathSync (fs.js:1680:29)\r\n    at toRealPath (internal/modules/cjs/loader.js:362:13)\r\n    at tryFile (internal/modules/cjs/loader.js:358:10)\r\n    at tryExtensions (internal/modules/cjs/loader.js:370:22)\r\n    at tryPackage (internal/modules/cjs/loader.js:310:12)\r\n    at Module._findPath (internal/modules/cjs/loader.js:534:18)\r\n    at Module._resolveFilename (internal/modules/cjs/loader.js:880:27)\r\n    at Module._load (internal/modules/cjs/loader.js:743:27)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n(node:23488) WARNING: Detected use of sync API\r\n    at openSync (fs.js:463:26)\r\n    at readFileSync (fs.js:369:35)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1096:22)\r\n    at Module.load (internal/modules/cjs/loader.js:941:32)\r\n    at Module._load (internal/modules/cjs/loader.js:782:14)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at getCodec (C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\lib\\index.js:65:27)\r\n    at getDecoder (C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\lib\\index.js:127:23)\r\n    at getDecoder (C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\raw-body\\index.js:45:18)\r\n(node:23488) WARNING: Detected use of sync API\r\n    at tryStatSync (fs.js:331:25)\r\n    at readFileSync (fs.js:371:17)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1096:22)\r\n    at Module.load (internal/modules/cjs/loader.js:941:32)\r\n    at Module._load (internal/modules/cjs/loader.js:782:14)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at getCodec (C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\lib\\index.js:65:27)\r\n    at getDecoder (C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\lib\\index.js:127:23)\r\n    at getDecoder (C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\raw-body\\index.js:45:18)\r\n(node:23488) WARNING: Detected use of sync API\r\n    at readSync (fs.js:580:26)\r\n    at tryReadSync (fs.js:358:20)\r\n    at readFileSync (fs.js:387:19)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1096:22)\r\n    at Module.load (internal/modules/cjs/loader.js:941:32)\r\n    at Module._load (internal/modules/cjs/loader.js:782:14)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at getCodec (C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\lib\\index.js:65:27)\r\n    at getDecoder (C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\lib\\index.js:127:23)\r\n(node:23488) WARNING: Detected use of sync API\r\n    at closeSync (fs.js:428:11)\r\n    at readFileSync (fs.js:404:8)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1096:22)\r\n    at Module.load (internal/modules/cjs/loader.js:941:32)\r\n    at Module._load (internal/modules/cjs/loader.js:782:14)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at getCodec (C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\lib\\index.js:65:27)\r\n    at getDecoder (C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\lib\\index.js:127:23)\r\n    at getDecoder (C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\raw-body\\index.js:45:18)\r\n(node:23488) WARNING: Detected use of sync API\r\n    at realpathSync (fs.js:1638:13)\r\n    at toRealPath (internal/modules/cjs/loader.js:362:13)\r\n    at tryFile (internal/modules/cjs/loader.js:358:10)\r\n    at tryExtensions (internal/modules/cjs/loader.js:370:22)\r\n    at Module._findPath (internal/modules/cjs/loader.js:526:20)\r\n    at Module._resolveFilename (internal/modules/cjs/loader.js:880:27)\r\n    at Module._load (internal/modules/cjs/loader.js:743:27)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:6:5\r\n(node:23488) WARNING: Detected use of sync API\r\n    at realpathSync (fs.js:1680:29)\r\n    at toRealPath (internal/modules/cjs/loader.js:362:13)\r\n    at tryFile (internal/modules/cjs/loader.js:358:10)\r\n    at tryExtensions (internal/modules/cjs/loader.js:370:22)\r\n    at Module._findPath (internal/modules/cjs/loader.js:526:20)\r\n    at Module._resolveFilename (internal/modules/cjs/loader.js:880:27)\r\n    at Module._load (internal/modules/cjs/loader.js:743:27)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:6:5\r\n(node:23488) WARNING: Detected use of sync API\r\n    at openSync (fs.js:463:26)\r\n    at readFileSync (fs.js:369:35)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1096:22)\r\n    at Module.load (internal/modules/cjs/loader.js:941:32)\r\n    at Module._load (internal/modules/cjs/loader.js:782:14)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:6:5\r\n    at Module._compile (internal/modules/cjs/loader.js:1076:30)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1097:10)\r\n(node:23488) WARNING: Detected use of sync API\r\n    at tryStatSync (fs.js:331:25)\r\n    at readFileSync (fs.js:371:17)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1096:22)\r\n    at Module.load (internal/modules/cjs/loader.js:941:32)\r\n    at Module._load (internal/modules/cjs/loader.js:782:14)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:6:5\r\n    at Module._compile (internal/modules/cjs/loader.js:1076:30)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1097:10)\r\n(node:23488) WARNING: Detected use of sync API\r\n    at readSync (fs.js:580:26)\r\n    at tryReadSync (fs.js:358:20)\r\n    at readFileSync (fs.js:387:19)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1096:22)\r\n    at Module.load (internal/modules/cjs/loader.js:941:32)\r\n    at Module._load (internal/modules/cjs/loader.js:782:14)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:6:5\r\n    at Module._compile (internal/modules/cjs/loader.js:1076:30)\r\n(node:23488) WARNING: Detected use of sync API\r\n    at closeSync (fs.js:428:11)\r\n    at readFileSync (fs.js:404:8)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1096:22)\r\n    at Module.load (internal/modules/cjs/loader.js:941:32)\r\n    at Module._load (internal/modules/cjs/loader.js:782:14)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:6:5\r\n    at Module._compile (internal/modules/cjs/loader.js:1076:30)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1097:10)\r\n(node:23488) WARNING: Detected use of sync API\r\n    at realpathSync (fs.js:1638:13)\r\n    at toRealPath (internal/modules/cjs/loader.js:362:13)\r\n    at tryFile (internal/modules/cjs/loader.js:358:10)\r\n    at tryExtensions (internal/modules/cjs/loader.js:370:22)\r\n    at Module._findPath (internal/modules/cjs/loader.js:526:20)\r\n    at Module._resolveFilename (internal/modules/cjs/loader.js:880:27)\r\n    at Module._load (internal/modules/cjs/loader.js:743:27)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:7:5\r\n(node:23488) WARNING: Detected use of sync API\r\n    at realpathSync (fs.js:1680:29)\r\n    at toRealPath (internal/modules/cjs/loader.js:362:13)\r\n    at tryFile (internal/modules/cjs/loader.js:358:10)\r\n    at tryExtensions (internal/modules/cjs/loader.js:370:22)\r\n    at Module._findPath (internal/modules/cjs/loader.js:526:20)\r\n    at Module._resolveFilename (internal/modules/cjs/loader.js:880:27)\r\n    at Module._load (internal/modules/cjs/loader.js:743:27)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:7:5\r\n(node:23488) WARNING: Detected use of sync API\r\n    at openSync (fs.js:463:26)\r\n    at readFileSync (fs.js:369:35)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1096:22)\r\n    at Module.load (internal/modules/cjs/loader.js:941:32)\r\n    at Module._load (internal/modules/cjs/loader.js:782:14)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:7:5\r\n    at Module._compile (internal/modules/cjs/loader.js:1076:30)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1097:10)\r\n(node:23488) WARNING: Detected use of sync API\r\n    at tryStatSync (fs.js:331:25)\r\n    at readFileSync (fs.js:371:17)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1096:22)\r\n    at Module.load (internal/modules/cjs/loader.js:941:32)\r\n    at Module._load (internal/modules/cjs/loader.js:782:14)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:7:5\r\n    at Module._compile (internal/modules/cjs/loader.js:1076:30)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1097:10)\r\n(node:23488) WARNING: Detected use of sync API\r\n    at readSync (fs.js:580:26)\r\n    at tryReadSync (fs.js:358:20)\r\n    at readFileSync (fs.js:387:19)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1096:22)\r\n    at Module.load (internal/modules/cjs/loader.js:941:32)\r\n    at Module._load (internal/modules/cjs/loader.js:782:14)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:7:5\r\n    at Module._compile (internal/modules/cjs/loader.js:1076:30)\r\n(node:23488) WARNING: Detected use of sync API\r\n    at closeSync (fs.js:428:11)\r\n    at readFileSync (fs.js:404:8)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1096:22)\r\n    at Module.load (internal/modules/cjs/loader.js:941:32)\r\n    at Module._load (internal/modules/cjs/loader.js:782:14)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:7:5\r\n    at Module._compile (internal/modules/cjs/loader.js:1076:30)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1097:10)\r\n(node:23488) WARNING: Detected use of sync API\r\n    at realpathSync (fs.js:1638:13)\r\n    at toRealPath (internal/modules/cjs/loader.js:362:13)\r\n    at tryFile (internal/modules/cjs/loader.js:358:10)\r\n    at tryExtensions (internal/modules/cjs/loader.js:370:22)\r\n    at Module._findPath (internal/modules/cjs/loader.js:526:20)\r\n    at Module._resolveFilename (internal/modules/cjs/loader.js:880:27)\r\n    at Module._load (internal/modules/cjs/loader.js:743:27)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:8:5\r\n(node:23488) WARNING: Detected use of sync API\r\n    at realpathSync (fs.js:1680:29)\r\n    at toRealPath (internal/modules/cjs/loader.js:362:13)\r\n    at tryFile (internal/modules/cjs/loader.js:358:10)\r\n    at tryExtensions (internal/modules/cjs/loader.js:370:22)\r\n    at Module._findPath (internal/modules/cjs/loader.js:526:20)\r\n    at Module._resolveFilename (internal/modules/cjs/loader.js:880:27)\r\n    at Module._load (internal/modules/cjs/loader.js:743:27)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:8:5\r\n(node:23488) WARNING: Detected use of sync API\r\n    at openSync (fs.js:463:26)\r\n    at readFileSync (fs.js:369:35)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1096:22)\r\n    at Module.load (internal/modules/cjs/loader.js:941:32)\r\n    at Module._load (internal/modules/cjs/loader.js:782:14)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:8:5\r\n    at Module._compile (internal/modules/cjs/loader.js:1076:30)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1097:10)\r\n(node:23488) WARNING: Detected use of sync API\r\n    at tryStatSync (fs.js:331:25)\r\n    at readFileSync (fs.js:371:17)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1096:22)\r\n    at Module.load (internal/modules/cjs/loader.js:941:32)\r\n    at Module._load (internal/modules/cjs/loader.js:782:14)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:8:5\r\n    at Module._compile (internal/modules/cjs/loader.js:1076:30)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1097:10)\r\n(node:23488) WARNING: Detected use of sync API\r\n    at readSync (fs.js:580:26)\r\n    at tryReadSync (fs.js:358:20)\r\n    at readFileSync (fs.js:387:19)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1096:22)\r\n    at Module.load (internal/modules/cjs/loader.js:941:32)\r\n    at Module._load (internal/modules/cjs/loader.js:782:14)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:8:5\r\n    at Module._compile (internal/modules/cjs/loader.js:1076:30)\r\n(node:23488) WARNING: Detected use of sync API\r\n    at closeSync (fs.js:428:11)\r\n    at readFileSync (fs.js:404:8)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1096:22)\r\n    at Module.load (internal/modules/cjs/loader.js:941:32)\r\n    at Module._load (internal/modules/cjs/loader.js:782:14)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:8:5\r\n    at Module._compile (internal/modules/cjs/loader.js:1076:30)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1097:10)\r\n(node:23488) WARNING: Detected use of sync API\r\n    at realpathSync (fs.js:1638:13)\r\n    at toRealPath (internal/modules/cjs/loader.js:362:13)\r\n    at tryFile (internal/modules/cjs/loader.js:358:10)\r\n    at tryExtensions (internal/modules/cjs/loader.js:370:22)\r\n    at Module._findPath (internal/modules/cjs/loader.js:526:20)\r\n    at Module._resolveFilename (internal/modules/cjs/loader.js:880:27)\r\n    at Module._load (internal/modules/cjs/loader.js:743:27)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:9:5\r\n(node:23488) WARNING: Detected use of sync API\r\n    at realpathSync (fs.js:1680:29)\r\n    at toRealPath (internal/modules/cjs/loader.js:362:13)\r\n    at tryFile (internal/modules/cjs/loader.js:358:10)\r\n    at tryExtensions (internal/modules/cjs/loader.js:370:22)\r\n    at Module._findPath (internal/modules/cjs/loader.js:526:20)\r\n    at Module._resolveFilename (internal/modules/cjs/loader.js:880:27)\r\n    at Module._load (internal/modules/cjs/loader.js:743:27)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:9:5\r\n(node:23488) WARNING: Detected use of sync API\r\n    at openSync (fs.js:463:26)\r\n    at readFileSync (fs.js:369:35)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1096:22)\r\n    at Module.load (internal/modules/cjs/loader.js:941:32)\r\n    at Module._load (internal/modules/cjs/loader.js:782:14)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:9:5\r\n    at Module._compile (internal/modules/cjs/loader.js:1076:30)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1097:10)\r\n(node:23488) WARNING: Detected use of sync API\r\n    at tryStatSync (fs.js:331:25)\r\n    at readFileSync (fs.js:371:17)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1096:22)\r\n    at Module.load (internal/modules/cjs/loader.js:941:32)\r\n    at Module._load (internal/modules/cjs/loader.js:782:14)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:9:5\r\n    at Module._compile (internal/modules/cjs/loader.js:1076:30)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1097:10)\r\n(node:23488) WARNING: Detected use of sync API\r\n    at readSync (fs.js:580:26)\r\n    at tryReadSync (fs.js:358:20)\r\n    at readFileSync (fs.js:387:19)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1096:22)\r\n    at Module.load (internal/modules/cjs/loader.js:941:32)\r\n    at Module._load (internal/modules/cjs/loader.js:782:14)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:9:5\r\n    at Module._compile (internal/modules/cjs/loader.js:1076:30)\r\n(node:23488) WARNING: Detected use of sync API\r\n    at closeSync (fs.js:428:11)\r\n    at readFileSync (fs.js:404:8)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1096:22)\r\n    at Module.load (internal/modules/cjs/loader.js:941:32)\r\n    at Module._load (internal/modules/cjs/loader.js:782:14)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:9:5\r\n    at Module._compile (internal/modules/cjs/loader.js:1076:30)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1097:10)\r\n(node:23488) WARNING: Detected use of sync API\r\n    at realpathSync (fs.js:1638:13)\r\n    at toRealPath (internal/modules/cjs/loader.js:362:13)\r\n    at tryFile (internal/modules/cjs/loader.js:358:10)\r\n    at tryExtensions (internal/modules/cjs/loader.js:370:22)\r\n    at Module._findPath (internal/modules/cjs/loader.js:526:20)\r\n    at Module._resolveFilename (internal/modules/cjs/loader.js:880:27)\r\n    at Module._load (internal/modules/cjs/loader.js:743:27)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:10:5\r\n(node:23488) WARNING: Detected use of sync API\r\n    at realpathSync (fs.js:1680:29)\r\n    at toRealPath (internal/modules/cjs/loader.js:362:13)\r\n    at tryFile (internal/modules/cjs/loader.js:358:10)\r\n    at tryExtensions (internal/modules/cjs/loader.js:370:22)\r\n    at Module._findPath (internal/modules/cjs/loader.js:526:20)\r\n    at Module._resolveFilename (internal/modules/cjs/loader.js:880:27)\r\n    at Module._load (internal/modules/cjs/loader.js:743:27)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:10:5\r\n(node:23488) WARNING: Detected use of sync API\r\n    at openSync (fs.js:463:26)\r\n    at readFileSync (fs.js:369:35)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1096:22)\r\n    at Module.load (internal/modules/cjs/loader.js:941:32)\r\n    at Module._load (internal/modules/cjs/loader.js:782:14)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:10:5\r\n    at Module._compile (internal/modules/cjs/loader.js:1076:30)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1097:10)\r\n(node:23488) WARNING: Detected use of sync API\r\n    at tryStatSync (fs.js:331:25)\r\n    at readFileSync (fs.js:371:17)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1096:22)\r\n    at Module.load (internal/modules/cjs/loader.js:941:32)\r\n    at Module._load (internal/modules/cjs/loader.js:782:14)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:10:5\r\n    at Module._compile (internal/modules/cjs/loader.js:1076:30)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1097:10)\r\n(node:23488) WARNING: Detected use of sync API\r\n    at readSync (fs.js:580:26)\r\n    at tryReadSync (fs.js:358:20)\r\n    at readFileSync (fs.js:387:19)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1096:22)\r\n    at Module.load (internal/modules/cjs/loader.js:941:32)\r\n    at Module._load (internal/modules/cjs/loader.js:782:14)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:10:5\r\n    at Module._compile (internal/modules/cjs/loader.js:1076:30)\r\n(node:23488) WARNING: Detected use of sync API\r\n    at closeSync (fs.js:428:11)\r\n    at readFileSync (fs.js:404:8)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1096:22)\r\n    at Module.load (internal/modules/cjs/loader.js:941:32)\r\n    at Module._load (internal/modules/cjs/loader.js:782:14)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:10:5\r\n    at Module._compile (internal/modules/cjs/loader.js:1076:30)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1097:10)\r\n(node:23488) WARNING: Detected use of sync API\r\n    at realpathSync (fs.js:1638:13)\r\n    at toRealPath (internal/modules/cjs/loader.js:362:13)\r\n    at tryFile (internal/modules/cjs/loader.js:358:10)\r\n    at tryExtensions (internal/modules/cjs/loader.js:370:22)\r\n    at Module._findPath (internal/modules/cjs/loader.js:526:20)\r\n    at Module._resolveFilename (internal/modules/cjs/loader.js:880:27)\r\n    at Module._load (internal/modules/cjs/loader.js:743:27)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:11:5\r\n(node:23488) WARNING: Detected use of sync API\r\n    at realpathSync (fs.js:1680:29)\r\n    at toRealPath (internal/modules/cjs/loader.js:362:13)\r\n    at tryFile (internal/modules/cjs/loader.js:358:10)\r\n    at tryExtensions (internal/modules/cjs/loader.js:370:22)\r\n    at Module._findPath (internal/modules/cjs/loader.js:526:20)\r\n    at Module._resolveFilename (internal/modules/cjs/loader.js:880:27)\r\n    at Module._load (internal/modules/cjs/loader.js:743:27)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:11:5\r\n(node:23488) WARNING: Detected use of sync API\r\n    at openSync (fs.js:463:26)\r\n    at readFileSync (fs.js:369:35)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1096:22)\r\n    at Module.load (internal/modules/cjs/loader.js:941:32)\r\n    at Module._load (internal/modules/cjs/loader.js:782:14)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:11:5\r\n    at Module._compile (internal/modules/cjs/loader.js:1076:30)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1097:10)\r\n(node:23488) WARNING: Detected use of sync API\r\n    at tryStatSync (fs.js:331:25)\r\n    at readFileSync (fs.js:371:17)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1096:22)\r\n    at Module.load (internal/modules/cjs/loader.js:941:32)\r\n    at Module._load (internal/modules/cjs/loader.js:782:14)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:11:5\r\n    at Module._compile (internal/modules/cjs/loader.js:1076:30)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1097:10)\r\n(node:23488) WARNING: Detected use of sync API\r\n    at readSync (fs.js:580:26)\r\n    at tryReadSync (fs.js:358:20)\r\n    at readFileSync (fs.js:387:19)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1096:22)\r\n    at Module.load (internal/modules/cjs/loader.js:941:32)\r\n    at Module._load (internal/modules/cjs/loader.js:782:14)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:11:5\r\n    at Module._compile (internal/modules/cjs/loader.js:1076:30)\r\n(node:23488) WARNING: Detected use of sync API\r\n    at closeSync (fs.js:428:11)\r\n    at readFileSync (fs.js:404:8)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1096:22)\r\n    at Module.load (internal/modules/cjs/loader.js:941:32)\r\n    at Module._load (internal/modules/cjs/loader.js:782:14)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:11:5\r\n    at Module._compile (internal/modules/cjs/loader.js:1076:30)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1097:10)\r\n(node:23488) WARNING: Detected use of sync API\r\n    at realpathSync (fs.js:1638:13)\r\n    at toRealPath (internal/modules/cjs/loader.js:362:13)\r\n    at tryFile (internal/modules/cjs/loader.js:358:10)\r\n    at tryExtensions (internal/modules/cjs/loader.js:370:22)\r\n    at Module._findPath (internal/modules/cjs/loader.js:526:20)\r\n    at Module._resolveFilename (internal/modules/cjs/loader.js:880:27)\r\n    at Module._load (internal/modules/cjs/loader.js:743:27)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:12:5\r\n(node:23488) WARNING: Detected use of sync API\r\n    at realpathSync (fs.js:1680:29)\r\n    at toRealPath (internal/modules/cjs/loader.js:362:13)\r\n    at tryFile (internal/modules/cjs/loader.js:358:10)\r\n    at tryExtensions (internal/modules/cjs/loader.js:370:22)\r\n    at Module._findPath (internal/modules/cjs/loader.js:526:20)\r\n    at Module._resolveFilename (internal/modules/cjs/loader.js:880:27)\r\n    at Module._load (internal/modules/cjs/loader.js:743:27)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:12:5\r\n(node:23488) WARNING: Detected use of sync API\r\n    at openSync (fs.js:463:26)\r\n    at readFileSync (fs.js:369:35)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1096:22)\r\n    at Module.load (internal/modules/cjs/loader.js:941:32)\r\n    at Module._load (internal/modules/cjs/loader.js:782:14)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:12:5\r\n    at Module._compile (internal/modules/cjs/loader.js:1076:30)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1097:10)\r\n(node:23488) WARNING: Detected use of sync API\r\n    at tryStatSync (fs.js:331:25)\r\n    at readFileSync (fs.js:371:17)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1096:22)\r\n    at Module.load (internal/modules/cjs/loader.js:941:32)\r\n    at Module._load (internal/modules/cjs/loader.js:782:14)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:12:5\r\n    at Module._compile (internal/modules/cjs/loader.js:1076:30)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1097:10)\r\n(node:23488) WARNING: Detected use of sync API\r\n    at readSync (fs.js:580:26)\r\n    at tryReadSync (fs.js:358:20)\r\n    at readFileSync (fs.js:387:19)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1096:22)\r\n    at Module.load (internal/modules/cjs/loader.js:941:32)\r\n    at Module._load (internal/modules/cjs/loader.js:782:14)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:12:5\r\n    at Module._compile (internal/modules/cjs/loader.js:1076:30)\r\n(node:23488) WARNING: Detected use of sync API\r\n    at closeSync (fs.js:428:11)\r\n    at readFileSync (fs.js:404:8)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1096:22)\r\n    at Module.load (internal/modules/cjs/loader.js:941:32)\r\n    at Module._load (internal/modules/cjs/loader.js:782:14)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:12:5\r\n    at Module._compile (internal/modules/cjs/loader.js:1076:30)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1097:10)\r\n(node:23488) WARNING: Detected use of sync API\r\n    at realpathSync (fs.js:1638:13)\r\n    at toRealPath (internal/modules/cjs/loader.js:362:13)\r\n    at tryFile (internal/modules/cjs/loader.js:358:10)\r\n    at tryExtensions (internal/modules/cjs/loader.js:370:22)\r\n    at Module._findPath (internal/modules/cjs/loader.js:526:20)\r\n    at Module._resolveFilename (internal/modules/cjs/loader.js:880:27)\r\n    at Module._load (internal/modules/cjs/loader.js:743:27)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:13:5\r\n(node:23488) WARNING: Detected use of sync API\r\n    at realpathSync (fs.js:1680:29)\r\n    at toRealPath (internal/modules/cjs/loader.js:362:13)\r\n    at tryFile (internal/modules/cjs/loader.js:358:10)\r\n    at tryExtensions (internal/modules/cjs/loader.js:370:22)\r\n    at Module._findPath (internal/modules/cjs/loader.js:526:20)\r\n    at Module._resolveFilename (internal/modules/cjs/loader.js:880:27)\r\n    at Module._load (internal/modules/cjs/loader.js:743:27)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:13:5\r\n(node:23488) WARNING: Detected use of sync API\r\n    at openSync (fs.js:463:26)\r\n    at readFileSync (fs.js:369:35)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1096:22)\r\n    at Module.load (internal/modules/cjs/loader.js:941:32)\r\n    at Module._load (internal/modules/cjs/loader.js:782:14)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:13:5\r\n    at Module._compile (internal/modules/cjs/loader.js:1076:30)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1097:10)\r\n(node:23488) WARNING: Detected use of sync API\r\n    at tryStatSync (fs.js:331:25)\r\n    at readFileSync (fs.js:371:17)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1096:22)\r\n    at Module.load (internal/modules/cjs/loader.js:941:32)\r\n    at Module._load (internal/modules/cjs/loader.js:782:14)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:13:5\r\n    at Module._compile (internal/modules/cjs/loader.js:1076:30)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1097:10)\r\n(node:23488) WARNING: Detected use of sync API\r\n    at readSync (fs.js:580:26)\r\n    at tryReadSync (fs.js:358:20)\r\n    at readFileSync (fs.js:387:19)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1096:22)\r\n    at Module.load (internal/modules/cjs/loader.js:941:32)\r\n    at Module._load (internal/modules/cjs/loader.js:782:14)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:13:5\r\n    at Module._compile (internal/modules/cjs/loader.js:1076:30)\r\n(node:23488) WARNING: Detected use of sync API\r\n    at closeSync (fs.js:428:11)\r\n    at readFileSync (fs.js:404:8)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1096:22)\r\n    at Module.load (internal/modules/cjs/loader.js:941:32)\r\n    at Module._load (internal/modules/cjs/loader.js:782:14)\r\n    at Module.require (internal/modules/cjs/loader.js:965:19)\r\n    at require (internal/modules/cjs/helpers.js:88:18)\r\n    at C:\\Users\\****\\Desktop\\Projets\\NODEJS\\debug\\microservices\\node_modules\\iconv-lite\\encodings\\index.js:13:5\r\n    at Module._compile (internal/modules/cjs/loader.js:1076:30)\r\n    at Module._extensions..js (internal/modules/cjs/loader.js:1097:10)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4434/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4434/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4433",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4433/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4433/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4433/events",
    "html_url": "https://github.com/expressjs/express/issues/4433",
    "id": 723122685,
    "node_id": "MDU6SXNzdWU3MjMxMjI2ODU=",
    "number": 4433,
    "title": "[v5] req.query is not writable anymore",
    "user": {
      "login": "Vakintoshka",
      "id": 2005262,
      "node_id": "MDQ6VXNlcjIwMDUyNjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2005262?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Vakintoshka",
      "html_url": "https://github.com/Vakintoshka",
      "followers_url": "https://api.github.com/users/Vakintoshka/followers",
      "following_url": "https://api.github.com/users/Vakintoshka/following{/other_user}",
      "gists_url": "https://api.github.com/users/Vakintoshka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Vakintoshka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Vakintoshka/subscriptions",
      "organizations_url": "https://api.github.com/users/Vakintoshka/orgs",
      "repos_url": "https://api.github.com/users/Vakintoshka/repos",
      "events_url": "https://api.github.com/users/Vakintoshka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Vakintoshka/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 98481977,
        "node_id": "MDU6TGFiZWw5ODQ4MTk3Nw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-10-16T11:04:23Z",
    "updated_at": "2020-10-16T12:54:24Z",
    "closed_at": "2020-10-16T12:54:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hey guys, in v5 it's not possible to write into `req.query` anymore, as you defined it only as getter wrapper. \r\nSometimes it was useful to write some default values (like limit/offset for pagination) into the `req.query`, and not it's not possible now. Would love to see some way how to set default values into req.query. Thank you!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4433/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4433/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4432",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4432/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4432/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4432/events",
    "html_url": "https://github.com/expressjs/express/issues/4432",
    "id": 722781473,
    "node_id": "MDU6SXNzdWU3MjI3ODE0NzM=",
    "number": 4432,
    "title": "issue with examples/ejs/views/users.html",
    "user": {
      "login": "moshechaikin",
      "id": 6878298,
      "node_id": "MDQ6VXNlcjY4NzgyOTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6878298?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/moshechaikin",
      "html_url": "https://github.com/moshechaikin",
      "followers_url": "https://api.github.com/users/moshechaikin/followers",
      "following_url": "https://api.github.com/users/moshechaikin/following{/other_user}",
      "gists_url": "https://api.github.com/users/moshechaikin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/moshechaikin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/moshechaikin/subscriptions",
      "organizations_url": "https://api.github.com/users/moshechaikin/orgs",
      "repos_url": "https://api.github.com/users/moshechaikin/repos",
      "events_url": "https://api.github.com/users/moshechaikin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/moshechaikin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-10-16T00:54:48Z",
    "updated_at": "2020-10-16T02:32:24Z",
    "closed_at": "2020-10-16T02:32:19Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "include fails, needs to be\r\n\r\n<%- include('header.html'); -%>\r\nand \r\n<%- include('footer.html'); -%>\r\n\r\ndoesn't work otherwise.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4432/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4432/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4431",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4431/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4431/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4431/events",
    "html_url": "https://github.com/expressjs/express/issues/4431",
    "id": 720592096,
    "node_id": "MDU6SXNzdWU3MjA1OTIwOTY=",
    "number": 4431,
    "title": "Initialize async MySQL Connection",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-10-13T17:39:35Z",
    "updated_at": "2020-10-14T06:56:26Z",
    "closed_at": "2020-10-14T06:56:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "```\r\nconst express = require('express');\r\nconst mysql = require('mysql');\r\nconst app = express();\r\n\r\nvar MYSQLConfig = {\r\n    host: \"InvalidHostToForceCatchError\",\r\n    user: \"manager\",\r\n    password: \"manager\"\r\n};\r\n\r\n\r\napp.get('/', async (req, res) => {\r\n    try {\r\n        var connection = await mysql.createConnection(MYSQLConfig)\r\n        await connection.connect();\r\n        res.send(\"CONNECTED\");\r\n    } catch (err) {\r\n        res.send(\"NOT CONNECTED\");\r\n    }\r\n});\r\n\r\napp.listen(80);\r\n```\r\n\r\n\r\nWith this code I get everytime (and instantly, nothing async) the response \"CONNECTED\" even if the MySQL configuration is invalid. What is wrong with my code?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4431/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4431/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4430",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4430/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4430/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4430/events",
    "html_url": "https://github.com/expressjs/express/issues/4430",
    "id": 719032750,
    "node_id": "MDU6SXNzdWU3MTkwMzI3NTA=",
    "number": 4430,
    "title": "res.download sending back corrupted data",
    "user": {
      "login": "AstroProjection",
      "id": 13699537,
      "node_id": "MDQ6VXNlcjEzNjk5NTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/13699537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AstroProjection",
      "html_url": "https://github.com/AstroProjection",
      "followers_url": "https://api.github.com/users/AstroProjection/followers",
      "following_url": "https://api.github.com/users/AstroProjection/following{/other_user}",
      "gists_url": "https://api.github.com/users/AstroProjection/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AstroProjection/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AstroProjection/subscriptions",
      "organizations_url": "https://api.github.com/users/AstroProjection/orgs",
      "repos_url": "https://api.github.com/users/AstroProjection/repos",
      "events_url": "https://api.github.com/users/AstroProjection/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AstroProjection/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-10-12T04:32:03Z",
    "updated_at": "2020-10-12T10:33:04Z",
    "closed_at": "2020-10-12T05:35:05Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\r\nI have been trying to download some files from my system to the client for my web server.\r\n\r\nI have the absolute path of the file saved and passed it into like so \r\n\r\n```\r\nrouter.get('/download/...'\r\n...\r\n\r\nres.download(\r\n        path.join(__dirname,'..','uploads','2020-10-11T06-24-48.465Z--Factor factory.png' ),\r\n        file.originalname,\r\n        (err) => {\r\n          if (err) console.log(err);\r\n          console.log('file download attempted');\r\n        }\r\n      );\r\n```\r\nfrom a GET request from the client.\r\nIn the response file I had tried running code as such\r\n\r\n```\r\nconst res = await axios.get(`/download/${file._id}/${meetingId}`);\r\n..\r\nlet blob = new Blob([res.data], { type: 'image/png' }); // similarly for PDF the type will be 'application/pdf'\r\n  saveAs(blob, file.filename); // from npm package file-saver\r\n```\r\nBut it downloads some corrupted version of the file where I cannot open the image and the Image appears to be slightly larger than larger than the original data. \r\nOriginal : 40KB\r\nFile received : 70KB\r\n\r\nSimilarly, for a PDF file\r\nOriginal: 896KB\r\nFile received : 1621KB\r\n\r\nIf additional info is required, I will provide.\r\nPlease help, I am just trying to download the file from my server to the client. \r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4430/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4430/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4429",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4429/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4429/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4429/events",
    "html_url": "https://github.com/expressjs/express/issues/4429",
    "id": 718717923,
    "node_id": "MDU6SXNzdWU3MTg3MTc5MjM=",
    "number": 4429,
    "title": "Added local variables on render",
    "user": {
      "login": "JStyle21",
      "id": 6579137,
      "node_id": "MDQ6VXNlcjY1NzkxMzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6579137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JStyle21",
      "html_url": "https://github.com/JStyle21",
      "followers_url": "https://api.github.com/users/JStyle21/followers",
      "following_url": "https://api.github.com/users/JStyle21/following{/other_user}",
      "gists_url": "https://api.github.com/users/JStyle21/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JStyle21/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JStyle21/subscriptions",
      "organizations_url": "https://api.github.com/users/JStyle21/orgs",
      "repos_url": "https://api.github.com/users/JStyle21/repos",
      "events_url": "https://api.github.com/users/JStyle21/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JStyle21/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2020-10-10T22:53:51Z",
    "updated_at": "2023-03-27T07:03:07Z",
    "closed_at": "2023-03-27T07:03:07Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\r\n\r\nI'm using express and ejs.\r\nI passed an object to res.render then called a for in loop on it on the template but when it's printed it has _locals inside too.\r\nEverywhere i checked inside the object it wasn't there, yet on output to the end user it has this extra variable.\r\nI didn't find anything directly on this but a couple of other issues kinda point out that local variables are automatically included in the response to the view and yet i have never encountered this situation before.\r\n\r\nI had to do a hacky solution for this with an if statement checking for this and ignoring it.\r\n\r\nAny other comments on this?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4429/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4429/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4427",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4427/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4427/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4427/events",
    "html_url": "https://github.com/expressjs/express/issues/4427",
    "id": 718017111,
    "node_id": "MDU6SXNzdWU3MTgwMTcxMTE=",
    "number": 4427,
    "title": "Double slash before Router (router//route)",
    "user": {
      "login": "checnev",
      "id": 12879048,
      "node_id": "MDQ6VXNlcjEyODc5MDQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/12879048?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/checnev",
      "html_url": "https://github.com/checnev",
      "followers_url": "https://api.github.com/users/checnev/followers",
      "following_url": "https://api.github.com/users/checnev/following{/other_user}",
      "gists_url": "https://api.github.com/users/checnev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/checnev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/checnev/subscriptions",
      "organizations_url": "https://api.github.com/users/checnev/orgs",
      "repos_url": "https://api.github.com/users/checnev/repos",
      "events_url": "https://api.github.com/users/checnev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/checnev/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2020-10-09T09:59:49Z",
    "updated_at": "2020-11-15T20:08:54Z",
    "closed_at": "2020-11-15T20:08:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello, when i assign a router to the route, then there is access to routes with a double slash at the beginning.\r\n\r\nexample:\r\n```javascript\r\nconst express = require('express');\r\nconst app = express();\r\nconst port = 3000;\r\n\r\nconst router = express.Router({ strict: true }); // i've tried without strict mode\r\nrouter.get('/test', (req, res) => {\r\n  res.send('test');\r\n});\r\n\r\napp.use('/user', router);\r\n\r\napp.listen(port, () => console.log(`app listening on port ${port}!`))\r\n```\r\nThe router is supposed to run on the `/user/test` route, but the `/user//test` also works.\r\n\r\nEnvironment:\r\n```javascript\r\n\"node\": 14.3.0\r\n\"express\": 4.17.1\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4427/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4427/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4426",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4426/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4426/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4426/events",
    "html_url": "https://github.com/expressjs/express/pull/4426",
    "id": 717387368,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDk5OTU4MDQy",
    "number": 4426,
    "title": "Add missing semicolon",
    "user": {
      "login": "SaeedSoltoon",
      "id": 4473680,
      "node_id": "MDQ6VXNlcjQ0NzM2ODA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4473680?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SaeedSoltoon",
      "html_url": "https://github.com/SaeedSoltoon",
      "followers_url": "https://api.github.com/users/SaeedSoltoon/followers",
      "following_url": "https://api.github.com/users/SaeedSoltoon/following{/other_user}",
      "gists_url": "https://api.github.com/users/SaeedSoltoon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SaeedSoltoon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SaeedSoltoon/subscriptions",
      "organizations_url": "https://api.github.com/users/SaeedSoltoon/orgs",
      "repos_url": "https://api.github.com/users/SaeedSoltoon/repos",
      "events_url": "https://api.github.com/users/SaeedSoltoon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SaeedSoltoon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-10-08T14:16:42Z",
    "updated_at": "2020-10-08T14:19:14Z",
    "closed_at": "2020-10-08T14:19:14Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4426",
      "html_url": "https://github.com/expressjs/express/pull/4426",
      "diff_url": "https://github.com/expressjs/express/pull/4426.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4426.patch",
      "merged_at": null
    },
    "body": "add missing semicolon.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4426/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4426/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4425",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4425/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4425/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4425/events",
    "html_url": "https://github.com/expressjs/express/issues/4425",
    "id": 717319681,
    "node_id": "MDU6SXNzdWU3MTczMTk2ODE=",
    "number": 4425,
    "title": "How do I pass browser into app.get()?",
    "user": {
      "login": "ethans333",
      "id": 19983539,
      "node_id": "MDQ6VXNlcjE5OTgzNTM5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19983539?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ethans333",
      "html_url": "https://github.com/ethans333",
      "followers_url": "https://api.github.com/users/ethans333/followers",
      "following_url": "https://api.github.com/users/ethans333/following{/other_user}",
      "gists_url": "https://api.github.com/users/ethans333/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ethans333/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ethans333/subscriptions",
      "organizations_url": "https://api.github.com/users/ethans333/orgs",
      "repos_url": "https://api.github.com/users/ethans333/repos",
      "events_url": "https://api.github.com/users/ethans333/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ethans333/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-10-08T12:55:34Z",
    "updated_at": "2020-10-08T15:12:08Z",
    "closed_at": "2020-10-08T15:12:07Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "How do I pass browser into ```app.get()```? I could properly define ```browser``` within ```app.get()``` but I don't want to launch a new browser every time a user visits the page because that would take too long, I instead just want to create a new page. (I am using the puppeteer module).\r\n\r\nCode:\r\n```javascript\r\nconst browser = async () => {\r\n    const browser = puppeteer.launch({ headless: true })\r\n    return browser\r\n};\r\n\r\nconst songs = []\r\n\r\napp.get('/api', async (req, res, browser) => {\r\n    const url = 'https://soundcloud.com/onde_lofi/desiigner-panda-bassti-remix-extended-improved';\r\n    const url2 = 'https://soundcloud.com/bsdu/fuck-a-beat-i-was-tryna-beat-a-case';\r\n    \r\n    songs.push(await getSong.getSong(url, browser));\r\n    songs.push(await getSong.getSong(url2, browser));\r\n    res.send(songs);\r\n}, browser)\r\n```\r\n\r\nError:\r\n```\r\n(node:8840) UnhandledPromiseRejectionWarning: TypeError: browser.newPage is not a function...\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4425/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4425/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4424",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4424/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4424/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4424/events",
    "html_url": "https://github.com/expressjs/express/issues/4424",
    "id": 715767764,
    "node_id": "MDU6SXNzdWU3MTU3Njc3NjQ=",
    "number": 4424,
    "title": "Express Middleware access to params",
    "user": {
      "login": "albertcito",
      "id": 1768483,
      "node_id": "MDQ6VXNlcjE3Njg0ODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1768483?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/albertcito",
      "html_url": "https://github.com/albertcito",
      "followers_url": "https://api.github.com/users/albertcito/followers",
      "following_url": "https://api.github.com/users/albertcito/following{/other_user}",
      "gists_url": "https://api.github.com/users/albertcito/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/albertcito/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/albertcito/subscriptions",
      "organizations_url": "https://api.github.com/users/albertcito/orgs",
      "repos_url": "https://api.github.com/users/albertcito/repos",
      "events_url": "https://api.github.com/users/albertcito/events{/privacy}",
      "received_events_url": "https://api.github.com/users/albertcito/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-10-06T14:29:42Z",
    "updated_at": "2020-10-12T01:09:50Z",
    "closed_at": "2020-10-12T01:09:50Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "If I am using \"application level middleware\", I should be able to see all the server data within that middleware. For example I would like to trim each string (like Laravel). Or verify some special information in the application. But unfortunately in the \"application level middleware\" I [can't see the parameters](https://github.com/expressjs/express/blob/master/lib/router/layer.js#L111) sent via 'POST' or 'GET' or other that belong to the application. I think I should be able to see it.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4424/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4424/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4423",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4423/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4423/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4423/events",
    "html_url": "https://github.com/expressjs/express/issues/4423",
    "id": 714846562,
    "node_id": "MDU6SXNzdWU3MTQ4NDY1NjI=",
    "number": 4423,
    "title": "Request triager role for tarunyadav1",
    "user": {
      "login": "tarunyadav1",
      "id": 56935638,
      "node_id": "MDQ6VXNlcjU2OTM1NjM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/56935638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tarunyadav1",
      "html_url": "https://github.com/tarunyadav1",
      "followers_url": "https://api.github.com/users/tarunyadav1/followers",
      "following_url": "https://api.github.com/users/tarunyadav1/following{/other_user}",
      "gists_url": "https://api.github.com/users/tarunyadav1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tarunyadav1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tarunyadav1/subscriptions",
      "organizations_url": "https://api.github.com/users/tarunyadav1/orgs",
      "repos_url": "https://api.github.com/users/tarunyadav1/repos",
      "events_url": "https://api.github.com/users/tarunyadav1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tarunyadav1/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-10-05T13:34:20Z",
    "updated_at": "2020-10-12T09:50:30Z",
    "closed_at": "2020-10-11T23:34:49Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "I have read and understood the project's Code of Conduct.\r\nI also have read and understood the process and best practices around Express triaging.\r\n\r\nI request for a triager role for the following GitHub organizations:\r\n\r\njshttp\r\npillarjs\r\nexpress\r\n\r\nThank You",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4423/reactions",
      "total_count": 3,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4423/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4422",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4422/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4422/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4422/events",
    "html_url": "https://github.com/expressjs/express/issues/4422",
    "id": 714292099,
    "node_id": "MDU6SXNzdWU3MTQyOTIwOTk=",
    "number": 4422,
    "title": "Request triager role for @3imed-jaberi",
    "user": {
      "login": "3imed-jaberi",
      "id": 43971542,
      "node_id": "MDQ6VXNlcjQzOTcxNTQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/43971542?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3imed-jaberi",
      "html_url": "https://github.com/3imed-jaberi",
      "followers_url": "https://api.github.com/users/3imed-jaberi/followers",
      "following_url": "https://api.github.com/users/3imed-jaberi/following{/other_user}",
      "gists_url": "https://api.github.com/users/3imed-jaberi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3imed-jaberi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3imed-jaberi/subscriptions",
      "organizations_url": "https://api.github.com/users/3imed-jaberi/orgs",
      "repos_url": "https://api.github.com/users/3imed-jaberi/repos",
      "events_url": "https://api.github.com/users/3imed-jaberi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3imed-jaberi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-10-04T11:22:31Z",
    "updated_at": "2020-10-11T23:33:01Z",
    "closed_at": "2020-10-11T23:33:01Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Hi guys,\r\n\r\n* [x] I have read and understood the project's Code of Conduct.\r\n* [x] I also have read and understood the process and best practices around Express triaging.\r\n\r\nI request for a triager role for the following GitHub organizations:\r\n\r\n* jshttp\r\n* pillarjs\r\n* express",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4422/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4422/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4421",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4421/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4421/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4421/events",
    "html_url": "https://github.com/expressjs/express/pull/4421",
    "id": 713556584,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDk2ODUzMzUy",
    "number": 4421,
    "title": "Added missing semicolons",
    "user": {
      "login": "pedroprado010",
      "id": 7854437,
      "node_id": "MDQ6VXNlcjc4NTQ0Mzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7854437?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pedroprado010",
      "html_url": "https://github.com/pedroprado010",
      "followers_url": "https://api.github.com/users/pedroprado010/followers",
      "following_url": "https://api.github.com/users/pedroprado010/following{/other_user}",
      "gists_url": "https://api.github.com/users/pedroprado010/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pedroprado010/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pedroprado010/subscriptions",
      "organizations_url": "https://api.github.com/users/pedroprado010/orgs",
      "repos_url": "https://api.github.com/users/pedroprado010/repos",
      "events_url": "https://api.github.com/users/pedroprado010/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pedroprado010/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-10-02T11:38:49Z",
    "updated_at": "2020-10-03T14:03:57Z",
    "closed_at": "2020-10-03T14:03:51Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4421",
      "html_url": "https://github.com/expressjs/express/pull/4421",
      "diff_url": "https://github.com/expressjs/express/pull/4421.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4421.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4421/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4421/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4420",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4420/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4420/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4420/events",
    "html_url": "https://github.com/expressjs/express/issues/4420",
    "id": 711924700,
    "node_id": "MDU6SXNzdWU3MTE5MjQ3MDA=",
    "number": 4420,
    "title": "Cyrillic characters in app.get",
    "user": {
      "login": "belqit",
      "id": 44238749,
      "node_id": "MDQ6VXNlcjQ0MjM4NzQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/44238749?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/belqit",
      "html_url": "https://github.com/belqit",
      "followers_url": "https://api.github.com/users/belqit/followers",
      "following_url": "https://api.github.com/users/belqit/following{/other_user}",
      "gists_url": "https://api.github.com/users/belqit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/belqit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/belqit/subscriptions",
      "organizations_url": "https://api.github.com/users/belqit/orgs",
      "repos_url": "https://api.github.com/users/belqit/repos",
      "events_url": "https://api.github.com/users/belqit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/belqit/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-09-30T12:58:29Z",
    "updated_at": "2020-09-30T13:42:57Z",
    "closed_at": "2020-09-30T13:42:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "```\r\nvar express = require('express');\r\nvar app = express();\r\n\r\napp.get(\"/Случайные-вещи\", function(req, res) {\r\n\tres.json({})\r\n})\r\n\r\n\r\napp.listen(8282)\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/44238749/94688026-91803c00-031c-11eb-8258-7e069c3669ef.png)\r\n\r\nhow can i handle it?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4420/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4420/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4419",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4419/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4419/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4419/events",
    "html_url": "https://github.com/expressjs/express/issues/4419",
    "id": 710480920,
    "node_id": "MDU6SXNzdWU3MTA0ODA5MjA=",
    "number": 4419,
    "title": "res.send / res.json do not send functions nested inside of objects ",
    "user": {
      "login": "eschwelgin",
      "id": 56935846,
      "node_id": "MDQ6VXNlcjU2OTM1ODQ2",
      "avatar_url": "https://avatars.githubusercontent.com/u/56935846?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eschwelgin",
      "html_url": "https://github.com/eschwelgin",
      "followers_url": "https://api.github.com/users/eschwelgin/followers",
      "following_url": "https://api.github.com/users/eschwelgin/following{/other_user}",
      "gists_url": "https://api.github.com/users/eschwelgin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eschwelgin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eschwelgin/subscriptions",
      "organizations_url": "https://api.github.com/users/eschwelgin/orgs",
      "repos_url": "https://api.github.com/users/eschwelgin/repos",
      "events_url": "https://api.github.com/users/eschwelgin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eschwelgin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2020-09-28T18:21:26Z",
    "updated_at": "2020-09-28T22:41:02Z",
    "closed_at": "2020-09-28T21:05:40Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have one way communication between two express servers. The slave server is using axios to make a get req to the master server, which replies with an object. This object includes a function. I can see the function inside the object on the master server, but when I log the axios response on the slave server the function is no longer in the object.\r\n\r\nI believe res.send and res.json are never sending the included function. Is this intended? and/or are there any workarounds? The end goal is to run this function on the slave server using other data included in the same object\r\n\r\nMaster Server\r\n\r\n    const testObj = {\r\n        data: {\r\n            val1: \"string\",\r\n            val2: \"string\"\r\n        },\r\n        makeString: function(values) { // I know this function doesn't make sense, but it's close enough for the purpose of example \r\n            return values.data.val1 + values.data.val2\r\n        }\r\n    }\r\n\r\n    app.get('/', (req, res) => {\r\n        console.log('sent object, testObj') // function can be seen included in the object here \r\n        res.send(testObj)\r\n    })\r\n\r\nSlave Server\r\n\r\n    axios.get(`http://localhost:3000`, {}) \r\n        .then(response => {\r\n             console.log(response.data) // function is no longer included in the object here \r\n        }\r\n    );\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4419/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4419/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4418",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4418/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4418/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4418/events",
    "html_url": "https://github.com/expressjs/express/issues/4418",
    "id": 710436363,
    "node_id": "MDU6SXNzdWU3MTA0MzYzNjM=",
    "number": 4418,
    "title": "application listen callback typescript definition is wrong",
    "user": {
      "login": "tjx666",
      "id": 41773861,
      "node_id": "MDQ6VXNlcjQxNzczODYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/41773861?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tjx666",
      "html_url": "https://github.com/tjx666",
      "followers_url": "https://api.github.com/users/tjx666/followers",
      "following_url": "https://api.github.com/users/tjx666/following{/other_user}",
      "gists_url": "https://api.github.com/users/tjx666/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tjx666/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tjx666/subscriptions",
      "organizations_url": "https://api.github.com/users/tjx666/orgs",
      "repos_url": "https://api.github.com/users/tjx666/repos",
      "events_url": "https://api.github.com/users/tjx666/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tjx666/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-09-28T17:06:23Z",
    "updated_at": "2020-09-28T17:34:53Z",
    "closed_at": "2020-09-28T17:34:52Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The callback should accept an err argument when there is exception listening to the port and host.\r\n\r\n![screenshot_2020-09-29_01-03-37](https://user-images.githubusercontent.com/41773861/94463572-bcb93d00-01ef-11eb-914f-08bdf72cf809.png)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4418/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4418/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  }
]