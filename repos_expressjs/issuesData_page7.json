[
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4417",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4417/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4417/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4417/events",
    "html_url": "https://github.com/expressjs/express/issues/4417",
    "id": 708844404,
    "node_id": "MDU6SXNzdWU3MDg4NDQ0MDQ=",
    "number": 4417,
    "title": "Using axios to get data from “/get” to “/”, but geting 403 error. (Express, mysql, JWT)",
    "user": {
      "login": "RukaiJohn",
      "id": 26192592,
      "node_id": "MDQ6VXNlcjI2MTkyNTky",
      "avatar_url": "https://avatars.githubusercontent.com/u/26192592?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RukaiJohn",
      "html_url": "https://github.com/RukaiJohn",
      "followers_url": "https://api.github.com/users/RukaiJohn/followers",
      "following_url": "https://api.github.com/users/RukaiJohn/following{/other_user}",
      "gists_url": "https://api.github.com/users/RukaiJohn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RukaiJohn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RukaiJohn/subscriptions",
      "organizations_url": "https://api.github.com/users/RukaiJohn/orgs",
      "repos_url": "https://api.github.com/users/RukaiJohn/repos",
      "events_url": "https://api.github.com/users/RukaiJohn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RukaiJohn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2020-09-25T10:56:43Z",
    "updated_at": "2020-09-28T07:05:58Z",
    "closed_at": "2020-09-26T16:35:33Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "What I'm trying to do is get json data from \"/get\" to \"/\", but I'm not sure why axios keeps giving my a 403 error. From what I read, axios isn't the issue, but cors is. I tried all the ways that people are recommending, but nothing is working. What I'm I doing wrong within my code? I'm also seeing \"Referrer Policy: strict-origin-when-cross-origin\" in the Header, but I'm not sure if that's what's causing this issue.\r\n\r\n\r\n    const express = require(\"express\");\r\n    const mysql = require(\"mysql2\");\r\n    var app = express();\r\n    const bodyparser = require(\"body-parser\");\r\n    const cors = require(\"cors\");\r\n    const cookieParser = require(\"cookie-parser\");\r\n    const expressSession = require(\"express-session\")({\r\n    secret: \"secret\",\r\n    resave: false,\r\n     saveUninitialized: false,\r\n    });\r\n    const passport = require(\"passport\");\r\n\r\n    const jwt = require('jsonwebtoken');\r\n\r\n    app.use(passport.initialize());\r\n    app.use(passport.session());\r\n\r\n    app.use(bodyparser.json());\r\n    app.use(cors());\r\n\r\n     app.use(bodyparser.urlencoded({ extended: false }));\r\n     app.use(express.json());\r\n     app.use(cookieParser());\r\n     app.use(expressSession);\r\n\r\n     const axios = require('axios');\r\n\r\n     var mysqlConnection = mysql.createConnection({\r\n      host: \"localhost\",\r\n      user: \"root\",\r\n      password: \"\",\r\n      database: \"sys\",\r\n      multipleStatements: true,\r\n    });\r\n\r\n     mysqlConnection.connect((err) => {\r\n       if (!err) console.log(\"DB connection succeded.\");\r\n       else\r\n         console.log(\r\n           \"DB connection failed \\n Error : \" + JSON.stringify(err, undefined, 2)\r\n        );\r\n    });\r\n\r\n     app.use(function(req, res, next) {\r\n      res.header(\"Access-Control-Allow-Origin\", \"*\");\r\n      res.header('Access-Control-Allow-Methods', 'DELETE, PUT, GET, POST');\r\n      res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\r\n     next();\r\n    });\r\n\r\n    app.listen(5000, () =>\r\n      console.log(\"Express server is runnig at port no : 5000\")\r\n    );\r\n\r\n     app.get(\"/get\", authenticateToken, (req, res) => {\r\n  \r\n      jwt.verify(req.token, 'secretpassword', (err) => {\r\n        if (err) {\r\n          res.sendStatus(403);\r\n        } else {\r\n          mysqlConnection.query(\"SELECT * FROM sys.jobs\", (err, rows) => {\r\n            if (rows === undefined) {\r\n              res.send(\"Hello World!\");\r\n            } else {\r\n              res.send(rows);\r\n            }\r\n          });\r\n         }\r\n\r\n      });\r\n    });\r\n\r\n     app.get(\"/\", authenticateToken, (req, res) => {\r\n\r\n      jwt.verify(req.token, 'secretpassword', async (err) => {\r\n        if (err) {\r\n          res.sendStatus(403);\r\n        } else {\r\n\r\n        let response = await axios.get('http://localhost:5000/' +'get', {\r\n          withCredentials: true,\r\n          headers: {\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Authorization': `Bearer \r\n    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjAwOTIyMTQ0LCJleHAiOjE2MDg2OTgxNDR9.aRsw- \r\n    jEQJ-7mlO10nBKA5VT3IL7P0b9T9K0C8aT8sUs`\r\n      \r\n       }\r\n        });\r\n\r\n           res.send(response.data);\r\n\r\n        }\r\n      });\r\n    });\r\n\r\n    app.post(\"/login\", async (req, res) => {\r\n      try {\r\n        const { email } = req.body;\r\n\r\n        mysqlConnection.query(\"SELECT * FROM sys.users WHERE email = ?\", [email], async (error, results) => {\r\n\r\n          const id = results[0].id;\r\n          const token = jwt.sign({ id }, \"secretpassword\", {\r\n          expiresIn: '90d'\r\n        });\r\n\r\n      const cookieOptions = {\r\n        expires: new Date(\r\n          Date.now() + 90 * 24 * 60 * 60 * 1000\r\n        ),\r\n        secure: false,\r\n        httpOnly: true\r\n      }\r\n\r\n      res.cookie('jwt', token, cookieOptions);\r\n\r\n      res.status(200).redirect(\"/get\");\r\n      });\r\n      }\r\n      catch (error) {\r\n      console.log(error);\r\n     }\r\n    }\r\n    );\r\n\r\n\r\n    function authenticateToken(req, res, next) {\r\n\r\n      const bearerHeader = req.cookies.jwt;\r\n\r\n      if (typeof bearerHeader !== 'undefined') {\r\n\r\n      req.token = bearerHeader;\r\n\r\n      next();\r\n    } else {\r\n\r\n       res.sendStatus(403);\r\n     }\r\n    }",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4417/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4417/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4416",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4416/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4416/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4416/events",
    "html_url": "https://github.com/expressjs/express/issues/4416",
    "id": 708397526,
    "node_id": "MDU6SXNzdWU3MDgzOTc1MjY=",
    "number": 4416,
    "title": "Can not set a cookie and then redirect",
    "user": {
      "login": "SeanDez",
      "id": 28183062,
      "node_id": "MDQ6VXNlcjI4MTgzMDYy",
      "avatar_url": "https://avatars.githubusercontent.com/u/28183062?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SeanDez",
      "html_url": "https://github.com/SeanDez",
      "followers_url": "https://api.github.com/users/SeanDez/followers",
      "following_url": "https://api.github.com/users/SeanDez/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeanDez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SeanDez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeanDez/subscriptions",
      "organizations_url": "https://api.github.com/users/SeanDez/orgs",
      "repos_url": "https://api.github.com/users/SeanDez/repos",
      "events_url": "https://api.github.com/users/SeanDez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SeanDez/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-09-24T18:48:52Z",
    "updated_at": "2020-09-24T20:53:31Z",
    "closed_at": "2020-09-24T20:53:30Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This is not bug report but a question. \r\n\r\nI am trying set a cookie on `http://localhost:3000` which is the redirect URL assigned by the Env variable `FRONTEND_URL`. But this doesn't work:\r\n\r\n```\r\nres\r\n  .status(204)\r\n  .cookie('asana_email', jwtWithAsanaEmail, { httpOnly: true })\r\n  .redirect(FRONTEND_URL!);\r\n```\r\nThe front end app prints another unrelated cookie. A Chrome extension also sees this unrelated cookie only.\r\n\r\nWhat is preventing the cookie `asana_email` from being set?\r\n\r\nI suspect a cross domain issue but my knowledge here is shallow.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4416/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4416/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4415",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4415/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4415/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4415/events",
    "html_url": "https://github.com/expressjs/express/issues/4415",
    "id": 707291496,
    "node_id": "MDU6SXNzdWU3MDcyOTE0OTY=",
    "number": 4415,
    "title": "mergeParams availability 4.5?",
    "user": {
      "login": "freeman-g",
      "id": 495886,
      "node_id": "MDQ6VXNlcjQ5NTg4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/495886?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/freeman-g",
      "html_url": "https://github.com/freeman-g",
      "followers_url": "https://api.github.com/users/freeman-g/followers",
      "following_url": "https://api.github.com/users/freeman-g/following{/other_user}",
      "gists_url": "https://api.github.com/users/freeman-g/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/freeman-g/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/freeman-g/subscriptions",
      "organizations_url": "https://api.github.com/users/freeman-g/orgs",
      "repos_url": "https://api.github.com/users/freeman-g/repos",
      "events_url": "https://api.github.com/users/freeman-g/events{/privacy}",
      "received_events_url": "https://api.github.com/users/freeman-g/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2020-09-23T11:48:09Z",
    "updated_at": "2020-09-24T11:12:56Z",
    "closed_at": "2020-09-24T07:43:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am trying to use mergeParams but it is not working. The documentation says it is supported for 4.5+, however, the latest version of Express is 4.17. Can you explain whether merge params should work in 4.17.1?\r\n\r\nhttps://expressjs.com/en/api.html\r\n\r\nHere is the code that is not working:\r\n\r\n```\r\n// app.js\r\nconst router = express.Router({mergeParams: true})\r\n\r\nrouter.use('/', indexRouter)\r\nrouter.use('/users', usersRouter)\r\nrouter.use('/:schoolId/lunch-week', [authenticateJwt, authenticateSchool], lunchWeekRouter)\r\napp.use('/api', router)\r\n\r\n// lunchWeekRouter.js\r\nrouter.get('/', async function (req, res) {\r\n  console.log(req.params)\r\n  // params is empty here!\r\n  const schoolId = parseInt(req.params.schoolId)\r\n  try {\r\n    const lunchWeekList = await getLunchWeekList(schoolId)\r\n    res.send(lunchWeekList)\r\n  } catch (e) {\r\n    const message = `Error getting Lunch Week List`\r\n    res.status(500).send({ message: message, error: e.toString() })\r\n  }\r\n})\r\n```\r\n\r\nThank you\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4415/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4415/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4414",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4414/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4414/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4414/events",
    "html_url": "https://github.com/expressjs/express/issues/4414",
    "id": 706807451,
    "node_id": "MDU6SXNzdWU3MDY4MDc0NTE=",
    "number": 4414,
    "title": "Strange Behavior with optional parameters",
    "user": {
      "login": "bombitmanbomb",
      "id": 11261721,
      "node_id": "MDQ6VXNlcjExMjYxNzIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/11261721?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bombitmanbomb",
      "html_url": "https://github.com/bombitmanbomb",
      "followers_url": "https://api.github.com/users/bombitmanbomb/followers",
      "following_url": "https://api.github.com/users/bombitmanbomb/following{/other_user}",
      "gists_url": "https://api.github.com/users/bombitmanbomb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bombitmanbomb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bombitmanbomb/subscriptions",
      "organizations_url": "https://api.github.com/users/bombitmanbomb/orgs",
      "repos_url": "https://api.github.com/users/bombitmanbomb/repos",
      "events_url": "https://api.github.com/users/bombitmanbomb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bombitmanbomb/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-09-23T00:54:44Z",
    "updated_at": "2020-09-23T06:04:59Z",
    "closed_at": "2020-09-23T06:04:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have noticed some very strange behavior when using optional parameters,\r\nMy endpoint is `/thing/:FieldA?/:FieldB?`\r\n\r\nPassing `/thing/A/B` properly passes `FieldA:A, FieldB:B`\r\nHOWEVER\r\nPassing `/thing/A` you would expect `FieldA:A, FieldB:Undefined`\r\nBut what is actually in req.params is `FieldA:undefined, FieldB:A`\r\n\r\nWhat??",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4414/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4414/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4413",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4413/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4413/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4413/events",
    "html_url": "https://github.com/expressjs/express/issues/4413",
    "id": 704727933,
    "node_id": "MDU6SXNzdWU3MDQ3Mjc5MzM=",
    "number": 4413,
    "title": "Is there a plan to release v5? It seems to be perpetually marked as alpha status",
    "user": {
      "login": "mreinstein",
      "id": 718067,
      "node_id": "MDQ6VXNlcjcxODA2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/718067?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mreinstein",
      "html_url": "https://github.com/mreinstein",
      "followers_url": "https://api.github.com/users/mreinstein/followers",
      "following_url": "https://api.github.com/users/mreinstein/following{/other_user}",
      "gists_url": "https://api.github.com/users/mreinstein/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mreinstein/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mreinstein/subscriptions",
      "organizations_url": "https://api.github.com/users/mreinstein/orgs",
      "repos_url": "https://api.github.com/users/mreinstein/repos",
      "events_url": "https://api.github.com/users/mreinstein/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mreinstein/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-09-19T01:01:56Z",
    "updated_at": "2020-09-19T01:12:33Z",
    "closed_at": "2020-09-19T01:10:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4413/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4413/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4412",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4412/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4412/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4412/events",
    "html_url": "https://github.com/expressjs/express/issues/4412",
    "id": 704194632,
    "node_id": "MDU6SXNzdWU3MDQxOTQ2MzI=",
    "number": 4412,
    "title": "Request triager role for @rodion-arr",
    "user": {
      "login": "rodion-arr",
      "id": 5843270,
      "node_id": "MDQ6VXNlcjU4NDMyNzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5843270?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rodion-arr",
      "html_url": "https://github.com/rodion-arr",
      "followers_url": "https://api.github.com/users/rodion-arr/followers",
      "following_url": "https://api.github.com/users/rodion-arr/following{/other_user}",
      "gists_url": "https://api.github.com/users/rodion-arr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rodion-arr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rodion-arr/subscriptions",
      "organizations_url": "https://api.github.com/users/rodion-arr/orgs",
      "repos_url": "https://api.github.com/users/rodion-arr/repos",
      "events_url": "https://api.github.com/users/rodion-arr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rodion-arr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-09-18T08:31:52Z",
    "updated_at": "2020-09-21T14:50:33Z",
    "closed_at": "2020-09-21T14:50:32Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Hi guys,\r\n\r\nI have spare time to help with issues.\r\n\r\n- I have read and understood the project's Code of Conduct.\r\n- I also have read and understood the process and best practices around Express triaging.\r\n\r\nI request for a triager role for the following GitHub organizations:\r\n- jshttp\r\n- pillarjs\r\n- express",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4412/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4412/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4411",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4411/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4411/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4411/events",
    "html_url": "https://github.com/expressjs/express/pull/4411",
    "id": 703782770,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDg4ODI3ODM2",
    "number": 4411,
    "title": "falta punto y coma ; >:v",
    "user": {
      "login": "gatomod",
      "id": 63877602,
      "node_id": "MDQ6VXNlcjYzODc3NjAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/63877602?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gatomod",
      "html_url": "https://github.com/gatomod",
      "followers_url": "https://api.github.com/users/gatomod/followers",
      "following_url": "https://api.github.com/users/gatomod/following{/other_user}",
      "gists_url": "https://api.github.com/users/gatomod/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gatomod/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gatomod/subscriptions",
      "organizations_url": "https://api.github.com/users/gatomod/orgs",
      "repos_url": "https://api.github.com/users/gatomod/repos",
      "events_url": "https://api.github.com/users/gatomod/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gatomod/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-09-17T17:38:35Z",
    "updated_at": "2020-09-17T19:07:47Z",
    "closed_at": "2020-09-17T18:42:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4411",
      "html_url": "https://github.com/expressjs/express/pull/4411",
      "diff_url": "https://github.com/expressjs/express/pull/4411.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4411.patch",
      "merged_at": null
    },
    "body": "; ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4411/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4411/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4409",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4409/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4409/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4409/events",
    "html_url": "https://github.com/expressjs/express/issues/4409",
    "id": 703447903,
    "node_id": "MDU6SXNzdWU3MDM0NDc5MDM=",
    "number": 4409,
    "title": "Q: Why is hop count always 0?",
    "user": {
      "login": "Domiii",
      "id": 282899,
      "node_id": "MDQ6VXNlcjI4Mjg5OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/282899?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Domiii",
      "html_url": "https://github.com/Domiii",
      "followers_url": "https://api.github.com/users/Domiii/followers",
      "following_url": "https://api.github.com/users/Domiii/following{/other_user}",
      "gists_url": "https://api.github.com/users/Domiii/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Domiii/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Domiii/subscriptions",
      "organizations_url": "https://api.github.com/users/Domiii/orgs",
      "repos_url": "https://api.github.com/users/Domiii/repos",
      "events_url": "https://api.github.com/users/Domiii/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Domiii/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-09-17T10:04:57Z",
    "updated_at": "2020-12-25T09:00:29Z",
    "closed_at": "2020-09-17T13:30:22Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The `protocol` getter returns the value of the `X-Forward-Proto` header if the connection is to be trusted. For that, it considers the value passed to `trust proxy` (if given). The `trust proxy` value can be a number to represent the max trusted hop count. However in the current code, the number is ignored because in the `protocol` getter, it always passes a hardcoded 0 for the actual hop count [here](https://github.com/expressjs/express/blob/master/lib/request.js#L312):\r\n\r\n`  if (!trust(this.connection.remoteAddress, 0)) {`\r\n\r\nWhy is hop count always 0 here? Isn't it dangerous to tell administrators that this setting will check against hop count, while it actually does not?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4409/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4409/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4408",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4408/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4408/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4408/events",
    "html_url": "https://github.com/expressjs/express/pull/4408",
    "id": 703284156,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDg4NDE4ODA4",
    "number": 4408,
    "title": "Add diagnostics channel to layers",
    "user": {
      "login": "Qard",
      "id": 205482,
      "node_id": "MDQ6VXNlcjIwNTQ4Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/205482?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Qard",
      "html_url": "https://github.com/Qard",
      "followers_url": "https://api.github.com/users/Qard/followers",
      "following_url": "https://api.github.com/users/Qard/following{/other_user}",
      "gists_url": "https://api.github.com/users/Qard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Qard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Qard/subscriptions",
      "organizations_url": "https://api.github.com/users/Qard/orgs",
      "repos_url": "https://api.github.com/users/Qard/repos",
      "events_url": "https://api.github.com/users/Qard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Qard/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-09-17T05:41:10Z",
    "updated_at": "2020-09-17T19:07:13Z",
    "closed_at": "2020-09-17T19:07:05Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": true,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4408",
      "html_url": "https://github.com/expressjs/express/pull/4408",
      "diff_url": "https://github.com/expressjs/express/pull/4408.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4408.patch",
      "merged_at": null
    },
    "body": "This is a proof-of-concept implementation of the [diagnostics_channel](https://github.com/nodejs/node/pull/34895) feature I'm working on in Node.js core. The value here is for APM products to be able to capture changes to routing state through the lifecycle of a request. This should of course not be merged until the module exists in Node.js itself. I'm just creating this now to prove the value to userland and to make sure a more complex framework can benefit from it.\r\n\r\nI'll leave this as a draft PR until diagnostics_channel lands in Node.js core.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4408/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4408/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4407",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4407/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4407/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4407/events",
    "html_url": "https://github.com/expressjs/express/issues/4407",
    "id": 703258248,
    "node_id": "MDU6SXNzdWU3MDMyNTgyNDg=",
    "number": 4407,
    "title": "Feature request: pass middleware by promise",
    "user": {
      "login": "josh-hemphill",
      "id": 46608115,
      "node_id": "MDQ6VXNlcjQ2NjA4MTE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/46608115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/josh-hemphill",
      "html_url": "https://github.com/josh-hemphill",
      "followers_url": "https://api.github.com/users/josh-hemphill/followers",
      "following_url": "https://api.github.com/users/josh-hemphill/following{/other_user}",
      "gists_url": "https://api.github.com/users/josh-hemphill/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/josh-hemphill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/josh-hemphill/subscriptions",
      "organizations_url": "https://api.github.com/users/josh-hemphill/orgs",
      "repos_url": "https://api.github.com/users/josh-hemphill/repos",
      "events_url": "https://api.github.com/users/josh-hemphill/events{/privacy}",
      "received_events_url": "https://api.github.com/users/josh-hemphill/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 18291,
        "node_id": "MDU6TGFiZWwxODI5MQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2020-09-17T04:38:32Z",
    "updated_at": "2020-09-24T20:50:05Z",
    "closed_at": "2020-09-24T20:50:05Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I've moved to ES modules and I've found it much easier to use dynamic imports for each of my middleware/routers that are from other files rather than managing many ES imports for the routers/functions.\r\n\r\nSince I've only needed it for reducing the code of my main tree of  routes, I've just created an extension of the `router.use()` like this:\r\n```js\r\nconst getRt = (rt) => rt?.router || rt;\r\nconst myRouter = (opts=null) => {\r\n\tconst router = express.Router(opts);\r\n\trouter.us = async function us(path, ...middleware) {\r\n\t\tconst tmpMid = [];\r\n\t\tfor (let mid of middleware) {\r\n\t\t\tif (mid instanceof Promise) {\r\n\t\t\t\tawait mid.then((x) => tmpMid.push(getRt(x))).catch((err) => console.log(err));\r\n\t\t\t} else {\r\n\t\t\t\ttmpMid.push(mid?.router || mid);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.use(path, ...tmpMid);\r\n\t};\r\n\treturn router;\r\n};\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4407/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4407/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4405",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4405/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4405/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4405/events",
    "html_url": "https://github.com/expressjs/express/pull/4405",
    "id": 700440702,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDg2MDc5NDM3",
    "number": 4405,
    "title": "Fix missing semi-colon. No functional change.",
    "user": {
      "login": "CSamuelLents",
      "id": 14333436,
      "node_id": "MDQ6VXNlcjE0MzMzNDM2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14333436?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CSamuelLents",
      "html_url": "https://github.com/CSamuelLents",
      "followers_url": "https://api.github.com/users/CSamuelLents/followers",
      "following_url": "https://api.github.com/users/CSamuelLents/following{/other_user}",
      "gists_url": "https://api.github.com/users/CSamuelLents/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CSamuelLents/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CSamuelLents/subscriptions",
      "organizations_url": "https://api.github.com/users/CSamuelLents/orgs",
      "repos_url": "https://api.github.com/users/CSamuelLents/repos",
      "events_url": "https://api.github.com/users/CSamuelLents/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CSamuelLents/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-09-13T01:06:53Z",
    "updated_at": "2020-09-13T01:25:07Z",
    "closed_at": "2020-09-13T01:09:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4405",
      "html_url": "https://github.com/expressjs/express/pull/4405",
      "diff_url": "https://github.com/expressjs/express/pull/4405.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4405.patch",
      "merged_at": null
    },
    "body": "ASI won't cause an issue in this case, but worth the fix for general code quality, IMO.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4405/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4405/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4404",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4404/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4404/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4404/events",
    "html_url": "https://github.com/expressjs/express/issues/4404",
    "id": 698066111,
    "node_id": "MDU6SXNzdWU2OTgwNjYxMTE=",
    "number": 4404,
    "title": "express.static enables homepage route?",
    "user": {
      "login": "Andreyooo",
      "id": 38321084,
      "node_id": "MDQ6VXNlcjM4MzIxMDg0",
      "avatar_url": "https://avatars.githubusercontent.com/u/38321084?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Andreyooo",
      "html_url": "https://github.com/Andreyooo",
      "followers_url": "https://api.github.com/users/Andreyooo/followers",
      "following_url": "https://api.github.com/users/Andreyooo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Andreyooo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Andreyooo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Andreyooo/subscriptions",
      "organizations_url": "https://api.github.com/users/Andreyooo/orgs",
      "repos_url": "https://api.github.com/users/Andreyooo/repos",
      "events_url": "https://api.github.com/users/Andreyooo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Andreyooo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-09-10T14:43:26Z",
    "updated_at": "2020-09-10T14:50:25Z",
    "closed_at": "2020-09-10T14:50:25Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "That's how my file looks like:\r\n```\r\napp.use(express.static(\"usr/IOT/public/\"));\r\n\r\napp.get(\"/test\", (req, res) => {\r\n  res.sendFile(path.join(__dirname + \"/public/index.html\"));\r\n});\r\n```\r\n\r\nWithout `express.static` my homepage route (\"/\") returns 404 and my test route loads, but the javascript fails to load.\r\nWhen I enable `express.static` to load files everything works well, but my index.html is loaded on my homepage route (\"/\") aswell, although I have none enabled. \r\nIs this intentional behaviour?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4404/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4404/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4403",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4403/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4403/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4403/events",
    "html_url": "https://github.com/expressjs/express/issues/4403",
    "id": 697120887,
    "node_id": "MDU6SXNzdWU2OTcxMjA4ODc=",
    "number": 4403,
    "title": "QUESTION: how come that express ends up in 126 place in benchmarks",
    "user": {
      "login": "woss",
      "id": 80440,
      "node_id": "MDQ6VXNlcjgwNDQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/80440?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/woss",
      "html_url": "https://github.com/woss",
      "followers_url": "https://api.github.com/users/woss/followers",
      "following_url": "https://api.github.com/users/woss/following{/other_user}",
      "gists_url": "https://api.github.com/users/woss/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/woss/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/woss/subscriptions",
      "organizations_url": "https://api.github.com/users/woss/orgs",
      "repos_url": "https://api.github.com/users/woss/repos",
      "events_url": "https://api.github.com/users/woss/events{/privacy}",
      "received_events_url": "https://api.github.com/users/woss/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-09-09T20:04:12Z",
    "updated_at": "2020-09-10T13:32:52Z",
    "closed_at": "2020-09-09T23:15:53Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I LOVE EXPRESS, let's be clear on that and i use it a lot, so i was wondering how in the hell Express can be so low on the list ( ignore the other languages) on the list found here  https://github.com/the-benchmarker/web-frameworks#results",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4403/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4403/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4402",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4402/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4402/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4402/events",
    "html_url": "https://github.com/expressjs/express/issues/4402",
    "id": 697087206,
    "node_id": "MDU6SXNzdWU2OTcwODcyMDY=",
    "number": 4402,
    "title": "package.json must be actual JSON, not just Javascript",
    "user": {
      "login": "Derpchadas",
      "id": 71038903,
      "node_id": "MDQ6VXNlcjcxMDM4OTAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/71038903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Derpchadas",
      "html_url": "https://github.com/Derpchadas",
      "followers_url": "https://api.github.com/users/Derpchadas/followers",
      "following_url": "https://api.github.com/users/Derpchadas/following{/other_user}",
      "gists_url": "https://api.github.com/users/Derpchadas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Derpchadas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Derpchadas/subscriptions",
      "organizations_url": "https://api.github.com/users/Derpchadas/orgs",
      "repos_url": "https://api.github.com/users/Derpchadas/repos",
      "events_url": "https://api.github.com/users/Derpchadas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Derpchadas/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-09-09T19:20:34Z",
    "updated_at": "2020-09-11T16:22:44Z",
    "closed_at": "2020-09-11T16:22:43Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am new to coding and am trying to make a discord bot to make things interesting.  I followed instructions on how to program a simple starter (it was the same instructions on multiple different sites), but keep running into problems.\r\n{\r\n“name”: “Laoch Overwatch”\r\n“version”: “1.0.0”,\r\n“description”: “My bot to test stuff”,\r\n“main”: “bot.js”,\r\n“author”: “Derp”,\r\n“dependencies”: { }\r\n}\r\nThis the the contents of the json in question. I run `npm install discord.io winston -save` as instructed and recieve this.\r\n\r\nnpm ERR! code EJSONPARSE\r\nnpm ERR! file C:\\Users\\Me\\Desktop\\discord bot\\package.json\r\nnpm ERR! JSON.parse Failed to parse json\r\nnpm ERR! JSON.parse Unexpected token “ in JSON at position 3 while parsing near '{\r\nnpm ERR! JSON.parse “name”: “Laoch Overw...'\r\nnpm ERR! JSON.parse Failed to parse package.json data.\r\nnpm ERR! JSON.parse package.json must be actual JSON, not just JavaScript.\r\n\r\nI've seen many solutions to a very similar problem on here and have tried them all, but none seem to fix this error.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4402/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4402/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4401",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4401/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4401/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4401/events",
    "html_url": "https://github.com/expressjs/express/pull/4401",
    "id": 695791144,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDgxOTc2NzE0",
    "number": 4401,
    "title": "Update examples/web-service/index.js",
    "user": {
      "login": "r0mankon",
      "id": 36927037,
      "node_id": "MDQ6VXNlcjM2OTI3MDM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/36927037?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/r0mankon",
      "html_url": "https://github.com/r0mankon",
      "followers_url": "https://api.github.com/users/r0mankon/followers",
      "following_url": "https://api.github.com/users/r0mankon/following{/other_user}",
      "gists_url": "https://api.github.com/users/r0mankon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/r0mankon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/r0mankon/subscriptions",
      "organizations_url": "https://api.github.com/users/r0mankon/orgs",
      "repos_url": "https://api.github.com/users/r0mankon/repos",
      "events_url": "https://api.github.com/users/r0mankon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/r0mankon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-09-08T11:30:40Z",
    "updated_at": "2020-09-21T07:40:01Z",
    "closed_at": "2020-09-13T01:11:38Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4401",
      "html_url": "https://github.com/expressjs/express/pull/4401",
      "diff_url": "https://github.com/expressjs/express/pull/4401.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4401.patch",
      "merged_at": null
    },
    "body": "Make it easier to read!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4401/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4401/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4399",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4399/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4399/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4399/events",
    "html_url": "https://github.com/expressjs/express/issues/4399",
    "id": 694670350,
    "node_id": "MDU6SXNzdWU2OTQ2NzAzNTA=",
    "number": 4399,
    "title": "EPIPE Error when uploading large file using nodejs",
    "user": {
      "login": "soubhikchatterjee",
      "id": 863672,
      "node_id": "MDQ6VXNlcjg2MzY3Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863672?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soubhikchatterjee",
      "html_url": "https://github.com/soubhikchatterjee",
      "followers_url": "https://api.github.com/users/soubhikchatterjee/followers",
      "following_url": "https://api.github.com/users/soubhikchatterjee/following{/other_user}",
      "gists_url": "https://api.github.com/users/soubhikchatterjee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soubhikchatterjee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soubhikchatterjee/subscriptions",
      "organizations_url": "https://api.github.com/users/soubhikchatterjee/orgs",
      "repos_url": "https://api.github.com/users/soubhikchatterjee/repos",
      "events_url": "https://api.github.com/users/soubhikchatterjee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soubhikchatterjee/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2020-09-07T03:43:02Z",
    "updated_at": "2021-08-29T16:16:34Z",
    "closed_at": "2021-08-29T16:16:34Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This may not be an express issue but i couldnt find any other way to seek help, hence posting it here.\r\n\r\nI was following [this][1] article to setup a nodejs server on my local machine (which has 16 gb memory and about 170gb free disk-space) and uploaded a 20 gb file, for the first couple of times the file got uploaded successfully, but after a while i started getting EPIPE error:\r\n\r\n    error FetchError: request to http://localhost:3200/upload failed, reason: write EPIPE\r\n        at ClientRequest.<anonymous> (/Volumes/FreeAgent GoFlex Drive/Test/multer-project/node_modules/node-fetch/lib/index.js:1455:11)\r\n        at ClientRequest.emit (events.js:327:22)\r\n        at Socket.socketErrorListener (_http_client.js:467:9)\r\n        at Socket.emit (events.js:315:20)\r\n        at emitErrorNT (internal/streams/destroy.js:100:8)\r\n        at emitErrorCloseNT (internal/streams/destroy.js:68:3)\r\n        at processTicksAndRejections (internal/process/task_queues.js:84:21) {\r\n      type: 'system',\r\n      errno: 'EPIPE',\r\n      code: 'EPIPE'\r\n    }\r\n\r\nWhen i checked, the file got uploaded partially and was about 28mb in size. I tried uploading the file from both Postman, browser and a nodejs script, but got the same EPIPE error message. I am not sure why is this happening, googling the error message didn't help. I am not sure how to overcome this. Following is my server and client code.\r\n\r\n\r\n    // server.js\r\n    const express = require(\"express\"); // Express Web Server\r\n    const busboy = require(\"connect-busboy\"); // Middleware to handle the file upload https://github.com/mscdex/connect-busboy\r\n    const path = require(\"path\"); // Used for manipulation with path\r\n    const fs = require(\"fs-extra\");  \r\n    \r\n    const app = express(); // Initialize the express web server\r\n    app.use(\r\n      busboy({\r\n        highWaterMark: 2 * 1024 * 1024 // Set 2MiB buffer\r\n      })\r\n    ); // Insert the busboy middle-ware\r\n    \r\n    const uploadPath = path.join(__dirname, \"uploads/\"); // Register the upload path\r\n    fs.ensureDir(uploadPath); // Make sure that he upload path exits\r\n    \r\n    /**\r\n     * Create route /upload which handles the post request\r\n     */\r\n    app.route(\"/upload\").post((req, res, next) => {\r\n      req.pipe(req.busboy); // Pipe it trough busboy\r\n    \r\n      req.busboy.on(\"file\", (fieldname, file, filename) => {\r\n        console.log(`Upload of '${filename}' started`);\r\n    \r\n        // Create a write stream of the new file\r\n        const fstream = fs.createWriteStream(path.join(uploadPath, filename));\r\n        // Pipe it trough\r\n        file.pipe(fstream);\r\n    \r\n        // On finish of the upload\r\n        fstream.on(\"close\", () => {\r\n          console.log(`Upload of '${filename}' finished`);\r\n          res.send(\"ok\");\r\n        });\r\n      });\r\n    });\r\n    \r\n    /**\r\n     * Serve the basic index.html with upload form\r\n     */\r\n    app.route(\"/\").get((req, res) => {\r\n      res.writeHead(200, { \"Content-Type\": \"text/html\" });\r\n      res.write(\r\n        '<form action=\"upload\" method=\"post\" enctype=\"multipart/form-data\">'\r\n      );\r\n      res.write('<input type=\"file\" name=\"fileToUpload\"><br>');\r\n      res.write('<input type=\"submit\">');\r\n      res.write(\"</form>\");\r\n      return res.end();\r\n    });\r\n    \r\n    const server = app.listen(3200, function() {\r\n      console.log(`Listening on port ${server.address().port}`);\r\n    });\r\n\r\n\r\nand my client code is:\r\n\r\n    // client.js\r\n    const fs = require(\"fs\");\r\n    const FormData = require(\"form-data\");\r\n    const fetch = require(\"node-fetch\");\r\n    \r\n    var formdata = new FormData();\r\n    formdata.append(\r\n      \"file\",\r\n      fs.createReadStream(\"/Users/phantom007/My Documents/35gb.myfile\")\r\n    );\r\n    \r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      body: formdata,\r\n      redirect: \"follow\"\r\n    };\r\n    \r\n    fetch(\"http://localhost:3200/upload\", requestOptions)\r\n      .then(response => response.text())\r\n      .then(result => console.log(result))\r\n      .catch(error => console.log(\"error\", error));\r\n\r\n\r\n  [1]: https://pagep.net/2018/03/31/how-to-handle-large-file-upload-with-nodejs-express-server/\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4399/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4399/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4398",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4398/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4398/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4398/events",
    "html_url": "https://github.com/expressjs/express/issues/4398",
    "id": 694146970,
    "node_id": "MDU6SXNzdWU2OTQxNDY5NzA=",
    "number": 4398,
    "title": "Deprecate template engines list in wiki",
    "user": {
      "login": "nebrelbug",
      "id": 25597854,
      "node_id": "MDQ6VXNlcjI1NTk3ODU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25597854?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nebrelbug",
      "html_url": "https://github.com/nebrelbug",
      "followers_url": "https://api.github.com/users/nebrelbug/followers",
      "following_url": "https://api.github.com/users/nebrelbug/following{/other_user}",
      "gists_url": "https://api.github.com/users/nebrelbug/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nebrelbug/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nebrelbug/subscriptions",
      "organizations_url": "https://api.github.com/users/nebrelbug/orgs",
      "repos_url": "https://api.github.com/users/nebrelbug/repos",
      "events_url": "https://api.github.com/users/nebrelbug/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nebrelbug/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-09-05T18:56:07Z",
    "updated_at": "2020-09-05T19:02:56Z",
    "closed_at": "2020-09-05T19:02:51Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "https://github.com/expressjs/express/wiki#template-engines has a list of template engines that are Express.js-compatible. However, the list is outdated and no longer accepting updates. The current list is at https://expressjs.com/en/resources/template-engines.html\r\n\r\nBack in 2018 we talked about migrating content from the wiki to the website (see https://github.com/expressjs/expressjs.com/issues/983 and https://github.com/expressjs/expressjs.com/pull/991). I think now would be a good time to replace the \"Template Engines\" section in the README with a link to the documentation site.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4398/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4398/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4397",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4397/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4397/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4397/events",
    "html_url": "https://github.com/expressjs/express/issues/4397",
    "id": 692327145,
    "node_id": "MDU6SXNzdWU2OTIzMjcxNDU=",
    "number": 4397,
    "title": "Request for permission to use Express logo at new nodejs website",
    "user": {
      "login": "ahtee",
      "id": 5076085,
      "node_id": "MDQ6VXNlcjUwNzYwODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5076085?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ahtee",
      "html_url": "https://github.com/ahtee",
      "followers_url": "https://api.github.com/users/ahtee/followers",
      "following_url": "https://api.github.com/users/ahtee/following{/other_user}",
      "gists_url": "https://api.github.com/users/ahtee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ahtee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ahtee/subscriptions",
      "organizations_url": "https://api.github.com/users/ahtee/orgs",
      "repos_url": "https://api.github.com/users/ahtee/repos",
      "events_url": "https://api.github.com/users/ahtee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ahtee/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2020-09-03T20:37:44Z",
    "updated_at": "2021-07-30T19:24:13Z",
    "closed_at": "2021-07-30T19:24:07Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello 👋 \r\n\r\nNodejs.org is currently working on a website redesign over at https://github.com/nodejs/nodejs.dev (also https://nodejs.dev) and we were seeking to gain permission to use the Express logo in the new site. \r\n\r\nSee issue referenced at: https://github.com/nodejs/nodejs.dev/issues/818\r\n\r\nThanks for your time 😄 ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4397/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4397/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4396",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4396/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4396/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4396/events",
    "html_url": "https://github.com/expressjs/express/issues/4396",
    "id": 692116029,
    "node_id": "MDU6SXNzdWU2OTIxMTYwMjk=",
    "number": 4396,
    "title": "express.json() breaks AsyncLocalStorage in node 14",
    "user": {
      "login": "OllieNilsen",
      "id": 1117651,
      "node_id": "MDQ6VXNlcjExMTc2NTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1117651?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/OllieNilsen",
      "html_url": "https://github.com/OllieNilsen",
      "followers_url": "https://api.github.com/users/OllieNilsen/followers",
      "following_url": "https://api.github.com/users/OllieNilsen/following{/other_user}",
      "gists_url": "https://api.github.com/users/OllieNilsen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/OllieNilsen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/OllieNilsen/subscriptions",
      "organizations_url": "https://api.github.com/users/OllieNilsen/orgs",
      "repos_url": "https://api.github.com/users/OllieNilsen/repos",
      "events_url": "https://api.github.com/users/OllieNilsen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/OllieNilsen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2020-09-03T16:31:53Z",
    "updated_at": "2020-09-04T12:01:17Z",
    "closed_at": "2020-09-03T16:34:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "If express.json() is added between middleware which sets asyncLocalStorage and code which retrieves it, the storage goes missing on requests with a body, e.g. POST requests.\r\n\r\n## Works\r\n```\r\nimport {AsyncLocalStorage} from 'async_hooks';\r\nimport {json} from 'express';\r\n\r\nconst asyncLocalStorage = new AsyncLocalStorage();\r\nconst setContext = (req,res,next) => ayncLocalStorage.run('foo', next);\r\n\r\n// ...\r\napp.use(\r\n  json(),\r\n  setContext,\r\n  (req, res, next) => {\r\n    asyncLocalStorage.getStore(); // foo\r\n  });\r\n\r\n```\r\n\r\n## Fails\r\n```\r\n// ...\r\napp.use(\r\n  setContext,\r\n  json(),\r\n  (req, res, next) => {\r\n    asyncLocalStorage.getStore(); // undefined <<<===\r\n  });\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4396/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4396/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4395",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4395/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4395/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4395/events",
    "html_url": "https://github.com/expressjs/express/issues/4395",
    "id": 691913305,
    "node_id": "MDU6SXNzdWU2OTE5MTMzMDU=",
    "number": 4395,
    "title": "Audio Stream not being played on the Browser and my Mobile App",
    "user": {
      "login": "tavindev",
      "id": 42685889,
      "node_id": "MDQ6VXNlcjQyNjg1ODg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/42685889?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tavindev",
      "html_url": "https://github.com/tavindev",
      "followers_url": "https://api.github.com/users/tavindev/followers",
      "following_url": "https://api.github.com/users/tavindev/following{/other_user}",
      "gists_url": "https://api.github.com/users/tavindev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tavindev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tavindev/subscriptions",
      "organizations_url": "https://api.github.com/users/tavindev/orgs",
      "repos_url": "https://api.github.com/users/tavindev/repos",
      "events_url": "https://api.github.com/users/tavindev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tavindev/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-09-03T12:08:07Z",
    "updated_at": "2020-09-08T13:36:36Z",
    "closed_at": "2020-09-08T13:36:36Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm building a mobile music app, which consumes an Expressjs API, and I'm having trouble sending the song to the client via streaming. \r\n\r\nI have a `songs` route in my express app:\r\n\r\n```typescript\r\nimport express from 'express'\r\n\r\nimport fs from 'fs'\r\n\r\nconst router = express.Router()\r\nrouter.get(\r\n    '/:fileName',\r\n    async (req: express.Request, res: express.Response) => {\r\n        try {\r\n            const { fileName } = req.params\r\n            const filePath = `music/${fileName}`\r\n            const stream = fs.createReadStream(filePath)\r\n            const stat = fs.statSync(filePath)\r\n\r\n            res.set('Content-Disposition', `attachment; filename=\"${filePath}\"`)\r\n            res.set('Content-Range', `bytes ${0}-${stat.size - 1}/${stat.size}`)\r\n            res.set('Content-Length', `${stat.size}`)\r\n\r\n            res.set('Content-Type', 'audio/mpeg')\r\n            res.set('Accept-Ranges', 'bytes')\r\n\r\n            stream.pipe(res)\r\n        } catch (err) {\r\n            res.status(400).send(err)\r\n        }\r\n    }\r\n)\r\n\r\nmodule.exports = router\r\n```\r\n\r\nAnd my mobile app is built with React and uses `react-native-track-player`.\r\nFor some reason, the audio is not being played, not only in my mobile app but also in the browser or even PostMan\r\n\r\nIn the Browser:\r\n\r\n[![browser doesn't play audio aswell][1]][1]\r\n\r\n\r\nand in PostMan, it also asks me to download a `.mpga` file:\r\n\r\n[![enter image description here][2]][2]\r\n\r\n\r\nIf a get another link, from Google Drive, for instance, the audio is playable, and it works in my mobile app.\r\n\r\nGoogle Drive Link on PostMan:\r\n\r\n\r\n\r\n[![enter image description here][3]][3]\r\n\r\n\r\nI'm stuck on this for weeks. Any idea of how it could be solved? Thank you, in advance.\r\n\r\n  [1]: https://i.stack.imgur.com/SLGGL.png\r\n  [2]: https://i.stack.imgur.com/g5UW3.png\r\n  [3]: https://i.stack.imgur.com/CyTnV.png",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4395/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4395/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4394",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4394/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4394/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4394/events",
    "html_url": "https://github.com/expressjs/express/pull/4394",
    "id": 688786453,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDc1OTU5OTUw",
    "number": 4394,
    "title": "Eliminating dependency on merge-descriptors.",
    "user": {
      "login": "paulsmithkc",
      "id": 6501079,
      "node_id": "MDQ6VXNlcjY1MDEwNzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6501079?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulsmithkc",
      "html_url": "https://github.com/paulsmithkc",
      "followers_url": "https://api.github.com/users/paulsmithkc/followers",
      "following_url": "https://api.github.com/users/paulsmithkc/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulsmithkc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulsmithkc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulsmithkc/subscriptions",
      "organizations_url": "https://api.github.com/users/paulsmithkc/orgs",
      "repos_url": "https://api.github.com/users/paulsmithkc/repos",
      "events_url": "https://api.github.com/users/paulsmithkc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulsmithkc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-08-30T20:32:05Z",
    "updated_at": "2020-08-30T20:58:07Z",
    "closed_at": "2020-08-30T20:42:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4394",
      "html_url": "https://github.com/expressjs/express/pull/4394",
      "diff_url": "https://github.com/expressjs/express/pull/4394.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4394.patch",
      "merged_at": null
    },
    "body": "merge-descriptors only contains a single function and is only used once in the entire express project.\r\n\r\nThis PR removes the need for it as a separate dependency.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4394/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4394/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4390",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4390/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4390/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4390/events",
    "html_url": "https://github.com/expressjs/express/issues/4390",
    "id": 687283347,
    "node_id": "MDU6SXNzdWU2ODcyODMzNDc=",
    "number": 4390,
    "title": "app.use not working",
    "user": {
      "login": "kayatechindia",
      "id": 55549012,
      "node_id": "MDQ6VXNlcjU1NTQ5MDEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/55549012?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kayatechindia",
      "html_url": "https://github.com/kayatechindia",
      "followers_url": "https://api.github.com/users/kayatechindia/followers",
      "following_url": "https://api.github.com/users/kayatechindia/following{/other_user}",
      "gists_url": "https://api.github.com/users/kayatechindia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kayatechindia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kayatechindia/subscriptions",
      "organizations_url": "https://api.github.com/users/kayatechindia/orgs",
      "repos_url": "https://api.github.com/users/kayatechindia/repos",
      "events_url": "https://api.github.com/users/kayatechindia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kayatechindia/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2020-08-27T14:20:48Z",
    "updated_at": "2020-12-24T18:43:59Z",
    "closed_at": "2020-12-24T18:43:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**app.use  working only index file.**\r\n\r\n> app.use(\"/\",(req,res)=>\r\n> {\r\n>    res.json(\"Welcome My Project\");\r\n> });\r\n> \r\n\r\n**but the same time i call router**  \r\n\r\n> const infoRouter = require(\"./router\");\r\n> app.use(\"/info\",infoRouter);\r\n\r\nnot working, error **Cannot GET** \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4390/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4390/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4388",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4388/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4388/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4388/events",
    "html_url": "https://github.com/expressjs/express/issues/4388",
    "id": 687149826,
    "node_id": "MDU6SXNzdWU2ODcxNDk4MjY=",
    "number": 4388,
    "title": "SSL certificate issue with .ca-bundle file",
    "user": {
      "login": "shivam201312",
      "id": 52594239,
      "node_id": "MDQ6VXNlcjUyNTk0MjM5",
      "avatar_url": "https://avatars.githubusercontent.com/u/52594239?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shivam201312",
      "html_url": "https://github.com/shivam201312",
      "followers_url": "https://api.github.com/users/shivam201312/followers",
      "following_url": "https://api.github.com/users/shivam201312/following{/other_user}",
      "gists_url": "https://api.github.com/users/shivam201312/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shivam201312/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shivam201312/subscriptions",
      "organizations_url": "https://api.github.com/users/shivam201312/orgs",
      "repos_url": "https://api.github.com/users/shivam201312/repos",
      "events_url": "https://api.github.com/users/shivam201312/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shivam201312/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2020-08-27T11:01:32Z",
    "updated_at": "2020-09-04T06:24:45Z",
    "closed_at": "2020-09-04T06:24:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi team , I am trying to add ssl certificate to the express server. My express code is running on google vm instance.\r\n\r\nSample Code :\r\n\r\n```\r\nvar express = require('express');\r\nvar app = express();\r\nvar fs = require('fs');\r\nvar https = require('https');\r\nvar http = require('http');\r\n\r\nvar options = {\r\n  key: fs.readFileSync('./path-to-file.key').toString(),\r\n  cert: fs.readFileSync('./path-to-file.crt').toString(),\r\n  ca: fs.readFileSync('./path-to-file.ca-bundle').toString()\r\n};\r\n\r\napp.get('/', (req, res) => {\r\n\tconsole.log(\"Hello Dev\");\r\n  res.send('Hello dev.to!');\r\n});\r\n//\r\napp.post('/', (req, res) => {\r\n\tconsole.log(\"Post Hello Dev\");\r\n  res.send('Post Hello dev.to!');\r\n});\r\n//\r\napp.post('/login', (req, res) => {\r\n\tconsole.log(\"Post Hello Dev\");\r\n  res.send('Post Hello dev.to!');\r\n});\r\n//\r\napp.get('/login', (req, res) => {\r\n\tconsole.log(\"Login get\");\r\n  res.send('Login get');\r\n});\r\n\r\nhttps.createServer(options, app).listen(443);\r\nhttp.createServer(app).listen(80);\r\n```\r\nI was testing code locally .\r\nError I am getting  while using certificates contains .ca-bundle\r\n```\r\nopenssl s_client -connect 127.0.0.1:443\r\nCONNECTED(00000003)\r\n4510256748:error:14004410:SSL routines:CONNECT_CR_SRVR_HELLO:sslv3 alert handshake failure:/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/libressl/libressl-47.120.1/libressl-2.8/ssl/ssl_pkt.c:1200:SSL alert number 40\r\n4510256748:error:140040E5:SSL routines:CONNECT_CR_SRVR_HELLO:ssl handshake failure:/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/libressl/libressl-47.120.1/libressl-2.8/ssl/ssl_pkt.c:585:\r\n```\r\nFor testing purpose I have created own ssl certificate file .\r\nCertificate file format create by me locally :\r\n1) server.key\r\n2) server.crt\r\n3) server.csr\r\n\r\nCertificate format shared to me for adding to express server :\r\n1) server.key\r\n2) server.crt\r\n3) server.ca-bundle\r\n\r\nNote : there is no ca-bundle file in ssl certificates created by me locally.\r\n\r\nWhen i am using certificates created by me with code . Express server is working fine it is returning response from server and localhost but when I am trying to use ssl certificate shared to me then I am getting above error .\r\n\r\nQuestion :\r\nIs there any other way of using .ca-bundle file with express ?\r\nI am adding ssl certificate for first time so I am not sure whether issue is from express side or with certificate .\r\nIs there something to do before using ssl certificate with express  server?\r\n\r\nNode  : v12.16.0\r\nServer OS : Ubuntu\r\nLocal System OS : iOS",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4388/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4388/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4389",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4389/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4389/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4389/events",
    "html_url": "https://github.com/expressjs/express/issues/4389",
    "id": 687266969,
    "node_id": "MDU6SXNzdWU2ODcyNjY5Njk=",
    "number": 4389,
    "title": "Referer Value in Headers for Safari",
    "user": {
      "login": "arjunsingh1390",
      "id": 62337523,
      "node_id": "MDQ6VXNlcjYyMzM3NTIz",
      "avatar_url": "https://avatars.githubusercontent.com/u/62337523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arjunsingh1390",
      "html_url": "https://github.com/arjunsingh1390",
      "followers_url": "https://api.github.com/users/arjunsingh1390/followers",
      "following_url": "https://api.github.com/users/arjunsingh1390/following{/other_user}",
      "gists_url": "https://api.github.com/users/arjunsingh1390/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arjunsingh1390/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arjunsingh1390/subscriptions",
      "organizations_url": "https://api.github.com/users/arjunsingh1390/orgs",
      "repos_url": "https://api.github.com/users/arjunsingh1390/repos",
      "events_url": "https://api.github.com/users/arjunsingh1390/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arjunsingh1390/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-08-27T09:30:30Z",
    "updated_at": "2020-08-27T14:00:33Z",
    "closed_at": "2020-08-27T14:00:33Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Using req.headers.referer working on all browsers but suddenly stopped on Safari Catalina giving only domain name not whole Url.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4389/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4389/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4387",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4387/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4387/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4387/events",
    "html_url": "https://github.com/expressjs/express/pull/4387",
    "id": 686526007,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDc0MDc3NjYz",
    "number": 4387,
    "title": "Move handling of special-cased headers to improve speed",
    "user": {
      "login": "hamptonmoore",
      "id": 8162992,
      "node_id": "MDQ6VXNlcjgxNjI5OTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8162992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hamptonmoore",
      "html_url": "https://github.com/hamptonmoore",
      "followers_url": "https://api.github.com/users/hamptonmoore/followers",
      "following_url": "https://api.github.com/users/hamptonmoore/following{/other_user}",
      "gists_url": "https://api.github.com/users/hamptonmoore/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hamptonmoore/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hamptonmoore/subscriptions",
      "organizations_url": "https://api.github.com/users/hamptonmoore/orgs",
      "repos_url": "https://api.github.com/users/hamptonmoore/repos",
      "events_url": "https://api.github.com/users/hamptonmoore/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hamptonmoore/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-08-26T18:25:41Z",
    "updated_at": "2020-08-26T18:28:45Z",
    "closed_at": "2020-08-26T18:28:40Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4387",
      "html_url": "https://github.com/expressjs/express/pull/4387",
      "diff_url": "https://github.com/expressjs/express/pull/4387.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4387.patch",
      "merged_at": null
    },
    "body": "By doing this less cycles will be wasted when the method .get on the Request class is called. It follows the the same previous logic of \"referrer || referer\" and passes all tests.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4387/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4387/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4386",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4386/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4386/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4386/events",
    "html_url": "https://github.com/expressjs/express/issues/4386",
    "id": 686327893,
    "node_id": "MDU6SXNzdWU2ODYzMjc4OTM=",
    "number": 4386,
    "title": "App re-render 3 times when I added amp character to pug template",
    "user": {
      "login": "huyb1991",
      "id": 9345707,
      "node_id": "MDQ6VXNlcjkzNDU3MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9345707?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/huyb1991",
      "html_url": "https://github.com/huyb1991",
      "followers_url": "https://api.github.com/users/huyb1991/followers",
      "following_url": "https://api.github.com/users/huyb1991/following{/other_user}",
      "gists_url": "https://api.github.com/users/huyb1991/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/huyb1991/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/huyb1991/subscriptions",
      "organizations_url": "https://api.github.com/users/huyb1991/orgs",
      "repos_url": "https://api.github.com/users/huyb1991/repos",
      "events_url": "https://api.github.com/users/huyb1991/events{/privacy}",
      "received_events_url": "https://api.github.com/users/huyb1991/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-08-26T13:37:04Z",
    "updated_at": "2020-08-26T14:59:29Z",
    "closed_at": "2020-08-26T14:59:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "My Express app is like this:\r\n### app.ts\r\n```\r\nimport express from 'express';\r\n\r\nconst app = express();\r\napp.set('view engine', 'pug');\r\n\r\napp.get('/', function (req, res) {\r\n  console.log('Render index');\r\n\r\n  res.render('index', { title: 'Hey', message: 'Hello there!' })\r\n})\r\n```\r\n\r\n### index.pug\r\n\r\n```\r\nhtml(amp)\r\n  head\r\n    title= title\r\n  body\r\n    h1= message\r\n```\r\n\r\nThe funny thing is the `console.log` show 3 times with this template, but if I remove `amp` in `index.pug`, is only call 1.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4386/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4386/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4385",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4385/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4385/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4385/events",
    "html_url": "https://github.com/expressjs/express/issues/4385",
    "id": 685677161,
    "node_id": "MDU6SXNzdWU2ODU2NzcxNjE=",
    "number": 4385,
    "title": "Inconsistency between express and supertest when using escaped parenthesis and single quotes in routes",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-08-25T17:51:49Z",
    "updated_at": "2020-08-25T18:24:50Z",
    "closed_at": "2020-08-25T18:00:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "> express version: 4.17.1\r\n> supertest version: 4.0.2\r\n\r\nTLDR; There seems to be some sort of inconsistency between `express` and `supertest` when handling routes with single quotes. Or I'm missing something trivial.\r\n\r\nI have two `express` routes. I'm escaping parenthesis in the routes with `\\\\` as suggested in the docs.\r\n`app.get('/api/hello-one\\\\(:msg\\\\)', (req, res) => res.send({ num: 1, msg: req.params.msg }));`\r\n`app.get('/api/hello-two\\\\(\\':msg\\'\\\\)', (req, res) => res.send({ num: 2, msg: req.params.msg }));`\r\n\r\nI have two `supertest` tests (using `mocha` to run them):\r\n\r\n> it('should return correct response for hello-one', (done) => {\r\n>   const app = createExpressApp(null);\r\n>   console.log(app._router.stack);\r\n>   request(app).get(\\`/api/hello-one('foo')\\`).expect(200).expect({ num: 1, msg: \\`'foo'\\`}, done);\r\n> });\r\n>\r\n> it('should return correct response for hello-two', (done) => {\r\n>   const app = createExpressApp(null);\r\n>   console.log(app._router.stack);\r\n>   request(app).get(\\`/api/hello-two('foo')\\`).expect(200).expect({ num: 2, msg: \\`foo\\`}, done);\r\n> });\r\n\r\nThe first test passes as expected.\r\nThe second test fails unexpectedly, with an actual status of `404` instead of the expected `200`.\r\nBut in the *browser* (using Firefox),\r\n`GET http://localhost:<port>/api/hello-one(foo)` and\r\n`GET http://localhost:<port>/api/hello-two('foo')`\r\nboth return the correct objects as expected.\r\n\r\nWhat's going on here? Any help is appreciated!\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4385/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4385/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4384",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4384/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4384/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4384/events",
    "html_url": "https://github.com/expressjs/express/issues/4384",
    "id": 685425632,
    "node_id": "MDU6SXNzdWU2ODU0MjU2MzI=",
    "number": 4384,
    "title": "Router.use() does not parse request parameters correctly",
    "user": {
      "login": "FabianEbert",
      "id": 47210515,
      "node_id": "MDQ6VXNlcjQ3MjEwNTE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/47210515?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FabianEbert",
      "html_url": "https://github.com/FabianEbert",
      "followers_url": "https://api.github.com/users/FabianEbert/followers",
      "following_url": "https://api.github.com/users/FabianEbert/following{/other_user}",
      "gists_url": "https://api.github.com/users/FabianEbert/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FabianEbert/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FabianEbert/subscriptions",
      "organizations_url": "https://api.github.com/users/FabianEbert/orgs",
      "repos_url": "https://api.github.com/users/FabianEbert/repos",
      "events_url": "https://api.github.com/users/FabianEbert/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FabianEbert/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2020-08-25T11:57:47Z",
    "updated_at": "2020-08-25T15:26:50Z",
    "closed_at": "2020-08-25T14:00:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "### Dependencies\r\n```json\r\n{\r\n  \"dependencies\": {\r\n    \"express\": \"4.17.1\"\r\n  }\r\n}\r\n\r\n```\r\n\r\n### Issue\r\n[The express docs say](https://expressjs.com/en/4x/api.html#router.use), that the functionality of `router.use()` is \"similar\" to `app.use()` and do not give specific information about the `path` parameter.\r\n\r\nSo I assumed, that I would to be able to use an **array of paths** for the `path` parameter, which does not seem to be the case. In this case, the request parameter parsing does not work as expected.\r\n\r\n### Workaround\r\n\r\n#### Workaround 1\r\nParameter parsing for an array of `path`'s only seems to work, if I use `router.get()`, `router.post()` etc. This will lead to duplicate route definitions for different HTTP verbs.\r\n\r\n#### Workaround 2\r\nDo not use an array of `path`'s.\r\n\r\n### Minimal Example to Reproduce\r\n\r\n```javascript\r\n// Define a server\r\nconst express = require(\"express\");\r\nconst app = express();\r\n\r\n// Create two router objects with their own set of routes and middlewares\r\nconst brokenRouter = express.Router();\r\nconst workingRouter = express.Router();\r\n\r\n// router.use() will not parse the query parameters correctly\r\nbrokenRouter.use([\"/:name\", \"/@:scope/:name\"], (req, res) => {\r\n  res.send(req.params);\r\n});\r\n\r\n// router.get() will parse the query parameters correctly\r\nworkingRouter.get([\"/:name\", \"/@:scope/:name\"], (req, res) => {\r\n  res.send(req.params);\r\n});\r\n\r\napp.use(\"/broken\", brokenRouter);\r\napp.use(\"/working\", workingRouter);\r\n\r\napp.listen(3000, () => {\r\n  console.log(`Listening at http://localhost:3000`);\r\n});\r\n\r\n```\r\n\r\nOpen the following pages to see the difference:\r\n\r\n1. http://localhost:3000/broken/test\r\n2. http://localhost:3000/broken/@mic/test\r\n3. http://localhost:3000/working/test\r\n4. http://localhost:3000/working/@mic/test\r\n\r\nSee the difference between 2. and 4.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4384/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4384/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4383",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4383/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4383/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4383/events",
    "html_url": "https://github.com/expressjs/express/issues/4383",
    "id": 684364147,
    "node_id": "MDU6SXNzdWU2ODQzNjQxNDc=",
    "number": 4383,
    "title": "Stable version 5",
    "user": {
      "login": "Hesamp",
      "id": 1300289,
      "node_id": "MDQ6VXNlcjEzMDAyODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1300289?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Hesamp",
      "html_url": "https://github.com/Hesamp",
      "followers_url": "https://api.github.com/users/Hesamp/followers",
      "following_url": "https://api.github.com/users/Hesamp/following{/other_user}",
      "gists_url": "https://api.github.com/users/Hesamp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Hesamp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Hesamp/subscriptions",
      "organizations_url": "https://api.github.com/users/Hesamp/orgs",
      "repos_url": "https://api.github.com/users/Hesamp/repos",
      "events_url": "https://api.github.com/users/Hesamp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Hesamp/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2020-08-24T05:08:47Z",
    "updated_at": "2020-09-19T01:31:48Z",
    "closed_at": "2020-08-24T05:11:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi\r\nI had a question, why version 5 is not released faster. It's been three years now and there is still an alpha version and the development process is very slow\r\nIs there a specific reason?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4383/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4383/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4381",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4381/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4381/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4381/events",
    "html_url": "https://github.com/expressjs/express/issues/4381",
    "id": 684265663,
    "node_id": "MDU6SXNzdWU2ODQyNjU2NjM=",
    "number": 4381,
    "title": "node.js saying my package.json needs to be JSON and not just javascript",
    "user": {
      "login": "milocrafter",
      "id": 70115073,
      "node_id": "MDQ6VXNlcjcwMTE1MDcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/70115073?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/milocrafter",
      "html_url": "https://github.com/milocrafter",
      "followers_url": "https://api.github.com/users/milocrafter/followers",
      "following_url": "https://api.github.com/users/milocrafter/following{/other_user}",
      "gists_url": "https://api.github.com/users/milocrafter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/milocrafter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/milocrafter/subscriptions",
      "organizations_url": "https://api.github.com/users/milocrafter/orgs",
      "repos_url": "https://api.github.com/users/milocrafter/repos",
      "events_url": "https://api.github.com/users/milocrafter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/milocrafter/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-08-23T22:10:04Z",
    "updated_at": "2020-08-24T14:19:49Z",
    "closed_at": "2020-08-24T14:19:48Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "so i'm new to programming and i've been searching around on the internet for a while trying to fix my issue but what ever i try it doesn't work \r\n\r\nhere is my package.json file\r\n{\r\n“name”: “the gay”,\r\n“version”: “1.0.0”,\r\n“description”: “idk what im gonna do with this yet”,\r\n“main”: “bot.js”,\r\n“author”: “milocrafter”,\r\n“dependencies”: { }\r\n}\r\nalso here is the debug log \r\n0 info it worked if it ends with ok\r\n1 verbose cli [\r\n1 verbose cli   'C:\\\\Program Files\\\\nodejs\\\\node.exe',\r\n1 verbose cli   'C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js',\r\n1 verbose cli   'install',\r\n1 verbose cli   'discord.io',\r\n1 verbose cli   'winston',\r\n1 verbose cli   '-save.'\r\n1 verbose cli ]\r\n2 info using npm@6.14.6\r\n3 info using node@v12.18.3\r\n4 verbose npm-session 12aea78c903beef4\r\n5 silly install loadCurrentTree\r\n6 silly install readLocalPackageData\r\n7 timing stage:rollbackFailedOptional Completed in 5ms\r\n8 timing stage:runTopLevelLifecycles Completed in 34ms\r\n9 verbose stack Error: Failed to parse json\r\n9 verbose stack Unexpected token � in JSON at position 3 while parsing near '{\r\n9 verbose stack �name�: �the gay�,\r\n9 verbose stack ...'\r\n9 verbose stack     at parseError (C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\read-package-json\\read-json.js:470:11)\r\n9 verbose stack     at parseJson (C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\read-package-json\\read-json.js:105:26)\r\n9 verbose stack     at C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\read-package-json\\read-json.js:52:5\r\n9 verbose stack     at C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\graceful-fs\\graceful-fs.js:123:16\r\n9 verbose stack     at FSReqCallback.readFileAfterClose [as oncomplete] (internal/fs/read_file_context.js:63:3)\r\n10 verbose cwd C:\\Users\\Milo\\Desktop\\bot\r\n11 verbose Windows_NT 6.1.7601\r\n12 verbose argv \"C:\\\\Program Files\\\\nodejs\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"discord.io\" \"winston\" \"-save.\"\r\n13 verbose node v12.18.3\r\n14 verbose npm  v6.14.6\r\n15 error code EJSONPARSE\r\n16 error file C:\\Users\\Milo\\Desktop\\bot\\package.json\r\n17 error JSON.parse Failed to parse json\r\n17 error JSON.parse Unexpected token � in JSON at position 3 while parsing near '{\r\n17 error JSON.parse �name�: �the gay�,\r\n17 error JSON.parse ...'\r\n18 error JSON.parse Failed to parse package.json data.\r\n18 error JSON.parse package.json must be actual JSON, not just JavaScript.\r\n19 verbose exit [ 1, true ]",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4381/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4381/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4380",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4380/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4380/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4380/events",
    "html_url": "https://github.com/expressjs/express/issues/4380",
    "id": 684229398,
    "node_id": "MDU6SXNzdWU2ODQyMjkzOTg=",
    "number": 4380,
    "title": "Why response.download downloads file in default name even though I add the second parameter? ",
    "user": {
      "login": "PrithiviRathinam",
      "id": 11004972,
      "node_id": "MDQ6VXNlcjExMDA0OTcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/11004972?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PrithiviRathinam",
      "html_url": "https://github.com/PrithiviRathinam",
      "followers_url": "https://api.github.com/users/PrithiviRathinam/followers",
      "following_url": "https://api.github.com/users/PrithiviRathinam/following{/other_user}",
      "gists_url": "https://api.github.com/users/PrithiviRathinam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PrithiviRathinam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PrithiviRathinam/subscriptions",
      "organizations_url": "https://api.github.com/users/PrithiviRathinam/orgs",
      "repos_url": "https://api.github.com/users/PrithiviRathinam/repos",
      "events_url": "https://api.github.com/users/PrithiviRathinam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PrithiviRathinam/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-08-23T18:04:32Z",
    "updated_at": "2020-08-27T13:47:26Z",
    "closed_at": "2020-08-27T13:47:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I used repl.it in mobile forking a project that served an HTML file using sendFile. I modified the call to download using .download adding the second parameter for a custom file name. But client browser is downloading the file as 'download' without any extension which seems to be default behavior. ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4380/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4380/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4379",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4379/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4379/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4379/events",
    "html_url": "https://github.com/expressjs/express/issues/4379",
    "id": 682467761,
    "node_id": "MDU6SXNzdWU2ODI0Njc3NjE=",
    "number": 4379,
    "title": "View engine parameters?",
    "user": {
      "login": "xahon",
      "id": 18731681,
      "node_id": "MDQ6VXNlcjE4NzMxNjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/18731681?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xahon",
      "html_url": "https://github.com/xahon",
      "followers_url": "https://api.github.com/users/xahon/followers",
      "following_url": "https://api.github.com/users/xahon/following{/other_user}",
      "gists_url": "https://api.github.com/users/xahon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xahon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xahon/subscriptions",
      "organizations_url": "https://api.github.com/users/xahon/orgs",
      "repos_url": "https://api.github.com/users/xahon/repos",
      "events_url": "https://api.github.com/users/xahon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xahon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-08-20T06:49:07Z",
    "updated_at": "2020-08-20T06:57:32Z",
    "closed_at": "2020-08-20T06:57:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Is there a way to pass parameters to 'view engine'? I want to pass a function from node modules to pug. Earlier, when i used pug binary directly i had done it that way `pug -O functions.js -o public`. Now, i'm using express and `app.set('view engine', 'pug');`, don't know how to set up these two arguments",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4379/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4379/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4378",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4378/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4378/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4378/events",
    "html_url": "https://github.com/expressjs/express/issues/4378",
    "id": 681011923,
    "node_id": "MDU6SXNzdWU2ODEwMTE5MjM=",
    "number": 4378,
    "title": "Put request doesn't streams body.",
    "user": {
      "login": "mnini",
      "id": 60082372,
      "node_id": "MDQ6VXNlcjYwMDgyMzcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/60082372?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mnini",
      "html_url": "https://github.com/mnini",
      "followers_url": "https://api.github.com/users/mnini/followers",
      "following_url": "https://api.github.com/users/mnini/following{/other_user}",
      "gists_url": "https://api.github.com/users/mnini/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mnini/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mnini/subscriptions",
      "organizations_url": "https://api.github.com/users/mnini/orgs",
      "repos_url": "https://api.github.com/users/mnini/repos",
      "events_url": "https://api.github.com/users/mnini/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mnini/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-08-18T12:43:41Z",
    "updated_at": "2020-08-21T00:42:15Z",
    "closed_at": "2020-08-21T00:42:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In normal setting, serving app, that can connect on api, with put with verified body send from axios.js nothing arrives?\r\nHow the hell one does get data file from put request with express.js?\r\n```\r\napp.put(\"/upload/:name\", (req, res)=>{\r\n    console.log(req.body)\r\n})\r\n```\r\nResult:\r\n`{}`\r\n\r\nI've been trying some express.urlencoder, compression, nothing works. Whole request headers are displayed, but body is not there... Do I really have to put content in header for it to arrive?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4378/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4378/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4377",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4377/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4377/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4377/events",
    "html_url": "https://github.com/expressjs/express/issues/4377",
    "id": 680663628,
    "node_id": "MDU6SXNzdWU2ODA2NjM2Mjg=",
    "number": 4377,
    "title": "Express Router call another route when should return Not Found (404).",
    "user": {
      "login": "lucaslacerdacl",
      "id": 6237330,
      "node_id": "MDQ6VXNlcjYyMzczMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6237330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lucaslacerdacl",
      "html_url": "https://github.com/lucaslacerdacl",
      "followers_url": "https://api.github.com/users/lucaslacerdacl/followers",
      "following_url": "https://api.github.com/users/lucaslacerdacl/following{/other_user}",
      "gists_url": "https://api.github.com/users/lucaslacerdacl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lucaslacerdacl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lucaslacerdacl/subscriptions",
      "organizations_url": "https://api.github.com/users/lucaslacerdacl/orgs",
      "repos_url": "https://api.github.com/users/lucaslacerdacl/repos",
      "events_url": "https://api.github.com/users/lucaslacerdacl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lucaslacerdacl/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-08-18T03:38:53Z",
    "updated_at": "2020-08-18T16:28:25Z",
    "closed_at": "2020-08-18T12:34:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello Folks, how u doing?\r\n\r\nHere is my code:\r\n```\r\nconst router = Router();\r\n\r\nrouter.use(\r\n    `${routePrefix}/v1/associate-auth/`,\r\n    associateAuthRoutesV1(router)\r\n  );\r\n  router.use(\r\n    `${routePrefix}/v1/associate/`,\r\n    JWTVerify,\r\n    associateRoutesV1(router)\r\n  );\r\napp.use('/', router);\r\n```\r\n\r\nHere is an exemple of my routes content:\r\n\r\n```\r\n  router.post('/', async (_req, res) => {\r\n    res.send('OK');\r\n  });\r\n```\r\n\r\nThe problem is:\r\nWhen I don't set the root('/') in one of routes file, Express find the next file with the same method in root ('/').\r\n\r\nHow can I configure to return 404 when there is no route specify?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4377/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4377/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4376",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4376/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4376/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4376/events",
    "html_url": "https://github.com/expressjs/express/pull/4376",
    "id": 679402601,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDY4MTgzNzgy",
    "number": 4376,
    "title": "Updated Readme",
    "user": {
      "login": "H3RSKO",
      "id": 34112131,
      "node_id": "MDQ6VXNlcjM0MTEyMTMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/34112131?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/H3RSKO",
      "html_url": "https://github.com/H3RSKO",
      "followers_url": "https://api.github.com/users/H3RSKO/followers",
      "following_url": "https://api.github.com/users/H3RSKO/following{/other_user}",
      "gists_url": "https://api.github.com/users/H3RSKO/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/H3RSKO/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/H3RSKO/subscriptions",
      "organizations_url": "https://api.github.com/users/H3RSKO/orgs",
      "repos_url": "https://api.github.com/users/H3RSKO/repos",
      "events_url": "https://api.github.com/users/H3RSKO/events{/privacy}",
      "received_events_url": "https://api.github.com/users/H3RSKO/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-08-14T21:08:30Z",
    "updated_at": "2020-09-17T05:48:54Z",
    "closed_at": "2020-09-17T05:48:54Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4376",
      "html_url": "https://github.com/expressjs/express/pull/4376",
      "diff_url": "https://github.com/expressjs/express/pull/4376.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4376.patch",
      "merged_at": "2020-09-17T05:48:54Z"
    },
    "body": "Updated Readme:\r\n\r\nConcatenated \"web sites\" to \"websites\"",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4376/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4376/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4375",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4375/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4375/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4375/events",
    "html_url": "https://github.com/expressjs/express/issues/4375",
    "id": 679356750,
    "node_id": "MDU6SXNzdWU2NzkzNTY3NTA=",
    "number": 4375,
    "title": "Express not registering file changes",
    "user": {
      "login": "kaptcha0",
      "id": 50426223,
      "node_id": "MDQ6VXNlcjUwNDI2MjIz",
      "avatar_url": "https://avatars.githubusercontent.com/u/50426223?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kaptcha0",
      "html_url": "https://github.com/kaptcha0",
      "followers_url": "https://api.github.com/users/kaptcha0/followers",
      "following_url": "https://api.github.com/users/kaptcha0/following{/other_user}",
      "gists_url": "https://api.github.com/users/kaptcha0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kaptcha0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kaptcha0/subscriptions",
      "organizations_url": "https://api.github.com/users/kaptcha0/orgs",
      "repos_url": "https://api.github.com/users/kaptcha0/repos",
      "events_url": "https://api.github.com/users/kaptcha0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kaptcha0/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-08-14T19:21:50Z",
    "updated_at": "2020-08-15T22:18:16Z",
    "closed_at": "2020-08-15T22:18:16Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "- **Version**: v4.17.1\r\n\r\n- **Platform**: Windows x64\r\n\r\n### What steps will reproduce the bug?\r\nMake changes to file\r\nRun `node index.js`\r\n\r\n### The situation\r\nI am developing a server running NodeJS with Express (v4.17.12), and every time I make a file change to a route, it's as if nothing happened. I try to restart the server multiple times but with no avail, it still won't register the changes.\r\n\r\n### What do you see instead?\r\nFile changes have no effect on the server, even after a server restart.\r\n\r\n### Additional information\r\nThis has happened on several other occasions.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4375/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4375/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4374",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4374/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4374/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4374/events",
    "html_url": "https://github.com/expressjs/express/issues/4374",
    "id": 678802585,
    "node_id": "MDU6SXNzdWU2Nzg4MDI1ODU=",
    "number": 4374,
    "title": "Port issue when i tried to deploy app in heroku,",
    "user": {
      "login": "krishnaUIDev",
      "id": 24648588,
      "node_id": "MDQ6VXNlcjI0NjQ4NTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/24648588?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/krishnaUIDev",
      "html_url": "https://github.com/krishnaUIDev",
      "followers_url": "https://api.github.com/users/krishnaUIDev/followers",
      "following_url": "https://api.github.com/users/krishnaUIDev/following{/other_user}",
      "gists_url": "https://api.github.com/users/krishnaUIDev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/krishnaUIDev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/krishnaUIDev/subscriptions",
      "organizations_url": "https://api.github.com/users/krishnaUIDev/orgs",
      "repos_url": "https://api.github.com/users/krishnaUIDev/repos",
      "events_url": "https://api.github.com/users/krishnaUIDev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/krishnaUIDev/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2020-08-13T23:46:39Z",
    "updated_at": "2020-08-16T17:15:37Z",
    "closed_at": "2020-08-16T17:15:36Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello, \r\n\r\nCurrently my server file looks like this, \r\n\r\n`const port = process.env.PORT || 3001;\r\napp.listen(port, \"0.0.0.0\", function () {\r\n  winston.error(`Listing on port ${port}`);\r\n});`\r\n\r\nthis one is working fine in local env. But when I tried to deploy in Heroku I am facing issues regarding the port issue. I tried to set the port number manually in the Heroku config. Still facing the same.\r\n\r\n Error R10 (Boot timeout) -> Web process failed to bind to $PORT within 60 seconds of launch\r\n2020-08-13T23:36:21.384007+00:00 heroku[web.1]: Stopping process with SIGKILL\r\n2020-08-13T23:36:21.418695+00:00 app[web.1]: Error waiting for process to terminate: No child processes",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4374/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4374/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4372",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4372/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4372/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4372/events",
    "html_url": "https://github.com/expressjs/express/issues/4372",
    "id": 673021177,
    "node_id": "MDU6SXNzdWU2NzMwMjExNzc=",
    "number": 4372,
    "title": "Error page breaks css loading",
    "user": {
      "login": "Levminer",
      "id": 33373714,
      "node_id": "MDQ6VXNlcjMzMzczNzE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/33373714?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Levminer",
      "html_url": "https://github.com/Levminer",
      "followers_url": "https://api.github.com/users/Levminer/followers",
      "following_url": "https://api.github.com/users/Levminer/following{/other_user}",
      "gists_url": "https://api.github.com/users/Levminer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Levminer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Levminer/subscriptions",
      "organizations_url": "https://api.github.com/users/Levminer/orgs",
      "repos_url": "https://api.github.com/users/Levminer/repos",
      "events_url": "https://api.github.com/users/Levminer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Levminer/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-08-04T19:15:49Z",
    "updated_at": "2020-08-04T20:05:42Z",
    "closed_at": "2020-08-04T20:05:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "After adding an error page my frontend css dosen't work. Why? Before adding an error page the css loads.\r\n\r\nI tried multiple folder structures putting my assets in the main folder and in the views folder. Both don't work.\r\n\r\n# server.js\r\n```js\r\nconst express = require('express')\r\n\r\nconst app = express()\r\n\r\nconst port = 8080\r\n\r\napp.set('view engine', 'ejs');\r\n\r\napp.get('/', (req, res) => {\r\n\r\nres.render('index', {\r\n\r\n})\r\n\r\napp.use(express.static(__dirname + '/views'))\r\n\r\n})\r\n\r\napp.use(function (req, res, next) {\r\n\r\nres.status(404).send(\"Sorry can't find that!\")\r\n\r\n})\r\n\r\napp.listen(port)\r\n```\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4372/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4372/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4371",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4371/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4371/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4371/events",
    "html_url": "https://github.com/expressjs/express/issues/4371",
    "id": 672477127,
    "node_id": "MDU6SXNzdWU2NzI0NzcxMjc=",
    "number": 4371,
    "title": "Can I use \"new\" on express.Router?",
    "user": {
      "login": "chtseac",
      "id": 13946731,
      "node_id": "MDQ6VXNlcjEzOTQ2NzMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/13946731?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chtseac",
      "html_url": "https://github.com/chtseac",
      "followers_url": "https://api.github.com/users/chtseac/followers",
      "following_url": "https://api.github.com/users/chtseac/following{/other_user}",
      "gists_url": "https://api.github.com/users/chtseac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chtseac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chtseac/subscriptions",
      "organizations_url": "https://api.github.com/users/chtseac/orgs",
      "repos_url": "https://api.github.com/users/chtseac/repos",
      "events_url": "https://api.github.com/users/chtseac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chtseac/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-08-04T03:27:58Z",
    "updated_at": "2020-08-04T03:31:39Z",
    "closed_at": "2020-08-04T03:31:35Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "eslint is complaining with the initialization of a router as per documentation.\r\n\r\n```\r\nconst routes = require('express').Router();\r\n// 1:35  error  A function with a name starting with an uppercase letter should only be used as a constructor  new-cap\r\n```\r\n\r\nAnd as I searched for whether it is possible to call `express.Router` with `new`, I come across a few instances of this usage:\r\n\r\n* http://curric.rithmschool.com/r13/lectures/express-router-middleware/\r\n* https://github.com/expressjs/express/issues/3768\r\n* http://enescinar.net/node-js-vs-code-crud-snippet/\r\n* https://probot.github.io/api/5.0.0/robot.js.html\r\n\r\nSo, is it recommended to use/not use `new` when creating a Router? I know that it doesn't make any difference for any function that returns any object, but I don't know enough to make the call whether there is any potential drawback. As far as I can tell, this behavior is undocumented, except by inference from knowledge on the `new` operator.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4371/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4371/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4370",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4370/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4370/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4370/events",
    "html_url": "https://github.com/expressjs/express/pull/4370",
    "id": 669540617,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDU5ODk2OTQx",
    "number": 4370,
    "title": "Fix examples README",
    "user": {
      "login": "rodion-arr",
      "id": 5843270,
      "node_id": "MDQ6VXNlcjU4NDMyNzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5843270?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rodion-arr",
      "html_url": "https://github.com/rodion-arr",
      "followers_url": "https://api.github.com/users/rodion-arr/followers",
      "following_url": "https://api.github.com/users/rodion-arr/following{/other_user}",
      "gists_url": "https://api.github.com/users/rodion-arr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rodion-arr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rodion-arr/subscriptions",
      "organizations_url": "https://api.github.com/users/rodion-arr/orgs",
      "repos_url": "https://api.github.com/users/rodion-arr/repos",
      "events_url": "https://api.github.com/users/rodion-arr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rodion-arr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-07-31T08:05:55Z",
    "updated_at": "2020-08-04T15:20:46Z",
    "closed_at": "2020-08-04T15:09:45Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4370",
      "html_url": "https://github.com/expressjs/express/pull/4370",
      "diff_url": "https://github.com/expressjs/express/pull/4370.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4370.patch",
      "merged_at": "2020-08-04T15:09:45Z"
    },
    "body": "This PR implements suggestions from @crandmck (https://github.com/expressjs/expressjs.com/pull/1178#pullrequestreview-458950394)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4370/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4370/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4369",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4369/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4369/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4369/events",
    "html_url": "https://github.com/expressjs/express/issues/4369",
    "id": 669382216,
    "node_id": "MDU6SXNzdWU2NjkzODIyMTY=",
    "number": 4369,
    "title": "Transfer-encoding: \"chunked\" essentially is a blocking call in express? Breaking production.",
    "user": {
      "login": "ShanonJackson",
      "id": 13631026,
      "node_id": "MDQ6VXNlcjEzNjMxMDI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/13631026?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ShanonJackson",
      "html_url": "https://github.com/ShanonJackson",
      "followers_url": "https://api.github.com/users/ShanonJackson/followers",
      "following_url": "https://api.github.com/users/ShanonJackson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ShanonJackson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ShanonJackson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ShanonJackson/subscriptions",
      "organizations_url": "https://api.github.com/users/ShanonJackson/orgs",
      "repos_url": "https://api.github.com/users/ShanonJackson/repos",
      "events_url": "https://api.github.com/users/ShanonJackson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ShanonJackson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-07-31T03:49:29Z",
    "updated_at": "2020-07-31T04:29:19Z",
    "closed_at": "2020-07-31T03:51:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "```\r\nconst express = require('express')\r\nconst app = express()\r\nconst port = 3000\r\n\r\napp.get('/', (req, res) => res.send('Hello World!'));\r\napp.get(\"/stream\", (req,res) => {\r\n\tres.write(\"HELLO WORLD\\n\"); // real world use case actually streams data through many .write calls.\r\n\treq.on(\"close\", () => {\r\n\t\tres.end();\r\n\t})\r\n});\r\n\r\napp.listen(port, () => console.log(`Example app listening at http://localhost:${port}`))\r\n```\r\nRun this, open 6 browser tabs on `/stream` and a 7th to homepage, the homepage will never ever load because the 6 `/stream` calls are blocking the main thread somehow from processing anymore requests.\r\nClose some of the `/stream` tabs and watch homepage load again.\r\n\r\nWhat this means from what we can tell is if we're streaming concurrent to 6 people our application literally stops responding; Our first thought is this some kind of security feature to prevent slow loris or something?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4369/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4369/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4368",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4368/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4368/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4368/events",
    "html_url": "https://github.com/expressjs/express/issues/4368",
    "id": 667907877,
    "node_id": "MDU6SXNzdWU2Njc5MDc4Nzc=",
    "number": 4368,
    "title": "Any reason why Express uses setPrototypeOf?",
    "user": {
      "login": "schamberg97",
      "id": 50446906,
      "node_id": "MDQ6VXNlcjUwNDQ2OTA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/50446906?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/schamberg97",
      "html_url": "https://github.com/schamberg97",
      "followers_url": "https://api.github.com/users/schamberg97/followers",
      "following_url": "https://api.github.com/users/schamberg97/following{/other_user}",
      "gists_url": "https://api.github.com/users/schamberg97/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/schamberg97/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/schamberg97/subscriptions",
      "organizations_url": "https://api.github.com/users/schamberg97/orgs",
      "repos_url": "https://api.github.com/users/schamberg97/repos",
      "events_url": "https://api.github.com/users/schamberg97/events{/privacy}",
      "received_events_url": "https://api.github.com/users/schamberg97/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-07-29T14:52:12Z",
    "updated_at": "2020-08-22T03:12:18Z",
    "closed_at": "2020-08-22T03:11:52Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hey there! I was researching Express.JS source code and found that the init middleware (/lib/middleware/init.js) uses setPrototypeOf. However, changing object prototype is inherently slow, as stated on [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf). My question is thus the following, could Object.assign be used instead, as it is supposed to be much faster (40-50%)?\r\n\r\nSorry if it is a stupid question, I might not know a lot of things.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4368/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4368/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4367",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4367/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4367/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4367/events",
    "html_url": "https://github.com/expressjs/express/issues/4367",
    "id": 667665724,
    "node_id": "MDU6SXNzdWU2Njc2NjU3MjQ=",
    "number": 4367,
    "title": "Response does not get sent until stream is consumed ",
    "user": {
      "login": "ddor254",
      "id": 33092692,
      "node_id": "MDQ6VXNlcjMzMDkyNjky",
      "avatar_url": "https://avatars.githubusercontent.com/u/33092692?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ddor254",
      "html_url": "https://github.com/ddor254",
      "followers_url": "https://api.github.com/users/ddor254/followers",
      "following_url": "https://api.github.com/users/ddor254/following{/other_user}",
      "gists_url": "https://api.github.com/users/ddor254/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ddor254/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ddor254/subscriptions",
      "organizations_url": "https://api.github.com/users/ddor254/orgs",
      "repos_url": "https://api.github.com/users/ddor254/repos",
      "events_url": "https://api.github.com/users/ddor254/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ddor254/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2020-07-29T08:47:07Z",
    "updated_at": "2022-02-22T04:39:17Z",
    "closed_at": "2022-02-22T04:39:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello all, i have the following problem in my express server:\r\n\r\nI have an API that is getting items from `elasticsearch` and and writing them as vinyl files, then bundle them together with `gzip`, and stream them to the `response` (code is below). \r\nit seems like the download not getting started in the browser, since no data start transferring until the stream is consumed, meaning that after the file (gzipped file) is constructed -> the headers are sent to the browser and the download itself start.\r\n\r\n\r\nadding my code : \r\n\r\n\r\n\r\n```\r\n    var zlib = require('zlib');\r\n    var gz = zlib.createGzip();\r\n    var miss = require('mississippi');\r\n    var vinyl_buffer = require('vinyl-buffer');\r\n\r\n\r\n\r\n    app.get('/', async (req, res) => {\r\n\r\n     res.attachment('test.gz');\r\n     res.writeHead(200, { 'Content-Type': 'application/gzip'});\r\n\r\n     miss.pipe(\r\n      <function that get elastic items to the next>\r\n     miss.pipeline.ctor({\r\n      writableObjectMode: true,\r\n      readableObjectMode: false\r\n     })(\r\n      new ItemsToMediaFiles(),\r\n      new vinyl_buffer(),\r\n      gz  ),\r\n      res,\r\n      err => {\r\n        if (err) {\r\n          req.logger.warn('Error:\\n%s', err.stack);\r\n        }\r\n      }\r\n    );\r\n\r\n    class ItemsToMediaFiles extends stream.Transform {\r\n     constructor() {\r\n       super({objectMode: true});\r\n     }\r\n\r\n     async _transform(item, _, callback) {\r\n       try {\r\n         const vinylFile = new Vinyl({\r\n           path: <name>,\r\n           contents: fse.createReadStream(<file>)\r\n         });\r\n\r\n         vinylFile.contents.once('error',\r\n         err => {\r\n           winston.warn('Error while reading media file: %s', err.stack);\r\n           vinylFile.contents.push(null);\r\n          });\r\n\r\n         this.push(vinylFile);\r\n       }\r\n\r\n       } catch (err) {\r\n         winston.warn('Error while transforming message to array: %s', err.stack);\r\n       }\r\n       callback();\r\n     }\r\n   }\r\n```\r\n\r\n\r\n\r\nThis behavior happens when changing gzip to zip format with `const {zip} = require('gulp-vinyl-zip');` and using `zip` instead of `gz` in the flow, and also to `tar`.\r\n\r\nI have opened the \"developer tools\" in my Chrome browser and saw that i don't get any response, even headers, until the stream is consumed/finished in the server side.\r\n\r\ni have also ran the command with cURL verbose and i see that any part of the response is not received until the stream is consumed/finished in the server side.\r\n\r\nIf needed i will upload a video of the behavior.\r\n\r\nexpress@4.17.1\r\nmississippi@3.0.0\r\nnode v10.13.0\r\nvinyl-buffer@1.0.1\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4367/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4367/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4366",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4366/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4366/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4366/events",
    "html_url": "https://github.com/expressjs/express/issues/4366",
    "id": 667650214,
    "node_id": "MDU6SXNzdWU2Njc2NTAyMTQ=",
    "number": 4366,
    "title": "Using spread with req.acceptsLanguages(…Array); always returns false",
    "user": {
      "login": "jiriToman",
      "id": 30087815,
      "node_id": "MDQ6VXNlcjMwMDg3ODE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/30087815?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jiriToman",
      "html_url": "https://github.com/jiriToman",
      "followers_url": "https://api.github.com/users/jiriToman/followers",
      "following_url": "https://api.github.com/users/jiriToman/following{/other_user}",
      "gists_url": "https://api.github.com/users/jiriToman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jiriToman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jiriToman/subscriptions",
      "organizations_url": "https://api.github.com/users/jiriToman/orgs",
      "repos_url": "https://api.github.com/users/jiriToman/repos",
      "events_url": "https://api.github.com/users/jiriToman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jiriToman/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-07-29T08:23:46Z",
    "updated_at": "2020-07-29T13:55:29Z",
    "closed_at": "2020-07-29T08:50:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am running Express 4.x and doing some light redirecting and language specific things by using\r\n\r\n`var slang = req.acceptsLanguages(\"en\", \"de\", \"cs\",\"nl\");`\r\n\r\nIf I use it like this all is well. However if I wish to spread an array to list of the arguments like this.\r\n\r\n```\r\nvar langAll = ['en', 'de', 'nl', 'cs' ];   \r\nvar slang = req.acceptsLanguages(...langAll);\r\n```\r\nIt always returns false.\r\n\r\nWhat am I missing here? Thank you for any input.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4366/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4366/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4365",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4365/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4365/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4365/events",
    "html_url": "https://github.com/expressjs/express/issues/4365",
    "id": 666666155,
    "node_id": "MDU6SXNzdWU2NjY2NjYxNTU=",
    "number": 4365,
    "title": "al querer hacer ( npm install grunt --save-dev) me sale error",
    "user": {
      "login": "ronaldo116",
      "id": 68880592,
      "node_id": "MDQ6VXNlcjY4ODgwNTky",
      "avatar_url": "https://avatars.githubusercontent.com/u/68880592?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ronaldo116",
      "html_url": "https://github.com/ronaldo116",
      "followers_url": "https://api.github.com/users/ronaldo116/followers",
      "following_url": "https://api.github.com/users/ronaldo116/following{/other_user}",
      "gists_url": "https://api.github.com/users/ronaldo116/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ronaldo116/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ronaldo116/subscriptions",
      "organizations_url": "https://api.github.com/users/ronaldo116/orgs",
      "repos_url": "https://api.github.com/users/ronaldo116/repos",
      "events_url": "https://api.github.com/users/ronaldo116/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ronaldo116/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-07-28T00:27:02Z",
    "updated_at": "2020-07-28T01:18:42Z",
    "closed_at": "2020-07-28T01:18:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**npm ERR! code EJSONPARSE\r\nnpm ERR! file C:\\Users\\Joseph_ViL\\documents\\guia-curso1\\package.json\r\nnpm ERR! JSON.parse Failed to parse json\r\nnpm ERR! JSON.parse Unexpected token } in JSON at position 778 while parsing near '...npm run usemin\",\r\nnpm ERR! JSON.parse   },\r\nnpm ERR! JSON.parse   \"repository\": ...'\r\nnpm ERR! JSON.parse Failed to parse package.json data.\r\nnpm ERR! JSON.parse package.json must be actual JSON, not just JavaScript.\r\n\r\nnpm ERR! A complete log of this run can be found in:\r\nnpm ERR!     C:\\Users\\Joseph_ViL\\AppData\\Roaming\\npm-cache\\_logs\\2020-07-28T00_17_58_459Z-debug.log\r\n**",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4365/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4365/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4364",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4364/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4364/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4364/events",
    "html_url": "https://github.com/expressjs/express/pull/4364",
    "id": 666632567,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDU3NDQyMjY0",
    "number": 4364,
    "title": "docs: Add Submitting a Pull Request (PR) section",
    "user": {
      "login": "getspooky",
      "id": 37160072,
      "node_id": "MDQ6VXNlcjM3MTYwMDcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/37160072?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/getspooky",
      "html_url": "https://github.com/getspooky",
      "followers_url": "https://api.github.com/users/getspooky/followers",
      "following_url": "https://api.github.com/users/getspooky/following{/other_user}",
      "gists_url": "https://api.github.com/users/getspooky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/getspooky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/getspooky/subscriptions",
      "organizations_url": "https://api.github.com/users/getspooky/orgs",
      "repos_url": "https://api.github.com/users/getspooky/repos",
      "events_url": "https://api.github.com/users/getspooky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/getspooky/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-07-27T22:51:06Z",
    "updated_at": "2020-09-17T01:30:10Z",
    "closed_at": "2020-09-17T01:30:10Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4364",
      "html_url": "https://github.com/expressjs/express/pull/4364",
      "diff_url": "https://github.com/expressjs/express/pull/4364.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4364.patch",
      "merged_at": null
    },
    "body": "Hello,\r\nI think , it's good idea to provide short guideline on how to submit a pull request on `expressjs` repo. \r\nThis section could useful for new contributors .",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4364/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4364/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4363",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4363/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4363/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4363/events",
    "html_url": "https://github.com/expressjs/express/issues/4363",
    "id": 666018225,
    "node_id": "MDU6SXNzdWU2NjYwMTgyMjU=",
    "number": 4363,
    "title": "my git bash crash",
    "user": {
      "login": "Abdurahmanm2020",
      "id": 60320088,
      "node_id": "MDQ6VXNlcjYwMzIwMDg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/60320088?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Abdurahmanm2020",
      "html_url": "https://github.com/Abdurahmanm2020",
      "followers_url": "https://api.github.com/users/Abdurahmanm2020/followers",
      "following_url": "https://api.github.com/users/Abdurahmanm2020/following{/other_user}",
      "gists_url": "https://api.github.com/users/Abdurahmanm2020/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Abdurahmanm2020/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Abdurahmanm2020/subscriptions",
      "organizations_url": "https://api.github.com/users/Abdurahmanm2020/orgs",
      "repos_url": "https://api.github.com/users/Abdurahmanm2020/repos",
      "events_url": "https://api.github.com/users/Abdurahmanm2020/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Abdurahmanm2020/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-07-27T06:37:26Z",
    "updated_at": "2020-07-27T18:15:43Z",
    "closed_at": "2020-07-27T18:15:43Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am having a big problem with my git bash \r\n\r\nit is coming up with problem and when i fix them another one comes \r\n\r\n![image](https://user-images.githubusercontent.com/60320088/88510543-13a85900-cf98-11ea-97dd-27a56ab6ecf7.png)\r\n\r\n\r\nthen when I install it \r\n\r\n![image](https://user-images.githubusercontent.com/60320088/88510627-481c1500-cf98-11ea-91e3-b8ccb4e164b3.png)\r\n\r\nand is just go's on and on and  i do not know how to fix it \r\n\r\n![image](https://user-images.githubusercontent.com/60320088/88510816-a5b06180-cf98-11ea-8564-30ecc322ad64.png)\r\n\r\n\r\nplease help\r\n\r\n@dougwilson\r\n@alepinio\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4363/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4363/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4362",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4362/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4362/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4362/events",
    "html_url": "https://github.com/expressjs/express/issues/4362",
    "id": 665940959,
    "node_id": "MDU6SXNzdWU2NjU5NDA5NTk=",
    "number": 4362,
    "title": "Express.js with RxJS in Reactive Stack",
    "user": {
      "login": "bitsnaps",
      "id": 1217741,
      "node_id": "MDQ6VXNlcjEyMTc3NDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1217741?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bitsnaps",
      "html_url": "https://github.com/bitsnaps",
      "followers_url": "https://api.github.com/users/bitsnaps/followers",
      "following_url": "https://api.github.com/users/bitsnaps/following{/other_user}",
      "gists_url": "https://api.github.com/users/bitsnaps/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bitsnaps/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bitsnaps/subscriptions",
      "organizations_url": "https://api.github.com/users/bitsnaps/orgs",
      "repos_url": "https://api.github.com/users/bitsnaps/repos",
      "events_url": "https://api.github.com/users/bitsnaps/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bitsnaps/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-07-26T14:53:11Z",
    "updated_at": "2020-07-28T12:02:53Z",
    "closed_at": "2020-07-28T12:02:52Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi everyone,\r\n\r\nCan Express.js be reactive with RxJS? because I thought yes I've created this projet... but wait a sec, it plays only on the backend! how about the full stack ?\r\n\r\nThis is what I was trying to do, a fully Reactive Stack & Non-Blocking responsive web app in a form of an eShop example, using the following solution for each layer:\r\nDatabase: Rethinkdb for better storage reactivity \r\nBackend: Express.js & Rxjs for reactivity\r\nFrontend: Vue & RxJs for reactivity & Reveal.js for a seamless UX.\r\n\r\nThis may sounds strange a bit and I know there are a lot of things to improve in this demo, especially in the Vue part (VueX, Vuetify, split into components, maybe vue router...), also on the back side (for better readability), I'm not using RxJS in every possible place, but this is just a quick demo to see how these layers fit all together...\r\n\r\nI wanted see how reactive can a web app be with too many user interactions (back and forth... from/to the DB) in low performance network in fully reactive non-blocking environment, the idea is to don't let the user waiting for any action (maybe I had to add some loading GIFs to see that in action...), you may say this is what PWA is all about, right? well, I believe this is different from PWA which is more native-like approach.\r\n\r\nI don't want to include Socket.IO for such purposes, I think that's too much bandwidth for such kind of app, maybe this plays better for realtime-chat or streaming scenarios...\r\n\r\nDo you think this is something new/different by any kind? can this improve UX somehow?\r\n\r\nI code is a little bit messy I know, however it's still concise and easy to modify, basically you've 2 files to play with, `routes/index.js` at the back side the other `App.vue`.\r\n\r\nDo you think Express.js is good fit for that kind of project or shall I use Marble.js ?\r\n\r\nWaiting for further improvements & suggestions.\r\n\r\nhttps://github.com/bitsnaps/reactive-stack\r\n\r\nBest Regards\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4362/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4362/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4360",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4360/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4360/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4360/events",
    "html_url": "https://github.com/expressjs/express/issues/4360",
    "id": 665042245,
    "node_id": "MDU6SXNzdWU2NjUwNDIyNDU=",
    "number": 4360,
    "title": "Handle UnhandledPromiseRejectionWarning in routes",
    "user": {
      "login": "kevinsimper",
      "id": 1126497,
      "node_id": "MDQ6VXNlcjExMjY0OTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1126497?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsimper",
      "html_url": "https://github.com/kevinsimper",
      "followers_url": "https://api.github.com/users/kevinsimper/followers",
      "following_url": "https://api.github.com/users/kevinsimper/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsimper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsimper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsimper/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsimper/orgs",
      "repos_url": "https://api.github.com/users/kevinsimper/repos",
      "events_url": "https://api.github.com/users/kevinsimper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsimper/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-07-24T09:25:10Z",
    "updated_at": "2020-07-24T12:28:17Z",
    "closed_at": "2020-07-24T12:28:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Right now errors are handled in express if they are thrown sync:\r\n```\r\napp.get(\"/health\", (req, res) => {\r\n  throw new Error(\"fake error\");\r\n});\r\n```\r\n\r\nbut not if they are inside an async function\r\n```\r\napp.get(\"/health\", async (req, res) => {\r\n  throw new Error(\"fake error\");\r\n});\r\n```\r\n\r\nOthers have made small wrappers that catches those errors like this:\r\nhttps://github.com/Abazhenov/express-async-handler\r\n\r\nI am making this issue because I searched and could not find that it has been discussed ([other than 4 question issues](https://github.com/expressjs/express/issues?q=UnhandledPromiseRejectionWarning))\r\n\r\nWould it be an idea to add this code to express to help? Or add something about async/await here: https://expressjs.com/en/guide/error-handling.html",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4360/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4360/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4357",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4357/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4357/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4357/events",
    "html_url": "https://github.com/expressjs/express/issues/4357",
    "id": 664278380,
    "node_id": "MDU6SXNzdWU2NjQyNzgzODA=",
    "number": 4357,
    "title": "localhost cannot read property 'name' of undefined nodejs",
    "user": {
      "login": "aishwarya07g",
      "id": 42799570,
      "node_id": "MDQ6VXNlcjQyNzk5NTcw",
      "avatar_url": "https://avatars.githubusercontent.com/u/42799570?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aishwarya07g",
      "html_url": "https://github.com/aishwarya07g",
      "followers_url": "https://api.github.com/users/aishwarya07g/followers",
      "following_url": "https://api.github.com/users/aishwarya07g/following{/other_user}",
      "gists_url": "https://api.github.com/users/aishwarya07g/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aishwarya07g/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aishwarya07g/subscriptions",
      "organizations_url": "https://api.github.com/users/aishwarya07g/orgs",
      "repos_url": "https://api.github.com/users/aishwarya07g/repos",
      "events_url": "https://api.github.com/users/aishwarya07g/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aishwarya07g/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-07-23T08:04:09Z",
    "updated_at": "2020-07-23T12:34:58Z",
    "closed_at": "2020-07-23T10:16:16Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "`TypeError: Cannot read property 'fName' of undefined\r\n    at C:\\Users\\Aishwarya Gupta\\Desktop\\WebDevProject\\Newsletter-Signup\\app.js:20:28\r\n    at Layer.handle [as handle_request] (C:\\Users\\Aishwarya Gupta\\Desktop\\WebDevProject\\node_modules\\express\\lib\\router\\layer.js:95:5)\r\n    at next (C:\\Users\\Aishwarya Gupta\\Desktop\\WebDevProject\\node_modules\\express\\lib\\router\\route.js:137:13)\r\n    at Route.dispatch (C:\\Users\\Aishwarya Gupta\\Desktop\\WebDevProject\\node_modules\\express\\lib\\router\\route.js:112:3)\r\n    at Layer.handle [as handle_request] (C:\\Users\\Aishwarya Gupta\\Desktop\\WebDevProject\\node_modules\\express\\lib\\router\\layer.js:95:5)\r\n    at C:\\Users\\Aishwarya Gupta\\Desktop\\WebDevProject\\node_modules\\express\\lib\\router\\index.js:281:22\r\n    at Function.process_params (C:\\Users\\Aishwarya Gupta\\Desktop\\WebDevProject\\node_modules\\express\\lib\\router\\index.js:335:12)\r\n    at next (C:\\Users\\Aishwarya Gupta\\Desktop\\WebDevProject\\node_modules\\express\\lib\\router\\index.js:275:10)\r\n    at C:\\Users\\Aishwarya Gupta\\Desktop\\WebDevProject\\node_modules\\body-parser\\lib\\read.js:130:5\r\n    at invokeCallback (C:\\Users\\Aishwarya Gupta\\Desktop\\WebDevProject\\node_modules\\raw-body\\index.js:224:16)`\r\n\r\nHere's my code in app.js\r\n`const express = require('express');\r\nconst bodyParser = require('body-parser');\r\nconst request = require('request');\r\nconst app = express();\r\napp.use(express.static('public'));\r\napp.use(bodyParser.urlencoded({ extended: true }));`\r\n\r\nPost request code:\r\n`app.post('/', function (req, res) {\r\n  var firstName = res.body.fName;\r\n  var lastName = res.body.lName;\r\n  var emailID = res.body.fEmail;\r\n  console.log(firstName, lastName, emailID);\r\n});`",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4357/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4357/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4356",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4356/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4356/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4356/events",
    "html_url": "https://github.com/expressjs/express/issues/4356",
    "id": 662036846,
    "node_id": "MDU6SXNzdWU2NjIwMzY4NDY=",
    "number": 4356,
    "title": "Clarity on if it's safe to call next() after send()",
    "user": {
      "login": "kwasimensah",
      "id": 2121800,
      "node_id": "MDQ6VXNlcjIxMjE4MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2121800?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kwasimensah",
      "html_url": "https://github.com/kwasimensah",
      "followers_url": "https://api.github.com/users/kwasimensah/followers",
      "following_url": "https://api.github.com/users/kwasimensah/following{/other_user}",
      "gists_url": "https://api.github.com/users/kwasimensah/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kwasimensah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kwasimensah/subscriptions",
      "organizations_url": "https://api.github.com/users/kwasimensah/orgs",
      "repos_url": "https://api.github.com/users/kwasimensah/repos",
      "events_url": "https://api.github.com/users/kwasimensah/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kwasimensah/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-07-20T16:51:54Z",
    "updated_at": "2020-07-21T12:47:21Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Branching https://github.com/expressjs/serve-static/issues/136#issuecomment-661169863 since it's more general than express-static\r\n\r\nThe use case I'm trying to catch is when the client aborts. I found in my unit testing it's actually hard to get express/https.server to shutdown cleanly i.e. if the client aborts while the request is asynchronously talking to the database, https.server.close won't wait for that to finish/won't wait for any in progress async middleware to finished before the \"close\" callback is called.\r\n\r\nI'm trying to add middleware at the beginning and end of each request to track what's still in progress independent of the connection being severed so I can delay fully closing if there's any middleware that might still use external resources. [on-finished](https://www.npmjs.com/package/on-finished) isn't what I'm looking for because if the client closes the connection in the middle of a request using async middleware \"close\" will be fired *before* all the middleware has finished.\r\n\r\nI'm trying to find official expressjs documentation saying it's unsafe to process middleware after sending the response (as long as you don't try to edit anything about the request object). I just realized I got the idea from this [non-official article](https://www.bennadel.com/blog/3275-you-can-continue-to-process-an-express-js-request-after-the-client-response-has-been-sent.htm#main-content) I know saying \"it works for me\" is not a sign that it's a supported use case but it is working so far. \r\n\r\nShould this be resolved by:\r\n 1) adding explicit wording in the documentation saying calling next() after end() is wrong and it should throw an error. I know I'm being pedantic but the docs currently say\r\n```\r\nIf the current middleware function does not end the request-response cycle, it must call next() to pass control to the next middleware function.\r\n```\r\nwithout being specific about about what's considered the full request-response cycle.\r\n\r\n2) making this a supported use case for people who don't want to block sending a response for server specific work tied to the middleware chain (and not specifically the connection) and adding tests to spot regressions.\r\n\r\n3) adding a dummy middleware that just calls res.end() and acts like 2) but with a delay and using https://github.com/expressjs/serve-static/issues/136#issuecomment-661125380 for serve-static.\r\n\r\nI'm a fan of 2. The only other option I see is adding checks after every promise in middleware to see if the request is active but that doesn't catch issues if the request is closed mid-await.\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4356/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4356/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4355",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4355/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4355/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4355/events",
    "html_url": "https://github.com/expressjs/express/issues/4355",
    "id": 661312380,
    "node_id": "MDU6SXNzdWU2NjEzMTIzODA=",
    "number": 4355,
    "title": "Installation error: ENOENT: no such file or directory /node_modules/send/node_modules/ms/package.json.xxxx",
    "user": {
      "login": "kelvin84hk",
      "id": 21017167,
      "node_id": "MDQ6VXNlcjIxMDE3MTY3",
      "avatar_url": "https://avatars.githubusercontent.com/u/21017167?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kelvin84hk",
      "html_url": "https://github.com/kelvin84hk",
      "followers_url": "https://api.github.com/users/kelvin84hk/followers",
      "following_url": "https://api.github.com/users/kelvin84hk/following{/other_user}",
      "gists_url": "https://api.github.com/users/kelvin84hk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kelvin84hk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kelvin84hk/subscriptions",
      "organizations_url": "https://api.github.com/users/kelvin84hk/orgs",
      "repos_url": "https://api.github.com/users/kelvin84hk/repos",
      "events_url": "https://api.github.com/users/kelvin84hk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kelvin84hk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-07-20T03:21:52Z",
    "updated_at": "2020-07-21T12:51:43Z",
    "closed_at": "2020-07-21T12:51:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "![Picture1](https://user-images.githubusercontent.com/21017167/87896511-03194f80-ca7b-11ea-8dfa-6bc7490a7897.png)\r\n\r\nI have run \"npm init\" and  I have tried to clear cache with force but no luck. Appreciate if there is any clue. Thanks! ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4355/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4355/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4354",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4354/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4354/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4354/events",
    "html_url": "https://github.com/expressjs/express/pull/4354",
    "id": 660794121,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDUyNTI0NTcz",
    "number": 4354,
    "title": "Add examples summary page",
    "user": {
      "login": "rodion-arr",
      "id": 5843270,
      "node_id": "MDQ6VXNlcjU4NDMyNzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5843270?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rodion-arr",
      "html_url": "https://github.com/rodion-arr",
      "followers_url": "https://api.github.com/users/rodion-arr/followers",
      "following_url": "https://api.github.com/users/rodion-arr/following{/other_user}",
      "gists_url": "https://api.github.com/users/rodion-arr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rodion-arr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rodion-arr/subscriptions",
      "organizations_url": "https://api.github.com/users/rodion-arr/orgs",
      "repos_url": "https://api.github.com/users/rodion-arr/repos",
      "events_url": "https://api.github.com/users/rodion-arr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rodion-arr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-07-19T12:00:24Z",
    "updated_at": "2020-07-28T07:40:17Z",
    "closed_at": "2020-07-27T21:13:19Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4354",
      "html_url": "https://github.com/expressjs/express/pull/4354",
      "diff_url": "https://github.com/expressjs/express/pull/4354.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4354.patch",
      "merged_at": "2020-07-27T21:13:19Z"
    },
    "body": "Following https://github.com/expressjs/express/issues/4343#issuecomment-660586365 it was decided to move content from https://github.com/expressjs/expressjs.com/pull/1178 into main express repo as a first step in popularization examples to people.\r\n\r\n/cc @dougwilson ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4354/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4354/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4353",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4353/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4353/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4353/events",
    "html_url": "https://github.com/expressjs/express/issues/4353",
    "id": 660566957,
    "node_id": "MDU6SXNzdWU2NjA1NjY5NTc=",
    "number": 4353,
    "title": "yeah this looks like a browser issue, i've just tested your code and i get the correct response. What browser are you running?",
    "user": {
      "login": "Jay-Jay13",
      "id": 67936563,
      "node_id": "MDQ6VXNlcjY3OTM2NTYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/67936563?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Jay-Jay13",
      "html_url": "https://github.com/Jay-Jay13",
      "followers_url": "https://api.github.com/users/Jay-Jay13/followers",
      "following_url": "https://api.github.com/users/Jay-Jay13/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jay-Jay13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Jay-Jay13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jay-Jay13/subscriptions",
      "organizations_url": "https://api.github.com/users/Jay-Jay13/orgs",
      "repos_url": "https://api.github.com/users/Jay-Jay13/repos",
      "events_url": "https://api.github.com/users/Jay-Jay13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Jay-Jay13/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-07-19T03:56:06Z",
    "updated_at": "2020-07-21T12:47:01Z",
    "closed_at": "2020-07-21T12:47:01Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi!\r\n\r\nIn reference to the issue. I am getting the same error. The browser I am using is google chrome.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4353/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4353/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4352",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4352/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4352/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4352/events",
    "html_url": "https://github.com/expressjs/express/issues/4352",
    "id": 658516831,
    "node_id": "MDU6SXNzdWU2NTg1MTY4MzE=",
    "number": 4352,
    "title": "Request to add getspooky to the triage team ",
    "user": {
      "login": "getspooky",
      "id": 37160072,
      "node_id": "MDQ6VXNlcjM3MTYwMDcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/37160072?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/getspooky",
      "html_url": "https://github.com/getspooky",
      "followers_url": "https://api.github.com/users/getspooky/followers",
      "following_url": "https://api.github.com/users/getspooky/following{/other_user}",
      "gists_url": "https://api.github.com/users/getspooky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/getspooky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/getspooky/subscriptions",
      "organizations_url": "https://api.github.com/users/getspooky/orgs",
      "repos_url": "https://api.github.com/users/getspooky/repos",
      "events_url": "https://api.github.com/users/getspooky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/getspooky/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-07-16T19:57:33Z",
    "updated_at": "2020-07-20T16:30:17Z",
    "closed_at": "2020-07-20T16:30:17Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Title: Request triager role for getspooky\r\n\r\nI have read and understood the project's Code of Conduct.\r\nI also have read and understood the process and best practices around Express triaging.\r\n\r\nI request for a triager role for the following GitHub organizations: `express`",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4352/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4352/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4351",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4351/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4351/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4351/events",
    "html_url": "https://github.com/expressjs/express/pull/4351",
    "id": 658424820,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDUwMzg5MDQy",
    "number": 4351,
    "title": "fix(Contributing): Cannot find Code Of Conduct md file",
    "user": {
      "login": "getspooky",
      "id": 37160072,
      "node_id": "MDQ6VXNlcjM3MTYwMDcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/37160072?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/getspooky",
      "html_url": "https://github.com/getspooky",
      "followers_url": "https://api.github.com/users/getspooky/followers",
      "following_url": "https://api.github.com/users/getspooky/following{/other_user}",
      "gists_url": "https://api.github.com/users/getspooky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/getspooky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/getspooky/subscriptions",
      "organizations_url": "https://api.github.com/users/getspooky/orgs",
      "repos_url": "https://api.github.com/users/getspooky/repos",
      "events_url": "https://api.github.com/users/getspooky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/getspooky/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-07-16T17:58:34Z",
    "updated_at": "2020-07-16T19:24:10Z",
    "closed_at": "2020-07-16T19:24:10Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4351",
      "html_url": "https://github.com/expressjs/express/pull/4351",
      "diff_url": "https://github.com/expressjs/express/pull/4351.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4351.patch",
      "merged_at": "2020-07-16T19:24:10Z"
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4351/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4351/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4350",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4350/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4350/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4350/events",
    "html_url": "https://github.com/expressjs/express/pull/4350",
    "id": 658389251,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDUwMzU4MTU1",
    "number": 4350,
    "title": "fix(Contributing): Cannot find Code Of Conduct md file",
    "user": {
      "login": "getspooky",
      "id": 37160072,
      "node_id": "MDQ6VXNlcjM3MTYwMDcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/37160072?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/getspooky",
      "html_url": "https://github.com/getspooky",
      "followers_url": "https://api.github.com/users/getspooky/followers",
      "following_url": "https://api.github.com/users/getspooky/following{/other_user}",
      "gists_url": "https://api.github.com/users/getspooky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/getspooky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/getspooky/subscriptions",
      "organizations_url": "https://api.github.com/users/getspooky/orgs",
      "repos_url": "https://api.github.com/users/getspooky/repos",
      "events_url": "https://api.github.com/users/getspooky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/getspooky/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-07-16T17:11:41Z",
    "updated_at": "2020-07-16T17:37:26Z",
    "closed_at": "2020-07-16T17:12:02Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4350",
      "html_url": "https://github.com/expressjs/express/pull/4350",
      "diff_url": "https://github.com/expressjs/express/pull/4350.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4350.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4350/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4350/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4349",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4349/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4349/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4349/events",
    "html_url": "https://github.com/expressjs/express/issues/4349",
    "id": 658163902,
    "node_id": "MDU6SXNzdWU2NTgxNjM5MDI=",
    "number": 4349,
    "title": "Routers and filename names that have no extension",
    "user": {
      "login": "G4143",
      "id": 3310879,
      "node_id": "MDQ6VXNlcjMzMTA4Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3310879?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/G4143",
      "html_url": "https://github.com/G4143",
      "followers_url": "https://api.github.com/users/G4143/followers",
      "following_url": "https://api.github.com/users/G4143/following{/other_user}",
      "gists_url": "https://api.github.com/users/G4143/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/G4143/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/G4143/subscriptions",
      "organizations_url": "https://api.github.com/users/G4143/orgs",
      "repos_url": "https://api.github.com/users/G4143/repos",
      "events_url": "https://api.github.com/users/G4143/events{/privacy}",
      "received_events_url": "https://api.github.com/users/G4143/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2020-07-16T12:43:12Z",
    "updated_at": "2020-07-16T13:01:25Z",
    "closed_at": "2020-07-16T13:01:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I just discovered a nasty feature in Express.JS.\r\n\r\nIf you accidentally create a router file and forget the extension say 'report' and then correct the situation by doing a save-as 'report.js' in your editor.... You now may have 2 files in your router folder, report and report.js. This is fine until you require this router into the app file.. If you happen to use the short-cut 'require('/router/report');' then it will load the empty file report and not report.js and to make matters worst.. VS Code's intellisense will indicated no errors but when run the project the router will fail with a long error message.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4349/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4349/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4348",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4348/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4348/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4348/events",
    "html_url": "https://github.com/expressjs/express/issues/4348",
    "id": 657118064,
    "node_id": "MDU6SXNzdWU2NTcxMTgwNjQ=",
    "number": 4348,
    "title": "UnhandledPromiseRejectionWarning: UnprocessableEntityError",
    "user": {
      "login": "webshy",
      "id": 29698214,
      "node_id": "MDQ6VXNlcjI5Njk4MjE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/29698214?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/webshy",
      "html_url": "https://github.com/webshy",
      "followers_url": "https://api.github.com/users/webshy/followers",
      "following_url": "https://api.github.com/users/webshy/following{/other_user}",
      "gists_url": "https://api.github.com/users/webshy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/webshy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/webshy/subscriptions",
      "organizations_url": "https://api.github.com/users/webshy/orgs",
      "repos_url": "https://api.github.com/users/webshy/repos",
      "events_url": "https://api.github.com/users/webshy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/webshy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-07-15T07:09:49Z",
    "updated_at": "2021-02-09T09:07:56Z",
    "closed_at": "2020-07-17T12:13:50Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": " \"express\": \"^4.17.1\"\r\n\r\nUnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 1)\r\n(node:17572) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4348/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4348/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4347",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4347/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4347/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4347/events",
    "html_url": "https://github.com/expressjs/express/issues/4347",
    "id": 657074097,
    "node_id": "MDU6SXNzdWU2NTcwNzQwOTc=",
    "number": 4347,
    "title": "Request triager role for VigneshMurugan",
    "user": {
      "login": "VigneshMurugan",
      "id": 9670465,
      "node_id": "MDQ6VXNlcjk2NzA0NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9670465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VigneshMurugan",
      "html_url": "https://github.com/VigneshMurugan",
      "followers_url": "https://api.github.com/users/VigneshMurugan/followers",
      "following_url": "https://api.github.com/users/VigneshMurugan/following{/other_user}",
      "gists_url": "https://api.github.com/users/VigneshMurugan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VigneshMurugan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VigneshMurugan/subscriptions",
      "organizations_url": "https://api.github.com/users/VigneshMurugan/orgs",
      "repos_url": "https://api.github.com/users/VigneshMurugan/repos",
      "events_url": "https://api.github.com/users/VigneshMurugan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VigneshMurugan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-07-15T05:36:15Z",
    "updated_at": "2020-07-16T18:33:45Z",
    "closed_at": "2020-07-16T18:33:45Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have read and understood the project's Code of Conduct.\r\nI also have read and understood the process and best practices around Express triaging.\r\n\r\nI request for a triager role for the following GitHub organizations:\r\n\r\nexpress",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4347/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4347/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4346",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4346/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4346/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4346/events",
    "html_url": "https://github.com/expressjs/express/pull/4346",
    "id": 656851801,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ5MDc0OTQz",
    "number": 4346,
    "title": "request to add Vignesh Murugan to the triage team",
    "user": {
      "login": "VigneshMurugan",
      "id": 9670465,
      "node_id": "MDQ6VXNlcjk2NzA0NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9670465?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VigneshMurugan",
      "html_url": "https://github.com/VigneshMurugan",
      "followers_url": "https://api.github.com/users/VigneshMurugan/followers",
      "following_url": "https://api.github.com/users/VigneshMurugan/following{/other_user}",
      "gists_url": "https://api.github.com/users/VigneshMurugan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VigneshMurugan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VigneshMurugan/subscriptions",
      "organizations_url": "https://api.github.com/users/VigneshMurugan/orgs",
      "repos_url": "https://api.github.com/users/VigneshMurugan/repos",
      "events_url": "https://api.github.com/users/VigneshMurugan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VigneshMurugan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-07-14T19:38:53Z",
    "updated_at": "2020-07-16T18:33:07Z",
    "closed_at": "2020-07-16T18:33:07Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4346",
      "html_url": "https://github.com/expressjs/express/pull/4346",
      "diff_url": "https://github.com/expressjs/express/pull/4346.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4346.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4346/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4346/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4345",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4345/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4345/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4345/events",
    "html_url": "https://github.com/expressjs/express/issues/4345",
    "id": 655713574,
    "node_id": "MDU6SXNzdWU2NTU3MTM1NzQ=",
    "number": 4345,
    "title": "Proposal to improve Express docs/website/examples",
    "user": {
      "login": "tinafangkunding",
      "id": 26135229,
      "node_id": "MDQ6VXNlcjI2MTM1MjI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/26135229?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tinafangkunding",
      "html_url": "https://github.com/tinafangkunding",
      "followers_url": "https://api.github.com/users/tinafangkunding/followers",
      "following_url": "https://api.github.com/users/tinafangkunding/following{/other_user}",
      "gists_url": "https://api.github.com/users/tinafangkunding/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tinafangkunding/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tinafangkunding/subscriptions",
      "organizations_url": "https://api.github.com/users/tinafangkunding/orgs",
      "repos_url": "https://api.github.com/users/tinafangkunding/repos",
      "events_url": "https://api.github.com/users/tinafangkunding/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tinafangkunding/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 14,
    "created_at": "2020-07-13T09:50:58Z",
    "updated_at": "2020-07-16T18:30:46Z",
    "closed_at": "2020-07-16T18:30:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "## Problem & Background\r\n\r\nHi there, we are Express.js users, and also serverless advocates. We found there are some issues about \"lack of introduction to examples/cloud environment deploy issues\", as the following ones:\r\nhttps://github.com/expressjs/express/issues/4343\r\nhttps://github.com/expressjs/express/issues/3468\r\nhttps://github.com/expressjs/express/issues/4278 \r\n\r\nTherefore, in this issue, we’d like to collaborate with the express community and make a better website/content for users. First of all, we’d like to focus on adding some guidance to people who want to deploy express.js on cloud environments, especially on serverless architecture. Besides, we’d like to discuss how to help users create an express.js app quickly and easily, especially for Chinese users (express.js is very popular in China). \r\n \r\nThis proposal based on the following principles:\r\n- **Open-Source:** all the content and tools used (e.g. the Serverless Framework) is open-sourced.\r\n- **Multi-Cloud Environment Support:** We’ll make sure the content is neutral and the examples can be deployed to Multi-Cloud Environment. \r\n\r\n## Proposed Solution\r\n\r\n- **Multi-language Support:** Translate the `Readme.md`, add Chinese `Readme.cn.md` and make it more friendly to Chinese users. \r\n- **Maintain the Chinese Express.js website.** https://www.expressjs.com.cn/. \r\nCurrently, the official website is the top result in China’s Search Engine, which means it’s an important entrance to know express.js for Chinese users. \r\n![image](https://user-images.githubusercontent.com/26135229/87288498-03bb5e80-c52e-11ea-8f99-ab85c3717d40.png)\r\nWhile on the official Express.js Chinese website, most of the detailed pages are still not translated to Chinese. Besides, the translated content is not easy to understand. We’d like to update and maintain this content.\r\n![image](https://user-images.githubusercontent.com/26135229/87288786-60b71480-c52e-11ea-87e3-b595947d4526.png)\r\n\r\n- **Update and Maintain Examples in Repo:** We’d like to provide some typical examples, and these examples can be easily deployed to Multi-Cloud environments via the Serverless Framework, one of the most popular open-source development tools. Here are some examples we’d like to deliver:\r\n\r\n    - Express.js RESTful API \r\n    - Websocket Demo based on Express.js\r\n    - OCR application based on Express.js\r\n    - Translation Application based on Express.js\r\n    - Express.js + PostgreSQL example\r\n    - Express.js + MySQL example\r\n    - Express.js + MongoDB example\r\n\r\nAccording to a [node.js survey](https://nodersurvey.github.io/reporters/#%E6%A1%86%E6%9E%B6) in China 2020, Express.js is the most popular node.js framework (61.37%) in China, and many of the users deploy their express.js applications on the cloud environment, it will be great if we can support more content in the official website/repo. \r\n\r\n![image](https://user-images.githubusercontent.com/26135229/87290174-3e25fb00-c530-11ea-8b1c-3e57279d59db.png)\r\n\r\nLooking forward to your suggestions, and please let us know your thoughts from the community side, thanks in advance!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4345/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4345/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4344",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4344/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4344/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4344/events",
    "html_url": "https://github.com/expressjs/express/issues/4344",
    "id": 655094672,
    "node_id": "MDU6SXNzdWU2NTUwOTQ2NzI=",
    "number": 4344,
    "title": "How to set error.name in extended class Error in Node.js?",
    "user": {
      "login": "KaizenTamashi",
      "id": 40164357,
      "node_id": "MDQ6VXNlcjQwMTY0MzU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/40164357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KaizenTamashi",
      "html_url": "https://github.com/KaizenTamashi",
      "followers_url": "https://api.github.com/users/KaizenTamashi/followers",
      "following_url": "https://api.github.com/users/KaizenTamashi/following{/other_user}",
      "gists_url": "https://api.github.com/users/KaizenTamashi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KaizenTamashi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KaizenTamashi/subscriptions",
      "organizations_url": "https://api.github.com/users/KaizenTamashi/orgs",
      "repos_url": "https://api.github.com/users/KaizenTamashi/repos",
      "events_url": "https://api.github.com/users/KaizenTamashi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KaizenTamashi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2020-07-11T00:14:42Z",
    "updated_at": "2022-01-26T17:28:45Z",
    "closed_at": "2020-07-14T01:13:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm trying to set the error name `err.name = 'ExpressValidatorError';` \r\n\r\nof an custom Error class `class AppError extends Error` \r\n\r\nthat is passed to centralErrorHandler to filter and handle errors by `err.name`.\r\n\r\nI have did a lot of research but still couldn't figure out why `err.name` in centralErrorHandler console logs as `undefined`.\r\n\r\nWhen I change `return next(err);` in auth.controller.js to `throw err;`, the `err.name` does console log as `'ExpressValidatorError'` but i'm not sure if using throw is correct.\r\n\r\n\r\n\r\ncentralErrorHandler.js\r\n```\r\nmodule.exports = (err, req, res, next) => {           \r\n        console.log(err.name);\r\n        if(err.name === 'ExpressValidatorError') err = handleExpressValidatorError(err);            \r\n}\r\n\r\n```\r\n\r\nauth.controller.js\r\n```\r\nconst {validationResult} = require('express-validator');\r\n\r\nexports.signup = (req, res) => {     \r\n    const errors = validationResult(req); \r\n   \r\n      if (!errors.isEmpty()) {\r\n        let err = new AppError(`Invalid login credentials.`, 422);\r\n        err.name = 'ExpressValidatorError';            \r\n             \r\n        return next(err);\r\n      }\r\n\r\n    res.status(200).send(req.user);          \r\n}\r\n```\r\n\r\nappError.js\r\n```\r\nclass AppError extends Error {\r\n    constructor(message, statusCode){\r\n        super(message);\r\n\r\n        this.statusCode = statusCode;\r\n        this.status = `${statusCode}`.startsWith('4') ? 'fail' : 'error';        \r\n        this.isOperational = true;        \r\n\r\n        Error.captureStackTrace(this, this.constructor);\r\n    }\r\n}\r\n\r\nmodule.exports = AppError;\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4344/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4344/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4343",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4343/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4343/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4343/events",
    "html_url": "https://github.com/expressjs/express/issues/4343",
    "id": 654859077,
    "node_id": "MDU6SXNzdWU2NTQ4NTkwNzc=",
    "number": 4343,
    "title": "introduction to what is inside examples?",
    "user": {
      "login": "alepinio",
      "id": 45610498,
      "node_id": "MDQ6VXNlcjQ1NjEwNDk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/45610498?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alepinio",
      "html_url": "https://github.com/alepinio",
      "followers_url": "https://api.github.com/users/alepinio/followers",
      "following_url": "https://api.github.com/users/alepinio/following{/other_user}",
      "gists_url": "https://api.github.com/users/alepinio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alepinio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alepinio/subscriptions",
      "organizations_url": "https://api.github.com/users/alepinio/orgs",
      "repos_url": "https://api.github.com/users/alepinio/repos",
      "events_url": "https://api.github.com/users/alepinio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alepinio/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 13,
    "created_at": "2020-07-10T15:26:11Z",
    "updated_at": "2020-07-27T21:13:18Z",
    "closed_at": "2020-07-27T21:13:18Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi, I couldn't find any resource in [expressjs.com](https://expressjs.com) talking about the examples in directory `examples`, say an introduction or a TOC.\r\n\r\nAm I missing a related resource providing a gentler approach to what is inside directory `examples`? Or it's just the code?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4343/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4343/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4341",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4341/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4341/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4341/events",
    "html_url": "https://github.com/expressjs/express/issues/4341",
    "id": 652207791,
    "node_id": "MDU6SXNzdWU2NTIyMDc3OTE=",
    "number": 4341,
    "title": "Extract param issue",
    "user": {
      "login": "iovanom",
      "id": 3993222,
      "node_id": "MDQ6VXNlcjM5OTMyMjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3993222?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iovanom",
      "html_url": "https://github.com/iovanom",
      "followers_url": "https://api.github.com/users/iovanom/followers",
      "following_url": "https://api.github.com/users/iovanom/following{/other_user}",
      "gists_url": "https://api.github.com/users/iovanom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iovanom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iovanom/subscriptions",
      "organizations_url": "https://api.github.com/users/iovanom/orgs",
      "repos_url": "https://api.github.com/users/iovanom/repos",
      "events_url": "https://api.github.com/users/iovanom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iovanom/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-07-07T10:29:59Z",
    "updated_at": "2020-07-07T15:14:44Z",
    "closed_at": "2020-07-07T15:13:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have a route with param like `/user/:id` and on request with `/user/5e9868c3fb322670da33ef0e%3Fscore%3D0` (decoded is /user/5e9868c3fb322670da33ef0e?score=0) I have got the params.id = 5e9868c3fb322670da33ef0e?score=0\r\n\r\nnode - v14.5.0\r\nexpress - 4.17.1\r\n\r\n```\r\nconst express = require('express')\r\nconst app = express()\r\nconst port = 3333\r\n\r\napp.get('/user/:id', (req, res) => res.json(req.params))\r\n\r\napp.listen(port, () => console.log(`Express - listening at http://localhost:${port}`))\r\n```\r\n```\r\n$ curl localhost:3333/user/5e9868c3fb322670da33ef0e%3Fscore%3D0\r\n{\"id\":\"5e9868c3fb322670da33ef0e?score=0\"}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4341/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4341/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4340",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4340/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4340/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4340/events",
    "html_url": "https://github.com/expressjs/express/pull/4340",
    "id": 650363120,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDQzODY3ODY1",
    "number": 4340,
    "title": "deps: proxy-addr@2.0.6",
    "user": {
      "login": "3imed-jaberi",
      "id": 43971542,
      "node_id": "MDQ6VXNlcjQzOTcxNTQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/43971542?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3imed-jaberi",
      "html_url": "https://github.com/3imed-jaberi",
      "followers_url": "https://api.github.com/users/3imed-jaberi/followers",
      "following_url": "https://api.github.com/users/3imed-jaberi/following{/other_user}",
      "gists_url": "https://api.github.com/users/3imed-jaberi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3imed-jaberi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3imed-jaberi/subscriptions",
      "organizations_url": "https://api.github.com/users/3imed-jaberi/orgs",
      "repos_url": "https://api.github.com/users/3imed-jaberi/repos",
      "events_url": "https://api.github.com/users/3imed-jaberi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3imed-jaberi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 133578716,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/deps",
        "name": "deps",
        "color": "444444",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-07-03T05:59:14Z",
    "updated_at": "2021-11-16T04:32:29Z",
    "closed_at": "2021-11-16T04:32:28Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4340",
      "html_url": "https://github.com/expressjs/express/pull/4340",
      "diff_url": "https://github.com/expressjs/express/pull/4340.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4340.patch",
      "merged_at": "2021-11-16T04:32:29Z"
    },
    "body": "Update proxy-addr.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4340/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4340/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4339",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4339/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4339/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4339/events",
    "html_url": "https://github.com/expressjs/express/issues/4339",
    "id": 650360711,
    "node_id": "MDU6SXNzdWU2NTAzNjA3MTE=",
    "number": 4339,
    "title": "(node:10234) UnhandledPromiseRejectionWarning: TypeError: Cannot read property 'lookup' of undefined.",
    "user": {
      "login": "digvijay-r",
      "id": 41992412,
      "node_id": "MDQ6VXNlcjQxOTkyNDEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/41992412?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/digvijay-r",
      "html_url": "https://github.com/digvijay-r",
      "followers_url": "https://api.github.com/users/digvijay-r/followers",
      "following_url": "https://api.github.com/users/digvijay-r/following{/other_user}",
      "gists_url": "https://api.github.com/users/digvijay-r/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/digvijay-r/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/digvijay-r/subscriptions",
      "organizations_url": "https://api.github.com/users/digvijay-r/orgs",
      "repos_url": "https://api.github.com/users/digvijay-r/repos",
      "events_url": "https://api.github.com/users/digvijay-r/events{/privacy}",
      "received_events_url": "https://api.github.com/users/digvijay-r/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2020-07-03T05:52:45Z",
    "updated_at": "2020-07-03T06:35:05Z",
    "closed_at": "2020-07-03T05:55:16Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "While passing response back to the client, the code is giving the error. Here is the stack trace:\r\n```\r\n\r\n(node:10234) UnhandledPromiseRejectionWarning: TypeError: Cannot read property 'lookup' of undefined\r\n    at ServerResponse.header (/home/vegas/slot_code/node_modules/express/lib/response.js:766:37)\r\n    at ServerResponse.json (/home/vegas/slot_code/node_modules/express/lib/response.js:264:10)\r\n    at Object.levelXpMgmtService.listLevelXp (/home/vegas/slot_code/web-server/app/routes/levelXpManagement.js:113:20)\r\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\r\n(node:10234) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag --unhandled-rejections=strict (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 3) \r\n```\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4339/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4339/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4338",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4338/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4338/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4338/events",
    "html_url": "https://github.com/expressjs/express/pull/4338",
    "id": 650358398,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDQzODY0MDc4",
    "number": 4338,
    "title": "build: Node.js@13.x and Node.js@14.x ",
    "user": {
      "login": "3imed-jaberi",
      "id": 43971542,
      "node_id": "MDQ6VXNlcjQzOTcxNTQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/43971542?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3imed-jaberi",
      "html_url": "https://github.com/3imed-jaberi",
      "followers_url": "https://api.github.com/users/3imed-jaberi/followers",
      "following_url": "https://api.github.com/users/3imed-jaberi/following{/other_user}",
      "gists_url": "https://api.github.com/users/3imed-jaberi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3imed-jaberi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3imed-jaberi/subscriptions",
      "organizations_url": "https://api.github.com/users/3imed-jaberi/orgs",
      "repos_url": "https://api.github.com/users/3imed-jaberi/repos",
      "events_url": "https://api.github.com/users/3imed-jaberi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3imed-jaberi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 133578714,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/tests",
        "name": "tests",
        "color": "944008",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 11,
    "created_at": "2020-07-03T05:45:43Z",
    "updated_at": "2021-12-16T07:48:05Z",
    "closed_at": "2021-12-16T07:28:25Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4338",
      "html_url": "https://github.com/expressjs/express/pull/4338",
      "diff_url": "https://github.com/expressjs/express/pull/4338.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4338.patch",
      "merged_at": "2021-12-16T07:28:24Z"
    },
    "body": "- [x] Support Node.js 13.x.\r\n- [x] Support Node.js 14.x.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4338/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4338/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4337",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4337/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4337/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4337/events",
    "html_url": "https://github.com/expressjs/express/pull/4337",
    "id": 650325995,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDQzODM4NDU2",
    "number": 4337,
    "title": "deps: cookie@0.4.1",
    "user": {
      "login": "3imed-jaberi",
      "id": 43971542,
      "node_id": "MDQ6VXNlcjQzOTcxNTQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/43971542?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3imed-jaberi",
      "html_url": "https://github.com/3imed-jaberi",
      "followers_url": "https://api.github.com/users/3imed-jaberi/followers",
      "following_url": "https://api.github.com/users/3imed-jaberi/following{/other_user}",
      "gists_url": "https://api.github.com/users/3imed-jaberi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3imed-jaberi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3imed-jaberi/subscriptions",
      "organizations_url": "https://api.github.com/users/3imed-jaberi/orgs",
      "repos_url": "https://api.github.com/users/3imed-jaberi/repos",
      "events_url": "https://api.github.com/users/3imed-jaberi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3imed-jaberi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 133578716,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/deps",
        "name": "deps",
        "color": "444444",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 11,
    "created_at": "2020-07-03T03:58:17Z",
    "updated_at": "2021-11-17T04:30:44Z",
    "closed_at": "2021-11-17T04:30:42Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4337",
      "html_url": "https://github.com/expressjs/express/pull/4337",
      "diff_url": "https://github.com/expressjs/express/pull/4337.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4337.patch",
      "merged_at": "2021-11-17T04:30:44Z"
    },
    "body": "Update cookie.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4337/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4337/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4336",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4336/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4336/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4336/events",
    "html_url": "https://github.com/expressjs/express/pull/4336",
    "id": 650321394,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDQzODM1MTI1",
    "number": 4336,
    "title": "deps: statuses@2.0.1",
    "user": {
      "login": "3imed-jaberi",
      "id": 43971542,
      "node_id": "MDQ6VXNlcjQzOTcxNTQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/43971542?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3imed-jaberi",
      "html_url": "https://github.com/3imed-jaberi",
      "followers_url": "https://api.github.com/users/3imed-jaberi/followers",
      "following_url": "https://api.github.com/users/3imed-jaberi/following{/other_user}",
      "gists_url": "https://api.github.com/users/3imed-jaberi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3imed-jaberi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3imed-jaberi/subscriptions",
      "organizations_url": "https://api.github.com/users/3imed-jaberi/orgs",
      "repos_url": "https://api.github.com/users/3imed-jaberi/repos",
      "events_url": "https://api.github.com/users/3imed-jaberi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3imed-jaberi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 133578716,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/deps",
        "name": "deps",
        "color": "444444",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/18",
      "html_url": "https://github.com/expressjs/express/milestone/18",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/18/labels",
      "id": 5234171,
      "node_id": "MDk6TWlsZXN0b25lNTIzNDE3MQ==",
      "number": 18,
      "title": "4.18",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 15,
      "state": "closed",
      "created_at": "2020-03-24T23:16:48Z",
      "updated_at": "2022-04-24T22:50:58Z",
      "due_on": null,
      "closed_at": "2022-04-24T22:50:58Z"
    },
    "comments": 0,
    "created_at": "2020-07-03T03:42:02Z",
    "updated_at": "2022-04-03T04:13:05Z",
    "closed_at": "2022-04-03T04:13:05Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4336",
      "html_url": "https://github.com/expressjs/express/pull/4336",
      "diff_url": "https://github.com/expressjs/express/pull/4336.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4336.patch",
      "merged_at": "2022-04-03T04:13:05Z"
    },
    "body": "Update statuses.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4336/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4336/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4335",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4335/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4335/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4335/events",
    "html_url": "https://github.com/expressjs/express/issues/4335",
    "id": 648853872,
    "node_id": "MDU6SXNzdWU2NDg4NTM4NzI=",
    "number": 4335,
    "title": "router dont call specified function for one route",
    "user": {
      "login": "javadbat",
      "id": 11534875,
      "node_id": "MDQ6VXNlcjExNTM0ODc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/11534875?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/javadbat",
      "html_url": "https://github.com/javadbat",
      "followers_url": "https://api.github.com/users/javadbat/followers",
      "following_url": "https://api.github.com/users/javadbat/following{/other_user}",
      "gists_url": "https://api.github.com/users/javadbat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/javadbat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/javadbat/subscriptions",
      "organizations_url": "https://api.github.com/users/javadbat/orgs",
      "repos_url": "https://api.github.com/users/javadbat/repos",
      "events_url": "https://api.github.com/users/javadbat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/javadbat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-07-01T10:06:25Z",
    "updated_at": "2020-07-17T09:49:34Z",
    "closed_at": "2020-07-01T15:48:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I recently have a weird problem with the express router that one of my route '/user/dashboard' doesn't work properly and I try to explain it here.\r\nas I said all routes work without any problem but this route and seems like it runs an old code\r\nI define a route for express before and check if the user doesn't have permission to redirect him to the login page.\r\nrecently I try to login and I see all protected routes works but this one to debug i attach a process and put a break point in my code  but weirdly the break point not triggered and then add a log and I see no log in the output.\r\ni dont know what happening here and it seems like kind of magic but i make a youtube video to show it.\r\nthe funny part is in my home computer it work on chrome but dont work on Firefox :D\r\nif you need to access source code i can give a access to your team but i cant make the project public.\r\ni try everything like delete node re clone repo or delete node_modules but not working at all\r\nhere is youtube video:\r\nhttps://www.youtube.com/watch?v=Qd1tlxGauFU",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4335/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4335/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4334",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4334/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4334/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4334/events",
    "html_url": "https://github.com/expressjs/express/pull/4334",
    "id": 648413465,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDQyMjI4MzA0",
    "number": 4334,
    "title": "Create tencent_serverless.md",
    "user": {
      "login": "jason-alouda",
      "id": 49105963,
      "node_id": "MDQ6VXNlcjQ5MTA1OTYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/49105963?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jason-alouda",
      "html_url": "https://github.com/jason-alouda",
      "followers_url": "https://api.github.com/users/jason-alouda/followers",
      "following_url": "https://api.github.com/users/jason-alouda/following{/other_user}",
      "gists_url": "https://api.github.com/users/jason-alouda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jason-alouda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jason-alouda/subscriptions",
      "organizations_url": "https://api.github.com/users/jason-alouda/orgs",
      "repos_url": "https://api.github.com/users/jason-alouda/repos",
      "events_url": "https://api.github.com/users/jason-alouda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jason-alouda/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-06-30T18:47:46Z",
    "updated_at": "2020-06-30T20:32:06Z",
    "closed_at": "2020-06-30T18:57:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4334",
      "html_url": "https://github.com/expressjs/express/pull/4334",
      "diff_url": "https://github.com/expressjs/express/pull/4334.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4334.patch",
      "merged_at": null
    },
    "body": "Example to show express community how to deploy their application on the cloud",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4334/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4334/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4333",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4333/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4333/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4333/events",
    "html_url": "https://github.com/expressjs/express/issues/4333",
    "id": 648168323,
    "node_id": "MDU6SXNzdWU2NDgxNjgzMjM=",
    "number": 4333,
    "title": "Router doens't match with an route",
    "user": {
      "login": "lukaswilkeer",
      "id": 1809628,
      "node_id": "MDQ6VXNlcjE4MDk2Mjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1809628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lukaswilkeer",
      "html_url": "https://github.com/lukaswilkeer",
      "followers_url": "https://api.github.com/users/lukaswilkeer/followers",
      "following_url": "https://api.github.com/users/lukaswilkeer/following{/other_user}",
      "gists_url": "https://api.github.com/users/lukaswilkeer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lukaswilkeer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lukaswilkeer/subscriptions",
      "organizations_url": "https://api.github.com/users/lukaswilkeer/orgs",
      "repos_url": "https://api.github.com/users/lukaswilkeer/repos",
      "events_url": "https://api.github.com/users/lukaswilkeer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lukaswilkeer/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-06-30T13:20:31Z",
    "updated_at": "2020-07-02T02:32:54Z",
    "closed_at": "2020-07-02T02:32:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "So, I have a following index.js file, where I define the default route and another endpoint that points to a router.\r\n\r\nTherefore, **when I try to access the endpoint /endpoint/something points to the default route, that is '/'.** I don't know what could happen.\r\n\r\nActivating the debug options shows that the new layer, in that case, endpoint was created, but I cannot figure out how to access it.\r\n\r\nSomeone could help? Thanks in advance.\r\n\r\n```js\r\nimport express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport dotenv from 'dotenv';\r\nimport endpointRouter from './src/endpoint/endpoint.router';\r\n\r\ndotenv.config();\r\n\r\nconst app = express();\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\n\r\n// routes\r\napp.use('/', (req, res) => res.status(200).send({message: 'Welcome'}));\r\napp.use('/endpoint', endpointRouter);\r\n\r\napp.listen(process.env.PORT, process.env.IPCONFIG, () => console.log(`Process listening on ${process.env.PORT}`));\r\n\r\nexport default app;\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4333/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4333/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4332",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4332/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4332/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4332/events",
    "html_url": "https://github.com/expressjs/express/issues/4332",
    "id": 648072270,
    "node_id": "MDU6SXNzdWU2NDgwNzIyNzA=",
    "number": 4332,
    "title": "Undefined formdata ",
    "user": {
      "login": "meerbahadin",
      "id": 59086176,
      "node_id": "MDQ6VXNlcjU5MDg2MTc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/59086176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meerbahadin",
      "html_url": "https://github.com/meerbahadin",
      "followers_url": "https://api.github.com/users/meerbahadin/followers",
      "following_url": "https://api.github.com/users/meerbahadin/following{/other_user}",
      "gists_url": "https://api.github.com/users/meerbahadin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meerbahadin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meerbahadin/subscriptions",
      "organizations_url": "https://api.github.com/users/meerbahadin/orgs",
      "repos_url": "https://api.github.com/users/meerbahadin/repos",
      "events_url": "https://api.github.com/users/meerbahadin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meerbahadin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-06-30T10:47:19Z",
    "updated_at": "2020-06-30T12:28:44Z",
    "closed_at": "2020-06-30T12:26:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "hello, I'm having an issue when I send form data from the postman to express API it shows me undefined and not getting stored in the database \r\n\r\nI have exact stuff in other projects and it runs fine :( after I ran npm update think it began to have an issue ,\r\nand the reason I wanna use form data I wanna upload a photo for each category but all I get is undefined\r\n\r\nin my server js file, have configured the parser like this :\r\n```\r\napp.use(express.json());\r\napp.use(express.urlencoded({extended : true}));\r\n```\r\nI want to add a new category  👍 \r\n```\r\nrouter.post(\"/categories\", async (req, res) => {\r\n  try {\r\n    console.log(req.body.type)\r\n//This shows undefinded\r\n    const category = new Category();\r\n    category.type = req.body.type;\r\n    await category.save();\r\n\r\n    res.json({\r\n      status: true,\r\n      message: \"Success\"\r\n    });\r\n  } catch (error) {\r\n    res.status(500).json({\r\n      success: false,\r\n      message: error.message\r\n    });\r\n  }\r\n});\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4332/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4332/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4331",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4331/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4331/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4331/events",
    "html_url": "https://github.com/expressjs/express/issues/4331",
    "id": 647776047,
    "node_id": "MDU6SXNzdWU2NDc3NzYwNDc=",
    "number": 4331,
    "title": "Can't get the request parameters to work when using the Router object",
    "user": {
      "login": "timonroe",
      "id": 5950321,
      "node_id": "MDQ6VXNlcjU5NTAzMjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5950321?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/timonroe",
      "html_url": "https://github.com/timonroe",
      "followers_url": "https://api.github.com/users/timonroe/followers",
      "following_url": "https://api.github.com/users/timonroe/following{/other_user}",
      "gists_url": "https://api.github.com/users/timonroe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/timonroe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/timonroe/subscriptions",
      "organizations_url": "https://api.github.com/users/timonroe/orgs",
      "repos_url": "https://api.github.com/users/timonroe/repos",
      "events_url": "https://api.github.com/users/timonroe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/timonroe/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-06-30T01:20:02Z",
    "updated_at": "2021-06-30T20:28:57Z",
    "closed_at": "2020-06-30T01:23:03Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm using this url to test: http://localhost:3000/order/1234\r\n\r\n**This works...**\r\n```\r\napp.get('/order/:number', function(req, res, next) {\r\n    res.send(JSON.stringify(req.params));\r\n});\r\n```\r\nprints: {\"number\":\"1234\"}\r\n\r\n**This does not work...**\r\n```\r\nvar orderRouter = require('./routes/order');\r\napp.use('/order/:number', orderRouter);\r\n```\r\nIn my order.js file I have:\r\n```\r\nrouter.get('/', function(req, res, next) {\r\n    res.send(JSON.stringify(req.params));\r\n});\r\n```\r\nprints: {}\r\n\r\nI'm using \"express\": \"~4.16.1\"\r\n\r\nCan anyone see why `req.params` doesn't contain the `number` key?  Thanks for the help.\r\n\r\nAlso, saw this issue: https://github.com/expressjs/express/issues/3700\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4331/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4331/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4330",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4330/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4330/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4330/events",
    "html_url": "https://github.com/expressjs/express/issues/4330",
    "id": 647200811,
    "node_id": "MDU6SXNzdWU2NDcyMDA4MTE=",
    "number": 4330,
    "title": "Title: Request triager role for Alanscut",
    "user": {
      "login": "Alanscut",
      "id": 21104054,
      "node_id": "MDQ6VXNlcjIxMTA0MDU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/21104054?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Alanscut",
      "html_url": "https://github.com/Alanscut",
      "followers_url": "https://api.github.com/users/Alanscut/followers",
      "following_url": "https://api.github.com/users/Alanscut/following{/other_user}",
      "gists_url": "https://api.github.com/users/Alanscut/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Alanscut/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Alanscut/subscriptions",
      "organizations_url": "https://api.github.com/users/Alanscut/orgs",
      "repos_url": "https://api.github.com/users/Alanscut/repos",
      "events_url": "https://api.github.com/users/Alanscut/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Alanscut/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-06-29T07:58:32Z",
    "updated_at": "2020-07-10T16:09:46Z",
    "closed_at": "2020-07-10T16:09:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi all, I'm an opensource enthusiast, I have been contributing to many projects on github for more than a year and will continue, I hope to joined expressjs orgnization and contribute to this project :)\r\n- I have read and understood the project's Code of Conduct.\r\n- I also have read and understood the process and best practices around Express triaging.\r\n\r\nI request for a triage role for the following GitHub organizations:\r\n\r\njshttp\r\npillarjs\r\nexpress",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4330/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4330/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4329",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4329/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4329/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4329/events",
    "html_url": "https://github.com/expressjs/express/issues/4329",
    "id": 647166723,
    "node_id": "MDU6SXNzdWU2NDcxNjY3MjM=",
    "number": 4329,
    "title": "Request triager role for @sheplu",
    "user": {
      "login": "sheplu",
      "id": 1133916,
      "node_id": "MDQ6VXNlcjExMzM5MTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1133916?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sheplu",
      "html_url": "https://github.com/sheplu",
      "followers_url": "https://api.github.com/users/sheplu/followers",
      "following_url": "https://api.github.com/users/sheplu/following{/other_user}",
      "gists_url": "https://api.github.com/users/sheplu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sheplu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sheplu/subscriptions",
      "organizations_url": "https://api.github.com/users/sheplu/orgs",
      "repos_url": "https://api.github.com/users/sheplu/repos",
      "events_url": "https://api.github.com/users/sheplu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sheplu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-06-29T06:56:16Z",
    "updated_at": "2020-08-12T15:28:05Z",
    "closed_at": "2020-07-10T16:10:31Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": " - [x]  I have read and understood the project's Code of Conduct.\r\n - [x] I also have read and understood the process and best practices around Express triaging.\r\n\r\nI request for a triager role for the following GitHub organizations:\r\n\r\n- jshttp\r\n- pillarjs\r\n- express\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4329/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4329/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4328",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4328/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4328/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4328/events",
    "html_url": "https://github.com/expressjs/express/issues/4328",
    "id": 646599762,
    "node_id": "MDU6SXNzdWU2NDY1OTk3NjI=",
    "number": 4328,
    "title": "TypeError: this.app.get is not a function",
    "user": {
      "login": "JosephScript",
      "id": 6144177,
      "node_id": "MDQ6VXNlcjYxNDQxNzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6144177?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JosephScript",
      "html_url": "https://github.com/JosephScript",
      "followers_url": "https://api.github.com/users/JosephScript/followers",
      "following_url": "https://api.github.com/users/JosephScript/following{/other_user}",
      "gists_url": "https://api.github.com/users/JosephScript/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JosephScript/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JosephScript/subscriptions",
      "organizations_url": "https://api.github.com/users/JosephScript/orgs",
      "repos_url": "https://api.github.com/users/JosephScript/repos",
      "events_url": "https://api.github.com/users/JosephScript/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JosephScript/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2020-06-27T03:38:23Z",
    "updated_at": "2020-06-27T04:40:29Z",
    "closed_at": "2020-06-27T04:40:29Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have an express server which has been running for some time in a proxy environment, which has a generic error handler that will log errors and send a status code to the client (this goes after all other middleware): \r\n\r\n```js\r\n\r\n  const express = require('express')\r\n  const app = express()\r\n\r\n  app.set('trust proxy', true)\r\n\r\n  // ... other configuration here\r\n  app.use('/', require('./healthcheck'))\r\n  // ... other routes here\r\n\r\n  app.use((err, req, res, next) => {\r\n    let fullUrl = req.protocol + '://' + req.get('host') + req.originalUrl\r\n    console.error(\r\n      `request-id: ${req.sessionID}`,\r\n      fullUrl,\r\n      err.message,\r\n      err.stack,\r\n      res.id,\r\n      err,\r\n    )\r\n    res\r\n      .status(err.status || 500)\r\n      .send('There was an error with our system. Please try again.')\r\n  })\r\n\r\n  app.listen(process.env.PORT || 8000, () => {\r\n    console.log('Listening on port:', process.env.PORT || 8000)\r\n  })\r\n```\r\n\r\nThis captured an error, and sent the expected 500 error, normally this is fine because it was handled and now the server can continue handling other requests. But for some reason after this point, my express server only responds with 500 errors due to some underlying issue in express's request module:\r\n\r\n```\r\nTypeError: this.app.get is not a function\r\n  File \"/srv/app/node_modules/express/lib/request.js\", line 310, in IncomingMessage.protocol\r\n    var trust = this.app.get('trust proxy fn');\r\n```\r\n\r\nI dug into it and it appears to be this block of code:\r\n\r\n```js\r\ndefineGetter(req, 'protocol', function protocol(){\r\n  var proto = this.connection.encrypted\r\n    ? 'https'\r\n    : 'http';\r\n  var trust = this.app.get('trust proxy fn');\r\n  if (!trust(this.connection.remoteAddress, 0)) {\r\n    return proto;\r\n  }\r\n...\r\n```\r\n\r\nI couldn't find any related issues to this and I'm curious if anyone has any ideas on how I can prevent this from happening in the future?\r\n\r\nVersions:\r\nexpress: 4.17.1\r\nNode: v14.4.0\r\n\r\nThanks in advance!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4328/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4328/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4327",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4327/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4327/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4327/events",
    "html_url": "https://github.com/expressjs/express/pull/4327",
    "id": 646526931,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDQwNzk5Mjc1",
    "number": 4327,
    "title": "fix eighth alpha release for express5 typo",
    "user": {
      "login": "belovsandr",
      "id": 16794134,
      "node_id": "MDQ6VXNlcjE2Nzk0MTM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/16794134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/belovsandr",
      "html_url": "https://github.com/belovsandr",
      "followers_url": "https://api.github.com/users/belovsandr/followers",
      "following_url": "https://api.github.com/users/belovsandr/following{/other_user}",
      "gists_url": "https://api.github.com/users/belovsandr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/belovsandr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/belovsandr/subscriptions",
      "organizations_url": "https://api.github.com/users/belovsandr/orgs",
      "repos_url": "https://api.github.com/users/belovsandr/repos",
      "events_url": "https://api.github.com/users/belovsandr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/belovsandr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-06-26T21:43:43Z",
    "updated_at": "2020-10-27T00:39:45Z",
    "closed_at": "2020-06-29T04:58:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4327",
      "html_url": "https://github.com/expressjs/express/pull/4327",
      "diff_url": "https://github.com/expressjs/express/pull/4327.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4327.patch",
      "merged_at": "2020-06-29T04:58:28Z"
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4327/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4327/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4326",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4326/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4326/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4326/events",
    "html_url": "https://github.com/expressjs/express/issues/4326",
    "id": 645914952,
    "node_id": "MDU6SXNzdWU2NDU5MTQ5NTI=",
    "number": 4326,
    "title": "Não consigo acessar meu index",
    "user": {
      "login": "alexalveees",
      "id": 28965664,
      "node_id": "MDQ6VXNlcjI4OTY1NjY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/28965664?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexalveees",
      "html_url": "https://github.com/alexalveees",
      "followers_url": "https://api.github.com/users/alexalveees/followers",
      "following_url": "https://api.github.com/users/alexalveees/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexalveees/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexalveees/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexalveees/subscriptions",
      "organizations_url": "https://api.github.com/users/alexalveees/orgs",
      "repos_url": "https://api.github.com/users/alexalveees/repos",
      "events_url": "https://api.github.com/users/alexalveees/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexalveees/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-25T23:45:06Z",
    "updated_at": "2020-06-26T00:03:00Z",
    "closed_at": "2020-06-26T00:03:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Error: Failed to lookup view \"index\" in views directory \"C:\\Users\\alexa\\OneDrive\\Área de Trabalho\\CURSONODEJS\\web-server\\src\\views\"\r\n    at Function.render (C:\\Users\\alexa\\OneDrive\\Área de Trabalho\\CURSONODEJS\\web-server\\node_modules\\express\\lib\\application.js:580:17)\r\n    at ServerResponse.render (C:\\Users\\alexa\\OneDrive\\Área de Trabalho\\CURSONODEJS\\web-server\\node_modules\\express\\lib\\response.js:1012:7)\r\n    at C:\\Users\\alexa\\OneDrive\\Área de Trabalho\\CURSONODEJS\\web-server\\src\\app.js:11:9\r\n    at Layer.handle [as handle_request] (C:\\Users\\alexa\\OneDrive\\Área de Trabalho\\CURSONODEJS\\web-server\\node_modules\\express\\lib\\router\\layer.js:95:5)\r\n    at next (C:\\Users\\alexa\\OneDrive\\Área de Trabalho\\CURSONODEJS\\web-server\\node_modules\\express\\lib\\router\\route.js:137:13)\r\n    at Route.dispatch (C:\\Users\\alexa\\OneDrive\\Área de Trabalho\\CURSONODEJS\\web-server\\node_modules\\express\\lib\\router\\route.js:112:3)\r\n    at Layer.handle [as handle_request] (C:\\Users\\alexa\\OneDrive\\Área de Trabalho\\CURSONODEJS\\web-server\\node_modules\\express\\lib\\router\\layer.js:95:5)\r\n    at C:\\Users\\alexa\\OneDrive\\Área de Trabalho\\CURSONODEJS\\web-server\\node_modules\\express\\lib\\router\\index.js:281:22\r\n    at Function.process_params (C:\\Users\\alexa\\OneDrive\\Área de Trabalho\\CURSONODEJS\\web-server\\node_modules\\express\\lib\\router\\index.js:335:12)\r\n    at next (C:\\Users\\alexa\\OneDrive\\Área de Trabalho\\CURSONODEJS\\web-server\\node_modules\\express\\lib\\router\\index.js:275:10)",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4326/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4326/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4325",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4325/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4325/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4325/events",
    "html_url": "https://github.com/expressjs/express/issues/4325",
    "id": 644423810,
    "node_id": "MDU6SXNzdWU2NDQ0MjM4MTA=",
    "number": 4325,
    "title": "Request triager role for @dakshkhetan",
    "user": {
      "login": "dakshkhetan",
      "id": 43447509,
      "node_id": "MDQ6VXNlcjQzNDQ3NTA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/43447509?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dakshkhetan",
      "html_url": "https://github.com/dakshkhetan",
      "followers_url": "https://api.github.com/users/dakshkhetan/followers",
      "following_url": "https://api.github.com/users/dakshkhetan/following{/other_user}",
      "gists_url": "https://api.github.com/users/dakshkhetan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dakshkhetan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dakshkhetan/subscriptions",
      "organizations_url": "https://api.github.com/users/dakshkhetan/orgs",
      "repos_url": "https://api.github.com/users/dakshkhetan/repos",
      "events_url": "https://api.github.com/users/dakshkhetan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dakshkhetan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-06-24T08:29:16Z",
    "updated_at": "2020-07-10T16:11:18Z",
    "closed_at": "2020-07-10T16:11:18Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "- [x] I have read and understood the project's Code of Conduct.\r\n- [x] I also have read and understood the process and best practices around Express triaging.\r\n\r\nI request for a triager role for the following GitHub organizations:\r\n\r\n- jshttp\r\n- pillarjs\r\n- express",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4325/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4325/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4324",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4324/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4324/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4324/events",
    "html_url": "https://github.com/expressjs/express/issues/4324",
    "id": 644283300,
    "node_id": "MDU6SXNzdWU2NDQyODMzMDA=",
    "number": 4324,
    "title": "express memory increase until 100%",
    "user": {
      "login": "syter",
      "id": 7510464,
      "node_id": "MDQ6VXNlcjc1MTA0NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7510464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/syter",
      "html_url": "https://github.com/syter",
      "followers_url": "https://api.github.com/users/syter/followers",
      "following_url": "https://api.github.com/users/syter/following{/other_user}",
      "gists_url": "https://api.github.com/users/syter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/syter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/syter/subscriptions",
      "organizations_url": "https://api.github.com/users/syter/orgs",
      "repos_url": "https://api.github.com/users/syter/repos",
      "events_url": "https://api.github.com/users/syter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/syter/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 11,
    "created_at": "2020-06-24T03:12:03Z",
    "updated_at": "2021-06-01T01:23:04Z",
    "closed_at": "2021-05-22T00:24:12Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello,\r\n\r\nThere is a nodejs project with express. \r\nAnd the server has crash cause out of memory sometimes.\r\nSo I make a tests, as below:\r\n\r\nThe server code:\r\napp.js\r\n\r\n```\r\nvar app = express();\r\napp.use(bodyParser.urlencoded({extended: false, limit: '5mb'}));\r\napp.use(bodyParser.json({limit: '5mb'}));\r\n\r\napp.get('/datijilus', datijilu.getall);\r\n```\r\n\r\ndatijilu.js--getall function\r\n\r\n```\r\nexports.getall = function (req, res) {\r\n    return res.status(200).json({1: 1});\r\n};\r\n```\r\n\r\nmocha script:\r\nbatch_memory.js\r\n\r\n```\r\nvar xueshengs = [xxx,xxx,xxx,xxx]; // 47 items\r\n\r\ndescribe('# /batch_quanxian', function() {\r\n    // request datijilu.getall interface\r\n    it('GET successful', function(done) {\r\n        for (var a=0; a<50; a++) {\r\n            for (var i=0; i<xueshengs.length; i++) {\r\n                tasks.push(returnGetDatijiluByXueshengFunc(xueshengs[i]));\r\n            }\r\n        }\r\n      \r\n        var t1 = Date.now();\r\n        console.log(\"==datijilu.getall xuesheng---tasks.length=\" + require('util').inspect(tasks.length));\r\n        async.parallel(tasks, function(err, results) {\r\n            var t2 = Date.now();\r\n            console.log(\"===================total time=\" + (t2-t1));\r\n            done();\r\n        });\r\n    });\r\n});\r\n\r\nfunction returnGetDatijiluByXueshengFunc(xuesheng) {\r\n    return function(callback) {\r\n        var path = '/datijilus?xuesheng=' + xuesheng + '&fields=id,xuesheng,timu,zuoyeqingdan,'+\r\n            'pigai,pigaijieguo,pigaipizhu,pigaitime,pigaiyidu,shanchu,xiugaitime,ver,'+\r\n            'readpigaitime,flags,biji,postguid,caogao,zhangwochengdu,chehuistatus,jiaodui'+\r\n            '&xiugaitime=[1581609600000,1590458933197]';;\r\n        request(helper.getRequestOptions({}, 'GET', path), function (err, response, body) {\r\n            body = JSON.parse(body);\r\n            assert.equal(response.statusCode, 200);\r\n            callback();\r\n        });\r\n    };\r\n}\r\n\r\n```\r\n\r\nexecute batch_memory.js\r\n`mocha batch_memory.js -t 180000`\r\n\r\nand the script result console logs:\r\n```\r\n  # /batch_quanxian\r\n==datijilu.getall xuesheng---tasks.length=2350\r\n===================total time=26576\r\n    ✓ GET single successful (26577ms)\r\n\r\n  1 passing (27s)\r\n```\r\n\r\n**The problem is:**\r\nI run this server use pm2.\r\nWhen I start server, pm2 shows server memory use **68.8 MB and keep it stable**\r\nWhen I run script, pm2 shows server memory use **FROM 68.8MB TO 244.5MB**\r\nAfter script over, **server become stable again**, but pm2 shows server memory use **226.2 MB**\r\nIf I run this script more times, server will crash someday.\r\n\r\nI don't know the reason why express keeps lots of memory, and how can I reduce memory?\r\nIs there some cache in express?\r\nHow can I clean it(not by restart)?\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4324/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4324/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4323",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4323/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4323/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4323/events",
    "html_url": "https://github.com/expressjs/express/issues/4323",
    "id": 644281350,
    "node_id": "MDU6SXNzdWU2NDQyODEzNTA=",
    "number": 4323,
    "title": "Wrong and outdated translation",
    "user": {
      "login": "Felichz",
      "id": 56377864,
      "node_id": "MDQ6VXNlcjU2Mzc3ODY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/56377864?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Felichz",
      "html_url": "https://github.com/Felichz",
      "followers_url": "https://api.github.com/users/Felichz/followers",
      "following_url": "https://api.github.com/users/Felichz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Felichz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Felichz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Felichz/subscriptions",
      "organizations_url": "https://api.github.com/users/Felichz/orgs",
      "repos_url": "https://api.github.com/users/Felichz/repos",
      "events_url": "https://api.github.com/users/Felichz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Felichz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-06-24T03:05:57Z",
    "updated_at": "2020-06-24T03:09:32Z",
    "closed_at": "2020-06-24T03:08:52Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Some parts of the translation are outdated and differ from the English version. There are also missing sections, like \"**Prevent brute-force attacks against authorization**\".\r\n\r\nAnd in the \"**Ensure your dependencies are secure**\" section, there are references to deprecated packages called \"nsp\" and \"requiresafe\", therefore the commands showed there are wrong. The `npm install -g requiresafe` command even throws a 404 error.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4323/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4323/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4322",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4322/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4322/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4322/events",
    "html_url": "https://github.com/expressjs/express/pull/4322",
    "id": 642373066,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDM3NDEwNDI0",
    "number": 4322,
    "title": "fix: license year",
    "user": {
      "login": "NotMoni",
      "id": 40552237,
      "node_id": "MDQ6VXNlcjQwNTUyMjM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/40552237?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NotMoni",
      "html_url": "https://github.com/NotMoni",
      "followers_url": "https://api.github.com/users/NotMoni/followers",
      "following_url": "https://api.github.com/users/NotMoni/following{/other_user}",
      "gists_url": "https://api.github.com/users/NotMoni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NotMoni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NotMoni/subscriptions",
      "organizations_url": "https://api.github.com/users/NotMoni/orgs",
      "repos_url": "https://api.github.com/users/NotMoni/repos",
      "events_url": "https://api.github.com/users/NotMoni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NotMoni/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-06-20T13:08:31Z",
    "updated_at": "2020-06-20T14:43:28Z",
    "closed_at": "2020-06-20T13:33:49Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4322",
      "html_url": "https://github.com/expressjs/express/pull/4322",
      "diff_url": "https://github.com/expressjs/express/pull/4322.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4322.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4322/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4322/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4321",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4321/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4321/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4321/events",
    "html_url": "https://github.com/expressjs/express/pull/4321",
    "id": 641599062,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDM2ODA0MTUx",
    "number": 4321,
    "title": "bump v5 router to beta.1",
    "user": {
      "login": "jonchurch",
      "id": 12915163,
      "node_id": "MDQ6VXNlcjEyOTE1MTYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/12915163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonchurch",
      "html_url": "https://github.com/jonchurch",
      "followers_url": "https://api.github.com/users/jonchurch/followers",
      "following_url": "https://api.github.com/users/jonchurch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonchurch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonchurch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonchurch/subscriptions",
      "organizations_url": "https://api.github.com/users/jonchurch/orgs",
      "repos_url": "https://api.github.com/users/jonchurch/repos",
      "events_url": "https://api.github.com/users/jonchurch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonchurch/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 98481977,
        "node_id": "MDU6TGFiZWw5ODQ4MTk3Nw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 133578716,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/deps",
        "name": "deps",
        "color": "444444",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/11",
      "html_url": "https://github.com/expressjs/express/milestone/11",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/11/labels",
      "id": 739972,
      "node_id": "MDk6TWlsZXN0b25lNzM5OTcy",
      "number": 11,
      "title": "5.0",
      "description": "",
      "creator": {
        "login": "Fishrock123",
        "id": 1093990,
        "node_id": "MDQ6VXNlcjEwOTM5OTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1093990?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fishrock123",
        "html_url": "https://github.com/Fishrock123",
        "followers_url": "https://api.github.com/users/Fishrock123/followers",
        "following_url": "https://api.github.com/users/Fishrock123/following{/other_user}",
        "gists_url": "https://api.github.com/users/Fishrock123/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Fishrock123/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Fishrock123/subscriptions",
        "organizations_url": "https://api.github.com/users/Fishrock123/orgs",
        "repos_url": "https://api.github.com/users/Fishrock123/repos",
        "events_url": "https://api.github.com/users/Fishrock123/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Fishrock123/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 8,
      "closed_issues": 12,
      "state": "open",
      "created_at": "2014-08-01T16:41:47Z",
      "updated_at": "2023-03-04T23:52:31Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 13,
    "created_at": "2020-06-18T23:06:08Z",
    "updated_at": "2022-09-17T06:27:31Z",
    "closed_at": "2021-12-17T05:25:49Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4321",
      "html_url": "https://github.com/expressjs/express/pull/4321",
      "diff_url": "https://github.com/expressjs/express/pull/4321.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4321.patch",
      "merged_at": "2021-12-17T05:25:49Z"
    },
    "body": "I went to test the new path-to-regexp behavior in 5.0.0-alpha.8 and realized that it relies on `router@alpha.1`, which doesn't have the new path-to-regexp behavior that's planned for v5. \r\n\r\nNot sure if this is intentional or not, so I wanted to open this PR as a reminder. \r\n\r\nI'm writing a blog post for work about changes in v5 and wanted folks to be able to try this part out. ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4321/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4321/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4320",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4320/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4320/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4320/events",
    "html_url": "https://github.com/expressjs/express/issues/4320",
    "id": 641589712,
    "node_id": "MDU6SXNzdWU2NDE1ODk3MTI=",
    "number": 4320,
    "title": "req.ip gives the wrong ip when trust proxy is enabled",
    "user": {
      "login": "curtispd",
      "id": 2791009,
      "node_id": "MDQ6VXNlcjI3OTEwMDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2791009?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/curtispd",
      "html_url": "https://github.com/curtispd",
      "followers_url": "https://api.github.com/users/curtispd/followers",
      "following_url": "https://api.github.com/users/curtispd/following{/other_user}",
      "gists_url": "https://api.github.com/users/curtispd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/curtispd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/curtispd/subscriptions",
      "organizations_url": "https://api.github.com/users/curtispd/orgs",
      "repos_url": "https://api.github.com/users/curtispd/repos",
      "events_url": "https://api.github.com/users/curtispd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/curtispd/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2020-06-18T22:30:14Z",
    "updated_at": "2020-06-18T23:49:43Z",
    "closed_at": "2020-06-18T23:49:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Using express 4.17.1.\r\n\r\nAccording to the docs for req.ip, if trust proxy is enabled, then it should be \"derived from the left-most entry in the X-Forwarded-For header.\"\r\nhttps://expressjs.com/en/api.html#req.ip\r\n\r\nWhich is what I would expect, e.g. if I have\r\nX-Forwarded-For: 1.2.3.4, 5.6.7.8, 9.0.1.2\r\n\r\nthen I would expect req.ip to be 1.2.3.4. But what I'm actually getting is the right-most one, 9.0.1.2 in this example. My goal is to get the real client ip, which is the left most one.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4320/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4320/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4319",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4319/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4319/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4319/events",
    "html_url": "https://github.com/expressjs/express/issues/4319",
    "id": 639888263,
    "node_id": "MDU6SXNzdWU2Mzk4ODgyNjM=",
    "number": 4319,
    "title": "Add Fetch Metadata Browser Headers",
    "user": {
      "login": "ThunderSon",
      "id": 32433575,
      "node_id": "MDQ6VXNlcjMyNDMzNTc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/32433575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ThunderSon",
      "html_url": "https://github.com/ThunderSon",
      "followers_url": "https://api.github.com/users/ThunderSon/followers",
      "following_url": "https://api.github.com/users/ThunderSon/following{/other_user}",
      "gists_url": "https://api.github.com/users/ThunderSon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ThunderSon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ThunderSon/subscriptions",
      "organizations_url": "https://api.github.com/users/ThunderSon/orgs",
      "repos_url": "https://api.github.com/users/ThunderSon/repos",
      "events_url": "https://api.github.com/users/ThunderSon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ThunderSon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2020-06-16T18:32:18Z",
    "updated_at": "2020-06-18T13:22:49Z",
    "closed_at": "2020-06-16T18:35:10Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "# New Header Addition\r\nAs google released recently the Fetch Metadata browser headers, it is crucial that frameworks support developers in providing access to them. Let me know if you need any additional information than what is provided below.\r\n\r\n## Is the header supported by any user agent?\r\n\r\nChrome v76 and chromium-based browsers v79. Firefox is working to release this soon.\r\n\r\n## What does it do?\r\n\r\nIt's a resource isolation policy that the browser sends to the server in order to provide more context and allow the server to allow or deny the content access. Attacks such as CSRF, XSSI, XS-leaks, etc. will be much harder to pull once the server knows what the user-agent is allowing and expecting.\r\n\r\n## What are the headers for this policy?\r\n\r\n- Sec-Fetch-Site: ['same-origin', 'same-site', 'none', 'cross-site']\r\n- Sec-Fetch-Mode: ['same-origin', 'no-cors', 'cors', 'navigate']\r\n- Sec-Fetch-Dest: the destination of the returned content (_e.g._ image)\r\n\r\n## Where does the specification live?\r\n\r\nhttps://www.w3.org/TR/fetch-metadata/\r\nI'd recommend reading the following article before checking the specification:\r\nhttps://web.dev/fetch-metadata/\r\n\r\n_Note:_ Helmet doesn't pertain to this as this is not a response header, it's a header that is similar to \"origin\", \"host\", etc. that is set by the browser for the server to give better context.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4319/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4319/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4318",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4318/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4318/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4318/events",
    "html_url": "https://github.com/expressjs/express/pull/4318",
    "id": 639576310,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDM1MTQwOTE0",
    "number": 4318,
    "title": "Extend tests to verify that req.accepts ignores addition mime modifiers",
    "user": {
      "login": "hermanbanken",
      "id": 791189,
      "node_id": "MDQ6VXNlcjc5MTE4OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/791189?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hermanbanken",
      "html_url": "https://github.com/hermanbanken",
      "followers_url": "https://api.github.com/users/hermanbanken/followers",
      "following_url": "https://api.github.com/users/hermanbanken/following{/other_user}",
      "gists_url": "https://api.github.com/users/hermanbanken/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hermanbanken/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hermanbanken/subscriptions",
      "organizations_url": "https://api.github.com/users/hermanbanken/orgs",
      "repos_url": "https://api.github.com/users/hermanbanken/repos",
      "events_url": "https://api.github.com/users/hermanbanken/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hermanbanken/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 133578714,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/tests",
        "name": "tests",
        "color": "944008",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-06-16T11:06:19Z",
    "updated_at": "2020-06-29T12:54:51Z",
    "closed_at": "2020-06-29T05:03:43Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4318",
      "html_url": "https://github.com/expressjs/express/pull/4318",
      "diff_url": "https://github.com/expressjs/express/pull/4318.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4318.patch",
      "merged_at": null
    },
    "body": "The `req.accepts` function should allow modifiers (other than quality `q`).",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4318/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4318/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4315",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4315/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4315/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4315/events",
    "html_url": "https://github.com/expressjs/express/pull/4315",
    "id": 638422133,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDM0MTk2MDI0",
    "number": 4315,
    "title": "docs: fix markdown links",
    "user": {
      "login": "NotMoni",
      "id": 40552237,
      "node_id": "MDQ6VXNlcjQwNTUyMjM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/40552237?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NotMoni",
      "html_url": "https://github.com/NotMoni",
      "followers_url": "https://api.github.com/users/NotMoni/followers",
      "following_url": "https://api.github.com/users/NotMoni/following{/other_user}",
      "gists_url": "https://api.github.com/users/NotMoni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NotMoni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NotMoni/subscriptions",
      "organizations_url": "https://api.github.com/users/NotMoni/orgs",
      "repos_url": "https://api.github.com/users/NotMoni/repos",
      "events_url": "https://api.github.com/users/NotMoni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NotMoni/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-06-14T20:14:03Z",
    "updated_at": "2020-06-29T04:59:18Z",
    "closed_at": "2020-06-29T04:59:18Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4315",
      "html_url": "https://github.com/expressjs/express/pull/4315",
      "diff_url": "https://github.com/expressjs/express/pull/4315.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4315.patch",
      "merged_at": "2020-06-29T04:59:18Z"
    },
    "body": "Signed-off-by: Moni <usmoni@gmail.com>\r\n\r\nI think these links are not correctly placed.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4315/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4315/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4314",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4314/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4314/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4314/events",
    "html_url": "https://github.com/expressjs/express/issues/4314",
    "id": 638419446,
    "node_id": "MDU6SXNzdWU2Mzg0MTk0NDY=",
    "number": 4314,
    "title": "Title: Request triager role for notmoni",
    "user": {
      "login": "NotMoni",
      "id": 40552237,
      "node_id": "MDQ6VXNlcjQwNTUyMjM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/40552237?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NotMoni",
      "html_url": "https://github.com/NotMoni",
      "followers_url": "https://api.github.com/users/NotMoni/followers",
      "following_url": "https://api.github.com/users/NotMoni/following{/other_user}",
      "gists_url": "https://api.github.com/users/NotMoni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NotMoni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NotMoni/subscriptions",
      "organizations_url": "https://api.github.com/users/NotMoni/orgs",
      "repos_url": "https://api.github.com/users/NotMoni/repos",
      "events_url": "https://api.github.com/users/NotMoni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NotMoni/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2020-06-14T19:56:37Z",
    "updated_at": "2020-06-16T01:37:58Z",
    "closed_at": "2020-06-16T00:45:47Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "I have read and understood the project's Code of Conduct.\r\nI also have read and understood the process and best practices around Express triaging.\r\n\r\nI request for a triage role for the following GitHub organizations:\r\n \r\njshttp\r\npillarjs\r\nexpress",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4314/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4314/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4313",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4313/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4313/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4313/events",
    "html_url": "https://github.com/expressjs/express/issues/4313",
    "id": 638389738,
    "node_id": "MDU6SXNzdWU2MzgzODk3Mzg=",
    "number": 4313,
    "title": "req.body returning empty data {}",
    "user": {
      "login": "Epsilon-Rashmi",
      "id": 32195555,
      "node_id": "MDQ6VXNlcjMyMTk1NTU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/32195555?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Epsilon-Rashmi",
      "html_url": "https://github.com/Epsilon-Rashmi",
      "followers_url": "https://api.github.com/users/Epsilon-Rashmi/followers",
      "following_url": "https://api.github.com/users/Epsilon-Rashmi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Epsilon-Rashmi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Epsilon-Rashmi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Epsilon-Rashmi/subscriptions",
      "organizations_url": "https://api.github.com/users/Epsilon-Rashmi/orgs",
      "repos_url": "https://api.github.com/users/Epsilon-Rashmi/repos",
      "events_url": "https://api.github.com/users/Epsilon-Rashmi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Epsilon-Rashmi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-06-14T16:56:44Z",
    "updated_at": "2020-06-16T11:35:45Z",
    "closed_at": "2020-06-16T11:35:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am using Express **_4.16.1_** version.\r\n\r\n**Express code:**\r\n`const express = require('express');\r\nconst app = express();\r\n\r\napp.use(express.urlencoded({ extended: false }));\r\napp.use(express.json());\r\napp.post('/', (req, res) => {\r\n    console.log(req.body);// **returns {}**\r\n    res.send('this works');\r\n  });`\r\n\r\n**ReactJS code:**\r\n`export function loginAuth(data) {\r\n    const url='http://localhost:3001/';\r\n    return fetch(url, {\r\n        method: 'POST',\r\n        mode: 'no-cors',\r\n        body: data,\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }).then(res => {\r\n        console.log(res);\r\n        return res;\r\n    }).catch(err => err);\r\n}`",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4313/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4313/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4312",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4312/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4312/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4312/events",
    "html_url": "https://github.com/expressjs/express/issues/4312",
    "id": 636567178,
    "node_id": "MDU6SXNzdWU2MzY1NjcxNzg=",
    "number": 4312,
    "title": "Variable passed in to EJS doesn't get defined",
    "user": {
      "login": "OMGerCoder",
      "id": 49702530,
      "node_id": "MDQ6VXNlcjQ5NzAyNTMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/49702530?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/OMGerCoder",
      "html_url": "https://github.com/OMGerCoder",
      "followers_url": "https://api.github.com/users/OMGerCoder/followers",
      "following_url": "https://api.github.com/users/OMGerCoder/following{/other_user}",
      "gists_url": "https://api.github.com/users/OMGerCoder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/OMGerCoder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/OMGerCoder/subscriptions",
      "organizations_url": "https://api.github.com/users/OMGerCoder/orgs",
      "repos_url": "https://api.github.com/users/OMGerCoder/repos",
      "events_url": "https://api.github.com/users/OMGerCoder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/OMGerCoder/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-06-10T21:39:43Z",
    "updated_at": "2020-06-14T12:26:39Z",
    "closed_at": "2020-06-14T12:26:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4312/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4312/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4311",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4311/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4311/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4311/events",
    "html_url": "https://github.com/expressjs/express/issues/4311",
    "id": 636070485,
    "node_id": "MDU6SXNzdWU2MzYwNzA0ODU=",
    "number": 4311,
    "title": "TypeError: Converting circular structure to JSON",
    "user": {
      "login": "BumpyBill",
      "id": 62362511,
      "node_id": "MDQ6VXNlcjYyMzYyNTEx",
      "avatar_url": "https://avatars.githubusercontent.com/u/62362511?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BumpyBill",
      "html_url": "https://github.com/BumpyBill",
      "followers_url": "https://api.github.com/users/BumpyBill/followers",
      "following_url": "https://api.github.com/users/BumpyBill/following{/other_user}",
      "gists_url": "https://api.github.com/users/BumpyBill/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BumpyBill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BumpyBill/subscriptions",
      "organizations_url": "https://api.github.com/users/BumpyBill/orgs",
      "repos_url": "https://api.github.com/users/BumpyBill/repos",
      "events_url": "https://api.github.com/users/BumpyBill/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BumpyBill/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2020-06-10T09:01:18Z",
    "updated_at": "2021-10-23T13:01:43Z",
    "closed_at": "2020-06-10T15:02:45Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Im trying to send the request data, but I get an error message. Any idea on how I can fix this? (This error only occurs when I send JSON)\r\n\r\nHere is  my server.js:\r\n```js\r\nconst express = require(\"express\");\r\nconst cors = require(\"cors\");\r\nconst bodyParser = require(\"body-parser\");\r\n\r\nconst app = express();\r\n\r\n\r\napp.use(cors());\r\n\r\nconst routes = { post: require(\"./routes/post\") };\r\napp.use(\"/post\", routes.post);\r\n\r\nconst PORT = process.env.PORT || 8000;\r\n\r\n\r\napp.listen(PORT, (err) => {\r\n  if (err) console.log(err);\r\n  else console.log(`Listening On Port ${PORT}`);\r\n});\r\n```\r\nAnd here is my routes/post.js (where the main issue is I believe):\r\n```js\r\nconst router = require(\"express\").Router();\r\n\r\nrouter.post(\"/example\", (req, res) => {\r\n  res.json(req);\r\n});\r\n\r\nmodule.exports = router;\r\n\r\n```\r\n\r\nEdit: Here's the error message:\r\n```\r\nTypeError: Converting circular structure to JSON\r\n    --> starting at object with constructor 'Socket'\r\n    |     property 'parser' -> object with constructor 'HTTPParser'\r\n    --- property 'socket' closes the circle\r\n    at JSON.stringify (<anonymous>)\r\n    at C:\\Users\\624234\\Documents\\ExpressTemplate\\server\\routes\\post.js:4:17\r\n    at Layer.handle [as handle_request] (C:\\Users\\624234\\Documents\\ExpressTemplate\\node_modules\\express\\lib\\router\\layer.js:95:5)\r\n    at next (C:\\Users\\624234\\Documents\\ExpressTemplate\\node_modules\\express\\lib\\router\\route.js:137:13)\r\n    at Route.dispatch (C:\\Users\\624234\\Documents\\ExpressTemplate\\node_modules\\express\\lib\\router\\route.js:112:3)\r\n    at Layer.handle [as handle_request] (C:\\Users\\624234\\Documents\\ExpressTemplate\\node_modules\\express\\lib\\router\\layer.js:95:5)\r\n    at C:\\Users\\624234\\Documents\\ExpressTemplate\\node_modules\\express\\lib\\router\\index.js:281:22\r\n    at Function.process_params (C:\\Users\\624234\\Documents\\ExpressTemplate\\node_modules\\express\\lib\\router\\index.js:335:12)\r\n    at next (C:\\Users\\624234\\Documents\\ExpressTemplate\\node_modules\\express\\lib\\router\\index.js:275:10)\r\n    at Function.handle (C:\\Users\\624234\\Documents\\ExpressTemplate\\node_modules\\express\\lib\\router\\index.js:174:3)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4311/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4311/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4310",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4310/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4310/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4310/events",
    "html_url": "https://github.com/expressjs/express/issues/4310",
    "id": 635045545,
    "node_id": "MDU6SXNzdWU2MzUwNDU1NDU=",
    "number": 4310,
    "title": "Get full root-relative request route path (req.route.path) without params",
    "user": {
      "login": "pqvst",
      "id": 4990657,
      "node_id": "MDQ6VXNlcjQ5OTA2NTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4990657?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pqvst",
      "html_url": "https://github.com/pqvst",
      "followers_url": "https://api.github.com/users/pqvst/followers",
      "following_url": "https://api.github.com/users/pqvst/following{/other_user}",
      "gists_url": "https://api.github.com/users/pqvst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pqvst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pqvst/subscriptions",
      "organizations_url": "https://api.github.com/users/pqvst/orgs",
      "repos_url": "https://api.github.com/users/pqvst/repos",
      "events_url": "https://api.github.com/users/pqvst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pqvst/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-06-09T01:46:38Z",
    "updated_at": "2020-06-09T01:50:41Z",
    "closed_at": "2020-06-09T01:50:40Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Given the following example application, the first route (attached directly to the application) produces the full root-relative route path: `/foo/:bar`\r\n\r\nThe second route, which uses a router with a prefix path `/api`, returns the route path relative to the scope of the router: `/hello/:world`\r\n\r\nFor logging purposes, is there any way to generate the \"full\" root-relative route path (without params filled in) inside a router? I.e. `/api/hello/:world`\r\n\r\nIs there any introspection mechanism that would allow me to get the router's prefix from within the router itself? E.x. `router.prefix + req.route.path`\r\n\r\n```\r\nconst express = require('express');\r\n\r\nconst app = express();\r\n\r\napp.get('/foo/:bar', (req, res) => {\r\n  console.log(req.route.path); // --> /foo/:bar\r\n  res.json(req.params);\r\n});\r\n\r\nconst router = express.Router();\r\n\r\nrouter.get('/hello/:world', (req, res) => {\r\n  console.log(req.route.path); // --> /hello/:world\r\n  res.json(req.params);\r\n})\r\n\r\napp.use('/api', router);\r\n\r\napp.listen(8888);\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4310/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4310/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4309",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4309/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4309/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4309/events",
    "html_url": "https://github.com/expressjs/express/issues/4309",
    "id": 634933562,
    "node_id": "MDU6SXNzdWU2MzQ5MzM1NjI=",
    "number": 4309,
    "title": "URI Error is creating 500 instead of 400",
    "user": {
      "login": "skapoor",
      "id": 126069,
      "node_id": "MDQ6VXNlcjEyNjA2OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126069?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/skapoor",
      "html_url": "https://github.com/skapoor",
      "followers_url": "https://api.github.com/users/skapoor/followers",
      "following_url": "https://api.github.com/users/skapoor/following{/other_user}",
      "gists_url": "https://api.github.com/users/skapoor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/skapoor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/skapoor/subscriptions",
      "organizations_url": "https://api.github.com/users/skapoor/orgs",
      "repos_url": "https://api.github.com/users/skapoor/repos",
      "events_url": "https://api.github.com/users/skapoor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/skapoor/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-06-08T21:04:36Z",
    "updated_at": "2020-06-10T12:36:37Z",
    "closed_at": "2020-06-10T12:36:37Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "As per this code, it should create 400 error for bad url but it generates 500 which is not expected.\r\n\r\nhttps://github.com/expressjs/express/blob/master/lib/router/layer.js#L175-L176\r\n\r\n```\r\nURIError: URI malformed\r\n    at decodeURIComponent (<anonymous>)\r\n    at decode_param <scrubbed>/node_modules/express/lib/router/layer.js:172:12)\r\n    at Layer.match <scrubbed>/node_modules/express/lib/router/layer.js:123:27)\r\n    at matchLayer <scrubbed>/node_modules/express/lib/router/index.js:574:18)\r\n    at next <scrubbed>/node_modules/express/lib/router/index.js:220:15)\r\n    at app.use <scrubbed>/index.js:274:5)\r\n    at Layer.handle [as handle_request] <scrubbed>/node_modules/express/lib/router/layer.js:95:5)\r\n    at trim_prefix <scrubbed>/node_modules/express/lib/router/index.js:317:13)\r\n    at <scrubbed>/node_modules/express/lib/router/index.js:284:7\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4309/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4309/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4308",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4308/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4308/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4308/events",
    "html_url": "https://github.com/expressjs/express/issues/4308",
    "id": 634075367,
    "node_id": "MDU6SXNzdWU2MzQwNzUzNjc=",
    "number": 4308,
    "title": "Route to different query",
    "user": {
      "login": "cybersteffie",
      "id": 42489159,
      "node_id": "MDQ6VXNlcjQyNDg5MTU5",
      "avatar_url": "https://avatars.githubusercontent.com/u/42489159?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cybersteffie",
      "html_url": "https://github.com/cybersteffie",
      "followers_url": "https://api.github.com/users/cybersteffie/followers",
      "following_url": "https://api.github.com/users/cybersteffie/following{/other_user}",
      "gists_url": "https://api.github.com/users/cybersteffie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cybersteffie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cybersteffie/subscriptions",
      "organizations_url": "https://api.github.com/users/cybersteffie/orgs",
      "repos_url": "https://api.github.com/users/cybersteffie/repos",
      "events_url": "https://api.github.com/users/cybersteffie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cybersteffie/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-06-08T03:42:59Z",
    "updated_at": "2020-06-10T12:35:46Z",
    "closed_at": "2020-06-10T12:35:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello, I'm having a more difficult time than anticipated doing a conditional redirect with my Express/Next setup.\r\n\r\nI am using i18n for the locale queries.\r\n\r\nI want any page with `?lng=jp` query to redirect to `?lng=ja` -- I thought this would be fairly simple but running into headaches.\r\n\r\nThis is my `route.js`:\r\n```\r\nconst { Router } = require(\"express\");\r\nrequire(\"dotenv\").config();\r\n\r\nconst routes = Router();\r\n\r\nroutes.get(\"/:slug\", (req, res)=> {\r\n  const { lng } = req.query;\r\n  const { slug } = req.params;\r\n\r\n    console.log({ lng });\r\n    console.log({path});\r\n\r\nif (lng == \"jp\") res.redirect(`/${slug}?lng=ja`);\r\nif (!lng || !(lng == \"jp\")) res.location(`/${slug?lng=en}`)\r\n})\r\n```\r\n\r\nGoing to `/whatever?lng=jp` never resolves. I realize this is going into a continuous loop, what method can I use to stay on the said page without triggering the get request again?\r\n\r\nWould really appreciate any pointers for this basic question. >___<",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4308/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4308/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4307",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4307/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4307/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4307/events",
    "html_url": "https://github.com/expressjs/express/issues/4307",
    "id": 632580983,
    "node_id": "MDU6SXNzdWU2MzI1ODA5ODM=",
    "number": 4307,
    "title": "Error: Can't set headers after they are sent. (Error not useful)...",
    "user": {
      "login": "onzag",
      "id": 10426555,
      "node_id": "MDQ6VXNlcjEwNDI2NTU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10426555?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onzag",
      "html_url": "https://github.com/onzag",
      "followers_url": "https://api.github.com/users/onzag/followers",
      "following_url": "https://api.github.com/users/onzag/following{/other_user}",
      "gists_url": "https://api.github.com/users/onzag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onzag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onzag/subscriptions",
      "organizations_url": "https://api.github.com/users/onzag/orgs",
      "repos_url": "https://api.github.com/users/onzag/repos",
      "events_url": "https://api.github.com/users/onzag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onzag/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 12,
    "created_at": "2020-06-06T16:44:31Z",
    "updated_at": "2020-06-09T10:16:51Z",
    "closed_at": "2020-06-06T17:21:11Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Yes I can see some piece of code there's something wrong, however this is my error stack:\r\n\r\n```\r\nat SendStream.headersAlreadySent (/home/onza/workspaces/main/node_modules/send/index.js:390:13)\r\n    at SendStream.send (/home/onza/workspaces/main/node_modules/send/index.js:617:10)\r\n    at onstat (/home/onza/workspaces/main/node_modules/send/index.js:729:10)\r\n    at FSReqCallback.oncomplete (fs.js:159:5)\r\n```\r\nI can't look my several hundred over several thousand files of setHeader calls to see where the error lays, at least some pointer must be provided, what was it trying to set the header to?... which header was it?... what was the endpoint?...",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4307/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4307/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4305",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4305/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4305/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4305/events",
    "html_url": "https://github.com/expressjs/express/pull/4305",
    "id": 631109248,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDI4MDU4Mjkx",
    "number": 4305,
    "title": "Identify Framework is Express",
    "user": {
      "login": "winstonhowessc",
      "id": 19860348,
      "node_id": "MDQ6VXNlcjE5ODYwMzQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/19860348?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winstonhowessc",
      "html_url": "https://github.com/winstonhowessc",
      "followers_url": "https://api.github.com/users/winstonhowessc/followers",
      "following_url": "https://api.github.com/users/winstonhowessc/following{/other_user}",
      "gists_url": "https://api.github.com/users/winstonhowessc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winstonhowessc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winstonhowessc/subscriptions",
      "organizations_url": "https://api.github.com/users/winstonhowessc/orgs",
      "repos_url": "https://api.github.com/users/winstonhowessc/repos",
      "events_url": "https://api.github.com/users/winstonhowessc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winstonhowessc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 163600,
        "node_id": "MDU6TGFiZWwxNjM2MDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2020-06-04T20:02:24Z",
    "updated_at": "2021-12-30T20:40:35Z",
    "closed_at": "2021-12-30T16:59:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4305",
      "html_url": "https://github.com/expressjs/express/pull/4305",
      "diff_url": "https://github.com/expressjs/express/pull/4305.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4305.patch",
      "merged_at": null
    },
    "body": "Adding a `name` property to the express application will enable libraries which take in `app`s from a number of different frameworks to easily identify which framework is running and take appropriate action. Alternatively, the property could be called `framework` and be an explicit property set in `init` or during the `app` variable declaration.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4305/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4305/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4304",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4304/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4304/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4304/events",
    "html_url": "https://github.com/expressjs/express/issues/4304",
    "id": 630986932,
    "node_id": "MDU6SXNzdWU2MzA5ODY5MzI=",
    "number": 4304,
    "title": "express static fail to serve files with two dots in their filename",
    "user": {
      "login": "max-hk",
      "id": 35831069,
      "node_id": "MDQ6VXNlcjM1ODMxMDY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/35831069?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-hk",
      "html_url": "https://github.com/max-hk",
      "followers_url": "https://api.github.com/users/max-hk/followers",
      "following_url": "https://api.github.com/users/max-hk/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-hk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-hk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-hk/subscriptions",
      "organizations_url": "https://api.github.com/users/max-hk/orgs",
      "repos_url": "https://api.github.com/users/max-hk/repos",
      "events_url": "https://api.github.com/users/max-hk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-hk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-06-04T16:43:10Z",
    "updated_at": "2020-06-05T05:39:25Z",
    "closed_at": "2020-06-05T05:39:25Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In a simple express app like this,\r\n\r\n```\r\nimport express from 'express';\r\n\r\nconst app = express();\r\nconst port = process.env.PORT || 8080;\r\n\r\napp.use('/demo/', express.static('./lib/demo/'))\r\n\r\napp.listen(port, () => console.log(`App listening on port ${port}!`));\r\n```\r\n\r\nAssume that I have both `devices.css` and `devices.min.css` in the `./lib/demo/` directory, I can only access http://localhost:8080/demo/devices.css, but http://localhost:8080/demo/devices.min.css return 404 not found.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4304/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4304/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4303",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4303/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4303/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4303/events",
    "html_url": "https://github.com/expressjs/express/pull/4303",
    "id": 628866799,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDI2MzIzNTIz",
    "number": 4303,
    "title": "Updating docs",
    "user": {
      "login": "kcoleman731",
      "id": 1423931,
      "node_id": "MDQ6VXNlcjE0MjM5MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1423931?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kcoleman731",
      "html_url": "https://github.com/kcoleman731",
      "followers_url": "https://api.github.com/users/kcoleman731/followers",
      "following_url": "https://api.github.com/users/kcoleman731/following{/other_user}",
      "gists_url": "https://api.github.com/users/kcoleman731/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kcoleman731/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kcoleman731/subscriptions",
      "organizations_url": "https://api.github.com/users/kcoleman731/orgs",
      "repos_url": "https://api.github.com/users/kcoleman731/repos",
      "events_url": "https://api.github.com/users/kcoleman731/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kcoleman731/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-06-02T03:13:46Z",
    "updated_at": "2020-06-02T03:50:28Z",
    "closed_at": "2020-06-02T03:50:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4303",
      "html_url": "https://github.com/expressjs/express/pull/4303",
      "diff_url": "https://github.com/expressjs/express/pull/4303.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4303.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4303/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4303/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  }
]