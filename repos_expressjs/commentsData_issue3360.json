[
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/313948855",
    "html_url": "https://github.com/expressjs/express/issues/3360#issuecomment-313948855",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/3360",
    "id": 313948855,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzk0ODg1NQ==",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-09T19:23:37Z",
    "updated_at": "2017-07-09T19:23:37Z",
    "author_association": "MEMBER",
    "body": "Just provide a Buffer object to send, not a string:\r\n\r\nconst content = fs.readFileSync('test-foo.xlsx')\r\nres.attachment('foo.xlsx').type('xlsx').send(content)",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/313948855/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/313949004",
    "html_url": "https://github.com/expressjs/express/issues/3360#issuecomment-313949004",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/3360",
    "id": 313949004,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzk0OTAwNA==",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-09T19:26:25Z",
    "updated_at": "2017-07-09T19:26:25Z",
    "author_association": "MEMBER",
    "body": "As for why piping in the report object is not working for you, I'm not sure since I have no idea what the report variable refers to. If you can provide a complete JavaScript file that can just straight up run with a copy and paste I can see what is going on. Yes, the \"res\" object is straight up from Node.js, including the way pipe works, so it should have the same issue even if you removed Express.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/313949004/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/313950140",
    "html_url": "https://github.com/expressjs/express/issues/3360#issuecomment-313950140",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/3360",
    "id": 313950140,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzk1MDE0MA==",
    "user": {
      "login": "shaunc",
      "id": 193170,
      "node_id": "MDQ6VXNlcjE5MzE3MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/193170?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shaunc",
      "html_url": "https://github.com/shaunc",
      "followers_url": "https://api.github.com/users/shaunc/followers",
      "following_url": "https://api.github.com/users/shaunc/following{/other_user}",
      "gists_url": "https://api.github.com/users/shaunc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shaunc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shaunc/subscriptions",
      "organizations_url": "https://api.github.com/users/shaunc/orgs",
      "repos_url": "https://api.github.com/users/shaunc/repos",
      "events_url": "https://api.github.com/users/shaunc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shaunc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-09T19:47:16Z",
    "updated_at": "2017-07-09T19:47:16Z",
    "author_association": "NONE",
    "body": "@dougwilson Thanks for the fast response, and for the tip on buffer ... (though the code w/ string is the working version....) Underlying, the report is passing the response to archiver zip.pipe() -- I can see if I can untangle for you. But to cut to the chase, how can I set the default encoding, which I believe is the problem?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/313950140/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/313951048",
    "html_url": "https://github.com/expressjs/express/issues/3360#issuecomment-313951048",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/3360",
    "id": 313951048,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzk1MTA0OA==",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-09T20:04:02Z",
    "updated_at": "2017-07-09T20:04:02Z",
    "author_association": "MEMBER",
    "body": "The res object is from Node.js core and as far as I know it exposes the standard API to set the encoding for .write method. Of course if you call the .write method with a Buffer object the encoding doesn't actually matter at all.\r\n\r\nI haven't seen a .pipe call not work, so it's really weird that it isn't just working without issue. I .pipe binary things directly to res all the time and there is no need to set any encoding anywhere, so that's why I was wondering what the full code is, as i have no idea why it wouldn't just be working fine.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/313951048/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/313953084",
    "html_url": "https://github.com/expressjs/express/issues/3360#issuecomment-313953084",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/3360",
    "id": 313953084,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzk1MzA4NA==",
    "user": {
      "login": "shaunc",
      "id": 193170,
      "node_id": "MDQ6VXNlcjE5MzE3MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/193170?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shaunc",
      "html_url": "https://github.com/shaunc",
      "followers_url": "https://api.github.com/users/shaunc/followers",
      "following_url": "https://api.github.com/users/shaunc/following{/other_user}",
      "gists_url": "https://api.github.com/users/shaunc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shaunc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shaunc/subscriptions",
      "organizations_url": "https://api.github.com/users/shaunc/orgs",
      "repos_url": "https://api.github.com/users/shaunc/repos",
      "events_url": "https://api.github.com/users/shaunc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shaunc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-09T20:38:57Z",
    "updated_at": "2017-07-09T20:38:57Z",
    "author_association": "NONE",
    "body": "Ok .. here you go (excuse the typesript...): I have written 3 routines to send the data -- `pipeDirect` pipes content directly to response; `pipeVia` pipes to a file, then reads into a buffer and `send`s. `pipeViaString` pipes to file, then reads string into buffer, converts to string via \"binary\" and sends. **It turns out that `pipeDirect` and `pipeVia` both have the same problem, while `pipeViaString` works**:\r\n\r\n```typescript\r\nfunction pipeViaString (\r\n    res: express.Response, readable: NodeJS.ReadableStream) {\r\n  const fs = require('fs')\r\n  const ws = fs.createWriteStream('test-foo.xlsx')\r\n  readable.pipe(ws)\r\n  ws.on('finish', () => {\r\n    const content = fs.readFileSync('test-foo.xlsx').toString('binary')\r\n    res.send(content)\r\n  })\r\n}\r\nfunction pipeVia (\r\n    res: express.Response, readable: NodeJS.ReadableStream) {\r\n  const fs = require('fs')\r\n  const ws = fs.createWriteStream('test-foo.xlsx')\r\n  readable.pipe(ws)\r\n  ws.on('finish', () => {\r\n    const content = fs.readFileSync('test-foo.xlsx')\r\n    res.send(content)\r\n  })\r\n}\r\nfunction pipeDirect (\r\n    res: express.Response, readable: NodeJS.ReadableStream) {\r\n  readable.pipe(res)\r\n}\r\n\r\n```\r\nThe snippet to send:\r\n```typescript\r\n\r\n    const archiver = require('archiver')\r\n    const zipOptions = {forceUTC: true}\r\n    const zip = archiver('zip', {zipOptions})\r\n    pipeVia(res, zip)\r\n    zip.append('a;sdf;kajgoiwu', {name: 'foo.txt'})\r\n    zip.finalize()\r\n```\r\nThe after saving to file using `pipeVia`:\r\n```\r\n-rw-r--r--  1 shauncutts  staff   144 Jul  9 16:30 test-foo.xlsx\r\n-rw-r--r--  1 shauncutts  staff   142 Jul  9 16:30 test.xlsx\r\n ```\r\nThe `test-foo.xlsx` is \"right\". Its not merely a truncation problem:\r\n```\r\ncmp -l test-foo.xlsx test.xlsx\r\n 11 325 143\r\n 12 243 375\r\n 13 351 112\r\n 14 112   0\r\n 26   0   7\r\n 27   7   0\r\n...\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/313953084/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/313953750",
    "html_url": "https://github.com/expressjs/express/issues/3360#issuecomment-313953750",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/3360",
    "id": 313953750,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzk1Mzc1MA==",
    "user": {
      "login": "shaunc",
      "id": 193170,
      "node_id": "MDQ6VXNlcjE5MzE3MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/193170?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shaunc",
      "html_url": "https://github.com/shaunc",
      "followers_url": "https://api.github.com/users/shaunc/followers",
      "following_url": "https://api.github.com/users/shaunc/following{/other_user}",
      "gists_url": "https://api.github.com/users/shaunc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shaunc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shaunc/subscriptions",
      "organizations_url": "https://api.github.com/users/shaunc/orgs",
      "repos_url": "https://api.github.com/users/shaunc/repos",
      "events_url": "https://api.github.com/users/shaunc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shaunc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-09T20:50:46Z",
    "updated_at": "2017-07-09T20:51:28Z",
    "author_association": "NONE",
    "body": "**Update** the problem is correctable on the other end: my test code uses `superagent`:\r\n\r\n      const res = await request.post(`localhost:${PORT}/`)\r\n        .send({data})\r\n        .buffer(true)\r\n        .accept('xlsx')\r\n        .parse((res, callback) => {\r\n          const buffer: Buffer[] = []\r\n          res.on('data', chunk => {\r\n            buffer.push(chunk)\r\n          })\r\n          res.on('end', () => {\r\n            file = Buffer.concat(buffer).toString('binary')\r\n            callback(null, null)\r\n          })\r\n        })\r\n\r\nWith this code, pipeDirect and pipeVia work and pipeViaString doesn't. If I change:\r\n\r\n    file = Buffer.concat(buffer).toString('binary')\r\n\r\nto \r\n\r\n    file = Buffer.concat(buffer).toString()\r\n\r\nwhich is how I originally had it, it reverts to its original behavior as reported above. So... thanks for your help; there are some subtle issues here, but, as you say, the most straight forward useage \"just works\"!\r\n\r\n:)",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/313953750/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/313954162",
    "html_url": "https://github.com/expressjs/express/issues/3360#issuecomment-313954162",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/3360",
    "id": 313954162,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzk1NDE2Mg==",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-09T20:53:54Z",
    "updated_at": "2017-07-09T20:53:54Z",
    "author_association": "MEMBER",
    "body": "Thanks, I will check it out when I get to a computer. You definitely slimmed it down, have you tried without using Express at all and just using a direct Node.js HTTP server? That would narrow down if this is a Node.js issue or an Express issue and if I don't hear anything before I get to a computer, will be the first step I'm going to try.\r\n\r\nSomething like the following (sorry, it is basically impossible to format on the phone):\r\n\r\nrequire('http').createServer(function(req,res){\r\n    const archiver = require('archiver')\r\n    const zipOptions = {forceUTC: true}\r\n    const zip = archiver('zip', {zipOptions})\r\n    pipeVia(res, zip)\r\n    zip.append('a;sdf;kajgoiwu', {name: 'foo.txt'})\r\n    zip.finalize()\r\n}).listen(4000)",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/313954162/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/313967525",
    "html_url": "https://github.com/expressjs/express/issues/3360#issuecomment-313967525",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/3360",
    "id": 313967525,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzk2NzUyNQ==",
    "user": {
      "login": "shaunc",
      "id": 193170,
      "node_id": "MDQ6VXNlcjE5MzE3MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/193170?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shaunc",
      "html_url": "https://github.com/shaunc",
      "followers_url": "https://api.github.com/users/shaunc/followers",
      "following_url": "https://api.github.com/users/shaunc/following{/other_user}",
      "gists_url": "https://api.github.com/users/shaunc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shaunc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shaunc/subscriptions",
      "organizations_url": "https://api.github.com/users/shaunc/orgs",
      "repos_url": "https://api.github.com/users/shaunc/repos",
      "events_url": "https://api.github.com/users/shaunc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shaunc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-09T21:45:05Z",
    "updated_at": "2017-07-09T21:45:38Z",
    "author_association": "NONE",
    "body": "So AFAIK my last find solves this (modulo some documentation useful for anyone who wanders off the path in the same way I did). In think what was happening is with `pipeVia` and `pipeDirect`:\r\n\r\n    binary => (sent as) binary => (read as) UTF8 => (written incorrectly)\r\n\r\nvs `pipeAsString`:\r\n\r\n    binary => (sent as) binary encoded into UTF8 => (read as) UTF8 => (written somehow as) binary\r\n\r\nNow with my fix to reading, the first two pass through as binary the whole time (as desired), whereas `pipeViaString` sends \"binary encoded into UTF8\"\r\n\r\nI hope you are enjoying the beach somewhere! :)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/313967525/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/313972881",
    "html_url": "https://github.com/expressjs/express/issues/3360#issuecomment-313972881",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/3360",
    "id": 313972881,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzk3Mjg4MQ==",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-09T23:33:26Z",
    "updated_at": "2017-07-09T23:33:26Z",
    "author_association": "MEMBER",
    "body": "Oh, it looks like we both posted around the same time. Looks like you were able to figure it out, a `superagent` configuration issue, is that right? As for documentation, we're always happy to improve documentation, especially is a good start to begin contributions, and folks who were unfamiliar, went through some trial to figure out something, have a really good idea of what documentation would have helped them (and thus others) in that same situation.\r\n\r\nOur docs are on our website, and it's pretty much just Markdown files in https://github.com/expressjs/expressjs.com so feel free to make suggestions and we'd love to help out getting it in :)",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/313972881/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]