[
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/441942",
    "html_url": "https://github.com/expressjs/express/issues/440#issuecomment-441942",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/440",
    "id": 441942,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTk0Mg==",
    "user": {
      "login": "tj",
      "id": 25254,
      "node_id": "MDQ6VXNlcjI1MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tj",
      "html_url": "https://github.com/tj",
      "followers_url": "https://api.github.com/users/tj/followers",
      "following_url": "https://api.github.com/users/tj/following{/other_user}",
      "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
      "organizations_url": "https://api.github.com/users/tj/orgs",
      "repos_url": "https://api.github.com/users/tj/repos",
      "events_url": "https://api.github.com/users/tj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-10-01T15:32:58Z",
    "updated_at": "2010-10-01T15:32:58Z",
    "author_association": "MEMBER",
    "body": "session() does not need to be before methodOverride() :p. the only rules really are _bodyDecoder()_ should be above _methodOverride()_ so it can use the body object, and _cookieDecoder()_ should be above _session()_ so it can use cookies\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/441942/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/441956",
    "html_url": "https://github.com/expressjs/express/issues/440#issuecomment-441956",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/440",
    "id": 441956,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTk1Ng==",
    "user": {
      "login": "shripadk",
      "id": 189344,
      "node_id": "MDQ6VXNlcjE4OTM0NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/189344?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shripadk",
      "html_url": "https://github.com/shripadk",
      "followers_url": "https://api.github.com/users/shripadk/followers",
      "following_url": "https://api.github.com/users/shripadk/following{/other_user}",
      "gists_url": "https://api.github.com/users/shripadk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shripadk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shripadk/subscriptions",
      "organizations_url": "https://api.github.com/users/shripadk/orgs",
      "repos_url": "https://api.github.com/users/shripadk/repos",
      "events_url": "https://api.github.com/users/shripadk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shripadk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-10-01T15:36:04Z",
    "updated_at": "2010-10-01T15:36:04Z",
    "author_association": "NONE",
    "body": "yeah? i for some reason was never able to access req.session.. kept getting undefined. anyways i am happy now that everything works fine :) great framework.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/441956/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/441977",
    "html_url": "https://github.com/expressjs/express/issues/440#issuecomment-441977",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/440",
    "id": 441977,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTk3Nw==",
    "user": {
      "login": "tj",
      "id": 25254,
      "node_id": "MDQ6VXNlcjI1MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tj",
      "html_url": "https://github.com/tj",
      "followers_url": "https://api.github.com/users/tj/followers",
      "following_url": "https://api.github.com/users/tj/following{/other_user}",
      "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
      "organizations_url": "https://api.github.com/users/tj/orgs",
      "repos_url": "https://api.github.com/users/tj/repos",
      "events_url": "https://api.github.com/users/tj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-10-01T15:41:56Z",
    "updated_at": "2010-10-01T15:41:56Z",
    "author_association": "MEMBER",
    "body": "hmm yeah it should be fine :s if not, post your middleware setup and I can try to help\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/441977/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/441980",
    "html_url": "https://github.com/expressjs/express/issues/440#issuecomment-441980",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/440",
    "id": 441980,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTk4MA==",
    "user": {
      "login": "shripadk",
      "id": 189344,
      "node_id": "MDQ6VXNlcjE4OTM0NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/189344?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shripadk",
      "html_url": "https://github.com/shripadk",
      "followers_url": "https://api.github.com/users/shripadk/followers",
      "following_url": "https://api.github.com/users/shripadk/following{/other_user}",
      "gists_url": "https://api.github.com/users/shripadk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shripadk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shripadk/subscriptions",
      "organizations_url": "https://api.github.com/users/shripadk/orgs",
      "repos_url": "https://api.github.com/users/shripadk/repos",
      "events_url": "https://api.github.com/users/shripadk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shripadk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-10-01T15:45:56Z",
    "updated_at": "2010-10-01T15:47:01Z",
    "author_association": "NONE",
    "body": "```\n    app.use(express.logger());\n    app.set('views', __dirname + '/views');\n    app.use(express.staticProvider(__dirname + '/public'));\n\n    app.use(express.cookieDecoder());\n    app.use(express.session());\n\n    app.use(express.bodyDecoder());\n    app.use(express.methodOverride());\n\n    app.use(app.router);\n    app.use(csrf.check());\n```\n\nThis is what i have right now.. works fine. :)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/441980/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/441994",
    "html_url": "https://github.com/expressjs/express/issues/440#issuecomment-441994",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/440",
    "id": 441994,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTk5NA==",
    "user": {
      "login": "tj",
      "id": 25254,
      "node_id": "MDQ6VXNlcjI1MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tj",
      "html_url": "https://github.com/tj",
      "followers_url": "https://api.github.com/users/tj/followers",
      "following_url": "https://api.github.com/users/tj/following{/other_user}",
      "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
      "organizations_url": "https://api.github.com/users/tj/orgs",
      "repos_url": "https://api.github.com/users/tj/repos",
      "events_url": "https://api.github.com/users/tj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-10-01T15:52:01Z",
    "updated_at": "2010-10-01T15:52:01Z",
    "author_association": "MEMBER",
    "body": "yup looks good :)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/441994/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/443204",
    "html_url": "https://github.com/expressjs/express/issues/440#issuecomment-443204",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/440",
    "id": 443204,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzIwNA==",
    "user": {
      "login": "shripadk",
      "id": 189344,
      "node_id": "MDQ6VXNlcjE4OTM0NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/189344?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shripadk",
      "html_url": "https://github.com/shripadk",
      "followers_url": "https://api.github.com/users/shripadk/followers",
      "following_url": "https://api.github.com/users/shripadk/following{/other_user}",
      "gists_url": "https://api.github.com/users/shripadk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shripadk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shripadk/subscriptions",
      "organizations_url": "https://api.github.com/users/shripadk/orgs",
      "repos_url": "https://api.github.com/users/shripadk/repos",
      "events_url": "https://api.github.com/users/shripadk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shripadk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-10-02T04:34:39Z",
    "updated_at": "2010-10-02T04:34:39Z",
    "author_association": "NONE",
    "body": "Nope! it still did not work with express-csrf! This is the corrected middleware setup!\n\n```\n    app.use(express.logger());\n\n    app.set('views', __dirname + '/views');\n    app.use(express.staticProvider(__dirname + '/public'));\n\n    app.use(express.bodyDecoder());\n    app.use(express.cookieDecoder());\n    app.use(express.session());\n    app.use(csrf.check());\n\n    app.use(express.methodOverride());\n\n    app.use(app.router);\n```\n\nAfter throwing a lot of `console.log` statements i realized that csrf returned `undefined` for both `req.body` & `req.session` with my previous setup! This works perfect now.. I really think you need to put up a doc for the ordering of the middleware. :)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/443204/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/443218",
    "html_url": "https://github.com/expressjs/express/issues/440#issuecomment-443218",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/440",
    "id": 443218,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzIxOA==",
    "user": {
      "login": "tj",
      "id": 25254,
      "node_id": "MDQ6VXNlcjI1MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tj",
      "html_url": "https://github.com/tj",
      "followers_url": "https://api.github.com/users/tj/followers",
      "following_url": "https://api.github.com/users/tj/following{/other_user}",
      "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
      "organizations_url": "https://api.github.com/users/tj/orgs",
      "repos_url": "https://api.github.com/users/tj/repos",
      "events_url": "https://api.github.com/users/tj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-10-02T04:49:52Z",
    "updated_at": "2010-10-02T04:49:52Z",
    "author_association": "MEMBER",
    "body": "I havent used that middleware, but yeah you do need to think about the ordering. if you have it below app.router then your routes will take precedence :p\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/443218/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/443222",
    "html_url": "https://github.com/expressjs/express/issues/440#issuecomment-443222",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/440",
    "id": 443222,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzIyMg==",
    "user": {
      "login": "shripadk",
      "id": 189344,
      "node_id": "MDQ6VXNlcjE4OTM0NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/189344?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shripadk",
      "html_url": "https://github.com/shripadk",
      "followers_url": "https://api.github.com/users/shripadk/followers",
      "following_url": "https://api.github.com/users/shripadk/following{/other_user}",
      "gists_url": "https://api.github.com/users/shripadk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shripadk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shripadk/subscriptions",
      "organizations_url": "https://api.github.com/users/shripadk/orgs",
      "repos_url": "https://api.github.com/users/shripadk/repos",
      "events_url": "https://api.github.com/users/shripadk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shripadk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-10-02T04:54:51Z",
    "updated_at": "2010-10-02T04:54:51Z",
    "author_association": "NONE",
    "body": "So if i had to implement before/after filters, then i can do something like this (trivial case; correct me if i am wrong):\n\n```\napp.use(filter.before());\napp.use(app.router);\napp.use(filter.after());\n```\n\nOr is there a better way of implementing filters?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/443222/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/443711",
    "html_url": "https://github.com/expressjs/express/issues/440#issuecomment-443711",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/440",
    "id": 443711,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzcxMQ==",
    "user": {
      "login": "tj",
      "id": 25254,
      "node_id": "MDQ6VXNlcjI1MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tj",
      "html_url": "https://github.com/tj",
      "followers_url": "https://api.github.com/users/tj/followers",
      "following_url": "https://api.github.com/users/tj/following{/other_user}",
      "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
      "organizations_url": "https://api.github.com/users/tj/orgs",
      "repos_url": "https://api.github.com/users/tj/repos",
      "events_url": "https://api.github.com/users/tj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2010-10-02T16:41:06Z",
    "updated_at": "2010-10-02T16:41:06Z",
    "author_association": "MEMBER",
    "body": "before would work, after would not unless no middleware before it responds. There is no (good) way to take action as a response is occurring in node, since there is not really a common exit point (not always through _res.send()_ etc). that being said some middleware proxy writeHead() in order to perform actions on response, logger() for example, but the ordering is very important in some cases. if you want to log _everything_ place logger() at the very top, if you want it to ignore favicons place favicon() above logger() for example\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/443711/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]