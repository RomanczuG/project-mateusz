[
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/775451092",
    "html_url": "https://github.com/expressjs/express/issues/4525#issuecomment-775451092",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/4525",
    "id": 775451092,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NTQ1MTA5Mg==",
    "user": {
      "login": "rodion-arr",
      "id": 5843270,
      "node_id": "MDQ6VXNlcjU4NDMyNzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5843270?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rodion-arr",
      "html_url": "https://github.com/rodion-arr",
      "followers_url": "https://api.github.com/users/rodion-arr/followers",
      "following_url": "https://api.github.com/users/rodion-arr/following{/other_user}",
      "gists_url": "https://api.github.com/users/rodion-arr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rodion-arr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rodion-arr/subscriptions",
      "organizations_url": "https://api.github.com/users/rodion-arr/orgs",
      "repos_url": "https://api.github.com/users/rodion-arr/repos",
      "events_url": "https://api.github.com/users/rodion-arr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rodion-arr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-08T20:49:56Z",
    "updated_at": "2021-02-08T20:49:56Z",
    "author_association": "MEMBER",
    "body": "Hi @moezemara! Requests are saving theirs contexts during async operations, so you shouldn’t face such kind of issues. If you’ll be able to provide some reproducible example - it will be interesting to check ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/775451092/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/775735971",
    "html_url": "https://github.com/expressjs/express/issues/4525#issuecomment-775735971",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/4525",
    "id": 775735971,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NTczNTk3MQ==",
    "user": {
      "login": "moezemara",
      "id": 39069875,
      "node_id": "MDQ6VXNlcjM5MDY5ODc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/39069875?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/moezemara",
      "html_url": "https://github.com/moezemara",
      "followers_url": "https://api.github.com/users/moezemara/followers",
      "following_url": "https://api.github.com/users/moezemara/following{/other_user}",
      "gists_url": "https://api.github.com/users/moezemara/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/moezemara/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/moezemara/subscriptions",
      "organizations_url": "https://api.github.com/users/moezemara/orgs",
      "repos_url": "https://api.github.com/users/moezemara/repos",
      "events_url": "https://api.github.com/users/moezemara/events{/privacy}",
      "received_events_url": "https://api.github.com/users/moezemara/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-09T07:35:51Z",
    "updated_at": "2021-02-09T07:35:51Z",
    "author_association": "NONE",
    "body": "> Hi @moezemara! Requests are saving theirs contexts during async operations, so you shouldn’t face such kind of issues. If you’ll be able to provide some reproducible example - it will be interesting to check\r\n\r\nthis is the request of the outer website\r\n```js\r\nconst fetch = require(\"node-fetch\");\r\nconst config = require(\"../../../config/configs\")\r\n\r\nasync function getquestion(questionid){\r\n\tvar url =  config.url\r\n  const options = {\r\n    headers: {\r\n    'Authorization': config.Authorization,\r\n    'Accept': config.Accept,\r\n    }\r\n  };\r\n\r\n\ttry {\r\n    const response = await fetch(url, options);\r\n      json = await response.json();\r\n      return await json\r\n  }catch(error){\r\n      console.log(error);\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n\tgetquestion\r\n}\r\n```\r\n```js\r\nasync function asyncer(id){\r\n    question = await getquestion(id);\r\n    question = await question.result.content.content\r\n    return [question, answer]\r\n}\r\n```\r\nThen the user gets response using this\r\n```js\r\nqa = await asyncer(id)\r\nif (qa){\r\n return await res.status(200).json({\r\n      success: 1,\r\n      question: qa[0],\r\n      answer: qa[1]\r\n })\r\n}\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/775735971/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/776062972",
    "html_url": "https://github.com/expressjs/express/issues/4525#issuecomment-776062972",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/4525",
    "id": 776062972,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NjA2Mjk3Mg==",
    "user": {
      "login": "rodion-arr",
      "id": 5843270,
      "node_id": "MDQ6VXNlcjU4NDMyNzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5843270?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rodion-arr",
      "html_url": "https://github.com/rodion-arr",
      "followers_url": "https://api.github.com/users/rodion-arr/followers",
      "following_url": "https://api.github.com/users/rodion-arr/following{/other_user}",
      "gists_url": "https://api.github.com/users/rodion-arr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rodion-arr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rodion-arr/subscriptions",
      "organizations_url": "https://api.github.com/users/rodion-arr/orgs",
      "repos_url": "https://api.github.com/users/rodion-arr/repos",
      "events_url": "https://api.github.com/users/rodion-arr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rodion-arr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-09T16:25:25Z",
    "updated_at": "2021-02-09T16:25:25Z",
    "author_association": "MEMBER",
    "body": "I assume your issue raised due  to not all variables declared in lexical scope. It is not an issue with `express` nor Node.js - it is a nature of pure JS: you need to use `var/let/const` for variables - otherwise global variables will be created implicitly.\r\n\r\nPlease try following updated code with proper variables declaration:\r\n```javascript\r\nconst fetch = require(\"node-fetch\");\r\nconst config = require(\"../../../config/configs\")\r\n\r\nasync function getquestion (questionid) {\r\n  const url = config.url\r\n  const options = {\r\n    headers: {\r\n      'Authorization': config.Authorization,\r\n      'Accept': config.Accept,\r\n    }\r\n  };\r\n\r\n  try {\r\n    const response = await fetch(url, options);\r\n    const json = await response.json();\r\n    return json;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  getquestion\r\n}\r\n```\r\n\r\n```javascript\r\nasync function asyncer(id){\r\n  const response = await getquestion(id);\r\n  const question = response.result.content.content\r\n  const answer = null; // answer should be defined in case it not global variable\r\n  return [question, answer]\r\n}\r\n```\r\n\r\n```javascript\r\nconst qa = await asyncer(id)\r\nif (qa) {\r\n return await res.status(200).json({\r\n      success: 1,\r\n      question: qa[0],\r\n      answer: qa[1]\r\n })\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/776062972/reactions",
      "total_count": 3,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/776299714",
    "html_url": "https://github.com/expressjs/express/issues/4525#issuecomment-776299714",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/4525",
    "id": 776299714,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NjI5OTcxNA==",
    "user": {
      "login": "moezemara",
      "id": 39069875,
      "node_id": "MDQ6VXNlcjM5MDY5ODc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/39069875?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/moezemara",
      "html_url": "https://github.com/moezemara",
      "followers_url": "https://api.github.com/users/moezemara/followers",
      "following_url": "https://api.github.com/users/moezemara/following{/other_user}",
      "gists_url": "https://api.github.com/users/moezemara/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/moezemara/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/moezemara/subscriptions",
      "organizations_url": "https://api.github.com/users/moezemara/orgs",
      "repos_url": "https://api.github.com/users/moezemara/repos",
      "events_url": "https://api.github.com/users/moezemara/events{/privacy}",
      "received_events_url": "https://api.github.com/users/moezemara/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-09T22:56:34Z",
    "updated_at": "2021-02-09T22:56:34Z",
    "author_association": "NONE",
    "body": "> I assume your issue raised due to not all variables declared in lexical scope. It is not an issue with `express` nor Node.js - it is a nature of pure JS: you need to use `var/let/const` for variables - otherwise global variables will be created implicitly.\r\n> \r\n> Please try following updated code with proper variables declaration:\r\n> \r\n> ```js\r\n> const fetch = require(\"node-fetch\");\r\n> const config = require(\"../../../config/configs\")\r\n> \r\n> async function getquestion (questionid) {\r\n>   const url = config.url\r\n>   const options = {\r\n>     headers: {\r\n>       'Authorization': config.Authorization,\r\n>       'Accept': config.Accept,\r\n>     }\r\n>   };\r\n> \r\n>   try {\r\n>     const response = await fetch(url, options);\r\n>     const json = await response.json();\r\n>     return json;\r\n>   } catch (error) {\r\n>     console.log(error);\r\n>   }\r\n> }\r\n> \r\n> module.exports = {\r\n>   getquestion\r\n> }\r\n> ```\r\n> \r\n> ```js\r\n> async function asyncer(id){\r\n>   const response = await getquestion(id);\r\n>   const question = response.result.content.content\r\n>   const answer = null; // answer should be defined in case it not global variable\r\n>   return [question, answer]\r\n> }\r\n> ```\r\n> \r\n> ```js\r\n> const qa = await asyncer(id)\r\n> if (qa) {\r\n>  return await res.status(200).json({\r\n>       success: 1,\r\n>       question: qa[0],\r\n>       answer: qa[1]\r\n>  })\r\n> }\r\n> ```\r\n\r\nthanks a lot \r\nit's working now",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/776299714/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]