[
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/240092570",
    "html_url": "https://github.com/expressjs/express/issues/3057#issuecomment-240092570",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/3057",
    "id": 240092570,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDA5MjU3MA==",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-16T12:54:09Z",
    "updated_at": "2016-08-16T12:54:09Z",
    "author_association": "MEMBER",
    "body": "The locals are not inherited by sub apps, though some settings are. This was a miss when Express 4.0 was released, I know, as the view settings should also have never inherited to the sub apps. The way it is supposed to work is that rendering is specific to an app and does not inherit, but we bugged the initial 4.0 release to inherit the view setting, which we will get fixed in 5.0. If you want to operate within the same app domain, you should use sub routers in your example.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/240092570/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/243897056",
    "html_url": "https://github.com/expressjs/express/issues/3057#issuecomment-243897056",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/3057",
    "id": 243897056,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mzg5NzA1Ng==",
    "user": {
      "login": "artcommacode",
      "id": 1155516,
      "node_id": "MDQ6VXNlcjExNTU1MTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1155516?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/artcommacode",
      "html_url": "https://github.com/artcommacode",
      "followers_url": "https://api.github.com/users/artcommacode/followers",
      "following_url": "https://api.github.com/users/artcommacode/following{/other_user}",
      "gists_url": "https://api.github.com/users/artcommacode/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/artcommacode/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/artcommacode/subscriptions",
      "organizations_url": "https://api.github.com/users/artcommacode/orgs",
      "repos_url": "https://api.github.com/users/artcommacode/repos",
      "events_url": "https://api.github.com/users/artcommacode/events{/privacy}",
      "received_events_url": "https://api.github.com/users/artcommacode/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-31T20:50:41Z",
    "updated_at": "2016-08-31T20:50:57Z",
    "author_association": "MEMBER",
    "body": "My workaround for this is just to use `res.locals` instead:\n\n``` javascript\napp.use((req, res, next) => {\n  res.locals.appTitle = 'yay'\n  next()\n})\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/243897056/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/244740162",
    "html_url": "https://github.com/expressjs/express/issues/3057#issuecomment-244740162",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/3057",
    "id": 244740162,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDc0MDE2Mg==",
    "user": {
      "login": "antpaw",
      "id": 108543,
      "node_id": "MDQ6VXNlcjEwODU0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/108543?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/antpaw",
      "html_url": "https://github.com/antpaw",
      "followers_url": "https://api.github.com/users/antpaw/followers",
      "following_url": "https://api.github.com/users/antpaw/following{/other_user}",
      "gists_url": "https://api.github.com/users/antpaw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/antpaw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/antpaw/subscriptions",
      "organizations_url": "https://api.github.com/users/antpaw/orgs",
      "repos_url": "https://api.github.com/users/antpaw/repos",
      "events_url": "https://api.github.com/users/antpaw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/antpaw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-05T12:53:36Z",
    "updated_at": "2016-09-05T12:53:36Z",
    "author_association": "NONE",
    "body": "But isn't it better for performance and readability of code to assign a \"very static\" variable without a middleware function?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/244740162/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/244875659",
    "html_url": "https://github.com/expressjs/express/issues/3057#issuecomment-244875659",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/3057",
    "id": 244875659,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDg3NTY1OQ==",
    "user": {
      "login": "artcommacode",
      "id": 1155516,
      "node_id": "MDQ6VXNlcjExNTU1MTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1155516?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/artcommacode",
      "html_url": "https://github.com/artcommacode",
      "followers_url": "https://api.github.com/users/artcommacode/followers",
      "following_url": "https://api.github.com/users/artcommacode/following{/other_user}",
      "gists_url": "https://api.github.com/users/artcommacode/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/artcommacode/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/artcommacode/subscriptions",
      "organizations_url": "https://api.github.com/users/artcommacode/orgs",
      "repos_url": "https://api.github.com/users/artcommacode/repos",
      "events_url": "https://api.github.com/users/artcommacode/events{/privacy}",
      "received_events_url": "https://api.github.com/users/artcommacode/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-06T07:51:21Z",
    "updated_at": "2016-09-06T07:51:21Z",
    "author_association": "MEMBER",
    "body": "Possibly @antpaw, but it's the only way around it unless you do as doug suggested above and move to sub-routers (which'll be fine for the above but you may have issues if you're using different rendering logic or the like within your sub-apps). \n\nPersonally I've never found it to be an issue with either though, particularly when it comes to performance; but all my apps do database work which completely blows away any minuscule performance drop from having one more catch-all route.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/244875659/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]