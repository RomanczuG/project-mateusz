[
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/698881411",
    "html_url": "https://github.com/expressjs/express/issues/4417#issuecomment-698881411",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/4417",
    "id": 698881411,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5ODg4MTQxMQ==",
    "user": {
      "login": "rodion-arr",
      "id": 5843270,
      "node_id": "MDQ6VXNlcjU4NDMyNzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5843270?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rodion-arr",
      "html_url": "https://github.com/rodion-arr",
      "followers_url": "https://api.github.com/users/rodion-arr/followers",
      "following_url": "https://api.github.com/users/rodion-arr/following{/other_user}",
      "gists_url": "https://api.github.com/users/rodion-arr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rodion-arr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rodion-arr/subscriptions",
      "organizations_url": "https://api.github.com/users/rodion-arr/orgs",
      "repos_url": "https://api.github.com/users/rodion-arr/repos",
      "events_url": "https://api.github.com/users/rodion-arr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rodion-arr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-25T11:39:11Z",
    "updated_at": "2020-09-25T11:39:11Z",
    "author_association": "MEMBER",
    "body": "Hi,\r\nI see multiple places where you're returning `403` status so I assume your request is not signed with token or its validation failed in some way.\r\n\r\nHave you tried to run your code with `---inspect` flag or set some logs in order to debug it?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/698881411/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/698921365",
    "html_url": "https://github.com/expressjs/express/issues/4417#issuecomment-698921365",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/4417",
    "id": 698921365,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5ODkyMTM2NQ==",
    "user": {
      "login": "RukaiJohn",
      "id": 26192592,
      "node_id": "MDQ6VXNlcjI2MTkyNTky",
      "avatar_url": "https://avatars.githubusercontent.com/u/26192592?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RukaiJohn",
      "html_url": "https://github.com/RukaiJohn",
      "followers_url": "https://api.github.com/users/RukaiJohn/followers",
      "following_url": "https://api.github.com/users/RukaiJohn/following{/other_user}",
      "gists_url": "https://api.github.com/users/RukaiJohn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RukaiJohn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RukaiJohn/subscriptions",
      "organizations_url": "https://api.github.com/users/RukaiJohn/orgs",
      "repos_url": "https://api.github.com/users/RukaiJohn/repos",
      "events_url": "https://api.github.com/users/RukaiJohn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RukaiJohn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-25T13:14:46Z",
    "updated_at": "2020-09-25T13:14:46Z",
    "author_association": "NONE",
    "body": "\r\n\r\nThank you for replying. I really appreciate your time. \r\n\r\n> Have you tried to run your code with `---inspect` flag or set some logs in order to debug it?\r\n\r\nYes, but I'm still not seeing the issue. From what I read, it looks like I'm doing it correctly, but I believe there is a mirror mistake that I'm doing wrong.\r\n\r\nI believe it's in the cors, but I tried multiple different ways to do it, but everything throws a 403 error in my axios saying \"Request failed with status code 403\"\r\n\r\nI consoled logged my axios error below.\r\n\r\n config: {\r\n    url: 'http://localhost:5000/get',\r\n    method: 'get',\r\n    headers: {\r\n      Accept: 'application/json, text/plain, */*',\r\n      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjAxMDI5MTQ4LCJleHAiOjE2MDg4MDUxNDh9.ONWSevGx19eVrm9NEmkKvWcGbHTS-tbUmz5ZKRm2dsg',\r\n      'User-Agent': 'axios/0.20.0'\r\n    },\r\n    transformRequest: [ [Function: transformRequest] ],\r\n    transformResponse: [ [Function: transformResponse] ],\r\n    timeout: 0,\r\n    adapter: [Function: httpAdapter],\r\n    xsrfCookieName: 'XSRF-TOKEN',\r\n    xsrfHeaderName: 'X-XSRF-TOKEN',\r\n    maxContentLength: -1,\r\n    maxBodyLength: -1,\r\n    validateStatus: [Function: validateStatus],\r\n    data: undefined\r\n  },\r\n  request: ClientRequest {\r\n    _events: [Object: null prototype] {\r\n      socket: [Function],\r\n      abort: [Function],\r\n      aborted: [Function],\r\n      connect: [Function],\r\n      error: [Function],\r\n      timeout: [Function],\r\n      prefinish: [Function: requestOnPrefinish]\r\n    },\r\n    _eventsCount: 7,\r\n    _maxListeners: undefined,\r\n    outputData: [],\r\n    outputSize: 0,\r\n    writable: true,\r\n    _last: true,\r\n    chunkedEncoding: false,\r\n    shouldKeepAlive: false,\r\n    useChunkedEncodingByDefault: false,\r\n    sendDate: false,\r\n    _removedConnection: false,\r\n    _removedContLen: false,\r\n    _removedTE: false,\r\n    _contentLength: 0,\r\n    _hasBody: true,\r\n    _trailer: '',\r\n    finished: true,\r\n    _headerSent: true,\r\n    socket: Socket {\r\n      connecting: false,\r\n      _hadError: false,\r\n      _parent: null,\r\n      _host: 'localhost',\r\n      _readableState: [ReadableState],\r\n      readable: true,\r\n      _events: [Object: null prototype],\r\n      _eventsCount: 6,\r\n      _maxListeners: undefined,\r\n      _writableState: [WritableState],\r\n      writable: false,\r\n      allowHalfOpen: false,\r\n      _sockname: null,\r\n      _pendingData: null,\r\n      _pendingEncoding: '',\r\n      server: null,\r\n      _server: null,\r\n      parser: null,\r\n      _httpMessage: [Circular],\r\n      [Symbol(asyncId)]: 68,\r\n      [Symbol(kHandle)]: [TCP],\r\n      [Symbol(lastWriteQueueSize)]: 0,\r\n      [Symbol(timeout)]: null,\r\n      [Symbol(kBuffer)]: null,\r\n      [Symbol(kBufferCb)]: null,\r\n      [Symbol(kBufferGen)]: null,\r\n      [Symbol(kCapture)]: false,\r\n      [Symbol(kBytesRead)]: 0,\r\n      [Symbol(kBytesWritten)]: 0\r\n    },\r\n    connection: Socket {\r\n      connecting: false,\r\n      _hadError: false,\r\n      _parent: null,\r\n      _host: 'localhost',\r\n      _readableState: [ReadableState],\r\n      readable: true,\r\n      _events: [Object: null prototype],\r\n      _eventsCount: 6,\r\n      _maxListeners: undefined,\r\n      _writableState: [WritableState],\r\n      writable: false,\r\n      allowHalfOpen: false,\r\n      _sockname: null,\r\n      _pendingData: null,\r\n      _pendingEncoding: '',\r\n      server: null,\r\n      _server: null,\r\n      parser: null,\r\n      _httpMessage: [Circular],\r\n      [Symbol(asyncId)]: 68,\r\n      [Symbol(kHandle)]: [TCP],\r\n      [Symbol(lastWriteQueueSize)]: 0,\r\n      [Symbol(timeout)]: null,\r\n      [Symbol(kBuffer)]: null,\r\n      [Symbol(kBufferCb)]: null,\r\n      [Symbol(kBufferGen)]: null,\r\n      [Symbol(kCapture)]: false,\r\n      [Symbol(kBytesRead)]: 0,\r\n      [Symbol(kBytesWritten)]: 0\r\n    },\r\n    _header: 'GET /get HTTP/1.1\\r\\n' +\r\n      'Accept: application/json, text/plain, */*\\r\\n' +\r\n      'authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjAxMDI5MTQ4LCJleHAiOjE2MDg4MDUxNDh9.ONWSevGx19eVrm9NEmkKvWcGbHTS-tbUmz5ZKRm2dsg\\r\\n' +\r\n      'User-Agent: axios/0.20.0\\r\\n' +\r\n      'Host: localhost:5000\\r\\n' +\r\n      'Connection: close\\r\\n' +\r\n      '\\r\\n',\r\n    _onPendingData: [Function: noopPendingOutput],\r\n    agent: Agent {\r\n      _events: [Object: null prototype],\r\n      _eventsCount: 2,\r\n      _maxListeners: undefined,\r\n      defaultPort: 80,\r\n      protocol: 'http:',\r\n      options: [Object],\r\n      requests: {},\r\n      sockets: [Object],\r\n      freeSockets: {},\r\n      keepAliveMsecs: 1000,\r\n      keepAlive: false,\r\n      maxSockets: Infinity,\r\n      maxFreeSockets: 256,\r\n      [Symbol(kCapture)]: false\r\n    },\r\n    socketPath: undefined,\r\n    method: 'GET',\r\n    insecureHTTPParser: undefined,\r\n    path: '/get',\r\n    _ended: true,\r\n    res: IncomingMessage {\r\n      _readableState: [ReadableState],\r\n      readable: false,\r\n      _events: [Object: null prototype],\r\n      _eventsCount: 3,\r\n      _maxListeners: undefined,\r\n      socket: [Socket],\r\n      connection: [Socket],\r\n      httpVersionMajor: 1,\r\n      httpVersionMinor: 1,\r\n      httpVersion: '1.1',\r\n      complete: true,\r\n      headers: [Object],\r\n      rawHeaders: [Array],\r\n      trailers: {},\r\n      rawTrailers: [],\r\n      aborted: false,\r\n      upgrade: false,\r\n      url: '',\r\n      method: null,\r\n      statusCode: 403,\r\n      statusMessage: 'Forbidden',\r\n      client: [Socket],\r\n      _consuming: false,\r\n      _dumped: false,\r\n      req: [Circular],\r\n      responseUrl: 'http://localhost:5000/get',\r\n      redirects: [],\r\n      [Symbol(kCapture)]: false\r\n    },\r\n    aborted: false,\r\n    timeoutCb: null,\r\n    upgradeOrConnect: false,\r\n    parser: null,\r\n    maxHeadersCount: null,\r\n    reusedSocket: false,\r\n    _redirectable: Writable {\r\n      _writableState: [WritableState],\r\n      writable: true,\r\n      _events: [Object: null prototype],\r\n      _eventsCount: 2,\r\n      _maxListeners: undefined,\r\n      _options: [Object],\r\n      _ended: true,\r\n      _ending: true,\r\n      _redirectCount: 0,\r\n      _redirects: [],\r\n      _requestBodyLength: 0,\r\n      _requestBodyBuffers: [],\r\n      _onNativeResponse: [Function],\r\n      _currentRequest: [Circular],\r\n      _currentUrl: 'http://localhost:5000/get',\r\n      [Symbol(kCapture)]: false\r\n    },\r\n    [Symbol(kCapture)]: false,\r\n    [Symbol(kNeedDrain)]: false,\r\n    [Symbol(corked)]: 0,\r\n    [Symbol(kOutHeaders)]: [Object: null prototype] {\r\n      accept: [Array],\r\n      authorization: [Array],\r\n      'user-agent': [Array],\r\n      host: [Array]\r\n    }\r\n  },\r\n  response: {\r\n    status: 403,\r\n    statusText: 'Forbidden',\r\n    headers: {\r\n      'x-powered-by': 'Express',\r\n      'access-control-allow-origin': '*',\r\n      'access-control-allow-methods': 'DELETE, PUT, GET, POST',\r\n      'access-control-allow-headers': 'Origin, X-Requested-With, Content-Type, Accept',\r\n      'content-type': 'text/plain; charset=utf-8',\r\n      'content-length': '9',\r\n      etag: 'W/\"9-PatfYBLj4Um1qTm5zrukoLhNyPU\"',\r\n      date: 'Fri, 25 Sep 2020 13:11:57 GMT',\r\n      connection: 'close'\r\n    },\r\n    config: {\r\n      url: 'http://localhost:5000/get',\r\n      method: 'get',\r\n      headers: [Object],\r\n      transformRequest: [Array],\r\n      transformResponse: [Array],\r\n      timeout: 0,\r\n      adapter: [Function: httpAdapter],\r\n      xsrfCookieName: 'XSRF-TOKEN',\r\n      xsrfHeaderName: 'X-XSRF-TOKEN',\r\n      maxContentLength: -1,\r\n      maxBodyLength: -1,\r\n      validateStatus: [Function: validateStatus],\r\n      data: undefined\r\n    },\r\n    request: ClientRequest {\r\n      _events: [Object: null prototype],\r\n      _eventsCount: 7,\r\n      _maxListeners: undefined,\r\n      outputData: [],\r\n      outputSize: 0,\r\n      writable: true,\r\n      _last: true,\r\n      chunkedEncoding: false,\r\n      shouldKeepAlive: false,\r\n      useChunkedEncodingByDefault: false,\r\n      sendDate: false,\r\n      _removedConnection: false,\r\n      _removedContLen: false,\r\n      _removedTE: false,\r\n      _contentLength: 0,\r\n      _hasBody: true,\r\n      _trailer: '',\r\n      finished: true,\r\n      _headerSent: true,\r\n      socket: [Socket],\r\n      connection: [Socket],\r\n      _header: 'GET /get HTTP/1.1\\r\\n' +\r\n        'Accept: application/json, text/plain, */*\\r\\n' +\r\n        'authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjAxMDI5MTQ4LCJleHAiOjE2MDg4MDUxNDh9.ONWSevGx19eVrm9NEmkKvWcGbHTS-tbUmz5ZKRm2dsg\\r\\n' +\r\n        'User-Agent: axios/0.20.0\\r\\n' +\r\n        'Host: localhost:5000\\r\\n' +\r\n        'Connection: close\\r\\n' +\r\n        '\\r\\n',\r\n      _onPendingData: [Function: noopPendingOutput],\r\n      agent: [Agent],\r\n      socketPath: undefined,\r\n      method: 'GET',\r\n      insecureHTTPParser: undefined,\r\n      path: '/get',\r\n      _ended: true,\r\n      res: [IncomingMessage],\r\n      aborted: false,\r\n      timeoutCb: null,\r\n      upgradeOrConnect: false,\r\n      parser: null,\r\n      maxHeadersCount: null,\r\n      reusedSocket: false,\r\n      _redirectable: [Writable],\r\n      [Symbol(kCapture)]: false,\r\n      [Symbol(kNeedDrain)]: false,\r\n      [Symbol(corked)]: 0,\r\n      [Symbol(kOutHeaders)]: [Object: null prototype]\r\n    },\r\n    data: 'Forbidden'\r\n  },\r\n  isAxiosError: true,\r\n  toJSON: [Function: toJSON]\r\n}\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/698921365/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/699508757",
    "html_url": "https://github.com/expressjs/express/issues/4417#issuecomment-699508757",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/4417",
    "id": 699508757,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5OTUwODc1Nw==",
    "user": {
      "login": "krzysdz",
      "id": 12915102,
      "node_id": "MDQ6VXNlcjEyOTE1MTAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/12915102?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/krzysdz",
      "html_url": "https://github.com/krzysdz",
      "followers_url": "https://api.github.com/users/krzysdz/followers",
      "following_url": "https://api.github.com/users/krzysdz/following{/other_user}",
      "gists_url": "https://api.github.com/users/krzysdz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/krzysdz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/krzysdz/subscriptions",
      "organizations_url": "https://api.github.com/users/krzysdz/orgs",
      "repos_url": "https://api.github.com/users/krzysdz/repos",
      "events_url": "https://api.github.com/users/krzysdz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/krzysdz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-26T15:17:52Z",
    "updated_at": "2020-09-26T15:17:52Z",
    "author_association": "NONE",
    "body": "GET on `/get` calls function `authenticateToken` [1], which requires a `jwt` cookie to be set [2] and your axios request does not send any cookies [3]:\r\n\r\n```js\r\n// ...\r\napp.get(\"/get\", authenticateToken, (req, res) => { // [1] - call to authenticateToken\r\n\t// ...\r\n});\r\napp.get(\"/\", authenticateToken, (req, res) => {\r\n\t// ...\r\n\t\tlet response = await axios.get('http://localhost:5000/' + 'get', { // Request \"/get\"\r\n\t\t\twithCredentials: true,\r\n\t\t\theaders: {\r\n\t\t\t\t'Access-Control-Allow-Origin': '*',\r\n\t\t\t\t'Authorization': `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjAwOTIyMTQ0LCJleHAiOjE2MDg2OTgxNDR9.aRsw-jEQJ-7mlO10nBKA5VT3IL7P0b9T9K0C8aT8sUs`\r\n\t\t\t\t// [3] NO \"Cookie\" HEADER HERE!!!\r\n\t\t\t}\r\n\t\t});\r\n\t// ...\r\n});\r\n// ...\r\nfunction authenticateToken(req, res, next) {\r\n\tconst bearerHeader = req.cookies.jwt;      // [2.1] - cookie with name \"jwt\"\r\n\tif (typeof bearerHeader !== 'undefined') { // [2.2] - must not be undefined\r\n\t\treq.token = bearerHeader;\r\n\t\tnext();\r\n\t} else {\r\n\t\tres.sendStatus(403);\r\n\t}\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/699508757/reactions",
      "total_count": 4,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 1,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/699518112",
    "html_url": "https://github.com/expressjs/express/issues/4417#issuecomment-699518112",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/4417",
    "id": 699518112,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5OTUxODExMg==",
    "user": {
      "login": "rodion-arr",
      "id": 5843270,
      "node_id": "MDQ6VXNlcjU4NDMyNzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5843270?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rodion-arr",
      "html_url": "https://github.com/rodion-arr",
      "followers_url": "https://api.github.com/users/rodion-arr/followers",
      "following_url": "https://api.github.com/users/rodion-arr/following{/other_user}",
      "gists_url": "https://api.github.com/users/rodion-arr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rodion-arr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rodion-arr/subscriptions",
      "organizations_url": "https://api.github.com/users/rodion-arr/orgs",
      "repos_url": "https://api.github.com/users/rodion-arr/repos",
      "events_url": "https://api.github.com/users/rodion-arr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rodion-arr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-26T16:35:33Z",
    "updated_at": "2020-09-26T16:35:33Z",
    "author_association": "MEMBER",
    "body": "Closing this as it looks like not an issue in Express",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/699518112/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/699820844",
    "html_url": "https://github.com/expressjs/express/issues/4417#issuecomment-699820844",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/4417",
    "id": 699820844,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5OTgyMDg0NA==",
    "user": {
      "login": "RukaiJohn",
      "id": 26192592,
      "node_id": "MDQ6VXNlcjI2MTkyNTky",
      "avatar_url": "https://avatars.githubusercontent.com/u/26192592?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RukaiJohn",
      "html_url": "https://github.com/RukaiJohn",
      "followers_url": "https://api.github.com/users/RukaiJohn/followers",
      "following_url": "https://api.github.com/users/RukaiJohn/following{/other_user}",
      "gists_url": "https://api.github.com/users/RukaiJohn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RukaiJohn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RukaiJohn/subscriptions",
      "organizations_url": "https://api.github.com/users/RukaiJohn/orgs",
      "repos_url": "https://api.github.com/users/RukaiJohn/repos",
      "events_url": "https://api.github.com/users/RukaiJohn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RukaiJohn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-28T07:05:57Z",
    "updated_at": "2020-09-28T07:05:57Z",
    "author_association": "NONE",
    "body": "> GET on `/get` calls function `authenticateToken` [1], which requires a `jwt` cookie to be set [2] and your axios request does not send any cookies [3]:\r\n\r\nThank you for this. It works now.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/699820844/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]