[
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2962",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2962/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2962/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2962/events",
    "html_url": "https://github.com/expressjs/express/pull/2962",
    "id": 144466973,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjQ1NzMyODQ=",
    "number": 2962,
    "title": "I'm updating the `examples directory` in expressjs ",
    "user": {
      "login": "Knighton910",
      "id": 1773260,
      "node_id": "MDQ6VXNlcjE3NzMyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1773260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Knighton910",
      "html_url": "https://github.com/Knighton910",
      "followers_url": "https://api.github.com/users/Knighton910/followers",
      "following_url": "https://api.github.com/users/Knighton910/following{/other_user}",
      "gists_url": "https://api.github.com/users/Knighton910/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Knighton910/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Knighton910/subscriptions",
      "organizations_url": "https://api.github.com/users/Knighton910/orgs",
      "repos_url": "https://api.github.com/users/Knighton910/repos",
      "events_url": "https://api.github.com/users/Knighton910/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Knighton910/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2016-03-30T05:22:46Z",
    "updated_at": "2016-05-04T03:34:59Z",
    "closed_at": "2016-05-03T18:17:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2962",
      "html_url": "https://github.com/expressjs/express/pull/2962",
      "diff_url": "https://github.com/expressjs/express/pull/2962.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2962.patch",
      "merged_at": null
    },
    "body": "I will keep doing updates to express `example` folder over the next few days & weeks\n\n`This update`  updates 3 things cookie-session / hello world / jade folder\n\n-`note` I didn't change the any code, because doug told me some test depends on the code, so until i get a better understanding of what's going on with that, i just added markdown files that functions as guides\n\n`cookie-session`\\-  I just added more context to that example via the Readme file\n`hello world`\\- I took time to make it easy for new guy/girls to express, with a custom approach. \n `jade folder` I deleted it, and move the code to `pug` folder & i did a custom Readme guide. \n\nFor reference https://github.com/expressjs/express/issues/2923\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2962/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2962/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2961",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2961/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2961/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2961/events",
    "html_url": "https://github.com/expressjs/express/issues/2961",
    "id": 144439299,
    "node_id": "MDU6SXNzdWUxNDQ0MzkyOTk=",
    "number": 2961,
    "title": "Doesn't recognize express npm ",
    "user": {
      "login": "francose",
      "id": 13445813,
      "node_id": "MDQ6VXNlcjEzNDQ1ODEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/13445813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/francose",
      "html_url": "https://github.com/francose",
      "followers_url": "https://api.github.com/users/francose/followers",
      "following_url": "https://api.github.com/users/francose/following{/other_user}",
      "gists_url": "https://api.github.com/users/francose/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/francose/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/francose/subscriptions",
      "organizations_url": "https://api.github.com/users/francose/orgs",
      "repos_url": "https://api.github.com/users/francose/repos",
      "events_url": "https://api.github.com/users/francose/events{/privacy}",
      "received_events_url": "https://api.github.com/users/francose/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2016-03-30T02:06:59Z",
    "updated_at": "2016-04-04T01:44:14Z",
    "closed_at": "2016-03-30T02:55:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I get this error below whenever i npm update or upgrade. I also can not run express and mean or mern project in my computer; however when i type npm it brings me commend line for npm. None of them are working at all. I tried to remove nodejs and npm, reinstall everything . It was completely working a while ago. \n\n```\nFrancos-MacBook-Pro:test carbon$ npm  update\nnpm ERR! Darwin 15.4.0\nnpm ERR! argv \"/usr/local/Cellar/node/5.9.1/bin/node\" \"/usr/local/bin/npm\" \"update\"\nnpm ERR! node v5.9.1\nnpm ERR! npm  v3.7.3\n\nnpm ERR! No compatible version found: express@linked\nnpm ERR! Valid install targets:\nnpm ERR! 5.0.0-alpha.2, 5.0.0-alpha.1, 4.13.4, 4.13.3, 4.13.2, 4.13.1, 4.13.0, 4.12.4, 4.12.3, 4.12.2, 4.12.1, 4.12.0, 4.11.2, 4.11.1, 4.11.0, 4.10.8, 4.10.7, 4.10.6, 4.10.5, 4.10.4, 4.10.3, 4.10.2, 4.10.1, 4.10.0, 4.9.8, 4.9.7, 4.9.6, 4.9.5, 4.9.4, 4.9.3, 4.9.2, 4.9.1, 4.9.0, 4.8.8, 4.8.7, 4.8.6, 4.8.5, 4.8.4, 4.8.3, 4.8.2, 4.8.1, 4.8.0, 4.7.4, 4.7.3, 4.7.2, 4.7.1, 4.7.0, 4.6.1, 4.6.0, 4.5.1, 4.5.0, 4.4.5, 4.4.4, 4.4.3, 4.4.2, 4.4.1, 4.4.0, 4.3.2, 4.3.1, 4.3.0, 4.2.0, 4.1.2, 4.1.1, 4.1.0, 4.0.0, 4.0.0-rc4, 4.0.0-rc3, 4.0.0-rc2, 4.0.0-rc1, 3.21.2, 3.21.1, 3.21.0, 3.20.3, 3.20.2, 3.20.1, 3.20.0, 3.19.2, 3.19.1, 3.19.0, 3.18.6, 3.18.5, 3.18.4, 3.18.3, 3.18.2, 3.18.1, 3.18.0, 3.17.8, 3.17.7, 3.17.6, 3.17.5, 3.17.4, 3.17.3, 3.17.2, 3.17.1, 3.17.0, 3.16.10, 3.16.9, 3.16.8, 3.16.7, 3.16.6, 3.16.5, 3.16.4, 3.16.3, 3.16.2, 3.16.1, 3.16.0, 3.15.3, 3.15.2, 3.15.1, 3.15.0, 3.14.0, 3.13.0, 3.12.1, 3.12.0, 3.11.0, 3.10.5, 3.10.4, 3.10.3, 3.10.2, 3.10.1, 3.10.0, 3.9.0, 3.8.1, 3.8.0, 3.7.0, 3.6.0, 3.5.3, 3.5.2, 3.5.1, 3.5.0, 3.4.8, 3.4.7, 3.4.6, 3.4.5, 3.4.4, 3.4.3, 3.4.2, 3.4.1, 3.4.0, 3.3.8, 3.3.7, 3.3.6, 3.3.5, 3.3.4, 3.3.3, 3.3.2, 3.3.1, 3.3.0, 3.2.6, 3.2.5, 3.2.4, 3.2.3, 3.2.2, 3.2.1, 3.2.0, 3.1.2, 3.1.1, 3.1.0, 3.0.6, 3.0.5, 3.0.4, 3.0.3, 3.0.2, 3.0.1, 3.0.0, 3.0.0-rc5, 3.0.0-rc4, 3.0.0-rc3, 3.0.0-rc2, 3.0.0-rc1, 3.0.0-beta7, 3.0.0-beta6, 3.0.0-beta4, 3.0.0-beta3, 3.0.0-beta2, 3.0.0-beta1, 3.0.0-alpha5, 3.0.0-alpha4, 3.0.0-alpha3, 3.0.0-alpha2, 3.0.0-alpha1, 2.5.11, 2.5.10, 2.5.9, 2.5.8, 2.5.7, 2.5.6, 2.5.5, 2.5.4, 2.5.3, 2.5.2, 2.5.1, 2.5.0, 2.4.7, 2.4.6, 2.4.5, 2.4.4, 2.4.3, 2.4.2, 2.4.1, 2.4.0, 2.3.12, 2.3.11, 2.3.10, 2.3.9, 2.3.8, 2.3.7, 2.3.6, 2.3.5, 2.3.4, 2.3.3, 2.3.2, 2.3.1, 2.3.0, 2.2.2, 2.2.1, 2.2.0, 2.1.1, 2.1.0, 2.0.0, 2.0.0-rc3, 2.0.0-rc2, 2.0.0-rc, 2.0.0-beta3, 2.0.0-beta2, 2.0.0-beta, 1.0.8, 1.0.7, 1.0.6, 1.0.5, 1.0.4, 1.0.3, 1.0.2, 1.0.1, 1.0.0, 1.0.0-rc4, 1.0.0-rc3, 1.0.0-rc2, 1.0.0-rc, 1.0.0-beta2, 1.0.0-beta, 0.14.1, 0.14.0\nnpm ERR! \nnpm ERR! \nnpm ERR! If you need help, you may report this error at:\nnpm ERR!     <https://github.com/npm/npm/issues>\n\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     /Volumes/HD 2/Projects/tmp/npm-debug.log\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2961/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2961/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2960",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2960/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2960/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2960/events",
    "html_url": "https://github.com/expressjs/express/issues/2960",
    "id": 144344744,
    "node_id": "MDU6SXNzdWUxNDQzNDQ3NDQ=",
    "number": 2960,
    "title": "WARNING: Detected use of sync API at fs.statSync (fs.js:892:18)",
    "user": {
      "login": "DJviolin",
      "id": 5021728,
      "node_id": "MDQ6VXNlcjUwMjE3Mjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5021728?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DJviolin",
      "html_url": "https://github.com/DJviolin",
      "followers_url": "https://api.github.com/users/DJviolin/followers",
      "following_url": "https://api.github.com/users/DJviolin/following{/other_user}",
      "gists_url": "https://api.github.com/users/DJviolin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DJviolin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DJviolin/subscriptions",
      "organizations_url": "https://api.github.com/users/DJviolin/orgs",
      "repos_url": "https://api.github.com/users/DJviolin/repos",
      "events_url": "https://api.github.com/users/DJviolin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DJviolin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-03-29T18:13:50Z",
    "updated_at": "2016-03-29T18:41:02Z",
    "closed_at": "2016-03-29T18:28:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I enable the `--trace-sync-io` flag for Node to trace synchronous calls. It gives error for every `res.render` in my app.\n\nMaybe not connected for this error, but my express-handlebars templates only be refreshed if I restart the server.\n\nHere is the router:\n\n``` javascript\n'use strict';\n\nvar express = require('express'),\n    router  = express.Router();\n\n/* GET info page. */\nrouter.get('/', function(req, res, next) {\n  res.render('contact', {\n    titleShown: true,\n    title: 'Contact',\n    description: 'Get in touch',\n    keywords: 'info,wedding,photography,film,lantos,istvan'\n  });\n});\n\nmodule.exports = router;\n```\n\nThis is the console log:\n\n``` shell\n$ SET DEBUG=lantosistvan-portfolio:*,i18n:* & npm start\n\n> lantosistvan-portfolio@0.0.0 start C:\\www\\node\\lantosistvan\n> node --trace-deprecation --trace-sync-io ./bin/www\n\n  i18n:debug will use C:\\www\\node\\lantosistvan\\locales\\hu.json +0ms\n  i18n:debug read C:\\www\\node\\lantosistvan\\locales\\hu.json for locale: hu +5ms\n  i18n:debug will use C:\\www\\node\\lantosistvan\\locales\\en.json +3ms\n  i18n:debug read C:\\www\\node\\lantosistvan\\locales\\en.json for locale: en +1ms\n  lantosistvan-portfolio:server Listening on port 3000 +39ms\nWARNING: Detected use of sync API\n    at fs.statSync (fs.js:892:18)\n    at tryStat (C:\\www\\node\\lantosistvan\\node_modules\\express\\lib\\view.js:169:15)\n    at resolve (C:\\www\\node\\lantosistvan\\node_modules\\express\\lib\\view.js:142:14)\n    at lookup (C:\\www\\node\\lantosistvan\\node_modules\\express\\lib\\view.js:110:17)\n    at View (C:\\www\\node\\lantosistvan\\node_modules\\express\\lib\\view.js:85:20)\n    at render (C:\\www\\node\\lantosistvan\\node_modules\\express\\lib\\application.js:569:12)\n    at render (C:\\www\\node\\lantosistvan\\node_modules\\express\\lib\\response.js:961:7)\n    at C:\\www\\node\\lantosistvan\\routes\\contact.js:8:7\n    at handle (C:\\www\\node\\lantosistvan\\node_modules\\express\\lib\\router\\layer.js:95:5)\nGET /contact 304 124.912 ms - -\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2960/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2960/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2959",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2959/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2959/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2959/events",
    "html_url": "https://github.com/expressjs/express/issues/2959",
    "id": 144288984,
    "node_id": "MDU6SXNzdWUxNDQyODg5ODQ=",
    "number": 2959,
    "title": "Express is using sync APIs, node --trace-sync-io complains",
    "user": {
      "login": "afanasy",
      "id": 677646,
      "node_id": "MDQ6VXNlcjY3NzY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/677646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/afanasy",
      "html_url": "https://github.com/afanasy",
      "followers_url": "https://api.github.com/users/afanasy/followers",
      "following_url": "https://api.github.com/users/afanasy/following{/other_user}",
      "gists_url": "https://api.github.com/users/afanasy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/afanasy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/afanasy/subscriptions",
      "organizations_url": "https://api.github.com/users/afanasy/orgs",
      "repos_url": "https://api.github.com/users/afanasy/repos",
      "events_url": "https://api.github.com/users/afanasy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/afanasy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-03-29T14:51:05Z",
    "updated_at": "2016-03-30T00:07:18Z",
    "closed_at": "2016-03-29T17:19:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "... when rendering views, in this func in lib/view.js\n\n``` js\nfunction tryStat(path) {\n  debug('stat \"%s\"', path);\n\n  try {\n    return fs.statSync(path);\n  } catch (e) {\n    return undefined;\n  }\n}\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2959/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2959/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2958",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2958/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2958/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2958/events",
    "html_url": "https://github.com/expressjs/express/issues/2958",
    "id": 143839163,
    "node_id": "MDU6SXNzdWUxNDM4MzkxNjM=",
    "number": 2958,
    "title": "Catch malformed URI and send a 400 status code instead of 500",
    "user": {
      "login": "aletorrado",
      "id": 279292,
      "node_id": "MDQ6VXNlcjI3OTI5Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/279292?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aletorrado",
      "html_url": "https://github.com/aletorrado",
      "followers_url": "https://api.github.com/users/aletorrado/followers",
      "following_url": "https://api.github.com/users/aletorrado/following{/other_user}",
      "gists_url": "https://api.github.com/users/aletorrado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aletorrado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aletorrado/subscriptions",
      "organizations_url": "https://api.github.com/users/aletorrado/orgs",
      "repos_url": "https://api.github.com/users/aletorrado/repos",
      "events_url": "https://api.github.com/users/aletorrado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aletorrado/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2016-03-27T19:18:27Z",
    "updated_at": "2016-03-27T19:58:49Z",
    "closed_at": "2016-03-27T19:23:32Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi, I've noticed there was some discussion before about this, but no decision has been made yet:\n\n```\nURIError: Failed to decode param '%FF'\n    at decodeURIComponent (native)\n    at decode_param (/home/diario/webserver/node_modules/express/lib/router/layer.js:167:12)\n    at Layer.match (/home/diario/webserver/node_modules/express/lib/router/layer.js:143:15)\n    at matchLayer (/home/diario/webserver/node_modules/express/lib/router/index.js:557:18)\n    at next (/home/diario/webserver/node_modules/express/lib/router/index.js:216:15)\n```\n\nWe should catch this, as any app monitoring tool will capture this and register it as an application issue. Actually, this is an express issue.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2958/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2958/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2957",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2957/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2957/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2957/events",
    "html_url": "https://github.com/expressjs/express/pull/2957",
    "id": 143703720,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjQyMzc4MjU=",
    "number": 2957,
    "title": "Remove dependency on utils-merge",
    "user": {
      "login": "ShaneQful",
      "id": 1859598,
      "node_id": "MDQ6VXNlcjE4NTk1OTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1859598?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ShaneQful",
      "html_url": "https://github.com/ShaneQful",
      "followers_url": "https://api.github.com/users/ShaneQful/followers",
      "following_url": "https://api.github.com/users/ShaneQful/following{/other_user}",
      "gists_url": "https://api.github.com/users/ShaneQful/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ShaneQful/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ShaneQful/subscriptions",
      "organizations_url": "https://api.github.com/users/ShaneQful/orgs",
      "repos_url": "https://api.github.com/users/ShaneQful/repos",
      "events_url": "https://api.github.com/users/ShaneQful/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ShaneQful/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-03-26T13:15:26Z",
    "updated_at": "2016-03-26T16:33:07Z",
    "closed_at": "2016-03-26T16:32:37Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2957",
      "html_url": "https://github.com/expressjs/express/pull/2957",
      "diff_url": "https://github.com/expressjs/express/pull/2957.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2957.patch",
      "merged_at": null
    },
    "body": "Related to: https://github.com/expressjs/express/issues/2956\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2957/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2957/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2956",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2956/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2956/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2956/events",
    "html_url": "https://github.com/expressjs/express/issues/2956",
    "id": 143703229,
    "node_id": "MDU6SXNzdWUxNDM3MDMyMjk=",
    "number": 2956,
    "title": "Remove some of the less popular and reviewed micro modules dependencies",
    "user": {
      "login": "ShaneQful",
      "id": 1859598,
      "node_id": "MDQ6VXNlcjE4NTk1OTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1859598?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ShaneQful",
      "html_url": "https://github.com/ShaneQful",
      "followers_url": "https://api.github.com/users/ShaneQful/followers",
      "following_url": "https://api.github.com/users/ShaneQful/following{/other_user}",
      "gists_url": "https://api.github.com/users/ShaneQful/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ShaneQful/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ShaneQful/subscriptions",
      "organizations_url": "https://api.github.com/users/ShaneQful/orgs",
      "repos_url": "https://api.github.com/users/ShaneQful/repos",
      "events_url": "https://api.github.com/users/ShaneQful/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ShaneQful/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 18291,
        "node_id": "MDU6TGFiZWwxODI5MQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 20,
    "created_at": "2016-03-26T13:10:05Z",
    "updated_at": "2016-03-30T22:42:06Z",
    "closed_at": "2016-03-28T01:09:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Wanted to see if there was an appetite for this before I went ahead and did too much work on it but I think it would be a good idea to remove some of the micro package or single function dependencies which aren't heavily reviewed.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2956/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2956/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2955",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2955/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2955/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2955/events",
    "html_url": "https://github.com/expressjs/express/pull/2955",
    "id": 143618314,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjQyMTU3MDA=",
    "number": 2955,
    "title": "update",
    "user": {
      "login": "Asamaha",
      "id": 17078868,
      "node_id": "MDQ6VXNlcjE3MDc4ODY4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17078868?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Asamaha",
      "html_url": "https://github.com/Asamaha",
      "followers_url": "https://api.github.com/users/Asamaha/followers",
      "following_url": "https://api.github.com/users/Asamaha/following{/other_user}",
      "gists_url": "https://api.github.com/users/Asamaha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Asamaha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Asamaha/subscriptions",
      "organizations_url": "https://api.github.com/users/Asamaha/orgs",
      "repos_url": "https://api.github.com/users/Asamaha/repos",
      "events_url": "https://api.github.com/users/Asamaha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Asamaha/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-03-25T22:40:05Z",
    "updated_at": "2016-03-29T00:38:06Z",
    "closed_at": "2016-03-29T00:09:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2955",
      "html_url": "https://github.com/expressjs/express/pull/2955",
      "diff_url": "https://github.com/expressjs/express/pull/2955.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2955.patch",
      "merged_at": null
    },
    "body": "-    })\n  *\n  - @param {String} name\n  - \\* @param {String|Function} options or fn\n  - \\* @param {Object|Function} options or fn\n- @param {Function} callback\n- @public\n  */\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2955/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2955/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2954",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2954/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2954/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2954/events",
    "html_url": "https://github.com/expressjs/express/issues/2954",
    "id": 143532899,
    "node_id": "MDU6SXNzdWUxNDM1MzI4OTk=",
    "number": 2954,
    "title": "Not working when unspecified hostname",
    "user": {
      "login": "syuilo",
      "id": 4439005,
      "node_id": "MDQ6VXNlcjQ0MzkwMDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4439005?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/syuilo",
      "html_url": "https://github.com/syuilo",
      "followers_url": "https://api.github.com/users/syuilo/followers",
      "following_url": "https://api.github.com/users/syuilo/following{/other_user}",
      "gists_url": "https://api.github.com/users/syuilo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/syuilo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/syuilo/subscriptions",
      "organizations_url": "https://api.github.com/users/syuilo/orgs",
      "repos_url": "https://api.github.com/users/syuilo/repos",
      "events_url": "https://api.github.com/users/syuilo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/syuilo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-03-25T16:13:57Z",
    "updated_at": "2016-05-08T08:10:15Z",
    "closed_at": "2016-03-27T20:14:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Suddenly it express not working.\n\n**Full Code**:\n\n``` javascript\nvar express = require('express');\n\nvar app = express();\n\napp.get('/', function (req, res) {\n    res.send('Hello World');\n});\n\napp.listen(80);\n```\n\n![default](https://cloud.githubusercontent.com/assets/4439005/14048024/eeae02f6-f2ee-11e5-83d8-c4ef0fc4fb53.PNG)\n\n**In short**:\nOK:\n\n``` javascript\napp.listen(80, '127.0.0.1');\n```\n\nNO:\n\n``` javascript\napp.listen(80);\n```\n\n---\n\nexpress: 4.13.4\nNode.js: 5.6.0\nOS: Windows 10\n\n---\n\nSorry my bad English. Thanks!\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2954/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2954/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2953",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2953/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2953/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2953/events",
    "html_url": "https://github.com/expressjs/express/pull/2953",
    "id": 143294696,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjQwNjA5MDM=",
    "number": 2953,
    "title": "Use mime-types instead of send.mime",
    "user": {
      "login": "tunniclm",
      "id": 5011883,
      "node_id": "MDQ6VXNlcjUwMTE4ODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5011883?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tunniclm",
      "html_url": "https://github.com/tunniclm",
      "followers_url": "https://api.github.com/users/tunniclm/followers",
      "following_url": "https://api.github.com/users/tunniclm/following{/other_user}",
      "gists_url": "https://api.github.com/users/tunniclm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tunniclm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tunniclm/subscriptions",
      "organizations_url": "https://api.github.com/users/tunniclm/orgs",
      "repos_url": "https://api.github.com/users/tunniclm/repos",
      "events_url": "https://api.github.com/users/tunniclm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tunniclm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-03-24T16:30:52Z",
    "updated_at": "2016-03-24T17:10:44Z",
    "closed_at": "2016-03-24T16:35:57Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2953",
      "html_url": "https://github.com/expressjs/express/pull/2953",
      "diff_url": "https://github.com/expressjs/express/pull/2953.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2953.patch",
      "merged_at": null
    },
    "body": "> The mime-types module has a few small differences compared\n> to mime:\n> - mime-types API for getting charsets is slightly different\n>   to mime\n> - mime-types uses mime-db which has a comprehensive list of\n>   charsets for mime types, whereas mime uses a simple rule:\n>   UTF-8 for any type starting 'text/' and a caller-defined\n>   fallback for anything else\n> - mime-types will return false if it cannot find a particular\n>   mime type in mime-db, whereas mime will default to\n>   'application/octet-stream' if it does't find the mime type\n>   in its types.json file\n> \n> This commit makes the necessary changes to address these\n> differences.\n> \n> The mime module to use is now populated by\n> require('mime-types') rather than reaching into the send\n> module with require('send').mime.\n> \n> One of the tests has been updated as a result of the charset\n> lookup differences in mime-types, since mime-types gives\n> UTF-8 as the charset for 'application/javascript' whereas\n> mime returned the caller fallback (undefined in this case.)\n> From what I can tell both the resulting values are valid in\n> the Content-Type header (either 'Content-Type:\n> application/javascript; charset=utf=8' or 'Content-Type:\n> application/javascript') so I have updated the testcase to\n> test for the former instead of the latter.\n\n---\n\nI have added mime-types as a dependency at `~2.1.10`, let me know if that is not the version we should take.\n\nThis PR is to address the item \"Use `mime-types` instead of `mime`\" from the [Release 5.0](https://github.com/expressjs/express/pull/2237) checklist.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2953/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2953/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2952",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2952/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2952/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2952/events",
    "html_url": "https://github.com/expressjs/express/issues/2952",
    "id": 142894496,
    "node_id": "MDU6SXNzdWUxNDI4OTQ0OTY=",
    "number": 2952,
    "title": "I found \"jade\" has forced to rename to \"pug.\"",
    "user": {
      "login": "taichunmin",
      "id": 2192626,
      "node_id": "MDQ6VXNlcjIxOTI2MjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2192626?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/taichunmin",
      "html_url": "https://github.com/taichunmin",
      "followers_url": "https://api.github.com/users/taichunmin/followers",
      "following_url": "https://api.github.com/users/taichunmin/following{/other_user}",
      "gists_url": "https://api.github.com/users/taichunmin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/taichunmin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/taichunmin/subscriptions",
      "organizations_url": "https://api.github.com/users/taichunmin/orgs",
      "repos_url": "https://api.github.com/users/taichunmin/repos",
      "events_url": "https://api.github.com/users/taichunmin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/taichunmin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2016-03-23T08:25:09Z",
    "updated_at": "2016-10-15T04:05:24Z",
    "closed_at": "2016-04-26T11:50:18Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "As title. pugjs/pug#2184\nHi! I'm a newbie. How to use pug to replace jade?\nAre there new docs or examples for pug?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2952/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2952/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2951",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2951/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2951/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2951/events",
    "html_url": "https://github.com/expressjs/express/issues/2951",
    "id": 142837782,
    "node_id": "MDU6SXNzdWUxNDI4Mzc3ODI=",
    "number": 2951,
    "title": "app.configure error",
    "user": {
      "login": "justin170055",
      "id": 17793542,
      "node_id": "MDQ6VXNlcjE3NzkzNTQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/17793542?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/justin170055",
      "html_url": "https://github.com/justin170055",
      "followers_url": "https://api.github.com/users/justin170055/followers",
      "following_url": "https://api.github.com/users/justin170055/following{/other_user}",
      "gists_url": "https://api.github.com/users/justin170055/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/justin170055/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/justin170055/subscriptions",
      "organizations_url": "https://api.github.com/users/justin170055/orgs",
      "repos_url": "https://api.github.com/users/justin170055/repos",
      "events_url": "https://api.github.com/users/justin170055/events{/privacy}",
      "received_events_url": "https://api.github.com/users/justin170055/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-03-23T02:09:51Z",
    "updated_at": "2018-07-31T17:21:32Z",
    "closed_at": "2016-03-23T12:30:30Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "``` js\napp.configure(function(){\n    ^\nTypeError: Object function (req, res, next) {\n    app.handle(req, res, next);\n  } has no method 'configure'\n```\n\nhere is my code:\n\n``` js\nvar express = require('express');\nvar app = express();\n\napp.configure(function(){\n    app.set('views', __dirname + '/views');\n    app.set('view engine', 'jade');\n});\n\napp.get('/', function(){\n    res.render('index', {option: 'value'});\n});\n\napp.listen(3000)\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2951/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2951/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2950",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2950/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2950/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2950/events",
    "html_url": "https://github.com/expressjs/express/issues/2950",
    "id": 142831269,
    "node_id": "MDU6SXNzdWUxNDI4MzEyNjk=",
    "number": 2950,
    "title": "Error installing",
    "user": {
      "login": "justin170055",
      "id": 17793542,
      "node_id": "MDQ6VXNlcjE3NzkzNTQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/17793542?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/justin170055",
      "html_url": "https://github.com/justin170055",
      "followers_url": "https://api.github.com/users/justin170055/followers",
      "following_url": "https://api.github.com/users/justin170055/following{/other_user}",
      "gists_url": "https://api.github.com/users/justin170055/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/justin170055/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/justin170055/subscriptions",
      "organizations_url": "https://api.github.com/users/justin170055/orgs",
      "repos_url": "https://api.github.com/users/justin170055/repos",
      "events_url": "https://api.github.com/users/justin170055/events{/privacy}",
      "received_events_url": "https://api.github.com/users/justin170055/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-03-23T01:38:24Z",
    "updated_at": "2016-03-23T12:32:40Z",
    "closed_at": "2016-03-23T02:09:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "```\nroot@WebServer:/var/www/html# npm install express\nnpm WARN package.json tossup@0.0.1 No README.md file found!\nnpm http GET https://registry.npmjs.org/express\nnpm http 304 https://registry.npmjs.org/express\nnpm ERR! Error: No compatible version found: express@'^4.13.3'\nnpm ERR! Valid install targets:\nnpm ERR! [\"0.14.0\",\"0.14.1\",\"1.0.0\",\"1.0.1\",\"1.0.2\",\"1.0.3\",\"1.0.4\",\"1.0.5\",\"1.0.6\",\"1.0.7\",\"1.0.8\",\"2.0.0\",\"2.1.0\",\"2.1.1\",\"2.2.0\",\"2.2.1\",\"2.2.2\",\"2.3.0\",\"2.3.1\",\"2.3.2\",\"2.3.3\",\"2.3.4\",\"2.3.5\",\"2.3.6\",\"2.3.7\",\"2.3.8\",\"2.3.9\",\"2.3.10\",\"2.3.11\",\"2.3.12\",\"2.4.0\",\"2.4.1\",\"2.4.2\",\"2.4.3\",\"2.4.4\",\"2.4.5\",\"2.4.6\",\"2.4.7\",\"2.5.0\",\"2.5.1\",\"2.5.2\",\"2.5.3\",\"2.5.4\",\"2.5.5\",\"2.5.6\",\"2.5.7\",\"2.5.8\",\"2.5.9\",\"2.5.10\",\"2.5.11\",\"3.0.0\",\"3.0.1\",\"3.0.2\",\"3.0.3\",\"3.0.4\",\"3.0.5\",\"3.0.6\",\"3.1.0\",\"3.1.1\",\"3.1.2\",\"3.2.0\",\"3.2.1\",\"3.2.2\",\"3.2.3\",\"3.2.4\",\"3.2.5\",\"3.2.6\",\"3.3.0\",\"3.3.1\",\"3.3.2\",\"3.3.3\",\"3.3.4\",\"3.3.5\",\"3.3.6\",\"1.0.0-beta\",\"1.0.0-beta2\",\"1.0.0-rc\",\"1.0.0-rc2\",\"1.0.0-rc3\",\"1.0.0-rc4\",\"2.0.0-beta\",\"2.0.0-beta2\",\"2.0.0-beta3\",\"2.0.0-rc\",\"2.0.0-rc2\",\"2.0.0-rc3\",\"3.0.0-alpha1\",\"3.0.0-alpha2\",\"3.0.0-alpha3\",\"3.0.0-alpha4\",\"3.0.0-alpha5\",\"3.0.0-beta1\",\"3.0.0-beta2\",\"3.0.0-beta3\",\"3.0.0-beta4\",\"3.0.0-beta6\",\"3.0.0-beta7\",\"3.0.0-rc1\",\"3.0.0-rc2\",\"3.0.0-rc3\",\"3.0.0-rc4\",\"3.0.0-rc5\",\"3.3.7\",\"3.3.8\",\"3.4.0\",\"3.4.1\",\"3.4.2\",\"3.4.3\",\"3.4.4\",\"3.4.5\",\"3.4.6\",\"3.4.7\",\"3.4.8\",\"4.0.0-rc1\",\"4.0.0-rc2\",\"3.5.0\",\"4.0.0-rc3\",\"4.0.0-rc4\",\"3.5.1\",\"4.0.0\",\"3.5.2\",\"4.1.0\",\"4.1.1\",\"3.5.3\",\"4.1.2\",\"3.6.0\",\"4.2.0\",\"3.7.0\",\"3.8.0\",\"4.3.0\",\"4.3.1\",\"3.8.1\",\"4.3.2\",\"3.9.0\",\"4.4.0\",\"4.4.1\",\"3.10.0\",\"3.10.1\",\"3.10.2\",\"3.10.3\",\"3.10.4\",\"4.4.2\",\"3.10.5\",\"4.4.3\",\"3.11.0\",\"4.4.4\",\"3.12.0\",\"3.12.1\",\"4.4.5\",\"3.13.0\",\"4.5.0\",\"4.5.1\",\"3.14.0\",\"4.6.0\",\"4.6.1\",\"3.15.0\",\"4.7.0\",\"3.15.1\",\"4.7.1\",\"3.15.2\",\"4.7.2\",\"4.7.3\",\"3.15.3\",\"4.7.4\",\"3.16.0\",\"4.8.0\",\"3.16.1\",\"4.8.1\",\"3.16.2\",\"4.8.2\",\"3.16.3\",\"3.16.4\",\"4.8.3\",\"3.16.5\",\"3.16.6\",\"4.8.4\",\"3.16.7\",\"4.8.5\",\"3.16.8\",\"4.8.6\",\"3.16.9\",\"4.8.7\",\"3.16.10\",\"4.8.8\",\"3.17.0\",\"3.17.1\",\"4.9.0\",\"3.17.2\",\"4.9.1\",\"4.9.2\",\"3.17.3\",\"4.9.3\",\"3.17.4\",\"4.9.4\",\"3.17.5\",\"4.9.5\",\"3.17.6\",\"3.17.7\",\"4.9.6\",\"4.9.7\",\"3.17.8\",\"4.9.8\",\"3.18.0\",\"3.18.1\",\"4.10.0\",\"3.18.2\",\"4.10.1\",\"5.0.0-alpha.1\",\"3.18.3\",\"4.10.2\",\"3.18.4\",\"4.10.3\",\"4.10.4\",\"4.10.5\",\"3.18.5\",\"3.18.6\",\"4.10.6\",\"4.10.7\",\"3.19.0\",\"4.10.8\",\"4.11.0\",\"3.19.1\",\"4.11.1\",\"3.19.2\",\"4.11.2\",\"3.20.0\",\"4.12.0\",\"3.20.1\",\"4.12.1\",\"4.12.2\",\"3.20.2\",\"4.12.3\",\"3.20.3\",\"4.12.4\",\"3.21.0\",\"4.13.0\",\"3.21.1\",\"4.13.1\",\"5.0.0-alpha.2\",\"3.21.2\",\"4.13.2\",\"4.13.3\",\"4.13.4\"]\nnpm ERR!     at installTargetsError (/usr/local/lib/node_modules/npm/lib/cache.js:563:10)\nnpm ERR!     at /usr/local/lib/node_modules/npm/lib/cache.js:478:10\nnpm ERR!     at saved (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/get.js:138:7)\nnpm ERR!     at /usr/local/lib/node_modules/npm/node_modules/graceful-fs/graceful-fs.js:218:7\nnpm ERR!     at Object.oncomplete (fs.js:297:15)\nnpm ERR! If you need help, you may report this log at:\nnpm ERR!     <http://github.com/isaacs/npm/issues>\nnpm ERR! or email it to:\nnpm ERR!     <npm-@googlegroups.com>\n\nnpm ERR! System Linux 3.19.0-56-generic\nnpm ERR! command \"/usr/local/bin/node\" \"/usr/local/bin/npm\" \"install\" \"express\"\nnpm ERR! cwd /var/www/html\nnpm ERR! node -v v0.8.15\nnpm ERR! npm -v 1.1.66\nnpm ERR!\nnpm ERR! Additional logging details can be found in:\nnpm ERR!     /var/www/html/npm-debug.log\nnpm ERR! not ok code 0\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2950/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2950/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2949",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2949/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2949/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2949/events",
    "html_url": "https://github.com/expressjs/express/issues/2949",
    "id": 142556866,
    "node_id": "MDU6SXNzdWUxNDI1NTY4NjY=",
    "number": 2949,
    "title": "Route resolution with params. Firing multiple middleware - correct route returns.",
    "user": {
      "login": "rknell",
      "id": 5875053,
      "node_id": "MDQ6VXNlcjU4NzUwNTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5875053?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rknell",
      "html_url": "https://github.com/rknell",
      "followers_url": "https://api.github.com/users/rknell/followers",
      "following_url": "https://api.github.com/users/rknell/following{/other_user}",
      "gists_url": "https://api.github.com/users/rknell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rknell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rknell/subscriptions",
      "organizations_url": "https://api.github.com/users/rknell/orgs",
      "repos_url": "https://api.github.com/users/rknell/repos",
      "events_url": "https://api.github.com/users/rknell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rknell/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-03-22T06:07:17Z",
    "updated_at": "2016-03-23T12:03:58Z",
    "closed_at": "2016-03-23T12:03:58Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi.\n\nHaving a really weird though persistent issue. When I setup routes such as\n\n```\napp.get('/test/dosomething', middleware1, actionFn1);\napp.get('/test/:idparam', middleware2, actionFn2);\n```\n\nAnd I hit `/test/dosomething` it returns correctly. However it also fires `middleware2`. This is a problem because I will often have different authentication rules for the two routes, and it will throw an error (get in the way / be executed) before actionFn1\n\nMy workaround is to setup routes such as\n`app.get('/test/dosomething/foo', middleware1, actionFn1);`\n\nWhich works. Removing the second route also fixes the problem. \n\nIs this a bug? If not can you point me in the direction of what I am doing wrong? I have done some searching but being so weird I haven't found any answers. I can setup an open source project to demo it if need be (it currently does this on a sails like framework I maintain)\n\nKind regards,\n\nRyan\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2949/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2949/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2948",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2948/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2948/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2948/events",
    "html_url": "https://github.com/expressjs/express/issues/2948",
    "id": 142208509,
    "node_id": "MDU6SXNzdWUxNDIyMDg1MDk=",
    "number": 2948,
    "title": "Error: No default engine was specified and no extension was provided",
    "user": {
      "login": "azat-io",
      "id": 5698350,
      "node_id": "MDQ6VXNlcjU2OTgzNTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5698350?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/azat-io",
      "html_url": "https://github.com/azat-io",
      "followers_url": "https://api.github.com/users/azat-io/followers",
      "following_url": "https://api.github.com/users/azat-io/following{/other_user}",
      "gists_url": "https://api.github.com/users/azat-io/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/azat-io/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/azat-io/subscriptions",
      "organizations_url": "https://api.github.com/users/azat-io/orgs",
      "repos_url": "https://api.github.com/users/azat-io/repos",
      "events_url": "https://api.github.com/users/azat-io/events{/privacy}",
      "received_events_url": "https://api.github.com/users/azat-io/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-03-20T21:34:04Z",
    "updated_at": "2018-09-13T12:53:02Z",
    "closed_at": "2016-03-20T22:00:00Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "Could you help me please what's wrong in [my Express code](https://github.com/azat-io/azat-io/blob/webpack/scripts/server.js)? I cannot understand.\n\nHere is my `server.js` file:\n\n``` es6\nconst path = require('path');\nconst express = require('express');\nconst nodemailer = require('nodemailer');\nconst webpack = require('webpack');\nconst webpackMiddleware = require('webpack-dev-middleware');\nconst webpackHotMiddleware = require('webpack-hot-middleware');\nconst config = require('./webpack.config.js');\n\nconst isDeveloping = process.env.NODE_ENV !== 'production';\nconst port = isDeveloping ? 8016 : process.env.PORT;\nconst app = express();\n\nif (isDeveloping) {\n  const compiler = webpack(config);\n  const middleware = webpackMiddleware(compiler, {\n    publicPath: config.output.publicPath,\n    contentBase: 'src',\n    stats: {\n      colors: true,\n      hash: false,\n      timings: true,\n      chunks: false,\n      chunkModules: false,\n      modules: false\n    }\n  });\n\n  app.use(middleware);\n  app.use(webpackHotMiddleware(compiler));\n  app.get('/', function response(req, res) {\n    res.write(middleware.fileSystem.readFileSync(path.join(__dirname, '../dist/index.html')));\n    res.end();\n  });\n\n  app.post('/contact', function (req, res) {\n    var mailOpts, smtpTrans;\n    smtpTrans = nodemailer.createTransport('SMTP', {\n      service: 'Gmail',\n      auth: {\n        user: \"some-my-email@gmail.com\",\n        pass: \"password-of-this-email\"\n      }\n    });\n    mailOpts = {\n      from: 'noreply@my-email.io>',\n      to: 'my-email@gmail.com',\n      subject: 'Website contact form',\n      text: req.body.message\n    };\n    smtpTrans.sendMail(mailOpts, function (error, response) {\n      if (error) {\n        res.render('contact', {\n          err: true, page: 'contact'\n        })\n      }\n      else {\n        res.render('contact', {\n          err: false, page: 'contact'\n        })\n      }\n    });\n  });\n} else {\n  app.use(express.static(__dirname + '../dist'));\n  app.get('/', function response(req, res) {\n    res.sendFile(path.join(__dirname, '../dist/index.html'));\n  });\n}\n\napp.listen(port, '0.0.0.0', function onStart(err) {\n  if (err) {\n    console.log(err);\n  }\n  console.info('==> 🌎  Listening on port %s. Open up http://0.0.0.0:%s/ in your browser.', port, port);\n});\n```\n\nAll works good, but when I added [Nodemailer](https://github.com/nodemailer/nodemailer) to my project it takes me an error message when I'm sending form:\n\nThere are two errors. If `text` of mailOpts is \"req.body.message\" there is this error:\n\n``` bash\nTypeError: Cannot read property 'message' of undefined\n   at /home/azat/git/azat-io/scripts/server.js:50:21\n   at Layer.handle [as handle_request] (/home/azat/git/azat-io/node_modules/express/lib/router/layer.js:95:5)\n   at next (/home/azat/git/azat-io/node_modules/express/lib/router/route.js:131:13)\n   at Route.dispatch (/home/azat/git/azat-io/node_modules/express/lib/router/route.js:112:3)\n   at Layer.handle [as handle_request] (/home/azat/git/azat-io/node_modules/express/lib/router/layer.js:95:5)\n   at /home/azat/git/azat-io/node_modules/express/lib/router/index.js:277:22\n   at Function.process_params (/home/azat/git/azat-io/node_modules/express/lib/router/index.js:330:12)\n   at next (/home/azat/git/azat-io/node_modules/express/lib/router/index.js:271:10)\n   at middleware (/home/azat/git/azat-io/node_modules/webpack-hot-middleware/middleware.js:39:48)\n   at Layer.handle [as handle_request] (/home/azat/git/azat-io/node_modules/express/lib/router/layer.js:95:5)\n   at trim_prefix (/home/azat/git/azat-io/node_modules/express/lib/router/index.js:312:13)\n   at /home/azat/git/azat-io/node_modules/express/lib/router/index.js:280:7\n   at Function.process_params (/home/azat/git/azat-io/node_modules/express/lib/router/index.js:330:12)\n   at next (/home/azat/git/azat-io/node_modules/express/lib/router/index.js:271:10)\n   at processRequest (/home/azat/git/azat-io/node_modules/webpack-dev-middleware/middleware.js:176:12)\n   at ready (/home/azat/git/azat-io/node_modules/webpack-dev-middleware/middleware.js:96:20)\n```\n\nIf `text` of mailOpts is just string \"Hello!\" there is this error:\n\n``` bash\nError: No default engine was specified and no extension was provided.\n   at new View (/home/azat/git/azat-io/node_modules/express/lib/view.js:62:11)\n   at EventEmitter.render (/home/azat/git/azat-io/node_modules/express/lib/application.js:569:12)\n   at ServerResponse.render (/home/azat/git/azat-io/node_modules/express/lib/response.js:961:7)\n   at /home/azat/git/azat-io/scripts/server.js:54:13\n   at Nodemailer.sendMail (/home/azat/git/azat-io/node_modules/nodemailer/lib/nodemailer.js:265:16)\n   at /home/azat/git/azat-io/scripts/server.js:52:15\n   at Layer.handle [as handle_request] (/home/azat/git/azat-io/node_modules/express/lib/router/layer.js:95:5)\n   at next (/home/azat/git/azat-io/node_modules/express/lib/router/route.js:131:13)\n   at Route.dispatch (/home/azat/git/azat-io/node_modules/express/lib/router/route.js:112:3)\n   at Layer.handle [as handle_request] (/home/azat/git/azat-io/node_modules/express/lib/router/layer.js:95:5)\n   at /home/azat/git/azat-io/node_modules/express/lib/router/index.js:277:22\n   at Function.process_params (/home/azat/git/azat-io/node_modules/express/lib/router/index.js:330:12)\n   at next (/home/azat/git/azat-io/node_modules/express/lib/router/index.js:271:10)\n   at middleware (/home/azat/git/azat-io/node_modules/webpack-hot-middleware/middleware.js:39:48)\n   at Layer.handle [as handle_request] (/home/azat/git/azat-io/node_modules/express/lib/router/layer.js:95:5)\n   at trim_prefix (/home/azat/git/azat-io/node_modules/express/lib/router/index.js:312:13)\n```\n\nHelp me please, what is wrong here?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2948/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2948/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2947",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2947/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2947/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2947/events",
    "html_url": "https://github.com/expressjs/express/issues/2947",
    "id": 141481019,
    "node_id": "MDU6SXNzdWUxNDE0ODEwMTk=",
    "number": 2947,
    "title": "How to process url with '%' ?",
    "user": {
      "login": "syter",
      "id": 7510464,
      "node_id": "MDQ6VXNlcjc1MTA0NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7510464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/syter",
      "html_url": "https://github.com/syter",
      "followers_url": "https://api.github.com/users/syter/followers",
      "following_url": "https://api.github.com/users/syter/following{/other_user}",
      "gists_url": "https://api.github.com/users/syter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/syter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/syter/subscriptions",
      "organizations_url": "https://api.github.com/users/syter/orgs",
      "repos_url": "https://api.github.com/users/syter/repos",
      "events_url": "https://api.github.com/users/syter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/syter/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2016-03-17T04:56:32Z",
    "updated_at": "2016-03-17T07:22:07Z",
    "closed_at": "2016-03-17T07:22:07Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have used express 3.3.1 for a nodejs server which provides restful API.\n\nIn this server, I provide functions that are upload photo, get photo data from url.\nWhen upload photo, server will save photo data to mongodb, and response url that cloud visit photo data directly.\nfor example:\nrequest:\nphoto:123.jpg\nresponse:\nurl:http://192.168.1.9:3000/v2/resources/56ea1d4df9df0d6b090b12b1/123.jpg\n\nBut there is an issue I can't fix it. \nWhen upload photo name is ']_G207E5A_%7DC(%7B%K$(2~.jpg' such this thing, upload photo is successful, but visit url http://192.168.1.9:3000/v2/resources/56ea1d4df9df0d6b090b12b1/]_G207E5A_%7DC(%7B%K$(2~.jpg is failed.\n\nthe server logs:\n[2016-03-17 12:55:00.028] [DEBUG] mrm - { [Error: Bad Request] status: 400 }\nError: Bad Request\n    at SendStream.error (/Users/Syter/Documents/workcode/myFolk/arrownock-mrm/node_modules/express/node_modules/send/lib/send.js:145:16)\n    at SendStream.pipe (/Users/Syter/Documents/workcode/myFolk/arrownock-mrm/node_modules/express/node_modules/send/lib/send.js:298:31)\n    at Object.handle (/Users/Syter/Documents/workcode/myFolk/arrownock-mrm/node_modules/express/node_modules/connect/lib/middleware/static.js:84:8)\n    at next (/Users/Syter/Documents/workcode/myFolk/arrownock-mrm/node_modules/locomotive/node_modules/express/node_modules/connect/lib/proto.js:190:15)\n    at Object.logger (/Users/Syter/Documents/workcode/myFolk/arrownock-mrm/node_modules/express/node_modules/connect/lib/middleware/logger.js:156:5)\n    at next (/Users/Syter/Documents/workcode/myFolk/arrownock-mrm/node_modules/locomotive/node_modules/express/node_modules/connect/lib/proto.js:190:15)\n    at Object.handle (/Users/Syter/Documents/workcode/myFolk/arrownock-mrm/lib/WAF/config/environments/all.js:44:3)\n    at next (/Users/Syter/Documents/workcode/myFolk/arrownock-mrm/node_modules/locomotive/node_modules/express/node_modules/connect/lib/proto.js:190:15)\n    at Object.expressInit [as handle](/Users/Syter/Documents/workcode/myFolk/arrownock-mrm/node_modules/locomotive/node_modules/express/lib/middleware.js:30:5)\n    at next (/Users/Syter/Documents/workcode/myFolk/arrownock-mrm/node_modules/locomotive/node_modules/express/node_modules/connect/lib/proto.js:190:15)\n    at Object.query [as handle](/Users/Syter/Documents/workcode/myFolk/arrownock-mrm/node_modules/locomotive/node_modules/express/node_modules/connect/lib/middleware/query.js:44:5)\n    at next (/Users/Syter/Documents/workcode/myFolk/arrownock-mrm/node_modules/locomotive/node_modules/express/node_modules/connect/lib/proto.js:190:15)\n    at Function.app.handle (/Users/Syter/Documents/workcode/myFolk/arrownock-mrm/node_modules/locomotive/node_modules/express/node_modules/connect/lib/proto.js:198:3)\n    at Server.app (/Users/Syter/Documents/workcode/myFolk/arrownock-mrm/node_modules/locomotive/node_modules/express/node_modules/connect/lib/connect.js:65:37)\n    at emitTwo (events.js:87:13)\n    at Server.emit (events.js:172:7)\n    at HTTPParser.parserOnIncoming [as onIncoming](_http_server.js:528:12)\n    at HTTPParser.parserOnHeadersComplete (_http_common.js:88:23)\n192.168.1.9 - - [Thu, 17 Mar 2016 04:55:00 GMT] \"GET /favicon.ico HTTP/1.1\" 400 129 \"http://192.168.1.9:3000/v2/resources/56ea1d4df9df0d6b090b12b1/]_G207E5A_%7DC(%7B%K$(2~.jpg\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.87 Safari/537.36\"\n\nI found this issue only appears, when url with '%' in it.\nSo how can I fix it?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2947/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2947/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2946",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2946/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2946/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2946/events",
    "html_url": "https://github.com/expressjs/express/issues/2946",
    "id": 141343027,
    "node_id": "MDU6SXNzdWUxNDEzNDMwMjc=",
    "number": 2946,
    "title": "access logger in separate route js files",
    "user": {
      "login": "ttdsuen",
      "id": 17019029,
      "node_id": "MDQ6VXNlcjE3MDE5MDI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/17019029?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ttdsuen",
      "html_url": "https://github.com/ttdsuen",
      "followers_url": "https://api.github.com/users/ttdsuen/followers",
      "following_url": "https://api.github.com/users/ttdsuen/following{/other_user}",
      "gists_url": "https://api.github.com/users/ttdsuen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ttdsuen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ttdsuen/subscriptions",
      "organizations_url": "https://api.github.com/users/ttdsuen/orgs",
      "repos_url": "https://api.github.com/users/ttdsuen/repos",
      "events_url": "https://api.github.com/users/ttdsuen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ttdsuen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-03-16T17:20:26Z",
    "updated_at": "2016-03-16T17:25:22Z",
    "closed_at": "2016-03-16T17:25:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In the main app.js, there are lines like these,\n\n``` js\napp.use(logger('dev'));\n// ...\napp.use('/', routes);\napp.use('/users', users);\n```\n\nIn those route files (routes.js/users.js), I will implement the request handlers. I want to know if there is a way to access this logger in the app.js to do some custom logging.\n\nFor example,\n\n```\nroute.get('/', function(req, res, next) {\n  ...\n  ??.logger.warn(\"something needs attention!\");\n  ...\n});\n```\n\nDaniel.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2946/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2946/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2945",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2945/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2945/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2945/events",
    "html_url": "https://github.com/expressjs/express/issues/2945",
    "id": 141260051,
    "node_id": "MDU6SXNzdWUxNDEyNjAwNTE=",
    "number": 2945,
    "title": "Make express.static use the \"etag\" application setting",
    "user": {
      "login": "sjanuary",
      "id": 14993288,
      "node_id": "MDQ6VXNlcjE0OTkzMjg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/14993288?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sjanuary",
      "html_url": "https://github.com/sjanuary",
      "followers_url": "https://api.github.com/users/sjanuary/followers",
      "following_url": "https://api.github.com/users/sjanuary/following{/other_user}",
      "gists_url": "https://api.github.com/users/sjanuary/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sjanuary/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sjanuary/subscriptions",
      "organizations_url": "https://api.github.com/users/sjanuary/orgs",
      "repos_url": "https://api.github.com/users/sjanuary/repos",
      "events_url": "https://api.github.com/users/sjanuary/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sjanuary/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-03-16T12:35:09Z",
    "updated_at": "2017-04-29T23:52:49Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "I saw this feature on the 5.0 roadmap #2237 and I initially thought that it would need to be implemented in the serve-static module (https://github.com/expressjs/serve-static/pull/64). I think maybe I had misunderstood the use case as the comments I received there were that the changes needed to be made in express.\n\nSo after getting it wrong the first time I wanted to open this issue as a discussion item around the requirements for this feature and how best to implement it.\n\nI think now the use case is this:\n\n``` js\nvar express = require('express');\nvar app = express();\napp.disable('etag');\napp.use(express.static('/static')); // also disables etag without needing {'etag':false}\n```\n\nSo if etags are disabled **before** express.static is called then they are also disabled for static content.\n\nDoes this make sense? Any comments appreciated.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2945/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2945/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2944",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2944/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2944/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2944/events",
    "html_url": "https://github.com/expressjs/express/issues/2944",
    "id": 140721896,
    "node_id": "MDU6SXNzdWUxNDA3MjE4OTY=",
    "number": 2944,
    "title": "Error: Failed to lookup view \"error\" in views directory",
    "user": {
      "login": "jetbalagtas",
      "id": 5748263,
      "node_id": "MDQ6VXNlcjU3NDgyNjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5748263?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jetbalagtas",
      "html_url": "https://github.com/jetbalagtas",
      "followers_url": "https://api.github.com/users/jetbalagtas/followers",
      "following_url": "https://api.github.com/users/jetbalagtas/following{/other_user}",
      "gists_url": "https://api.github.com/users/jetbalagtas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jetbalagtas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jetbalagtas/subscriptions",
      "organizations_url": "https://api.github.com/users/jetbalagtas/orgs",
      "repos_url": "https://api.github.com/users/jetbalagtas/repos",
      "events_url": "https://api.github.com/users/jetbalagtas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jetbalagtas/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2016-03-14T16:18:33Z",
    "updated_at": "2018-11-11T23:05:11Z",
    "closed_at": "2016-03-15T01:56:12Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "wondering if someone could take a quick look and help...\nlast Friday, i made some minor (paragraph) edits to an about page of a site deployed on Heroku and the site broke when i checked in everything\n\nit was working fine before that, but now i keep getting a 500 error with the message: \"Error: Failed to lookup view \"error\" in views directory \"/Users/jet/Box Sync/JET-STUFF/Code-Design/portfolios/bio/server/config../server/views\"\"\n\nat first, i thought it might have been some compatibility issues with node and the dependencies so i updated everything to match what Heroku was installing during the build, which was always successful\n\ni've tried almost all the possible solutions i could find but still can't fix it\n\nhere is my terminal:\n\n```\n➜  bio git:(master) grunt server\nRunning \"clean:all\" (clean) task\n>> 5 paths cleaned.\n\nRunning \"concurrent:concat\" (concurrent) task\n    Running \"concat:dev_styles\" (concat) task\n\n    Done, without errors.\n\n\n    Execution Time (2016-03-14 15:50:59 UTC)\n    loading tasks       2.3s  ▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇ 95%\n    concat:dev_styles  112ms  ▇▇▇ 5%\n    Total 2.4s\n\n    Running \"concat:vendor_scripts\" (concat) task\n    Running \"concat:dev_scripts\" (concat) task\n\n    Done, without errors.\n\n\n    Execution Time (2016-03-14 15:50:59 UTC)\n    loading tasks       2.4s  ▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇ 98%\n    concat:dev_scripts  49ms  ▇ 2%\n    Total 2.5s\n\n\n    Done, without errors.\n\n\n    Execution Time (2016-03-14 15:50:59 UTC)\n    loading tasks           2.5s  ▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇ 96%\n    concat:vendor_scripts  110ms  ▇▇ 4%\n    Total 2.6s\n\n\nRunning \"concurrent:minify\" (concurrent) task\n    Running \"uglify:dev_scripts\" (uglify) task\n    Running \"cssmin:dev_styles\" (cssmin) task\n    >> 1 file created. 23.5 kB → 16.23 kB\n\n    Done, without errors.\n    File client/build/dev.min.js created: 11.76 kB → 7.98 kB\n    >> 1 file created.\n\n\n    Execution Time (2016-03-14 15:51:02 UTC)\n\n    Done, without errors.\n\n\n    Execution Time (2016-03-14 15:51:02 UTC)\n    loading tasks        1.7s  ▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇ 82%\n    uglify:dev_scripts  357ms  ▇▇▇▇▇▇▇▇ 17%\n    Total 2s\n\n    loading tasks       1.7s  ▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇ 83%\n    cssmin:dev_styles  334ms  ▇▇▇▇▇▇▇▇ 17%\n    Total 2s\n\n\nRunning \"concurrent:watch\" (concurrent) task\n    Running \"nodemon:nodemon\" (nodemon) task\n    [nodemon] 1.9.1\n    [nodemon] to restart at any time, enter `rs`\n    [nodemon] watching: *.*\n    [nodemon] starting `node ./server/app.js`\n    Running \"watch:scripts\" (watch) task\n    Running \"watch:styles\" (watch) task\n    Waiting...\n    Waiting...\n    Server listening on port 3000 in development mode\n    GET / 500 22.608 ms - 1530\n    Error: Failed to lookup view \"error\" in views directory \"/Users/jet/Box Sync/JET-STUFF/Code-Design/portfolios/bio/server/config../server/views\"\n        at EventEmitter.render (/Users/jet/Box Sync/JET-STUFF/Code-Design/portfolios/bio/node_modules/express/lib/application.js:579:17)\n        at ServerResponse.render (/Users/jet/Box Sync/JET-STUFF/Code-Design/portfolios/bio/node_modules/express/lib/response.js:961:7)\n        at /Users/jet/Box Sync/JET-STUFF/Code-Design/portfolios/bio/server/app.js:58:7\n        at Layer.handle_error (/Users/jet/Box Sync/JET-STUFF/Code-Design/portfolios/bio/node_modules/express/lib/router/layer.js:71:5)\n        at trim_prefix (/Users/jet/Box Sync/JET-STUFF/Code-Design/portfolios/bio/node_modules/express/lib/router/index.js:310:13)\n        at /Users/jet/Box Sync/JET-STUFF/Code-Design/portfolios/bio/node_modules/express/lib/router/index.js:280:7\n        at Function.process_params (/Users/jet/Box Sync/JET-STUFF/Code-Design/portfolios/bio/node_modules/express/lib/router/index.js:330:12)\n        at IncomingMessage.next (/Users/jet/Box Sync/JET-STUFF/Code-Design/portfolios/bio/node_modules/express/lib/router/index.js:271:10)\n        at done (/Users/jet/Box Sync/JET-STUFF/Code-Design/portfolios/bio/node_modules/express/lib/response.js:956:25)\n        at EventEmitter.render (/Users/jet/Box Sync/JET-STUFF/Code-Design/portfolios/bio/node_modules/express/lib/application.js:581:14)\n    GET /favicon.ico 302 6.132 ms - 23\n    GET / 500 2.976 ms - 1530\n    Error: Failed to lookup view \"error\" in views directory \"/Users/jet/Box Sync/JET-STUFF/Code-Design/portfolios/bio/server/config../server/views\"\n        at EventEmitter.render (/Users/jet/Box Sync/JET-STUFF/Code-Design/portfolios/bio/node_modules/express/lib/application.js:579:17)\n        at ServerResponse.render (/Users/jet/Box Sync/JET-STUFF/Code-Design/portfolios/bio/node_modules/express/lib/response.js:961:7)\n        at /Users/jet/Box Sync/JET-STUFF/Code-Design/portfolios/bio/server/app.js:58:7\n        at Layer.handle_error (/Users/jet/Box Sync/JET-STUFF/Code-Design/portfolios/bio/node_modules/express/lib/router/layer.js:71:5)\n        at trim_prefix (/Users/jet/Box Sync/JET-STUFF/Code-Design/portfolios/bio/node_modules/express/lib/router/index.js:310:13)\n        at /Users/jet/Box Sync/JET-STUFF/Code-Design/portfolios/bio/node_modules/express/lib/router/index.js:280:7\n        at Function.process_params (/Users/jet/Box Sync/JET-STUFF/Code-Design/portfolios/bio/node_modules/express/lib/router/index.js:330:12)\n        at IncomingMessage.next (/Users/jet/Box Sync/JET-STUFF/Code-Design/portfolios/bio/node_modules/express/lib/router/index.js:271:10)\n        at done (/Users/jet/Box Sync/JET-STUFF/Code-Design/portfolios/bio/node_modules/express/lib/response.js:956:25)\n        at EventEmitter.render (/Users/jet/Box Sync/JET-STUFF/Code-Design/portfolios/bio/node_modules/express/lib/application.js:581:14)\n```\n\nhere are Heroku logs:\n\n```\n➜  bio git:(master) heroku logs --tail\n2016-03-14T02:37:33.781914+00:00 app[web.1]:     at trim_prefix (/app/node_modules/express/lib/router/index.js:310:13)\n2016-03-14T02:37:33.781917+00:00 app[web.1]:     at next (/app/node_modules/express/lib/router/index.js:271:10)\n2016-03-14T02:37:33.781917+00:00 app[web.1]:     at Layer.handle_error (/app/node_modules/express/lib/router/layer.js:67:12)\n2016-03-14T02:37:33.781918+00:00 app[web.1]:     at trim_prefix (/app/node_modules/express/lib/router/index.js:310:13)\n2016-03-14T02:37:34.094091+00:00 heroku[router]: at=info method=GET path=\"/favicon.ico\" host=jet-bio.herokuapp.com request_id=9d6a0fc4-2e62-495b-93d2-2ed90c56f80a fwd=\"108.210.55.175\" dyno=web.1 connect=0ms service=1ms status=302 bytes=212\n2016-03-14T02:37:34.186453+00:00 heroku[router]: at=info method=GET path=\"/\" host=jet-bio.herokuapp.com request_id=f96828df-61f6-4fc0-9da3-8f54db39ca20 fwd=\"108.210.55.175\" dyno=web.1 connect=0ms service=4ms status=500 bytes=232\n2016-03-14T02:37:34.116056+00:00 app[web.1]: GET /favicon.ico 302 0.818 ms - 23\n2016-03-14T02:37:34.207833+00:00 app[web.1]: GET / 500 0.816 ms - 22\n2016-03-14T02:37:34.208162+00:00 app[web.1]: Error: Failed to lookup view \"error\" in views directory \"/app/server/config../server/views\"\n2016-03-14T02:37:34.208171+00:00 app[web.1]:     at ServerResponse.render (/app/node_modules/express/lib/response.js:961:7)\n2016-03-14T02:37:34.208172+00:00 app[web.1]:     at Layer.handle_error (/app/node_modules/express/lib/router/layer.js:71:5)\n2016-03-14T02:37:34.208170+00:00 app[web.1]:     at EventEmitter.render (/app/node_modules/express/lib/application.js:579:17)\n2016-03-14T02:37:34.208174+00:00 app[web.1]:     at /app/node_modules/express/lib/router/index.js:280:7\n2016-03-14T02:37:34.208173+00:00 app[web.1]:     at trim_prefix (/app/node_modules/express/lib/router/index.js:310:13)\n2016-03-14T02:37:34.208175+00:00 app[web.1]:     at Function.process_params (/app/node_modules/express/lib/router/index.js:330:12)\n2016-03-14T02:37:34.208172+00:00 app[web.1]:     at /app/server/app.js:58:7\n2016-03-14T02:37:34.208175+00:00 app[web.1]:     at next (/app/node_modules/express/lib/router/index.js:271:10)\n2016-03-14T02:37:34.208176+00:00 app[web.1]:     at Layer.handle_error (/app/node_modules/express/lib/router/layer.js:67:12)\n2016-03-14T02:37:34.208177+00:00 app[web.1]:     at trim_prefix (/app/node_modules/express/lib/router/index.js:310:13)\n2016-03-14T03:07:00.174953+00:00 heroku[router]: at=info method=GET path=\"/\" host=jet-bio.herokuapp.com request_id=124ced72-d5d6-404d-98c1-e0ef51a0c913 fwd=\"108.210.55.175\" dyno=web.1 connect=0ms service=6ms status=500 bytes=232\n2016-03-14T03:07:00.194192+00:00 app[web.1]: GET / 500 0.836 ms - 22\n2016-03-14T03:07:00.194509+00:00 app[web.1]:     at ServerResponse.render (/app/node_modules/express/lib/response.js:961:7)\n2016-03-14T03:07:00.194494+00:00 app[web.1]: Error: Failed to lookup view \"error\" in views directory \"/app/server/config../server/views\"\n2016-03-14T03:07:00.194508+00:00 app[web.1]:     at EventEmitter.render (/app/node_modules/express/lib/application.js:579:17)\n2016-03-14T03:07:00.194511+00:00 app[web.1]:     at /app/server/app.js:58:7\n2016-03-14T03:07:00.194512+00:00 app[web.1]:     at Layer.handle_error (/app/node_modules/express/lib/router/layer.js:71:5)\n2016-03-14T03:07:00.194516+00:00 app[web.1]:     at Layer.handle_error (/app/node_modules/express/lib/router/layer.js:67:12)\n2016-03-14T03:07:00.194516+00:00 app[web.1]:     at trim_prefix (/app/node_modules/express/lib/router/index.js:310:13)\n2016-03-14T03:07:00.194512+00:00 app[web.1]:     at trim_prefix (/app/node_modules/express/lib/router/index.js:310:13)\n2016-03-14T03:07:00.194514+00:00 app[web.1]:     at Function.process_params (/app/node_modules/express/lib/router/index.js:330:12)\n2016-03-14T03:07:00.194515+00:00 app[web.1]:     at next (/app/node_modules/express/lib/router/index.js:271:10)\n2016-03-14T03:07:00.194513+00:00 app[web.1]:     at /app/node_modules/express/lib/router/index.js:280:7\n2016-03-14T03:07:00.668361+00:00 heroku[router]: at=info method=GET path=\"/favicon.ico\" host=jet-bio.herokuapp.com request_id=b3c36e24-1fed-4d6a-a7d4-34ff19f38023 fwd=\"108.210.55.175\" dyno=web.1 connect=0ms service=2ms status=302 bytes=212\n2016-03-14T03:07:00.688336+00:00 app[web.1]: GET /favicon.ico 302 0.764 ms - 23\n2016-03-14T03:07:00.939452+00:00 heroku[router]: at=info method=GET path=\"/\" host=jet-bio.herokuapp.com request_id=e8f336fb-4084-4db4-9c06-47320e5a1c99 fwd=\"108.210.55.175\" dyno=web.1 connect=0ms service=7ms status=500 bytes=232\n2016-03-14T03:07:00.958802+00:00 app[web.1]: GET / 500 4.267 ms - 22\n2016-03-14T03:07:00.959394+00:00 app[web.1]: Error: Failed to lookup view \"error\" in views directory \"/app/server/config../server/views\"\n2016-03-14T03:07:00.959409+00:00 app[web.1]:     at EventEmitter.render (/app/node_modules/express/lib/application.js:579:17)\n2016-03-14T03:07:00.959410+00:00 app[web.1]:     at ServerResponse.render (/app/node_modules/express/lib/response.js:961:7)\n2016-03-14T03:07:00.959412+00:00 app[web.1]:     at Layer.handle_error (/app/node_modules/express/lib/router/layer.js:71:5)\n2016-03-14T03:07:00.959411+00:00 app[web.1]:     at /app/server/app.js:58:7\n2016-03-14T03:07:00.959431+00:00 app[web.1]:     at trim_prefix (/app/node_modules/express/lib/router/index.js:310:13)\n2016-03-14T03:07:00.959432+00:00 app[web.1]:     at /app/node_modules/express/lib/router/index.js:280:7\n2016-03-14T03:07:00.959433+00:00 app[web.1]:     at Function.process_params (/app/node_modules/express/lib/router/index.js:330:12)\n2016-03-14T03:07:00.959434+00:00 app[web.1]:     at next (/app/node_modules/express/lib/router/index.js:271:10)\n2016-03-14T03:07:00.959434+00:00 app[web.1]:     at Layer.handle_error (/app/node_modules/express/lib/router/layer.js:67:12)\n2016-03-14T03:07:00.959435+00:00 app[web.1]:     at trim_prefix (/app/node_modules/express/lib/router/index.js:310:13)\n2016-03-14T03:40:58.412459+00:00 heroku[web.1]: Idling\n2016-03-14T03:40:58.413053+00:00 heroku[web.1]: State changed from up to down\n2016-03-14T03:41:03.183953+00:00 heroku[web.1]: Stopping all processes with SIGTERM\n2016-03-14T03:41:06.154639+00:00 heroku[web.1]: Process exited with status 143\n2016-03-14T15:32:17.122884+00:00 heroku[web.1]: Unidling\n2016-03-14T15:32:17.123308+00:00 heroku[web.1]: State changed from down to starting\n2016-03-14T15:32:18.306203+00:00 heroku[web.1]: Starting process with command `npm start`\n2016-03-14T15:32:20.687186+00:00 app[web.1]:\n2016-03-14T15:32:20.687201+00:00 app[web.1]: > portfolio-v2@0.0.0 start /app\n2016-03-14T15:32:20.687202+00:00 app[web.1]: > node ./server/app.js\n2016-03-14T15:32:20.687203+00:00 app[web.1]:\n2016-03-14T15:32:21.157385+00:00 app[web.1]: Server listening on port 22534 in production mode\n2016-03-14T15:32:21.725002+00:00 heroku[web.1]: State changed from starting to up\n2016-03-14T15:32:22.281693+00:00 heroku[router]: at=info method=GET path=\"/\" host=jet-bio.herokuapp.com request_id=4287fb43-df36-44d0-8b6c-982b5f666777 fwd=\"108.210.55.175\" dyno=web.1 connect=2ms service=40ms status=500 bytes=232\n2016-03-14T15:32:22.285601+00:00 app[web.1]: GET / 500 18.357 ms - 22\n2016-03-14T15:32:22.287730+00:00 app[web.1]: Error: Failed to lookup view \"error\" in views directory \"/app/server/config../server/views\"\n2016-03-14T15:32:22.287738+00:00 app[web.1]:     at EventEmitter.render (/app/node_modules/express/lib/application.js:579:17)\n2016-03-14T15:32:22.287739+00:00 app[web.1]:     at ServerResponse.render (/app/node_modules/express/lib/response.js:961:7)\n2016-03-14T15:32:22.287740+00:00 app[web.1]:     at /app/server/app.js:58:7\n2016-03-14T15:32:22.287741+00:00 app[web.1]:     at Layer.handle_error (/app/node_modules/express/lib/router/layer.js:71:5)\n2016-03-14T15:32:22.287741+00:00 app[web.1]:     at trim_prefix (/app/node_modules/express/lib/router/index.js:310:13)\n2016-03-14T15:32:22.287742+00:00 app[web.1]:     at /app/node_modules/express/lib/router/index.js:280:7\n2016-03-14T15:32:22.287743+00:00 app[web.1]:     at Function.process_params (/app/node_modules/express/lib/router/index.js:330:12)\n2016-03-14T15:32:22.287744+00:00 app[web.1]:     at next (/app/node_modules/express/lib/router/index.js:271:10)\n2016-03-14T15:32:22.287745+00:00 app[web.1]:     at Layer.handle_error (/app/node_modules/express/lib/router/layer.js:67:12)\n2016-03-14T15:32:22.287745+00:00 app[web.1]:     at trim_prefix (/app/node_modules/express/lib/router/index.js:310:13)\n2016-03-14T15:32:23.037828+00:00 heroku[router]: at=info method=GET path=\"/\" host=jet-bio.herokuapp.com request_id=02999e6f-146a-4d1f-99fc-af98fa06da69 fwd=\"108.210.55.175\" dyno=web.1 connect=2ms service=11ms status=500 bytes=232\n2016-03-14T15:32:23.038338+00:00 app[web.1]: GET / 500 3.949 ms - 22\n2016-03-14T15:32:23.038927+00:00 app[web.1]: Error: Failed to lookup view \"error\" in views directory \"/app/server/config../server/views\"\n2016-03-14T15:32:23.038936+00:00 app[web.1]:     at EventEmitter.render (/app/node_modules/express/lib/application.js:579:17)\n2016-03-14T15:32:23.038937+00:00 app[web.1]:     at ServerResponse.render (/app/node_modules/express/lib/response.js:961:7)\n2016-03-14T15:32:23.038939+00:00 app[web.1]:     at Layer.handle_error (/app/node_modules/express/lib/router/layer.js:71:5)\n2016-03-14T15:32:23.038939+00:00 app[web.1]:     at trim_prefix (/app/node_modules/express/lib/router/index.js:310:13)\n2016-03-14T15:32:23.038943+00:00 app[web.1]:     at trim_prefix (/app/node_modules/express/lib/router/index.js:310:13)\n2016-03-14T15:32:23.038941+00:00 app[web.1]:     at Function.process_params (/app/node_modules/express/lib/router/index.js:330:12)\n2016-03-14T15:32:23.038940+00:00 app[web.1]:     at /app/node_modules/express/lib/router/index.js:280:7\n2016-03-14T15:32:23.038942+00:00 app[web.1]:     at Layer.handle_error (/app/node_modules/express/lib/router/layer.js:67:12)\n2016-03-14T15:32:23.038938+00:00 app[web.1]:     at /app/server/app.js:58:7\n2016-03-14T15:32:23.038942+00:00 app[web.1]:     at next (/app/node_modules/express/lib/router/index.js:271:10)\n2016-03-14T15:32:23.797070+00:00 app[web.1]: GET /favicon.ico 302 17.536 ms - 23\n2016-03-14T15:32:23.795872+00:00 heroku[router]: at=info method=GET path=\"/favicon.ico\" host=jet-bio.herokuapp.com request_id=61ec3d04-64bf-4eb7-afdf-27767d4c7cbe fwd=\"108.210.55.175\" dyno=web.1 connect=1ms service=26ms status=302 bytes=212\n2016-03-14T15:32:24.104434+00:00 app[web.1]: Error: Failed to lookup view \"error\" in views directory \"/app/server/config../server/views\"\n2016-03-14T15:32:24.104451+00:00 app[web.1]:     at EventEmitter.render (/app/node_modules/express/lib/application.js:579:17)\n2016-03-14T15:32:24.104452+00:00 app[web.1]:     at ServerResponse.render (/app/node_modules/express/lib/response.js:961:7)\n2016-03-14T15:32:24.103939+00:00 app[web.1]: GET / 500 1.428 ms - 22\n2016-03-14T15:32:24.104453+00:00 app[web.1]:     at Layer.handle_error (/app/node_modules/express/lib/router/layer.js:71:5)\n2016-03-14T15:32:24.104453+00:00 app[web.1]:     at /app/server/app.js:58:7\n2016-03-14T15:32:24.104455+00:00 app[web.1]:     at /app/node_modules/express/lib/router/index.js:280:7\n2016-03-14T15:32:24.104454+00:00 app[web.1]:     at trim_prefix (/app/node_modules/express/lib/router/index.js:310:13)\n2016-03-14T15:32:24.104457+00:00 app[web.1]:     at Layer.handle_error (/app/node_modules/express/lib/router/layer.js:67:12)\n2016-03-14T15:32:24.104456+00:00 app[web.1]:     at next (/app/node_modules/express/lib/router/index.js:271:10)\n2016-03-14T15:32:24.104455+00:00 app[web.1]:     at Function.process_params (/app/node_modules/express/lib/router/index.js:330:12)\n2016-03-14T15:32:24.104457+00:00 app[web.1]:     at trim_prefix (/app/node_modules/express/lib/router/index.js:310:13)\n2016-03-14T15:32:24.103307+00:00 heroku[router]: at=info method=GET path=\"/\" host=jet-bio.herokuapp.com request_id=e411c929-f191-4ae4-88e2-66054858356c fwd=\"108.210.55.175\" dyno=web.1 connect=2ms service=4ms status=500 bytes=232\n```\n\nhere is the code:\n\n```\nvar express = require('express');\nvar path = require('path');\nvar favicon = require('serve-favicon');\nvar logger = require('morgan');\nvar cookieParser = require('cookie-parser');\nvar bodyParser = require('body-parser');\nvar expressState = require('express-state');\n\nvar config = require('./config');\n\nvar app = express();\nexpressState.extend(app);\n\napp.set('state namespace', 'roomBaby');\napp.expose(\"roomBaby\", 'foo');\n\nvar server = require('http').Server(app);\n\napp.set('port', process.env.PORT || 3000);\n\nvar isProduction = (process.env.NODE_ENV === 'production');\n\nisProduction ? app.set('env', 'production') : app.set('env', 'development');\n\napp.set('views', path.join(config.root, 'server/views'));\napp.engine('html', require('ejs').renderFile);\napp.set('view engine', 'html');\n\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: false\n}));\n\napp.use(cookieParser());\napp.use(express.static(path.join(config.root, 'client')));\n\nrequire('./routes/index')(app);\n\napp.use(function(req, res, next) {\n  var err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\nif (app.get('env') === 'development') {\n  app.use(function(err, req, res, next) {\n    res.status(err.status || 500);\n    res.render('error', {\n      message: err.message,\n      error: err\n    });\n  });\n}\n\napp.use(function(err, req, res, next) {\n  res.status(err.status || 500);\n  res.render('error', {\n    message: err.message,\n    error: {}\n  });\n});\n\nserver.listen(app.get('port'), function() {\n  console.log('Server listening on port ' + app.get('port') + ' in ' + app.get('env') + ' mode');\n});\n\nmodule.exports = app;\n```\n\ni have an error.html file in the views directory\nthanks in advance!\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2944/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2944/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2943",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2943/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2943/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2943/events",
    "html_url": "https://github.com/expressjs/express/pull/2943",
    "id": 140675261,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjI3NDg1Nzc=",
    "number": 2943,
    "title": "Remove res.vary() (no arguments) signature",
    "user": {
      "login": "tunniclm",
      "id": 5011883,
      "node_id": "MDQ6VXNlcjUwMTE4ODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5011883?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tunniclm",
      "html_url": "https://github.com/tunniclm",
      "followers_url": "https://api.github.com/users/tunniclm/followers",
      "following_url": "https://api.github.com/users/tunniclm/following{/other_user}",
      "gists_url": "https://api.github.com/users/tunniclm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tunniclm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tunniclm/subscriptions",
      "organizations_url": "https://api.github.com/users/tunniclm/orgs",
      "repos_url": "https://api.github.com/users/tunniclm/repos",
      "events_url": "https://api.github.com/users/tunniclm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tunniclm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 98481977,
        "node_id": "MDU6TGFiZWw5ODQ4MTk3Nw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/11",
      "html_url": "https://github.com/expressjs/express/milestone/11",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/11/labels",
      "id": 739972,
      "node_id": "MDk6TWlsZXN0b25lNzM5OTcy",
      "number": 11,
      "title": "5.0",
      "description": "",
      "creator": {
        "login": "Fishrock123",
        "id": 1093990,
        "node_id": "MDQ6VXNlcjEwOTM5OTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1093990?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fishrock123",
        "html_url": "https://github.com/Fishrock123",
        "followers_url": "https://api.github.com/users/Fishrock123/followers",
        "following_url": "https://api.github.com/users/Fishrock123/following{/other_user}",
        "gists_url": "https://api.github.com/users/Fishrock123/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Fishrock123/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Fishrock123/subscriptions",
        "organizations_url": "https://api.github.com/users/Fishrock123/orgs",
        "repos_url": "https://api.github.com/users/Fishrock123/repos",
        "events_url": "https://api.github.com/users/Fishrock123/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Fishrock123/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 8,
      "closed_issues": 12,
      "state": "open",
      "created_at": "2014-08-01T16:41:47Z",
      "updated_at": "2023-03-04T23:52:31Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 13,
    "created_at": "2016-03-14T13:37:16Z",
    "updated_at": "2017-01-28T22:53:02Z",
    "closed_at": "2017-01-28T22:53:02Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2943",
      "html_url": "https://github.com/expressjs/express/pull/2943",
      "diff_url": "https://github.com/expressjs/express/pull/2943.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2943.patch",
      "merged_at": null
    },
    "body": "Changed `res.vary()` to throw `TypeError` if no `field` argument is passed or if the value of `field` argument is an empty array. (Similar to how `res.sendFile()` deals with a missing `path` argument).\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2943/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2943/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2942",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2942/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2942/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2942/events",
    "html_url": "https://github.com/expressjs/express/pull/2942",
    "id": 140664524,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjI3NDIzOTk=",
    "number": 2942,
    "title": "Remove res.send(status, body) signature",
    "user": {
      "login": "tunniclm",
      "id": 5011883,
      "node_id": "MDQ6VXNlcjUwMTE4ODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5011883?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tunniclm",
      "html_url": "https://github.com/tunniclm",
      "followers_url": "https://api.github.com/users/tunniclm/followers",
      "following_url": "https://api.github.com/users/tunniclm/following{/other_user}",
      "gists_url": "https://api.github.com/users/tunniclm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tunniclm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tunniclm/subscriptions",
      "organizations_url": "https://api.github.com/users/tunniclm/orgs",
      "repos_url": "https://api.github.com/users/tunniclm/repos",
      "events_url": "https://api.github.com/users/tunniclm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tunniclm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 98481977,
        "node_id": "MDU6TGFiZWw5ODQ4MTk3Nw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-03-14T12:48:34Z",
    "updated_at": "2017-08-08T00:08:31Z",
    "closed_at": "2017-08-08T00:08:31Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2942",
      "html_url": "https://github.com/expressjs/express/pull/2942",
      "diff_url": "https://github.com/expressjs/express/pull/2942.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2942.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2942/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2942/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2941",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2941/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2941/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2941/events",
    "html_url": "https://github.com/expressjs/express/pull/2941",
    "id": 140658273,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjI3Mzg3MzQ=",
    "number": 2941,
    "title": "Remove res.redirect(url, status) signature",
    "user": {
      "login": "tunniclm",
      "id": 5011883,
      "node_id": "MDQ6VXNlcjUwMTE4ODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5011883?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tunniclm",
      "html_url": "https://github.com/tunniclm",
      "followers_url": "https://api.github.com/users/tunniclm/followers",
      "following_url": "https://api.github.com/users/tunniclm/following{/other_user}",
      "gists_url": "https://api.github.com/users/tunniclm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tunniclm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tunniclm/subscriptions",
      "organizations_url": "https://api.github.com/users/tunniclm/orgs",
      "repos_url": "https://api.github.com/users/tunniclm/repos",
      "events_url": "https://api.github.com/users/tunniclm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tunniclm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 98481977,
        "node_id": "MDU6TGFiZWw5ODQ4MTk3Nw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-03-14T12:16:51Z",
    "updated_at": "2017-08-08T00:19:00Z",
    "closed_at": "2017-08-08T00:19:00Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2941",
      "html_url": "https://github.com/expressjs/express/pull/2941",
      "diff_url": "https://github.com/expressjs/express/pull/2941.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2941.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2941/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2941/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2940",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2940/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2940/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2940/events",
    "html_url": "https://github.com/expressjs/express/pull/2940",
    "id": 140658174,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjI3Mzg2NjI=",
    "number": 2940,
    "title": "Remove res.jsonp(status, obj) signature",
    "user": {
      "login": "tunniclm",
      "id": 5011883,
      "node_id": "MDQ6VXNlcjUwMTE4ODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5011883?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tunniclm",
      "html_url": "https://github.com/tunniclm",
      "followers_url": "https://api.github.com/users/tunniclm/followers",
      "following_url": "https://api.github.com/users/tunniclm/following{/other_user}",
      "gists_url": "https://api.github.com/users/tunniclm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tunniclm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tunniclm/subscriptions",
      "organizations_url": "https://api.github.com/users/tunniclm/orgs",
      "repos_url": "https://api.github.com/users/tunniclm/repos",
      "events_url": "https://api.github.com/users/tunniclm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tunniclm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 98481977,
        "node_id": "MDU6TGFiZWw5ODQ4MTk3Nw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2016-03-14T12:16:17Z",
    "updated_at": "2017-01-29T01:54:19Z",
    "closed_at": "2017-01-29T01:54:19Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2940",
      "html_url": "https://github.com/expressjs/express/pull/2940",
      "diff_url": "https://github.com/expressjs/express/pull/2940.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2940.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2940/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2940/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2939",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2939/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2939/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2939/events",
    "html_url": "https://github.com/expressjs/express/pull/2939",
    "id": 140658052,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjI3Mzg1OTk=",
    "number": 2939,
    "title": "Remove res.json(status, obj) signature",
    "user": {
      "login": "tunniclm",
      "id": 5011883,
      "node_id": "MDQ6VXNlcjUwMTE4ODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5011883?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tunniclm",
      "html_url": "https://github.com/tunniclm",
      "followers_url": "https://api.github.com/users/tunniclm/followers",
      "following_url": "https://api.github.com/users/tunniclm/following{/other_user}",
      "gists_url": "https://api.github.com/users/tunniclm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tunniclm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tunniclm/subscriptions",
      "organizations_url": "https://api.github.com/users/tunniclm/orgs",
      "repos_url": "https://api.github.com/users/tunniclm/repos",
      "events_url": "https://api.github.com/users/tunniclm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tunniclm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 98481977,
        "node_id": "MDU6TGFiZWw5ODQ4MTk3Nw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/11",
      "html_url": "https://github.com/expressjs/express/milestone/11",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/11/labels",
      "id": 739972,
      "node_id": "MDk6TWlsZXN0b25lNzM5OTcy",
      "number": 11,
      "title": "5.0",
      "description": "",
      "creator": {
        "login": "Fishrock123",
        "id": 1093990,
        "node_id": "MDQ6VXNlcjEwOTM5OTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1093990?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fishrock123",
        "html_url": "https://github.com/Fishrock123",
        "followers_url": "https://api.github.com/users/Fishrock123/followers",
        "following_url": "https://api.github.com/users/Fishrock123/following{/other_user}",
        "gists_url": "https://api.github.com/users/Fishrock123/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Fishrock123/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Fishrock123/subscriptions",
        "organizations_url": "https://api.github.com/users/Fishrock123/orgs",
        "repos_url": "https://api.github.com/users/Fishrock123/repos",
        "events_url": "https://api.github.com/users/Fishrock123/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Fishrock123/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 8,
      "closed_issues": 12,
      "state": "open",
      "created_at": "2014-08-01T16:41:47Z",
      "updated_at": "2023-03-04T23:52:31Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 14,
    "created_at": "2016-03-14T12:15:49Z",
    "updated_at": "2017-01-29T01:43:50Z",
    "closed_at": "2017-01-29T01:43:50Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2939",
      "html_url": "https://github.com/expressjs/express/pull/2939",
      "diff_url": "https://github.com/expressjs/express/pull/2939.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2939.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2939/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2939/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2938",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2938/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2938/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2938/events",
    "html_url": "https://github.com/expressjs/express/pull/2938",
    "id": 140625716,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjI3MjIwMDk=",
    "number": 2938,
    "title": "add a public API:remove",
    "user": {
      "login": "yalishizhude",
      "id": 3870098,
      "node_id": "MDQ6VXNlcjM4NzAwOTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3870098?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yalishizhude",
      "html_url": "https://github.com/yalishizhude",
      "followers_url": "https://api.github.com/users/yalishizhude/followers",
      "following_url": "https://api.github.com/users/yalishizhude/following{/other_user}",
      "gists_url": "https://api.github.com/users/yalishizhude/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yalishizhude/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yalishizhude/subscriptions",
      "organizations_url": "https://api.github.com/users/yalishizhude/orgs",
      "repos_url": "https://api.github.com/users/yalishizhude/repos",
      "events_url": "https://api.github.com/users/yalishizhude/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yalishizhude/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 163600,
        "node_id": "MDU6TGFiZWwxNjM2MDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false,
        "description": null
      },
      {
        "id": 55587817,
        "node_id": "MDU6TGFiZWw1NTU4NzgxNw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/needs%20tests",
        "name": "needs tests",
        "color": "e11d21",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-03-14T09:52:46Z",
    "updated_at": "2016-04-26T08:34:35Z",
    "closed_at": "2016-04-26T08:34:35Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2938",
      "html_url": "https://github.com/expressjs/express/pull/2938",
      "diff_url": "https://github.com/expressjs/express/pull/2938.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2938.patch",
      "merged_at": null
    },
    "body": "When I develop a dynamic web server I find no method to  unregister route(s), so I add this API to remove path(s) and handler(s).\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2938/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2938/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2937",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2937/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2937/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2937/events",
    "html_url": "https://github.com/expressjs/express/issues/2937",
    "id": 140442362,
    "node_id": "MDU6SXNzdWUxNDA0NDIzNjI=",
    "number": 2937,
    "title": "How to build entry function ?",
    "user": {
      "login": "xywenke",
      "id": 9194669,
      "node_id": "MDQ6VXNlcjkxOTQ2Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9194669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xywenke",
      "html_url": "https://github.com/xywenke",
      "followers_url": "https://api.github.com/users/xywenke/followers",
      "following_url": "https://api.github.com/users/xywenke/following{/other_user}",
      "gists_url": "https://api.github.com/users/xywenke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xywenke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xywenke/subscriptions",
      "organizations_url": "https://api.github.com/users/xywenke/orgs",
      "repos_url": "https://api.github.com/users/xywenke/repos",
      "events_url": "https://api.github.com/users/xywenke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xywenke/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-03-13T03:34:22Z",
    "updated_at": "2016-03-13T03:46:57Z",
    "closed_at": "2016-03-13T03:42:35Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I want to handle all error in a entry function. Would express realize this function.\nI wrote like this : \n\n``` js\napp.use(function(req, res, next){\n        res.header('Content-Type', 'application/json; charset=utf-8');\n    try {\n      next();\n    } catch (err) {\n      res.end(err.message);\n    }\n    }); \n```\n\nBut it doesn`t work , I need your help. Thank you very much.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2937/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2937/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2936",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2936/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2936/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2936/events",
    "html_url": "https://github.com/expressjs/express/pull/2936",
    "id": 140430741,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjI2NTcxNzY=",
    "number": 2936,
    "title": "res.sendFile: inherit etag setting from app",
    "user": {
      "login": "hrvolapeter",
      "id": 6537500,
      "node_id": "MDQ6VXNlcjY1Mzc1MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6537500?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hrvolapeter",
      "html_url": "https://github.com/hrvolapeter",
      "followers_url": "https://api.github.com/users/hrvolapeter/followers",
      "following_url": "https://api.github.com/users/hrvolapeter/following{/other_user}",
      "gists_url": "https://api.github.com/users/hrvolapeter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hrvolapeter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hrvolapeter/subscriptions",
      "organizations_url": "https://api.github.com/users/hrvolapeter/orgs",
      "repos_url": "https://api.github.com/users/hrvolapeter/repos",
      "events_url": "https://api.github.com/users/hrvolapeter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hrvolapeter/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 98481977,
        "node_id": "MDU6TGFiZWw5ODQ4MTk3Nw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/11",
      "html_url": "https://github.com/expressjs/express/milestone/11",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/11/labels",
      "id": 739972,
      "node_id": "MDk6TWlsZXN0b25lNzM5OTcy",
      "number": 11,
      "title": "5.0",
      "description": "",
      "creator": {
        "login": "Fishrock123",
        "id": 1093990,
        "node_id": "MDQ6VXNlcjEwOTM5OTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1093990?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fishrock123",
        "html_url": "https://github.com/Fishrock123",
        "followers_url": "https://api.github.com/users/Fishrock123/followers",
        "following_url": "https://api.github.com/users/Fishrock123/following{/other_user}",
        "gists_url": "https://api.github.com/users/Fishrock123/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Fishrock123/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Fishrock123/subscriptions",
        "organizations_url": "https://api.github.com/users/Fishrock123/orgs",
        "repos_url": "https://api.github.com/users/Fishrock123/repos",
        "events_url": "https://api.github.com/users/Fishrock123/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Fishrock123/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 8,
      "closed_issues": 12,
      "state": "open",
      "created_at": "2014-08-01T16:41:47Z",
      "updated_at": "2023-03-04T23:52:31Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 7,
    "created_at": "2016-03-13T00:31:55Z",
    "updated_at": "2019-12-05T21:21:06Z",
    "closed_at": "2019-12-05T18:31:37Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2936",
      "html_url": "https://github.com/expressjs/express/pull/2936",
      "diff_url": "https://github.com/expressjs/express/pull/2936.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2936.patch",
      "merged_at": null
    },
    "body": "feature mentioned in:  #2294 \n\nIf ETag is disabled in app settings, res.sendFile inherits this setting in options object\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2936/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2936/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2935",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2935/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2935/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2935/events",
    "html_url": "https://github.com/expressjs/express/pull/2935",
    "id": 140186517,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjI1NDQ3OTk=",
    "number": 2935,
    "title": "Add support for overriding settings per request",
    "user": {
      "login": "tunniclm",
      "id": 5011883,
      "node_id": "MDQ6VXNlcjUwMTE4ODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5011883?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tunniclm",
      "html_url": "https://github.com/tunniclm",
      "followers_url": "https://api.github.com/users/tunniclm/followers",
      "following_url": "https://api.github.com/users/tunniclm/following{/other_user}",
      "gists_url": "https://api.github.com/users/tunniclm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tunniclm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tunniclm/subscriptions",
      "organizations_url": "https://api.github.com/users/tunniclm/orgs",
      "repos_url": "https://api.github.com/users/tunniclm/repos",
      "events_url": "https://api.github.com/users/tunniclm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tunniclm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 553390440,
        "node_id": "MDU6TGFiZWw1NTMzOTA0NDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/needs%20rebase",
        "name": "needs rebase",
        "color": "e11d21",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-03-11T13:46:50Z",
    "updated_at": "2023-01-03T09:02:53Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2935",
      "html_url": "https://github.com/expressjs/express/pull/2935",
      "diff_url": "https://github.com/expressjs/express/pull/2935.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2935.patch",
      "merged_at": null
    },
    "body": "This commit adds `res.settings`, an object on to which properties can be defined that will override application settings within Express internals (the values returned from `app.get()` are not altered, therefore any middleware/components that wants to respect the override would need to be updated to use `res.settings` instead of `app.get()`).\n\nAt present, this affects the following settings:\n- view\n- view engine\n- views\n- etag fn\n- json replacer\n- json spaces\n- jsonp callback name\n\nThe `res.settings` object is passed through to view rendering code by adding property `_settings` to the `options` parameter of `app.render()`.\n\nThe entry key for the view cache was changed to prepend the `views` setting to ensure the cache continues to work correctly if `views` is overridden to a different value (eg if view `'users'` was cached\nfrom `/projdir/views/a` but `views` was overridden to point to `/projdir/views/b` for this request, it should not retrieve the `'users'` view from the cache for `/projdir/views/a`).\n\n`res.settings` sets its `__proto__` to be the `settings` property of the current application so settings read from the object will default to the application settings.\n\nAs the request progresses through routing, the `__proto__` will be updated to ensure values always defalt to the settings of the current application.\n\n---\n\nFixes #2849\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2935/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2935/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2934",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2934/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2934/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2934/events",
    "html_url": "https://github.com/expressjs/express/issues/2934",
    "id": 140061386,
    "node_id": "MDU6SXNzdWUxNDAwNjEzODY=",
    "number": 2934,
    "title": "`trust proxy` not being inherited for sub-apps",
    "user": {
      "login": "DavidTPate",
      "id": 2223120,
      "node_id": "MDQ6VXNlcjIyMjMxMjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2223120?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DavidTPate",
      "html_url": "https://github.com/DavidTPate",
      "followers_url": "https://api.github.com/users/DavidTPate/followers",
      "following_url": "https://api.github.com/users/DavidTPate/following{/other_user}",
      "gists_url": "https://api.github.com/users/DavidTPate/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DavidTPate/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DavidTPate/subscriptions",
      "organizations_url": "https://api.github.com/users/DavidTPate/orgs",
      "repos_url": "https://api.github.com/users/DavidTPate/repos",
      "events_url": "https://api.github.com/users/DavidTPate/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DavidTPate/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-03-11T01:43:23Z",
    "updated_at": "2016-03-11T14:49:12Z",
    "closed_at": "2016-03-11T02:11:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Looking through the [docs](http://expressjs.com/en/4x/api.html#app.set) I see that the setting for `trust proxy` should be inherited for sub-apps within `express, I'm just not seeing that to be the case.\n\nI think there's one of two things that could be happening:\n1. My understanding of what a `sub-app` is is flawed.\n2. There's a bug with the inheritance (I didn't see a test testing this specific clause in the docs.\n\nCurrently I'm running the following setup:\n\n``` js\nconst express = require('express');\nconst vhost = require('vhost');\n\nvar app = express();\nvar vhostApp = express();\n\napp.set('trust proxy', true);\n\napp.use(vhost('*.com', vhostApp);\n```\n\nAnd with this, I'm not seeing the value inherited by the `vhostApp` so I'm guessing my idea of what a sub-app is is incorrect.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2934/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2934/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2933",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2933/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2933/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2933/events",
    "html_url": "https://github.com/expressjs/express/pull/2933",
    "id": 138994020,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjE5MjUwOTI=",
    "number": 2933,
    "title": "Added bugs field in package.json",
    "user": {
      "login": "antonaut",
      "id": 513311,
      "node_id": "MDQ6VXNlcjUxMzMxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/513311?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/antonaut",
      "html_url": "https://github.com/antonaut",
      "followers_url": "https://api.github.com/users/antonaut/followers",
      "following_url": "https://api.github.com/users/antonaut/following{/other_user}",
      "gists_url": "https://api.github.com/users/antonaut/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/antonaut/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/antonaut/subscriptions",
      "organizations_url": "https://api.github.com/users/antonaut/orgs",
      "repos_url": "https://api.github.com/users/antonaut/repos",
      "events_url": "https://api.github.com/users/antonaut/events{/privacy}",
      "received_events_url": "https://api.github.com/users/antonaut/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 163600,
        "node_id": "MDU6TGFiZWwxNjM2MDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-03-07T14:38:01Z",
    "updated_at": "2016-03-07T18:29:43Z",
    "closed_at": "2016-03-07T14:40:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2933",
      "html_url": "https://github.com/expressjs/express/pull/2933",
      "diff_url": "https://github.com/expressjs/express/pull/2933.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2933.patch",
      "merged_at": null
    },
    "body": "Issue:\n#2932\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2933/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2933/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2932",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2932/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2932/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2932/events",
    "html_url": "https://github.com/expressjs/express/issues/2932",
    "id": 138993729,
    "node_id": "MDU6SXNzdWUxMzg5OTM3Mjk=",
    "number": 2932,
    "title": "Include \"bugs\" field in package.json ",
    "user": {
      "login": "antonaut",
      "id": 513311,
      "node_id": "MDQ6VXNlcjUxMzMxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/513311?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/antonaut",
      "html_url": "https://github.com/antonaut",
      "followers_url": "https://api.github.com/users/antonaut/followers",
      "following_url": "https://api.github.com/users/antonaut/following{/other_user}",
      "gists_url": "https://api.github.com/users/antonaut/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/antonaut/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/antonaut/subscriptions",
      "organizations_url": "https://api.github.com/users/antonaut/orgs",
      "repos_url": "https://api.github.com/users/antonaut/repos",
      "events_url": "https://api.github.com/users/antonaut/events{/privacy}",
      "received_events_url": "https://api.github.com/users/antonaut/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 163600,
        "node_id": "MDU6TGFiZWwxNjM2MDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-03-07T14:36:45Z",
    "updated_at": "2016-03-07T15:28:47Z",
    "closed_at": "2016-03-07T14:40:25Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I think it's a good idea to include this field so it can be automatically extracted. \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2932/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2932/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2931",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2931/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2931/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2931/events",
    "html_url": "https://github.com/expressjs/express/issues/2931",
    "id": 138885338,
    "node_id": "MDU6SXNzdWUxMzg4ODUzMzg=",
    "number": 2931,
    "title": "passing express object as parm to routes",
    "user": {
      "login": "yosiasz",
      "id": 900951,
      "node_id": "MDQ6VXNlcjkwMDk1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/900951?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yosiasz",
      "html_url": "https://github.com/yosiasz",
      "followers_url": "https://api.github.com/users/yosiasz/followers",
      "following_url": "https://api.github.com/users/yosiasz/following{/other_user}",
      "gists_url": "https://api.github.com/users/yosiasz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yosiasz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yosiasz/subscriptions",
      "organizations_url": "https://api.github.com/users/yosiasz/orgs",
      "repos_url": "https://api.github.com/users/yosiasz/repos",
      "events_url": "https://api.github.com/users/yosiasz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yosiasz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2016-03-07T04:34:56Z",
    "updated_at": "2016-03-15T00:47:40Z",
    "closed_at": "2016-03-15T00:47:32Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello there\n\nBreaking down my routes as individuals js files and referencing them as follows\nvar auth = require('./routes/rooms')\n\nbut on each routes file express is yet again instantiated. Couldn't express object be passed as a parm to the routes as follows\n\nvar auth = require('./routes/rooms')(app);\n\nThanks so much!!\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2931/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2931/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2930",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2930/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2930/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2930/events",
    "html_url": "https://github.com/expressjs/express/issues/2930",
    "id": 138425822,
    "node_id": "MDU6SXNzdWUxMzg0MjU4MjI=",
    "number": 2930,
    "title": "npm ERR! Failed to parse package.json data.",
    "user": {
      "login": "KenKennef",
      "id": 8088154,
      "node_id": "MDQ6VXNlcjgwODgxNTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8088154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KenKennef",
      "html_url": "https://github.com/KenKennef",
      "followers_url": "https://api.github.com/users/KenKennef/followers",
      "following_url": "https://api.github.com/users/KenKennef/following{/other_user}",
      "gists_url": "https://api.github.com/users/KenKennef/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KenKennef/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KenKennef/subscriptions",
      "organizations_url": "https://api.github.com/users/KenKennef/orgs",
      "repos_url": "https://api.github.com/users/KenKennef/repos",
      "events_url": "https://api.github.com/users/KenKennef/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KenKennef/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 26,
    "created_at": "2016-03-04T09:25:32Z",
    "updated_at": "2018-03-21T23:26:31Z",
    "closed_at": "2016-03-04T13:42:37Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "```\nnpm ERR! Windows_NT 10.0.10586\nnpm ERR! argv \"C:\\\\Program Files (x86)\\\\nodejs\\\\node.exe\" \"C:\\\\Users\\\\KennethVoss\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\"\nnpm ERR! node v4.3.1\nnpm ERR! npm  v3.8.0\nnpm ERR! file C:\\Users\\KennethVoss\\AppData\\Roaming\\npm-cache\\inherits\\2.0.1\\package\\package.json\nnpm ERR! code EJSONPARSE\n\nnpm ERR! Failed to parse json\nnpm ERR! No data, empty input at 1:1\nnpm ERR!\nnpm ERR! ^\nnpm ERR! File: C:\\Users\\KennethVoss\\AppData\\Roaming\\npm-cache\\inherits\\2.0.1\\package\\package.json\nnpm ERR! Failed to parse package.json data.\nnpm ERR! package.json must be actual JSON, not just JavaScript.\nnpm ERR!\nnpm ERR! This is not a bug in npm.\nnpm ERR! Tell the package author to fix their package.json file. JSON.parse\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2930/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2930/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2929",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2929/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2929/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2929/events",
    "html_url": "https://github.com/expressjs/express/issues/2929",
    "id": 138423145,
    "node_id": "MDU6SXNzdWUxMzg0MjMxNDU=",
    "number": 2929,
    "title": "don't tell me error while write consoel",
    "user": {
      "login": "yyjazsf",
      "id": 2438224,
      "node_id": "MDQ6VXNlcjI0MzgyMjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2438224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yyjazsf",
      "html_url": "https://github.com/yyjazsf",
      "followers_url": "https://api.github.com/users/yyjazsf/followers",
      "following_url": "https://api.github.com/users/yyjazsf/following{/other_user}",
      "gists_url": "https://api.github.com/users/yyjazsf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yyjazsf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yyjazsf/subscriptions",
      "organizations_url": "https://api.github.com/users/yyjazsf/orgs",
      "repos_url": "https://api.github.com/users/yyjazsf/repos",
      "events_url": "https://api.github.com/users/yyjazsf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yyjazsf/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2016-03-04T09:15:46Z",
    "updated_at": "2016-03-05T22:39:32Z",
    "closed_at": "2016-03-05T22:39:32Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I write \n**console**.log(_code);   in router.route('/github').get  \nin http,i only get 404,express don't tell me error \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2929/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2929/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2928",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2928/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2928/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2928/events",
    "html_url": "https://github.com/expressjs/express/issues/2928",
    "id": 138369271,
    "node_id": "MDU6SXNzdWUxMzgzNjkyNzE=",
    "number": 2928,
    "title": "Update the organization header",
    "user": {
      "login": "jonathanong",
      "id": 643505,
      "node_id": "MDQ6VXNlcjY0MzUwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/643505?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanong",
      "html_url": "https://github.com/jonathanong",
      "followers_url": "https://api.github.com/users/jonathanong/followers",
      "following_url": "https://api.github.com/users/jonathanong/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanong/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanong/orgs",
      "repos_url": "https://api.github.com/users/jonathanong/repos",
      "events_url": "https://api.github.com/users/jonathanong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanong/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 324166296,
        "node_id": "MDU6TGFiZWwzMjQxNjYyOTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/meta",
        "name": "meta",
        "color": "fef2c0",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-03-04T03:52:10Z",
    "updated_at": "2016-03-05T22:40:24Z",
    "closed_at": "2016-03-05T22:40:24Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "https://github.com/expressjs\n\n![screen shot 2016-03-03 at 7 51 09 pm](https://cloud.githubusercontent.com/assets/643505/13517554/4fddbcce-e179-11e5-8cd1-3b383a2e6698.png)\n\nthis was written a long time ago when we were splitting out connect/express into modules and it needs an update.\n- better tagline\n- link to http://expressjs.com\n\n/cc @dougwilson @jasnell @mikeal \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2928/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2928/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2927",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2927/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2927/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2927/events",
    "html_url": "https://github.com/expressjs/express/pull/2927",
    "id": 138358436,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjE2NTkwMzM=",
    "number": 2927,
    "title": "Update package.json",
    "user": {
      "login": "EasonWang01",
      "id": 11001914,
      "node_id": "MDQ6VXNlcjExMDAxOTE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/11001914?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EasonWang01",
      "html_url": "https://github.com/EasonWang01",
      "followers_url": "https://api.github.com/users/EasonWang01/followers",
      "following_url": "https://api.github.com/users/EasonWang01/following{/other_user}",
      "gists_url": "https://api.github.com/users/EasonWang01/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EasonWang01/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EasonWang01/subscriptions",
      "organizations_url": "https://api.github.com/users/EasonWang01/orgs",
      "repos_url": "https://api.github.com/users/EasonWang01/repos",
      "events_url": "https://api.github.com/users/EasonWang01/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EasonWang01/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578716,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/deps",
        "name": "deps",
        "color": "444444",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-03-04T02:33:31Z",
    "updated_at": "2016-05-10T16:39:41Z",
    "closed_at": "2016-05-10T16:39:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2927",
      "html_url": "https://github.com/expressjs/express/pull/2927",
      "diff_url": "https://github.com/expressjs/express/pull/2927.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2927.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2927/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2927/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2926",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2926/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2926/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2926/events",
    "html_url": "https://github.com/expressjs/express/pull/2926",
    "id": 138337288,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjE2NDgyMTE=",
    "number": 2926,
    "title": "Adding additional template variable scopes",
    "user": {
      "login": "gfoust",
      "id": 1664161,
      "node_id": "MDQ6VXNlcjE2NjQxNjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1664161?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfoust",
      "html_url": "https://github.com/gfoust",
      "followers_url": "https://api.github.com/users/gfoust/followers",
      "following_url": "https://api.github.com/users/gfoust/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfoust/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfoust/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfoust/subscriptions",
      "organizations_url": "https://api.github.com/users/gfoust/orgs",
      "repos_url": "https://api.github.com/users/gfoust/repos",
      "events_url": "https://api.github.com/users/gfoust/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfoust/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 163600,
        "node_id": "MDU6TGFiZWwxNjM2MDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2016-03-04T00:15:41Z",
    "updated_at": "2020-04-15T08:23:21Z",
    "closed_at": "2020-04-15T08:23:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2926",
      "html_url": "https://github.com/expressjs/express/pull/2926",
      "diff_url": "https://github.com/expressjs/express/pull/2926.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2926.patch",
      "merged_at": null
    },
    "body": "This is a follow up to #2924.  It addresses the issue of exposing session variables to template engines using a more general approach.  Note that unlike #2924, this request does not involve exposing scopes explicitly using certain names.\n\nEach response (potentially) has a stack of template variable scopes.  Each scope is an object whose properties define the variables to be exposed.  A method was added to the response object named `addTmplVars`.  The parameter to this method is a scope to be pushed on the scope stack.  Here is an example:\n\n``` javascript\nres.addTmplVars({ name: 'gfoust', count: 3 });\n```\n\nThe scope is stored directly on the scope stack.  Therefore, any changes made to that scope will be visible to the template engine.  For example, the following code listing has the same effect as the previous one.\n\n``` javascript\nvar obj = {};\nres.addTmplVars(obj);\nobj.name = 'gfoust';\nobj.count = 3;\n```\n\nWhen a template is rendered, the objects on the scope stack are \"flattened\" into a single object.  This \"flattening\" does not alter the scopes in any way; it merely copies their properties to a new object.  In the case of conflicts, variables from scopes higher up in the stack will replace those from scopes lower in the stack.\n\nPrior to this \"flattening\", the variables of `app.locals` are effectively added to the bottom of the stack, and variables from `res.locals` are added to the top of the stack, followed by variables passed to `res.render`.  This augmented stack may be represented as follows:\n\nvariables passed to `res.render` -> `res.locals` -> scope stack (high to low) -> `app.locals`\n\nThe arrows here represent precedence:  variables from scopes on the left of the arrow will override variables from scopes on the right should a conflict occur.\n\nThe idea here is that any middleware can expose a scope to the template engine.  For example, when using express-session, it could push the session object onto the scope stack, allowing session variables to be directly accessed by the template.  Should multiple middlewares push scopes to the stack, the order in which they execute will define precedence.\n\nI used the `tmplVars` property of the response object to hold the scope stack.  I would expect this to be considered a private variable.  The property is not created until the first time `addTmplVars` is called.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2926/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2926/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2925",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2925/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2925/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2925/events",
    "html_url": "https://github.com/expressjs/express/issues/2925",
    "id": 138154533,
    "node_id": "MDU6SXNzdWUxMzgxNTQ1MzM=",
    "number": 2925,
    "title": "Question: Is there a way to send the result of yielding a promise as a steam in express 4?",
    "user": {
      "login": "swarajgiri",
      "id": 6647345,
      "node_id": "MDQ6VXNlcjY2NDczNDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6647345?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/swarajgiri",
      "html_url": "https://github.com/swarajgiri",
      "followers_url": "https://api.github.com/users/swarajgiri/followers",
      "following_url": "https://api.github.com/users/swarajgiri/following{/other_user}",
      "gists_url": "https://api.github.com/users/swarajgiri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/swarajgiri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/swarajgiri/subscriptions",
      "organizations_url": "https://api.github.com/users/swarajgiri/orgs",
      "repos_url": "https://api.github.com/users/swarajgiri/repos",
      "events_url": "https://api.github.com/users/swarajgiri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/swarajgiri/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2016-03-03T11:39:30Z",
    "updated_at": "2016-05-07T17:24:04Z",
    "closed_at": "2016-05-07T17:24:04Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have an json api that gets a boat load of data from postgres and sends out a response. I am using promises and generators for flow control. \n\nThe code looks like \n\n``` js\nfunction aPromise() {\n    // result of a postgres query\n    return Promise.resolve({\n        'data': [1, 2 ,3]\n    }\n  });\n}\n\n//express 4 router\n    let wrap = require('co-express');\n\n    router.get('/', wrap(function* (req, res, next) {\n        let payload;\n\n        try {\n            payload = yield aPromise();\n        } catch (e) {\n            return next(e);\n        }\n\n        res.json(payload);\n    })); \n```\n\nIs there a way to do the above but stream the json response out?\n\nNote: I posted the same question on [stackoverflow](http://stackoverflow.com/questions/35742367/how-to-send-result-of-an-yield-on-a-promise-as-a-stream-in-express-4) and at the time of writing there we no responses.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2925/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2925/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2924",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2924/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2924/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2924/events",
    "html_url": "https://github.com/expressjs/express/pull/2924",
    "id": 138074732,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjE1MTAzMTg=",
    "number": 2924,
    "title": "Exposing session variables to template.",
    "user": {
      "login": "gfoust",
      "id": 1664161,
      "node_id": "MDQ6VXNlcjE2NjQxNjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1664161?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfoust",
      "html_url": "https://github.com/gfoust",
      "followers_url": "https://api.github.com/users/gfoust/followers",
      "following_url": "https://api.github.com/users/gfoust/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfoust/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfoust/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfoust/subscriptions",
      "organizations_url": "https://api.github.com/users/gfoust/orgs",
      "repos_url": "https://api.github.com/users/gfoust/repos",
      "events_url": "https://api.github.com/users/gfoust/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfoust/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 163600,
        "node_id": "MDU6TGFiZWwxNjM2MDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false,
        "description": null
      },
      {
        "id": 98481977,
        "node_id": "MDU6TGFiZWw5ODQ4MTk3Nw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-03-03T04:48:59Z",
    "updated_at": "2016-03-04T18:49:12Z",
    "closed_at": "2016-03-03T23:35:37Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2924",
      "html_url": "https://github.com/expressjs/express/pull/2924",
      "diff_url": "https://github.com/expressjs/express/pull/2924.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2924.patch",
      "merged_at": null
    },
    "body": "This is a request for a change I'd like to see in Express.  It exposes session variables to the template engine.\n\nCurrently the template engine is passed a map of variables obtained by combining the variables of `app.locals`, `res.locals`, and those passed directly to `res.render`.  In the case of conflicts, variables of `res.locals` override `app.locals`, and variables passed to `res.render` override both.  The template cannot reference session variables directly; they must be explicitly copied into `res.locals` or into the map passed to `res.render`.\n\nThis change adds the properties of the `req.session` object to the variables map passed to the template engine so that they may be referenced directly by the template.  In the case of conflicts, variables of `req.session` override those of `app.locals`, but variables of `res.locals` and those passed to `res.render` override those of `app.session`.  FYI:  this is consistent with the behavior of JSP.  The idea is that `app.locals` holds global variables, `req.session` holds variables specific to the user, `res.locals` holds variables specific to the request, and variables specific to the template are passed to `res.render`.\n\nFurthermore, all four variable maps are exposed through variables `_application` for `app.locals`, `_session` for `req.session`, `_request` for `res.locals`, and `_template` for variables passed to `res.render`.  This allows explicit name-conflict resolution (and, again, follows the behavior of JSP).\n\nThis change does not require `req.session` to exist; in the case where it doesn't, no session variables will be added to the map.  Note that all enumerable properties of the session are exposed.  In the case of express-session, this would include object methods such as `save`, `reload`, and `destroy`.  I have submitted a separate pull request to express-session that would make all such methods non-enumerable.\n\nThis change does have the potential to break existing applications in rare cases where there is a conflict between a session variable and a variable in `app.locals`.  Prior to the change the variable name would result in the value from `app.locals`, after the change it will result in the value from `req.session`.  This can be fixed in the template by explicitly referencing the desired scope (e.g., `_application.x` instead of just `x`).  However, if this is a concern, a configuration option could be used to determine whether or not session variables are exposed to the template engine.\n\nThis change uses `res.req` to access the request object via the response object in order to access the session object.  This property is not listed in the official API documentation.  If there are plans to remove that property, an alternative approach to accessing the session would be required.\n\nThanks.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2924/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2924/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2923",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2923/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2923/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2923/events",
    "html_url": "https://github.com/expressjs/express/issues/2923",
    "id": 138062842,
    "node_id": "MDU6SXNzdWUxMzgwNjI4NDI=",
    "number": 2923,
    "title": "express/examples",
    "user": {
      "login": "Knighton910",
      "id": 1773260,
      "node_id": "MDQ6VXNlcjE3NzMyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1773260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Knighton910",
      "html_url": "https://github.com/Knighton910",
      "followers_url": "https://api.github.com/users/Knighton910/followers",
      "following_url": "https://api.github.com/users/Knighton910/following{/other_user}",
      "gists_url": "https://api.github.com/users/Knighton910/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Knighton910/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Knighton910/subscriptions",
      "organizations_url": "https://api.github.com/users/Knighton910/orgs",
      "repos_url": "https://api.github.com/users/Knighton910/repos",
      "events_url": "https://api.github.com/users/Knighton910/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Knighton910/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 20,
    "created_at": "2016-03-03T03:19:36Z",
    "updated_at": "2020-04-04T15:31:17Z",
    "closed_at": "2020-04-04T15:31:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "@dougwilson I'd like to start working new `express/examples` They're pretty old currently. \n\nWhat are you're thoughts on this? \n\n> The majority of these are 2 years, there are a few, just a tad old. \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2923/reactions",
      "total_count": 8,
      "+1": 8,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2923/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2922",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2922/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2922/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2922/events",
    "html_url": "https://github.com/expressjs/express/issues/2922",
    "id": 138019681,
    "node_id": "MDU6SXNzdWUxMzgwMTk2ODE=",
    "number": 2922,
    "title": "Contribution Report 3/2/2016",
    "user": {
      "login": "mikeal",
      "id": 579,
      "node_id": "MDQ6VXNlcjU3OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/579?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikeal",
      "html_url": "https://github.com/mikeal",
      "followers_url": "https://api.github.com/users/mikeal/followers",
      "following_url": "https://api.github.com/users/mikeal/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikeal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikeal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikeal/subscriptions",
      "organizations_url": "https://api.github.com/users/mikeal/orgs",
      "repos_url": "https://api.github.com/users/mikeal/repos",
      "events_url": "https://api.github.com/users/mikeal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikeal/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 324166296,
        "node_id": "MDU6TGFiZWwzMjQxNjYyOTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/meta",
        "name": "meta",
        "color": "fef2c0",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 17,
    "created_at": "2016-03-02T23:00:27Z",
    "updated_at": "2017-02-19T18:57:29Z",
    "closed_at": "2017-02-19T18:57:29Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "I ran this quick contribution report across all the repos in all 3 orgs (expressjs, pillarjs, jshttp). This shows all contributors from January 1st 2016.\n\nIf we want to go back a little further it's easy enough to adjust that variable.\n\nTotal Commits:  285\n- **[@dougwilson](https://github.com/dougwilson)**\n  - 12 in [expressjs/express](https://github.com/expressjs/express/commits?author=dougwilson)\n  - 5 in [expressjs/compression](https://github.com/expressjs/compression/commits?author=dougwilson)\n  - 10 in [expressjs/body-parser](https://github.com/expressjs/body-parser/commits?author=dougwilson)\n  - 4 in [expressjs/serve-favicon](https://github.com/expressjs/serve-favicon/commits?author=dougwilson)\n  - 6 in [expressjs/morgan](https://github.com/expressjs/morgan/commits?author=dougwilson)\n  - 2 in [expressjs/cookie-parser](https://github.com/expressjs/cookie-parser/commits?author=dougwilson)\n  - 13 in [expressjs/session](https://github.com/expressjs/session/commits?author=dougwilson)\n  - 6 in [expressjs/cookie-session](https://github.com/expressjs/cookie-session/commits?author=dougwilson)\n  - 3 in [expressjs/errorhandler](https://github.com/expressjs/errorhandler/commits?author=dougwilson)\n  - 19 in [expressjs/csurf](https://github.com/expressjs/csurf/commits?author=dougwilson)\n  - 9 in [expressjs/serve-index](https://github.com/expressjs/serve-index/commits?author=dougwilson)\n  - 6 in [expressjs/serve-static](https://github.com/expressjs/serve-static/commits?author=dougwilson)\n  - 4 in [jshttp/methods](https://github.com/jshttp/methods/commits?author=dougwilson)\n  - 5 in [jshttp/compressible](https://github.com/jshttp/compressible/commits?author=dougwilson)\n  - 5 in [jshttp/accepts](https://github.com/jshttp/accepts/commits?author=dougwilson)\n  - 9 in [jshttp/type-is](https://github.com/jshttp/type-is/commits?author=dougwilson)\n  - 13 in [jshttp/statuses](https://github.com/jshttp/statuses/commits?author=dougwilson)\n  - 10 in [jshttp/mime-types](https://github.com/jshttp/mime-types/commits?author=dougwilson)\n  - 2 in [jshttp/proxy-addr](https://github.com/jshttp/proxy-addr/commits?author=dougwilson)\n  - 10 in [jshttp/etag](https://github.com/jshttp/etag/commits?author=dougwilson)\n  - 7 in [jshttp/mime-db](https://github.com/jshttp/mime-db/commits?author=dougwilson)\n  - 6 in [jshttp/http-errors](https://github.com/jshttp/http-errors/commits?author=dougwilson)\n  - 3 in [jshttp/content-disposition](https://github.com/jshttp/content-disposition/commits?author=dougwilson)\n  - 13 in [pillarjs/cookies](https://github.com/pillarjs/cookies/commits?author=dougwilson)\n  - 8 in [pillarjs/send](https://github.com/pillarjs/send/commits?author=dougwilson)\n  - 4 in [pillarjs/parseurl](https://github.com/pillarjs/parseurl/commits?author=dougwilson)\n  - 4 in [pillarjs/resolve-path](https://github.com/pillarjs/resolve-path/commits?author=dougwilson)\n  - 14 in [pillarjs/csrf](https://github.com/pillarjs/csrf/commits?author=dougwilson)\n  - 5 in [pillarjs/router](https://github.com/pillarjs/router/commits?author=dougwilson)\n- **[@jordonias](https://github.com/jordonias)**\n  - 1 in [expressjs/express](https://github.com/expressjs/express/commits?author=jordonias)\n- **[@andyfleming](https://github.com/andyfleming)**\n  - 1 in [expressjs/express](https://github.com/expressjs/express/commits?author=andyfleming)\n- **[@sjanuary](https://github.com/sjanuary)**\n  - 1 in [expressjs/express](https://github.com/expressjs/express/commits?author=sjanuary)\n- **[@segmentationfaulter](https://github.com/segmentationfaulter)**\n  - 1 in [expressjs/express](https://github.com/expressjs/express/commits?author=segmentationfaulter)\n- **[@mikeal](https://github.com/mikeal)**\n  - 1 in [expressjs/express](https://github.com/expressjs/express/commits?author=mikeal)\n- **[@lazywithclass](https://github.com/lazywithclass)**\n  - 1 in [expressjs/body-parser](https://github.com/expressjs/body-parser/commits?author=lazywithclass)\n- **[@chojrak11](https://github.com/chojrak11)**\n  - 1 in [expressjs/session](https://github.com/expressjs/session/commits?author=chojrak11)\n- **[@MattMcFarland](https://github.com/MattMcFarland)**\n  - 1 in [expressjs/session](https://github.com/expressjs/session/commits?author=MattMcFarland)\n- **[@thepont](https://github.com/thepont)**\n  - 1 in [expressjs/session](https://github.com/expressjs/session/commits?author=thepont)\n- **[@BlueAccords](https://github.com/BlueAccords)**\n  - 1 in [expressjs/session](https://github.com/expressjs/session/commits?author=BlueAccords)\n- **[@goyney](https://github.com/goyney)**\n  - 1 in [expressjs/session](https://github.com/expressjs/session/commits?author=goyney)\n- **[@cianclarke](https://github.com/cianclarke)**\n  - 1 in [expressjs/session](https://github.com/expressjs/session/commits?author=cianclarke)\n- **[@scottymcribs](https://github.com/scottymcribs)**\n  - 1 in [expressjs/csurf](https://github.com/expressjs/csurf/commits?author=scottymcribs)\n- **[@patrickglynn](https://github.com/patrickglynn)**\n  - 1 in [expressjs/serve-index](https://github.com/expressjs/serve-index/commits?author=patrickglynn)\n- **[@taueres](https://github.com/taueres)**\n  - 1 in [expressjs/serve-static](https://github.com/expressjs/serve-static/commits?author=taueres)\n- **[@niftylettuce](https://github.com/niftylettuce)**\n  - 1 in [expressjs/express-paginate](https://github.com/expressjs/express-paginate/commits?author=niftylettuce)\n- **[@crandmck](https://github.com/crandmck)**\n  - 2 in [expressjs/express-api-docs](https://github.com/expressjs/express-api-docs/commits?author=crandmck)\n- **[@jasnell](https://github.com/jasnell)**\n  - 1 in [expressjs/express-api-docs](https://github.com/expressjs/express-api-docs/commits?author=jasnell)\n- **[@jonathanong](https://github.com/jonathanong)**\n  - 5 in [jshttp/http-assert](https://github.com/jshttp/http-assert/commits?author=jonathanong)\n  - 7 in [jshttp/spdy-push](https://github.com/jshttp/spdy-push/commits?author=jonathanong)\n  - 6 in [pillarjs/resolve-path](https://github.com/pillarjs/resolve-path/commits?author=jonathanong)\n  - 3 in [pillarjs/path-match](https://github.com/pillarjs/path-match/commits?author=jonathanong)\n- **[@billymoon](https://github.com/billymoon)**\n  - 1 in [jshttp/type-is](https://github.com/jshttp/type-is/commits?author=billymoon)\n  - 1 in [jshttp/mime-db](https://github.com/jshttp/mime-db/commits?author=billymoon)\n- **[@a-r-d](https://github.com/a-r-d)**\n  - 1 in [jshttp/type-is](https://github.com/jshttp/type-is/commits?author=a-r-d)\n- **[@glorieux-f](https://github.com/glorieux-f)**\n  - 1 in [jshttp/mime-db](https://github.com/jshttp/mime-db/commits?author=glorieux-f)\n- **[@krmannix](https://github.com/krmannix)**\n  - 7 in [jshttp/http-errors](https://github.com/jshttp/http-errors/commits?author=krmannix)\n- **[@tkrotoff](https://github.com/tkrotoff)**\n  - 2 in [jshttp/http-errors](https://github.com/jshttp/http-errors/commits?author=tkrotoff)\n- **[@CatTail](https://github.com/CatTail)**\n  - 1 in [pillarjs/cookies](https://github.com/pillarjs/cookies/commits?author=CatTail)\n- **[@dead-horse](https://github.com/dead-horse)**\n  - 1 in [pillarjs/cookies](https://github.com/pillarjs/cookies/commits?author=dead-horse)\n- **[@blakeembrey](https://github.com/blakeembrey)**\n  - 1 in [pillarjs/path-to-regexp](https://github.com/pillarjs/path-to-regexp/commits?author=blakeembrey)\n- **[@glenjamin](https://github.com/glenjamin)**\n  - 1 in [pillarjs/csrf](https://github.com/pillarjs/csrf/commits?author=glenjamin)\n- **[@Fishrock123](https://github.com/Fishrock123)**\n  - 7 in [pillarjs/extend-proto](https://github.com/pillarjs/extend-proto/commits?author=Fishrock123)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2922/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2922/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2921",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2921/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2921/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2921/events",
    "html_url": "https://github.com/expressjs/express/issues/2921",
    "id": 137906020,
    "node_id": "MDU6SXNzdWUxMzc5MDYwMjA=",
    "number": 2921,
    "title": "Charset UTF-8 appended to Content-Type when using res.json",
    "user": {
      "login": "emilssolmanis",
      "id": 663720,
      "node_id": "MDQ6VXNlcjY2MzcyMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/663720?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/emilssolmanis",
      "html_url": "https://github.com/emilssolmanis",
      "followers_url": "https://api.github.com/users/emilssolmanis/followers",
      "following_url": "https://api.github.com/users/emilssolmanis/following{/other_user}",
      "gists_url": "https://api.github.com/users/emilssolmanis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/emilssolmanis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/emilssolmanis/subscriptions",
      "organizations_url": "https://api.github.com/users/emilssolmanis/orgs",
      "repos_url": "https://api.github.com/users/emilssolmanis/repos",
      "events_url": "https://api.github.com/users/emilssolmanis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/emilssolmanis/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 88345,
        "node_id": "MDU6TGFiZWw4ODM0NQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/3.x",
        "name": "3.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-03-02T15:31:10Z",
    "updated_at": "2016-03-02T18:23:08Z",
    "closed_at": "2016-03-02T18:22:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Yes, I have read the CVE reasons on the [couple of issues](https://github.com/expressjs/express/issues/2713).\n\nThat would be valid for when strings are output, i.e., rendered templates and whatnot. However, if I'm sending a response via `res.json`, that should imply there is no browser involved in the mix, hence \"protecting\" me from XSS attacks is silly. The encoding should only be set when sending things intended for browser consumption, not when I've obviously written an API.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2921/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2921/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2920",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2920/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2920/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2920/events",
    "html_url": "https://github.com/expressjs/express/issues/2920",
    "id": 137882289,
    "node_id": "MDU6SXNzdWUxMzc4ODIyODk=",
    "number": 2920,
    "title": "Access default router",
    "user": {
      "login": "pronebird",
      "id": 704044,
      "node_id": "MDQ6VXNlcjcwNDA0NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/704044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pronebird",
      "html_url": "https://github.com/pronebird",
      "followers_url": "https://api.github.com/users/pronebird/followers",
      "following_url": "https://api.github.com/users/pronebird/following{/other_user}",
      "gists_url": "https://api.github.com/users/pronebird/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pronebird/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pronebird/subscriptions",
      "organizations_url": "https://api.github.com/users/pronebird/orgs",
      "repos_url": "https://api.github.com/users/pronebird/repos",
      "events_url": "https://api.github.com/users/pronebird/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pronebird/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-03-02T14:07:16Z",
    "updated_at": "2016-05-04T20:41:15Z",
    "closed_at": "2016-05-04T20:41:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\n\nExpress app creates the default router, is there any way to access it publicly without using private `app._router`? Need it for listing all of the routes.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2920/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2920/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2919",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2919/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2919/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2919/events",
    "html_url": "https://github.com/expressjs/express/issues/2919",
    "id": 137749659,
    "node_id": "MDU6SXNzdWUxMzc3NDk2NTk=",
    "number": 2919,
    "title": "Bootstrap Express.js committers",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 324166296,
        "node_id": "MDU6TGFiZWwzMjQxNjYyOTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/meta",
        "name": "meta",
        "color": "fef2c0",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-03-02T02:08:10Z",
    "updated_at": "2016-03-10T00:04:14Z",
    "closed_at": "2016-03-10T00:04:14Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "With the moving of this repository into the `expressjs` GitHub organization and the three GitHub organizations [expressjs](https://github.com/expressjs), [pillarjs](https://github.com/pillarjs), and [jshttp](https://github.com/jshttp), there is no organized list of committers/TC for this new super structure.\n\nIn order to get this bootstrapped, we are moving forward with the plan agreed upon in the latest Express.js meeting (https://github.com/expressjs/discussions/issues/1):\n\nData will be collected by analyzing the commits in all the repositories in the above three repositories. From this data of existing committers, the new agreed upon contributing guide (https://github.com/expressjs/express/blob/master/Contributing.md) will be applied to the list to create a group of committers for Express.js (see section \"Becoming a Committer\").\n\nThis new committers list will then also become the Express TC group, and from this point forward, on-boarding new committers to this list will follow the contributor guide and the set of committers that are the TC will be managed according to the contributor guide.\n\n@mikeal has volunteered to adapt an existing Node.js script to collect the set of data to bootstrap the committers from.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2919/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2919/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2918",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2918/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2918/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2918/events",
    "html_url": "https://github.com/expressjs/express/pull/2918",
    "id": 137377761,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjExNDU4ODk=",
    "number": 2918,
    "title": "New Contribution Policy",
    "user": {
      "login": "mikeal",
      "id": 579,
      "node_id": "MDQ6VXNlcjU3OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/579?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikeal",
      "html_url": "https://github.com/mikeal",
      "followers_url": "https://api.github.com/users/mikeal/followers",
      "following_url": "https://api.github.com/users/mikeal/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikeal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikeal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikeal/subscriptions",
      "organizations_url": "https://api.github.com/users/mikeal/orgs",
      "repos_url": "https://api.github.com/users/mikeal/repos",
      "events_url": "https://api.github.com/users/mikeal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikeal/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 19,
    "created_at": "2016-02-29T21:13:46Z",
    "updated_at": "2016-03-02T02:18:32Z",
    "closed_at": "2016-03-02T00:03:57Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2918",
      "html_url": "https://github.com/expressjs/express/pull/2918",
      "diff_url": "https://github.com/expressjs/express/pull/2918.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2918.patch",
      "merged_at": null
    },
    "body": "This is very much still a work in progress.\n\nRecently, I wrote up a new \"Base Contribution Policy\" that was approved by the TSC. While I was writing this up one of the use cases I was thinking about was Express.\n\nThe goal of the policy is to be a **starting point**. Projects are expected to make changes and adjustments to it for their own needs.\n\nWith that in mind I thought it best to begin this PR with the base policy so that the Express contributors can read it, ask questions, and suggest modifications or potentially just outright reject it if it's too far away from what people would like.\n\nThe old policy is still intact and was moved to a \"Collaborator Guide\" because there's still some great stuff in there. I'll leave it to this group to suggest how we best link to this guide in the Contributing file and to propose any modifications to that guide where it might be effected by this new Contributing file.\n\nAlso, keep in mind that the _specific_ governance process is left out of this document intentionally. That can be defined in a separate \"Governance\" document once there is agreement on this document.\n\nA few questions I have:\n1. Is the best way for Express to operate at this time to create a _unified_ list of committers and TC members across all 3 orgs?\n2. If the answer to 1 is true then we need to do a good job of documenting the org structures for on-boarding and we may want to consider running any existing committers through that on-boarding since the scope of their access may be increased.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2918/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2918/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2917",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2917/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2917/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2917/events",
    "html_url": "https://github.com/expressjs/express/issues/2917",
    "id": 137333135,
    "node_id": "MDU6SXNzdWUxMzczMzMxMzU=",
    "number": 2917,
    "title": "What is the scope of req and res objects in express middleware stack?",
    "user": {
      "login": "segmentationfaulter",
      "id": 6733537,
      "node_id": "MDQ6VXNlcjY3MzM1Mzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6733537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/segmentationfaulter",
      "html_url": "https://github.com/segmentationfaulter",
      "followers_url": "https://api.github.com/users/segmentationfaulter/followers",
      "following_url": "https://api.github.com/users/segmentationfaulter/following{/other_user}",
      "gists_url": "https://api.github.com/users/segmentationfaulter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/segmentationfaulter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/segmentationfaulter/subscriptions",
      "organizations_url": "https://api.github.com/users/segmentationfaulter/orgs",
      "repos_url": "https://api.github.com/users/segmentationfaulter/repos",
      "events_url": "https://api.github.com/users/segmentationfaulter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/segmentationfaulter/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-02-29T18:32:51Z",
    "updated_at": "2016-02-29T18:57:40Z",
    "closed_at": "2016-02-29T18:53:14Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "I tried to do something like this and failed\n\n``` js\nvar app = require('express')();\napp.use(function(req, res, next) {\n  req.test = 'test';    // I thought req.test should be accessible in following middlewares\n  next();\n}\n\napp.get('/', function(req, res) {\n  console.log(req.test)    // undefined (A)\n}\n```\n\nSince `req.test` is not available in on line `A`, it means that `req` or `res` or not global, i was wondering how do we make available properties like `req.body` available for the whole middleware stack (after this line of code: `app.use(bodyParser)`) and they behave like being global?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2917/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2917/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2916",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2916/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2916/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2916/events",
    "html_url": "https://github.com/expressjs/express/issues/2916",
    "id": 137242905,
    "node_id": "MDU6SXNzdWUxMzcyNDI5MDU=",
    "number": 2916,
    "title": "Route logging on error",
    "user": {
      "login": "trexpert",
      "id": 16317797,
      "node_id": "MDQ6VXNlcjE2MzE3Nzk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/16317797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/trexpert",
      "html_url": "https://github.com/trexpert",
      "followers_url": "https://api.github.com/users/trexpert/followers",
      "following_url": "https://api.github.com/users/trexpert/following{/other_user}",
      "gists_url": "https://api.github.com/users/trexpert/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/trexpert/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/trexpert/subscriptions",
      "organizations_url": "https://api.github.com/users/trexpert/orgs",
      "repos_url": "https://api.github.com/users/trexpert/repos",
      "events_url": "https://api.github.com/users/trexpert/events{/privacy}",
      "received_events_url": "https://api.github.com/users/trexpert/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-02-29T12:39:36Z",
    "updated_at": "2016-05-04T17:36:19Z",
    "closed_at": "2016-05-04T17:36:19Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "hi,\n\nthe route which is not valid should be logged with path. it's very hard to guess the invalid route.\n\nlib/router/route.js [Line 195]\nvar msg = 'Route.' + method + '() at path: \"' +this.path+ '\" requires callback functions but got a ' + type;\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2916/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2916/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2915",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2915/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2915/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2915/events",
    "html_url": "https://github.com/expressjs/express/issues/2915",
    "id": 136965406,
    "node_id": "MDU6SXNzdWUxMzY5NjU0MDY=",
    "number": 2915,
    "title": "[feature request] VannilaJS SPA example with login, registration and CRUD to  postgresql/MySQL",
    "user": {
      "login": "es6Test",
      "id": 13809207,
      "node_id": "MDQ6VXNlcjEzODA5MjA3",
      "avatar_url": "https://avatars.githubusercontent.com/u/13809207?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/es6Test",
      "html_url": "https://github.com/es6Test",
      "followers_url": "https://api.github.com/users/es6Test/followers",
      "following_url": "https://api.github.com/users/es6Test/following{/other_user}",
      "gists_url": "https://api.github.com/users/es6Test/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/es6Test/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/es6Test/subscriptions",
      "organizations_url": "https://api.github.com/users/es6Test/orgs",
      "repos_url": "https://api.github.com/users/es6Test/repos",
      "events_url": "https://api.github.com/users/es6Test/events{/privacy}",
      "received_events_url": "https://api.github.com/users/es6Test/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-02-27T20:46:27Z",
    "updated_at": "2020-04-04T15:31:52Z",
    "closed_at": "2020-04-04T15:31:52Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Would be great if someone would show a way to make a SPA (with login, registration etc) with a relational DB postgresql + express. \n\nI have 0 interest in MEAN stacks :)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2915/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2915/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2914",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2914/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2914/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2914/events",
    "html_url": "https://github.com/expressjs/express/issues/2914",
    "id": 136945003,
    "node_id": "MDU6SXNzdWUxMzY5NDUwMDM=",
    "number": 2914,
    "title": "Error: Cannot find module 'merge-descriptors'",
    "user": {
      "login": "es6Test",
      "id": 13809207,
      "node_id": "MDQ6VXNlcjEzODA5MjA3",
      "avatar_url": "https://avatars.githubusercontent.com/u/13809207?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/es6Test",
      "html_url": "https://github.com/es6Test",
      "followers_url": "https://api.github.com/users/es6Test/followers",
      "following_url": "https://api.github.com/users/es6Test/following{/other_user}",
      "gists_url": "https://api.github.com/users/es6Test/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/es6Test/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/es6Test/subscriptions",
      "organizations_url": "https://api.github.com/users/es6Test/orgs",
      "repos_url": "https://api.github.com/users/es6Test/repos",
      "events_url": "https://api.github.com/users/es6Test/events{/privacy}",
      "received_events_url": "https://api.github.com/users/es6Test/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-02-27T17:35:23Z",
    "updated_at": "2016-02-28T23:28:37Z",
    "closed_at": "2016-02-27T17:48:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I just downloaded the repo and ran `npm i` and then `cd cd examples/auth` and `node index.js`\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2914/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2914/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2913",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2913/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2913/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2913/events",
    "html_url": "https://github.com/expressjs/express/issues/2913",
    "id": 136910306,
    "node_id": "MDU6SXNzdWUxMzY5MTAzMDY=",
    "number": 2913,
    "title": "ERR failed at start script.",
    "user": {
      "login": "pointnotfoe",
      "id": 14087551,
      "node_id": "MDQ6VXNlcjE0MDg3NTUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/14087551?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pointnotfoe",
      "html_url": "https://github.com/pointnotfoe",
      "followers_url": "https://api.github.com/users/pointnotfoe/followers",
      "following_url": "https://api.github.com/users/pointnotfoe/following{/other_user}",
      "gists_url": "https://api.github.com/users/pointnotfoe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pointnotfoe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pointnotfoe/subscriptions",
      "organizations_url": "https://api.github.com/users/pointnotfoe/orgs",
      "repos_url": "https://api.github.com/users/pointnotfoe/repos",
      "events_url": "https://api.github.com/users/pointnotfoe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pointnotfoe/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-02-27T11:53:34Z",
    "updated_at": "2016-03-01T03:21:24Z",
    "closed_at": "2016-02-28T23:32:12Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This is the log when I do npm start\n[npm-debug.txt](https://github.com/expressjs/express/files/149319/npm-debug.txt)\n\nDont know if they are directly related but a warning that I get when I do npm install is \"mongoskin@1.4.13 requires a peer of mongodb@~1.4 but none was installed.\"\nWhich is still an open issue : https://github.com/Automattic/monk/issues/91\n\nThis is what my package .json has:\n\n``` js\n{\n  \"name\": \"fwork\",\n  \"version\": \"0.0.0\",\n  \"private\": true,\n  \"scripts\": {\n    \"start\": \"node ./bin/www\"\n  },\n  \"dependencies\": {\n    \"body-parser\": \"~1.12.4\",\n    \"cookie-parser\": \"~1.3.5\",\n    \"debug\": \"~2.2.0\",\n    \"express\": \"~4.12.4\",\n    \"jade\": \"~1.9.2\",\n    \"morgan\": \"~1.5.3\",\n    \"serve-favicon\": \"~2.2.1\",\n    \"mongodb\": \"~2.0.33\",\n    \"monk\": \"~1.0.1\"\n  }\n}\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2913/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2913/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2912",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2912/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2912/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2912/events",
    "html_url": "https://github.com/expressjs/express/issues/2912",
    "id": 136741349,
    "node_id": "MDU6SXNzdWUxMzY3NDEzNDk=",
    "number": 2912,
    "title": "Provide object with custom config parameters instead of router path",
    "user": {
      "login": "tamtakoe",
      "id": 2244675,
      "node_id": "MDQ6VXNlcjIyNDQ2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2244675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tamtakoe",
      "html_url": "https://github.com/tamtakoe",
      "followers_url": "https://api.github.com/users/tamtakoe/followers",
      "following_url": "https://api.github.com/users/tamtakoe/following{/other_user}",
      "gists_url": "https://api.github.com/users/tamtakoe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tamtakoe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tamtakoe/subscriptions",
      "organizations_url": "https://api.github.com/users/tamtakoe/orgs",
      "repos_url": "https://api.github.com/users/tamtakoe/repos",
      "events_url": "https://api.github.com/users/tamtakoe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tamtakoe/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-02-26T16:16:29Z",
    "updated_at": "2016-02-26T18:31:50Z",
    "closed_at": "2016-02-26T18:31:43Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In addition to\n\n``` js\nrouter.get('news/create', callback)\n```\n\nI want to write\n\n``` js\nrouter.get({\n    path: 'news/create',\n    authorization: true //custom parameter in req\n}, callback)\n```\n\nIt simpler to check custom parameter in middleware then to set authentification middleware for every router declaration especially when you have a lot of middlewares in your project\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2912/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2912/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2911",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2911/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2911/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2911/events",
    "html_url": "https://github.com/expressjs/express/issues/2911",
    "id": 136687191,
    "node_id": "MDU6SXNzdWUxMzY2ODcxOTE=",
    "number": 2911,
    "title": "Modifying req.params",
    "user": {
      "login": "SystemParadox",
      "id": 1228777,
      "node_id": "MDQ6VXNlcjEyMjg3Nzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1228777?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SystemParadox",
      "html_url": "https://github.com/SystemParadox",
      "followers_url": "https://api.github.com/users/SystemParadox/followers",
      "following_url": "https://api.github.com/users/SystemParadox/following{/other_user}",
      "gists_url": "https://api.github.com/users/SystemParadox/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SystemParadox/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SystemParadox/subscriptions",
      "organizations_url": "https://api.github.com/users/SystemParadox/orgs",
      "repos_url": "https://api.github.com/users/SystemParadox/repos",
      "events_url": "https://api.github.com/users/SystemParadox/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SystemParadox/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2016-02-26T12:39:43Z",
    "updated_at": "2016-03-03T10:21:44Z",
    "closed_at": "2016-02-26T14:21:10Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am having some issues adding properties to `req.params`. It seems the params get wiped out when stepping to the next middleware:\n\n```\nfunction foobarRouter(type) {\n  var router = express.router();\n  router.use(function (req, res, next) {\n    req.params.type = type;\n    next();\n  });\n  router.get('/',         renderPage('foobars'));\n  router.get('/new',      renderPage('foobar_edit'));\n  router.get('/:id',      renderPage('foobar'));\n  router.get('/:id/edit', renderPage('foobar_edit'));\n}\napp.use('/foo', foobarRouter('foo'));\napp.use('/bar', foobarRouter('bar'));\n```\n\nDespite explicitly setting `req.params.type`, it is undefined in `renderPage`.\n\nI had a look at `mergeParams: true`, but it seems that this only preserves the params from the parent, which doesn't work in this case because the parent (the `app.use`) doesn't have any real params.\n\nIt would work if I did, `app.use('/:type', foobarRouter());`, but the route needs to be restricted to specific types only.\n\nHow can I modify the `req.params` for a sub-router so that it looks like they came from the parent?\n\nThanks.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2911/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2911/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2910",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2910/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2910/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2910/events",
    "html_url": "https://github.com/expressjs/express/issues/2910",
    "id": 136502631,
    "node_id": "MDU6SXNzdWUxMzY1MDI2MzE=",
    "number": 2910,
    "title": "Blank PDF when served from Express",
    "user": {
      "login": "vinodmehta",
      "id": 526035,
      "node_id": "MDQ6VXNlcjUyNjAzNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/526035?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vinodmehta",
      "html_url": "https://github.com/vinodmehta",
      "followers_url": "https://api.github.com/users/vinodmehta/followers",
      "following_url": "https://api.github.com/users/vinodmehta/following{/other_user}",
      "gists_url": "https://api.github.com/users/vinodmehta/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vinodmehta/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vinodmehta/subscriptions",
      "organizations_url": "https://api.github.com/users/vinodmehta/orgs",
      "repos_url": "https://api.github.com/users/vinodmehta/repos",
      "events_url": "https://api.github.com/users/vinodmehta/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vinodmehta/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2016-02-25T20:31:06Z",
    "updated_at": "2019-05-18T16:35:56Z",
    "closed_at": "2016-02-25T21:51:56Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "Similar to #1555 but that one was closed so not sure if my comment will get any attention.\nCopying my comment from there.\n\nI am running into similar issue with my first ever nodejs service. I have following:\n\n``` javascript\n\nvar headers = {} \n///Setting some custom headers for authentication\n\nvar urlObj = new URL( url );\nvar options = {\n            host: urlObj.host,\n            path: urlObj.pathname + urlObj.query,\n            headers: headers\n };\n http.get( options, function( response ) {\n            var body = '';\n            response.on( 'data', function( data ) {\n                body += data;\n             } );\n\n             response.on( 'end', function() {\n                  res.set( 'Content-Type', 'application/pdf' );\n                  res.send( new Buffer( body, 'binary' ) );\n             } );\n } );\n```\n\nBut I see a blank PDF with the correct number of pages and browser renders it as a PDF but all pages are empty.\nAccessing the `url` directly shows the right pdf so the pdf is fine.\nAny input will be really appreciated.\n\nThanks\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2910/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2910/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2909",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2909/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2909/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2909/events",
    "html_url": "https://github.com/expressjs/express/issues/2909",
    "id": 136282482,
    "node_id": "MDU6SXNzdWUxMzYyODI0ODI=",
    "number": 2909,
    "title": "What is the point of putting 'undefined' on a line and not doing anything with it?",
    "user": {
      "login": "segmentationfaulter",
      "id": 6733537,
      "node_id": "MDQ6VXNlcjY3MzM1Mzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6733537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/segmentationfaulter",
      "html_url": "https://github.com/segmentationfaulter",
      "followers_url": "https://api.github.com/users/segmentationfaulter/followers",
      "following_url": "https://api.github.com/users/segmentationfaulter/following{/other_user}",
      "gists_url": "https://api.github.com/users/segmentationfaulter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/segmentationfaulter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/segmentationfaulter/subscriptions",
      "organizations_url": "https://api.github.com/users/segmentationfaulter/orgs",
      "repos_url": "https://api.github.com/users/segmentationfaulter/repos",
      "events_url": "https://api.github.com/users/segmentationfaulter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/segmentationfaulter/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-02-25T05:04:18Z",
    "updated_at": "2016-02-25T05:07:33Z",
    "closed_at": "2016-02-25T05:07:23Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Have a look at https://github.com/expressjs/express/blob/master/examples/mvc/lib/boot.js\nOn line#11, there is a boolean expression as below\n\n`verbose && console.log('\\n   %s:', name);`\n\nIt being a simple boolean expression evaluating to `undefined`, we are not doing anything with it apparently, neither assigning it nor using it as a condition to alter the flow of code. What is it doing there?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2909/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2909/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2908",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2908/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2908/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2908/events",
    "html_url": "https://github.com/expressjs/express/pull/2908",
    "id": 136260629,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjA2MTcyMjg=",
    "number": 2908,
    "title": "examples: comment the usage of process.nextTick",
    "user": {
      "login": "segmentationfaulter",
      "id": 6733537,
      "node_id": "MDQ6VXNlcjY3MzM1Mzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6733537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/segmentationfaulter",
      "html_url": "https://github.com/segmentationfaulter",
      "followers_url": "https://api.github.com/users/segmentationfaulter/followers",
      "following_url": "https://api.github.com/users/segmentationfaulter/following{/other_user}",
      "gists_url": "https://api.github.com/users/segmentationfaulter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/segmentationfaulter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/segmentationfaulter/subscriptions",
      "organizations_url": "https://api.github.com/users/segmentationfaulter/orgs",
      "repos_url": "https://api.github.com/users/segmentationfaulter/repos",
      "events_url": "https://api.github.com/users/segmentationfaulter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/segmentationfaulter/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-02-25T02:55:06Z",
    "updated_at": "2016-02-25T02:59:40Z",
    "closed_at": "2016-02-25T02:59:36Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2908",
      "html_url": "https://github.com/expressjs/express/pull/2908",
      "diff_url": "https://github.com/expressjs/express/pull/2908.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2908.patch",
      "merged_at": null
    },
    "body": "Usage of `process.nextTick()` was confusing some newbies like me, after getting answered in #2903, I commented the respective examples' code.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2908/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2908/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2907",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2907/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2907/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2907/events",
    "html_url": "https://github.com/expressjs/express/issues/2907",
    "id": 136189909,
    "node_id": "MDU6SXNzdWUxMzYxODk5MDk=",
    "number": 2907,
    "title": "View composers",
    "user": {
      "login": "tremby",
      "id": 199635,
      "node_id": "MDQ6VXNlcjE5OTYzNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/199635?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tremby",
      "html_url": "https://github.com/tremby",
      "followers_url": "https://api.github.com/users/tremby/followers",
      "following_url": "https://api.github.com/users/tremby/following{/other_user}",
      "gists_url": "https://api.github.com/users/tremby/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tremby/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tremby/subscriptions",
      "organizations_url": "https://api.github.com/users/tremby/orgs",
      "repos_url": "https://api.github.com/users/tremby/repos",
      "events_url": "https://api.github.com/users/tremby/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tremby/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 163600,
        "node_id": "MDU6TGFiZWwxNjM2MDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 13,
    "created_at": "2016-02-24T21:21:23Z",
    "updated_at": "2016-05-03T15:32:52Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I [posted on Stack Overflow](http://stackoverflow.com/questions/35612168/automatically-provide-data-to-express-partial-views/35612360) today with a question about whether Express provides any way to automatically have data calculated and provided to a view context, per view. Apparently not. The feature is known as a [\"view composer\" in Laravel](https://laravel.com/docs/5.2/views#view-composers).\n\nThe use case would be for things like data needed in _every_ page view using a particular layout -- instead of including the same function call to get the data in every `res.render` call in every route which calls a view using that layout, and remembering to add it to new routes each time, add the data to the view composer associated with the layout view containing the widget in question. Or for a widget in a view partial used sporadically across the site which requires some database lookup or other calculation, that calculation is done in the view's composer rather than the developer having to remember which pages have the widget and which don't, and having the calculation or reference to it in all of the relevant route files. And remembering to remove that from the view context if the widget is removed.\n\nIt's also nice in the case where the views and the business logic are written by different people, like when the designer is the front end developer. The designer may decide to add or remove such a widget at some point, and now the relevant data is calculated and available, or no longer calculated when no longer needed, without the route having to be edited.\n\nI'm wondering if this is a feature others would be interested in, and how feasible it might be. Since there are myriad view engines for Express, and presumably they all handle partials and layouts in different ways, I expect this would work as a pre-render callback which is registered through Express.\n\nThat is, the developer writes something like:\n\n``` js\napp.set('view engine', 'twig');\napp.set('view composer', function (view, context) {\n  // Whatever logic the developer wants, given the view name\n  // (or filename/path?), adding to or transforming the context\n  // such as this trivial example...\n  switch (view) {\n    case 'layout':\n      context.loggedIn = auth.isUserLoggedIn();\n      break;\n    case 'widgets/date':\n      context.date = new Date();\n      break;\n  }\n});\n```\n\nThis callback would then be called (at the responsibility of the view engine, presumably) at some point before each view file is rendered. The context can therefore be added to, with whatever data the view needs.\n\nObviously with suitable logic the developer could break these out into separate files to keep things organized.\n\nOr alternatively there could be a standard for an event fired at an equivalent suitable time, and with similar arguments, which could be listened for by the developer.\n\nAny thoughts?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2907/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2907/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2906",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2906/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2906/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2906/events",
    "html_url": "https://github.com/expressjs/express/issues/2906",
    "id": 136183617,
    "node_id": "MDU6SXNzdWUxMzYxODM2MTc=",
    "number": 2906,
    "title": "httpOnly is incorrect in the documentation",
    "user": {
      "login": "wamoyo",
      "id": 1170326,
      "node_id": "MDQ6VXNlcjExNzAzMjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1170326?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wamoyo",
      "html_url": "https://github.com/wamoyo",
      "followers_url": "https://api.github.com/users/wamoyo/followers",
      "following_url": "https://api.github.com/users/wamoyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/wamoyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wamoyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wamoyo/subscriptions",
      "organizations_url": "https://api.github.com/users/wamoyo/orgs",
      "repos_url": "https://api.github.com/users/wamoyo/repos",
      "events_url": "https://api.github.com/users/wamoyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wamoyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2016-02-24T20:54:13Z",
    "updated_at": "2016-02-25T01:04:17Z",
    "closed_at": "2016-02-24T22:07:58Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\n\nSo the flag is typically spelled HttpOnly, but the way you have to specify it in express is `res.cookie('name', 'value', {httpOnly: true })`, but in the documentation on the website, it says to set that option with the HttpOnly spelling.\n\nPersonally, I think it would rock if this option wasn't case sensitive. Then again if there's a spec maybe it's best to follow that. Anyways, just thought I'd bring it up.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2906/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2906/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2905",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2905/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2905/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2905/events",
    "html_url": "https://github.com/expressjs/express/issues/2905",
    "id": 136092689,
    "node_id": "MDU6SXNzdWUxMzYwOTI2ODk=",
    "number": 2905,
    "title": "Is there a special reason to tack properties with req object or it is arbitrary?",
    "user": {
      "login": "segmentationfaulter",
      "id": 6733537,
      "node_id": "MDQ6VXNlcjY3MzM1Mzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6733537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/segmentationfaulter",
      "html_url": "https://github.com/segmentationfaulter",
      "followers_url": "https://api.github.com/users/segmentationfaulter/followers",
      "following_url": "https://api.github.com/users/segmentationfaulter/following{/other_user}",
      "gists_url": "https://api.github.com/users/segmentationfaulter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/segmentationfaulter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/segmentationfaulter/subscriptions",
      "organizations_url": "https://api.github.com/users/segmentationfaulter/orgs",
      "repos_url": "https://api.github.com/users/segmentationfaulter/repos",
      "events_url": "https://api.github.com/users/segmentationfaulter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/segmentationfaulter/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-02-24T15:24:10Z",
    "updated_at": "2016-02-24T16:44:00Z",
    "closed_at": "2016-02-24T16:34:08Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Have a look at [this line](https://github.com/expressjs/express/blob/master/examples/expose-data-to-client/index.js#L45) in the example code, the `user` property is tacked with `req` object, I was wondering if there is a special reason for tacking this property with `user`, couldn't we tack it with `res`?\n\nEDIT: I tested by doing `res.user = new User('user')` rather than `req.user = new User('user')` and it worked without issues.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2905/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2905/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2904",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2904/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2904/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2904/events",
    "html_url": "https://github.com/expressjs/express/issues/2904",
    "id": 136076261,
    "node_id": "MDU6SXNzdWUxMzYwNzYyNjE=",
    "number": 2904,
    "title": "StackOverfow link for the error pages",
    "user": {
      "login": "hwclass",
      "id": 3750931,
      "node_id": "MDQ6VXNlcjM3NTA5MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3750931?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hwclass",
      "html_url": "https://github.com/hwclass",
      "followers_url": "https://api.github.com/users/hwclass/followers",
      "following_url": "https://api.github.com/users/hwclass/following{/other_user}",
      "gists_url": "https://api.github.com/users/hwclass/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hwclass/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hwclass/subscriptions",
      "organizations_url": "https://api.github.com/users/hwclass/orgs",
      "repos_url": "https://api.github.com/users/hwclass/repos",
      "events_url": "https://api.github.com/users/hwclass/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hwclass/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2016-02-24T14:26:24Z",
    "updated_at": "2016-02-25T05:12:29Z",
    "closed_at": "2016-02-25T05:12:29Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi all,\n\nDo you think that it would be nice to integrate generating a search link for error pages parsing the error and creating a unique url to redirect the developer to the issue page in the stackoverflow site?\n\nFor example, this is the 500-type error handling:\n\n``` javascript\nfunction errorHandler(err, req, res, next) {\n  res.status(500);\n  res.render('error', { error: err });\n}\n```\n\nMay it be useful to do someting like this:\n\n``` javascript\nfunction errorHandler(err, req, res, next) {\n  res.status(500);\n  res.render('error', { error: err, soLink : '<generated_url_to_search_stackoverflow>' });\n}\n```\n\nThanks,\n\nBarış \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2904/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2904/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2903",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2903/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2903/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2903/events",
    "html_url": "https://github.com/expressjs/express/issues/2903",
    "id": 135994654,
    "node_id": "MDU6SXNzdWUxMzU5OTQ2NTQ=",
    "number": 2903,
    "title": "Why do we need process.nextTick() with this route?",
    "user": {
      "login": "segmentationfaulter",
      "id": 6733537,
      "node_id": "MDQ6VXNlcjY3MzM1Mzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6733537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/segmentationfaulter",
      "html_url": "https://github.com/segmentationfaulter",
      "followers_url": "https://api.github.com/users/segmentationfaulter/followers",
      "following_url": "https://api.github.com/users/segmentationfaulter/following{/other_user}",
      "gists_url": "https://api.github.com/users/segmentationfaulter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/segmentationfaulter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/segmentationfaulter/subscriptions",
      "organizations_url": "https://api.github.com/users/segmentationfaulter/orgs",
      "repos_url": "https://api.github.com/users/segmentationfaulter/repos",
      "events_url": "https://api.github.com/users/segmentationfaulter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/segmentationfaulter/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-02-24T08:45:32Z",
    "updated_at": "2016-02-24T16:01:17Z",
    "closed_at": "2016-02-24T11:02:42Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Have a look at this example code\nhttps://github.com/expressjs/express/blob/master/examples/error/index.js#L32\n\nI was wondering why do we need `process.nextTick()` given that the application works as expected without it?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2903/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2903/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2902",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2902/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2902/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2902/events",
    "html_url": "https://github.com/expressjs/express/issues/2902",
    "id": 135618100,
    "node_id": "MDU6SXNzdWUxMzU2MTgxMDA=",
    "number": 2902,
    "title": "Create new Express website",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 18291,
        "node_id": "MDU6TGFiZWwxODI5MQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1",
        "default": false,
        "description": null
      },
      {
        "id": 163600,
        "node_id": "MDU6TGFiZWwxNjM2MDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false,
        "description": null
      },
      {
        "id": 324166296,
        "node_id": "MDU6TGFiZWwzMjQxNjYyOTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/meta",
        "name": "meta",
        "color": "fef2c0",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 21,
    "created_at": "2016-02-23T03:18:55Z",
    "updated_at": "2016-05-06T05:13:59Z",
    "closed_at": "2016-05-05T21:17:19Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "I'm opening this issue for discussion to create a new Express website for information and documentation for our awesome project. The goal is to create a website that lives under the Express TC and the Node.js foundation. We can easily create the site using GitHub Pages, probably just under http://expressjs.github.io\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2902/reactions",
      "total_count": 8,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 4,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2902/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2901",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2901/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2901/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2901/events",
    "html_url": "https://github.com/expressjs/express/pull/2901",
    "id": 135464952,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjAxOTgwNjE=",
    "number": 2901,
    "title": "It's new year !",
    "user": {
      "login": "imkimchi",
      "id": 13452168,
      "node_id": "MDQ6VXNlcjEzNDUyMTY4",
      "avatar_url": "https://avatars.githubusercontent.com/u/13452168?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/imkimchi",
      "html_url": "https://github.com/imkimchi",
      "followers_url": "https://api.github.com/users/imkimchi/followers",
      "following_url": "https://api.github.com/users/imkimchi/following{/other_user}",
      "gists_url": "https://api.github.com/users/imkimchi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/imkimchi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/imkimchi/subscriptions",
      "organizations_url": "https://api.github.com/users/imkimchi/orgs",
      "repos_url": "https://api.github.com/users/imkimchi/repos",
      "events_url": "https://api.github.com/users/imkimchi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/imkimchi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-02-22T16:18:20Z",
    "updated_at": "2016-02-22T16:26:24Z",
    "closed_at": "2016-02-22T16:25:48Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2901",
      "html_url": "https://github.com/expressjs/express/pull/2901",
      "diff_url": "https://github.com/expressjs/express/pull/2901.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2901.patch",
      "merged_at": null
    },
    "body": "happy new year\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2901/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2901/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2900",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2900/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2900/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2900/events",
    "html_url": "https://github.com/expressjs/express/pull/2900",
    "id": 135378029,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjAxNTIzNzA=",
    "number": 2900,
    "title": "Optimize `JSON.stringify` performance in V8.",
    "user": {
      "login": "bnjmnt4n",
      "id": 813865,
      "node_id": "MDQ6VXNlcjgxMzg2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/813865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bnjmnt4n",
      "html_url": "https://github.com/bnjmnt4n",
      "followers_url": "https://api.github.com/users/bnjmnt4n/followers",
      "following_url": "https://api.github.com/users/bnjmnt4n/following{/other_user}",
      "gists_url": "https://api.github.com/users/bnjmnt4n/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bnjmnt4n/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bnjmnt4n/subscriptions",
      "organizations_url": "https://api.github.com/users/bnjmnt4n/orgs",
      "repos_url": "https://api.github.com/users/bnjmnt4n/repos",
      "events_url": "https://api.github.com/users/bnjmnt4n/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bnjmnt4n/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/14",
      "html_url": "https://github.com/expressjs/express/milestone/14",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/14/labels",
      "id": 1597498,
      "node_id": "MDk6TWlsZXN0b25lMTU5NzQ5OA==",
      "number": 14,
      "title": "4.14",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 6,
      "state": "closed",
      "created_at": "2016-02-22T16:27:45Z",
      "updated_at": "2016-06-16T15:07:35Z",
      "due_on": "2016-06-16T07:00:00Z",
      "closed_at": "2016-06-16T15:07:35Z"
    },
    "comments": 13,
    "created_at": "2016-02-22T10:29:32Z",
    "updated_at": "2016-06-16T15:06:34Z",
    "closed_at": "2016-06-16T15:06:34Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2900",
      "html_url": "https://github.com/expressjs/express/pull/2900",
      "diff_url": "https://github.com/expressjs/express/pull/2900.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2900.patch",
      "merged_at": null
    },
    "body": "Older versions of V8 have a bug [1](https://bugs.chromium.org/p/v8/issues/detail?id=4730) where using empty `replacer` or\n`space` arguments decreases performance.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2900/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2900/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2899",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2899/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2899/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2899/events",
    "html_url": "https://github.com/expressjs/express/issues/2899",
    "id": 135308973,
    "node_id": "MDU6SXNzdWUxMzUzMDg5NzM=",
    "number": 2899,
    "title": "Problem running express.js on Docker",
    "user": {
      "login": "aignacio",
      "id": 5991372,
      "node_id": "MDQ6VXNlcjU5OTEzNzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5991372?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aignacio",
      "html_url": "https://github.com/aignacio",
      "followers_url": "https://api.github.com/users/aignacio/followers",
      "following_url": "https://api.github.com/users/aignacio/following{/other_user}",
      "gists_url": "https://api.github.com/users/aignacio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aignacio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aignacio/subscriptions",
      "organizations_url": "https://api.github.com/users/aignacio/orgs",
      "repos_url": "https://api.github.com/users/aignacio/repos",
      "events_url": "https://api.github.com/users/aignacio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aignacio/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-02-22T04:04:31Z",
    "updated_at": "2016-02-22T16:41:01Z",
    "closed_at": "2016-02-22T16:30:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello everyone,\n\nMy problem is related to running the code below in a docker container that runs my main application using express.js 4.x:\n\n``` javascript\nvar express  = require('express');\nvar app      = express();\nvar port     = process.env.PORT || 80;\nvar passport = require('passport');\nvar flash    = require('connect-flash');\nvar path     = require('path');\n\nvar morgan       = require('morgan');\nvar cookieParser = require('cookie-parser');\nvar bodyParser   = require('body-parser');\nvar session      = require('express-session');\n\nvar mongoose = require('./config/database.js');\n\napp.use(bodyParser.json({limit: '50mb'}));\napp.use(bodyParser.urlencoded({limit: '50mb', extended: true}));\n// configuration ===============================================================\n\nrequire('./config/passport')(passport); // pass passport for configuration\n\n// set up our express application\napp.use(morgan('dev')); // log every request to the console\napp.use(cookieParser()); // read cookies (needed for auth)\napp.use(bodyParser()); // get information from html forms\n\napp.set('view engine', 'ejs'); // set up ejs for templating\n\n// required for passport\napp.use(passport.initialize());\napp.use(passport.session()); // persistent login sessions\napp.use(flash()); // use connect-flash for flash messages stored in session\napp.use(express.static(path.join(__dirname, 'dist')));\n// routes ======================================================================\nrequire('./backend/routes.js')(app, passport); // load our routes and pass in our app and fully configured passport\n\n// launch ======================================================================\napp.listen(port);\nconsole.log('Server listening on port:' + port);\n```\n\nWhen I try to run this code on a container with mean.stack this error appears in output of console:\n\n```\nError: Failed to lookup view \"../dist/pages/login/login.ejs\" in views directory \"/views\"\n    at EventEmitter.render (/lightdnav2/node_modules/express/lib/application.js:579:17)\n    at ServerResponse.render (/lightdnav2/node_modules/express/lib/response.js:961:7)\n    at /lightdnav2/backend/routes.js:28:13\n    at Layer.handle [as handle_request] (/lightdnav2/node_modules/express/lib/router/layer.js:95:5)\n    at next (/lightdnav2/node_modules/express/lib/router/route.js:131:13)\n    at Route.dispatch (/lightdnav2/node_modules/express/lib/router/route.js:112:3)\n    at Layer.handle [as handle_request] (/lightdnav2/node_modules/express/lib/router/layer.js:95:5)\n    at /lightdnav2/node_modules/express/lib/router/index.js:277:22\n    at Function.process_params (/lightdnav2/node_modules/express/lib/router/index.js:330:12)\n    at next (/lightdnav2/node_modules/express/lib/router/index.js:271:10)\n    at Layer.handle [as handle_request] (/lightdnav2/node_modules/express/lib/router/layer.js:91:12)\n    at trim_prefix (/lightdnav2/node_modules/express/lib/router/index.js:312:13)\n    at /lightdnav2/node_modules/express/lib/router/index.js:280:7\n    at Function.process_params (/lightdnav2/node_modules/express/lib/router/index.js:330:12)\n    at next (/lightdnav2/node_modules/express/lib/router/index.js:271:10)\n    at SendStream.error (/lightdnav2/node_modules/serve-static/index.js:120:7)\n```\n\nBut, when I access the container using \"/bin/bash\" and try to run manually with:\n\n``` javascript\nnode server.js\n```\n\nThe express works great, I have noted that the same appears when I use a shell script to run \"node server.js\" on init.d of my system. I think there is something about user logged in and shell variables.\nMy dockerfile is:\n\nFROM debian\n# Update aptitude with new repo\n\nRUN apt-get update\n# Install basics\n\nRUN apt-get install -y git && apt-get install nano\n# Make ssh dir\n\nRUN mkdir /root/.ssh/\n# Copy over private key, and set permissions\n\nADD id_rsa /root/.ssh/id_rsa\n# Run permissions\n\nRUN chown -R root:root /root/.ssh\n# Create known_hosts\n\nRUN touch /root/.ssh/known_hosts\n# Add bitbuckets key\n\nRUN ssh-keyscan -T 60 bitbucket.org >> /root/.ssh/known_hosts\n# Clone the conf files into the docker container\n\nRUN git clone git@bitbucket.org:xxxxxx.xxxxxxx.git\\\n        && cd xxxxxxxxxxxxx \\\n        && git checkout dev\n# Installing node\n\nRUN apt-get install -y nodejs-legacy\n\nEXPOSE 80\n\nENV NODE_ENV=development\nENV MONGODB_ADDR_LIGHTDNA=172.17.0.2\nENV MONGODB_PORT_LIGHTDNA=27017\nENV NODE_PATH=$NODE_PATH:/usr/local/lib/node_modules\n\nENV TERM=xterm\nENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nENV PWD=/lightdnav2\nENV NODE_PATH=:/usr/local/lib/node_modules\nENV SHLVL=1\nENV HOME=/root\nENV _=/usr/bin/env\nENV OLDPWD=/\n# Running server in  node\n\nCMD [\"node\", \"/lightdnav2/server.js\"]\n# CMD [\"/bin/bash\"]\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2899/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2899/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2898",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2898/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2898/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2898/events",
    "html_url": "https://github.com/expressjs/express/issues/2898",
    "id": 135153134,
    "node_id": "MDU6SXNzdWUxMzUxNTMxMzQ=",
    "number": 2898,
    "title": "I'm having trouble getting express to ignore my client side routes",
    "user": {
      "login": "davidbfrogman",
      "id": 7316909,
      "node_id": "MDQ6VXNlcjczMTY5MDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7316909?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidbfrogman",
      "html_url": "https://github.com/davidbfrogman",
      "followers_url": "https://api.github.com/users/davidbfrogman/followers",
      "following_url": "https://api.github.com/users/davidbfrogman/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidbfrogman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidbfrogman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidbfrogman/subscriptions",
      "organizations_url": "https://api.github.com/users/davidbfrogman/orgs",
      "repos_url": "https://api.github.com/users/davidbfrogman/repos",
      "events_url": "https://api.github.com/users/davidbfrogman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidbfrogman/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-02-21T03:23:14Z",
    "updated_at": "2016-02-22T16:32:35Z",
    "closed_at": "2016-02-21T05:20:34Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have an aurelia front end application that I'm using express to serve.  You don't have to know much about aurelia, think of it like angular.  I have it like 99% working, but the last part that I can't get to work is getting express to 'ignore' 'passthrough' urls that contain a / (forward slash) in them.  These 'directories' are really my client side routing instructions.\n\nFor instance my app works just fine for these urls:\n\nhttp://localhost/portfolio\nhttp://localhost/about\netc....\nbut when I try to access\nhttp://localhost/portfolio/image/id\n\nFor clarity sake here's a live example of the problem I'm seeing: http://www.davebrownphotography.com/portfolio/detail/2\n\nexpress serves back the index.html file for all the requested javascript files.  From the wrong directory.  In this case it's asking for system.js from /portfolio/image/system.js which of course it isn't there.  It seems like it's serving index.html out of the folder /portfolio/image/index.html and when there's a relative url to the system.js file it's looking for it in /portfolio/images.   \n\nand thusly I get `Uncaught SyntaxError: Unexpected token <` in the browser.  Because the browser is recieving back index.html when it asks for system.js  \n\nI basically want express to ignore anything after the forward slash as it's not a real directory.  I hope that makes sense.  And thanks so much in advance for any help.\n\nIf you would like to browse my repo so you can see directory structure or any other files it's here:\nhttps://github.com/davidbfrogman/dbpheroku\n\nHere's the code for reference \nserver.js\n\n``` js\n\n\n    // set up ========================\n    var express  = require('express');\n    var compression =  require('compression');\n    var fallback = require('express-history-api-fallback')\n    var root     = __dirname\n    var app      = express();                               // create our app w/ express\n    var morgan   = require('morgan');             // log requests to the console (express4)\n    var logger   = morgan('combined');\n    var favicon  = require('serve-favicon');\n    var port     = process.env.PORT || 8080;        // set our port\n    var prodDomain = 'www.davebrownphotography.com';       //change this whenever we setup our cname\n\n    // configuration =================\n    var config = {\n        devConfig : {\n          production : false,  \n          cacheShort : '0',\n          cacheLong : '0',\n          prerenderServiceURL: 'http://localhost:3000',\n          rootUrl : 'http://localhost:' + port   \n        },\n        prodConfig : {\n            production : true,\n            cacheShort : '7d',  //So apparently google freaks out if the browser cache is less than 7 days. \n            cacheLong : '14d',\n            prerenderServiceURL: 'http://service.prerender.io', //This probably needs to change.\n            rootUrl : 'http://' + prodDomain\n        },\n    }\n\n    //Get the correct config prod/dev\n    var currentConfig = process.env.prod == 'true' ? config.prodConfig : config.devConfig;\n\n    //This will be helpful on production when we want to force users to www version of my site.\n    app.use( require('express-force-domain')(currentConfig.rootUrl) );\n\n    app.use(favicon(__dirname + '/favicon.ico'));\n\n    // log every request to the console except images...\n    app.use(\n        morgan('dev', {\n            skip : function(req,res) { return req.url.indexOf('.jpg') != -1; }\n        })\n    );\n\n    //client -------------------------------------------------------------\n\n    app.use(require('prerender-node').set('prerenderServiceUrl', currentConfig.prerenderServiceURL));\n\n    // compress all requests\n    app.use(compression());\n    app.use(express.static(root, { dotfiles: 'allow', maxAge: currentConfig.cacheShort} ));\n    app.use(express.static(root + '/dist', { dotfiles: 'allow', maxAge: currentConfig.cacheShort, index: false} ));\n    app.use(express.static(root + '/images', { dotfiles: 'allow', maxAge: currentConfig.cacheLong, index: false} ));\n    app.use(express.static(root + '/jspm_packages', { dotfiles: 'allow', maxAge: currentConfig.cacheLong, index: false} ));\n    app.use(express.static(root + '/node_modules', { dotfiles: 'allow', maxAge: currentConfig.cacheLong, index: false} ));\n\n    app.get('*', function(req, res, next) {\n        console.log('OriginalUrl for the request: ' + req.originalUrl);\n\n        //Mobile Redirection\n        if(req.hostname.toLowerCase().indexOf('m.davebrownphotography.com') >= 0 ){ \n                res.status(301);\n                console.log('Redirection for Mobile');\n                res.sendFile(root + '/index.html', { headers:{ 'Location' : currentConfig.rootUrl } });\n        }\n        if(req.originalUrl.indexOf('Portfolio/Denver') > 0){\n                res.status(301);\n                console.log('Redirection for Mobile old portfolios');\n                res.sendFile(root + '/index.html', { headers:{ 'Location' : currentConfig.rootUrl } });\n        }\n        //Old Site redirection\n        if(req.originalUrl.indexOf('.aspx') > 0)\n        {\n            console.log('Handling Redirection for ASPX Page');\n            console.log('Heres the original URL for matching aspx page: ' + req.originalUrl);\n            console.log('Heres the req.hostname: ' + req.hostname);\n            res.status(301);\n            console.log(req.hostname);\n\n            if(req.originalUrl.toLowerCase().indexOf('about') >= 0){\n                console.log('Redirection for About');\n                res.sendFile(root + '/index.html', { headers:{ 'Location' : currentConfig.rootUrl + '/about' } });\n            }\n            else if(req.originalUrl.toLowerCase().indexOf('contact') >= 0){\n                console.log('Redirection for Contact');\n                res.sendFile(root + '/index.html', { headers:{ 'Location' : currentConfig.rootUrl + '/contact' } });\n            }\n            else if(req.originalUrl.toLowerCase().indexOf('faq') >= 0 ){\n                console.log('Redirection for faq');\n                res.sendFile(root + '/index.html', { headers:{ 'Location' : currentConfig.rootUrl + '/faq' } });\n            }\n            else{  \n                console.log('Redirection for everything else');\n                res.sendFile(root + '/index.html', { headers:{ 'Location' : currentConfig.rootUrl } }); \n            } \n        }\n        //Redirect my old blog location.\n        else if(req.originalUrl.toLowerCase().indexOf('bloginstall') > 0){\n            res.status(301);    \n            var cleaned = req.originalUrl.toLowerCase();\n            cleaned = cleaned.replace('/bloginstall','');\n            console.log('Cleaned Blog URL:' + cleaned);\n            res.redirect(301, 'http://blog.davebrownphotography.com' + cleaned);\n        }\n        else\n        {\n           console.log('hit catchall handling not in an aspx page.');\n           console.log('Heres the root in the catchall: ' + root);\n           res.sendFile(root + '/index.html');\n        }\n    });\n\n    // listen (start app with node server.js) ======================================\n    app.listen(port);\n    console.log(\"App listening on port: \" + port);\n\n```\n\nIndex.html\n\n``` html\n<!DOCTYPE html>\n<html>\n\n<head>\n  <title>Dave Brown Photography | Denver Fashion Photographer</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <meta name=\"fragment\" content=\"!\">\n  <meta name=\"keywords\" runat=\"server\" id=\"metaKeywords\" content=\"denver photographer, denver fashion photographer, denver engagement photographer, denver headshot photographer, engagement, headshot, colorado, fashion\"/>\n  <meta name=\"description\" runat=\"server\" id=\"metaDescription\" content=\"Denver Photographer Dave Brown specializes in Fashion, Headshots, Advertising, Commercial, and Editorial Portrait Photography.\" />\n  <meta property=\"og:site_name\" content=\"Dave Brown Photography\">\n  <meta property=\"og:description\" content=\"Denver Fashion Photographer Dave Brown\">\n  <meta property=\"og:type\" content=\"website\">\n  <meta property=\"og:url\" content=\"http://www.davebrownphotography.com/\">\n  <script>\n   WebFontConfig = {\n            google: {\n            families: ['Dosis','Open Sans:300','Playfair Display:400']\n            }\n    };\n    console.log('running webfont.config script');\n  </script>\n</head>\n\n<body aurelia-app=\"main\">\n  <div class=\"page-loader\">\n    <div class=\"loading-text\">Please hold while I get everything ready....</div>\n  </div>\n  <div id=\"loader-wrapper\">\n    <div id=\"loader\"></div>\n  </div>\n\n  <script src=\"jspm_packages/system.js\"></script>\n  <script src=\"config.js\"></script>\n  <script>\n    System.import('aurelia-bootstrapper');\n  </script>\n</body>\n</html>\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2898/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2898/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2897",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2897/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2897/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2897/events",
    "html_url": "https://github.com/expressjs/express/issues/2897",
    "id": 134824699,
    "node_id": "MDU6SXNzdWUxMzQ4MjQ2OTk=",
    "number": 2897,
    "title": "`res.redirect` unpredictable sometimes with Unicode and even ANSI/ASCII",
    "user": {
      "login": "Martii",
      "id": 114709,
      "node_id": "MDQ6VXNlcjExNDcwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/114709?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Martii",
      "html_url": "https://github.com/Martii",
      "followers_url": "https://api.github.com/users/Martii/followers",
      "following_url": "https://api.github.com/users/Martii/following{/other_user}",
      "gists_url": "https://api.github.com/users/Martii/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Martii/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Martii/subscriptions",
      "organizations_url": "https://api.github.com/users/Martii/orgs",
      "repos_url": "https://api.github.com/users/Martii/repos",
      "events_url": "https://api.github.com/users/Martii/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Martii/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-02-19T10:12:13Z",
    "updated_at": "2016-02-23T00:50:01Z",
    "closed_at": "2016-02-21T06:19:29Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "We get on occasion with `§` the `escape`d version _(e.g. only `%A7` a.k.a ASCII 245)_ during a `redirect()` _(shouldn't be but `encodeURI`/`encodeURIComponent` gives `%C2%A7`)_... I've spent about 3 hours trying different things... unfortunately it's not an easy bug to find. I've poured over our code in a commit that I'm attempting to get pushed to our organization when it's complete... but I'm having to ensure at the very least `encodeURI` is applied to the path... currently I am defaulting to `encodeURIComponent` if needed for _express_ routing... even though it's already applied to the String already in between the slashes when needed... **same as GitHub does all the time with `encodeURIComponent`**. Some redirects work like a charm depending on their content... others don't.\n\nAnyhow... hope some of this info helps track this down a little better... the work around so far is to double `encodeURI` or `encodeURIComponent` on each individual `p/a/t/h/to` which I know will eventually fail down the line.\n\nProviding a reduced test case will be nearly impossible I think... but I am able to reproduce this with _node_@4.3.x and _express_@4.13.4 in our project.\n\nHere's a few stack traces:\n\nStringy is exactly `/scripts/Marti/RFC_2606§3_-_Hello,_World!` before `redirect()` and passed as `aRes.redirect(Stringy)` with defaulting to 200 status code... tried forcing `.status(200).redirect(Stringy)` too... no luck.\n\n``` sh-session\nURIError: Failed to decode param 'RFC_2606%A73_-_Hello,_World!'\n    at decodeURIComponent (native)\n    at decode_param (~/repo/git/OpenUserJS.org/martii/OpenUserJS.org/node_modules/express/lib/router/layer.js:167:12)\n    at Layer.match (~/repo/git/OpenUserJS.org/martii/OpenUserJS.org/node_modules/express/lib/router/layer.js:143:15)\n    at matchLayer (~/repo/git/OpenUserJS.org/martii/OpenUserJS.org/node_modules/express/lib/router/index.js:557:18)\n    at next (~/repo/git/OpenUserJS.org/martii/OpenUserJS.org/node_modules/express/lib/router/index.js:216:15)\n    at ~/repo/git/OpenUserJS.org/martii/OpenUserJS.org/node_modules/less-middleware/lib/middleware.js:315:14\n    at Layer.handle [as handle_request] (~/repo/git/OpenUserJS.org/martii/OpenUserJS.org/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (~/repo/git/OpenUserJS.org/martii/OpenUserJS.org/node_modules/express/lib/router/index.js:312:13)\n    at ~/repo/git/OpenUserJS.org/martii/OpenUserJS.org/node_modules/express/lib/router/index.js:280:7\n    at Function.process_params (~/repo/git/OpenUserJS.org/martii/OpenUserJS.org/node_modules/express/lib/router/index.js:330:12)\n    at next (~/repo/git/OpenUserJS.org/martii/OpenUserJS.org/node_modules/express/lib/router/index.js:271:10)\n    at ~/repo/git/OpenUserJS.org/martii/OpenUserJS.org/app.js:255:3\n    at Layer.handle [as handle_request] (~/repo/git/OpenUserJS.org/martii/OpenUserJS.org/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (~/repo/git/OpenUserJS.org/martii/OpenUserJS.org/node_modules/express/lib/router/index.js:312:13)\n    at ~/repo/git/OpenUserJS.org/martii/OpenUserJS.org/node_modules/express/lib/router/index.js:280:7\n    at Function.process_params (~/repo/git/OpenUserJS.org/martii/OpenUserJS.org/node_modules/express/lib/router/index.js:330:12)\n    at next (~/repo/git/OpenUserJS.org/martii/OpenUserJS.org/node_modules/express/lib/router/index.js:271:10)\n    at express_minify_middleware (~/repo/git/OpenUserJS.org/martii/OpenUserJS.org/node_modules/express-minify/index.js:185:5)\n    at Layer.handle [as handle_request] (~/repo/git/OpenUserJS.org/martii/OpenUserJS.org/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (~/repo/git/OpenUserJS.org/martii/OpenUserJS.org/node_modules/express/lib/router/index.js:312:13)\n    at ~/repo/git/OpenUserJS.org/martii/OpenUserJS.org/node_modules/express/lib/router/index.js:280:7\n    at Function.process_params (~/repo/git/OpenUserJS.org/martii/OpenUserJS.org/node_modules/express/lib/router/index.js:330:12)\n```\n\nAs it can be seen here the \"Stringy\" with this one is `/users/テスト`\n\n``` sh-session\nGET /users/%E3%83%86%E3%82%B9%E3%83%88 200 468.579 ms - -\n_http_outgoing.js:351\n      throw new TypeError('The header content contains invalid characters');\n      ^\n\nTypeError: The header content contains invalid characters\n    at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:351:13)\n    at ServerResponse.header (~/repo/git/OpenUserJS.org/martii/OpenUserJS.org/node_modules/express/lib/response.js:718:10)\n    at ServerResponse.location (~/repo/git/OpenUserJS.org/martii/OpenUserJS.org/node_modules/express/lib/response.js:835:8)\n    at ServerResponse.redirect (~/repo/git/OpenUserJS.org/martii/OpenUserJS.org/node_modules/express/lib/response.js:874:8)\n    at Query.<anonymous> (~/repo/git/OpenUserJS.org/martii/OpenUserJS.org/controllers/admin.js:504:10)\n    at ~/repo/git/OpenUserJS.org/martii/OpenUserJS.org/node_modules/mongoose/node_modules/kareem/index.js:177:19\n    at ~/repo/git/OpenUserJS.org/martii/OpenUserJS.org/node_modules/mongoose/node_modules/kareem/index.js:109:16\n    at nextTickCallbackWith0Args (node.js:415:9)\n    at process._tickDomainCallback (node.js:385:13)\n```\n\nTested UserAgents:\n- Mozilla/5.0 (X11; Linux x86_64; rv:42.0) Gecko/20100101 SeaMonkey/2.39\n- Mozilla/5.0 (X11; Linux x86_64; rv:44.0) Gecko/20100101 Firefox/44.0 \n- Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/48.0.2564.97 Safari/537.36\n- Probably more when it's this many browsers\n\nAnchor tags with these exact same values work 100%... just not `redirect()` in _express_'s `res` Object... so it's a bit baffling.\n\nThanks for you patience and assistance with the provided intel. :)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2897/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2897/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2896",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2896/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2896/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2896/events",
    "html_url": "https://github.com/expressjs/express/issues/2896",
    "id": 134801763,
    "node_id": "MDU6SXNzdWUxMzQ4MDE3NjM=",
    "number": 2896,
    "title": "Define error-handling middleware functions explicitly (without arity detection)",
    "user": {
      "login": "feross",
      "id": 121766,
      "node_id": "MDQ6VXNlcjEyMTc2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/121766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/feross",
      "html_url": "https://github.com/feross",
      "followers_url": "https://api.github.com/users/feross/followers",
      "following_url": "https://api.github.com/users/feross/following{/other_user}",
      "gists_url": "https://api.github.com/users/feross/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/feross/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/feross/subscriptions",
      "organizations_url": "https://api.github.com/users/feross/orgs",
      "repos_url": "https://api.github.com/users/feross/repos",
      "events_url": "https://api.github.com/users/feross/events{/privacy}",
      "received_events_url": "https://api.github.com/users/feross/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 18291,
        "node_id": "MDU6TGFiZWwxODI5MQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1",
        "default": false,
        "description": null
      },
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 163600,
        "node_id": "MDU6TGFiZWwxNjM2MDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 23,
    "created_at": "2016-02-19T08:10:12Z",
    "updated_at": "2019-02-26T17:35:08Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I propose adding an explicit `app.error` method for defining error-handling middleware functions:\n\n``` js\napp.error(function(err, req, res, next) {\n  res.status(500).send('Something broke!');\n});\n```\n\nInstead of:\n\n``` js\napp.use(function(err, req, res, next) {\n  res.status(500).send('Something broke!');\n});\n```\n\nIt's so easy to forget the `next` argument when it's not being used in the body of the function, and that changes the whole meaning of the middleware. `express` is one of the only packages that has this pattern. Others that used this pattern in the past (i.e. `superagent`) have since removed it.\n\nFurthermore, this clashes with popular linting rules like ESLint's [`no-unused-vars` rule](http://eslint.org/docs/2.0.0/rules/no-unused-vars) which enforce that all named arguments must be used in the function body. Users who see this rule and remove the un-unsed `next` parameter will be unwittingly changing the behavior of their program.\n\nNo one expects removing an unused parameter to change the behavior of a program.\n\n``` js\napp.use(function(err, req, res, next /* <-- unused, guess I'll remove this... */) {\n  res.status(500).send('Something broke!');\n});\n```\n\nThe four argument middleware convention should be deprecated in favor of `app.error`, but support for it could remain for a long time, or even indefinitely. I just want to be able to recommend that folks use `app.error` going forward.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2896/reactions",
      "total_count": 65,
      "+1": 59,
      "-1": 0,
      "laugh": 0,
      "hooray": 3,
      "confused": 0,
      "heart": 3,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2896/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2895",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2895/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2895/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2895/events",
    "html_url": "https://github.com/expressjs/express/issues/2895",
    "id": 134694259,
    "node_id": "MDU6SXNzdWUxMzQ2OTQyNTk=",
    "number": 2895,
    "title": "Creation of the express-tc team",
    "user": {
      "login": "jasnell",
      "id": 439929,
      "node_id": "MDQ6VXNlcjQzOTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/439929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasnell",
      "html_url": "https://github.com/jasnell",
      "followers_url": "https://api.github.com/users/jasnell/followers",
      "following_url": "https://api.github.com/users/jasnell/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasnell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasnell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasnell/subscriptions",
      "organizations_url": "https://api.github.com/users/jasnell/orgs",
      "repos_url": "https://api.github.com/users/jasnell/repos",
      "events_url": "https://api.github.com/users/jasnell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasnell/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 324166296,
        "node_id": "MDU6TGFiZWwzMjQxNjYyOTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/meta",
        "name": "meta",
        "color": "fef2c0",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-02-18T20:57:19Z",
    "updated_at": "2016-02-18T21:22:48Z",
    "closed_at": "2016-02-18T21:03:51Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "@expressjs/express-tc ... I have created the express-tc team and have added by default all of the owners of the expressjs, pillarjs and jshttp github organizations per the application for the Express project to enter the Node.js Foundation (https://github.com/nodejs/TSC/blob/master/Applications/Express.md). If you do not wish to participate as part of the Express TC, please feel free to remove yourself from the Github team.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2895/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2895/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2894",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2894/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2894/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2894/events",
    "html_url": "https://github.com/expressjs/express/pull/2894",
    "id": 134676534,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTk4NTIwMDM=",
    "number": 2894,
    "title": "Express Issue-2893",
    "user": {
      "login": "patrickhousley",
      "id": 3984979,
      "node_id": "MDQ6VXNlcjM5ODQ5Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3984979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/patrickhousley",
      "html_url": "https://github.com/patrickhousley",
      "followers_url": "https://api.github.com/users/patrickhousley/followers",
      "following_url": "https://api.github.com/users/patrickhousley/following{/other_user}",
      "gists_url": "https://api.github.com/users/patrickhousley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/patrickhousley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/patrickhousley/subscriptions",
      "organizations_url": "https://api.github.com/users/patrickhousley/orgs",
      "repos_url": "https://api.github.com/users/patrickhousley/repos",
      "events_url": "https://api.github.com/users/patrickhousley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/patrickhousley/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-02-18T19:43:11Z",
    "updated_at": "2016-02-18T20:51:20Z",
    "closed_at": "2016-02-18T20:51:20Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2894",
      "html_url": "https://github.com/expressjs/express/pull/2894",
      "diff_url": "https://github.com/expressjs/express/pull/2894.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2894.patch",
      "merged_at": null
    },
    "body": "Added a logical check in express response send to keep from setting the content-length header when the transfer encoding is set to chunked.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2894/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2894/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2893",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2893/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2893/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2893/events",
    "html_url": "https://github.com/expressjs/express/issues/2893",
    "id": 134651071,
    "node_id": "MDU6SXNzdWUxMzQ2NTEwNzE=",
    "number": 2893,
    "title": "Content length header getting set inappropriatly",
    "user": {
      "login": "patrickhousley",
      "id": 3984979,
      "node_id": "MDQ6VXNlcjM5ODQ5Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3984979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/patrickhousley",
      "html_url": "https://github.com/patrickhousley",
      "followers_url": "https://api.github.com/users/patrickhousley/followers",
      "following_url": "https://api.github.com/users/patrickhousley/following{/other_user}",
      "gists_url": "https://api.github.com/users/patrickhousley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/patrickhousley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/patrickhousley/subscriptions",
      "organizations_url": "https://api.github.com/users/patrickhousley/orgs",
      "repos_url": "https://api.github.com/users/patrickhousley/repos",
      "events_url": "https://api.github.com/users/patrickhousley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/patrickhousley/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 11,
    "created_at": "2016-02-18T18:05:09Z",
    "updated_at": "2016-02-18T20:50:46Z",
    "closed_at": "2016-02-18T20:49:04Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Express is adding a content length header even when the transfer-encoding is chunked. This is an issue in Node 5.6 since they upgraded to http-parser 2.6.1 (https://nodejs.org/en/blog/release/v5.6.0/). Specifically, this is related to CVE-2016-2086. Need to modify line 179-180 of response.js and enclose it in a logical IF to test if transfer-encoding is 'chunked'.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2893/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2893/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2892",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2892/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2892/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2892/events",
    "html_url": "https://github.com/expressjs/express/pull/2892",
    "id": 134444835,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTk3MzMzMTY=",
    "number": 2892,
    "title": "Add API docs",
    "user": {
      "login": "crandmck",
      "id": 2925364,
      "node_id": "MDQ6VXNlcjI5MjUzNjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2925364?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/crandmck",
      "html_url": "https://github.com/crandmck",
      "followers_url": "https://api.github.com/users/crandmck/followers",
      "following_url": "https://api.github.com/users/crandmck/following{/other_user}",
      "gists_url": "https://api.github.com/users/crandmck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/crandmck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/crandmck/subscriptions",
      "organizations_url": "https://api.github.com/users/crandmck/orgs",
      "repos_url": "https://api.github.com/users/crandmck/repos",
      "events_url": "https://api.github.com/users/crandmck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/crandmck/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2016-02-18T00:35:18Z",
    "updated_at": "2016-02-25T03:27:31Z",
    "closed_at": "2016-02-18T21:14:19Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2892",
      "html_url": "https://github.com/expressjs/express/pull/2892",
      "diff_url": "https://github.com/expressjs/express/pull/2892.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2892.patch",
      "merged_at": null
    },
    "body": "For #2887 \n@jasnell @dougwilson \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2892/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2892/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2891",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2891/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2891/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2891/events",
    "html_url": "https://github.com/expressjs/express/issues/2891",
    "id": 134256884,
    "node_id": "MDU6SXNzdWUxMzQyNTY4ODQ=",
    "number": 2891,
    "title": "Redirecting to a static html file",
    "user": {
      "login": "parky128",
      "id": 10373419,
      "node_id": "MDQ6VXNlcjEwMzczNDE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/10373419?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/parky128",
      "html_url": "https://github.com/parky128",
      "followers_url": "https://api.github.com/users/parky128/followers",
      "following_url": "https://api.github.com/users/parky128/following{/other_user}",
      "gists_url": "https://api.github.com/users/parky128/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/parky128/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/parky128/subscriptions",
      "organizations_url": "https://api.github.com/users/parky128/orgs",
      "repos_url": "https://api.github.com/users/parky128/repos",
      "events_url": "https://api.github.com/users/parky128/events{/privacy}",
      "received_events_url": "https://api.github.com/users/parky128/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2016-02-17T11:39:18Z",
    "updated_at": "2018-07-09T03:24:48Z",
    "closed_at": "2016-02-19T09:17:37Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "I am trying to put together some middleware that will simply redirect to a login.html file I have in a public directory under my server route.\n\nSo far I have configure express to use the following:\n\n``` js\n    app.use(express.static('./dist/client'));\n    app.use(express.static('public'));\n```\n\nI then have middleware as follows:\n\n``` js\napp.use('/login', function(req, res){\n  res.sendFile(__dirname + '/public/login.html');\n});\n\napp.use(function(req, res, next){\n  if(!req.session.accessToken){\n    res.redirect('/login');\n  }\n  next();\n});\n```\n\nSo the redirect happens for me, but I get an error in my server console saying\n\n```\nError: Can't set headers after they are sent.\n     at SendStream.headersAlreadySent (C:\\Users\\rparker\\Documents\\GitHub\\interact\\node_modules\\express\\node_modules\\send\\index.js:326:13) at SendStream.send C:\\Users\\rparker\\Documents\\GitHub\\interact\\node_modules\\express\\node_modules\\send\\index.js:525:17) at C:\\Users\\rparker\\Documents\\GitHub\\interact\\node_modules\\express\\node_modules\\send\\index.js:669:12 at FSReqWrap.oncomplete (fs.js:95:15)\n```\n\nI also see in the browser console\n\n```\nUncaught SyntaxError: Unexpected token <\n```\n\nWhich is coming from the opening `html` tag in my login.html file. I did some digging and this seems to usually be a problem when using a template engine like jade, which cant process raw html files directly. But I am not using any template engine in my setup.\n\nI did post a [SO question](http://stackoverflow.com/questions/35454298/node-express-error-when-serving-static-content) earlier about this, and tried the suggestion of just using `res.redirect('login.html)` but I end up with a redirect loop.\n\nSo Im stumped what to do next here, no doubt I have missed out something obvious here.\n\nCan someone please assist?\n\nThanks\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2891/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2891/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2890",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2890/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2890/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2890/events",
    "html_url": "https://github.com/expressjs/express/pull/2890",
    "id": 133780780,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTkzOTY4NTk=",
    "number": 2890,
    "title": "Add releases.md",
    "user": {
      "login": "tunniclm",
      "id": 5011883,
      "node_id": "MDQ6VXNlcjUwMTE4ODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5011883?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tunniclm",
      "html_url": "https://github.com/tunniclm",
      "followers_url": "https://api.github.com/users/tunniclm/followers",
      "following_url": "https://api.github.com/users/tunniclm/following{/other_user}",
      "gists_url": "https://api.github.com/users/tunniclm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tunniclm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tunniclm/subscriptions",
      "organizations_url": "https://api.github.com/users/tunniclm/orgs",
      "repos_url": "https://api.github.com/users/tunniclm/repos",
      "events_url": "https://api.github.com/users/tunniclm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tunniclm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2016-02-15T18:01:55Z",
    "updated_at": "2017-02-21T01:07:32Z",
    "closed_at": "2017-02-21T01:07:32Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2890",
      "html_url": "https://github.com/expressjs/express/pull/2890",
      "diff_url": "https://github.com/expressjs/express/pull/2890.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2890.patch",
      "merged_at": null
    },
    "body": "To get things started on #2857 I have drafted up a releases document based loosely on https://github.com/nodejs/node/blob/master/doc/releases.md.\n\nSince I have never created a release I have made guesses about the access and steps that would be involved. I have mentioned the Express TC in there, since the repository has now moved to expressjs and the project has moved/is in the proces of moving to the Node.js foundation. I've also added some questions inline inside `[]`s.\n\nI'd appreciate any comments on this and would be happy to rework it as needed. Thanks!\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2890/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2890/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2889",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2889/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2889/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2889/events",
    "html_url": "https://github.com/expressjs/express/issues/2889",
    "id": 132991740,
    "node_id": "MDU6SXNzdWUxMzI5OTE3NDA=",
    "number": 2889,
    "title": "baseline onboarding for existing collaborators",
    "user": {
      "login": "Fishrock123",
      "id": 1093990,
      "node_id": "MDQ6VXNlcjEwOTM5OTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1093990?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Fishrock123",
      "html_url": "https://github.com/Fishrock123",
      "followers_url": "https://api.github.com/users/Fishrock123/followers",
      "following_url": "https://api.github.com/users/Fishrock123/following{/other_user}",
      "gists_url": "https://api.github.com/users/Fishrock123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Fishrock123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Fishrock123/subscriptions",
      "organizations_url": "https://api.github.com/users/Fishrock123/orgs",
      "repos_url": "https://api.github.com/users/Fishrock123/repos",
      "events_url": "https://api.github.com/users/Fishrock123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Fishrock123/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 324166296,
        "node_id": "MDU6TGFiZWwzMjQxNjYyOTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/meta",
        "name": "meta",
        "color": "fef2c0",
        "default": false,
        "description": null
      },
      {
        "id": 324399878,
        "node_id": "MDU6TGFiZWwzMjQzOTk4Nzg=",
        "url": "https://api.github.com/repos/expressjs/express/labels/etc-agenda",
        "name": "etc-agenda",
        "color": "bfd4f2",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-02-11T14:45:56Z",
    "updated_at": "2020-06-03T07:13:34Z",
    "closed_at": "2020-06-03T07:13:34Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "We might be able to do this in the meetings, but we should discuss some underlying philosophies in express with the new members and perhaps document those.\n\ni.e. what does \"Fast, unopinionated, minimalist web framework for node\" mean and does that need to be expanded to present it's modularity and future?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2889/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2889/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2888",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2888/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2888/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2888/events",
    "html_url": "https://github.com/expressjs/express/issues/2888",
    "id": 132990920,
    "node_id": "MDU6SXNzdWUxMzI5OTA5MjA=",
    "number": 2888,
    "title": "discuss commit guidelines",
    "user": {
      "login": "Fishrock123",
      "id": 1093990,
      "node_id": "MDQ6VXNlcjEwOTM5OTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1093990?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Fishrock123",
      "html_url": "https://github.com/Fishrock123",
      "followers_url": "https://api.github.com/users/Fishrock123/followers",
      "following_url": "https://api.github.com/users/Fishrock123/following{/other_user}",
      "gists_url": "https://api.github.com/users/Fishrock123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Fishrock123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Fishrock123/subscriptions",
      "organizations_url": "https://api.github.com/users/Fishrock123/orgs",
      "repos_url": "https://api.github.com/users/Fishrock123/repos",
      "events_url": "https://api.github.com/users/Fishrock123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Fishrock123/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 18291,
        "node_id": "MDU6TGFiZWwxODI5MQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1",
        "default": false,
        "description": null
      },
      {
        "id": 324166296,
        "node_id": "MDU6TGFiZWwzMjQxNjYyOTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/meta",
        "name": "meta",
        "color": "fef2c0",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 18,
    "created_at": "2016-02-11T14:41:57Z",
    "updated_at": "2016-02-18T19:50:38Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "We should probably discuss how we want commit styling and signoff.\n\ni.e. No-one in node core commits without review, but I am not 100% sure that is necessary here.\n\nExample of a node core commit:\n\n```\ndoc: say hello in under 50 chars\n\ndescription in under 72 chars/line\n\nFixes: <full url>\nPR-URL: <full url>\nReviewed-By: Name <email@example.com>\n```\n\ncc @expressjs/express \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2888/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2888/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2887",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2887/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2887/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2887/events",
    "html_url": "https://github.com/expressjs/express/issues/2887",
    "id": 132829402,
    "node_id": "MDU6SXNzdWUxMzI4Mjk0MDI=",
    "number": 2887,
    "title": "Move API doc source from expressjs.com repo",
    "user": {
      "login": "crandmck",
      "id": 2925364,
      "node_id": "MDQ6VXNlcjI5MjUzNjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2925364?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/crandmck",
      "html_url": "https://github.com/crandmck",
      "followers_url": "https://api.github.com/users/crandmck/followers",
      "following_url": "https://api.github.com/users/crandmck/following{/other_user}",
      "gists_url": "https://api.github.com/users/crandmck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/crandmck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/crandmck/subscriptions",
      "organizations_url": "https://api.github.com/users/crandmck/orgs",
      "repos_url": "https://api.github.com/users/crandmck/repos",
      "events_url": "https://api.github.com/users/crandmck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/crandmck/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 13,
    "created_at": "2016-02-10T22:01:57Z",
    "updated_at": "2016-02-25T06:16:47Z",
    "closed_at": "2016-02-25T06:16:44Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "AFTER the repo move (per #2886), we plan to copy the source for the API documentation from [its current location](https://github.com/strongloop/expressjs.com/tree/gh-pages/_includes/api/en/4x) into this repo.\n\nI presume it would be reasonable to create a new directory here called `doc` or maybe `apidoc` to hold this content.  \n\nWhen we do this, we'll also need to add a script to `strongloop/expressjs.com` that will pull down this content from the `express` repo for the doc site.  Details TBD--the main thing is to avoid maintaining two copies of the API doc source.  \n\nMy preference would be to keep **issues** related to API doc content in https://github.com/strongloop/expressjs.com, but of course related PRs will need to be in https://github.com/strongloop/express.  This is of course open to discussion and is up to the TSC (or whoever the appropriate people are), but I think it would be simpler to keep all doc-specific issues/discussions in one place.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2887/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2887/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2886",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2886/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2886/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2886/events",
    "html_url": "https://github.com/expressjs/express/issues/2886",
    "id": 132800293,
    "node_id": "MDU6SXNzdWUxMzI4MDAyOTM=",
    "number": 2886,
    "title": "Heads Up: Moving the repository",
    "user": {
      "login": "jasnell",
      "id": 439929,
      "node_id": "MDQ6VXNlcjQzOTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/439929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasnell",
      "html_url": "https://github.com/jasnell",
      "followers_url": "https://api.github.com/users/jasnell/followers",
      "following_url": "https://api.github.com/users/jasnell/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasnell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasnell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasnell/subscriptions",
      "organizations_url": "https://api.github.com/users/jasnell/orgs",
      "repos_url": "https://api.github.com/users/jasnell/repos",
      "events_url": "https://api.github.com/users/jasnell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasnell/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 324166296,
        "node_id": "MDU6TGFiZWwzMjQxNjYyOTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/meta",
        "name": "meta",
        "color": "fef2c0",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "jasnell",
      "id": 439929,
      "node_id": "MDQ6VXNlcjQzOTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/439929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasnell",
      "html_url": "https://github.com/jasnell",
      "followers_url": "https://api.github.com/users/jasnell/followers",
      "following_url": "https://api.github.com/users/jasnell/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasnell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasnell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasnell/subscriptions",
      "organizations_url": "https://api.github.com/users/jasnell/orgs",
      "repos_url": "https://api.github.com/users/jasnell/repos",
      "events_url": "https://api.github.com/users/jasnell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasnell/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "jasnell",
        "id": 439929,
        "node_id": "MDQ6VXNlcjQzOTkyOQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/439929?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasnell",
        "html_url": "https://github.com/jasnell",
        "followers_url": "https://api.github.com/users/jasnell/followers",
        "following_url": "https://api.github.com/users/jasnell/following{/other_user}",
        "gists_url": "https://api.github.com/users/jasnell/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jasnell/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jasnell/subscriptions",
        "organizations_url": "https://api.github.com/users/jasnell/orgs",
        "repos_url": "https://api.github.com/users/jasnell/repos",
        "events_url": "https://api.github.com/users/jasnell/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jasnell/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 15,
    "created_at": "2016-02-10T19:53:56Z",
    "updated_at": "2016-02-10T23:37:49Z",
    "closed_at": "2016-02-10T23:37:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "As part of the transition to the Node.js Foundation Express top level project, the strongloop/express repository will be moved to expressjs/express. I will be looking to make the move later on today. Github should take care of the API redirects.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2886/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2886/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2885",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2885/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2885/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2885/events",
    "html_url": "https://github.com/expressjs/express/issues/2885",
    "id": 132775517,
    "node_id": "MDU6SXNzdWUxMzI3NzU1MTc=",
    "number": 2885,
    "title": "Weekly community hangout",
    "user": {
      "login": "tunniclm",
      "id": 5011883,
      "node_id": "MDQ6VXNlcjUwMTE4ODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5011883?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tunniclm",
      "html_url": "https://github.com/tunniclm",
      "followers_url": "https://api.github.com/users/tunniclm/followers",
      "following_url": "https://api.github.com/users/tunniclm/following{/other_user}",
      "gists_url": "https://api.github.com/users/tunniclm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tunniclm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tunniclm/subscriptions",
      "organizations_url": "https://api.github.com/users/tunniclm/orgs",
      "repos_url": "https://api.github.com/users/tunniclm/repos",
      "events_url": "https://api.github.com/users/tunniclm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tunniclm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 324166296,
        "node_id": "MDU6TGFiZWwzMjQxNjYyOTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/meta",
        "name": "meta",
        "color": "fef2c0",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 48,
    "created_at": "2016-02-10T18:09:57Z",
    "updated_at": "2016-02-29T15:39:27Z",
    "closed_at": "2016-02-25T02:26:59Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "In the interest of collaboration and transparency I'd like to propose a short open online meet-up perhaps once a week for anyone who is working on Express issues/pull requests to share their plans, progress and thoughts on what they are working on.\n\nI would suggest a Google Hangout and a scrum format (what have you been working on? what are you going to work on? are you blocked?) plus questions/any other business. Suggestions for alternatives welcome.\n\nTo start the ball rolling on a time/date, how about: a 10-30 minute hangout on Tuesdays at 5:30pm EST / 10:30pm GMT.\n\nFeedback and expressions of interest welcome in this thread.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2885/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2885/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2884",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2884/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2884/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2884/events",
    "html_url": "https://github.com/expressjs/express/issues/2884",
    "id": 132742435,
    "node_id": "MDU6SXNzdWUxMzI3NDI0MzU=",
    "number": 2884,
    "title": "app.route('/something').all('/action', function(){})",
    "user": {
      "login": "ganna-shmatova",
      "id": 7226694,
      "node_id": "MDQ6VXNlcjcyMjY2OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7226694?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ganna-shmatova",
      "html_url": "https://github.com/ganna-shmatova",
      "followers_url": "https://api.github.com/users/ganna-shmatova/followers",
      "following_url": "https://api.github.com/users/ganna-shmatova/following{/other_user}",
      "gists_url": "https://api.github.com/users/ganna-shmatova/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ganna-shmatova/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ganna-shmatova/subscriptions",
      "organizations_url": "https://api.github.com/users/ganna-shmatova/orgs",
      "repos_url": "https://api.github.com/users/ganna-shmatova/repos",
      "events_url": "https://api.github.com/users/ganna-shmatova/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ganna-shmatova/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2016-02-10T16:07:56Z",
    "updated_at": "2016-02-18T18:46:54Z",
    "closed_at": "2016-02-11T14:22:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "``` js\nvar router = express.Router();\n\n//user\nrouter.route('/user')\n.all(function(req, res, next){\n    if(!req.body.username)\n        req.body.username = req.session.username;\n    next();\n}).all('/get/all', function(req, res){\n    collection.user.get({}, function(err, data){\n        if(err)\n            return res.error(err);\n        res.send(data);\n    });\n});\n```\n\nIs something to fit this use case possible? or should I just be making a second router?\n\ncurrently this code tells me it's expecting a function and not a string (so doesn't work).\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2884/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2884/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2883",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2883/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2883/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2883/events",
    "html_url": "https://github.com/expressjs/express/issues/2883",
    "id": 132656420,
    "node_id": "MDU6SXNzdWUxMzI2NTY0MjA=",
    "number": 2883,
    "title": "Error handling with route",
    "user": {
      "login": "pwielgolaski",
      "id": 3696319,
      "node_id": "MDQ6VXNlcjM2OTYzMTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3696319?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pwielgolaski",
      "html_url": "https://github.com/pwielgolaski",
      "followers_url": "https://api.github.com/users/pwielgolaski/followers",
      "following_url": "https://api.github.com/users/pwielgolaski/following{/other_user}",
      "gists_url": "https://api.github.com/users/pwielgolaski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pwielgolaski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pwielgolaski/subscriptions",
      "organizations_url": "https://api.github.com/users/pwielgolaski/orgs",
      "repos_url": "https://api.github.com/users/pwielgolaski/repos",
      "events_url": "https://api.github.com/users/pwielgolaski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pwielgolaski/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2016-02-10T10:12:44Z",
    "updated_at": "2020-06-03T07:04:38Z",
    "closed_at": "2020-06-03T07:04:38Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I would like to get information in my error handler what endpoint was handling it. The problem that I have is that when error handler is run `req.baseUrl` is not available\n\nI wanted to use line like this \n\n``` js\nvar endpoint = req.route ? (req.baseUrl + req.route.path) : '<no endpoint>';\n```\n\nbut when route is mounted i.e at `/users/` I can get only `:id` and empty `baseUrl`. I don't want to have information about individual request like `/users/myname`\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2883/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2883/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2882",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2882/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2882/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2882/events",
    "html_url": "https://github.com/expressjs/express/pull/2882",
    "id": 132554403,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTg4MTg4MDI=",
    "number": 2882,
    "title": "Fixing doc block for optional parameter",
    "user": {
      "login": "andyfleming",
      "id": 721038,
      "node_id": "MDQ6VXNlcjcyMTAzOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/721038?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andyfleming",
      "html_url": "https://github.com/andyfleming",
      "followers_url": "https://api.github.com/users/andyfleming/followers",
      "following_url": "https://api.github.com/users/andyfleming/following{/other_user}",
      "gists_url": "https://api.github.com/users/andyfleming/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andyfleming/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andyfleming/subscriptions",
      "organizations_url": "https://api.github.com/users/andyfleming/orgs",
      "repos_url": "https://api.github.com/users/andyfleming/repos",
      "events_url": "https://api.github.com/users/andyfleming/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andyfleming/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-02-09T22:26:23Z",
    "updated_at": "2016-02-10T23:33:27Z",
    "closed_at": "2016-02-10T23:33:27Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2882",
      "html_url": "https://github.com/expressjs/express/pull/2882",
      "diff_url": "https://github.com/expressjs/express/pull/2882.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2882.patch",
      "merged_at": null
    },
    "body": "A simple fix to correct the doc block for the `clearCookie` method. The `options` parameter is optional and should be marked as such in the doc block.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2882/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2882/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2881",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2881/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2881/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2881/events",
    "html_url": "https://github.com/expressjs/express/pull/2881",
    "id": 132147929,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTg2MTE3Nzk=",
    "number": 2881,
    "title": "Add branch information and steps for contributing to Contributing.md",
    "user": {
      "login": "sjanuary",
      "id": 14993288,
      "node_id": "MDQ6VXNlcjE0OTkzMjg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/14993288?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sjanuary",
      "html_url": "https://github.com/sjanuary",
      "followers_url": "https://api.github.com/users/sjanuary/followers",
      "following_url": "https://api.github.com/users/sjanuary/following{/other_user}",
      "gists_url": "https://api.github.com/users/sjanuary/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sjanuary/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sjanuary/subscriptions",
      "organizations_url": "https://api.github.com/users/sjanuary/orgs",
      "repos_url": "https://api.github.com/users/sjanuary/repos",
      "events_url": "https://api.github.com/users/sjanuary/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sjanuary/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2016-02-08T13:55:20Z",
    "updated_at": "2016-02-11T11:31:53Z",
    "closed_at": "2016-02-10T23:36:42Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2881",
      "html_url": "https://github.com/expressjs/express/pull/2881",
      "diff_url": "https://github.com/expressjs/express/pull/2881.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2881.patch",
      "merged_at": null
    },
    "body": "See #2877 for related issue\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2881/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2881/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2880",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2880/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2880/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2880/events",
    "html_url": "https://github.com/expressjs/express/pull/2880",
    "id": 131427407,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTgzMjUxMzU=",
    "number": 2880,
    "title": "Apply missing changes for 4.13.4",
    "user": {
      "login": "tunniclm",
      "id": 5011883,
      "node_id": "MDQ6VXNlcjUwMTE4ODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5011883?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tunniclm",
      "html_url": "https://github.com/tunniclm",
      "followers_url": "https://api.github.com/users/tunniclm/followers",
      "following_url": "https://api.github.com/users/tunniclm/following{/other_user}",
      "gists_url": "https://api.github.com/users/tunniclm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tunniclm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tunniclm/subscriptions",
      "organizations_url": "https://api.github.com/users/tunniclm/orgs",
      "repos_url": "https://api.github.com/users/tunniclm/repos",
      "events_url": "https://api.github.com/users/tunniclm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tunniclm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 16,
    "created_at": "2016-02-04T18:05:28Z",
    "updated_at": "2016-02-15T18:08:10Z",
    "closed_at": "2016-02-10T23:27:04Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2880",
      "html_url": "https://github.com/expressjs/express/pull/2880",
      "diff_url": "https://github.com/expressjs/express/pull/2880.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2880.patch",
      "merged_at": null
    },
    "body": "package.json:\n- Update dependencies and devDependencies and\n- Change the version to 4.13.4\n- Alphabetical ordering of some lists\n\nHistory.md:\n- Add details of updates to deps in 4.13.4\n\n---\n\nRelated to: #2861\nRelated to: #2862 \n\nI'm hoping this PR will be helpful to including the deps updates from the NPM release 4.13.4 into the main line. Let me know any comments so I can fix it as necessary.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2880/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2880/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2879",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2879/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2879/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2879/events",
    "html_url": "https://github.com/expressjs/express/issues/2879",
    "id": 131331975,
    "node_id": "MDU6SXNzdWUxMzEzMzE5NzU=",
    "number": 2879,
    "title": "How to get route name of parent route?",
    "user": {
      "login": "watson",
      "id": 10602,
      "node_id": "MDQ6VXNlcjEwNjAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/10602?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/watson",
      "html_url": "https://github.com/watson",
      "followers_url": "https://api.github.com/users/watson/followers",
      "following_url": "https://api.github.com/users/watson/following{/other_user}",
      "gists_url": "https://api.github.com/users/watson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/watson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/watson/subscriptions",
      "organizations_url": "https://api.github.com/users/watson/orgs",
      "repos_url": "https://api.github.com/users/watson/repos",
      "events_url": "https://api.github.com/users/watson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/watson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 23,
    "created_at": "2016-02-04T12:30:14Z",
    "updated_at": "2022-09-15T14:30:42Z",
    "closed_at": "2016-02-04T16:18:48Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "### Goal\n\nFor each incoming request I'd like to log the name of the route that matches the request. So given the request `GET /users/42` which matches the `app.use('/users/:id', ...)` route handler I'd like to get the name `/users/:id`.\n#### Partial solution\n\nI originally used the `route` property on the request object to extract the route name:\n\n``` js\n// given a request to `/users/42`, the routeName below would be `/users/:id`\nvar routeName = req.route.path || req.route.regexp && req.route.regexp.source\n```\n### Problem\n\nBut the above solution doesn't work for nested routes, e.g:\n\n``` js\n// create sub-app\nvar admin = express.Router()\nadmin.get('/users/:id', require('./admin/user'))\n\n// create main app\nvar app = express()\napp.get('/users/:id', require('./user'))\napp.use('/a(dmin)?', admin) // mount sub-app under \"/admin\" and \"/a\"\n```\n\nWhen mounting a route like in the above example, the `req.route.path` property will not contain the parent route. So if someone requests `GET /admin/users/42` then `req.route.path` would just contain `/users/:id` and not `/a(dmin)?/users/:id`.\n\nIs there any way inside a route handler to figure out that this was routed through a parent route with the name `/a(dmin)?`?\n\nI first thought to use `req.baseUrl`, but that will give me the \"resolved\" path, so I'd get either `/a` or `/admin` depending on which actual URL the user typed - I'd like to get the generic route name instead: `/a(dmin)?`\n\nIf this is not possible at all in v4, it would be cool if this could be supported in v5 :smiley: \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2879/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2879/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2878",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2878/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2878/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2878/events",
    "html_url": "https://github.com/expressjs/express/issues/2878",
    "id": 131277989,
    "node_id": "MDU6SXNzdWUxMzEyNzc5ODk=",
    "number": 2878,
    "title": "Support for auto-generated Accept-Patch header",
    "user": {
      "login": "Risto-Stevcev",
      "id": 6767374,
      "node_id": "MDQ6VXNlcjY3NjczNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6767374?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Risto-Stevcev",
      "html_url": "https://github.com/Risto-Stevcev",
      "followers_url": "https://api.github.com/users/Risto-Stevcev/followers",
      "following_url": "https://api.github.com/users/Risto-Stevcev/following{/other_user}",
      "gists_url": "https://api.github.com/users/Risto-Stevcev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Risto-Stevcev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Risto-Stevcev/subscriptions",
      "organizations_url": "https://api.github.com/users/Risto-Stevcev/orgs",
      "repos_url": "https://api.github.com/users/Risto-Stevcev/repos",
      "events_url": "https://api.github.com/users/Risto-Stevcev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Risto-Stevcev/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 18291,
        "node_id": "MDU6TGFiZWwxODI5MQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1",
        "default": false,
        "description": null
      },
      {
        "id": 133578718,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTg=",
        "url": "https://api.github.com/repos/expressjs/express/labels/investigate",
        "name": "investigate",
        "color": "bfdadc",
        "default": false,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 13,
    "created_at": "2016-02-04T08:34:50Z",
    "updated_at": "2016-02-15T21:58:52Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The auto-generated `OPTIONS` response works well, but it there currently isn't any option that you can set to include [Accept-Patch](http://tools.ietf.org/html/rfc5789#section-3.1) for the media type(s) that your API's `PATCH` request accepts.\n\nCreating a middleware function like this doesn't work because the middleware executes before the auto-generated `OPTIONS` response:\n\n``` javascript\nlet acceptPatch = function(req, res, next) {\n  if (/PATCH/.test(req.get('Allow')))\n    res.set('Accept-Patch', 'application/json')\n  next()\n}\nrouter.use(acceptPatch) // won't work because req.get('Allow') hasn't been auto-generated yet\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2878/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2878/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2877",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2877/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2877/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2877/events",
    "html_url": "https://github.com/expressjs/express/issues/2877",
    "id": 131050917,
    "node_id": "MDU6SXNzdWUxMzEwNTA5MTc=",
    "number": 2877,
    "title": "Contributing.md is missing information about branches and needs more detail on contribution steps",
    "user": {
      "login": "sjanuary",
      "id": 14993288,
      "node_id": "MDQ6VXNlcjE0OTkzMjg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/14993288?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sjanuary",
      "html_url": "https://github.com/sjanuary",
      "followers_url": "https://api.github.com/users/sjanuary/followers",
      "following_url": "https://api.github.com/users/sjanuary/following{/other_user}",
      "gists_url": "https://api.github.com/users/sjanuary/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sjanuary/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sjanuary/subscriptions",
      "organizations_url": "https://api.github.com/users/sjanuary/orgs",
      "repos_url": "https://api.github.com/users/sjanuary/repos",
      "events_url": "https://api.github.com/users/sjanuary/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sjanuary/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 18291,
        "node_id": "MDU6TGFiZWwxODI5MQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1",
        "default": false,
        "description": null
      },
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-02-03T15:03:06Z",
    "updated_at": "2016-02-11T14:01:04Z",
    "closed_at": "2016-02-11T13:59:51Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "I've been reading the [guidelines for contributing](https://github.com/strongloop/express/blob/master/Contributing.md) and I think it would be useful to see some information on which branch to use (e.g. If a PR is intended for Express 5.0 I guess it should be based on the 5.0 branch, otherwise master?). Also I thought a section on how to get and run the tests would be good although I can see that's in Readme.md so maybe it shouldn't be duplicated. The third thing I have been looking for is guidelines about what order to do things (e.g. can someone just create a PR and discuss the merits within that, or should each PR also have an associated issue).  Maybe that's common knowledge, I'm not sure, but it probably wouldn't hurt to be explicit.\n\nI'd be happy to have a go at updating the guidelines if other people also think it would be useful.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2877/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2877/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2876",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2876/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2876/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2876/events",
    "html_url": "https://github.com/expressjs/express/pull/2876",
    "id": 130597268,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTc5NDg4MDM=",
    "number": 2876,
    "title": "Please view https://github.com/2881099/bmw.js",
    "user": {
      "login": "2881099",
      "id": 16286519,
      "node_id": "MDQ6VXNlcjE2Mjg2NTE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16286519?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/2881099",
      "html_url": "https://github.com/2881099",
      "followers_url": "https://api.github.com/users/2881099/followers",
      "following_url": "https://api.github.com/users/2881099/following{/other_user}",
      "gists_url": "https://api.github.com/users/2881099/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/2881099/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/2881099/subscriptions",
      "organizations_url": "https://api.github.com/users/2881099/orgs",
      "repos_url": "https://api.github.com/users/2881099/repos",
      "events_url": "https://api.github.com/users/2881099/events{/privacy}",
      "received_events_url": "https://api.github.com/users/2881099/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-02-02T07:12:02Z",
    "updated_at": "2016-02-11T03:27:19Z",
    "closed_at": "2016-02-10T14:51:45Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2876",
      "html_url": "https://github.com/expressjs/express/pull/2876",
      "diff_url": "https://github.com/expressjs/express/pull/2876.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2876.patch",
      "merged_at": null
    },
    "body": "https://github.com/2881099/bmw.js\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2876/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2876/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2875",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2875/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2875/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2875/events",
    "html_url": "https://github.com/expressjs/express/issues/2875",
    "id": 130187754,
    "node_id": "MDU6SXNzdWUxMzAxODc3NTQ=",
    "number": 2875,
    "title": "JSX views are being cached regardless of env setting",
    "user": {
      "login": "granteagon",
      "id": 133823,
      "node_id": "MDQ6VXNlcjEzMzgyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/133823?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/granteagon",
      "html_url": "https://github.com/granteagon",
      "followers_url": "https://api.github.com/users/granteagon/followers",
      "following_url": "https://api.github.com/users/granteagon/following{/other_user}",
      "gists_url": "https://api.github.com/users/granteagon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/granteagon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/granteagon/subscriptions",
      "organizations_url": "https://api.github.com/users/granteagon/orgs",
      "repos_url": "https://api.github.com/users/granteagon/repos",
      "events_url": "https://api.github.com/users/granteagon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/granteagon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-01-31T21:27:18Z",
    "updated_at": "2016-02-25T06:22:04Z",
    "closed_at": "2016-02-15T16:20:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm using [express-react-views](https://github.com/reactjs/express-react-views/) to as my view engine and if I change the view code in dev mode, the server does not rerender the view.  My guess is this is because react components are functions and the view functions are cached separately from the templates as mentioned in #542.\n\nThanks for any insight.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2875/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2875/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2874",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2874/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2874/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2874/events",
    "html_url": "https://github.com/expressjs/express/pull/2874",
    "id": 130001225,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTc3NDI1NDk=",
    "number": 2874,
    "title": "Feature request that makes anything runnable",
    "user": {
      "login": "EloB",
      "id": 476567,
      "node_id": "MDQ6VXNlcjQ3NjU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/476567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EloB",
      "html_url": "https://github.com/EloB",
      "followers_url": "https://api.github.com/users/EloB/followers",
      "following_url": "https://api.github.com/users/EloB/following{/other_user}",
      "gists_url": "https://api.github.com/users/EloB/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EloB/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EloB/subscriptions",
      "organizations_url": "https://api.github.com/users/EloB/orgs",
      "repos_url": "https://api.github.com/users/EloB/repos",
      "events_url": "https://api.github.com/users/EloB/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EloB/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 13,
    "created_at": "2016-01-30T15:47:42Z",
    "updated_at": "2018-09-24T18:24:18Z",
    "closed_at": "2018-09-24T18:24:18Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2874",
      "html_url": "https://github.com/expressjs/express/pull/2874",
      "diff_url": "https://github.com/expressjs/express/pull/2874.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2874.patch",
      "merged_at": null
    },
    "body": "This is a draft for a new method that I call `app.runnable()`. It's almost works the same as `app.listen()` but it will only start the server if the current file is the `require.main`.\n\nI always create my middlewares as express instances instead of just `module.exports = function(req, res, next) {};`. I also add this snippet in the bottom section of all my middlewares:\n\n``` js\nvar app = require('express')();\n// ...\nif (require.main === module) {\n  app.listen(3000);\n}\n```\n\nI really like this pattern because it's easy to run any middleware as a service with just `node middlewares/something.js`. If you add some environment variables then it's really easy to scale a specific area of your application as well.\n\nI haven't written any tests because I want to feedback from you guys what you think about this feature before I will write them.\n\n**Examples**\n\n_Example 1_\n\n``` bash\nnode index.js\n```\n\n_Example 2_\n\n``` bash\nnode middlewares/api.js\n```\n\n_Example 3_\n\n``` bash\nEXPRESS_PORT=3001 EXPRESS_HOSTNAME=localhost node middlewares/api.js\nEXPRESS_PATH=/var/tmp/http.sock node index.js\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2874/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2874/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2873",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2873/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2873/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2873/events",
    "html_url": "https://github.com/expressjs/express/issues/2873",
    "id": 129981677,
    "node_id": "MDU6SXNzdWUxMjk5ODE2Nzc=",
    "number": 2873,
    "title": "All Router middleware installed before route.METHOD installations should run before them",
    "user": {
      "login": "timlind",
      "id": 237741,
      "node_id": "MDQ6VXNlcjIzNzc0MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237741?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/timlind",
      "html_url": "https://github.com/timlind",
      "followers_url": "https://api.github.com/users/timlind/followers",
      "following_url": "https://api.github.com/users/timlind/following{/other_user}",
      "gists_url": "https://api.github.com/users/timlind/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/timlind/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/timlind/subscriptions",
      "organizations_url": "https://api.github.com/users/timlind/orgs",
      "repos_url": "https://api.github.com/users/timlind/repos",
      "events_url": "https://api.github.com/users/timlind/events{/privacy}",
      "received_events_url": "https://api.github.com/users/timlind/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2016-01-30T12:31:09Z",
    "updated_at": "2016-02-15T10:30:41Z",
    "closed_at": "2016-02-15T10:30:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The following code should respond with \"forbidden\" but instead executes the route handler and responds with \"was not cancelled\".\n\nIf the route is created before the middleware is installed, then the method handlers installed after the middleware cannot be cancelled by the middleware, the middleware does not even run in this case.\n\n```\nvar express = require('express');\n\nvar router = express.Router();\n// NB: if the route is created here, before the middleware is installed, then it cannot be cancelled by the middleware\nvar route = router.route('/test');\n\nrouter.use(function(req,res,next) {\n    // cancel execution\n    console.log('cancelling execution');\n    res.send(\"FORBIDDEN\\n\");\n});\n\nroute.get(function(req, res) {\n    console.log('execution was not cancelled');\n    res.send(\"WAS NOT CANCELLED\\n\");\n});\n\nexpress().use(router).listen(8123);\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2873/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2873/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2872",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2872/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2872/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2872/events",
    "html_url": "https://github.com/expressjs/express/issues/2872",
    "id": 129821930,
    "node_id": "MDU6SXNzdWUxMjk4MjE5MzA=",
    "number": 2872,
    "title": "Windows Support/Build ?",
    "user": {
      "login": "nelsonic",
      "id": 194400,
      "node_id": "MDQ6VXNlcjE5NDQwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/194400?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nelsonic",
      "html_url": "https://github.com/nelsonic",
      "followers_url": "https://api.github.com/users/nelsonic/followers",
      "following_url": "https://api.github.com/users/nelsonic/following{/other_user}",
      "gists_url": "https://api.github.com/users/nelsonic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nelsonic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nelsonic/subscriptions",
      "organizations_url": "https://api.github.com/users/nelsonic/orgs",
      "repos_url": "https://api.github.com/users/nelsonic/repos",
      "events_url": "https://api.github.com/users/nelsonic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nelsonic/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2016-01-29T16:51:36Z",
    "updated_at": "2016-02-11T00:28:11Z",
    "closed_at": "2016-02-10T23:29:13Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi, is there a reason why the Readme still includes a link to @dougwilson's Express _Fork_ which is no longer available on Appveyor\n\nIs Windows being _actively_ supported by Strongloop/IBM ...?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2872/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2872/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2871",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2871/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2871/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2871/events",
    "html_url": "https://github.com/expressjs/express/pull/2871",
    "id": 129799691,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTc2NjE2MzY=",
    "number": 2871,
    "title": "node foundation proposed express WG governance",
    "user": {
      "login": "jasnell",
      "id": 439929,
      "node_id": "MDQ6VXNlcjQzOTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/439929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasnell",
      "html_url": "https://github.com/jasnell",
      "followers_url": "https://api.github.com/users/jasnell/followers",
      "following_url": "https://api.github.com/users/jasnell/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasnell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasnell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasnell/subscriptions",
      "organizations_url": "https://api.github.com/users/jasnell/orgs",
      "repos_url": "https://api.github.com/users/jasnell/repos",
      "events_url": "https://api.github.com/users/jasnell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasnell/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 324166296,
        "node_id": "MDU6TGFiZWwzMjQxNjYyOTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/meta",
        "name": "meta",
        "color": "fef2c0",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 17,
    "created_at": "2016-01-29T15:32:50Z",
    "updated_at": "2020-04-15T06:48:43Z",
    "closed_at": "2020-04-15T06:48:43Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2871",
      "html_url": "https://github.com/expressjs/express/pull/2871",
      "diff_url": "https://github.com/expressjs/express/pull/2871.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2871.patch",
      "merged_at": null
    },
    "body": "Per the proposal to add express to the Node.js Foundation incubator (https://github.com/nodejs/TSC/pull/39) an Express WG under the Node.js TSC would be chartered to oversee the nodejs/express github repository. Per the TSC guidelines, every WG needs a minimum set of governance policies in place that describe how the WG will operate. This adds an initial draft that is based directly on the base policy templates provided by the TSC. \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2871/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2871/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2870",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2870/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2870/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2870/events",
    "html_url": "https://github.com/expressjs/express/issues/2870",
    "id": 129790196,
    "node_id": "MDU6SXNzdWUxMjk3OTAxOTY=",
    "number": 2870,
    "title": "Writing a generic middleware framework based on Express",
    "user": {
      "login": "elliothatch",
      "id": 2262577,
      "node_id": "MDQ6VXNlcjIyNjI1Nzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2262577?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elliothatch",
      "html_url": "https://github.com/elliothatch",
      "followers_url": "https://api.github.com/users/elliothatch/followers",
      "following_url": "https://api.github.com/users/elliothatch/following{/other_user}",
      "gists_url": "https://api.github.com/users/elliothatch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elliothatch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elliothatch/subscriptions",
      "organizations_url": "https://api.github.com/users/elliothatch/orgs",
      "repos_url": "https://api.github.com/users/elliothatch/repos",
      "events_url": "https://api.github.com/users/elliothatch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elliothatch/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2016-01-29T15:02:24Z",
    "updated_at": "2016-01-29T23:25:49Z",
    "closed_at": "2016-01-29T22:28:31Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I apologize in advance if this isn't the right place to ask this question.\n\nI've been working with Socket.IO for a short time and have found myself using a transactional model for many of my socket operations. Currently, these transactions are just coded into event handlers, but I'd really like a middleware based routing pipeline, so I began designing a Socket.IO middleware framework, modeled after Express.\n\nAfter looking at the Express code for a bit I noticed that the majority of HTTP specific code is isolated in the request and response objects and thought, hey, instead of writing a framework just for Socket.IO, how about writing a generic middleware framework that abstracts away the request and response into an interface? Then the user can write a concrete version of request and response for any transactional model they want, for any protocol or library they want--be it various HTTP backends, socket transactions, database queries, etc.\n\nSo my question is: would it be feasible to build this kind of framework off of Express? From what I've seen, the HTTP code seems mostly isolated from the framework code, so it would be a simple matter of abstracting out requests and responses, and cleaning up a few parts of the code that make assumptions about req and res. Or, as an HTTP framework, does Express make deeper assumptions than I realize, and trying to adapt its codebase would end up causing me more trouble than if I just rolled my own framework?\n\nThanks!\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2870/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2870/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2869",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2869/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2869/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2869/events",
    "html_url": "https://github.com/expressjs/express/issues/2869",
    "id": 129621965,
    "node_id": "MDU6SXNzdWUxMjk2MjE5NjU=",
    "number": 2869,
    "title": "Applying for incubation under the Node.js Foundation",
    "user": {
      "login": "jasnell",
      "id": 439929,
      "node_id": "MDQ6VXNlcjQzOTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/439929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasnell",
      "html_url": "https://github.com/jasnell",
      "followers_url": "https://api.github.com/users/jasnell/followers",
      "following_url": "https://api.github.com/users/jasnell/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasnell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasnell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasnell/subscriptions",
      "organizations_url": "https://api.github.com/users/jasnell/orgs",
      "repos_url": "https://api.github.com/users/jasnell/repos",
      "events_url": "https://api.github.com/users/jasnell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasnell/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 324166296,
        "node_id": "MDU6TGFiZWwzMjQxNjYyOTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/meta",
        "name": "meta",
        "color": "fef2c0",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2016-01-29T00:00:38Z",
    "updated_at": "2016-02-15T21:59:56Z",
    "closed_at": "2016-02-15T21:59:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have opened a pull request in the Node.js TSC asking Express to be incubated as a Node.js Foundation Top Level Project: https://github.com/nodejs/TSC/pull/39\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2869/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2869/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2868",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2868/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2868/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2868/events",
    "html_url": "https://github.com/expressjs/express/pull/2868",
    "id": 129294805,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTc0MzU4NDk=",
    "number": 2868,
    "title": "Changed author",
    "user": {
      "login": "gopops1225",
      "id": 16889542,
      "node_id": "MDQ6VXNlcjE2ODg5NTQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/16889542?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gopops1225",
      "html_url": "https://github.com/gopops1225",
      "followers_url": "https://api.github.com/users/gopops1225/followers",
      "following_url": "https://api.github.com/users/gopops1225/following{/other_user}",
      "gists_url": "https://api.github.com/users/gopops1225/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gopops1225/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gopops1225/subscriptions",
      "organizations_url": "https://api.github.com/users/gopops1225/orgs",
      "repos_url": "https://api.github.com/users/gopops1225/repos",
      "events_url": "https://api.github.com/users/gopops1225/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gopops1225/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-01-27T22:48:05Z",
    "updated_at": "2016-02-10T23:41:11Z",
    "closed_at": "2016-01-27T22:49:45Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2868",
      "html_url": "https://github.com/expressjs/express/pull/2868",
      "diff_url": "https://github.com/expressjs/express/pull/2868.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2868.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2868/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2868/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2867",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2867/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2867/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2867/events",
    "html_url": "https://github.com/expressjs/express/issues/2867",
    "id": 129118179,
    "node_id": "MDU6SXNzdWUxMjkxMTgxNzk=",
    "number": 2867,
    "title": "NPM info fields for express are pointing to old GitHub repository",
    "user": {
      "login": "bananu7",
      "id": 2399997,
      "node_id": "MDQ6VXNlcjIzOTk5OTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2399997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bananu7",
      "html_url": "https://github.com/bananu7",
      "followers_url": "https://api.github.com/users/bananu7/followers",
      "following_url": "https://api.github.com/users/bananu7/following{/other_user}",
      "gists_url": "https://api.github.com/users/bananu7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bananu7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bananu7/subscriptions",
      "organizations_url": "https://api.github.com/users/bananu7/orgs",
      "repos_url": "https://api.github.com/users/bananu7/repos",
      "events_url": "https://api.github.com/users/bananu7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bananu7/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-01-27T11:39:28Z",
    "updated_at": "2016-02-10T23:24:48Z",
    "closed_at": "2016-02-10T23:24:48Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The npm `repository` field has `github.com/expressjs/express`, and similarly, the issue link points to previous github issue tracker.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2867/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2867/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2866",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2866/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2866/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2866/events",
    "html_url": "https://github.com/expressjs/express/pull/2866",
    "id": 128803348,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTcyMDM0NTA=",
    "number": 2866,
    "title": "Not adding Content Length header in the response if Transfer Encoding is chunked",
    "user": {
      "login": "aalonsog",
      "id": 790516,
      "node_id": "MDQ6VXNlcjc5MDUxNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790516?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aalonsog",
      "html_url": "https://github.com/aalonsog",
      "followers_url": "https://api.github.com/users/aalonsog/followers",
      "following_url": "https://api.github.com/users/aalonsog/following{/other_user}",
      "gists_url": "https://api.github.com/users/aalonsog/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aalonsog/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aalonsog/subscriptions",
      "organizations_url": "https://api.github.com/users/aalonsog/orgs",
      "repos_url": "https://api.github.com/users/aalonsog/repos",
      "events_url": "https://api.github.com/users/aalonsog/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aalonsog/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-01-26T12:15:16Z",
    "updated_at": "2016-02-18T20:50:33Z",
    "closed_at": "2016-02-11T09:06:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2866",
      "html_url": "https://github.com/expressjs/express/pull/2866",
      "diff_url": "https://github.com/expressjs/express/pull/2866.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2866.patch",
      "merged_at": null
    },
    "body": "According to the RFC 2616 Hypertext Transfer Protocol -- HTTP/1.1, Section 4.4 (https://tools.ietf.org/html/rfc2616#section-4.4):\n\n\"Messages MUST NOT include both a Content-Length header field and a non-identity transfer-coding. If the message does include a non-identity transfer-coding, the Content-Length MUST be ignored.\"\n\nIncluding both headers in the response crashes some http clients.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2866/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2866/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2865",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2865/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2865/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2865/events",
    "html_url": "https://github.com/expressjs/express/issues/2865",
    "id": 128426073,
    "node_id": "MDU6SXNzdWUxMjg0MjYwNzM=",
    "number": 2865,
    "title": "disable x-powered-by not reflecting in mounted apps?",
    "user": {
      "login": "tleen",
      "id": 1599679,
      "node_id": "MDQ6VXNlcjE1OTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1599679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tleen",
      "html_url": "https://github.com/tleen",
      "followers_url": "https://api.github.com/users/tleen/followers",
      "following_url": "https://api.github.com/users/tleen/following{/other_user}",
      "gists_url": "https://api.github.com/users/tleen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tleen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tleen/subscriptions",
      "organizations_url": "https://api.github.com/users/tleen/orgs",
      "repos_url": "https://api.github.com/users/tleen/repos",
      "events_url": "https://api.github.com/users/tleen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tleen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2016-01-24T21:22:39Z",
    "updated_at": "2016-01-29T19:43:52Z",
    "closed_at": "2016-01-29T19:43:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Found this issue via [Stack Overflow](http://stackoverflow.com/questions/14285050/broke-up-express-app-into-submodules-now-my-custom-x-powered-by-does-not-wor), fix was fa8eec449bf406cebd7a92d376a098a39a804879, I am still unable to globally suppress x-powered-by in a mounted app from the parent. Am I doing it wrong?\n\nMy example app is here: [@tleen/express-x-powered-by](https://github.com/tleen/express-x-powered-by)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2865/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2865/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2864",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2864/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2864/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2864/events",
    "html_url": "https://github.com/expressjs/express/pull/2864",
    "id": 128424079,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTcwMTMzMTU=",
    "number": 2864,
    "title": "Store matched routes in request",
    "user": {
      "login": "ajfranzoia",
      "id": 964115,
      "node_id": "MDQ6VXNlcjk2NDExNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/964115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajfranzoia",
      "html_url": "https://github.com/ajfranzoia",
      "followers_url": "https://api.github.com/users/ajfranzoia/followers",
      "following_url": "https://api.github.com/users/ajfranzoia/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajfranzoia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajfranzoia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajfranzoia/subscriptions",
      "organizations_url": "https://api.github.com/users/ajfranzoia/orgs",
      "repos_url": "https://api.github.com/users/ajfranzoia/repos",
      "events_url": "https://api.github.com/users/ajfranzoia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajfranzoia/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-01-24T20:47:53Z",
    "updated_at": "2016-01-30T18:54:25Z",
    "closed_at": "2016-01-30T18:54:25Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2864",
      "html_url": "https://github.com/expressjs/express/pull/2864",
      "diff_url": "https://github.com/expressjs/express/pull/2864.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2864.patch",
      "merged_at": null
    },
    "body": "@dougwilson I've been working on this feature (#2501).\nIt allows to store every matched route in a request when travelling through nested routes. This may be useful for logging, ACL checks, etc.\nSo, for example, if you have your routing set like this:\n\n``` javascript\nvar fooRouter = new Router();\nvar barRouter = new Router();\nvar bazRouter = new Router();\n\nbazRouter.get(['/bez', '/baz/:subId'], function(req, res, next) {\n  next();\n});\n\nfooRouter.use(['/foo/:id', '/foe'], barRouter);\nbarRouter.use(['/bar'], bazRouter);\n```\n\nA request for the URL `/foo/10/bar/baz/30` will set an array of matched routes in the request object like this:\n\n``` javascript\nreq.matchedRoutes = ['/foo/:id', '/bar', '/baz/:subId'];\n```\n\nLet me know if there is anything that needs to be modification, unmeaningful variable names, etc.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2864/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2864/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2863",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2863/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2863/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2863/events",
    "html_url": "https://github.com/expressjs/express/pull/2863",
    "id": 128314416,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTY5NzE2MjI=",
    "number": 2863,
    "title": "Error 500 fix",
    "user": {
      "login": "codeforce-dev",
      "id": 3636208,
      "node_id": "MDQ6VXNlcjM2MzYyMDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3636208?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codeforce-dev",
      "html_url": "https://github.com/codeforce-dev",
      "followers_url": "https://api.github.com/users/codeforce-dev/followers",
      "following_url": "https://api.github.com/users/codeforce-dev/following{/other_user}",
      "gists_url": "https://api.github.com/users/codeforce-dev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codeforce-dev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codeforce-dev/subscriptions",
      "organizations_url": "https://api.github.com/users/codeforce-dev/orgs",
      "repos_url": "https://api.github.com/users/codeforce-dev/repos",
      "events_url": "https://api.github.com/users/codeforce-dev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codeforce-dev/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-01-23T08:38:15Z",
    "updated_at": "2016-02-16T03:50:08Z",
    "closed_at": "2016-02-11T18:26:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2863",
      "html_url": "https://github.com/expressjs/express/pull/2863",
      "diff_url": "https://github.com/expressjs/express/pull/2863.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2863.patch",
      "merged_at": null
    },
    "body": "Unescape resolves some error 500 in URL paths like this:\n/thema/n%FCrburgring.html\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2863/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2863/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  }
]