[
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/1044320",
    "html_url": "https://github.com/expressjs/express/issues/638#issuecomment-1044320",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/638",
    "id": 1044320,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDQzMjA=",
    "user": {
      "login": "tj",
      "id": 25254,
      "node_id": "MDQ6VXNlcjI1MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tj",
      "html_url": "https://github.com/tj",
      "followers_url": "https://api.github.com/users/tj/followers",
      "following_url": "https://api.github.com/users/tj/following{/other_user}",
      "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
      "organizations_url": "https://api.github.com/users/tj/orgs",
      "repos_url": "https://api.github.com/users/tj/repos",
      "events_url": "https://api.github.com/users/tj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-22T15:54:50Z",
    "updated_at": "2011-04-22T15:54:50Z",
    "author_association": "MEMBER",
    "body": "yeah the reason that happens is that app.get('/foo', bar, baz, function(){}) basically expands to three app.get('/foo') calls with the callback as each of the given functions, so you essentially define that route several times. You can always check say `req.currentUser` first and next() immediately if available, bit of a gotcha unless you know how that mechanism works\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/1044320/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/1044341",
    "html_url": "https://github.com/expressjs/express/issues/638#issuecomment-1044341",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/638",
    "id": 1044341,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDQzNDE=",
    "user": {
      "login": "mhemesath",
      "id": 225765,
      "node_id": "MDQ6VXNlcjIyNTc2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/225765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mhemesath",
      "html_url": "https://github.com/mhemesath",
      "followers_url": "https://api.github.com/users/mhemesath/followers",
      "following_url": "https://api.github.com/users/mhemesath/following{/other_user}",
      "gists_url": "https://api.github.com/users/mhemesath/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mhemesath/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mhemesath/subscriptions",
      "organizations_url": "https://api.github.com/users/mhemesath/orgs",
      "repos_url": "https://api.github.com/users/mhemesath/repos",
      "events_url": "https://api.github.com/users/mhemesath/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mhemesath/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-22T16:00:39Z",
    "updated_at": "2011-04-22T16:00:39Z",
    "author_association": "NONE",
    "body": "ok, that makes sense.  So is that effect doubled with a nested resources? Or is it even possible to use app.param in a nested resource?\n\napp.get('/clients/:client_id', authenticateUser, ClientsController.show);\napp.get('/clients/:client_id/scenarios/:scenario_id', authenticateUser, ScenariosController.show);\napp.param(\"client_id\", ClientsController.load);\napp.param(\"scenario_id\", ScenariosController.load);\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/1044341/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/1044433",
    "html_url": "https://github.com/expressjs/express/issues/638#issuecomment-1044433",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/638",
    "id": 1044433,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDQ0MzM=",
    "user": {
      "login": "tj",
      "id": 25254,
      "node_id": "MDQ6VXNlcjI1MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tj",
      "html_url": "https://github.com/tj",
      "followers_url": "https://api.github.com/users/tj/followers",
      "following_url": "https://api.github.com/users/tj/following{/other_user}",
      "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
      "organizations_url": "https://api.github.com/users/tj/orgs",
      "repos_url": "https://api.github.com/users/tj/repos",
      "events_url": "https://api.github.com/users/tj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-22T16:23:51Z",
    "updated_at": "2011-04-22T16:23:51Z",
    "author_association": "MEMBER",
    "body": "with express-resource? should still work fine. definitely a gotcha, just sucks treating anything middleware related \"special\" but I see how this would be confusing\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/1044433/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/1044460",
    "html_url": "https://github.com/expressjs/express/issues/638#issuecomment-1044460",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/638",
    "id": 1044460,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDQ0NjA=",
    "user": {
      "login": "tj",
      "id": 25254,
      "node_id": "MDQ6VXNlcjI1MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tj",
      "html_url": "https://github.com/tj",
      "followers_url": "https://api.github.com/users/tj/followers",
      "following_url": "https://api.github.com/users/tj/following{/other_user}",
      "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
      "organizations_url": "https://api.github.com/users/tj/orgs",
      "repos_url": "https://api.github.com/users/tj/repos",
      "events_url": "https://api.github.com/users/tj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-22T16:29:34Z",
    "updated_at": "2011-04-22T16:29:34Z",
    "author_association": "MEMBER",
    "body": "I think im going to end up special-casing this actually, it's less \"pure\" to do so, but to big of a gotcha. When I do this I can also add a \"skip\" callback (or something like that) so that instead of next()ing to the next middleware or the route callback itself, skip() would jump passed the route callback and remaining middleware for that route (if any)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/1044460/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/1044567",
    "html_url": "https://github.com/expressjs/express/issues/638#issuecomment-1044567",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/638",
    "id": 1044567,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDQ1Njc=",
    "user": {
      "login": "mhemesath",
      "id": 225765,
      "node_id": "MDQ6VXNlcjIyNTc2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/225765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mhemesath",
      "html_url": "https://github.com/mhemesath",
      "followers_url": "https://api.github.com/users/mhemesath/followers",
      "following_url": "https://api.github.com/users/mhemesath/following{/other_user}",
      "gists_url": "https://api.github.com/users/mhemesath/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mhemesath/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mhemesath/subscriptions",
      "organizations_url": "https://api.github.com/users/mhemesath/orgs",
      "repos_url": "https://api.github.com/users/mhemesath/repos",
      "events_url": "https://api.github.com/users/mhemesath/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mhemesath/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-22T16:56:49Z",
    "updated_at": "2011-04-22T16:58:48Z",
    "author_association": "NONE",
    "body": "No, I'm not using express-resource because of https://github.com/visionmedia/express-resource/issues/8 .   I would think something cleaner than \"skip\" would be to just \"return false;\".  Its already a familiar convention to stop event bubbling.. and this is kinda the same mental model as that. \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/1044567/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/1044607",
    "html_url": "https://github.com/expressjs/express/issues/638#issuecomment-1044607",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/638",
    "id": 1044607,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDQ2MDc=",
    "user": {
      "login": "tj",
      "id": 25254,
      "node_id": "MDQ6VXNlcjI1MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tj",
      "html_url": "https://github.com/tj",
      "followers_url": "https://api.github.com/users/tj/followers",
      "following_url": "https://api.github.com/users/tj/following{/other_user}",
      "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
      "organizations_url": "https://api.github.com/users/tj/orgs",
      "repos_url": "https://api.github.com/users/tj/repos",
      "events_url": "https://api.github.com/users/tj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-22T17:06:44Z",
    "updated_at": "2011-04-22T17:06:44Z",
    "author_association": "MEMBER",
    "body": "yeah but there are many cases you would want to \"skip\" async, perhaps you did some kind of async validation, results came back and your middleware decided ok it's not an error but this route can't handle this request, skip() instead of next(new Error()) \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/1044607/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/1044664",
    "html_url": "https://github.com/expressjs/express/issues/638#issuecomment-1044664",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/638",
    "id": 1044664,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDQ2NjQ=",
    "user": {
      "login": "mhemesath",
      "id": 225765,
      "node_id": "MDQ6VXNlcjIyNTc2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/225765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mhemesath",
      "html_url": "https://github.com/mhemesath",
      "followers_url": "https://api.github.com/users/mhemesath/followers",
      "following_url": "https://api.github.com/users/mhemesath/following{/other_user}",
      "gists_url": "https://api.github.com/users/mhemesath/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mhemesath/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mhemesath/subscriptions",
      "organizations_url": "https://api.github.com/users/mhemesath/orgs",
      "repos_url": "https://api.github.com/users/mhemesath/repos",
      "events_url": "https://api.github.com/users/mhemesath/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mhemesath/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-22T17:23:16Z",
    "updated_at": "2011-04-22T17:23:16Z",
    "author_association": "NONE",
    "body": "OK, so I think I'm going to manually load all my data from within the final route callback until the skip() method is implemented. If I understand you correctly, all my app.param$(\"id\", callback) methods as well as authenticate would want to call skip() then instead of next as I only want my ScenariosController.show callback to be executed once ALL the middleware has finished, correct?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/1044664/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/1044687",
    "html_url": "https://github.com/expressjs/express/issues/638#issuecomment-1044687",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/638",
    "id": 1044687,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDQ2ODc=",
    "user": {
      "login": "tj",
      "id": 25254,
      "node_id": "MDQ6VXNlcjI1MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tj",
      "html_url": "https://github.com/tj",
      "followers_url": "https://api.github.com/users/tj/followers",
      "following_url": "https://api.github.com/users/tj/following{/other_user}",
      "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
      "organizations_url": "https://api.github.com/users/tj/orgs",
      "repos_url": "https://api.github.com/users/tj/repos",
      "events_url": "https://api.github.com/users/tj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-22T17:29:41Z",
    "updated_at": "2011-04-22T17:29:41Z",
    "author_association": "MEMBER",
    "body": "nope skip() would bypass the remaining route-specific middleware _and_ the route itself, which is sometimes useful for pre-conditions that are not necessarily errors such as failing to load a user\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/1044687/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/1044802",
    "html_url": "https://github.com/expressjs/express/issues/638#issuecomment-1044802",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/638",
    "id": 1044802,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDQ4MDI=",
    "user": {
      "login": "mhemesath",
      "id": 225765,
      "node_id": "MDQ6VXNlcjIyNTc2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/225765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mhemesath",
      "html_url": "https://github.com/mhemesath",
      "followers_url": "https://api.github.com/users/mhemesath/followers",
      "following_url": "https://api.github.com/users/mhemesath/following{/other_user}",
      "gists_url": "https://api.github.com/users/mhemesath/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mhemesath/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mhemesath/subscriptions",
      "organizations_url": "https://api.github.com/users/mhemesath/orgs",
      "repos_url": "https://api.github.com/users/mhemesath/repos",
      "events_url": "https://api.github.com/users/mhemesath/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mhemesath/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-04-22T17:56:24Z",
    "updated_at": "2011-04-22T17:56:24Z",
    "author_association": "NONE",
    "body": "Ah, I get it now, thanks for the help and fast feedback. I'm lovin express!\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/1044802/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]