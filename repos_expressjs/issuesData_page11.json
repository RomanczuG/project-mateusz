[
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3976",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3976/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3976/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3976/events",
    "html_url": "https://github.com/expressjs/express/issues/3976",
    "id": 452023134,
    "node_id": "MDU6SXNzdWU0NTIwMjMxMzQ=",
    "number": 3976,
    "title": "setting views option as an array of paths gives an error",
    "user": {
      "login": "Jusys",
      "id": 30110941,
      "node_id": "MDQ6VXNlcjMwMTEwOTQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/30110941?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Jusys",
      "html_url": "https://github.com/Jusys",
      "followers_url": "https://api.github.com/users/Jusys/followers",
      "following_url": "https://api.github.com/users/Jusys/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jusys/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Jusys/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jusys/subscriptions",
      "organizations_url": "https://api.github.com/users/Jusys/orgs",
      "repos_url": "https://api.github.com/users/Jusys/repos",
      "events_url": "https://api.github.com/users/Jusys/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Jusys/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-06-04T14:15:25Z",
    "updated_at": "2019-06-05T06:45:41Z",
    "closed_at": "2019-06-04T14:30:51Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Using node v12.2.0\r\nUsing express v4.17.1\r\nUsing express-handlebars v3.0.2\r\nUsing Windows 7\r\n\r\nDocumentation clearly states, that:\r\n![image](https://user-images.githubusercontent.com/30110941/58885770-7206de00-86eb-11e9-81b1-481bc3267dc6.png)\r\n\r\nMy code is like:\r\n`let _views = ['some-path/views1']`\r\n`_ex.set('views', _views)`\r\n\r\nBut when I try to use an array of view paths I get an error:\r\n```\r\nTypeError [ERR_INVALID_ARG_TYPE]: The \"from\" argument must be of type string. Received type object\r\n    at validateString (internal/validators.js:107:11)\r\n    at Object.relative (path.js:434:5)\r\n    at ExpressHandlebars.renderView (c:\\my-project\\node_modules\\express-handlebars\\lib\\express-handlebars.js:193:43)\r\n    at View.render (c:\\my-project\\node_modules\\express\\lib\\view.js:135:8)\r\n    at tryRender (c:\\my-project\\node_modules\\express\\lib\\application.js:640:10)\r\n    at Function.render (c:\\my-project\\node_modules\\express\\lib\\application.js:592:3)\r\n    at ServerResponse.render (c:\\my-project\\node_modules\\express\\lib\\response.js:1012:7)\r\n    at c:\\my-project\\web\\views\\main-default.js:6:10\r\n    at Layer.handle [as handle_request] (c:\\my-project\\node_modules\\express\\lib\\router\\layer.js:95:5)\r\n    at next (c:\\my-project\\node_modules\\express\\lib\\router\\route.js:137:13)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3976/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3976/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3975",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3975/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3975/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3975/events",
    "html_url": "https://github.com/expressjs/express/issues/3975",
    "id": 451660180,
    "node_id": "MDU6SXNzdWU0NTE2NjAxODA=",
    "number": 3975,
    "title": "Cannot PUT",
    "user": {
      "login": "dcromster",
      "id": 1893365,
      "node_id": "MDQ6VXNlcjE4OTMzNjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1893365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dcromster",
      "html_url": "https://github.com/dcromster",
      "followers_url": "https://api.github.com/users/dcromster/followers",
      "following_url": "https://api.github.com/users/dcromster/following{/other_user}",
      "gists_url": "https://api.github.com/users/dcromster/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dcromster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dcromster/subscriptions",
      "organizations_url": "https://api.github.com/users/dcromster/orgs",
      "repos_url": "https://api.github.com/users/dcromster/repos",
      "events_url": "https://api.github.com/users/dcromster/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dcromster/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-06-03T19:53:36Z",
    "updated_at": "2019-06-04T00:04:31Z",
    "closed_at": "2019-06-04T00:04:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello!\r\n\r\nI have PUT request: /ap/route/{\"id\": \"64\", \"method\":\"GET\", \"path\" :\"'/abc\"}\r\n( I also tried POST)\r\nAnd got error: \"Cannot PUT ...\"\r\n\r\nIf I set the parameter \"path\" to blank or without a slash - hve no error. So problem in \"/\". If i try \"path\": \"\\/\" got same error.\r\n\r\nIs this error in express? How I can set \"path\" with slashes?\r\n\r\nExpress version: 4.17.0\r\nNodeJs: 8.10.0",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3975/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3975/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3973",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3973/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3973/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3973/events",
    "html_url": "https://github.com/expressjs/express/pull/3973",
    "id": 450950298,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg0MTY4MTY1",
    "number": 3973,
    "title": "Add DT typing support",
    "user": {
      "login": "craben20",
      "id": 44365857,
      "node_id": "MDQ6VXNlcjQ0MzY1ODU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/44365857?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/craben20",
      "html_url": "https://github.com/craben20",
      "followers_url": "https://api.github.com/users/craben20/followers",
      "following_url": "https://api.github.com/users/craben20/following{/other_user}",
      "gists_url": "https://api.github.com/users/craben20/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/craben20/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/craben20/subscriptions",
      "organizations_url": "https://api.github.com/users/craben20/orgs",
      "repos_url": "https://api.github.com/users/craben20/repos",
      "events_url": "https://api.github.com/users/craben20/events{/privacy}",
      "received_events_url": "https://api.github.com/users/craben20/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 55587817,
        "node_id": "MDU6TGFiZWw1NTU4NzgxNw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/needs%20tests",
        "name": "needs tests",
        "color": "e11d21",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2019-05-31T19:33:27Z",
    "updated_at": "2019-05-31T20:54:07Z",
    "closed_at": "2019-05-31T20:34:02Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3973",
      "html_url": "https://github.com/expressjs/express/pull/3973",
      "diff_url": "https://github.com/expressjs/express/pull/3973.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3973.patch",
      "merged_at": null
    },
    "body": "Typing for Express should be granted by the DefinitelyTyped package, if not locally maintained.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3973/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3973/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3972",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3972/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3972/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3972/events",
    "html_url": "https://github.com/expressjs/express/issues/3972",
    "id": 450917720,
    "node_id": "MDU6SXNzdWU0NTA5MTc3MjA=",
    "number": 3972,
    "title": "Express should include typings for TypeScript",
    "user": {
      "login": "craben20",
      "id": 44365857,
      "node_id": "MDQ6VXNlcjQ0MzY1ODU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/44365857?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/craben20",
      "html_url": "https://github.com/craben20",
      "followers_url": "https://api.github.com/users/craben20/followers",
      "following_url": "https://api.github.com/users/craben20/following{/other_user}",
      "gists_url": "https://api.github.com/users/craben20/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/craben20/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/craben20/subscriptions",
      "organizations_url": "https://api.github.com/users/craben20/orgs",
      "repos_url": "https://api.github.com/users/craben20/repos",
      "events_url": "https://api.github.com/users/craben20/events{/privacy}",
      "received_events_url": "https://api.github.com/users/craben20/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-05-31T18:04:19Z",
    "updated_at": "2019-05-31T18:36:08Z",
    "closed_at": "2019-05-31T18:35:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Express is an incredibly popular library in the Node development community, so I was surprised when I had to `npm install @types/express --save-dev` to receive (slightly outdated) typing support.\r\n\r\nThe development team should consider adding types natively (rewrite in TypeScript? For a library this size - shouldn't be a huge issue).\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3972/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3972/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3971",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3971/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3971/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3971/events",
    "html_url": "https://github.com/expressjs/express/issues/3971",
    "id": 450527082,
    "node_id": "MDU6SXNzdWU0NTA1MjcwODI=",
    "number": 3971,
    "title": "res.download not respecting filename",
    "user": {
      "login": "andrew-caines",
      "id": 12756948,
      "node_id": "MDQ6VXNlcjEyNzU2OTQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/12756948?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrew-caines",
      "html_url": "https://github.com/andrew-caines",
      "followers_url": "https://api.github.com/users/andrew-caines/followers",
      "following_url": "https://api.github.com/users/andrew-caines/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrew-caines/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrew-caines/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrew-caines/subscriptions",
      "organizations_url": "https://api.github.com/users/andrew-caines/orgs",
      "repos_url": "https://api.github.com/users/andrew-caines/repos",
      "events_url": "https://api.github.com/users/andrew-caines/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrew-caines/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-05-30T22:04:52Z",
    "updated_at": "2019-05-31T02:32:59Z",
    "closed_at": "2019-05-31T02:32:13Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Good afternoon,\r\n\r\nI am creating a file downloader, when the file it uploaded, its created with a random filename, when the file is to be downloaded, the uuid is used in route param and the file gets downloaded. Whats wierd is, the file downloads without issue, however it will not use the filename i am providing.\r\n```javascript\r\nrouter.get('/download/:uuid', async function (req, res) {\r\n    const uuid = req.params.uuid;\r\n    if (uuid === undefined) {\r\n        res.send({ success: false, message: 'You must supply a file you wish to download' });\r\n    }\r\n\r\n    const db_results = await knex\r\n        .from('fileMeta')\r\n        .where('uuid', uuid)\r\n        .select('original_file_name', 'download_count');\r\n\r\n    const { download_count, original_file_name } = db_results[0];\r\n    const filePath = `${directoryPath}\\\\${uuid}`;\r\n\r\n    const filename = `\"${original_file_name}\"`;\r\n    res.download(filePath, filename, async (err) => {\r\n        const newCount = download_count + 1;\r\n        await knex('fileMeta')\r\n            .where('uuid', uuid)\r\n            .update({ 'download_count': newCount });\r\n    });\r\n});\r\n```\r\nWhen I log the values for filename and path, they both work. They both look correct, I added the \" \" quotes around the filename due to something i saw on a another post.\r\n\r\n![expressDownload](https://user-images.githubusercontent.com/12756948/58667850-6a62c600-82f4-11e9-8043-080d95558811.png)\r\n\r\nThese are the various downloads, all not respecting the name, and even if I put in\r\n```javascript\r\nres.download(filePath, \"test.txt\", async (err) => {\r\n        const newCount = download_count + 1;\r\n        await knex('fileMeta')\r\n            .where('uuid', uuid)\r\n            .update({ 'download_count': newCount });\r\n    });\r\n```\r\nIt still uses the file name that is found inside the filePath. \r\nIs this broken, or am I missing something?\r\n\r\nThank you,\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3971/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3971/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3970",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3970/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3970/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3970/events",
    "html_url": "https://github.com/expressjs/express/issues/3970",
    "id": 449310126,
    "node_id": "MDU6SXNzdWU0NDkzMTAxMjY=",
    "number": 3970,
    "title": "ERR_SPDY_PROTOCOL_ERROR when using custom error handler",
    "user": {
      "login": "tbell511",
      "id": 25237806,
      "node_id": "MDQ6VXNlcjI1MjM3ODA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/25237806?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tbell511",
      "html_url": "https://github.com/tbell511",
      "followers_url": "https://api.github.com/users/tbell511/followers",
      "following_url": "https://api.github.com/users/tbell511/following{/other_user}",
      "gists_url": "https://api.github.com/users/tbell511/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tbell511/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tbell511/subscriptions",
      "organizations_url": "https://api.github.com/users/tbell511/orgs",
      "repos_url": "https://api.github.com/users/tbell511/repos",
      "events_url": "https://api.github.com/users/tbell511/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tbell511/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-05-28T14:40:48Z",
    "updated_at": "2019-05-28T14:44:33Z",
    "closed_at": "2019-05-28T14:44:33Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "A few weeks ago I refactored my application to use a custom error handler instead of handling errors in the routes.\r\n\r\nI added this below all my routers.\r\n```\r\napp.use(function(err,req,res,next) {\r\n    console.log(err)\r\n    if (res.headersSent === false) {\r\n        res.sendStatus(400)\r\n    }\r\n   next(err)\r\n})\r\n```\r\n\r\nIt allows me to use next(err) in my routes and if a response hasn't been sent yet, return a 400 status code.\r\n\r\n```\r\napp.post(\"/do-something\", function(req,res,next) {\r\n\r\n    doSomething.test().then(() => {\r\n        return res.sendStatus(200)\r\n    }).catch((err) => {\r\n        return next(err)\r\n    })\r\n\r\n })\r\n```\r\n\r\nThis all worked great when I initially tested it and is currently working in production.  However I am getting some odd behavior in development now.\r\n\r\nAnytime that custom error handler is used I get a `net::ERR_SPDY_PROTOCOL_ERROR 400`  in the chrome console with an empty response (empty response breaks my app).\r\n\r\nHowever, sending a 400 status code within the route itself works fine.\r\n\r\n```\r\napp.post(\"/do-something\", function(req,res,next) {\r\n\r\n    doSomething.test().then(() => {\r\n        return res.sendStatus(200)\r\n    }).catch((err) => {\r\n        return res.sendStatus(400)\r\n    })\r\n\r\n })\r\n```\r\n\r\nRemoving the next(err) from the custom error handler also fixes the problem. \r\n\r\n```\r\napp.use(function(err,req,res,next) {\r\n    console.log(err)\r\n    if (res.headersSent === false) {\r\n        res.sendStatus(400)\r\n    }\r\n})\r\n```\r\n\r\nI can't find much info on what could be causing this.... I have tried on 2 different machines.  Please let me know if more details are needed. I am happy to add the response from chrome, etc. \r\n\r\nThanks!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3970/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3970/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3969",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3969/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3969/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3969/events",
    "html_url": "https://github.com/expressjs/express/issues/3969",
    "id": 448663814,
    "node_id": "MDU6SXNzdWU0NDg2NjM4MTQ=",
    "number": 3969,
    "title": "Error handle not called in array middleware",
    "user": {
      "login": "pirey",
      "id": 10344542,
      "node_id": "MDQ6VXNlcjEwMzQ0NTQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/10344542?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pirey",
      "html_url": "https://github.com/pirey",
      "followers_url": "https://api.github.com/users/pirey/followers",
      "following_url": "https://api.github.com/users/pirey/following{/other_user}",
      "gists_url": "https://api.github.com/users/pirey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pirey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pirey/subscriptions",
      "organizations_url": "https://api.github.com/users/pirey/orgs",
      "repos_url": "https://api.github.com/users/pirey/repos",
      "events_url": "https://api.github.com/users/pirey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pirey/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2019-05-27T04:46:59Z",
    "updated_at": "2019-05-28T02:56:17Z",
    "closed_at": "2019-05-28T02:49:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm trying to write custom middleware to handle jwt auth using [express-jwt](https://github.com/auth0/express-jwt) middleware.\r\n\r\nwhat i'm trying to do is to write custom error handling when the token not provided, and also store user data in req if there's valid token.\r\n\r\n```js\r\nfunction myHandler(err, req, res, next) {\r\n  // this does not fire  \r\n  if (err) {\r\n      return res.json({ message: 'require auth error', err })\r\n    }\r\n\r\n    if (!req.jwt.userId) {\r\n      return res.status(401).json({ message: 'Invalid token, missing user id' })\r\n    }\r\n\r\n    try {\r\n      req.customer = await  customer.getByUserId(req.jwt.userId)\r\n      next()\r\n    } catch (error) {\r\n      res.status(404).json({ message: error.message })\r\n    }\r\n  }\r\n}\r\n\r\nfunction myCustomMiddleware() {\r\n  const jwtMiddleware = jwt({\r\n    secret: 'secret',\r\n    requestProperty: 'jwt'\r\n  })\r\n\r\n  return [jwtMiddleware, myHandler]\r\n}\r\n\r\n```\r\n\r\nin my code above, `myHandler` does not fired.\r\n\r\nhowever when i change the function signature to \r\n`function myHandler(req, res, next) {` without the `err` it gets called.\r\n\r\nwhy is this?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3969/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3969/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3968",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3968/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3968/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3968/events",
    "html_url": "https://github.com/expressjs/express/issues/3968",
    "id": 447645163,
    "node_id": "MDU6SXNzdWU0NDc2NDUxNjM=",
    "number": 3968,
    "title": "4.17.0 breaks contract of `response.status`",
    "user": {
      "login": "emiln",
      "id": 1078925,
      "node_id": "MDQ6VXNlcjEwNzg5MjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1078925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/emiln",
      "html_url": "https://github.com/emiln",
      "followers_url": "https://api.github.com/users/emiln/followers",
      "following_url": "https://api.github.com/users/emiln/following{/other_user}",
      "gists_url": "https://api.github.com/users/emiln/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/emiln/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/emiln/subscriptions",
      "organizations_url": "https://api.github.com/users/emiln/orgs",
      "repos_url": "https://api.github.com/users/emiln/repos",
      "events_url": "https://api.github.com/users/emiln/events{/privacy}",
      "received_events_url": "https://api.github.com/users/emiln/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 8497,
        "node_id": "MDU6TGFiZWw4NDk3",
        "url": "https://api.github.com/repos/expressjs/express/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true,
        "description": null
      },
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 14,
    "created_at": "2019-05-23T12:53:02Z",
    "updated_at": "2019-05-25T22:15:56Z",
    "closed_at": "2019-05-25T22:15:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "From the release notes of 4.17.0:\r\n\r\n> Improve error message for `null`/`undefined` to `res.status`\r\n\r\nThis implies that it's a matter of how the error is communicated, but the 4.17.0 release actually _makes it an error_, which it wasn't before.\r\n\r\nIf any application calls `response.status(null)` or `response.status(undefined)`, this will now break their app, where before it would work just fine.\r\n\r\nParticularly, some apps I've worked on set `response.status(undefined)` early in the middleware chain so they're able to decide, late in the middleware chain, whether any decision was made by middlewares about which status code to respond.\r\n\r\nAll these apps are broken with 4.17.0",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3968/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3968/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3967",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3967/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3967/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3967/events",
    "html_url": "https://github.com/expressjs/express/pull/3967",
    "id": 447115682,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjgxMTc3NTYx",
    "number": 3967,
    "title": "resolve mime.lookup is not a function error",
    "user": {
      "login": "gtzilla",
      "id": 185538,
      "node_id": "MDQ6VXNlcjE4NTUzOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/185538?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gtzilla",
      "html_url": "https://github.com/gtzilla",
      "followers_url": "https://api.github.com/users/gtzilla/followers",
      "following_url": "https://api.github.com/users/gtzilla/following{/other_user}",
      "gists_url": "https://api.github.com/users/gtzilla/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gtzilla/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gtzilla/subscriptions",
      "organizations_url": "https://api.github.com/users/gtzilla/orgs",
      "repos_url": "https://api.github.com/users/gtzilla/repos",
      "events_url": "https://api.github.com/users/gtzilla/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gtzilla/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-05-22T12:46:04Z",
    "updated_at": "2023-04-23T17:04:18Z",
    "closed_at": "2019-05-22T15:26:27Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3967",
      "html_url": "https://github.com/expressjs/express/pull/3967",
      "diff_url": "https://github.com/expressjs/express/pull/3967.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3967.patch",
      "merged_at": null
    },
    "body": "Dependency hell? Getting an error where mime is calling `.lookup` but the version of `mime` requires `getType`. Switching to `mime-types` appears to be a drop-in replacement. Though, it may be possible to simply upgrade all references from `.lookup` to `.getType` \r\n\r\nInstalled via `yarn add express --flat` though I don't think that matters. Git blame for usage of `send.mime` is from 2015.  Since 2017 the 'fix' for this is either to rollback to pre-version 2 for `mime` or, potentially, use `mime-types` As in ticket https://github.com/lorenwest/monitor-dashboard/issues/41 \r\n\r\n\r\n1. https://github.com/jshttp/mime-types\r\n2. https://github.com/broofa/node-mime#readme\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3967/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3967/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3966",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3966/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3966/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3966/events",
    "html_url": "https://github.com/expressjs/express/issues/3966",
    "id": 446110434,
    "node_id": "MDU6SXNzdWU0NDYxMTA0MzQ=",
    "number": 3966,
    "title": "why there is no flag for typescript?",
    "user": {
      "login": "WINDPochima",
      "id": 29821414,
      "node_id": "MDQ6VXNlcjI5ODIxNDE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/29821414?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WINDPochima",
      "html_url": "https://github.com/WINDPochima",
      "followers_url": "https://api.github.com/users/WINDPochima/followers",
      "following_url": "https://api.github.com/users/WINDPochima/following{/other_user}",
      "gists_url": "https://api.github.com/users/WINDPochima/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WINDPochima/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WINDPochima/subscriptions",
      "organizations_url": "https://api.github.com/users/WINDPochima/orgs",
      "repos_url": "https://api.github.com/users/WINDPochima/repos",
      "events_url": "https://api.github.com/users/WINDPochima/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WINDPochima/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-05-20T13:12:56Z",
    "updated_at": "2019-05-20T18:50:18Z",
    "closed_at": "2019-05-20T13:15:14Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "As we know typescript is a very popular language these days. why don't you rewrite it with that or making a flag for creating a new express app by typescript for app generator??",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3966/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 1,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3966/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3965",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3965/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3965/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3965/events",
    "html_url": "https://github.com/expressjs/express/issues/3965",
    "id": 445861558,
    "node_id": "MDU6SXNzdWU0NDU4NjE1NTg=",
    "number": 3965,
    "title": "help",
    "user": {
      "login": "Roki100",
      "id": 35699619,
      "node_id": "MDQ6VXNlcjM1Njk5NjE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/35699619?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Roki100",
      "html_url": "https://github.com/Roki100",
      "followers_url": "https://api.github.com/users/Roki100/followers",
      "following_url": "https://api.github.com/users/Roki100/following{/other_user}",
      "gists_url": "https://api.github.com/users/Roki100/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Roki100/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Roki100/subscriptions",
      "organizations_url": "https://api.github.com/users/Roki100/orgs",
      "repos_url": "https://api.github.com/users/Roki100/repos",
      "events_url": "https://api.github.com/users/Roki100/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Roki100/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-05-19T20:37:07Z",
    "updated_at": "2019-05-19T20:50:40Z",
    "closed_at": "2019-05-19T20:50:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "i have image generator im sending them by `res.end(new Buffer(image, \"binary\"));`\r\neverything is good in browser, but it doesnt embed in discord (discordapp.com), any ideas how can i fix it to get discord embed it?\r\nthanks in advance",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3965/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3965/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3964",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3964/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3964/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3964/events",
    "html_url": "https://github.com/expressjs/express/issues/3964",
    "id": 445769418,
    "node_id": "MDU6SXNzdWU0NDU3Njk0MTg=",
    "number": 3964,
    "title": "[Performance Investigation] Compare es5 and es2015",
    "user": {
      "login": "hiroppy",
      "id": 3367801,
      "node_id": "MDQ6VXNlcjMzNjc4MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3367801?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hiroppy",
      "html_url": "https://github.com/hiroppy",
      "followers_url": "https://api.github.com/users/hiroppy/followers",
      "following_url": "https://api.github.com/users/hiroppy/following{/other_user}",
      "gists_url": "https://api.github.com/users/hiroppy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hiroppy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hiroppy/subscriptions",
      "organizations_url": "https://api.github.com/users/hiroppy/orgs",
      "repos_url": "https://api.github.com/users/hiroppy/repos",
      "events_url": "https://api.github.com/users/hiroppy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hiroppy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2019-05-19T01:22:55Z",
    "updated_at": "2020-04-06T03:04:13Z",
    "closed_at": "2020-04-06T03:04:13Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "First of all, thank you for maintaining Express.\r\n\r\nThis issue is just investigation, so please close it freely.\r\nCurrently, Express is written in es5, but I thought to want to know the performance if Express is rewritten in es2015. \r\nI thought that it would be good if it would be helpful for your future plans, so I submitted this issue.\r\n\r\n## Condition\r\n\r\n- just used `const`, `let`, arrow functions, template literals, and class, and didn't use Promise\r\n- Node.js v6 or lower is out of scope because it is End-of-Life\r\n  - https://github.com/nodejs/Release#release-schedule\r\n- ran benchmark three times and calculated the average value\r\n\r\ncode: [ad1f46dbc103fa1ec39d748de9f7ff6d2a317623](https://github.com/hiroppy/express/commit/ad1f46dbc103fa1ec39d748de9f7ff6d2a317623)\r\n\r\n## Result\r\n\r\n|Node version|branch|1(middleware)|5|10|15|20|30|50|100|\r\n|--|--|--|--|--|--|--|--|--|--|\r\n|12.2.0|master|**9146.71**|**9214.94**|**9272.59**|8011.20|8433.19|**8617.55**|7795.66|7037.85|\r\n|12.2.0|es2015|8627.45|8714.08|8679.19|**8981.91**|**8666.40**|8123.18|**8055.69**|**7547.16**|\r\n||\r\n|10.15.3|master|**9507.00**|7561.25|**7933.38**|8440.16|8390.18|7037.11|7939.60|**6915.03**|\r\n|10.15.3|es2015|9052.08|**7785.81**|7438.94|**8600.42**|**8637.91**|**8459.80**|**8188.28**|6515.97|\r\n||\r\n|8.16.0|master|7465.29|7534.43|**8374.32**|6821.92|**7851.89**|7049.46|6393.43|5233.66|\r\n|8.16.0|es2015|**8386.78**|**8291.34**|7935.76|**8146.73**|7290.05|**7605.94**|**7106.32**|**5665.79**|\r\n\r\nSee [gist](https://gist.github.com/hiroppy/eb388578c16558d81d06b9885e0e9b7d) for more detail.\r\n\r\nI thought the syntax of es2015 may be better for future versions of Node.js.\r\nIn addition, Node.js core has already used es2015 or more, and also uses async / await.\r\nIf you want to support Node.js v6 or less even in the next version for backward compatibility, I recommend using babel or typescript.\r\n\r\n---\r\n\r\nI hope that this result is useful for something.\r\nIf you want to use core code written in es2015, please tell me. Of course, I would like to cooperate:) \r\n\r\nThanks.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3964/reactions",
      "total_count": 7,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 7,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3964/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3963",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3963/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3963/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3963/events",
    "html_url": "https://github.com/expressjs/express/issues/3963",
    "id": 445450672,
    "node_id": "MDU6SXNzdWU0NDU0NTA2NzI=",
    "number": 3963,
    "title": "Why package-lock is not in source control?",
    "user": {
      "login": "buccfer",
      "id": 12662582,
      "node_id": "MDQ6VXNlcjEyNjYyNTgy",
      "avatar_url": "https://avatars.githubusercontent.com/u/12662582?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/buccfer",
      "html_url": "https://github.com/buccfer",
      "followers_url": "https://api.github.com/users/buccfer/followers",
      "following_url": "https://api.github.com/users/buccfer/following{/other_user}",
      "gists_url": "https://api.github.com/users/buccfer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/buccfer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/buccfer/subscriptions",
      "organizations_url": "https://api.github.com/users/buccfer/orgs",
      "repos_url": "https://api.github.com/users/buccfer/repos",
      "events_url": "https://api.github.com/users/buccfer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/buccfer/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-05-17T13:46:17Z",
    "updated_at": "2019-05-17T13:50:55Z",
    "closed_at": "2019-05-17T13:48:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "https://github.com/expressjs/express/blob/10c7756764fbe969b307b15a72fd074479c00f8d/.gitignore#L18\r\n\r\nAccording to NPM docs:\r\n\r\n> This file is intended to be committed into source repositories.\r\n\r\nWhich doesn't mean that it should be published to npm:\r\n\r\n> One key detail about package-lock.json is that it cannot be published.\r\n\r\nIs there any reason for lock file to be ignored I'm missing?\r\n\r\nThanks, and keep up with the great work.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3963/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 1,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3963/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3962",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3962/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3962/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3962/events",
    "html_url": "https://github.com/expressjs/express/issues/3962",
    "id": 445353150,
    "node_id": "MDU6SXNzdWU0NDUzNTMxNTA=",
    "number": 3962,
    "title": "trust-proxy function not called?",
    "user": {
      "login": "Ionaru",
      "id": 3472373,
      "node_id": "MDQ6VXNlcjM0NzIzNzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3472373?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ionaru",
      "html_url": "https://github.com/Ionaru",
      "followers_url": "https://api.github.com/users/Ionaru/followers",
      "following_url": "https://api.github.com/users/Ionaru/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ionaru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ionaru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ionaru/subscriptions",
      "organizations_url": "https://api.github.com/users/Ionaru/orgs",
      "repos_url": "https://api.github.com/users/Ionaru/repos",
      "events_url": "https://api.github.com/users/Ionaru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ionaru/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-05-17T09:36:34Z",
    "updated_at": "2019-05-17T19:52:04Z",
    "closed_at": "2019-05-17T19:52:03Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "My Express server is running in a docker container with an nginx docker container proxying request to it.\r\n\r\n```\r\nRequest -> (nginx) -> (express)\r\n```\r\n\r\nI've been trying to set up Express so it only trusts the one nginx proxy, but so far I've not been able to get the `trust-proxy` setting to work.\r\nThe function I pass to the `trust-proxy` setting seems to never get called in my application.\r\n\r\n```ts\r\napp.set('trust proxy', (ip: string) => {\r\n    console.error(`PROXY ADDR: ${ip}`);\r\n    return false;\r\n});\r\n```\r\nWith this configuration, the `console.error` never appears in the logs.\r\n\r\nAm I doing something wrong here with my configuration, or is `trust proxy` not working as intended?\r\n\r\nMinimal reproduction:\r\n```ts\r\nconst app = express();\r\n\r\napp.set('trust proxy', (ip: string) => {\r\n    console.error(`PROXY ADDR: ${ip}`);\r\n    return false;\r\n});\r\n\r\napp.use('*', (_req: express.Request, res: express.Response) => {\r\n    return res.send('Hi');\r\n});\r\n\r\nconst webServer = createServer(app);\r\nwebServer.listen(3731);\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3962/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3962/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3961",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3961/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3961/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3961/events",
    "html_url": "https://github.com/expressjs/express/issues/3961",
    "id": 445001090,
    "node_id": "MDU6SXNzdWU0NDUwMDEwOTA=",
    "number": 3961,
    "title": "Charset in JSON content-type header causing Chrome CORB warning",
    "user": {
      "login": "jkytomaki",
      "id": 6197808,
      "node_id": "MDQ6VXNlcjYxOTc4MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6197808?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jkytomaki",
      "html_url": "https://github.com/jkytomaki",
      "followers_url": "https://api.github.com/users/jkytomaki/followers",
      "following_url": "https://api.github.com/users/jkytomaki/following{/other_user}",
      "gists_url": "https://api.github.com/users/jkytomaki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jkytomaki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jkytomaki/subscriptions",
      "organizations_url": "https://api.github.com/users/jkytomaki/orgs",
      "repos_url": "https://api.github.com/users/jkytomaki/repos",
      "events_url": "https://api.github.com/users/jkytomaki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jkytomaki/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2019-05-16T14:51:00Z",
    "updated_at": "2019-05-18T08:39:30Z",
    "closed_at": "2019-05-17T15:47:10Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "It looks like new versions of Chrome are logging Cross-Origin Read Blocking (CORB) warnings into the console in the following situation:\r\n\r\n- making a post request to a resource returning JSON \r\n- the response having a `X-Content-Type-Options nosniff` header\r\n- the content-type header having a value `application/json; charset=utf-8`\r\n\r\nAccording to [this](https://stackoverflow.com/a/55658171/2902722) Stack Overflow answer removing the `charset=utf-8` from the end of the content-type fixes the warning, so Chrome seems to treat this as an invalid content-type.\r\n\r\nThere are some old closed issues about express adding `charset=utf-8` to the end of the content type header and as far as I could see there is currently no way to remove the charset from the header using express. Is it possible to re-evaluate this?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3961/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3961/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3960",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3960/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3960/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3960/events",
    "html_url": "https://github.com/expressjs/express/issues/3960",
    "id": 444589364,
    "node_id": "MDU6SXNzdWU0NDQ1ODkzNjQ=",
    "number": 3960,
    "title": "express listen to a PORT already in use does not throw EADDRINUSE error on first time",
    "user": {
      "login": "cjzcpsyx",
      "id": 3888721,
      "node_id": "MDQ6VXNlcjM4ODg3MjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3888721?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cjzcpsyx",
      "html_url": "https://github.com/cjzcpsyx",
      "followers_url": "https://api.github.com/users/cjzcpsyx/followers",
      "following_url": "https://api.github.com/users/cjzcpsyx/following{/other_user}",
      "gists_url": "https://api.github.com/users/cjzcpsyx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cjzcpsyx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cjzcpsyx/subscriptions",
      "organizations_url": "https://api.github.com/users/cjzcpsyx/orgs",
      "repos_url": "https://api.github.com/users/cjzcpsyx/repos",
      "events_url": "https://api.github.com/users/cjzcpsyx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cjzcpsyx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-05-15T18:45:36Z",
    "updated_at": "2019-05-15T18:50:00Z",
    "closed_at": "2019-05-15T18:49:40Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "for a given PORT 3000, say there is already a server running and listening on 3000 (I'm testing with python SimpleHTTPServer)\r\nthen create an express app and listen to 3000, this will not give EADDRINUSE error\r\n\r\nHOWEVER, if we create a express server on 3000 first, then create another express server on 3000, it will throw EADDRINUSE error\r\n\r\nis this expected?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3960/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3960/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3959",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3959/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3959/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3959/events",
    "html_url": "https://github.com/expressjs/express/issues/3959",
    "id": 444452667,
    "node_id": "MDU6SXNzdWU0NDQ0NTI2Njc=",
    "number": 3959,
    "title": "Downloaded file has underscores prefixed ans suffixed",
    "user": {
      "login": "omerts",
      "id": 4996164,
      "node_id": "MDQ6VXNlcjQ5OTYxNjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4996164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/omerts",
      "html_url": "https://github.com/omerts",
      "followers_url": "https://api.github.com/users/omerts/followers",
      "following_url": "https://api.github.com/users/omerts/following{/other_user}",
      "gists_url": "https://api.github.com/users/omerts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/omerts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/omerts/subscriptions",
      "organizations_url": "https://api.github.com/users/omerts/orgs",
      "repos_url": "https://api.github.com/users/omerts/repos",
      "events_url": "https://api.github.com/users/omerts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/omerts/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-05-15T13:53:43Z",
    "updated_at": "2019-05-15T14:01:44Z",
    "closed_at": "2019-05-15T13:57:06Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hey,\r\n\r\nThanks for the great lib. \r\nThe content-disposition package adds quotes around the filename, causing chrome to replace the quotes with underscores, so:\r\n![image](https://user-images.githubusercontent.com/4996164/57775861-b32c5380-7726-11e9-8972-3f09373ecf5b.png)\r\n\r\nIs actually downloaded as:\r\n![image](https://user-images.githubusercontent.com/4996164/57775886-c0e1d900-7726-11e9-8c8b-effd8b919695.png)\r\n\r\nIf I manually set the header, without the quotes:\r\n![image](https://user-images.githubusercontent.com/4996164/57780878-cc86cd00-7731-11e9-8ee2-c9879a6e1c93.png)\r\n\r\nFile is download as expected:\r\n![image](https://user-images.githubusercontent.com/4996164/57780902-d7d9f880-7731-11e9-86cf-d81a5e5318d1.png)\r\n\r\n\r\nI know this is an issue for the content-disposition package, but this is also an issue with the current usage of res.download. ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3959/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3959/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3958",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3958/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3958/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3958/events",
    "html_url": "https://github.com/expressjs/express/issues/3958",
    "id": 444222837,
    "node_id": "MDU6SXNzdWU0NDQyMjI4Mzc=",
    "number": 3958,
    "title": "Allow response cookie sameSite value \"none\"",
    "user": {
      "login": "misschak",
      "id": 10271023,
      "node_id": "MDQ6VXNlcjEwMjcxMDIz",
      "avatar_url": "https://avatars.githubusercontent.com/u/10271023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/misschak",
      "html_url": "https://github.com/misschak",
      "followers_url": "https://api.github.com/users/misschak/followers",
      "following_url": "https://api.github.com/users/misschak/following{/other_user}",
      "gists_url": "https://api.github.com/users/misschak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/misschak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/misschak/subscriptions",
      "organizations_url": "https://api.github.com/users/misschak/orgs",
      "repos_url": "https://api.github.com/users/misschak/repos",
      "events_url": "https://api.github.com/users/misschak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/misschak/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 133578716,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/deps",
        "name": "deps",
        "color": "444444",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/17",
      "html_url": "https://github.com/expressjs/express/milestone/17",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/17/labels",
      "id": 3066819,
      "node_id": "MDk6TWlsZXN0b25lMzA2NjgxOQ==",
      "number": 17,
      "title": "4.17",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 15,
      "state": "closed",
      "created_at": "2018-01-26T16:25:16Z",
      "updated_at": "2019-05-17T01:58:27Z",
      "due_on": null,
      "closed_at": "2019-05-17T01:58:27Z"
    },
    "comments": 3,
    "created_at": "2019-05-15T03:48:16Z",
    "updated_at": "2019-05-17T00:51:36Z",
    "closed_at": "2019-05-17T00:51:36Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "https://web.dev/samesite-cookies-explained\r\n\r\n> Finally there is the option of not specifying the value which has previously been the way of implicitly stating that you want the cookie to be sent in all contexts. In the latest draft of RFC6265bis this is being made explicit by introducing a new value of SameSite=None. This means you can use None to clearly communicate you intentionally want the cookie sent in a third-party context.\r\n\r\nCurrently setting sameSite to none will produce\r\n`TypeError: option sameSite is invalid`",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3958/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3958/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3957",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3957/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3957/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3957/events",
    "html_url": "https://github.com/expressjs/express/issues/3957",
    "id": 444204696,
    "node_id": "MDU6SXNzdWU0NDQyMDQ2OTY=",
    "number": 3957,
    "title": "Routing Issue",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2019-05-15T02:18:52Z",
    "updated_at": "2019-05-15T02:27:59Z",
    "closed_at": "2019-05-15T02:27:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello,\r\n\r\nI've been using the Router function for a bit now and have an endpoint that does two different functions, one gets the current user /users/me and one gets a user that is searched /users/:id, sadly these endpoints conflict for some reason, can someone please help me in finding a solution? These endpoints are BOTH in the same file.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3957/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3957/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3955",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3955/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3955/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3955/events",
    "html_url": "https://github.com/expressjs/express/issues/3955",
    "id": 441522673,
    "node_id": "MDU6SXNzdWU0NDE1MjI2NzM=",
    "number": 3955,
    "title": "Incorrect return value for req.hostname",
    "user": {
      "login": "oonqt",
      "id": 36819562,
      "node_id": "MDQ6VXNlcjM2ODE5NTYy",
      "avatar_url": "https://avatars.githubusercontent.com/u/36819562?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/oonqt",
      "html_url": "https://github.com/oonqt",
      "followers_url": "https://api.github.com/users/oonqt/followers",
      "following_url": "https://api.github.com/users/oonqt/following{/other_user}",
      "gists_url": "https://api.github.com/users/oonqt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/oonqt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/oonqt/subscriptions",
      "organizations_url": "https://api.github.com/users/oonqt/orgs",
      "repos_url": "https://api.github.com/users/oonqt/repos",
      "events_url": "https://api.github.com/users/oonqt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/oonqt/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2019-05-08T02:30:52Z",
    "updated_at": "2019-05-08T02:58:30Z",
    "closed_at": "2019-05-08T02:55:32Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "express: 4.16.4\r\nnode: 10.15.3\r\n\r\nreq.hostname returns 127.0.0.1, most likely because I am behind a reverse proxy. Is this an express error or is there something that I'm not doing right?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3955/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3955/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3954",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3954/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3954/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3954/events",
    "html_url": "https://github.com/expressjs/express/pull/3954",
    "id": 440330809,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjc1OTI2MjAx",
    "number": 3954,
    "title": "PERF: change map,foreach to for",
    "user": {
      "login": "aymen94",
      "id": 13963132,
      "node_id": "MDQ6VXNlcjEzOTYzMTMy",
      "avatar_url": "https://avatars.githubusercontent.com/u/13963132?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aymen94",
      "html_url": "https://github.com/aymen94",
      "followers_url": "https://api.github.com/users/aymen94/followers",
      "following_url": "https://api.github.com/users/aymen94/following{/other_user}",
      "gists_url": "https://api.github.com/users/aymen94/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aymen94/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aymen94/subscriptions",
      "organizations_url": "https://api.github.com/users/aymen94/orgs",
      "repos_url": "https://api.github.com/users/aymen94/repos",
      "events_url": "https://api.github.com/users/aymen94/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aymen94/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2019-05-04T14:49:42Z",
    "updated_at": "2019-05-07T12:07:41Z",
    "closed_at": "2019-05-07T12:07:40Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3954",
      "html_url": "https://github.com/expressjs/express/pull/3954",
      "diff_url": "https://github.com/expressjs/express/pull/3954.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3954.patch",
      "merged_at": null
    },
    "body": "increment performance, change map, foreach to for",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3954/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3954/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3953",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3953/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3953/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3953/events",
    "html_url": "https://github.com/expressjs/express/issues/3953",
    "id": 440265451,
    "node_id": "MDU6SXNzdWU0NDAyNjU0NTE=",
    "number": 3953,
    "title": "npm audit failure due to finalhandler",
    "user": {
      "login": "elliottjro",
      "id": 1139851,
      "node_id": "MDQ6VXNlcjExMzk4NTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1139851?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elliottjro",
      "html_url": "https://github.com/elliottjro",
      "followers_url": "https://api.github.com/users/elliottjro/followers",
      "following_url": "https://api.github.com/users/elliottjro/following{/other_user}",
      "gists_url": "https://api.github.com/users/elliottjro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elliottjro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elliottjro/subscriptions",
      "organizations_url": "https://api.github.com/users/elliottjro/orgs",
      "repos_url": "https://api.github.com/users/elliottjro/repos",
      "events_url": "https://api.github.com/users/elliottjro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elliottjro/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578716,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/deps",
        "name": "deps",
        "color": "444444",
        "default": false,
        "description": null
      },
      {
        "id": 324166296,
        "node_id": "MDU6TGFiZWwzMjQxNjYyOTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/meta",
        "name": "meta",
        "color": "fef2c0",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/17",
      "html_url": "https://github.com/expressjs/express/milestone/17",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/17/labels",
      "id": 3066819,
      "node_id": "MDk6TWlsZXN0b25lMzA2NjgxOQ==",
      "number": 17,
      "title": "4.17",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 15,
      "state": "closed",
      "created_at": "2018-01-26T16:25:16Z",
      "updated_at": "2019-05-17T01:58:27Z",
      "due_on": null,
      "closed_at": "2019-05-17T01:58:27Z"
    },
    "comments": 4,
    "created_at": "2019-05-04T00:27:39Z",
    "updated_at": "2019-05-17T01:58:16Z",
    "closed_at": "2019-05-17T01:58:16Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "```\r\n┌──────────────────────────────────────────────────────────────────────────────┐\r\n│                                Manual Review                                 │\r\n│            Some vulnerabilities require your attention to resolve            │\r\n│                                                                              │\r\n│         Visit https://go.npm.me/audit-guide for additional guidance          │\r\n└──────────────────────────────────────────────────────────────────────────────┘\r\n┌───────────────┬──────────────────────────────────────────────────────────────┐\r\n│ Low           │ Insecure Default Configuration                               │\r\n├───────────────┼──────────────────────────────────────────────────────────────┤\r\n│ Package       │ finalhandler                                                 │\r\n├───────────────┼──────────────────────────────────────────────────────────────┤\r\n│ Patched in    │ No patch available                                           │\r\n├───────────────┼──────────────────────────────────────────────────────────────┤\r\n│ Dependency of │ express                                                      │\r\n├───────────────┼──────────────────────────────────────────────────────────────┤\r\n│ Path          │ express > finalhandler                                       │\r\n├───────────────┼──────────────────────────────────────────────────────────────┤\r\n│ More info     │ https://npmjs.com/advisories/836                             │\r\n└───────────────┴──────────────────────────────────────────────────────────────┘\r\n```\r\n\r\n\r\nrelated convo: https://github.com/pillarjs/finalhandler/issues/26",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3953/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3953/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3952",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3952/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3952/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3952/events",
    "html_url": "https://github.com/expressjs/express/issues/3952",
    "id": 439162029,
    "node_id": "MDU6SXNzdWU0MzkxNjIwMjk=",
    "number": 3952,
    "title": "Express does not recognise used ports allocated by other processes (not started by express)",
    "user": {
      "login": "zukoaang",
      "id": 22727848,
      "node_id": "MDQ6VXNlcjIyNzI3ODQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/22727848?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zukoaang",
      "html_url": "https://github.com/zukoaang",
      "followers_url": "https://api.github.com/users/zukoaang/followers",
      "following_url": "https://api.github.com/users/zukoaang/following{/other_user}",
      "gists_url": "https://api.github.com/users/zukoaang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zukoaang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zukoaang/subscriptions",
      "organizations_url": "https://api.github.com/users/zukoaang/orgs",
      "repos_url": "https://api.github.com/users/zukoaang/repos",
      "events_url": "https://api.github.com/users/zukoaang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zukoaang/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2019-05-01T13:21:41Z",
    "updated_at": "2019-05-04T02:07:04Z",
    "closed_at": "2019-05-04T02:07:03Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hey,\r\nThere's a weird bug, that express does not recognise used ports by other processes (not started by node/express).\r\n\r\nFor example:\r\ncreate a simple express app that listen on port 9000, that return something like 'hello express' in the response.\r\nin the other hand, start another listening service on the same port, like using python:\r\n`python -m SimpleHTTPServer 9090`\r\n\r\nthen open the browser, and create a request to `localhost:9000`, and you will see response from express\r\nthen, create another request to `127.0.0.1:9000`, and you will see response from python (ftp serve)\r\n\r\nsome meta:\r\nOS: MacOS 10.14\r\nnode -v: v11.13.0\r\nnpm -v: 6.7.0\r\nexpress version (package.json): ^4.16.2\r\n\r\n(found with @https://github.com/20matan)\r\n\r\nThanks",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3952/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3952/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3951",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3951/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3951/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3951/events",
    "html_url": "https://github.com/expressjs/express/issues/3951",
    "id": 438472076,
    "node_id": "MDU6SXNzdWU0Mzg0NzIwNzY=",
    "number": 3951,
    "title": "express checks referrer first, then referer next",
    "user": {
      "login": "AnyhowStep",
      "id": 5655961,
      "node_id": "MDQ6VXNlcjU2NTU5NjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5655961?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AnyhowStep",
      "html_url": "https://github.com/AnyhowStep",
      "followers_url": "https://api.github.com/users/AnyhowStep/followers",
      "following_url": "https://api.github.com/users/AnyhowStep/following{/other_user}",
      "gists_url": "https://api.github.com/users/AnyhowStep/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AnyhowStep/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AnyhowStep/subscriptions",
      "organizations_url": "https://api.github.com/users/AnyhowStep/orgs",
      "repos_url": "https://api.github.com/users/AnyhowStep/repos",
      "events_url": "https://api.github.com/users/AnyhowStep/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AnyhowStep/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2019-04-29T19:32:08Z",
    "updated_at": "2021-08-29T16:05:27Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Looking at this,\r\nhttps://github.com/expressjs/express/blob/master/lib/request.js#L79\r\n\r\nIt seems like express checks `referrer` (with two \"r\"s) first, then `referer` next.\r\nIs there a particular reason why the double-r is checked first?\r\n\r\nIt seems like single-r should be checked first because it's standard.\r\n\r\n-----\r\n\r\nAnother reason to check single-r first is because it's easier to spoof double-r than it is to spoof single-r (with a web browser, anyway). Some browsers block attempts to modify the single-r header. But I don't think any browser blocks attempts to spoof double-r.\r\n\r\n-----\r\n\r\nIf it were me, I'd even go as far as to not check double-r at all. But that would be a breaking change and one can easily do this by just accessing `req.headers.referer` and not using `req.header()`.\r\n\r\nI'm just curious why `req.header()` was made to behave this way.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3951/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3951/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3950",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3950/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3950/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3950/events",
    "html_url": "https://github.com/expressjs/express/issues/3950",
    "id": 438246819,
    "node_id": "MDU6SXNzdWU0MzgyNDY4MTk=",
    "number": 3950,
    "title": "How can i get the 'req' 'res' 'next' parameter in my nodejs function? ",
    "user": {
      "login": "xulayen",
      "id": 15044564,
      "node_id": "MDQ6VXNlcjE1MDQ0NTY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/15044564?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xulayen",
      "html_url": "https://github.com/xulayen",
      "followers_url": "https://api.github.com/users/xulayen/followers",
      "following_url": "https://api.github.com/users/xulayen/following{/other_user}",
      "gists_url": "https://api.github.com/users/xulayen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xulayen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xulayen/subscriptions",
      "organizations_url": "https://api.github.com/users/xulayen/orgs",
      "repos_url": "https://api.github.com/users/xulayen/repos",
      "events_url": "https://api.github.com/users/xulayen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xulayen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-04-29T10:25:08Z",
    "updated_at": "2019-05-04T02:08:05Z",
    "closed_at": "2019-05-04T02:08:05Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "How can i get the 'req' 'res' 'next' parameter in my nodejs function? ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3950/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3950/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3949",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3949/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3949/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3949/events",
    "html_url": "https://github.com/expressjs/express/issues/3949",
    "id": 438132161,
    "node_id": "MDU6SXNzdWU0MzgxMzIxNjE=",
    "number": 3949,
    "title": "res.sendStatus drop on an error at browser side",
    "user": {
      "login": "qmarquez",
      "id": 18141238,
      "node_id": "MDQ6VXNlcjE4MTQxMjM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/18141238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qmarquez",
      "html_url": "https://github.com/qmarquez",
      "followers_url": "https://api.github.com/users/qmarquez/followers",
      "following_url": "https://api.github.com/users/qmarquez/following{/other_user}",
      "gists_url": "https://api.github.com/users/qmarquez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qmarquez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qmarquez/subscriptions",
      "organizations_url": "https://api.github.com/users/qmarquez/orgs",
      "repos_url": "https://api.github.com/users/qmarquez/repos",
      "events_url": "https://api.github.com/users/qmarquez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qmarquez/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-04-29T02:45:30Z",
    "updated_at": "2019-04-29T04:53:35Z",
    "closed_at": "2019-04-29T04:53:35Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "![image](https://user-images.githubusercontent.com/18141238/56874312-7c102f80-6a0f-11e9-8d18-9b32c8df4aa5.png)\r\n![image](https://user-images.githubusercontent.com/18141238/56874334-b11c8200-6a0f-11e9-91ed-2ad52ecc4779.png)\r\n\r\nUsing angular httpClient when i do a sendStatus(200) i recibe that error on frontend. it's cause angular or something wrong on express?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3949/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3949/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3948",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3948/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3948/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3948/events",
    "html_url": "https://github.com/expressjs/express/pull/3948",
    "id": 437941766,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjc0MTA1NDc3",
    "number": 3948,
    "title": "build: drop node <8",
    "user": {
      "login": "cat9000",
      "id": 35055133,
      "node_id": "MDQ6VXNlcjM1MDU1MTMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/35055133?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cat9000",
      "html_url": "https://github.com/cat9000",
      "followers_url": "https://api.github.com/users/cat9000/followers",
      "following_url": "https://api.github.com/users/cat9000/following{/other_user}",
      "gists_url": "https://api.github.com/users/cat9000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cat9000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cat9000/subscriptions",
      "organizations_url": "https://api.github.com/users/cat9000/orgs",
      "repos_url": "https://api.github.com/users/cat9000/repos",
      "events_url": "https://api.github.com/users/cat9000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cat9000/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 95025092,
        "node_id": "MDU6TGFiZWw5NTAyNTA5Mg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/deprecate",
        "name": "deprecate",
        "color": "f7c6c7",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 553390440,
        "node_id": "MDU6TGFiZWw1NTMzOTA0NDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/needs%20rebase",
        "name": "needs rebase",
        "color": "e11d21",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 12,
    "created_at": "2019-04-27T13:06:33Z",
    "updated_at": "2022-02-17T05:33:15Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3948",
      "html_url": "https://github.com/expressjs/express/pull/3948",
      "diff_url": "https://github.com/expressjs/express/pull/3948.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3948.patch",
      "merged_at": null
    },
    "body": "> When 5.0 is released it will support down to the LTS version at that time.\r\n\r\n_Originally posted by @dougwilson in https://github.com/expressjs/express/issues/2755#issuecomment-382499774_",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3948/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3948/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3947",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3947/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3947/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3947/events",
    "html_url": "https://github.com/expressjs/express/issues/3947",
    "id": 436845445,
    "node_id": "MDU6SXNzdWU0MzY4NDU0NDU=",
    "number": 3947,
    "title": "What does express generate an etag from?",
    "user": {
      "login": "toymachiner62",
      "id": 485782,
      "node_id": "MDQ6VXNlcjQ4NTc4Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/485782?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toymachiner62",
      "html_url": "https://github.com/toymachiner62",
      "followers_url": "https://api.github.com/users/toymachiner62/followers",
      "following_url": "https://api.github.com/users/toymachiner62/following{/other_user}",
      "gists_url": "https://api.github.com/users/toymachiner62/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toymachiner62/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toymachiner62/subscriptions",
      "organizations_url": "https://api.github.com/users/toymachiner62/orgs",
      "repos_url": "https://api.github.com/users/toymachiner62/repos",
      "events_url": "https://api.github.com/users/toymachiner62/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toymachiner62/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2019-04-24T18:31:04Z",
    "updated_at": "2019-04-24T20:57:18Z",
    "closed_at": "2019-04-24T20:57:18Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm working on implementing `Etag`'s on `GET` and `POST` requests so that I can require the `If-Match` header on a `PATCH` request to prevent the lost update problem.\r\n\r\nI'm curious though what express is generating `Etag`'s from and if i'm better off to generate an `Etag` manually.\r\n\r\nFor example if someone issues a `PATCH` request on a resource and passed in the header `If-Match`, I need to query my db for that object, generate an `Etag`, then make sure it matches what was passed in on the `If-Match` header to determine if the record has been updated or not.\r\n\r\nAm I better off just disabling the default express `Etag` generation and doing it all manually?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3947/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3947/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3946",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3946/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3946/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3946/events",
    "html_url": "https://github.com/expressjs/express/pull/3946",
    "id": 436649387,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjczMDkzNDUx",
    "number": 3946,
    "title": "chore(travis) add node 12",
    "user": {
      "login": "zuohuadong",
      "id": 11203929,
      "node_id": "MDQ6VXNlcjExMjAzOTI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/11203929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zuohuadong",
      "html_url": "https://github.com/zuohuadong",
      "followers_url": "https://api.github.com/users/zuohuadong/followers",
      "following_url": "https://api.github.com/users/zuohuadong/following{/other_user}",
      "gists_url": "https://api.github.com/users/zuohuadong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zuohuadong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zuohuadong/subscriptions",
      "organizations_url": "https://api.github.com/users/zuohuadong/orgs",
      "repos_url": "https://api.github.com/users/zuohuadong/repos",
      "events_url": "https://api.github.com/users/zuohuadong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zuohuadong/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/17",
      "html_url": "https://github.com/expressjs/express/milestone/17",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/17/labels",
      "id": 3066819,
      "node_id": "MDk6TWlsZXN0b25lMzA2NjgxOQ==",
      "number": 17,
      "title": "4.17",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 15,
      "state": "closed",
      "created_at": "2018-01-26T16:25:16Z",
      "updated_at": "2019-05-17T01:58:27Z",
      "due_on": null,
      "closed_at": "2019-05-17T01:58:27Z"
    },
    "comments": 6,
    "created_at": "2019-04-24T11:44:15Z",
    "updated_at": "2019-05-16T13:53:42Z",
    "closed_at": "2019-05-16T13:53:42Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3946",
      "html_url": "https://github.com/expressjs/express/pull/3946",
      "diff_url": "https://github.com/expressjs/express/pull/3946.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3946.patch",
      "merged_at": "2019-05-16T13:53:42Z"
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3946/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3946/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3945",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3945/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3945/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3945/events",
    "html_url": "https://github.com/expressjs/express/issues/3945",
    "id": 436618145,
    "node_id": "MDU6SXNzdWU0MzY2MTgxNDU=",
    "number": 3945,
    "title": "why not make middleware or hooks that works exactly before sending response that could change or alter the response object",
    "user": {
      "login": "abdoolly",
      "id": 11378681,
      "node_id": "MDQ6VXNlcjExMzc4Njgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/11378681?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abdoolly",
      "html_url": "https://github.com/abdoolly",
      "followers_url": "https://api.github.com/users/abdoolly/followers",
      "following_url": "https://api.github.com/users/abdoolly/following{/other_user}",
      "gists_url": "https://api.github.com/users/abdoolly/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abdoolly/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abdoolly/subscriptions",
      "organizations_url": "https://api.github.com/users/abdoolly/orgs",
      "repos_url": "https://api.github.com/users/abdoolly/repos",
      "events_url": "https://api.github.com/users/abdoolly/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abdoolly/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 163600,
        "node_id": "MDU6TGFiZWwxNjM2MDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2019-04-24T10:28:19Z",
    "updated_at": "2020-03-27T08:26:18Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Problem statement**\r\n\r\nThere is a problem which always happens what if we wanted to make certain actions or wrap our responses all our responses in express in a certain standard way right now there is no built in hooks or middlewares which works before the sending \r\n\r\n**Lots of inefficient workarounds**\r\n\r\nI know there is workarounds by just overriding the response object but thats sometimes not efficient enough and sometimes breaks some functions while responding so , why not make hooks for the main response functions and just pass in the req and res objects for the user to modify and just return the res and req after the modification.\r\n\r\n**Just a proposed way for the way to make such hooks**\r\n\r\n```\r\nlet express = require('express');\r\nlet app = express();\r\nlet bodyParser = require('body-parser');\r\n\r\n// some middlewares\r\n\r\napp.use(bodyParser());\r\n\r\n// routes here\r\napp.get('/test',(req,res) => res.send('I am a test function'));\r\n\r\n// now put a hook in the app to run before the send\r\n// this is an example of how to make send hook \r\napp.hooks.onSend = (req,res) => {\r\n\r\n    res.body = {\r\n            body: res.body,\r\n            status : 200\r\n   };\r\n\r\n   return { res, req };\r\n};\r\n\r\n```\r\n\r\n**benefits**\r\n\r\nIt is a simple use case but it will help alot of people make their code way better.\r\nby at least making a way to change res object either in headers or in the body or any other thing according to what they need to change.\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3945/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3945/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3944",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3944/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3944/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3944/events",
    "html_url": "https://github.com/expressjs/express/issues/3944",
    "id": 436264580,
    "node_id": "MDU6SXNzdWU0MzYyNjQ1ODA=",
    "number": 3944,
    "title": "TypeError: layer.match is not a function",
    "user": {
      "login": "MeetChopra",
      "id": 31788849,
      "node_id": "MDQ6VXNlcjMxNzg4ODQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/31788849?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MeetChopra",
      "html_url": "https://github.com/MeetChopra",
      "followers_url": "https://api.github.com/users/MeetChopra/followers",
      "following_url": "https://api.github.com/users/MeetChopra/following{/other_user}",
      "gists_url": "https://api.github.com/users/MeetChopra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MeetChopra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MeetChopra/subscriptions",
      "organizations_url": "https://api.github.com/users/MeetChopra/orgs",
      "repos_url": "https://api.github.com/users/MeetChopra/repos",
      "events_url": "https://api.github.com/users/MeetChopra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MeetChopra/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-04-23T15:53:16Z",
    "updated_at": "2019-04-23T15:54:53Z",
    "closed_at": "2019-04-23T15:54:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm getting this error whenever some error occurs and sever crashes\r\n\r\n```\r\nTypeError: layer.match is not a function\r\n    at matchLayer (/var/www/tryprosper/node_modules/express/lib/router/index.js:574:18)\r\n    at next (/var/www/tryprosper/node_modules/express/lib/router/index.js:220:15)\r\n    at Function.handle (/var/www/tryprosper/node_modules/express/lib/router/index.js:174:3)\r\n    at Function.handle (/var/www/tryprosper/node_modules/express/lib/application.js:174:10)\r\n    at Server.app (/var/www/tryprosper/node_modules/express/lib/express.js:39:9)\r\n    at emitTwo (events.js:126:13)\r\n    at Server.emit (events.js:214:7)\r\n    at parserOnIncoming (_http_server.js:656:12)\r\n    at HTTPParser.parserOnHeadersComplete (_http_common.js:119:17)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3944/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3944/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3943",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3943/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3943/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3943/events",
    "html_url": "https://github.com/expressjs/express/issues/3943",
    "id": 435660199,
    "node_id": "MDU6SXNzdWU0MzU2NjAxOTk=",
    "number": 3943,
    "title": "Binary request header value results in dropped connection",
    "user": {
      "login": "alaz",
      "id": 12065,
      "node_id": "MDQ6VXNlcjEyMDY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/12065?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alaz",
      "html_url": "https://github.com/alaz",
      "followers_url": "https://api.github.com/users/alaz/followers",
      "following_url": "https://api.github.com/users/alaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/alaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alaz/subscriptions",
      "organizations_url": "https://api.github.com/users/alaz/orgs",
      "repos_url": "https://api.github.com/users/alaz/repos",
      "events_url": "https://api.github.com/users/alaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2019-04-22T09:12:28Z",
    "updated_at": "2019-04-22T11:47:02Z",
    "closed_at": "2019-04-22T11:37:50Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "If Express.js receives a request header with binary data, it silently drops this connection. This is incorrect behavior, Web servers should accept any requests (including malformed) and reply with meaningful responses. This could be a security issue as well: if a load balancer sees too many dropped upstream connections, it will mark the upstream host as down. What if it marks all the hosts as down?\r\n\r\n# Steps to reproduce\r\n\r\nI have set up a minimal project to show this issue: https://github.com/alaz/express-req-header-binary\r\n\r\nThe Express application is trivial:\r\n\r\n```\r\nconst app = express();\r\n\r\napp.get('/', (_req, res) => res.status(204).end());\r\napp.listen(8080);\r\n```\r\n\r\nI have also an Nginx configuration that has two identical locations, both of them proxy to the same Express.js path. The only difference is that one of the Nginx locations sets a request header with binary value:\r\n\r\n```\r\n    location /no_header {\r\n      proxy_pass http://localhost:8080/;\r\n    }\r\n\r\n    location /bin_header {\r\n      proxy_set_header X-Binary-Header $binary_remote_addr;\r\n      proxy_pass http://localhost:8080/;\r\n    }\r\n```\r\n\r\n# Tests\r\n\r\n```\r\nAlaz-Laptop:~ alaz$ curl -i http://localhost:8000/no_header\r\nHTTP/1.1 204 No Content\r\nServer: nginx/1.15.12\r\nDate: Mon, 22 Apr 2019 08:51:54 GMT\r\nConnection: keep-alive\r\nX-Powered-By: Express\r\n```\r\n\r\nThe above is a correct behavior. Below we are calling the location that sets binary data in a header:\r\n\r\n```\r\nAlaz-Laptop:~ alaz$ curl -i http://localhost:8000/bin_header\r\nHTTP/1.1 502 Bad Gateway\r\nServer: nginx/1.15.12\r\nDate: Mon, 22 Apr 2019 08:51:59 GMT\r\nContent-Type: text/html\r\nContent-Length: 158\r\nConnection: keep-alive\r\n\r\n<html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.15.12</center>\r\n</body>\r\n</html>\r\n```\r\n\r\nand Nginx `error.log` will have:\r\n\r\n```\r\n2019/04/22 12:32:20 [error] 57078#0: *1 upstream prematurely closed connection while reading response header from upstream, client: 127.0.0.1, server: _, request: \"GET /bin_header HTTP/1.1\", upstream: \"http://127.0.0.1:8080/\", host: \"localhost:8000\"\r\n2019/04/22 12:32:20 [warn] 57078#0: *1 upstream server temporarily disabled while reading response header from upstream, client: 127.0.0.1, server: _, request: \"GET /bin_header HTTP/1.1\", upstream: \"http://127.0.0.1:8080/\", host: \"localhost:8000\"\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3943/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3943/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3942",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3942/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3942/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3942/events",
    "html_url": "https://github.com/expressjs/express/issues/3942",
    "id": 435528779,
    "node_id": "MDU6SXNzdWU0MzU1Mjg3Nzk=",
    "number": 3942,
    "title": "Add HTTP StatusCode to Express",
    "user": {
      "login": "MGenteluci",
      "id": 22054102,
      "node_id": "MDQ6VXNlcjIyMDU0MTAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/22054102?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MGenteluci",
      "html_url": "https://github.com/MGenteluci",
      "followers_url": "https://api.github.com/users/MGenteluci/followers",
      "following_url": "https://api.github.com/users/MGenteluci/following{/other_user}",
      "gists_url": "https://api.github.com/users/MGenteluci/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MGenteluci/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MGenteluci/subscriptions",
      "organizations_url": "https://api.github.com/users/MGenteluci/orgs",
      "repos_url": "https://api.github.com/users/MGenteluci/repos",
      "events_url": "https://api.github.com/users/MGenteluci/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MGenteluci/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-04-21T17:09:01Z",
    "updated_at": "2019-04-21T18:57:53Z",
    "closed_at": "2019-04-21T18:57:48Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Instead of returning status through its' code, express could provide an object containing its description to facilitate the users' use.\r\n\r\nExample:\r\n```js\r\nconst statusCode = require('express').StatusCode;\r\n\r\napp.get('/', (req, res) => res.status(statusCode.Ok).json({ message: 'Hello!' }));\r\n```\r\n\r\nI searched but I didn't find anyone talking about this topic so i decided to open one here.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3942/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3942/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3941",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3941/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3941/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3941/events",
    "html_url": "https://github.com/expressjs/express/issues/3941",
    "id": 435491312,
    "node_id": "MDU6SXNzdWU0MzU0OTEzMTI=",
    "number": 3941,
    "title": "res.clearCookie() doesn't work unless domain is provided",
    "user": {
      "login": "fancydev18",
      "id": 45625044,
      "node_id": "MDQ6VXNlcjQ1NjI1MDQ0",
      "avatar_url": "https://avatars.githubusercontent.com/u/45625044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fancydev18",
      "html_url": "https://github.com/fancydev18",
      "followers_url": "https://api.github.com/users/fancydev18/followers",
      "following_url": "https://api.github.com/users/fancydev18/following{/other_user}",
      "gists_url": "https://api.github.com/users/fancydev18/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fancydev18/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fancydev18/subscriptions",
      "organizations_url": "https://api.github.com/users/fancydev18/orgs",
      "repos_url": "https://api.github.com/users/fancydev18/repos",
      "events_url": "https://api.github.com/users/fancydev18/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fancydev18/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-04-21T09:16:29Z",
    "updated_at": "2019-04-21T12:32:11Z",
    "closed_at": "2019-04-21T12:32:11Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The issue https://github.com/expressjs/express/issues/691\r\nis still present in express 4.16.4\r\n\r\nThe  last comment provides a working solution:\r\nFor anyone else running into this, it's not just path that has to match. You have to match the domain too.\r\n```\r\nres.clearCookie('my_cookie', {domain: COOKIE_DOMAIN, path: COOKIE_PATH});\r\n```\r\n\r\nPlease fix by not requiring the domain. ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3941/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3941/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3940",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3940/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3940/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3940/events",
    "html_url": "https://github.com/expressjs/express/pull/3940",
    "id": 435467074,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjcyMTg4ODAx",
    "number": 3940,
    "title": "router.param(): Fix an issue that only one name can be provided",
    "user": {
      "login": "tailtq",
      "id": 44340263,
      "node_id": "MDQ6VXNlcjQ0MzQwMjYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/44340263?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tailtq",
      "html_url": "https://github.com/tailtq",
      "followers_url": "https://api.github.com/users/tailtq/followers",
      "following_url": "https://api.github.com/users/tailtq/following{/other_user}",
      "gists_url": "https://api.github.com/users/tailtq/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tailtq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tailtq/subscriptions",
      "organizations_url": "https://api.github.com/users/tailtq/orgs",
      "repos_url": "https://api.github.com/users/tailtq/repos",
      "events_url": "https://api.github.com/users/tailtq/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tailtq/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 18291,
        "node_id": "MDU6TGFiZWwxODI5MQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1",
        "default": false,
        "description": null
      },
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 55587817,
        "node_id": "MDU6TGFiZWw1NTU4NzgxNw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/needs%20tests",
        "name": "needs tests",
        "color": "e11d21",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-04-21T02:11:19Z",
    "updated_at": "2019-04-21T03:47:16Z",
    "closed_at": "2019-04-21T02:16:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3940",
      "html_url": "https://github.com/expressjs/express/pull/3940",
      "diff_url": "https://github.com/expressjs/express/pull/3940.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3940.patch",
      "merged_at": null
    },
    "body": "I found an issue that when I use `router.param(['name1', 'name2'], middleware);`, it doesn't work.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3940/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3940/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3939",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3939/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3939/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3939/events",
    "html_url": "https://github.com/expressjs/express/pull/3939",
    "id": 435463172,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjcyMTg3MjIx",
    "number": 3939,
    "title": "Add missing semicolons",
    "user": {
      "login": "styfle",
      "id": 229881,
      "node_id": "MDQ6VXNlcjIyOTg4MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/229881?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/styfle",
      "html_url": "https://github.com/styfle",
      "followers_url": "https://api.github.com/users/styfle/followers",
      "following_url": "https://api.github.com/users/styfle/following{/other_user}",
      "gists_url": "https://api.github.com/users/styfle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/styfle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/styfle/subscriptions",
      "organizations_url": "https://api.github.com/users/styfle/orgs",
      "repos_url": "https://api.github.com/users/styfle/repos",
      "events_url": "https://api.github.com/users/styfle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/styfle/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-04-21T01:21:58Z",
    "updated_at": "2019-04-21T02:04:49Z",
    "closed_at": "2019-04-21T01:34:04Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3939",
      "html_url": "https://github.com/expressjs/express/pull/3939",
      "diff_url": "https://github.com/expressjs/express/pull/3939.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3939.patch",
      "merged_at": null
    },
    "body": "A few lines were missing semicolons so I added them 👍 ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3939/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3939/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3938",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3938/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3938/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3938/events",
    "html_url": "https://github.com/expressjs/express/issues/3938",
    "id": 435077351,
    "node_id": "MDU6SXNzdWU0MzUwNzczNTE=",
    "number": 3938,
    "title": "[BUG]: Query not properly deserialized",
    "user": {
      "login": "artificialhoney",
      "id": 381831,
      "node_id": "MDQ6VXNlcjM4MTgzMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/381831?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/artificialhoney",
      "html_url": "https://github.com/artificialhoney",
      "followers_url": "https://api.github.com/users/artificialhoney/followers",
      "following_url": "https://api.github.com/users/artificialhoney/following{/other_user}",
      "gists_url": "https://api.github.com/users/artificialhoney/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/artificialhoney/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/artificialhoney/subscriptions",
      "organizations_url": "https://api.github.com/users/artificialhoney/orgs",
      "repos_url": "https://api.github.com/users/artificialhoney/repos",
      "events_url": "https://api.github.com/users/artificialhoney/events{/privacy}",
      "received_events_url": "https://api.github.com/users/artificialhoney/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2019-04-19T07:19:54Z",
    "updated_at": "2019-04-26T08:23:37Z",
    "closed_at": "2019-04-19T12:52:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "### Steps to reproduce:\r\n\r\n```js\r\nconst express = require('express')\r\nconst app = express()\r\n\r\napp.get('*', (req, res) => {\r\n    const result = JSON.stringify(req.query, null, 2);\r\n    console.log(result)\r\n    res.write(result);\r\n    res.end();\r\n})\r\n\r\napp.listen(3000)\r\n```\r\n\r\n\r\n**Just visit the app with following URL:** http://localhost:3000?query[$and][0][status][$in][0]=waiting_for_review&query[$and][0][status][$in][1]=in_review&query[$and][1][$or][0][destination][$regex]=.*Aw.*&query[$and][1][$or][0][destination][$options]=i&query[$and][1][$or][1][project.name][$regex]=.*Aw.*&query[$and][1][$or][1][project.name][$options]=i&limit=5&page=1\r\n\r\n\r\n#### Output\r\n\r\n```json\r\n{\r\n  \"query\": {\r\n    \"$and\": [\r\n      {\r\n        \"status\": {\r\n          \"$in\": [\r\n            \"waiting_for_review\",\r\n            \"in_review\"\r\n          ]\r\n        }\r\n      },\r\n      {\r\n        \"$or\": [\r\n          {\r\n            \"destination\": {\r\n              \"[$regex]\": \".*Aw.*\",\r\n              \"[$options]\": \"i\"\r\n            }\r\n          },\r\n          {\r\n            \"project.name\": {\r\n              \"[$regex]\": \".*Aw.*\",\r\n              \"[$options]\": \"i\"\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  \"limit\": \"5\",\r\n  \"page\": \"1\"\r\n}\r\n```\r\n\r\n#### Expected Output\r\n\r\n```json\r\n{\r\n  \"query\": {\r\n    \"$and\": [\r\n      {\r\n        \"status\": {\r\n          \"$in\": [\r\n            \"waiting_for_review\",\r\n            \"in_review\"\r\n          ]\r\n        }\r\n      },\r\n      {\r\n        \"$or\": [\r\n          {\r\n            \"destination\": {\r\n              \"$regex\": \".*Aw.*\",\r\n              \"$options\": \"i\"\r\n            }\r\n          },\r\n          {\r\n            \"project.name\": {\r\n              \"$regex\": \".*Aw.*\",\r\n              \"$options\": \"i\"\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  \"limit\": \"5\",\r\n  \"page\": \"1\"\r\n}\r\n```\r\n\r\n**See the $regex field, which should not be surrounded by brackets.**\r\n\r\n_______________\r\n\r\nNode: v10.15.0\r\nExpress: v4.16.4\r\n\r\n______________\r\n\r\n**Works with:**\r\n\r\n```js\r\nconst qs = require('qs');\r\n\r\napp.set('query parser', function (str) {\r\n    return qs.parse(str, {\r\n        depth: 20,\r\n    });\r\n});\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3938/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3938/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3937",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3937/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3937/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3937/events",
    "html_url": "https://github.com/expressjs/express/issues/3937",
    "id": 435016615,
    "node_id": "MDU6SXNzdWU0MzUwMTY2MTU=",
    "number": 3937,
    "title": "Could we use different IncomingMessage implement in express?",
    "user": {
      "login": "iamwwc",
      "id": 24750337,
      "node_id": "MDQ6VXNlcjI0NzUwMzM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/24750337?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamwwc",
      "html_url": "https://github.com/iamwwc",
      "followers_url": "https://api.github.com/users/iamwwc/followers",
      "following_url": "https://api.github.com/users/iamwwc/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamwwc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamwwc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamwwc/subscriptions",
      "organizations_url": "https://api.github.com/users/iamwwc/orgs",
      "repos_url": "https://api.github.com/users/iamwwc/repos",
      "events_url": "https://api.github.com/users/iamwwc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamwwc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-04-19T01:24:37Z",
    "updated_at": "2019-04-19T01:26:52Z",
    "closed_at": "2019-04-19T01:26:45Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "\r\nIn `application.js`\r\n```js\r\napp.listen = function listen() {\r\n  var server = http.createServer(this);\r\n  return server.listen.apply(server, arguments);\r\n};\r\n```\r\n\r\nNode http allow us use different `IncomingMessage` and `ServerResponse` implement\r\n\r\nhttps://nodejs.org/api/http.html#http_http_createserver_options_requestlistener\r\n\r\nBut express just ignore this useful opts\r\n\r\n```js\r\napp.listen = function listen() {\r\n  var server = http.createServer({/*my implement*/},this);\r\n  return server.listen.apply(server, arguments);\r\n};\r\n```\r\nCould be better 😋\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3937/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3937/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3936",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3936/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3936/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3936/events",
    "html_url": "https://github.com/expressjs/express/pull/3936",
    "id": 434758205,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjcxNjc4OTQz",
    "number": 3936,
    "title": "Validate `maxAge` appropriateness before use",
    "user": {
      "login": "cjbarth",
      "id": 3049726,
      "node_id": "MDQ6VXNlcjMwNDk3MjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3049726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cjbarth",
      "html_url": "https://github.com/cjbarth",
      "followers_url": "https://api.github.com/users/cjbarth/followers",
      "following_url": "https://api.github.com/users/cjbarth/following{/other_user}",
      "gists_url": "https://api.github.com/users/cjbarth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cjbarth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cjbarth/subscriptions",
      "organizations_url": "https://api.github.com/users/cjbarth/orgs",
      "repos_url": "https://api.github.com/users/cjbarth/repos",
      "events_url": "https://api.github.com/users/cjbarth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cjbarth/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 8497,
        "node_id": "MDU6TGFiZWw4NDk3",
        "url": "https://api.github.com/repos/expressjs/express/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/18",
      "html_url": "https://github.com/expressjs/express/milestone/18",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/18/labels",
      "id": 5234171,
      "node_id": "MDk6TWlsZXN0b25lNTIzNDE3MQ==",
      "number": 18,
      "title": "4.18",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 15,
      "state": "closed",
      "created_at": "2020-03-24T23:16:48Z",
      "updated_at": "2022-04-24T22:50:58Z",
      "due_on": null,
      "closed_at": "2022-04-24T22:50:58Z"
    },
    "comments": 3,
    "created_at": "2019-04-18T13:00:40Z",
    "updated_at": "2022-03-27T17:21:48Z",
    "closed_at": "2022-03-27T17:21:48Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3936",
      "html_url": "https://github.com/expressjs/express/pull/3936",
      "diff_url": "https://github.com/expressjs/express/pull/3936.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3936.patch",
      "merged_at": "2022-03-27T17:21:47Z"
    },
    "body": "Addresses issue #3935 .",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3936/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3936/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3935",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3935/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3935/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3935/events",
    "html_url": "https://github.com/expressjs/express/issues/3935",
    "id": 434754162,
    "node_id": "MDU6SXNzdWU0MzQ3NTQxNjI=",
    "number": 3935,
    "title": "A Cookie `maxAge` of `undefined` causes incorrect behavior.",
    "user": {
      "login": "cjbarth",
      "id": 3049726,
      "node_id": "MDQ6VXNlcjMwNDk3MjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3049726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cjbarth",
      "html_url": "https://github.com/cjbarth",
      "followers_url": "https://api.github.com/users/cjbarth/followers",
      "following_url": "https://api.github.com/users/cjbarth/following{/other_user}",
      "gists_url": "https://api.github.com/users/cjbarth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cjbarth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cjbarth/subscriptions",
      "organizations_url": "https://api.github.com/users/cjbarth/orgs",
      "repos_url": "https://api.github.com/users/cjbarth/repos",
      "events_url": "https://api.github.com/users/cjbarth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cjbarth/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 8497,
        "node_id": "MDU6TGFiZWw4NDk3",
        "url": "https://api.github.com/repos/expressjs/express/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true,
        "description": null
      },
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 27,
    "created_at": "2019-04-18T12:51:07Z",
    "updated_at": "2022-04-24T22:48:06Z",
    "closed_at": "2022-04-24T22:48:06Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "In `lib/response.js` in `res.cookie()` some assumptions are made that the incoming `maxAge` option will always be a number. However, if `maxAge` is set to `undefined` through some process, `opts.maxAge /= 1000` returns `NaN`. `maxAge` should be verified and/or coerced to be numeric.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3935/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3935/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3934",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3934/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3934/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3934/events",
    "html_url": "https://github.com/expressjs/express/issues/3934",
    "id": 434090259,
    "node_id": "MDU6SXNzdWU0MzQwOTAyNTk=",
    "number": 3934,
    "title": "trigger express middleware pipeline manually",
    "user": {
      "login": "iamwwc",
      "id": 24750337,
      "node_id": "MDQ6VXNlcjI0NzUwMzM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/24750337?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamwwc",
      "html_url": "https://github.com/iamwwc",
      "followers_url": "https://api.github.com/users/iamwwc/followers",
      "following_url": "https://api.github.com/users/iamwwc/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamwwc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamwwc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamwwc/subscriptions",
      "organizations_url": "https://api.github.com/users/iamwwc/orgs",
      "repos_url": "https://api.github.com/users/iamwwc/repos",
      "events_url": "https://api.github.com/users/iamwwc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamwwc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2019-04-17T04:48:30Z",
    "updated_at": "2019-04-17T05:31:01Z",
    "closed_at": "2019-04-17T05:31:01Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "express is good for web dev.\r\n\r\nBut express only be trigger by nodejs http request from socket.\r\n\r\ncould we have choice to trigger by manually?\r\n\r\nfor example.\r\n\r\nwe have a request\r\n```js\r\nlet req = {\r\n    headers:{\r\n    }\r\n}\r\n\r\nlet resp = {\r\n    end:function(){\r\n         // we create a fake resp \r\n        //express response method\r\n    }\r\n}\r\n```\r\n\r\nDid express have a method called \r\n\r\n```js\r\nconst app = express()\r\napp.dispatch(req,resp)\r\n```\r\nto trigger process?\r\n\r\nexpress should be platform independent\r\n\r\nI want to use express in aws lambda( serverless ), but serverless not allow to listen port.\r\n\r\nI will translate api gateway object, feed to express, get response and then send back to aws gateway.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3934/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3934/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3933",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3933/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3933/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3933/events",
    "html_url": "https://github.com/expressjs/express/issues/3933",
    "id": 433044210,
    "node_id": "MDU6SXNzdWU0MzMwNDQyMTA=",
    "number": 3933,
    "title": "data event chunks gets padded to 8192 bytes",
    "user": {
      "login": "Kashio",
      "id": 16501683,
      "node_id": "MDQ6VXNlcjE2NTAxNjgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/16501683?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Kashio",
      "html_url": "https://github.com/Kashio",
      "followers_url": "https://api.github.com/users/Kashio/followers",
      "following_url": "https://api.github.com/users/Kashio/following{/other_user}",
      "gists_url": "https://api.github.com/users/Kashio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Kashio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Kashio/subscriptions",
      "organizations_url": "https://api.github.com/users/Kashio/orgs",
      "repos_url": "https://api.github.com/users/Kashio/repos",
      "events_url": "https://api.github.com/users/Kashio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Kashio/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2019-04-14T23:02:55Z",
    "updated_at": "2019-06-25T19:28:02Z",
    "closed_at": "2019-04-17T22:05:30Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "**Describe the issue**\r\nI send some data as `octet-stream` like so:\r\n```\r\n axios.post(config.api.url + resource + 'register', UserMessage.encode(message).finish(), {\r\n                responseType: 'arraybuffer',\r\n                headers: {\r\n                    'Content-Type': 'application/octet-stream'\r\n                }\r\n            })\r\n```\r\nand in the server I have the following middleware:\r\n```\r\nmodule.exports = (req, res, next) => {\r\n    if (!req.is('application/octet-stream')) {\r\n        return next();\r\n    }\r\n    let data = [];\r\n    req.on('data', chunk => {\r\n        data.push(chunk);\r\n    });\r\n    req.on('end', () => {\r\n        if (data.length <= 0) {\r\n            next();\r\n        }\r\n        data = Buffer.concat(data);\r\n        req.raw = Buffer.from(data.toString().replace(/\\0/g, ''));\r\n        next();\r\n    });\r\n};\r\n```\r\nwhich listens to data event and adds it to an array.\r\nThe problem is that I the chunk is padded to 8192 bytes so I get lots of `\\0` characters and I have to convert the buffer to string and replace all the `\\0` bytes and then convert back to buffer\r\n\r\n**Expected behavior, if applicable**\r\nIf I send 11 bytes buffer for example I should get on the data event a chunk of size 11 and not 8192.\r\n\r\n**Environment:**\r\n - express.js Version: 4.16.4\r\n - OS: Windows 10\r\n- Node.js version: 8.9.4\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3933/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3933/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3932",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3932/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3932/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3932/events",
    "html_url": "https://github.com/expressjs/express/issues/3932",
    "id": 432042011,
    "node_id": "MDU6SXNzdWU0MzIwNDIwMTE=",
    "number": 3932,
    "title": "How to change the `express.json` limit option based on the route.",
    "user": {
      "login": "marbuser",
      "id": 34422459,
      "node_id": "MDQ6VXNlcjM0NDIyNDU5",
      "avatar_url": "https://avatars.githubusercontent.com/u/34422459?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marbuser",
      "html_url": "https://github.com/marbuser",
      "followers_url": "https://api.github.com/users/marbuser/followers",
      "following_url": "https://api.github.com/users/marbuser/following{/other_user}",
      "gists_url": "https://api.github.com/users/marbuser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marbuser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marbuser/subscriptions",
      "organizations_url": "https://api.github.com/users/marbuser/orgs",
      "repos_url": "https://api.github.com/users/marbuser/repos",
      "events_url": "https://api.github.com/users/marbuser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marbuser/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 15,
    "created_at": "2019-04-11T14:03:46Z",
    "updated_at": "2019-06-25T19:31:01Z",
    "closed_at": "2019-04-16T16:54:00Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "I've got some endpoints and 90% of them I want to have a limit of around '2MB'. However, there  is 1 specific route, my upload route, where I want to have an upload limit of '10MB'.\r\n\r\nI'm using `router.use` and that doesn't seem to play nice.\r\nFor example, this doesn't work;\r\n```js\r\nimport express from 'express';\r\n\r\nconst router = express.Router();\r\n\r\napp.use(express.json({ limit: '2MB' }));\r\n\r\nrouter.use('/products', products);\r\nrouter.use('/uploads', express.json({ limit: '10MB' }), uploads);\r\n\r\napp.use('/v4', router);\r\n```\r\n\r\nI thought about making a middleware that just checks if the `req.path` is '/uploads', but it seems calling `express.json()` from a middleware causes some issue.\r\n\r\nNot sure whether this is a bug or if I'm just being dumb, but some help would be appreciated. :)",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3932/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3932/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3931",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3931/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3931/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3931/events",
    "html_url": "https://github.com/expressjs/express/issues/3931",
    "id": 431960060,
    "node_id": "MDU6SXNzdWU0MzE5NjAwNjA=",
    "number": 3931,
    "title": "TypeError: Converting circular structure to JSON",
    "user": {
      "login": "jnyheim",
      "id": 41641315,
      "node_id": "MDQ6VXNlcjQxNjQxMzE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/41641315?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnyheim",
      "html_url": "https://github.com/jnyheim",
      "followers_url": "https://api.github.com/users/jnyheim/followers",
      "following_url": "https://api.github.com/users/jnyheim/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnyheim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnyheim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnyheim/subscriptions",
      "organizations_url": "https://api.github.com/users/jnyheim/orgs",
      "repos_url": "https://api.github.com/users/jnyheim/repos",
      "events_url": "https://api.github.com/users/jnyheim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnyheim/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-04-11T10:58:48Z",
    "updated_at": "2019-04-11T17:52:13Z",
    "closed_at": "2019-04-11T11:12:13Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi, i'm getting this bug/error wich originates from ~\\express\\lib\\response.js:1119\r\n```\r\n> \r\nC:\\Users\\SENSORED\\ApeCrawler\\node_modules\\express\\lib\\response.js:1119\r\n    : JSON.stringify(value);\r\n           ^\r\n\r\nTypeError: Converting circular structure to JSON\r\n    at JSON.stringify (<anonymous>)\r\n    at stringify (C:\\Users\\SENSORED\\ApeCrawler\\node_modules\\express\\lib\\response.js:1119:12)\r\n    at ServerResponse.json (C:\\Users\\SENSORED\\ApeCrawler\\node_modules\\express\\lib\\response.js:260:14)\r\n    at ape_body (C:\\Users\\SENSORED\\ApeCrawler\\routes\\scrapper2.js:15:17)\r\n    at Request.request.get [as _callback] (C:\\Users\\SENSORED\\ApeCrawler\\routes\\scrapper2.js:44:20)\r\n    at self.callback (C:\\Users\\SENSORED\\ApeCrawler\\node_modules\\request\\request.js:185:22)\r\n    at Request.emit (events.js:189:13)\r\n    at Request.onRequestError (C:\\Users\\SENSORED\\ApeCrawler\\node_modules\\request\\request.js:881:8)\r\n    at ClientRequest.emit (events.js:189:13)\r\n    at TLSSocket.socketErrorListener (_http_client.js:399:9)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3931/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3931/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3930",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3930/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3930/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3930/events",
    "html_url": "https://github.com/expressjs/express/pull/3930",
    "id": 431846024,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjY5NDMzNDAy",
    "number": 3930,
    "title": "Fixed issue #2832.",
    "user": {
      "login": "chenhaihong",
      "id": 8087694,
      "node_id": "MDQ6VXNlcjgwODc2OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8087694?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chenhaihong",
      "html_url": "https://github.com/chenhaihong",
      "followers_url": "https://api.github.com/users/chenhaihong/followers",
      "following_url": "https://api.github.com/users/chenhaihong/following{/other_user}",
      "gists_url": "https://api.github.com/users/chenhaihong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chenhaihong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chenhaihong/subscriptions",
      "organizations_url": "https://api.github.com/users/chenhaihong/orgs",
      "repos_url": "https://api.github.com/users/chenhaihong/repos",
      "events_url": "https://api.github.com/users/chenhaihong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chenhaihong/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55587817,
        "node_id": "MDU6TGFiZWw1NTU4NzgxNw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/needs%20tests",
        "name": "needs tests",
        "color": "e11d21",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 16,
    "created_at": "2019-04-11T06:10:20Z",
    "updated_at": "2020-04-15T07:59:41Z",
    "closed_at": "2020-04-15T07:59:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3930",
      "html_url": "https://github.com/expressjs/express/pull/3930",
      "diff_url": "https://github.com/expressjs/express/pull/3930.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3930.patch",
      "merged_at": null
    },
    "body": "While require a module like `const x = require(variable);`, Webpack will\r\nprint this warning `Critical dependency: the request of a dependency is\r\nan expression`.\r\n\r\nBased on https://github.com/webpack/webpack/issues/196#issuecomment-354900072.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3930/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3930/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3929",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3929/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3929/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3929/events",
    "html_url": "https://github.com/expressjs/express/pull/3929",
    "id": 431841540,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjY5NDI5OTA3",
    "number": 3929,
    "title": "Fix issue #2832.",
    "user": {
      "login": "chenhaihong",
      "id": 8087694,
      "node_id": "MDQ6VXNlcjgwODc2OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8087694?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chenhaihong",
      "html_url": "https://github.com/chenhaihong",
      "followers_url": "https://api.github.com/users/chenhaihong/followers",
      "following_url": "https://api.github.com/users/chenhaihong/following{/other_user}",
      "gists_url": "https://api.github.com/users/chenhaihong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chenhaihong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chenhaihong/subscriptions",
      "organizations_url": "https://api.github.com/users/chenhaihong/orgs",
      "repos_url": "https://api.github.com/users/chenhaihong/repos",
      "events_url": "https://api.github.com/users/chenhaihong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chenhaihong/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-04-11T05:52:27Z",
    "updated_at": "2019-04-11T06:49:41Z",
    "closed_at": "2019-04-11T05:56:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3929",
      "html_url": "https://github.com/expressjs/express/pull/3929",
      "diff_url": "https://github.com/expressjs/express/pull/3929.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3929.patch",
      "merged_at": null
    },
    "body": "While require a module like `const x = require(variable);`, Webpack will\r\nprint this warning `Critical dependency: the request of a dependency is\r\nan expression`.\r\n\r\nBased on webpack/webpack#196 (comment).",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3929/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3929/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3928",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3928/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3928/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3928/events",
    "html_url": "https://github.com/expressjs/express/pull/3928",
    "id": 431839900,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjY5NDI4Njcx",
    "number": 3928,
    "title": "Fix issue #2832.",
    "user": {
      "login": "chenhaihong",
      "id": 8087694,
      "node_id": "MDQ6VXNlcjgwODc2OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8087694?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chenhaihong",
      "html_url": "https://github.com/chenhaihong",
      "followers_url": "https://api.github.com/users/chenhaihong/followers",
      "following_url": "https://api.github.com/users/chenhaihong/following{/other_user}",
      "gists_url": "https://api.github.com/users/chenhaihong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chenhaihong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chenhaihong/subscriptions",
      "organizations_url": "https://api.github.com/users/chenhaihong/orgs",
      "repos_url": "https://api.github.com/users/chenhaihong/repos",
      "events_url": "https://api.github.com/users/chenhaihong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chenhaihong/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-04-11T05:45:18Z",
    "updated_at": "2019-04-11T06:49:41Z",
    "closed_at": "2019-04-11T05:49:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3928",
      "html_url": "https://github.com/expressjs/express/pull/3928",
      "diff_url": "https://github.com/expressjs/express/pull/3928.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3928.patch",
      "merged_at": null
    },
    "body": "While require a module like `const x = require(variable);`, Webpack will\r\nprint this warning `Critical dependency: the request of a dependency is\r\nan expression`.\r\n\r\nBased on https://github.com/webpack/webpack/issues/196#issuecomment-354900072.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3928/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3928/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3927",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3927/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3927/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3927/events",
    "html_url": "https://github.com/expressjs/express/issues/3927",
    "id": 431112879,
    "node_id": "MDU6SXNzdWU0MzExMTI4Nzk=",
    "number": 3927,
    "title": "Setting Up CI with Azure Pipelines",
    "user": {
      "login": "mickeygousset",
      "id": 20031479,
      "node_id": "MDQ6VXNlcjIwMDMxNDc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/20031479?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mickeygousset",
      "html_url": "https://github.com/mickeygousset",
      "followers_url": "https://api.github.com/users/mickeygousset/followers",
      "following_url": "https://api.github.com/users/mickeygousset/following{/other_user}",
      "gists_url": "https://api.github.com/users/mickeygousset/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mickeygousset/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mickeygousset/subscriptions",
      "organizations_url": "https://api.github.com/users/mickeygousset/orgs",
      "repos_url": "https://api.github.com/users/mickeygousset/repos",
      "events_url": "https://api.github.com/users/mickeygousset/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mickeygousset/received_events",
      "type": "User",
      "site_admin": true
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-04-09T18:28:58Z",
    "updated_at": "2019-04-11T02:40:19Z",
    "closed_at": "2019-04-10T22:10:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I wanted to open a discussion to look at using Azure Pipelines for the build process for ExpressJS/Express.  I've created an Azure Pipelines build for express. This build will work for both Linux and Windows. I'd be happy to work with you to get this set up for your review, or show you the results from my fork. [Here is the PR 3924](https://github.com/expressjs/express/pull/3924)\r\n\r\nIt can upload coveralls information for both Linux and Windows. You just need to create a build variable with your coveralls key.  Build time for the entire build (Linux + Windows) was around 8 minutes.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3927/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3927/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3925",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3925/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3925/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3925/events",
    "html_url": "https://github.com/expressjs/express/issues/3925",
    "id": 429685029,
    "node_id": "MDU6SXNzdWU0Mjk2ODUwMjk=",
    "number": 3925,
    "title": "Async setTimeout callback blocks express processing until res.send",
    "user": {
      "login": "tiagosiebler",
      "id": 14090872,
      "node_id": "MDQ6VXNlcjE0MDkwODcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/14090872?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tiagosiebler",
      "html_url": "https://github.com/tiagosiebler",
      "followers_url": "https://api.github.com/users/tiagosiebler/followers",
      "following_url": "https://api.github.com/users/tiagosiebler/following{/other_user}",
      "gists_url": "https://api.github.com/users/tiagosiebler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tiagosiebler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tiagosiebler/subscriptions",
      "organizations_url": "https://api.github.com/users/tiagosiebler/orgs",
      "repos_url": "https://api.github.com/users/tiagosiebler/repos",
      "events_url": "https://api.github.com/users/tiagosiebler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tiagosiebler/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-04-05T10:22:04Z",
    "updated_at": "2019-04-05T11:20:57Z",
    "closed_at": "2019-04-05T11:20:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This stemmed from the discussion here:\r\nhttps://stackoverflow.com/questions/55524606/async-settimeout-blocks-express-processing-until-res-send-happens\r\n\r\nI've simplified the issue to purely setTimeout() to delay until I call res.send().\r\n\r\nIf I send 3 requests in parallel, each request is delayed in serial until the previous request calls res.send(). Is this expected? setTimeout is not a CPU intensive main-thread-blocking task, why does this prevent express from handling other api requests happening in parallel?\r\n\r\nSandbox: https://codesandbox.io/embed/nr41lkw95j\r\n\r\nI'm testing 3 parallel requests by triggering this in terminal: \r\ncurl https://nr41lkw95j.sse.codesandbox.io/test && curl https://nr41lkw95j.sse.codesandbox.io/test && curl https://nr41lkw95j.sse.codesandbox.io/test\r\n\r\nThe terminal on the sandbox server shows it's blocking request processing until the current request sends a response, even if things are happening in an async callback.\r\n\r\n![Screenshot 2019-04-05 at 11 15 23](https://user-images.githubusercontent.com/14090872/55621271-f349ff00-5794-11e9-8b06-1d2be5624fff.png)\r\n\r\nI'm already maintaining a cluster of workers for the CPU intensive executions, do I really need a cluster of express to also handle parallel incoming requests?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3925/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3925/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3924",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3924/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3924/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3924/events",
    "html_url": "https://github.com/expressjs/express/pull/3924",
    "id": 429548608,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjY3NjY0Mjg1",
    "number": 3924,
    "title": "Setting Up CI With Azure Pipelines",
    "user": {
      "login": "mickeygousset",
      "id": 20031479,
      "node_id": "MDQ6VXNlcjIwMDMxNDc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/20031479?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mickeygousset",
      "html_url": "https://github.com/mickeygousset",
      "followers_url": "https://api.github.com/users/mickeygousset/followers",
      "following_url": "https://api.github.com/users/mickeygousset/following{/other_user}",
      "gists_url": "https://api.github.com/users/mickeygousset/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mickeygousset/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mickeygousset/subscriptions",
      "organizations_url": "https://api.github.com/users/mickeygousset/orgs",
      "repos_url": "https://api.github.com/users/mickeygousset/repos",
      "events_url": "https://api.github.com/users/mickeygousset/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mickeygousset/received_events",
      "type": "User",
      "site_admin": true
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 15,
    "created_at": "2019-04-05T01:35:47Z",
    "updated_at": "2020-04-15T08:00:58Z",
    "closed_at": "2020-04-15T08:00:58Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3924",
      "html_url": "https://github.com/expressjs/express/pull/3924",
      "diff_url": "https://github.com/expressjs/express/pull/3924.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3924.patch",
      "merged_at": null
    },
    "body": "I've created an Azure Pipelines build for express. This build will work for both Linux and Windows. I'd be happy to work with you to get this set up for your review, or show you the results from my fork.\r\n\r\nIt can upload coveralls information for both Linux and Windows.  You just need to create a build variable with your coveralls key.  \r\n\r\nHere is a [partial view of the build completing for multiple Linux versions](https://user-images.githubusercontent.com/20031479/55598226-509f6b00-5717-11e9-847c-f089e507bcd2.png).\r\n\r\n[Test result information is also lit up.](https://user-images.githubusercontent.com/20031479/55598363-e4713700-5717-11e9-83ec-e6006511e667.png)\r\n\r\nBuild time for the entire build (Linux + Windows) was around 8 minutes.\r\n\r\nEDIT:\r\nalso added an issue related to this #3927 \r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3924/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3924/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3923",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3923/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3923/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3923/events",
    "html_url": "https://github.com/expressjs/express/issues/3923",
    "id": 429538445,
    "node_id": "MDU6SXNzdWU0Mjk1Mzg0NDU=",
    "number": 3923,
    "title": "Regex path work 1/2 time",
    "user": {
      "login": "Olyno",
      "id": 25107942,
      "node_id": "MDQ6VXNlcjI1MTA3OTQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/25107942?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Olyno",
      "html_url": "https://github.com/Olyno",
      "followers_url": "https://api.github.com/users/Olyno/followers",
      "following_url": "https://api.github.com/users/Olyno/following{/other_user}",
      "gists_url": "https://api.github.com/users/Olyno/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Olyno/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Olyno/subscriptions",
      "organizations_url": "https://api.github.com/users/Olyno/orgs",
      "repos_url": "https://api.github.com/users/Olyno/repos",
      "events_url": "https://api.github.com/users/Olyno/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Olyno/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-04-05T00:37:48Z",
    "updated_at": "2019-04-05T00:41:24Z",
    "closed_at": "2019-04-05T00:40:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\r\nI've been working on Express for a while now and I just discovered a bug during my optimization. Indeed, paths in the form of regex only work once in two.\r\n\r\n**Code**\r\n```javascript\r\nconst express = require('express')\r\nconst app = express()\r\n\r\napp.get(/\\//gmu, function (req, res) {\r\n    res.send('Hello World!')\r\n})\r\n\r\napp.listen(80, function () {\r\n  console.log('Example app listening on port 80!')\r\n})\r\n```\r\n\r\n**Error**\r\n``Cannot GET /``\r\n\r\n**Result**\r\n![](https://i.imgur.com/Eq1dBGg.gif)",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3923/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3923/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3922",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3922/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3922/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3922/events",
    "html_url": "https://github.com/expressjs/express/issues/3922",
    "id": 429527452,
    "node_id": "MDU6SXNzdWU0Mjk1Mjc0NTI=",
    "number": 3922,
    "title": "what's the difference between --view=pug and --pug?",
    "user": {
      "login": "bi-kai",
      "id": 15070379,
      "node_id": "MDQ6VXNlcjE1MDcwMzc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/15070379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bi-kai",
      "html_url": "https://github.com/bi-kai",
      "followers_url": "https://api.github.com/users/bi-kai/followers",
      "following_url": "https://api.github.com/users/bi-kai/following{/other_user}",
      "gists_url": "https://api.github.com/users/bi-kai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bi-kai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bi-kai/subscriptions",
      "organizations_url": "https://api.github.com/users/bi-kai/orgs",
      "repos_url": "https://api.github.com/users/bi-kai/repos",
      "events_url": "https://api.github.com/users/bi-kai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bi-kai/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-04-04T23:40:25Z",
    "updated_at": "2019-04-04T23:46:08Z",
    "closed_at": "2019-04-04T23:45:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "express version: 4.16.4\r\nInit a project with generator, what's the difference between --view=pug and --pug?\r\n```\r\nexpress --view=pug myapp\r\nexpress --pug myapp\r\nexpress --view=pug --pug myapp\r\n```\r\nIs there any difference?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3922/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3922/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3921",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3921/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3921/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3921/events",
    "html_url": "https://github.com/expressjs/express/pull/3921",
    "id": 428286238,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjY2NjkwNDEx",
    "number": 3921,
    "title": "Install node on different OS is now conditional",
    "user": {
      "login": "tspascoal",
      "id": 7847935,
      "node_id": "MDQ6VXNlcjc4NDc5MzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7847935?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tspascoal",
      "html_url": "https://github.com/tspascoal",
      "followers_url": "https://api.github.com/users/tspascoal/followers",
      "following_url": "https://api.github.com/users/tspascoal/following{/other_user}",
      "gists_url": "https://api.github.com/users/tspascoal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tspascoal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tspascoal/subscriptions",
      "organizations_url": "https://api.github.com/users/tspascoal/orgs",
      "repos_url": "https://api.github.com/users/tspascoal/repos",
      "events_url": "https://api.github.com/users/tspascoal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tspascoal/received_events",
      "type": "User",
      "site_admin": true
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-04-02T15:11:58Z",
    "updated_at": "2019-04-02T15:15:09Z",
    "closed_at": "2019-04-02T15:15:09Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3921",
      "html_url": "https://github.com/expressjs/express/pull/3921",
      "diff_url": "https://github.com/expressjs/express/pull/3921.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3921.patch",
      "merged_at": null
    },
    "body": "The step only runs on the right os, so we don't have always have to steps (one executed other skipped) one for each OS.\r\n\r\nthe logs are now cleaner (at the expense of a parameter)",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3921/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3921/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3920",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3920/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3920/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3920/events",
    "html_url": "https://github.com/expressjs/express/issues/3920",
    "id": 427813863,
    "node_id": "MDU6SXNzdWU0Mjc4MTM4NjM=",
    "number": 3920,
    "title": "Express should not disclose error stack trace",
    "user": {
      "login": "bershanskiy",
      "id": 45960703,
      "node_id": "MDQ6VXNlcjQ1OTYwNzAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/45960703?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bershanskiy",
      "html_url": "https://github.com/bershanskiy",
      "followers_url": "https://api.github.com/users/bershanskiy/followers",
      "following_url": "https://api.github.com/users/bershanskiy/following{/other_user}",
      "gists_url": "https://api.github.com/users/bershanskiy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bershanskiy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bershanskiy/subscriptions",
      "organizations_url": "https://api.github.com/users/bershanskiy/orgs",
      "repos_url": "https://api.github.com/users/bershanskiy/repos",
      "events_url": "https://api.github.com/users/bershanskiy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bershanskiy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-04-01T16:59:34Z",
    "updated_at": "2019-04-01T17:06:35Z",
    "closed_at": "2019-04-01T17:04:02Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I could not find a listing for this issue so I'm creating a new one.\r\n\r\n# Summary\r\nThis is a proposal to change error handling for Express 5.0: not to send error details to client.\r\n\r\nBy default, if one of user-provided middlewares throws an error, Express relays all debugging details (even stack trace) to the client. This is convenient for debugging (because you don't have to look at the server console and can look at browser dev tools), but, in my opinion, (in production) might provide more data to an adversary.\r\n\r\n# Proposal\r\n\r\nDo not send the error stack trace to the client by default. Instead, send a generic 500 status code and a short blurb telling the developer to go look at the server console (or how to enable current behavior).\r\n\r\n# \"Fix\" usable with Express 4.*\r\n```\r\n  // Do not leak details about internal errors\r\n  server.use((error, request, response, next) => {\r\n    // Log error message for later review in server console\r\n    // because this error no longer gets logged by Express 4.*\r\n    console.error(\"Prevented sending this error to client:\\n\", error)\r\n\r\n    // If HTTP Status Code is not set, default to '500 Internal Server Error (500)'\r\n    const status = error.statusCode ? error.statusCode : 500\r\n\r\n    response.status(status)\r\n    response.send('Internal server error. Check server console for details.')\r\n  })\r\n```\r\n\r\n# Motivation: Why this should change?\r\nConsole output discloses internal server information, which might be usable for an attacker during recon phase. I was unaware that Express sends full stack trace to the client and, in my opinion, developers can not account for this in their threat model.\r\n\r\nPlease tell me if you need any more details.\r\n\r\nSomewhat related issue about handling 4** errors: #2263",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3920/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3920/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3919",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3919/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3919/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3919/events",
    "html_url": "https://github.com/expressjs/express/issues/3919",
    "id": 427651813,
    "node_id": "MDU6SXNzdWU0Mjc2NTE4MTM=",
    "number": 3919,
    "title": "Error in depd module node upgradation 8.x.x ",
    "user": {
      "login": "Ashish131989",
      "id": 49152085,
      "node_id": "MDQ6VXNlcjQ5MTUyMDg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/49152085?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ashish131989",
      "html_url": "https://github.com/Ashish131989",
      "followers_url": "https://api.github.com/users/Ashish131989/followers",
      "following_url": "https://api.github.com/users/Ashish131989/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ashish131989/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ashish131989/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ashish131989/subscriptions",
      "organizations_url": "https://api.github.com/users/Ashish131989/orgs",
      "repos_url": "https://api.github.com/users/Ashish131989/repos",
      "events_url": "https://api.github.com/users/Ashish131989/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ashish131989/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 12,
    "created_at": "2019-04-01T11:26:41Z",
    "updated_at": "2022-02-09T14:23:05Z",
    "closed_at": "2019-04-25T15:17:48Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "Getting TypeError: callSite.getFileName is not a function error after upgrading node version from 6.14.3 to 8.15.1.\r\nsame issue is gettting for 10.x.x node version.\r\n\r\nI did update the version which were listed as outdated but still facing same issue for some of the dependent module.\r\n```\r\nErrors:\r\nvar file = callSite.getFileName() || ‘’\r\nTypeError: callSite.getFileName is not a function\r\nDependent Module:\r\nnode_modules\\body-parser\\node_modules\\depd\\index.js:252:1234:\r\nnode_modules\\sandboxed-module\\lib\\sandboxed_module.js:251:19\r\nnode_modules\\body-parser\\index.js:14:32)\r\n```\r\nhow can I get the compitable versions of dependant modules",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3919/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3919/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3918",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3918/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3918/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3918/events",
    "html_url": "https://github.com/expressjs/express/issues/3918",
    "id": 426669547,
    "node_id": "MDU6SXNzdWU0MjY2Njk1NDc=",
    "number": 3918,
    "title": "response.js line 749 typo",
    "user": {
      "login": "AnsonSavage",
      "id": 12112399,
      "node_id": "MDQ6VXNlcjEyMTEyMzk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/12112399?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AnsonSavage",
      "html_url": "https://github.com/AnsonSavage",
      "followers_url": "https://api.github.com/users/AnsonSavage/followers",
      "following_url": "https://api.github.com/users/AnsonSavage/following{/other_user}",
      "gists_url": "https://api.github.com/users/AnsonSavage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AnsonSavage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AnsonSavage/subscriptions",
      "organizations_url": "https://api.github.com/users/AnsonSavage/orgs",
      "repos_url": "https://api.github.com/users/AnsonSavage/repos",
      "events_url": "https://api.github.com/users/AnsonSavage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AnsonSavage/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-03-28T19:28:42Z",
    "updated_at": "2019-03-28T19:30:36Z",
    "closed_at": "2019-03-28T19:30:30Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Line 749 in response.js has \r\n`res.set =`\r\nand nothing else. I'm assuming this is a typo?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3918/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3918/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3917",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3917/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3917/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3917/events",
    "html_url": "https://github.com/expressjs/express/issues/3917",
    "id": 424991187,
    "node_id": "MDU6SXNzdWU0MjQ5OTExODc=",
    "number": 3917,
    "title": "req.user getting undefined ",
    "user": {
      "login": "buddies2705",
      "id": 6241365,
      "node_id": "MDQ6VXNlcjYyNDEzNjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6241365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/buddies2705",
      "html_url": "https://github.com/buddies2705",
      "followers_url": "https://api.github.com/users/buddies2705/followers",
      "following_url": "https://api.github.com/users/buddies2705/following{/other_user}",
      "gists_url": "https://api.github.com/users/buddies2705/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/buddies2705/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/buddies2705/subscriptions",
      "organizations_url": "https://api.github.com/users/buddies2705/orgs",
      "repos_url": "https://api.github.com/users/buddies2705/repos",
      "events_url": "https://api.github.com/users/buddies2705/events{/privacy}",
      "received_events_url": "https://api.github.com/users/buddies2705/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-03-25T16:15:01Z",
    "updated_at": "2019-04-01T02:22:42Z",
    "closed_at": "2019-04-01T02:22:37Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I know this is not a good place to ask this question but I tried everywhere, but still not able to solve the problem \r\n\r\nhttps://stackoverflow.com/questions/55305191/passport-nodejs-express-getting-req-user-undefined",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3917/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3917/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3916",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3916/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3916/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3916/events",
    "html_url": "https://github.com/expressjs/express/issues/3916",
    "id": 424938926,
    "node_id": "MDU6SXNzdWU0MjQ5Mzg5MjY=",
    "number": 3916,
    "title": "Error resolving route - layer.match is not a function",
    "user": {
      "login": "keerthy-cf",
      "id": 25296938,
      "node_id": "MDQ6VXNlcjI1Mjk2OTM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/25296938?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/keerthy-cf",
      "html_url": "https://github.com/keerthy-cf",
      "followers_url": "https://api.github.com/users/keerthy-cf/followers",
      "following_url": "https://api.github.com/users/keerthy-cf/following{/other_user}",
      "gists_url": "https://api.github.com/users/keerthy-cf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/keerthy-cf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/keerthy-cf/subscriptions",
      "organizations_url": "https://api.github.com/users/keerthy-cf/orgs",
      "repos_url": "https://api.github.com/users/keerthy-cf/repos",
      "events_url": "https://api.github.com/users/keerthy-cf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/keerthy-cf/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 17,
    "created_at": "2019-03-25T14:40:10Z",
    "updated_at": "2022-12-25T09:14:01Z",
    "closed_at": "2019-05-16T19:15:36Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\r\n\r\nWe are running into an issue where we are seeing sometimes express server going to a bad state and all requests started to fail with the following stack trace.\r\n\r\nVersions \r\n\"express\": \"4.16.1\"\r\n\"inversify-express-utils: \"6.3.2\"\r\n\r\n```\r\nTypeError: layer.match is not a function\r\nat matchLayer (/sample-api/node_modules/inversify-express-utils/node_modules/express/lib/router/index.js:574:18)\r\nat next (/sample-api/node_modules/inversify-express-utils/node_modules/express/lib/router/index.js:220:15)\r\nat Function.handle (/sample-api/node_modules/inversify-express-utils/node_modules/express/lib/router/index.js:174:3)\r\nat Function.handle (/sample-api/node_modules/inversify-express-utils/node_modules/express/lib/application.js:174:10)\r\nat Server.app (/sample-api/node_modules/inversify-express-utils/node_modules/express/lib/express.js:39:9)\r\nat emitTwo (events.js:126:13)\r\nat Server.emit (events.js:214:7)\r\nat Server.wrapped (/sample-api/node_modules/newrelic/lib/transaction/tracer/index.js:181:22)\r\nat Server.wrappedHandler (/sample-api/node_modules/newrelic/lib/instrumentation/core/http.js:215:47)\r\nat Server.wrapped (/sample-api/node_modules/newrelic/lib/transaction/tracer/index.js:181:22)\r\nat Server.wrapTransactionInvocation (/sample-api/node_modules/newrelic/lib/transaction/tracer/index.js:108:8)\r\nat Server.wrappedEmit [as emit] (/sample-api/node_modules/newrelic/lib/instrumentation/core/http.js:487:28)\r\nat parserOnIncoming (_http_server.js:660:12)\r\nat HTTPParser.parserOnHeadersComplete (_http_common.js:119:17)\r\n```\r\n\r\nLooking at the latest code, it seems fine. Can you please check and update ?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3916/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3916/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3915",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3915/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3915/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3915/events",
    "html_url": "https://github.com/expressjs/express/issues/3915",
    "id": 424492436,
    "node_id": "MDU6SXNzdWU0MjQ0OTI0MzY=",
    "number": 3915,
    "title": "Trying to create a discord bot",
    "user": {
      "login": "darksoulsforever4",
      "id": 48857432,
      "node_id": "MDQ6VXNlcjQ4ODU3NDMy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48857432?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darksoulsforever4",
      "html_url": "https://github.com/darksoulsforever4",
      "followers_url": "https://api.github.com/users/darksoulsforever4/followers",
      "following_url": "https://api.github.com/users/darksoulsforever4/following{/other_user}",
      "gists_url": "https://api.github.com/users/darksoulsforever4/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darksoulsforever4/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darksoulsforever4/subscriptions",
      "organizations_url": "https://api.github.com/users/darksoulsforever4/orgs",
      "repos_url": "https://api.github.com/users/darksoulsforever4/repos",
      "events_url": "https://api.github.com/users/darksoulsforever4/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darksoulsforever4/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-03-23T11:48:40Z",
    "updated_at": "2019-04-17T22:25:32Z",
    "closed_at": "2019-04-17T22:25:18Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hey so I tried to create a discord bot lately, when I tried to install the packages it gave me this issue\r\n```\r\nC:\\Users\\User-PC\\Desktop\\Bot>npm install discord.io winston -save.\r\nnpm ERR! file C:\\Users\\User-PC\\Desktop\\Bot\\package.json\r\nnpm ERR! code EJSONPARSE\r\nnpm ERR! JSON.parse Failed to parse json\r\nnpm ERR! JSON.parse Unexpected token � in JSON at position 3 while parsing near '{\r\nnpm ERR! JSON.parse �name�: �greeter-bot...'\r\nnpm ERR! JSON.parse Failed to parse package.json data.\r\nnpm ERR! JSON.parse package.json must be actual JSON, not just JavaScript.\r\n\r\nnpm ERR! A complete log of this run can be found in:\r\nnpm ERR!     C:\\Users\\User-PC\\AppData\\Roaming\\npm-cache\\_logs\\2019-03-23T11_40_15_695Z-debug.log\r\n```\r\nHere is my package.json file\r\n```\r\n{\r\n“name”: “greeter-bot”,\r\n“version”: “1”,\r\n“description”: “Sobby can do all sorts fo stuff!”,\r\n“main”: “bot.js”,\r\n“author”: “Laycrab TTV”,\r\n“dependencies”: {}\r\n}\r\n```\r\nThank you for your help",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3915/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3915/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3914",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3914/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3914/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3914/events",
    "html_url": "https://github.com/expressjs/express/issues/3914",
    "id": 424020555,
    "node_id": "MDU6SXNzdWU0MjQwMjA1NTU=",
    "number": 3914,
    "title": "domain level router",
    "user": {
      "login": "WinWinHost",
      "id": 812602,
      "node_id": "MDQ6VXNlcjgxMjYwMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/812602?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WinWinHost",
      "html_url": "https://github.com/WinWinHost",
      "followers_url": "https://api.github.com/users/WinWinHost/followers",
      "following_url": "https://api.github.com/users/WinWinHost/following{/other_user}",
      "gists_url": "https://api.github.com/users/WinWinHost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WinWinHost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WinWinHost/subscriptions",
      "organizations_url": "https://api.github.com/users/WinWinHost/orgs",
      "repos_url": "https://api.github.com/users/WinWinHost/repos",
      "events_url": "https://api.github.com/users/WinWinHost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WinWinHost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-03-22T02:31:46Z",
    "updated_at": "2019-03-22T03:09:23Z",
    "closed_at": "2019-03-22T03:09:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This is absolutely a necessary feature to express. \r\nDon't say this is an NGINX job, or Apache or some other higher level proxy.\r\n\r\nWe need to be able to have middleware per domain. \r\n\r\nhttps://stackoverflow.com/questions/26528732/how-to-bind-a-domain-name-to-expressjs-application/55292030#55292030",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3914/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3914/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3913",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3913/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3913/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3913/events",
    "html_url": "https://github.com/expressjs/express/issues/3913",
    "id": 423891984,
    "node_id": "MDU6SXNzdWU0MjM4OTE5ODQ=",
    "number": 3913,
    "title": "should I use express for future projects?",
    "user": {
      "login": "laoshaw",
      "id": 18351761,
      "node_id": "MDQ6VXNlcjE4MzUxNzYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/18351761?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laoshaw",
      "html_url": "https://github.com/laoshaw",
      "followers_url": "https://api.github.com/users/laoshaw/followers",
      "following_url": "https://api.github.com/users/laoshaw/following{/other_user}",
      "gists_url": "https://api.github.com/users/laoshaw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laoshaw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laoshaw/subscriptions",
      "organizations_url": "https://api.github.com/users/laoshaw/orgs",
      "repos_url": "https://api.github.com/users/laoshaw/repos",
      "events_url": "https://api.github.com/users/laoshaw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laoshaw/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 47,
    "created_at": "2019-03-21T18:58:11Z",
    "updated_at": "2020-02-05T15:08:22Z",
    "closed_at": "2020-02-05T15:08:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "express was the most promising web server for node.js, it seems the development has been slowing down considerably for the last few years, as of today ES6 is not added, no async/await work in sight either, this is quite a surprise considering the (still) fast advancements on frontend frameworks, node.js and javascript. What is going on? \r\n\r\nMaybe it's time for a fundraise to re-ignite the development for this great project? or is there something else replacing it so nobody cares that much? or node.js framework is losing its popularity in general after some over-hyper? \r\n\r\nReally want to see a django alike framework in node.js.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3913/reactions",
      "total_count": 13,
      "+1": 12,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 1,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3913/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3912",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3912/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3912/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3912/events",
    "html_url": "https://github.com/expressjs/express/pull/3912",
    "id": 423423844,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjYyOTk4NzEy",
    "number": 3912,
    "title": "Update .travis.yml",
    "user": {
      "login": "Sharkbyteprojects",
      "id": 40953479,
      "node_id": "MDQ6VXNlcjQwOTUzNDc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/40953479?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sharkbyteprojects",
      "html_url": "https://github.com/Sharkbyteprojects",
      "followers_url": "https://api.github.com/users/Sharkbyteprojects/followers",
      "following_url": "https://api.github.com/users/Sharkbyteprojects/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sharkbyteprojects/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sharkbyteprojects/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sharkbyteprojects/subscriptions",
      "organizations_url": "https://api.github.com/users/Sharkbyteprojects/orgs",
      "repos_url": "https://api.github.com/users/Sharkbyteprojects/repos",
      "events_url": "https://api.github.com/users/Sharkbyteprojects/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sharkbyteprojects/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-03-20T19:04:17Z",
    "updated_at": "2019-03-20T19:05:12Z",
    "closed_at": "2019-03-20T19:05:12Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3912",
      "html_url": "https://github.com/expressjs/express/pull/3912",
      "diff_url": "https://github.com/expressjs/express/pull/3912.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3912.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3912/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3912/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3911",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3911/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3911/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3911/events",
    "html_url": "https://github.com/expressjs/express/issues/3911",
    "id": 422741512,
    "node_id": "MDU6SXNzdWU0MjI3NDE1MTI=",
    "number": 3911,
    "title": "This error is thrown when I run my project.",
    "user": {
      "login": "imjamesb",
      "id": 35933830,
      "node_id": "MDQ6VXNlcjM1OTMzODMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/35933830?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/imjamesb",
      "html_url": "https://github.com/imjamesb",
      "followers_url": "https://api.github.com/users/imjamesb/followers",
      "following_url": "https://api.github.com/users/imjamesb/following{/other_user}",
      "gists_url": "https://api.github.com/users/imjamesb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/imjamesb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/imjamesb/subscriptions",
      "organizations_url": "https://api.github.com/users/imjamesb/orgs",
      "repos_url": "https://api.github.com/users/imjamesb/repos",
      "events_url": "https://api.github.com/users/imjamesb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/imjamesb/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2019-03-19T13:47:35Z",
    "updated_at": "2019-07-30T16:28:22Z",
    "closed_at": "2019-03-22T01:36:02Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When I enter my express website it works the first time, but when the website has been loaded this error is thrown and stops the process, the website can no longer be accessed without starting the server again.\r\n\r\n```\r\n/Users/adm/errorsparty/www.test.code/node_modules/express/lib/router/index.js:635\r\n    return fn.apply(this, arguments);\r\n              ^\r\n\r\nTypeError: Cannot read property 'apply' of undefined\r\n    at Immediate.<anonymous> (/Users/adm/errorsparty/www.test.code/node_modules/express/lib/router/index.js:635:15)\r\n    at processImmediate (timers.js:640:17)\r\n```\r\n\r\nSource code:\r\n\r\n```js\r\nconst Express = require(\"express\");\r\nconst static = Express.static(__dirname + \"/../www\");\r\nconst router = Express.Router();\r\nrouter.use(static);\r\nmodule.exports = () => router;\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3911/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3911/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3910",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3910/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3910/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3910/events",
    "html_url": "https://github.com/expressjs/express/issues/3910",
    "id": 422478075,
    "node_id": "MDU6SXNzdWU0MjI0NzgwNzU=",
    "number": 3910,
    "title": "req.subdomain??",
    "user": {
      "login": "knoxcard",
      "id": 7561190,
      "node_id": "MDQ6VXNlcjc1NjExOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7561190?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/knoxcard",
      "html_url": "https://github.com/knoxcard",
      "followers_url": "https://api.github.com/users/knoxcard/followers",
      "following_url": "https://api.github.com/users/knoxcard/following{/other_user}",
      "gists_url": "https://api.github.com/users/knoxcard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/knoxcard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/knoxcard/subscriptions",
      "organizations_url": "https://api.github.com/users/knoxcard/orgs",
      "repos_url": "https://api.github.com/users/knoxcard/repos",
      "events_url": "https://api.github.com/users/knoxcard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/knoxcard/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-03-18T23:25:35Z",
    "updated_at": "2019-03-19T14:44:03Z",
    "closed_at": "2019-03-18T23:27:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "There is a req.subdomains but not a req.subdomain?? What on earth??",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3910/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3910/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3909",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3909/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3909/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3909/events",
    "html_url": "https://github.com/expressjs/express/issues/3909",
    "id": 421911498,
    "node_id": "MDU6SXNzdWU0MjE5MTE0OTg=",
    "number": 3909,
    "title": "render still uses sync API in 5.0",
    "user": {
      "login": "JuanIrache",
      "id": 5341183,
      "node_id": "MDQ6VXNlcjUzNDExODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5341183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JuanIrache",
      "html_url": "https://github.com/JuanIrache",
      "followers_url": "https://api.github.com/users/JuanIrache/followers",
      "following_url": "https://api.github.com/users/JuanIrache/following{/other_user}",
      "gists_url": "https://api.github.com/users/JuanIrache/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JuanIrache/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JuanIrache/subscriptions",
      "organizations_url": "https://api.github.com/users/JuanIrache/orgs",
      "repos_url": "https://api.github.com/users/JuanIrache/repos",
      "events_url": "https://api.github.com/users/JuanIrache/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JuanIrache/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-03-17T11:33:22Z",
    "updated_at": "2019-03-17T17:13:06Z",
    "closed_at": "2019-03-17T14:04:20Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\r\n\r\nI updated to 5.0.0-alpha.7 because I understood render would stop using sync API as it did in 4.x, but when running my app with --trace-sync-io I still get all the warnings:\r\n\r\n> (node:380) WARNING: Detected use of sync API\r\n>     at fs.statSync (fs.js:948:11)\r\n>     at tryStat (/node_modules/express/lib/view.js:201:15)\r\n>     at resolve (/node_modules/express/lib/view.js:174:14)\r\n>     at lookup (/node_modules/express/lib/view.js:119:17)\r\n>     at View (/node_modules/express/lib/view.js:94:20)\r\n>     at render (/node_modules/express/lib/application.js:556:12)\r\n>     at render (/node_modules/express/lib/response.js:869:7)\r\n> (node:380) WARNING: Detected use of sync API\r\n>     at fs.openSync (fs.js:646:18)\r\n>     at fs.readFileSync (fs.js:551:33)\r\n>     at fileLoader (/node_modules/ejs/lib/ejs.js:270:18)\r\n>     at handleCache (/node_modules/ejs/lib/ejs.js:201:18)\r\n>     at tryHandleCache (/node_modules/ejs/lib/ejs.js:251:16)\r\n>     at exports.renderFile (/node_modules/ejs/lib/ejs.js:482:10)\r\n>     at render (/node_modules/express/lib/view.js:139:8)\r\n>     at tryRender (/node_modules/express/lib/application.js:626:10)\r\n>     at render (/node_modules/express/lib/application.js:578:3)\r\n> (node:380) WARNING: Detected use of sync API\r\n>     at tryStatSync (fs.js:517:13)\r\n>     at fs.readFileSync (fs.js:553:3)\r\n>     at fileLoader (/node_modules/ejs/lib/ejs.js:270:18)\r\n>     at handleCache (/node_modules/ejs/lib/ejs.js:201:18)\r\n>     at tryHandleCache (/node_modules/ejs/lib/ejs.js:251:16)\r\n>     at exports.renderFile (/node_modules/ejs/lib/ejs.js:482:10)\r\n>     at render (/node_modules/express/lib/view.js:139:8)\r\n>     at tryRender (/node_modules/express/lib/application.js:626:10)\r\n>     at render (/node_modules/express/lib/application.js:578:3)\r\n> (node:380) WARNING: Detected use of sync API\r\n>     at fs.readSync (fs.js:675:18)\r\n>     at tryReadSync (fs.js:540:20)\r\n>     at fs.readFileSync (fs.js:575:19)\r\n>     at fileLoader (/node_modules/ejs/lib/ejs.js:270:18)\r\n>     at handleCache (/node_modules/ejs/lib/ejs.js:201:18)\r\n>     at tryHandleCache (/node_modules/ejs/lib/ejs.js:251:16)\r\n>     at exports.renderFile (/node_modules/ejs/lib/ejs.js:482:10)\r\n>     at render (/node_modules/express/lib/view.js:139:8)\r\n>     at tryRender (/node_modules/express/lib/application.js:626:10)\r\n> (node:380) WARNING: Detected use of sync API\r\n>     at fs.closeSync (fs.js:612:18)\r\n>     at /node_modules/graceful-fs/graceful-fs.js:51:27\r\n>     at fs.readFileSync (fs.js:592:8)\r\n>     at fileLoader (/node_modules/ejs/lib/ejs.js:270:18)\r\n>     at handleCache (/node_modules/ejs/lib/ejs.js:201:18)\r\n>     at tryHandleCache (/node_modules/ejs/lib/ejs.js:251:16)\r\n>     at exports.renderFile (/node_modules/ejs/lib/ejs.js:482:10)\r\n>     at render (/node_modules/express/lib/view.js:139:8)\r\n>     at tryRender (/node_modules/express/lib/application.js:626:10)\r\n\r\nCould I be missing something? I use EJS as my view engine.\r\n\r\nThanks",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3909/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3909/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3908",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3908/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3908/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3908/events",
    "html_url": "https://github.com/expressjs/express/issues/3908",
    "id": 421828023,
    "node_id": "MDU6SXNzdWU0MjE4MjgwMjM=",
    "number": 3908,
    "title": "How to mock IP address for testing?",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 15,
    "created_at": "2019-03-16T16:44:12Z",
    "updated_at": "2022-02-21T09:26:52Z",
    "closed_at": "2019-04-11T01:34:43Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I need to test blocking certain ip addresses. I tried to implement a test middleware to mock IP addresses but it seems I cannot overwrite the `req.connection.remoteAddress` value.\r\n\r\nExample:\r\n```javascript\r\nconst ipMocker = (req, res, next) => {\r\n  req.connection.remoteAddress = '1.10.188.202'\r\n  // this value reverts to original\r\n  next()\r\n}\r\n```\r\n\r\nI do not want to test using the 'trust proxy' method.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3908/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3908/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3907",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3907/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3907/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3907/events",
    "html_url": "https://github.com/expressjs/express/issues/3907",
    "id": 420784790,
    "node_id": "MDU6SXNzdWU0MjA3ODQ3OTA=",
    "number": 3907,
    "title": "Option to append trailing newline to json responses",
    "user": {
      "login": "daurnimator",
      "id": 127971,
      "node_id": "MDQ6VXNlcjEyNzk3MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127971?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/daurnimator",
      "html_url": "https://github.com/daurnimator",
      "followers_url": "https://api.github.com/users/daurnimator/followers",
      "following_url": "https://api.github.com/users/daurnimator/following{/other_user}",
      "gists_url": "https://api.github.com/users/daurnimator/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/daurnimator/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daurnimator/subscriptions",
      "organizations_url": "https://api.github.com/users/daurnimator/orgs",
      "repos_url": "https://api.github.com/users/daurnimator/repos",
      "events_url": "https://api.github.com/users/daurnimator/events{/privacy}",
      "received_events_url": "https://api.github.com/users/daurnimator/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2019-03-14T00:57:19Z",
    "updated_at": "2020-02-25T16:11:06Z",
    "closed_at": "2019-12-21T19:01:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Appending a trailing newline would make it easier to look at json-returning endpoints with curl.\r\nI don't see any major issues with making a trailing newline the default; however if that is not possible, then I'd love a new app setting e.g. `\"json append\"` that allows a developer to append a newline.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3907/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 1,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3907/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3906",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3906/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3906/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3906/events",
    "html_url": "https://github.com/expressjs/express/issues/3906",
    "id": 418869480,
    "node_id": "MDU6SXNzdWU0MTg4Njk0ODA=",
    "number": 3906,
    "title": "Express HTTPS starts but serves no content",
    "user": {
      "login": "dldereklee",
      "id": 20377366,
      "node_id": "MDQ6VXNlcjIwMzc3MzY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/20377366?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dldereklee",
      "html_url": "https://github.com/dldereklee",
      "followers_url": "https://api.github.com/users/dldereklee/followers",
      "following_url": "https://api.github.com/users/dldereklee/following{/other_user}",
      "gists_url": "https://api.github.com/users/dldereklee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dldereklee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dldereklee/subscriptions",
      "organizations_url": "https://api.github.com/users/dldereklee/orgs",
      "repos_url": "https://api.github.com/users/dldereklee/repos",
      "events_url": "https://api.github.com/users/dldereklee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dldereklee/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2019-03-08T16:52:52Z",
    "updated_at": "2019-03-10T07:38:57Z",
    "closed_at": "2019-03-10T00:14:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi there,\r\n\r\nI am using Express v 4.16.3\r\nI am currently trying to set up HTTPS for my app so I added the following to my bin/www \r\n\r\n```\r\n/**\r\n * Add HTTPS server\r\n */\r\n\r\nif (process.env.NODE_ENV === 'prod') {\r\n    https\r\n        .createServer(\r\n            {\r\n                key: fs.readFileSync('sslcerts/server.key', 'utf8'),\r\n                cert: fs.readFileSync('sslcerts/server.pem', 'utf8')\r\n            },\r\n            app\r\n        )\r\n        .listen(443, function() {\r\n            console.log('HTTPS listening on PORT 443');\r\n        });\r\n}\r\n```\r\nWhen I start my Express server, the app successfully starts (I can see the 'HTTPS listening on PORT 443' message in the console), but when I go to access the port I get ERR_EMPTY_RESPONSE in the browser. When I access the port for the HTTP version of my app, it is working fine and the content is being displayed.\r\n\r\nSo far I have tried:\r\n\r\n1. Mapping to PORT 8443 in case there were permission-errors with mapping to 443. Still same behavior\r\n2. Swapping out SSL certs with new self-signed ones in case there was something wrong with the ones that I was provided with. No change, same behavior.\r\n\r\nAny help is much appreciated. I'm trying to see what else I can do to debug this, but since there is no error thrown by Express I don't really know what else to try. \r\n\r\nI have an ongoing Stack Overflow question at:\r\nhttps://stackoverflow.com/questions/55055101/cannot-connect-to-dockerized-express-https-server\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3906/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3906/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3905",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3905/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3905/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3905/events",
    "html_url": "https://github.com/expressjs/express/issues/3905",
    "id": 418538552,
    "node_id": "MDU6SXNzdWU0MTg1Mzg1NTI=",
    "number": 3905,
    "title": "Dynamic routing",
    "user": {
      "login": "zankhanarana9",
      "id": 25047032,
      "node_id": "MDQ6VXNlcjI1MDQ3MDMy",
      "avatar_url": "https://avatars.githubusercontent.com/u/25047032?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zankhanarana9",
      "html_url": "https://github.com/zankhanarana9",
      "followers_url": "https://api.github.com/users/zankhanarana9/followers",
      "following_url": "https://api.github.com/users/zankhanarana9/following{/other_user}",
      "gists_url": "https://api.github.com/users/zankhanarana9/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zankhanarana9/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zankhanarana9/subscriptions",
      "organizations_url": "https://api.github.com/users/zankhanarana9/orgs",
      "repos_url": "https://api.github.com/users/zankhanarana9/repos",
      "events_url": "https://api.github.com/users/zankhanarana9/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zankhanarana9/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-03-07T22:14:38Z",
    "updated_at": "2019-07-17T15:55:54Z",
    "closed_at": "2019-07-17T15:55:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am writing a simple server that calls default url '/', Get '/articles' , Post '/user' information and Put '/logout' requests.\r\n\r\nHere is my code below\r\n\r\nconst http = require('http')\r\nconst express = require ('express');\r\nconst app = express();\r\n\r\nconst host = '127.0.0.1'\r\nconst port = 3333 || process.env.PORT\r\n\r\nhttp.createServer(preprocess).listen(port, host)\r\nconsole.log(`Server running at http://${host}:${port}`)\r\n\r\nfunction preprocess(req, res) {\r\n     let body = ''\r\n     req.on('data', function(chunk) {\r\n          body += chunk\r\n     })\r\n     req.on('end', function() {\r\n          req.body = body\r\n          console.log(body)\r\n          server(req, res)\r\n     })\r\n}\r\n\r\n\r\nfunction server(req, res) {\r\n     console.log('Request method        :', req.method)\r\n     console.log('Request URL           :', req.url)\r\n     console.log('Request content-type  :', req.headers['content-type'])\r\n     console.log('Request payload       :', req.body)\r\n\r\n     const payload = serverResponse(req.url, req.body)\r\n     res.setHeader('Content-Type', 'application/json')\r\n     res.statusCode = 200\r\n     res.end(JSON.stringify(payload))\r\n}\r\n\r\nfunction serverResponse (reqType, reqData) {\r\n\r\n  var serverRes\r\n  //console.log(reqData);\r\n\r\n  switch(reqType) {\r\n    case '/' :\r\n      serverRes = { 'hello': 'world' }\r\n      break;\r\n\r\n    case '/articles':\r\n      serverRes = {articles: [{id: 1, author: 'LMN', body: 'A post'} ,\r\n          {id: 2, author: 'ABC', body: 'post 2'},\r\n          {id: 3, author: 'XYZ', body: 'post 3'} ]}\r\n      break;\r\n\r\n      case '/user' :\r\n        try {\r\n            var data = JSON.parse(reqData);\r\n            serverRes = {\"username\" : data[\"username\"], \"result\":'success'}\r\n            console.log(\"Server Response: \" + serverRes)\r\n          } catch(e) {\r\n            return 'malformed request';\r\n        }\r\n        break;\r\n\r\n      case '/logout' :\r\n        serverRes = 'OK'\r\n        break;\r\n\r\n      default: break;\r\n\r\n  }\r\n  return serverRes;\r\n}\r\n\r\nI wanted to know if it is possible to have dynamic URL like for example \"/user/name1\", \"/user/name2\".\r\n\r\nI know we can implement dynamic routing as below:\r\n\r\napp.post('/user/:name' , function (req,res) { .... } );\r\n\r\nI want to implement the server as http and hence, the workaround won't help. Any suggestions on how to have dynamic routing with expressjs and http?\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3905/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3905/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3904",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3904/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3904/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3904/events",
    "html_url": "https://github.com/expressjs/express/issues/3904",
    "id": 418428341,
    "node_id": "MDU6SXNzdWU0MTg0MjgzNDE=",
    "number": 3904,
    "title": "route middleware  without path  on crossdomain getting fired twice",
    "user": {
      "login": "purusingh",
      "id": 15384815,
      "node_id": "MDQ6VXNlcjE1Mzg0ODE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/15384815?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/purusingh",
      "html_url": "https://github.com/purusingh",
      "followers_url": "https://api.github.com/users/purusingh/followers",
      "following_url": "https://api.github.com/users/purusingh/following{/other_user}",
      "gists_url": "https://api.github.com/users/purusingh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/purusingh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/purusingh/subscriptions",
      "organizations_url": "https://api.github.com/users/purusingh/orgs",
      "repos_url": "https://api.github.com/users/purusingh/repos",
      "events_url": "https://api.github.com/users/purusingh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/purusingh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2019-03-07T17:28:23Z",
    "updated_at": "2019-03-07T18:31:02Z",
    "closed_at": "2019-03-07T17:32:27Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "```js\r\n// path= localhost://api/groups/\r\nlet router = express.Router();\r\n\r\nrouter.use((req, res, next) => {\r\n  console.log(req.headers);\r\n  //fnTokenAuthenticateOne(req, res, next);\r\n  next();\r\n});\r\n\r\nrouter.get(\"/\", (req, res, next) => {\r\n  SvcGroup.get((err, grooups) => {\r\n    if (err) {\r\n      console.log(err);\r\n      return next(err);\r\n    }\r\n    res.json(grooups);\r\n  });\r\n});\r\n```\r\nnow if I access  localhost://api/groups/  with headers it gets called the middleware twice and \r\ncustom headers  are absence and first call and they are there secon call. And there are just one get call from the client. It works fine on same domain.\r\n\r\n```\r\n{ host: 'localhost',\r\n  connection: 'keep-alive',\r\n  'access-control-request-method': 'GET',\r\n  origin: 'http://localhost:3005',\r\n  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36',\r\n  'access-control-request-headers': 'access_token,secret_token,type',\r\n  accept: '*/*',\r\n  referer: 'http://localhost:3005/Admins',\r\n  'accept-encoding': 'gzip, deflate, br',\r\n  'accept-language': 'en-US,en;q=0.9' }\r\n{ host: 'localhost',\r\n  connection: 'keep-alive',\r\n  accept: '*/*',\r\n  origin: 'http://localhost:3005',\r\n  access_token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjViOWJlZWQ3MTJhOWEwMmRlYzU1MzliZiIsImlhdCI6MTU1MTk3OTMzMiwiZXhwIjoxNTUxOTgyOTMyfQ.L65UP8Eas1BrAisKwH4AHflAjTNvSY718hTn18FqvhA',\r\n  type: 'local',\r\n  'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36',\r\n  secret_token: 'undefined',\r\n  referer: 'http://localhost:3005/Admins',\r\n  'accept-encoding': 'gzip, deflate, br',\r\n  'accept-language': 'en-US,en;q=0.9' }\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3904/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3904/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3903",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3903/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3903/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3903/events",
    "html_url": "https://github.com/expressjs/express/pull/3903",
    "id": 418187440,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjU5MDE3OTY2",
    "number": 3903,
    "title": "Annotations",
    "user": {
      "login": "shenshanyoumu",
      "id": 8577790,
      "node_id": "MDQ6VXNlcjg1Nzc3OTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8577790?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shenshanyoumu",
      "html_url": "https://github.com/shenshanyoumu",
      "followers_url": "https://api.github.com/users/shenshanyoumu/followers",
      "following_url": "https://api.github.com/users/shenshanyoumu/following{/other_user}",
      "gists_url": "https://api.github.com/users/shenshanyoumu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shenshanyoumu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shenshanyoumu/subscriptions",
      "organizations_url": "https://api.github.com/users/shenshanyoumu/orgs",
      "repos_url": "https://api.github.com/users/shenshanyoumu/repos",
      "events_url": "https://api.github.com/users/shenshanyoumu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shenshanyoumu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-03-07T08:36:22Z",
    "updated_at": "2019-03-07T08:41:00Z",
    "closed_at": "2019-03-07T08:41:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3903",
      "html_url": "https://github.com/expressjs/express/pull/3903",
      "diff_url": "https://github.com/expressjs/express/pull/3903.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3903.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3903/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3903/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3902",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3902/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3902/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3902/events",
    "html_url": "https://github.com/expressjs/express/issues/3902",
    "id": 416460952,
    "node_id": "MDU6SXNzdWU0MTY0NjA5NTI=",
    "number": 3902,
    "title": "Having Issues With NPM Json and prasing",
    "user": {
      "login": "allseeingprojectmanager",
      "id": 42099151,
      "node_id": "MDQ6VXNlcjQyMDk5MTUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/42099151?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/allseeingprojectmanager",
      "html_url": "https://github.com/allseeingprojectmanager",
      "followers_url": "https://api.github.com/users/allseeingprojectmanager/followers",
      "following_url": "https://api.github.com/users/allseeingprojectmanager/following{/other_user}",
      "gists_url": "https://api.github.com/users/allseeingprojectmanager/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/allseeingprojectmanager/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/allseeingprojectmanager/subscriptions",
      "organizations_url": "https://api.github.com/users/allseeingprojectmanager/orgs",
      "repos_url": "https://api.github.com/users/allseeingprojectmanager/repos",
      "events_url": "https://api.github.com/users/allseeingprojectmanager/events{/privacy}",
      "received_events_url": "https://api.github.com/users/allseeingprojectmanager/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-03-03T01:16:32Z",
    "updated_at": "2019-03-04T17:22:33Z",
    "closed_at": "2019-03-04T17:22:33Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hey guys, \r\nI am setting up a small NPM application however I was having issues with this in the console:\r\n```\r\n$ npm start\r\nnpm ERR! file C:\\Users\\Jolly\\Desktop\\ZeduHow app\\package.json\r\nnpm ERR! code EJSONPARSE\r\nnpm ERR! JSON.parse Failed to parse json\r\nnpm ERR! JSON.parse Unexpected token } in JSON at position 182 while parsing near '...art\": \"electron .\",\r\nnpm ERR! JSON.parse }\r\nnpm ERR! JSON.parse   \"author\": \"Team ...'\r\nnpm ERR! JSON.parse Failed to parse package.json data.\r\nnpm ERR! JSON.parse package.json must be actual JSON, not just JavaScript.\r\n\r\nnpm ERR! A complete log of this run can be found in:\r\nnpm ERR!     C:\\Users\\Jolly\\AppData\\Roaming\\npm-cache\\_logs\\2019-03-03T00_41_01_463Z-debug.log\r\n```\r\nThanks, Jolly\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3902/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3902/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3901",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3901/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3901/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3901/events",
    "html_url": "https://github.com/expressjs/express/issues/3901",
    "id": 416397948,
    "node_id": "MDU6SXNzdWU0MTYzOTc5NDg=",
    "number": 3901,
    "title": "Strange input for error handler.",
    "user": {
      "login": "RedTailBullet",
      "id": 23481829,
      "node_id": "MDQ6VXNlcjIzNDgxODI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/23481829?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RedTailBullet",
      "html_url": "https://github.com/RedTailBullet",
      "followers_url": "https://api.github.com/users/RedTailBullet/followers",
      "following_url": "https://api.github.com/users/RedTailBullet/following{/other_user}",
      "gists_url": "https://api.github.com/users/RedTailBullet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RedTailBullet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RedTailBullet/subscriptions",
      "organizations_url": "https://api.github.com/users/RedTailBullet/orgs",
      "repos_url": "https://api.github.com/users/RedTailBullet/repos",
      "events_url": "https://api.github.com/users/RedTailBullet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RedTailBullet/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-03-02T13:35:08Z",
    "updated_at": "2019-03-04T04:32:33Z",
    "closed_at": "2019-03-04T04:32:33Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "## Scenario\r\n\r\nI've got a class `HttpError extends Error`.\r\n\r\nThen I am calling `next()` passing in an instance of `HttpError`.\r\n\r\n## What is expected\r\n\r\nAn instance of `HttpError` is received in my error handler.\r\n\r\n## What actually happened\r\n\r\nAn instance of `Error` is received in my error handler.\r\n\r\n## What I need\r\n\r\nI need help with this issue. Why is this happening? How can I solve it? Thanks.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3901/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3901/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3900",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3900/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3900/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3900/events",
    "html_url": "https://github.com/expressjs/express/issues/3900",
    "id": 416182098,
    "node_id": "MDU6SXNzdWU0MTYxODIwOTg=",
    "number": 3900,
    "title": "RFC incompliance: HEAD requests should not send body",
    "user": {
      "login": "vlajos",
      "id": 3994645,
      "node_id": "MDQ6VXNlcjM5OTQ2NDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3994645?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vlajos",
      "html_url": "https://github.com/vlajos",
      "followers_url": "https://api.github.com/users/vlajos/followers",
      "following_url": "https://api.github.com/users/vlajos/following{/other_user}",
      "gists_url": "https://api.github.com/users/vlajos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vlajos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vlajos/subscriptions",
      "organizations_url": "https://api.github.com/users/vlajos/orgs",
      "repos_url": "https://api.github.com/users/vlajos/repos",
      "events_url": "https://api.github.com/users/vlajos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vlajos/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-03-01T16:32:14Z",
    "updated_at": "2019-03-01T17:11:27Z",
    "closed_at": "2019-03-01T16:44:20Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "(Similar to #334 )\r\n\r\nSImple reproduction:\r\n\r\npackage.json\r\n```\r\n{\r\n  \"dependencies\": {\r\n    \"express\": \"^4.16.4\",\r\n    \"morgan\": \"^1.9.1\"\r\n  }\r\n}\r\n```\r\napp.js\r\n```\r\nconst express = require('express')\r\nconst app = express()\r\n \r\nconst morgan = require('morgan');\r\napp.use(morgan(\r\n    ':remote-addr - :remote-user [:date[clf]] \":method :url HTTP/:http-version\" :status :res[content-length] \":referrer\" \":user-agent\" :response-time ms'\r\n));\r\n                   \r\nconst port = 3001\r\napp.get('/', (req, res) => res.send('Hello World!'))\r\napp.listen(port, () => console.log(`Example app listening on port ${port}!`))\r\n```\r\n\r\n```\r\nnode app.js\r\ncurl http://localhost:3001/\r\ncurl --head http://localhost:3001/\r\n```\r\nAnd in the logs in the same time:\r\n```\r\n::1 - - [01/Mar/2019:16:17:48 +0000] \"GET / HTTP/1.1\" 200 12 \"-\" \"curl/7.61.0\" 0.384 ms\r\n::1 - - [01/Mar/2019:16:17:52 +0000] \"HEAD / HTTP/1.1\" 200 12 \"-\" \"curl/7.61.0\" 0.193 ms\r\n```\r\nBoth requests ended in the same 12 bytes long body.\r\n\r\nhttps://tools.ietf.org/html/rfc7231#section-4.3.2\r\n\r\n>    ... that the server MUST NOT\r\n>    send a message body in the response (i.e., the response terminates at\r\n>    the end of the header section).\r\n\r\nSo this sounds like an rfc violation to me.\r\n\r\nTo be honest I am not really sure about all the potential implications.\r\nIn my case one of our proxies (based on guzzle/curl) rejects similar requests.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3900/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3900/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3899",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3899/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3899/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3899/events",
    "html_url": "https://github.com/expressjs/express/issues/3899",
    "id": 414777327,
    "node_id": "MDU6SXNzdWU0MTQ3NzczMjc=",
    "number": 3899,
    "title": "Middleware not firing next when request has files attached",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-02-26T19:24:46Z",
    "updated_at": "2019-04-17T22:26:22Z",
    "closed_at": "2019-04-17T22:26:22Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm using two APIs written with Express.js, the endpoint of the first one uses supertest to attach 100 xml files into a POST request to the second one, my issue is in the second one because its middleware doesn't fire the next() method, the API call does not retrieve any HTTP error, and keeps on waiting any response from the Express App, any thoughts on this?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3899/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3899/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3898",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3898/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3898/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3898/events",
    "html_url": "https://github.com/expressjs/express/issues/3898",
    "id": 414075640,
    "node_id": "MDU6SXNzdWU0MTQwNzU2NDA=",
    "number": 3898,
    "title": "Large URI requests return a 400 Bad Request (should be 414)",
    "user": {
      "login": "RMHonor",
      "id": 19863160,
      "node_id": "MDQ6VXNlcjE5ODYzMTYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/19863160?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RMHonor",
      "html_url": "https://github.com/RMHonor",
      "followers_url": "https://api.github.com/users/RMHonor/followers",
      "following_url": "https://api.github.com/users/RMHonor/following{/other_user}",
      "gists_url": "https://api.github.com/users/RMHonor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RMHonor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RMHonor/subscriptions",
      "organizations_url": "https://api.github.com/users/RMHonor/orgs",
      "repos_url": "https://api.github.com/users/RMHonor/repos",
      "events_url": "https://api.github.com/users/RMHonor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RMHonor/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2019-02-25T12:13:12Z",
    "updated_at": "2019-07-22T12:40:12Z",
    "closed_at": "2019-02-25T12:33:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Performing a GET request with a URI too long (as specified in https://github.com/nodejs/http-parser/blob/master/http_parser.h#L55) throws a 400 Bad Request error. This should be a 414 URI Too Long.\r\n\r\n```\r\napp.get('/test', (_, res) => res.sendStatus(200)\r\n```\r\n```\r\ncurl https://localhost:11000/test?q=query*8000 // 400 error\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3898/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3898/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3897",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3897/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3897/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3897/events",
    "html_url": "https://github.com/expressjs/express/issues/3897",
    "id": 414006971,
    "node_id": "MDU6SXNzdWU0MTQwMDY5NzE=",
    "number": 3897,
    "title": "Problem with express.static",
    "user": {
      "login": "tahv0",
      "id": 16887142,
      "node_id": "MDQ6VXNlcjE2ODg3MTQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/16887142?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tahv0",
      "html_url": "https://github.com/tahv0",
      "followers_url": "https://api.github.com/users/tahv0/followers",
      "following_url": "https://api.github.com/users/tahv0/following{/other_user}",
      "gists_url": "https://api.github.com/users/tahv0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tahv0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tahv0/subscriptions",
      "organizations_url": "https://api.github.com/users/tahv0/orgs",
      "repos_url": "https://api.github.com/users/tahv0/repos",
      "events_url": "https://api.github.com/users/tahv0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tahv0/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-02-25T09:23:25Z",
    "updated_at": "2019-02-25T10:11:41Z",
    "closed_at": "2019-02-25T10:11:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "How the heck is it possible that express.static serves files outside of root directory defined as parameter?\r\n\r\nMy simple code:\r\n```\r\n'use strict'\r\n\r\nconst express = require('express');\r\nconst path = require('path');\r\nconst morgan = require('morgan');\r\nconst cors = require('cors');\r\nconst compression = require('compression');\r\nconst app = express();\r\nconst env = process.env.NODE_ENV;\r\n\r\napp.use(compression());\r\n\r\napp.use(cors());\r\n\r\nif (env !== 'test') {\r\n  app.use(morgan(':date[iso] :method :url :status :res[content-length] - :response-time ms'));\r\n}\r\n\r\nconst buildDir = path.join(__dirname, '..', 'build');\r\n\r\napp.use(express.static(buildDir));\r\n\r\napp.get('*', (req,res) => {\r\n  // TODO: Add some SSR here\r\n  res.sendFile(path.join(__dirname, '..', 'build', 'index.html'));\r\n});\r\n\r\nconst port = process.env.PORT || 5000;\r\napp.listen(port);\r\n\r\nconsole.log('App is listening on port', port);\r\n```\r\n\r\nBrowser lists files outside of `build` folder and includes those in `js` subfolder:\r\n![screenshot from 2019-02-25 11-17-47](https://user-images.githubusercontent.com/16887142/53326789-13adb080-38ef-11e9-92ea-3cab849631d6.png)\r\n\r\nHow this is possible? None of those `assets`, `components`, `models`, `stores`... folders exists in that `build` folder. Those folders and files are from my React Apps source code that exists in my `build/../src`.\r\n\r\nActual content of my build folder:\r\n![screenshot from 2019-02-25 11-26-46](https://user-images.githubusercontent.com/16887142/53327808-3ccf4080-38f1-11e9-937d-ae465622db2f.png)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3897/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3897/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3896",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3896/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3896/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3896/events",
    "html_url": "https://github.com/expressjs/express/issues/3896",
    "id": 413859482,
    "node_id": "MDU6SXNzdWU0MTM4NTk0ODI=",
    "number": 3896,
    "title": "cannot get/ error for every route nodejs",
    "user": {
      "login": "kanishk-garg97",
      "id": 39979689,
      "node_id": "MDQ6VXNlcjM5OTc5Njg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/39979689?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kanishk-garg97",
      "html_url": "https://github.com/kanishk-garg97",
      "followers_url": "https://api.github.com/users/kanishk-garg97/followers",
      "following_url": "https://api.github.com/users/kanishk-garg97/following{/other_user}",
      "gists_url": "https://api.github.com/users/kanishk-garg97/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kanishk-garg97/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kanishk-garg97/subscriptions",
      "organizations_url": "https://api.github.com/users/kanishk-garg97/orgs",
      "repos_url": "https://api.github.com/users/kanishk-garg97/repos",
      "events_url": "https://api.github.com/users/kanishk-garg97/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kanishk-garg97/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-02-24T19:42:19Z",
    "updated_at": "2019-02-25T17:07:44Z",
    "closed_at": "2019-02-25T17:07:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "my app.js code\r\n\r\nvar express = require('express');\r\nvar morgan = require('morgan');\r\nvar mongoose = require('mongoose');\r\nvar bodyParser = require('body-parser');\r\nvar Users = require(\"./models/user\");\r\nvar ejs = require(\"ejs\");\r\nvar engine = require(\"ejs-mate\");\r\nvar app = express();\r\nvar session = require(\"express-session\");\r\nvar cookieParser = require(\"cookie-parser\");\r\nvar flash = require(\"express-flash\");\r\nvar MongoStore = require(\"connect-mongo\")(session);\r\nvar passport = require(\"passport\");\r\n\r\nvar secret = require(\"./config/secret\");\r\nvar User = require(\"./models/user\")\r\n\r\nmongoose.connect(secret.database, function(err){\r\n   if(err){\r\n       console.log(err);\r\n   } else{\r\n       console.log(\"connected to the database\");\r\n   }\r\n});\r\n// middleware\r\napp.use(morgan('dev'));\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({extended: true}));\r\napp.use(cookieParser());\r\napp.use(session({\r\n    resave: true,\r\n    saveUninitialized:true,\r\n    secret: secret.secretKey,\r\n    store: new MongoStore({url: secret.database, autoReconnect: true })\r\n}));\r\napp.use(flash());\r\napp.use(passport.initialize());\r\napp.use(passport.session());\r\napp.engine(\"ejs\", engine);\r\napp.set(\"view engine\", \"ejs\");\r\n\r\nvar mainRoutes = require(\"./routes/main.js\");\r\nvar userRoutes = require(\"./routes/user.js\");\r\n\r\napp.use('/',mainRoutes);\r\napp.use('/signup',userRoutes);\r\n\r\n\r\n\r\n\r\napp.listen(secret.port, process.env.IP, function(){\r\n  console.log(\"server started\");  \r\n});\r\n\r\n\r\n\r\nmy user.js code\r\n\r\n\r\nvar express= require(\"express\");\r\nvar router = express();\r\nvar Users = require(\"../models/user\");\r\nvar passport = require(\"passport\");\r\nvar passportConfi = require(\"../config/passport\");\r\n\r\n\r\nrouter.get(\"/login\", function(req, res) {\r\n    if(req.user){\r\n        return res.redirect(\"/\");\r\n    }\r\n    \r\n    res.render(\"/account/login\", {message : req.flash(\"loginMessage\")});\r\n});\r\n\r\nrouter.post(\"/login\", passport.authenticate(\"local-login\", {\r\n    successRedirect : \"/profile\",\r\n    failureRedirect : \"/login\",\r\n    failureFlash: true\r\n}));\r\n\r\nrouter.get('/signup', function(req, res){\r\n   res.render(\"accounts/signup\",{\r\n       error: req.flash(\"error\")\r\n   });\r\n});\r\n\r\nrouter.post(\"/signup\", function(req, res, next){\r\n   \r\n   var user = new Users();\r\n   \r\n   user.profile.name = req.body.name;\r\n   user.email = req.body.email;\r\n   user.password = req.body.password;\r\n   \r\n   Users.findOne({email : req.body.email}, function(err, exisitingUser){\r\n        if(exisitingUser){\r\n            req.flash(\"error\",\"Account with that email address already exist\");\r\n            return res.redirect(\"/signup\");\r\n        }else{\r\n            user.save(function(err,user){\r\n       if(err){\r\n          return next(err);\r\n       }\r\n          return res.redirect(\"/\");\r\n            });\r\n        }  \r\n   });\r\n});\r\n\r\nmodule.exports = router;\r\n\r\n\r\nmy signup.ejs code\r\n\r\n<% layout('layout') -%>\r\n\r\n\r\n\r\n<div class=\"row\">\r\n    <h1 style=\"text-align: center\">Sign Up</h1>\r\n    <div style=\"width: 30%; margin: 25px auto;\">\r\n        <form action=\"/signup\" method=\"post\">\r\n            <div class=\"form-group\">\r\n                <input class=\"form-control\" type=\"text\" name=\"username\" placeholder=\"Username\">\r\n            </div>\r\n             <div class=\"form-group\">\r\n                <input class=\"form-control\" type=\"email\" name=\"email\" placeholder=\"email@website.com\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input class=\"form-control\" type=\"password\" name=\"password\" placeholder=\"Password\">\r\n            </div>\r\n           \r\n           \r\n            <div class=\"form-group\">\r\n                <button class=\"btn btn-lg btn-primary btn-block\">Sign Up!</button>\r\n            </div>\r\n        </form>\r\n        \r\n    </div>\r\n</div>",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3896/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3896/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3895",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3895/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3895/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3895/events",
    "html_url": "https://github.com/expressjs/express/issues/3895",
    "id": 413833269,
    "node_id": "MDU6SXNzdWU0MTM4MzMyNjk=",
    "number": 3895,
    "title": "Expressjs crashes every often with Exit status 1",
    "user": {
      "login": "mkharibalaji",
      "id": 5992474,
      "node_id": "MDQ6VXNlcjU5OTI0NzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5992474?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkharibalaji",
      "html_url": "https://github.com/mkharibalaji",
      "followers_url": "https://api.github.com/users/mkharibalaji/followers",
      "following_url": "https://api.github.com/users/mkharibalaji/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkharibalaji/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkharibalaji/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkharibalaji/subscriptions",
      "organizations_url": "https://api.github.com/users/mkharibalaji/orgs",
      "repos_url": "https://api.github.com/users/mkharibalaji/repos",
      "events_url": "https://api.github.com/users/mkharibalaji/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkharibalaji/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-02-24T15:26:32Z",
    "updated_at": "2019-03-01T23:48:38Z",
    "closed_at": "2019-03-01T23:48:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi Guys,\r\n        please find the debug log below and the package.json\r\n\r\n{\r\n  \"name\": \"webstore\",\r\n  \"version\": \"0.0.0\",\r\n  \"private\": true,\r\n  \"scripts\": {\r\n    \"start\": \"node ./bin/www\"\r\n  },\r\n  \"dependencies\": {\r\n    \"debug\": \"~2.6.9\",\r\n    \"express\": \"~4.16.4\",\r\n    \"hbs\": \"~4.0.1\",\r\n    \"helmet\": \"~3.15.1\",\r\n    \"http-errors\": \"~1.6.3\",\r\n    \"morgan\": \"~1.9.0\"\r\n  }\r\n}\r\n\r\nand got the below error\r\n\r\n0 info it worked if it ends with ok\r\n1 verbose cli [ '/usr/bin/node', '/usr/bin/npm', 'start' ]\r\n2 info using npm@6.4.1\r\n3 info using node@v10.13.0\r\n4 verbose run-script [ 'prestart', 'start', 'poststart' ]\r\n5 info lifecycle webstore@0.0.0~prestart: webstore@0.0.0\r\n6 info lifecycle webstore@0.0.0~start: webstore@0.0.0\r\n7 verbose lifecycle webstore@0.0.0~start: unsafe-perm in lifecycle true\r\n8 verbose lifecycle webstore@0.0.0~start: PATH: /usr/lib/node_modules/npm/node_modules/npm-lifecycle/node-gyp-bin:/tee3apps/oinos/webstore/node_modules/.bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games\r\n9 verbose lifecycle webstore@0.0.0~start: CWD: /tee3apps/oinos/webstore\r\n10 silly lifecycle webstore@0.0.0~start: Args: [ '-c', 'node ./bin/www' ]\r\n11 silly lifecycle webstore@0.0.0~start: Returned: code: 1  signal: null\r\n12 info lifecycle webstore@0.0.0~start: Failed to exec start script\r\n13 verbose stack Error: webstore@0.0.0 start: `node ./bin/www`\r\n13 verbose stack Exit status 1\r\n13 verbose stack     at EventEmitter.<anonymous> (/usr/lib/node_modules/npm/node_modules/npm-lifecycle/index.js:301:16)\r\n13 verbose stack     at EventEmitter.emit (events.js:182:13)\r\n13 verbose stack     at ChildProcess.<anonymous> (/usr/lib/node_modules/npm/node_modules/npm-lifecycle/lib/spawn.js:55:14)\r\n13 verbose stack     at ChildProcess.emit (events.js:182:13)\r\n13 verbose stack     at maybeClose (internal/child_process.js:962:16)\r\n13 verbose stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:251:5)\r\n14 verbose pkgid webstore@0.0.0\r\n15 verbose cwd /tee3apps/oinos/webstore\r\n16 verbose Linux 4.15.13-x86_64-linode106\r\n17 verbose argv \"/usr/bin/node\" \"/usr/bin/npm\" \"start\"\r\n18 verbose node v10.13.0\r\n19 verbose npm  v6.4.1\r\n20 error code ELIFECYCLE\r\n21 error errno 1\r\n22 error webstore@0.0.0 start: `node ./bin/www`\r\n22 error Exit status 1\r\n23 error Failed at the webstore@0.0.0 start script.\r\n23 error This is probably not a problem with npm. There is likely additional logging output above.\r\n24 verbose exit [ 1, true ]\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3895/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3895/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3894",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3894/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3894/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3894/events",
    "html_url": "https://github.com/expressjs/express/issues/3894",
    "id": 413831210,
    "node_id": "MDU6SXNzdWU0MTM4MzEyMTA=",
    "number": 3894,
    "title": "res.download - file extension lost",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2019-02-24T15:06:15Z",
    "updated_at": "2019-03-07T17:19:16Z",
    "closed_at": "2019-03-07T17:19:16Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\r\n\r\nI am using json2csv lib to generate file on the server and then using res.download prompting user to download it.\r\n\r\nI see file downloaded as blob and without file extension.\r\n\r\n![image](https://user-images.githubusercontent.com/1841956/53301009-d0622c00-3873-11e9-9997-f235996f6342.png)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3894/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3894/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3893",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3893/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3893/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3893/events",
    "html_url": "https://github.com/expressjs/express/pull/3893",
    "id": 413669734,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjU1NTk4NDM2",
    "number": 3893,
    "title": "correction to override set header values in jsonp responses",
    "user": {
      "login": "scub45t3v3",
      "id": 13189585,
      "node_id": "MDQ6VXNlcjEzMTg5NTg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13189585?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scub45t3v3",
      "html_url": "https://github.com/scub45t3v3",
      "followers_url": "https://api.github.com/users/scub45t3v3/followers",
      "following_url": "https://api.github.com/users/scub45t3v3/following{/other_user}",
      "gists_url": "https://api.github.com/users/scub45t3v3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scub45t3v3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scub45t3v3/subscriptions",
      "organizations_url": "https://api.github.com/users/scub45t3v3/orgs",
      "repos_url": "https://api.github.com/users/scub45t3v3/repos",
      "events_url": "https://api.github.com/users/scub45t3v3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scub45t3v3/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-02-23T07:49:40Z",
    "updated_at": "2020-03-25T06:55:31Z",
    "closed_at": "2020-03-25T06:55:18Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3893",
      "html_url": "https://github.com/expressjs/express/pull/3893",
      "diff_url": "https://github.com/expressjs/express/pull/3893.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3893.patch",
      "merged_at": null
    },
    "body": "PR to address the opinionated `Content-Type` headers set by `res.jsonp` mentioned in Issue [#3892](https://github.com/expressjs/express/issues/3892)\r\n\r\n----\r\nCopied from #3892\r\n\r\nAs the tag/value of express is \r\n\r\n> Fast, unopinionated, minimalist web framework for node.\r\n\r\nIt appears a few requests have been made in the past to change the `Content-Type` header for jsonp responses.\r\n\r\n- [#3028](https://github.com/expressjs/express/issues/3028) quickly dismissed and ignored.\r\n\r\n- [#2094](https://github.com/expressjs/express/pull/2094) bad resolution that does not apply to jsonp responses.\r\n\r\nI would suggest that the next major version 5.x should default to the correct [IANA mime/type](https://www.iana.org/assignments/media-types/media-types.xhtml) of `application/javascript` or `application/ecmascript`\r\n\r\nThe goal here is to make the framework unopinionated and allow the user/developer to set the appropriate headers for the response. However, the current implementation of `res.jsonp` overwrites the `Content-Type` header to `text/javascript`.\r\n\r\nThe proposal for the current version 4.x of express should be to modify this behavior so that it can be defined and set on the response by the developer while maintaining the current behavior for backward compatibility.\r\n\r\nThis is especially useful when the request is specifically asking for `application/javascript` and not `text/javascript` via the `Accept` header which could and rightfully should cause confusion and errors with other frameworks, modules, libraries, developers, browsers, etc. that check they received the document in the format they requested.\r\n\r\nThis should be used in conjunction with the `res.format` and/or `res.accepts` to perform content negotiation that can be understood by both the sender and the receiver.\r\n\r\n```javascript\r\nconst jsonp = () => {\r\n  res.status(code).jsonp(data);\r\n};\r\n\r\nres.format({\r\n  'application/javascript': jsonp,\r\n  'application/ecmascript': jsonp,\r\n  'text/javascript': jsonp,\r\n  'text/ecmascript': jsonp,\r\n});\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3893/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3893/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3892",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3892/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3892/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3892/events",
    "html_url": "https://github.com/expressjs/express/issues/3892",
    "id": 413669463,
    "node_id": "MDU6SXNzdWU0MTM2Njk0NjM=",
    "number": 3892,
    "title": "Unopinionated jsonp headers",
    "user": {
      "login": "scub45t3v3",
      "id": 13189585,
      "node_id": "MDQ6VXNlcjEzMTg5NTg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13189585?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scub45t3v3",
      "html_url": "https://github.com/scub45t3v3",
      "followers_url": "https://api.github.com/users/scub45t3v3/followers",
      "following_url": "https://api.github.com/users/scub45t3v3/following{/other_user}",
      "gists_url": "https://api.github.com/users/scub45t3v3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scub45t3v3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scub45t3v3/subscriptions",
      "organizations_url": "https://api.github.com/users/scub45t3v3/orgs",
      "repos_url": "https://api.github.com/users/scub45t3v3/repos",
      "events_url": "https://api.github.com/users/scub45t3v3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scub45t3v3/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-02-23T07:46:09Z",
    "updated_at": "2019-02-23T18:35:55Z",
    "closed_at": "2019-02-23T18:35:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "As the tag/value of express is \r\n\r\n> Fast, unopinionated, minimalist web framework for node.\r\n\r\nIt appears a few requests have been made in the past to change the `Content-Type` header for jsonp responses.\r\n\r\n- [#3028](https://github.com/expressjs/express/issues/3028) quickly dismissed and ignored.\r\n\r\n- [#2094](https://github.com/expressjs/express/pull/2094) bad resolution that does not apply to jsonp responses.\r\n\r\nI would suggest that the next major version 5.x should default to the correct [IANA mime/type](https://www.iana.org/assignments/media-types/media-types.xhtml) of `application/javascript` or `application/ecmascript`\r\n\r\nThe goal here is to make the framework unopinionated and allow the user/developer to set the appropriate headers for the response. However, the current implementation of `res.jsonp` overwrites the `Content-Type` header to `text/javascript`.\r\n\r\nThe proposal for the current version 4.x of express should be to modify this behavior so that it can be defined and set on the response by the developer while maintaining the current behavior for backward compatibility.\r\n\r\nThis is especially useful when the request is specifically asking for `application/javascript` and not `text/javascript` via the `Accept` header which could and rightfully should cause confusion and errors with other frameworks, modules, libraries, developers, browsers, etc. that check they received the document in the format they requested.\r\n\r\nThis should be used in conjunction with the `res.format` and/or `res.accepts` to perform content negotiation that can be understood by both the sender and the receiver.\r\n\r\n```javascript\r\nconst jsonp = () => {\r\n  res.status(code).jsonp(data);\r\n};\r\n\r\nres.format({\r\n  'application/javascript': jsonp,\r\n  'application/ecmascript': jsonp,\r\n  'text/javascript': jsonp,\r\n  'text/ecmascript': jsonp,\r\n});\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3892/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3892/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3891",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3891/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3891/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3891/events",
    "html_url": "https://github.com/expressjs/express/pull/3891",
    "id": 413619853,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjU1NTY1MTUz",
    "number": 3891,
    "title": "allow to send custom errors",
    "user": {
      "login": "caub",
      "id": 3134574,
      "node_id": "MDQ6VXNlcjMxMzQ1NzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3134574?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/caub",
      "html_url": "https://github.com/caub",
      "followers_url": "https://api.github.com/users/caub/followers",
      "following_url": "https://api.github.com/users/caub/following{/other_user}",
      "gists_url": "https://api.github.com/users/caub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/caub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/caub/subscriptions",
      "organizations_url": "https://api.github.com/users/caub/orgs",
      "repos_url": "https://api.github.com/users/caub/repos",
      "events_url": "https://api.github.com/users/caub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/caub/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 163600,
        "node_id": "MDU6TGFiZWwxNjM2MDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2019-02-22T23:34:25Z",
    "updated_at": "2020-04-15T16:57:32Z",
    "closed_at": "2020-04-15T16:57:32Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3891",
      "html_url": "https://github.com/expressjs/express/pull/3891",
      "diff_url": "https://github.com/expressjs/express/pull/3891.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3891.patch",
      "merged_at": null
    },
    "body": "This allows to send errors in a more practical way, coupling status and message together\r\n\r\n```js\r\n// utils\r\nclass ApiError extends Error {\r\n    constructor(status = 500, message = 'Something went wrong') {\r\n        super(message);\r\n        this.status = status;\r\n    }\r\n    toJSON() {\r\n        return { text: this.message };\r\n    }\r\n}\r\nconst error = {\r\n    notFound: (s = 'resource') => new ApiError(404, `${s} not found`),\r\n    missingParams: (s = '') => new ApiError(400, `Missing parameters${s ? ': ' + s : ''}`),\r\n    forbidden: () => new ApiError(403, 'Access forbidden'),\r\n};\r\n\r\n// routers\r\napp.get('/foo', (req, res) => {\r\n  if (typeof req.body.data !== 'object') {\r\n    return res.send(error.missingParams('data'));\r\n  }\r\n  // ...\r\n})\r\n```\r\nOf course it's possible to use `next(error.missingParams('data'))` and handle the logic in the final error handler middleware, but I think this little addition is helpful, for more complex cases than https://expressjs.com/en/api.html#res.sendStatus\r\n\r\nThis PR is backward compatible\r\n\r\n~~There's just an issue with eslint which can't parse `class`, is it ok to update eslint? the version used here is very old~~",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3891/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3891/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3890",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3890/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3890/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3890/events",
    "html_url": "https://github.com/expressjs/express/issues/3890",
    "id": 413562349,
    "node_id": "MDU6SXNzdWU0MTM1NjIzNDk=",
    "number": 3890,
    "title": "How to render mySQL Data using Express and EJS",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2019-02-22T20:16:32Z",
    "updated_at": "2022-01-17T11:28:50Z",
    "closed_at": "2019-02-23T01:10:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi I can't figure out how to display my mySQL data on an HTML page. Right now I am using Express, mySQL, and EJS as my template engine. My project is to create a Jeopardy web application. I have my mySQL database called Jeopardy set up with themes, categories, and questions tables. I want to use Express (Node.js) to read in all the data. Then I want to send that data to the ejs file to render HTML. I want to display all my table data on the html page. Can someone help me?\r\n\r\nHere is my current error. When I go to localhost:3000 this same error pops up in the webpage and the console. I don't know why this is happening. I used res.render() to define obj as a variable for the ejs file to use but it's not recognizing it. Is there anything else you guys think I should fix? I am using all these languages/frameworks for the first time so I've very inexperienced.\r\n```\r\nReferenceError: /Users/Ruthvik/Downloads/Jeopardy/views/index.ejs:7\r\n    5|   </head>\r\n    6|   <body>\r\n >> 7|     <h1><%= obj %></h1>\r\n    8|     <p>Welcome to <%= obj %></p>\r\n    9|   </body>\r\n    10| </html>\r\n\r\nobj is not defined\r\n    at eval (eval at compile (/Users/Ruthvik/Downloads/Jeopardy/node_modules/ejs/lib/ejs.js:592:12), <anonymous>:11:26)\r\n    at returnedFn (/Users/Ruthvik/Downloads/Jeopardy/node_modules/ejs/lib/ejs.js:623:17)\r\n    at tryHandleCache (/Users/Ruthvik/Downloads/Jeopardy/node_modules/ejs/lib/ejs.js:251:36)\r\n    at View.exports.renderFile [as engine] (/Users/Ruthvik/Downloads/Jeopardy/node_modules/ejs/lib/ejs.js:480:10)\r\n    at View.render (/Users/Ruthvik/Downloads/Jeopardy/node_modules/express/lib/view.js:135:8)\r\n    at tryRender (/Users/Ruthvik/Downloads/Jeopardy/node_modules/express/lib/application.js:640:10)\r\n    at Function.render (/Users/Ruthvik/Downloads/Jeopardy/node_modules/express/lib/application.js:592:3)\r\n    at ServerResponse.render (/Users/Ruthvik/Downloads/Jeopardy/node_modules/express/lib/response.js:1008:7)\r\n    at Query.<anonymous> (/Users/Ruthvik/Downloads/Jeopardy/server.js:26:21)\r\n    at Query.<anonymous> (/Users/Ruthvik/node_modules/mysql/lib/Connection.js:502:10)\r\n```\r\n\r\n\r\nserver.js\r\n```\r\nconst express = require('express');\r\nconst app = express();\r\nconst mysql = require('mysql');\r\n\r\nvar con = mysql.createConnection({\r\n    host: \"localhost\",\r\n    user: \"root\",\r\n    password: \"Federer5\",\r\n    database: \"Jeopardy\"\r\n});\r\n\r\napp.engine('html', require('ejs').renderFile);\r\napp.set('view engine', 'ejs');\r\n\r\nvar obj = {};\r\napp.get('/', function(req, res) {\r\n    con.connect(function (err) {\r\n        if (err) throw err;\r\n        console.log(\"Connected\");\r\n        var sql = \"SELECT * FROM questions\";\r\n        con.query(sql, function (err, result) {\r\n            if (err) {\r\n                throw err;\r\n            } else {\r\n                obj = {print: result};\r\n                res.render('index', obj);\r\n            }\r\n        });\r\n    });\r\n});\r\n\r\napp.listen(3000, function () {\r\n    console.log('listening on port', 3000);\r\n});\r\n```\r\n\r\nindex.ejs\r\n```\r\n<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <link rel='stylesheet' href='/stylesheets/style.css' />\r\n  </head>\r\n  <body>\r\n    <h1><%= obj %></h1>\r\n    <p>Welcome to <%= obj %></p>\r\n  </body>\r\n</html>\r\n\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3890/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3890/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3889",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3889/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3889/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3889/events",
    "html_url": "https://github.com/expressjs/express/issues/3889",
    "id": 413492007,
    "node_id": "MDU6SXNzdWU0MTM0OTIwMDc=",
    "number": 3889,
    "title": "Routing by Variable",
    "user": {
      "login": "alcero",
      "id": 47897120,
      "node_id": "MDQ6VXNlcjQ3ODk3MTIw",
      "avatar_url": "https://avatars.githubusercontent.com/u/47897120?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alcero",
      "html_url": "https://github.com/alcero",
      "followers_url": "https://api.github.com/users/alcero/followers",
      "following_url": "https://api.github.com/users/alcero/following{/other_user}",
      "gists_url": "https://api.github.com/users/alcero/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alcero/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alcero/subscriptions",
      "organizations_url": "https://api.github.com/users/alcero/orgs",
      "repos_url": "https://api.github.com/users/alcero/repos",
      "events_url": "https://api.github.com/users/alcero/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alcero/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-02-22T16:58:02Z",
    "updated_at": "2019-02-23T08:52:18Z",
    "closed_at": "2019-02-23T08:52:18Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have the fear it's a totally basic-question. But I got stuck at this point ..  :(\r\n\r\nMy usecase:\r\n\r\nThe root-website is running as a \"show-room\", where no input is possible (it is presenteds to the public on multiple screens). The \"show-room\" asks periodically via ajax for data. \r\n\r\nNo it should be possible to switch from another client (with another website, e.g. /setup) the routing to another view and also give some additional information to it. Beside the ajax-transfer I also have already the POST-Datas in the index.js\r\n\r\nOne more time: The root-page shows \" website A\" and over another website I can tell the server, that it should show \"website B\". The Reload could be managed by Javascript/AJAX.\r\n\r\nMy thought was just changing the Routing, but that does not work. Yes, indeed, I did not understand all the mechanism.... ;)\r\n\r\nMy first try in index.js:\r\n```js\r\n// ...\r\napp.get('/', view01.view01Action);\r\n// ...\r\n\r\n// Getting the form-datas    \r\napp.post('/setuppost', function(req, res) {\r\n        res.render('./../setup01/views/setup.handlebars');\r\n        \r\n// Reacting to the form-datas\r\n        if(req.body.selectedView=='view05'){\r\n            app.get('/', view05.view05Action);\r\n            (... handlebars-helpers and so on...)\r\n        }\r\n```\r\n\r\nCould anybody please tell me, how to solve my usecase? THX a lot!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3889/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3889/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3888",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3888/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3888/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3888/events",
    "html_url": "https://github.com/expressjs/express/issues/3888",
    "id": 413106352,
    "node_id": "MDU6SXNzdWU0MTMxMDYzNTI=",
    "number": 3888,
    "title": "[Question] How to maintain middleware with side-effects",
    "user": {
      "login": "pierreTklein",
      "id": 17463268,
      "node_id": "MDQ6VXNlcjE3NDYzMjY4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17463268?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pierreTklein",
      "html_url": "https://github.com/pierreTklein",
      "followers_url": "https://api.github.com/users/pierreTklein/followers",
      "following_url": "https://api.github.com/users/pierreTklein/following{/other_user}",
      "gists_url": "https://api.github.com/users/pierreTklein/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pierreTklein/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pierreTklein/subscriptions",
      "organizations_url": "https://api.github.com/users/pierreTklein/orgs",
      "repos_url": "https://api.github.com/users/pierreTklein/repos",
      "events_url": "https://api.github.com/users/pierreTklein/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pierreTklein/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2019-02-21T20:19:57Z",
    "updated_at": "2019-02-27T02:10:13Z",
    "closed_at": "2019-02-27T02:10:13Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hey! I've been working with express.js for the past two years now, and one thing that I found to be quite difficult is how to properly document and enforce the state of the `req` object when multiple middlewares are mutating it. For example, I might have a validation middleware that updates the `req.body` object so that it only contains valid inputs. Another middleware might fetch an account from the database based on the `id` in `req.body.id`, and place it inside of `req.body.account`.\r\n\r\nWhen chaining these middlewares together, there is nothing that is preventing me from improperly chaining them, with the exception of diligent coding.\r\n\r\nHas this been an issue for you all? If so, how do you manage this?\r\n\r\nA toy example is here: https://gist.github.com/pierreTklein/feca0766e4433ebb880a4558ac2a0706",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3888/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3888/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3887",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3887/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3887/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3887/events",
    "html_url": "https://github.com/expressjs/express/issues/3887",
    "id": 412292679,
    "node_id": "MDU6SXNzdWU0MTIyOTI2Nzk=",
    "number": 3887,
    "title": "Use npx in express-generator docs",
    "user": {
      "login": "pspi",
      "id": 4328141,
      "node_id": "MDQ6VXNlcjQzMjgxNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4328141?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pspi",
      "html_url": "https://github.com/pspi",
      "followers_url": "https://api.github.com/users/pspi/followers",
      "following_url": "https://api.github.com/users/pspi/following{/other_user}",
      "gists_url": "https://api.github.com/users/pspi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pspi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pspi/subscriptions",
      "organizations_url": "https://api.github.com/users/pspi/orgs",
      "repos_url": "https://api.github.com/users/pspi/repos",
      "events_url": "https://api.github.com/users/pspi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pspi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-02-20T08:00:25Z",
    "updated_at": "2019-02-20T12:27:04Z",
    "closed_at": "2019-02-20T12:27:04Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The docs for express-generator could use `npx` these days: https://expressjs.com/en/starter/generator.html  \r\n\r\nSo instead of running `npm install -g express-generator && express`, one would simply run `npx express-generator`. The user would be left with an unpolluted global dependencies directory and if they choose to re-run it later, they'd always run the latest version. \r\n\r\nNpx was introduced in Node.js 8.2.0 / npm 5.2.0 (July 2017).",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3887/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3887/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3886",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3886/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3886/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3886/events",
    "html_url": "https://github.com/expressjs/express/issues/3886",
    "id": 411488262,
    "node_id": "MDU6SXNzdWU0MTE0ODgyNjI=",
    "number": 3886,
    "title": "Unmaintained view engine hbs",
    "user": {
      "login": "jourzero",
      "id": 3412568,
      "node_id": "MDQ6VXNlcjM0MTI1Njg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3412568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jourzero",
      "html_url": "https://github.com/jourzero",
      "followers_url": "https://api.github.com/users/jourzero/followers",
      "following_url": "https://api.github.com/users/jourzero/following{/other_user}",
      "gists_url": "https://api.github.com/users/jourzero/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jourzero/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jourzero/subscriptions",
      "organizations_url": "https://api.github.com/users/jourzero/orgs",
      "repos_url": "https://api.github.com/users/jourzero/repos",
      "events_url": "https://api.github.com/users/jourzero/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jourzero/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 324166296,
        "node_id": "MDU6TGFiZWwzMjQxNjYyOTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/meta",
        "name": "meta",
        "color": "fef2c0",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-02-18T13:57:50Z",
    "updated_at": "2020-04-17T03:34:09Z",
    "closed_at": "2019-02-19T00:22:50Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Seems that the hbs view engine hasn't been updated in 2 years. There's a security vuln to be fixed and I'm not getting the sense that it'll get fixed (by upgrading/retesting an underlying dep.). Ref.: https://github.com/pillarjs/hbs/issues/162. What should be our strategy for apps depending on hbs?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3886/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3886/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3885",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3885/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3885/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3885/events",
    "html_url": "https://github.com/expressjs/express/issues/3885",
    "id": 411188744,
    "node_id": "MDU6SXNzdWU0MTExODg3NDQ=",
    "number": 3885,
    "title": "Roles and permissions access control ",
    "user": {
      "login": "Jagadhissh",
      "id": 41655170,
      "node_id": "MDQ6VXNlcjQxNjU1MTcw",
      "avatar_url": "https://avatars.githubusercontent.com/u/41655170?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Jagadhissh",
      "html_url": "https://github.com/Jagadhissh",
      "followers_url": "https://api.github.com/users/Jagadhissh/followers",
      "following_url": "https://api.github.com/users/Jagadhissh/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jagadhissh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Jagadhissh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jagadhissh/subscriptions",
      "organizations_url": "https://api.github.com/users/Jagadhissh/orgs",
      "repos_url": "https://api.github.com/users/Jagadhissh/repos",
      "events_url": "https://api.github.com/users/Jagadhissh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Jagadhissh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2019-02-17T13:40:20Z",
    "updated_at": "2019-02-17T17:31:22Z",
    "closed_at": "2019-02-17T17:04:07Z",
    "author_association": "NONE",
    "active_lock_reason": "off-topic",
    "body": "Hi sir\r\nI would like to know about roles and permissions in node express js\r\nCan u give me the reference to about that... \r\nFor example\r\nI have 3 deferent roles \r\n1.admin(can create and he can do anything) \r\n2 Interviewer(can create interviews and access his resources) \r\n3 candidate(he will register through registration form while registering him in website he has to get role candidate and he only able attend interviews and applying) \r\nHow can I do this\r\n\r\nThanks in advance sie",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3885/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 1,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3885/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3884",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3884/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3884/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3884/events",
    "html_url": "https://github.com/expressjs/express/issues/3884",
    "id": 410764930,
    "node_id": "MDU6SXNzdWU0MTA3NjQ5MzA=",
    "number": 3884,
    "title": "Possible to return a response in Express 5?",
    "user": {
      "login": "mikemaccana",
      "id": 172594,
      "node_id": "MDQ6VXNlcjE3MjU5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/172594?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikemaccana",
      "html_url": "https://github.com/mikemaccana",
      "followers_url": "https://api.github.com/users/mikemaccana/followers",
      "following_url": "https://api.github.com/users/mikemaccana/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikemaccana/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikemaccana/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikemaccana/subscriptions",
      "organizations_url": "https://api.github.com/users/mikemaccana/orgs",
      "repos_url": "https://api.github.com/users/mikemaccana/repos",
      "events_url": "https://api.github.com/users/mikemaccana/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikemaccana/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2019-02-15T13:16:11Z",
    "updated_at": "2020-02-19T19:10:39Z",
    "closed_at": "2020-02-19T19:10:38Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I've read #2259 there **a single example** of a route using Promises? I've read the router changelogs etc, from alpha 2 to alpha 7, but I can't find anything.\r\n\r\nI know, eg, https://arc.codes lets me just return a response. It also has middleware that uses this pattern.\r\n\r\n```\r\nexports.handler = async function http(request) {\r\n  return {\r\n    status: 201,\r\n    type: 'text/html; charset=utf8',\r\n    body: `\r\n      <!doctype html>\r\n      <html>\r\n        <body>hello world</body>\r\n      </html>\r\n   `\r\n  }\r\n}\r\n```\r\n\r\nDoes express 5 allow me to return a response from a route?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3884/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3884/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3883",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3883/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3883/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3883/events",
    "html_url": "https://github.com/expressjs/express/issues/3883",
    "id": 409761071,
    "node_id": "MDU6SXNzdWU0MDk3NjEwNzE=",
    "number": 3883,
    "title": "Exception can't be caught by process.on(\"uncaughtException\")",
    "user": {
      "login": "giannisgrigorakos",
      "id": 31553113,
      "node_id": "MDQ6VXNlcjMxNTUzMTEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/31553113?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/giannisgrigorakos",
      "html_url": "https://github.com/giannisgrigorakos",
      "followers_url": "https://api.github.com/users/giannisgrigorakos/followers",
      "following_url": "https://api.github.com/users/giannisgrigorakos/following{/other_user}",
      "gists_url": "https://api.github.com/users/giannisgrigorakos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/giannisgrigorakos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/giannisgrigorakos/subscriptions",
      "organizations_url": "https://api.github.com/users/giannisgrigorakos/orgs",
      "repos_url": "https://api.github.com/users/giannisgrigorakos/repos",
      "events_url": "https://api.github.com/users/giannisgrigorakos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/giannisgrigorakos/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-02-13T11:34:59Z",
    "updated_at": "2019-02-13T22:48:10Z",
    "closed_at": "2019-02-13T22:48:10Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have the following code in index.js \r\nconst winston = require('winston');\r\nrequire('winston-mongodb');\r\n\r\nprocess.on('uncaughtException', (ex) => {\r\n  console.log('WE GOT AN UNCAUGHT EXCEPTION');\r\n  winston.error(ex.message, ex);\r\n});\r\n\r\nUnfotunately when i run : node index.js it works fine without caughting the error.\r\nI try to log the error in winston but the error is never raised. \r\n\r\nI use: node -> v10.15.1\r\nnpm -> 6.4.1\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3883/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3883/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3882",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3882/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3882/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3882/events",
    "html_url": "https://github.com/expressjs/express/issues/3882",
    "id": 409638847,
    "node_id": "MDU6SXNzdWU0MDk2Mzg4NDc=",
    "number": 3882,
    "title": "app.use ignores regex",
    "user": {
      "login": "desmap",
      "id": 43666255,
      "node_id": "MDQ6VXNlcjQzNjY2MjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/43666255?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/desmap",
      "html_url": "https://github.com/desmap",
      "followers_url": "https://api.github.com/users/desmap/followers",
      "following_url": "https://api.github.com/users/desmap/following{/other_user}",
      "gists_url": "https://api.github.com/users/desmap/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/desmap/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/desmap/subscriptions",
      "organizations_url": "https://api.github.com/users/desmap/orgs",
      "repos_url": "https://api.github.com/users/desmap/repos",
      "events_url": "https://api.github.com/users/desmap/events{/privacy}",
      "received_events_url": "https://api.github.com/users/desmap/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-02-13T05:51:13Z",
    "updated_at": "2019-04-17T22:46:43Z",
    "closed_at": "2019-04-17T22:46:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Maybe I got `app.use`'s API wrong, but this regex doesn't work with `app.use`:\r\n```\r\napp.use(/bundle/, function (req, res, next) {\r\n  console.log('A URL containing \"bundle\" was requested.')\r\n  next()\r\n})\r\n````\r\nWhile the same regex works with `app.get`:\r\n```\r\napp.get(/bundle/, function (req, res, next) {\r\n  console.log('A URL containing \"bundle\" was requested.')\r\n  next()\r\n})\r\n```\r\nFYI, I want to match all `bundle.js` files, e.g. `0.bundle.js`, `1.bundle.js`, etc.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3882/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3882/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3881",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3881/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3881/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3881/events",
    "html_url": "https://github.com/expressjs/express/issues/3881",
    "id": 409628988,
    "node_id": "MDU6SXNzdWU0MDk2Mjg5ODg=",
    "number": 3881,
    "title": "body-parser and express module cannot read manifest.json (GET http://localhost:3001/public/manifest.json 404 (Not Found) manifest.json:1 Manifest: Line: 1, column: 1, Unexpected token.)",
    "user": {
      "login": "indunie",
      "id": 10337781,
      "node_id": "MDQ6VXNlcjEwMzM3Nzgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/10337781?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/indunie",
      "html_url": "https://github.com/indunie",
      "followers_url": "https://api.github.com/users/indunie/followers",
      "following_url": "https://api.github.com/users/indunie/following{/other_user}",
      "gists_url": "https://api.github.com/users/indunie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/indunie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/indunie/subscriptions",
      "organizations_url": "https://api.github.com/users/indunie/orgs",
      "repos_url": "https://api.github.com/users/indunie/repos",
      "events_url": "https://api.github.com/users/indunie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/indunie/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2019-02-13T05:06:07Z",
    "updated_at": "2019-04-17T22:47:09Z",
    "closed_at": "2019-04-17T22:47:09Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am using Node.js Version 10.14.1 on windows 10\r\nwith express and body-parser\r\n\r\n I am creating a basic react fronted with a node backend. I setup mysql database connection and all set. I want to insert user details using /createUser api call to store data to database. I run the server/app.js, react serve and index.js which contained my listener for /createUser. Once I run the listener, It is giving the error below.\r\n\r\nGET http://localhost:3001/public/manifest.json 404 (Not Found) manifest.json:1 Manifest: Line: 1, column: 1, Unexpected token.\r\n//my listener\r\n```\r\nconst express = require('express');\r\nconst bodyParser = require('body-parser');\r\nconst store = require('./store');\r\nconst app = express();\r\napp.use(express.static('public'));\r\n\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\napp.use(bodyParser.json());\r\n\r\napp.post('/createUser', (req, res) => {\r\n    console.log(req.body);\r\n    store\r\n        .createUser({\r\n            username: req.body.username,\r\n            password: req.body.password\r\n        })\r\n        .then(() => res.sendStatus(200))\r\n})\r\napp.listen(3001, () => {\r\n    console.log('Server running on http://localhost:3001')\r\n})\r\n```\r\nfull source : [https://github.com/indunie/tms2](url)\r\n\r\nHow do I fix this issue?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3881/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3881/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3880",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3880/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3880/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3880/events",
    "html_url": "https://github.com/expressjs/express/issues/3880",
    "id": 409312709,
    "node_id": "MDU6SXNzdWU0MDkzMTI3MDk=",
    "number": 3880,
    "title": "Pass middleware for all routes.",
    "user": {
      "login": "felipewmartins",
      "id": 5208478,
      "node_id": "MDQ6VXNlcjUyMDg0Nzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5208478?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/felipewmartins",
      "html_url": "https://github.com/felipewmartins",
      "followers_url": "https://api.github.com/users/felipewmartins/followers",
      "following_url": "https://api.github.com/users/felipewmartins/following{/other_user}",
      "gists_url": "https://api.github.com/users/felipewmartins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/felipewmartins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/felipewmartins/subscriptions",
      "organizations_url": "https://api.github.com/users/felipewmartins/orgs",
      "repos_url": "https://api.github.com/users/felipewmartins/repos",
      "events_url": "https://api.github.com/users/felipewmartins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/felipewmartins/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-02-12T13:57:42Z",
    "updated_at": "2019-04-17T22:26:56Z",
    "closed_at": "2019-04-17T22:26:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello friends.\r\nMy first issue at express.\r\nI would like to know if possible pass an middleware for all determined routes.\r\nEx:\r\n```js\r\n'use strict';\r\n\r\nconst express = require('express');\r\nconst router = express.Router();\r\nconst middleware = require('../middleware/authMiddleware');\r\n\r\nrouter.use(middleware);\r\n\r\nrouter.get('/api/', (req, res) => {\r\n    res.send({auth: true});\r\n});\r\n\r\nmodule.exports = app => app.use('/', router);\r\n```\r\nThanks for your help!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3880/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3880/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3879",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3879/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3879/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3879/events",
    "html_url": "https://github.com/expressjs/express/issues/3879",
    "id": 409254791,
    "node_id": "MDU6SXNzdWU0MDkyNTQ3OTE=",
    "number": 3879,
    "title": "Routing to multiple Angular 7 projects in Express based on JWT authentication and Role",
    "user": {
      "login": "krish512",
      "id": 6457418,
      "node_id": "MDQ6VXNlcjY0NTc0MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6457418?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/krish512",
      "html_url": "https://github.com/krish512",
      "followers_url": "https://api.github.com/users/krish512/followers",
      "following_url": "https://api.github.com/users/krish512/following{/other_user}",
      "gists_url": "https://api.github.com/users/krish512/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/krish512/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/krish512/subscriptions",
      "organizations_url": "https://api.github.com/users/krish512/orgs",
      "repos_url": "https://api.github.com/users/krish512/repos",
      "events_url": "https://api.github.com/users/krish512/events{/privacy}",
      "received_events_url": "https://api.github.com/users/krish512/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2019-02-12T11:37:01Z",
    "updated_at": "2019-02-14T06:43:40Z",
    "closed_at": "2019-02-14T06:43:40Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have created an Angular 7 project which has multiple applications for different roles, like admin, user, editor, etc. each have different components and view.\r\n\r\nA logged in user will land on its user role application, where as any guest user will land on 'website' application which has login and signup page.\r\n\r\nMy problem is to route using express to different angular applications based on user role determined during authentication. This works with one angular application, but doesn't work with multiple angular application",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3879/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3879/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3878",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3878/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3878/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3878/events",
    "html_url": "https://github.com/expressjs/express/pull/3878",
    "id": 408381644,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjUxNjQyODI4",
    "number": 3878,
    "title": "Add middleware.next validation tests",
    "user": {
      "login": "jeonghwan-kim",
      "id": 1788964,
      "node_id": "MDQ6VXNlcjE3ODg5NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1788964?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jeonghwan-kim",
      "html_url": "https://github.com/jeonghwan-kim",
      "followers_url": "https://api.github.com/users/jeonghwan-kim/followers",
      "following_url": "https://api.github.com/users/jeonghwan-kim/following{/other_user}",
      "gists_url": "https://api.github.com/users/jeonghwan-kim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jeonghwan-kim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jeonghwan-kim/subscriptions",
      "organizations_url": "https://api.github.com/users/jeonghwan-kim/orgs",
      "repos_url": "https://api.github.com/users/jeonghwan-kim/repos",
      "events_url": "https://api.github.com/users/jeonghwan-kim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jeonghwan-kim/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 133578714,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/tests",
        "name": "tests",
        "color": "944008",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-02-09T01:23:10Z",
    "updated_at": "2019-04-17T15:43:00Z",
    "closed_at": "2019-04-17T15:43:00Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3878",
      "html_url": "https://github.com/expressjs/express/pull/3878",
      "diff_url": "https://github.com/expressjs/express/pull/3878.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3878.patch",
      "merged_at": "2019-04-17T15:43:00Z"
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3878/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3878/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3877",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3877/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3877/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3877/events",
    "html_url": "https://github.com/expressjs/express/issues/3877",
    "id": 408225361,
    "node_id": "MDU6SXNzdWU0MDgyMjUzNjE=",
    "number": 3877,
    "title": "'static' modifier cannot appear on a type member",
    "user": {
      "login": "mhauens",
      "id": 9588610,
      "node_id": "MDQ6VXNlcjk1ODg2MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9588610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mhauens",
      "html_url": "https://github.com/mhauens",
      "followers_url": "https://api.github.com/users/mhauens/followers",
      "following_url": "https://api.github.com/users/mhauens/following{/other_user}",
      "gists_url": "https://api.github.com/users/mhauens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mhauens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mhauens/subscriptions",
      "organizations_url": "https://api.github.com/users/mhauens/orgs",
      "repos_url": "https://api.github.com/users/mhauens/repos",
      "events_url": "https://api.github.com/users/mhauens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mhauens/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-02-08T16:24:45Z",
    "updated_at": "2019-02-08T16:38:10Z",
    "closed_at": "2019-02-08T16:38:10Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "ERROR in /node_modules/@types/express/index.d.ts(91,9):\r\nTS1070: 'static' modifier cannot appear on a type member.\r\n\r\npointing to this: \r\n``` javascript\r\ninterface Router extends core.Router {\r\n    static push(arg0: string): any\r\n}\r\n```\r\n\r\nusing:\r\n``` javascript\r\n\"express\": \"^4.16.4\",\r\n\"next\": \"^7.0.2\",\r\n\"react\": \"^16.8.1\",\r\n\"@types/express\": \"^4.16.1\",\r\n\"@types/next\": \"^7.0.9\",\r\n\"@types/react\": \"^16.8.2\",\r\n\"tslint\": \"^5.12.1\",\r\n\"tslint-react\": \"^3.6.0\",\r\n\"typescript\": \"^3.3.3\",\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3877/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3877/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3876",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3876/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3876/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3876/events",
    "html_url": "https://github.com/expressjs/express/issues/3876",
    "id": 408026444,
    "node_id": "MDU6SXNzdWU0MDgwMjY0NDQ=",
    "number": 3876,
    "title": "Node application crashes when provide wrong url in http.get() api",
    "user": {
      "login": "Ratikant01",
      "id": 5038421,
      "node_id": "MDQ6VXNlcjUwMzg0MjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5038421?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ratikant01",
      "html_url": "https://github.com/Ratikant01",
      "followers_url": "https://api.github.com/users/Ratikant01/followers",
      "following_url": "https://api.github.com/users/Ratikant01/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ratikant01/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ratikant01/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ratikant01/subscriptions",
      "organizations_url": "https://api.github.com/users/Ratikant01/orgs",
      "repos_url": "https://api.github.com/users/Ratikant01/repos",
      "events_url": "https://api.github.com/users/Ratikant01/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ratikant01/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-02-08T06:43:17Z",
    "updated_at": "2019-02-12T21:49:46Z",
    "closed_at": "2019-02-12T21:49:09Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi Team,\r\n\r\nI am getting my NodeJS application crashed when I tried to access an external URL which is actually a wrong one (not working URL). Below is the code. What I am looking here is; to handle the error in such scenarios instead of crashing the application. Can you please let me know if there is any way we can handle this error in express level itself? I tried with try-catch and req/res.on('error'); but it does not work as the error response does not reach back to the caller.\r\n\r\n```\r\nvar url = \"http://some_wrong_url.com\";\r\n    http.get(url, function(res) {\r\n      res.setEncoding(\"utf8\");\r\n      var body = \"\";\r\n      res.on(\"data\", function(data) {\r\n        body += data;\r\n      });\r\n...\r\n\r\n```\r\n![image](https://user-images.githubusercontent.com/5038421/52462667-00ce7880-2b9a-11e9-9534-d9cb7f131479.png)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3876/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3876/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3875",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3875/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3875/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3875/events",
    "html_url": "https://github.com/expressjs/express/pull/3875",
    "id": 408002462,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjUxMzQ5MzY1",
    "number": 3875,
    "title": "Fixed typos in tests",
    "user": {
      "login": "jeonghwan-kim",
      "id": 1788964,
      "node_id": "MDQ6VXNlcjE3ODg5NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1788964?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jeonghwan-kim",
      "html_url": "https://github.com/jeonghwan-kim",
      "followers_url": "https://api.github.com/users/jeonghwan-kim/followers",
      "following_url": "https://api.github.com/users/jeonghwan-kim/following{/other_user}",
      "gists_url": "https://api.github.com/users/jeonghwan-kim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jeonghwan-kim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jeonghwan-kim/subscriptions",
      "organizations_url": "https://api.github.com/users/jeonghwan-kim/orgs",
      "repos_url": "https://api.github.com/users/jeonghwan-kim/repos",
      "events_url": "https://api.github.com/users/jeonghwan-kim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jeonghwan-kim/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 133578714,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/tests",
        "name": "tests",
        "color": "944008",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-02-08T04:32:08Z",
    "updated_at": "2019-04-16T18:31:44Z",
    "closed_at": "2019-04-16T18:31:44Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3875",
      "html_url": "https://github.com/expressjs/express/pull/3875",
      "diff_url": "https://github.com/expressjs/express/pull/3875.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3875.patch",
      "merged_at": "2019-04-16T18:31:44Z"
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3875/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3875/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3874",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3874/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3874/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3874/events",
    "html_url": "https://github.com/expressjs/express/issues/3874",
    "id": 406958611,
    "node_id": "MDU6SXNzdWU0MDY5NTg2MTE=",
    "number": 3874,
    "title": "Same options for clearCookie",
    "user": {
      "login": "RidgeA",
      "id": 7588876,
      "node_id": "MDQ6VXNlcjc1ODg4NzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7588876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RidgeA",
      "html_url": "https://github.com/RidgeA",
      "followers_url": "https://api.github.com/users/RidgeA/followers",
      "following_url": "https://api.github.com/users/RidgeA/following{/other_user}",
      "gists_url": "https://api.github.com/users/RidgeA/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RidgeA/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RidgeA/subscriptions",
      "organizations_url": "https://api.github.com/users/RidgeA/orgs",
      "repos_url": "https://api.github.com/users/RidgeA/repos",
      "events_url": "https://api.github.com/users/RidgeA/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RidgeA/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-02-05T20:22:20Z",
    "updated_at": "2019-02-05T20:37:31Z",
    "closed_at": "2019-02-05T20:34:58Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "From the documentation:\r\n\r\n> Web browsers and other compliant clients will only clear the cookie if the given options is identical to those given to res.cookie(), excluding expires and maxAge.\r\n\r\nBut I can't find any proof - RFC, or something else. Could someone point me out?\r\n\r\nThanks a lot!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3874/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3874/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  }
]