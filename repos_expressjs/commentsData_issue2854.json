[
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/172291576",
    "html_url": "https://github.com/expressjs/express/issues/2854#issuecomment-172291576",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2854",
    "id": 172291576,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjI5MTU3Ng==",
    "user": {
      "login": "frankxw",
      "id": 6488033,
      "node_id": "MDQ6VXNlcjY0ODgwMzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6488033?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frankxw",
      "html_url": "https://github.com/frankxw",
      "followers_url": "https://api.github.com/users/frankxw/followers",
      "following_url": "https://api.github.com/users/frankxw/following{/other_user}",
      "gists_url": "https://api.github.com/users/frankxw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frankxw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frankxw/subscriptions",
      "organizations_url": "https://api.github.com/users/frankxw/orgs",
      "repos_url": "https://api.github.com/users/frankxw/repos",
      "events_url": "https://api.github.com/users/frankxw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frankxw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-17T04:42:19Z",
    "updated_at": "2016-01-17T04:42:19Z",
    "author_association": "NONE",
    "body": "I'm not sure if this is exactly the problem you are seeing, but the line `app.apply(this, arguments)` seems like it could be off.  Express is chained callbacks, so you need to treat this asynchronously. You are probably executing their callback after finalhandler has had a crack at the request, so you need to override it.  Instead of `if (!res.finished) ...` you could try something like:\n\n```\n...\n        return oldCreateServer(function(req, res) {\n            app.apply(this, [req, res, callback]);\n        });\n...\n```\n\nBasically, you would be allowing your app to execute it's chain, and you would be passing in your client's callback as the `done` callback to your app.  See [here](https://github.com/strongloop/express/blob/master/lib/express.js#L37) and [here](https://github.com/strongloop/express/blob/master/lib/application.js#L157).\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/172291576/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/172291666",
    "html_url": "https://github.com/expressjs/express/issues/2854#issuecomment-172291666",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2854",
    "id": 172291666,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjI5MTY2Ng==",
    "user": {
      "login": "avanderhoorn",
      "id": 585619,
      "node_id": "MDQ6VXNlcjU4NTYxOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/585619?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/avanderhoorn",
      "html_url": "https://github.com/avanderhoorn",
      "followers_url": "https://api.github.com/users/avanderhoorn/followers",
      "following_url": "https://api.github.com/users/avanderhoorn/following{/other_user}",
      "gists_url": "https://api.github.com/users/avanderhoorn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/avanderhoorn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/avanderhoorn/subscriptions",
      "organizations_url": "https://api.github.com/users/avanderhoorn/orgs",
      "repos_url": "https://api.github.com/users/avanderhoorn/repos",
      "events_url": "https://api.github.com/users/avanderhoorn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/avanderhoorn/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-01-17T04:46:38Z",
    "updated_at": "2016-01-17T04:46:38Z",
    "author_association": "NONE",
    "body": "I think I've worked around this by chaining the \"users\" callback to the end of my chain...\n\n```\nvar http = require('http');\nvar express = require('express');\n\nvar setupProxy = function setupProxy() {\n    var oldCreateServer = http.createServer;\n    http.createServer = function(callback) { \n        var app = buildApp(callback);\n\n        return oldCreateServer(app);\n    };\n};\n\nvar buildApp = function buildApp(originalCallback) {\n    var app = express();\n\n    app.use('/test', function(req, res) {\n        res.send('Hello World');\n    });\n\n    app.use(originalCallback);\n\n    return app;\n};\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/172291666/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]