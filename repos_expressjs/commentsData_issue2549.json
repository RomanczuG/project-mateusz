[
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/74454135",
    "html_url": "https://github.com/expressjs/express/issues/2549#issuecomment-74454135",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2549",
    "id": 74454135,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDU0MTM1",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-16T03:00:06Z",
    "updated_at": "2015-02-16T03:00:06Z",
    "author_association": "MEMBER",
    "body": "I'm sorry, it's hard for me to understand what you're saying. Can you distill this down further into something I can copy and paste and run (and not in CoffeeScript)? At the very least, I see no reason why what you posted (with the `.all`) wouldn't work as you describe you expect it to, but since I cannot paste that into a file and run it, I'm not able to explain anything further than that.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/74454135/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/74454387",
    "html_url": "https://github.com/expressjs/express/issues/2549#issuecomment-74454387",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2549",
    "id": 74454387,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDU0Mzg3",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-16T03:04:28Z",
    "updated_at": "2015-02-16T03:04:28Z",
    "author_association": "MEMBER",
    "body": "> The problem here is that User.administratorOnly() is called after passport.session()\n\nOhh. Well, _of course_ `User.administratorOnly()` is called _after_ `passport.session()`, because you declared it after `passport.session()`. Is this a typo? Re-reading your post, there seems to be conflicting information (in which order are you seeing them called, in declared order or not?).\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/74454387/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/74454479",
    "html_url": "https://github.com/expressjs/express/issues/2549#issuecomment-74454479",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2549",
    "id": 74454479,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDU0NDc5",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-16T03:05:51Z",
    "updated_at": "2015-02-16T03:05:51Z",
    "author_association": "MEMBER",
    "body": "> Passport's deserializeUser function\n\nJust to note, I have zero knowledge of passport, so since I don't see you call a `deserializeUser` function anywhere above, I don't know what that part of your post means.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/74454479/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/74454890",
    "html_url": "https://github.com/expressjs/express/issues/2549#issuecomment-74454890",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2549",
    "id": 74454890,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDU0ODkw",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-16T03:13:18Z",
    "updated_at": "2015-02-16T03:13:18Z",
    "author_association": "MEMBER",
    "body": "Anyway, as for your initial question about the `.all`, Express runs all routes strictly in declared order, so the following two will always run in the same order. As for what `passport` is doing, I'm not sure, but if you give me something I can copy, paste, and run, I can debug it.\n\n``` js\napp.route('/')\n.all(mw1)\n.get(handler)\n```\n\nwill run `mw1` and `handler` in the same order as\n\n``` js\napp.route('/')\n.get(mw1, handler)\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/74454890/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/74454919",
    "html_url": "https://github.com/expressjs/express/issues/2549#issuecomment-74454919",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2549",
    "id": 74454919,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDU0OTE5",
    "user": {
      "login": "rhys-vdw",
      "id": 822105,
      "node_id": "MDQ6VXNlcjgyMjEwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/822105?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rhys-vdw",
      "html_url": "https://github.com/rhys-vdw",
      "followers_url": "https://api.github.com/users/rhys-vdw/followers",
      "following_url": "https://api.github.com/users/rhys-vdw/following{/other_user}",
      "gists_url": "https://api.github.com/users/rhys-vdw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rhys-vdw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rhys-vdw/subscriptions",
      "organizations_url": "https://api.github.com/users/rhys-vdw/orgs",
      "repos_url": "https://api.github.com/users/rhys-vdw/repos",
      "events_url": "https://api.github.com/users/rhys-vdw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rhys-vdw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-16T03:13:59Z",
    "updated_at": "2015-02-16T03:13:59Z",
    "author_association": "NONE",
    "body": "Okay, sorry. Yes, that was a typo (corrected now).\n\n`deserializeUser` is a side effect of passport.session(). This is what I expect to happen on `/clients/` GET:\n1. Request is received with cookie data.\n2. `passport.session()` creates `req.user`\n3. `router` re-routes `/clients` to `clientsRouter`\n4. `clientsRouter`'s `.route('/').all` middleware is executed, checking `req.user`\n5. Then move to `.route('/').get`\n6. Successfully return collection.\n\nThe problem is that step `router.route('/').all` is being called before the middleware specified in `app.use`\n\nI will try to reduce this problem down a simple example, I was just hoping there something obvious I was missing.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/74454919/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/74455055",
    "html_url": "https://github.com/expressjs/express/issues/2549#issuecomment-74455055",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2549",
    "id": 74455055,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDU1MDU1",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-16T03:16:33Z",
    "updated_at": "2015-02-16T03:16:33Z",
    "author_association": "MEMBER",
    "body": "> I was just hoping there something obvious I was missing.\n\nYes, nothing at all is obvious, especially once you start talking about internal third-party module details :) The absolute simpliest test you can do is put the following before `app.use passport.session()`:\n\n``` js\napp.use(function (req, res, next) {\n  console.log('before app.use passport.session()')\n  next()\n})\n```\n\nand simply add `console.log` in your `User.administratorOnly()` function. If you see them appear in the proper order, then Express would seem to be executing things in the correct order.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/74455055/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/74455616",
    "html_url": "https://github.com/expressjs/express/issues/2549#issuecomment-74455616",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2549",
    "id": 74455616,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDU1NjE2",
    "user": {
      "login": "rhys-vdw",
      "id": 822105,
      "node_id": "MDQ6VXNlcjgyMjEwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/822105?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rhys-vdw",
      "html_url": "https://github.com/rhys-vdw",
      "followers_url": "https://api.github.com/users/rhys-vdw/followers",
      "following_url": "https://api.github.com/users/rhys-vdw/following{/other_user}",
      "gists_url": "https://api.github.com/users/rhys-vdw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rhys-vdw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rhys-vdw/subscriptions",
      "organizations_url": "https://api.github.com/users/rhys-vdw/orgs",
      "repos_url": "https://api.github.com/users/rhys-vdw/repos",
      "events_url": "https://api.github.com/users/rhys-vdw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rhys-vdw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-16T03:28:02Z",
    "updated_at": "2015-02-16T03:28:02Z",
    "author_association": "NONE",
    "body": "Yes, I have done this and they are definitely being executed in the wrong order. Moving the `administratorOnly` call into the `get` and `post` calls fixes the problem.\n\nI am working on a reduction, but have not yet identified the problem. It may indeed be that it's some effect of Passport.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/74455616/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/74455853",
    "html_url": "https://github.com/expressjs/express/issues/2549#issuecomment-74455853",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2549",
    "id": 74455853,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDU1ODUz",
    "user": {
      "login": "rhys-vdw",
      "id": 822105,
      "node_id": "MDQ6VXNlcjgyMjEwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/822105?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rhys-vdw",
      "html_url": "https://github.com/rhys-vdw",
      "followers_url": "https://api.github.com/users/rhys-vdw/followers",
      "following_url": "https://api.github.com/users/rhys-vdw/following{/other_user}",
      "gists_url": "https://api.github.com/users/rhys-vdw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rhys-vdw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rhys-vdw/subscriptions",
      "organizations_url": "https://api.github.com/users/rhys-vdw/orgs",
      "repos_url": "https://api.github.com/users/rhys-vdw/repos",
      "events_url": "https://api.github.com/users/rhys-vdw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rhys-vdw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-16T03:32:34Z",
    "updated_at": "2015-02-16T03:32:34Z",
    "author_association": "NONE",
    "body": "Thanks for your time, I'll get back to you as soon as I work out what is causing this problem.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/74455853/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/74455986",
    "html_url": "https://github.com/expressjs/express/issues/2549#issuecomment-74455986",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2549",
    "id": 74455986,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDU1OTg2",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-16T03:35:13Z",
    "updated_at": "2015-02-16T03:35:13Z",
    "author_association": "MEMBER",
    "body": "Ok. I'm going to close this unless you can provide something I can act on. I played around and was not able to reproduce with Express. Here is an example app I used:\n\n``` js\nvar express = require('express')\n\nvar app = express()\n\nvar fooRouter = express.Router()\n\nfooRouter.route('/')\n.all(function (req, res, next) { console.log('second'); if (!req.passed) throw new Error(); next() })\n.get(function (req, res, next) { console.log('third'); res.send('you \"passed\"') })\n\nvar router = express.Router()\n\nrouter.use('/foo', fooRouter)\n\napp.use(function (req, res, next) {\n  console.log('first')\n  req.passed = true\n  next()\n})\n\napp.use(router)\n\napp.listen(4000)\n```\n\nand in the console:\n\n```\n$ node app.js & curl http://localhost:4000/foo/\n[1] 11272\nfirst\nsecond\nthird\nyou \"passed\"\n```\n\nand the `.use` was called before the `.all` as expected. Feel free to build on that and see if you can tweak it to fail to execute in the incorrect order.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/74455986/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/74456741",
    "html_url": "https://github.com/expressjs/express/issues/2549#issuecomment-74456741",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2549",
    "id": 74456741,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDU2NzQx",
    "user": {
      "login": "rhys-vdw",
      "id": 822105,
      "node_id": "MDQ6VXNlcjgyMjEwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/822105?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rhys-vdw",
      "html_url": "https://github.com/rhys-vdw",
      "followers_url": "https://api.github.com/users/rhys-vdw/followers",
      "following_url": "https://api.github.com/users/rhys-vdw/following{/other_user}",
      "gists_url": "https://api.github.com/users/rhys-vdw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rhys-vdw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rhys-vdw/subscriptions",
      "organizations_url": "https://api.github.com/users/rhys-vdw/orgs",
      "repos_url": "https://api.github.com/users/rhys-vdw/repos",
      "events_url": "https://api.github.com/users/rhys-vdw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rhys-vdw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-16T03:48:44Z",
    "updated_at": "2015-02-16T03:48:44Z",
    "author_association": "NONE",
    "body": "Ah, I think I've worked it out actually! The rejected request is the `OPTIONS` request, which does not contain a `Cookie` header.\n\nThis means that the session info is not available to `passport.session()`, which fails to deserialize the user. `req.user` is `undefined` when it reaches my `administratorOnly` check. `OPTIONS` failing prevents an additional `GET` request from being sent, and so the request is denied.\n\nSo, instead of `.all()` I need something that only applies to `GET`, `POST`, `PUT`, `DELETE`.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/74456741/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/74457144",
    "html_url": "https://github.com/expressjs/express/issues/2549#issuecomment-74457144",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2549",
    "id": 74457144,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDU3MTQ0",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-16T03:56:18Z",
    "updated_at": "2015-02-16T03:56:18Z",
    "author_association": "MEMBER",
    "body": "Ah, I see. Yes, `.all` applies to _all_ requests, even if the verbs are not explicitly declared in your route. I had a proposal to add `.use` to the route that would behave just like `.all`, but only works for the verbs you have declared on your route. This seems like the behavior you're looking for, but it never got enough traction.\n\nBut on the `OPTIONS` note, do you really want un-authorized users to be able to enumerate your admin routes and verbs (which is what happens if you don't assert on the `OPTIONS` verb)?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/74457144/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/74457258",
    "html_url": "https://github.com/expressjs/express/issues/2549#issuecomment-74457258",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2549",
    "id": 74457258,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDU3MjU4",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-16T03:58:19Z",
    "updated_at": "2015-02-16T03:58:19Z",
    "author_association": "MEMBER",
    "body": "#1980 is the issue that didn't gain traction that I was referring to.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/74457258/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/74457669",
    "html_url": "https://github.com/expressjs/express/issues/2549#issuecomment-74457669",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2549",
    "id": 74457669,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDU3NjY5",
    "user": {
      "login": "rhys-vdw",
      "id": 822105,
      "node_id": "MDQ6VXNlcjgyMjEwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/822105?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rhys-vdw",
      "html_url": "https://github.com/rhys-vdw",
      "followers_url": "https://api.github.com/users/rhys-vdw/followers",
      "following_url": "https://api.github.com/users/rhys-vdw/following{/other_user}",
      "gists_url": "https://api.github.com/users/rhys-vdw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rhys-vdw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rhys-vdw/subscriptions",
      "organizations_url": "https://api.github.com/users/rhys-vdw/orgs",
      "repos_url": "https://api.github.com/users/rhys-vdw/repos",
      "events_url": "https://api.github.com/users/rhys-vdw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rhys-vdw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-16T04:06:49Z",
    "updated_at": "2015-02-16T04:06:49Z",
    "author_association": "NONE",
    "body": "I'm not sure, but I believe that that cookie data is not sent with an `OPTIONS` request by standard, so I don't see a way around this without changing how my session works. Perhaps an API key could fix it, but for now I just want to get the job done.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/74457669/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/74457984",
    "html_url": "https://github.com/expressjs/express/issues/2549#issuecomment-74457984",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2549",
    "id": 74457984,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDU3OTg0",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-16T04:13:22Z",
    "updated_at": "2015-02-16T04:13:22Z",
    "author_association": "MEMBER",
    "body": "`OPTIONS` is just another verb like `GET` and `POST`; the HTTP standard has no such restriction. Perhaps you are referring to the CORS pre-flight requests? \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/74457984/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/74458386",
    "html_url": "https://github.com/expressjs/express/issues/2549#issuecomment-74458386",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2549",
    "id": 74458386,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDU4Mzg2",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-16T04:22:28Z",
    "updated_at": "2015-02-16T04:22:28Z",
    "author_association": "MEMBER",
    "body": "The easiest way, if you want to \"deal with\" CORS pre-flight requests is to use a CORS middleware, like `corser`. If you don't allow CORS (which it doesn't sound like you do, if the pre-flight requests are making their way down into your routes) is to simply add this to the top of your app:\n\n``` js\nvar corser = require('corser')\n\napp.use(corser.create({ origins: function (origin, cb) { cb(null, false) } }))\n```\n\nWhich will stop the pre-flight CORS requests from going into your routes and deny all CORS access, which is what happens if you don't handle them anyway (CORS is a \"double opt-in\" standard to deal with the legacy web).\n\nIdeally, though, you should expect to get any type of request into your routes that are missing cookies, because I could, for instance, `curl` one of your routes without cookies if I desired.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/74458386/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/74459888",
    "html_url": "https://github.com/expressjs/express/issues/2549#issuecomment-74459888",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2549",
    "id": 74459888,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDU5ODg4",
    "user": {
      "login": "rhys-vdw",
      "id": 822105,
      "node_id": "MDQ6VXNlcjgyMjEwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/822105?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rhys-vdw",
      "html_url": "https://github.com/rhys-vdw",
      "followers_url": "https://api.github.com/users/rhys-vdw/followers",
      "following_url": "https://api.github.com/users/rhys-vdw/following{/other_user}",
      "gists_url": "https://api.github.com/users/rhys-vdw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rhys-vdw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rhys-vdw/subscriptions",
      "organizations_url": "https://api.github.com/users/rhys-vdw/orgs",
      "repos_url": "https://api.github.com/users/rhys-vdw/repos",
      "events_url": "https://api.github.com/users/rhys-vdw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rhys-vdw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-16T04:55:52Z",
    "updated_at": "2015-02-16T04:55:52Z",
    "author_association": "NONE",
    "body": "Ugh. Sorry, a lot to process. I am using CORS, yes. The front end resides on a different port.\n\nPre-flight requests just magically worked before, but if you specify an `.all` on a route that has no `.options`, it's `next()` just ends up nowhere, and a 404 is returned.\n\nThe solution I've found now is [sending an empty success response](https://gist.github.com/cuppster/2344435). TBH I'm not 100% over what the body of the default pre-flight response did, but it seems to be working in Chrome now.\n\nI guess ideally I'd like to send that default body (which lists the available routes), but I'm not sure how to tell Express to generate this.\n\nCorser may be the solution I need, but I'm out of time for learning new libraries today.\n\nThanks again for your help, very generous of you.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/74459888/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/74460088",
    "html_url": "https://github.com/expressjs/express/issues/2549#issuecomment-74460088",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2549",
    "id": 74460088,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDYwMDg4",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-16T04:59:29Z",
    "updated_at": "2015-02-16T04:59:29Z",
    "author_association": "MEMBER",
    "body": "It's no problem! I highly recommend _not_ using https://gist.github.com/cuppster/2344435 , as it does not fully comply with the CORS specification. I would suggest removing that from your codebase and simply using the `corser` module :)\n\nIf you want to allow _any_ CORS request, then simply add the following at the top of your app (probably above your passport stuff), and you should be good and the `.all` won't get invoked for the pre-flight requests any longer:\n\n``` coffeescript\napp = express()\n\napp.use corser.create()\napp.use bodyParser.json()\napp.use cookieParser()\napp.use session\n  secret: '----'\n  key: '---'\n  cookie:\n    maxAge: moment.duration(30, 'days').asMilliseconds()\n  saveUninitialized: true\n  resave: true\napp.use passport.initialize()\napp.use passport.session()\napp.use router\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/74460088/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/74461560",
    "html_url": "https://github.com/expressjs/express/issues/2549#issuecomment-74461560",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2549",
    "id": 74461560,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDYxNTYw",
    "user": {
      "login": "rhys-vdw",
      "id": 822105,
      "node_id": "MDQ6VXNlcjgyMjEwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/822105?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rhys-vdw",
      "html_url": "https://github.com/rhys-vdw",
      "followers_url": "https://api.github.com/users/rhys-vdw/followers",
      "following_url": "https://api.github.com/users/rhys-vdw/following{/other_user}",
      "gists_url": "https://api.github.com/users/rhys-vdw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rhys-vdw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rhys-vdw/subscriptions",
      "organizations_url": "https://api.github.com/users/rhys-vdw/orgs",
      "repos_url": "https://api.github.com/users/rhys-vdw/repos",
      "events_url": "https://api.github.com/users/rhys-vdw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rhys-vdw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-16T05:28:58Z",
    "updated_at": "2015-02-16T05:28:58Z",
    "author_association": "NONE",
    "body": "I'm convinced. On the to-do list. Thanks again!\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/74461560/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]