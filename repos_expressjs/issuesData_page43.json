[
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/742",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/742/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/742/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/742/events",
    "html_url": "https://github.com/expressjs/express/issues/742",
    "id": 1188625,
    "node_id": "MDU6SXNzdWUxMTg4NjI1",
    "number": 742,
    "title": "jade doctype tag will not be applied.",
    "user": {
      "login": "hileon",
      "id": 109745,
      "node_id": "MDQ6VXNlcjEwOTc0NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/109745?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hileon",
      "html_url": "https://github.com/hileon",
      "followers_url": "https://api.github.com/users/hileon/followers",
      "following_url": "https://api.github.com/users/hileon/following{/other_user}",
      "gists_url": "https://api.github.com/users/hileon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hileon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hileon/subscriptions",
      "organizations_url": "https://api.github.com/users/hileon/orgs",
      "repos_url": "https://api.github.com/users/hileon/repos",
      "events_url": "https://api.github.com/users/hileon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hileon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2011-07-08T08:41:59Z",
    "updated_at": "2012-06-17T02:37:23Z",
    "closed_at": "2012-06-17T02:37:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When doctype html or !!! 5 entered in jade file, it will not be applied to the template.\nExpress still sends default doctype in view options to jade.\ntested in express 2.4.2\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/742/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/742/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/741",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/741/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/741/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/741/events",
    "html_url": "https://github.com/expressjs/express/pull/741",
    "id": 1182802,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjEzMTc0",
    "number": 741,
    "title": "res.render(), manually set HTTP status using the 'HTTPStatus' option instead of the 'status' option.",
    "user": {
      "login": "sebm",
      "id": 188161,
      "node_id": "MDQ6VXNlcjE4ODE2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/188161?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sebm",
      "html_url": "https://github.com/sebm",
      "followers_url": "https://api.github.com/users/sebm/followers",
      "following_url": "https://api.github.com/users/sebm/following{/other_user}",
      "gists_url": "https://api.github.com/users/sebm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sebm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sebm/subscriptions",
      "organizations_url": "https://api.github.com/users/sebm/orgs",
      "repos_url": "https://api.github.com/users/sebm/repos",
      "events_url": "https://api.github.com/users/sebm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sebm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2011-07-07T15:12:36Z",
    "updated_at": "2014-08-08T04:38:27Z",
    "closed_at": "2011-07-07T16:41:45Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/741",
      "html_url": "https://github.com/expressjs/express/pull/741",
      "diff_url": "https://github.com/expressjs/express/pull/741.diff",
      "patch_url": "https://github.com/expressjs/express/pull/741.patch",
      "merged_at": null
    },
    "body": "Per issue #739.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/741/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/741/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/740",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/740/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/740/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/740/events",
    "html_url": "https://github.com/expressjs/express/pull/740",
    "id": 1179911,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjEyNDcx",
    "number": 740,
    "title": "Tentative support for node 0.5",
    "user": {
      "login": "eee-c",
      "id": 26528,
      "node_id": "MDQ6VXNlcjI2NTI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/26528?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eee-c",
      "html_url": "https://github.com/eee-c",
      "followers_url": "https://api.github.com/users/eee-c/followers",
      "following_url": "https://api.github.com/users/eee-c/following{/other_user}",
      "gists_url": "https://api.github.com/users/eee-c/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eee-c/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eee-c/subscriptions",
      "organizations_url": "https://api.github.com/users/eee-c/orgs",
      "repos_url": "https://api.github.com/users/eee-c/repos",
      "events_url": "https://api.github.com/users/eee-c/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eee-c/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2011-07-07T04:19:24Z",
    "updated_at": "2014-06-13T21:09:04Z",
    "closed_at": "2011-07-07T04:38:36Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/740",
      "html_url": "https://github.com/expressjs/express/pull/740",
      "diff_url": "https://github.com/expressjs/express/pull/740.diff",
      "patch_url": "https://github.com/expressjs/express/pull/740.patch",
      "merged_at": null
    },
    "body": "Any chance for supporting node 0.5 in the npm package?\n\nI have been using express with 0.5.0-pre for a while now as I experiment with SPDY support.  Admittedly, I have not explored the full breadth of express, but all of my sample apps have worked fine.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/740/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/740/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/739",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/739/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/739/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/739/events",
    "html_url": "https://github.com/expressjs/express/issues/739",
    "id": 1179774,
    "node_id": "MDU6SXNzdWUxMTc5Nzc0",
    "number": 739,
    "title": "Docs don't mention that 'status' is a special parameter for res.render",
    "user": {
      "login": "sebm",
      "id": 188161,
      "node_id": "MDQ6VXNlcjE4ODE2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/188161?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sebm",
      "html_url": "https://github.com/sebm",
      "followers_url": "https://api.github.com/users/sebm/followers",
      "following_url": "https://api.github.com/users/sebm/following{/other_user}",
      "gists_url": "https://api.github.com/users/sebm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sebm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sebm/subscriptions",
      "organizations_url": "https://api.github.com/users/sebm/orgs",
      "repos_url": "https://api.github.com/users/sebm/repos",
      "events_url": "https://api.github.com/users/sebm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sebm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2011-07-07T03:20:22Z",
    "updated_at": "2011-07-07T16:10:12Z",
    "closed_at": "2011-07-07T16:10:12Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I had been writing code like:\n\n``` javascript\napp.get('/', function(req, res){\n  res.render('index', {\n    status: 'Hey, this is my status!'\n  });\n});\n```\n\ncompletely oblivious to the fact that, thanks to [this line](https://github.com/visionmedia/express/blob/master/lib/view.js#L359), res.render puts the contents of 'status' into the HTTP header when it's set, eg the above produces \"HTTP/1.1 200 this is my status! unknown\" instead of the legal \"HTTP/1.1 200 OK'. As an example of the havoc this wreaks, it turns out that Heroku suppresses your app's outgoing traffic (without explicitly stating why) if it's not sending out legal 200 OKs.\n\nCould you possibly update the docs to warn against naming a view parameter 'status'? Thanks!\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/739/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/739/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/738",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/738/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/738/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/738/events",
    "html_url": "https://github.com/expressjs/express/issues/738",
    "id": 1176569,
    "node_id": "MDU6SXNzdWUxMTc2NTY5",
    "number": 738,
    "title": "With showStack:true, any errors generated after response.send crash node.js",
    "user": {
      "login": "dnf",
      "id": 871497,
      "node_id": "MDQ6VXNlcjg3MTQ5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/871497?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dnf",
      "html_url": "https://github.com/dnf",
      "followers_url": "https://api.github.com/users/dnf/followers",
      "following_url": "https://api.github.com/users/dnf/following{/other_user}",
      "gists_url": "https://api.github.com/users/dnf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dnf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dnf/subscriptions",
      "organizations_url": "https://api.github.com/users/dnf/orgs",
      "repos_url": "https://api.github.com/users/dnf/repos",
      "events_url": "https://api.github.com/users/dnf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dnf/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2011-07-06T20:34:43Z",
    "updated_at": "2012-06-17T02:37:23Z",
    "closed_at": "2012-06-17T02:37:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Here is a minimal repro server:\n\n``` coffeescript\nexpress = require 'express'\n\nserver = express.createServer()\nserver.use(express.errorHandler({ showStack: true }));\n\nserver.get( '/', (request, response) ->\n    response.send \"text\"\n    x.y = z\n    )\n\nserver.listen 8080\n```\n\nWhen you attempt to hit localhost:8080 you will crash the server with a massive stack trace, which boils down the fact that the response is already sent so the errorHandler can't change it.  The fact that the response can't be recalled is fine, but it shouldn't down the server imo.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/738/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/738/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/737",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/737/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/737/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/737/events",
    "html_url": "https://github.com/expressjs/express/issues/737",
    "id": 1171648,
    "node_id": "MDU6SXNzdWUxMTcxNjQ4",
    "number": 737,
    "title": "res.json does not handle JSONP in 2.4.0",
    "user": {
      "login": "mhart",
      "id": 367936,
      "node_id": "MDQ6VXNlcjM2NzkzNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/367936?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mhart",
      "html_url": "https://github.com/mhart",
      "followers_url": "https://api.github.com/users/mhart/followers",
      "following_url": "https://api.github.com/users/mhart/following{/other_user}",
      "gists_url": "https://api.github.com/users/mhart/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mhart/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mhart/subscriptions",
      "organizations_url": "https://api.github.com/users/mhart/orgs",
      "repos_url": "https://api.github.com/users/mhart/repos",
      "events_url": "https://api.github.com/users/mhart/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mhart/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2011-07-06T02:59:30Z",
    "updated_at": "2011-07-06T16:32:23Z",
    "closed_at": "2011-07-06T16:32:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "res.json does not return JSONP output (at all) if the callback parameter is present.\n\nIt would be nice if it just replicated the functionality from res.send in this regard.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/737/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/737/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/736",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/736/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/736/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/736/events",
    "html_url": "https://github.com/expressjs/express/issues/736",
    "id": 1162780,
    "node_id": "MDU6SXNzdWUxMTYyNzgw",
    "number": 736,
    "title": "express install hangs up on Lion due a refused connection to amazonaws",
    "user": {
      "login": "cognominal",
      "id": 16176,
      "node_id": "MDQ6VXNlcjE2MTc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/16176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cognominal",
      "html_url": "https://github.com/cognominal",
      "followers_url": "https://api.github.com/users/cognominal/followers",
      "following_url": "https://api.github.com/users/cognominal/following{/other_user}",
      "gists_url": "https://api.github.com/users/cognominal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cognominal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cognominal/subscriptions",
      "organizations_url": "https://api.github.com/users/cognominal/orgs",
      "repos_url": "https://api.github.com/users/cognominal/repos",
      "events_url": "https://api.github.com/users/cognominal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cognominal/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2011-07-04T15:03:22Z",
    "updated_at": "2012-06-17T02:37:23Z",
    "closed_at": "2012-06-17T02:37:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Due to testing enabled in `~/.npmrc`\n\nI removed testing option from `~/.npmrc` to skip the test and the install went fine and dandy.\nLion is probably irrelevant to the problem but I mentioned it for sake of discussion.\n\nNevertheless, hanging is not the appropriate way to handle a test on a dependency that fail.\nI will file a bug on redis as well. I don't know what test system express is using. Probably\na bug should be filed agianst that.\n\nMore info on the problem :\n\nI do  `npm install express` and it hangs. I see that it executes a `node ./test.js`.\nDoing a `lsof` on that process, I get :\n\n```\nFiles open in process 23813 - node ./test.js\n   FD TYPE     DEVICE       SIZE       NODE NAME\n    0  CHR 0x13e28d68                   631 /dev/ttys002\n    1  CHR 0x13e28d68                   631 /dev/ttys002\n    2  CHR 0x13e28d68                   631 /dev/ttys002\n    3 KQUEUE                                  count=0, state=0x2\n    4 PIPE                 16384            ->0xffffff801cea48c0\n    5 PIPE                 16384            ->0xffffff801cea5310\n    7 IPv4                                  192.168.0.5:52806->ec2-75-101-153-205.compute-1.amazonaws.com:9006\n    9  REG  0xe000002        762   33821934 /Users/stephanepayrard/.npm/expresso/0.7.6/.cache.json\n  cwd  DIR  0xe000002        476   33824664 /Users/stephanepayrard/node_modules/express/node_modules/connect-redis/node_modules/redis\n  txt  REG  0xe000002     599232   31175841 /usr/lib/dyld\n  txt  REG  0xe000002    6557460   33782548 /usr/local/bin/node\n  txt  REG  0xe000002  289058816   31909451 /private/var/db/dyld/dyld_shared_cache_x86_64\n```\n\nI see it hangs on a redis test.\nAnd indeed, installing redis\n\n```\nnpm install redis\n\n> redis@0.6.4 test /Users/stephanepayrard/node_modules/redis\n> node ./test.js\n\nUsing reply parser javascript\nclient3: Error: Redis connection to 127.0.0.1:6379 failed - ECONNREFUSED, Connection refused\n    at Socket.<anonymous> (/Users/stephanepayrard/node_modules/redis/index.js:123:28)\n    at Socket.emit (events.js:64:17)\n    at Array.0 (net.js:830:27)\n    at EventEmitter._tickCallback (node.js:126:26)\nUncaught exception: AssertionError: false == true\n    at EventEmitter.<anonymous> (/Users/stephanepayrard/node_modules/redis/test.js:1232:12)\n    at EventEmitter.emit (events.js:64:17)\n    at EventEmitter.exit (node.js:199:15)\n    at RedisClient.<anonymous> (/Users/stephanepayrard/node_modules/redis/test.js:1219:13)\n    at RedisClient.emit (events.js:64:17)\n    at Socket.<anonymous> (/Users/stephanepayrard/node_modules/redis/index.js:123:14)\n    at Socket.emit (events.js:64:17)\n    at Array.<anonymous> (net.js:830:27)\n    at EventEmitter._tickCallback (node.js:126:26)\nclient2: Error: Redis connection to 127.0.0.1:6379 failed - ECONNREFUSED, Connection refused\n    at Socket.<anonymous> (/Users/stephanepayrard/node_modules/redis/index.js:123:28)\n    at Socket.emit (events.js:64:17)\n    at Array.0 (net.js:830:27)\n    at EventEmitter._tickCallback (node.js:126:26)\nUncaught exception: AssertionError: false == true\n    at EventEmitter.<anonymous> (/Users/stephanepayrard/node_modules/redis/test.js:1232:12)\n    at EventEmitter.emit (events.js:64:17)\n    at EventEmitter.exit (node.js:199:15)\n    at RedisClient.<anonymous> (/Users/stephanepayrard/node_modules/redis/test.js:1215:13)\n    at RedisClient.emit (events.js:64:17)\n    at Socket.<anonymous> (/Users/stephanepayrard/node_modules/redis/index.js:123:14)\n    at Socket.emit (events.js:64:17)\n    at Array.<anonymous> (net.js:830:27)\n    at EventEmitter._tickCallback (node.js:126:26)\nclient: Error: Redis connection to 127.0.0.1:6379 failed - ECONNREFUSED, Connection refused\n    at Socket.<anonymous> (/Users/stephanepayrard/node_modules/redis/index.js:123:28)\n    at Socket.emit (events.js:64:17)\n    at Array.0 (net.js:830:27)\n    at EventEmitter._tickCallback (node.js:126:26)\nUncaught exception: AssertionError: false == true\n    at EventEmitter.<anonymous> (/Users/stephanepayrard/node_modules/redis/test.js:1232:12)\n    at EventEmitter.emit (events.js:64:17)\n    at EventEmitter.exit (node.js:199:15)\n    at RedisClient.<anonymous> (/Users/stephanepayrard/node_modules/redis/test.js:1211:13)\n    at RedisClient.emit (events.js:64:17)\n    at Socket.<anonymous> (/Users/stephanepayrard/node_modules/redis/index.js:123:14)\n    at Socket.emit (events.js:64:17)\n    at Array.<anonymous> (net.js:830:27)\n    at EventEmitter._tickCallback (node.js:126:26)\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/736/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/736/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/735",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/735/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/735/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/735/events",
    "html_url": "https://github.com/expressjs/express/pull/735",
    "id": 1161441,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjA4MjQ5",
    "number": 735,
    "title": "optional array of environments on `configure`",
    "user": {
      "login": "masylum",
      "id": 28248,
      "node_id": "MDQ6VXNlcjI4MjQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/28248?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/masylum",
      "html_url": "https://github.com/masylum",
      "followers_url": "https://api.github.com/users/masylum/followers",
      "following_url": "https://api.github.com/users/masylum/following{/other_user}",
      "gists_url": "https://api.github.com/users/masylum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/masylum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/masylum/subscriptions",
      "organizations_url": "https://api.github.com/users/masylum/orgs",
      "repos_url": "https://api.github.com/users/masylum/repos",
      "events_url": "https://api.github.com/users/masylum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/masylum/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2011-07-04T10:42:54Z",
    "updated_at": "2011-07-04T16:04:14Z",
    "closed_at": "2011-07-04T16:16:38Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/735",
      "html_url": "https://github.com/expressjs/express/pull/735",
      "diff_url": "https://github.com/expressjs/express/pull/735.diff",
      "patch_url": "https://github.com/expressjs/express/pull/735.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/735/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/735/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/734",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/734/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/734/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/734/events",
    "html_url": "https://github.com/expressjs/express/issues/734",
    "id": 1159023,
    "node_id": "MDU6SXNzdWUxMTU5MDIz",
    "number": 734,
    "title": "express.static makes the server crash",
    "user": {
      "login": "dall",
      "id": 851288,
      "node_id": "MDQ6VXNlcjg1MTI4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/851288?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dall",
      "html_url": "https://github.com/dall",
      "followers_url": "https://api.github.com/users/dall/followers",
      "following_url": "https://api.github.com/users/dall/following{/other_user}",
      "gists_url": "https://api.github.com/users/dall/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dall/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dall/subscriptions",
      "organizations_url": "https://api.github.com/users/dall/orgs",
      "repos_url": "https://api.github.com/users/dall/repos",
      "events_url": "https://api.github.com/users/dall/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dall/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2011-07-03T21:08:48Z",
    "updated_at": "2011-07-04T15:40:01Z",
    "closed_at": "2011-07-04T15:40:01Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello,\n\ni'm doing a simple test with ApacheBench to check how fast express sends the static files.\n\nI have a very small css: (static/css/default.css)\n\nbody {\n   background-color:#FFFFFF;\n}\n\nand this middleware:\n\napp.use(express.static(__dirname + '/static'));\n\nab -n 10000 -c 1000 http://127.0.0.1:3000/css/default.css\n(Total of 15 requests completed)\n\nThis test blocks the server, with the follow error:\n\nstream.js:99\n      throw er; // Unhandled stream error in pipe.\n      ^\nError: EMFILE, Too many open files '/home/damiano/node/mywebsite.it/static/css/default.css'\n\nis it a bug?\n\ndamiano@damiano-P5K-VM:~$ ulimit -a\ncore file size          (blocks, -c) 0\ndata seg size           (kbytes, -d) unlimited\nscheduling priority             (-e) 20\nfile size               (blocks, -f) unlimited\npending signals                 (-i) 16382\nmax locked memory       (kbytes, -l) 64\nmax memory size         (kbytes, -m) unlimited\nopen files                      (-n) 1024\npipe size            (512 bytes, -p) 8\nPOSIX message queues     (bytes, -q) 819200\nreal-time priority              (-r) 0\nstack size              (kbytes, -s) 8192\ncpu time               (seconds, -t) unlimited\nmax user processes              (-u) unlimited\nvirtual memory          (kbytes, -v) unlimited\nfile locks                      (-x) unlimited\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/734/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/734/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/733",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/733/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/733/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/733/events",
    "html_url": "https://github.com/expressjs/express/issues/733",
    "id": 1151570,
    "node_id": "MDU6SXNzdWUxMTUxNTcw",
    "number": 733,
    "title": "remove app.error() in 3.x",
    "user": {
      "login": "tj",
      "id": 25254,
      "node_id": "MDQ6VXNlcjI1MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tj",
      "html_url": "https://github.com/tj",
      "followers_url": "https://api.github.com/users/tj/followers",
      "following_url": "https://api.github.com/users/tj/following{/other_user}",
      "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
      "organizations_url": "https://api.github.com/users/tj/orgs",
      "repos_url": "https://api.github.com/users/tj/repos",
      "events_url": "https://api.github.com/users/tj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 88345,
        "node_id": "MDU6TGFiZWw4ODM0NQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/3.x",
        "name": "3.x",
        "color": "ededed",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2011-07-01T17:34:46Z",
    "updated_at": "2011-07-11T18:07:04Z",
    "closed_at": "2011-07-11T18:07:04Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "added confusing with little gain, and helps give people a reason to ignore learning how connect handles errors. the only benefit of app.error is that you can place these _anywhere_ in any order, and they will remain at the bottom of the middleware stack, however this could easily be done in config:\n\n```\napp.use(...);\napp.use(app.router);\napp.use(myErrorHandler);\n```\n\nwhere myErrorHandler is a function with an arity of 4, aka `(err, req, res, next)`\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/733/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/733/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/732",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/732/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/732/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/732/events",
    "html_url": "https://github.com/expressjs/express/issues/732",
    "id": 1147925,
    "node_id": "MDU6SXNzdWUxMTQ3OTI1",
    "number": 732,
    "title": "Write binary image data to response",
    "user": {
      "login": "honza",
      "id": 206357,
      "node_id": "MDQ6VXNlcjIwNjM1Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/206357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/honza",
      "html_url": "https://github.com/honza",
      "followers_url": "https://api.github.com/users/honza/followers",
      "following_url": "https://api.github.com/users/honza/following{/other_user}",
      "gists_url": "https://api.github.com/users/honza/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/honza/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/honza/subscriptions",
      "organizations_url": "https://api.github.com/users/honza/orgs",
      "repos_url": "https://api.github.com/users/honza/repos",
      "events_url": "https://api.github.com/users/honza/events{/privacy}",
      "received_events_url": "https://api.github.com/users/honza/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2011-07-01T01:27:20Z",
    "updated_at": "2021-05-11T18:47:01Z",
    "closed_at": "2011-07-01T22:45:12Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This doesn't seem to work.\n\n```\napp.get('/image.jpg', function(req, res) {\n    res.contentType('image/jpeg');\n    res.end(data);\n});\n```\n\nIt returns a 200 but the response is empty. Thoughts? Thanks\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/732/reactions",
      "total_count": 8,
      "+1": 8,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/732/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/731",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/731/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/731/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/731/events",
    "html_url": "https://github.com/expressjs/express/issues/731",
    "id": 1147807,
    "node_id": "MDU6SXNzdWUxMTQ3ODA3",
    "number": 731,
    "title": "Default res.cookie() and res.clearCookie() path to \"home\" setting",
    "user": {
      "login": "tj",
      "id": 25254,
      "node_id": "MDQ6VXNlcjI1MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tj",
      "html_url": "https://github.com/tj",
      "followers_url": "https://api.github.com/users/tj/followers",
      "following_url": "https://api.github.com/users/tj/following{/other_user}",
      "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
      "organizations_url": "https://api.github.com/users/tj/orgs",
      "repos_url": "https://api.github.com/users/tj/repos",
      "events_url": "https://api.github.com/users/tj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2011-07-01T00:48:23Z",
    "updated_at": "2011-07-04T20:18:56Z",
    "closed_at": "2011-07-04T20:18:56Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "I have mixed feelings about this, as it's potentially confusing, though I think it's less confusing than people getting messed up and thinking it _is_ the default. also it makes the api look better for the common use-case. so:\n\n```\n res.cookie('name', 'val', { path: '/' })\n```\n\nwould just become:\n\n```\n res.cookie('name', 'val')\n```\n\nand by defaulting this to the \"home\" setting, those who mount express at say `/store`, will then be implicitly altering this default\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/731/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/731/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/730",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/730/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/730/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/730/events",
    "html_url": "https://github.com/expressjs/express/issues/730",
    "id": 1145326,
    "node_id": "MDU6SXNzdWUxMTQ1MzI2",
    "number": 730,
    "title": "Add Example of Serving Dynamic js & css files.",
    "user": {
      "login": "ekryski",
      "id": 599019,
      "node_id": "MDQ6VXNlcjU5OTAxOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/599019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekryski",
      "html_url": "https://github.com/ekryski",
      "followers_url": "https://api.github.com/users/ekryski/followers",
      "following_url": "https://api.github.com/users/ekryski/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekryski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekryski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekryski/subscriptions",
      "organizations_url": "https://api.github.com/users/ekryski/orgs",
      "repos_url": "https://api.github.com/users/ekryski/repos",
      "events_url": "https://api.github.com/users/ekryski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekryski/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 21,
    "created_at": "2011-06-30T17:41:29Z",
    "updated_at": "2016-04-01T16:20:50Z",
    "closed_at": "2011-07-04T20:34:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Make an example that shows how one would load a dynamic javascript or css file.  For example:\n\nLet's say I want to load the minimal amount of external resources and then if a person moves to a specific page I add on javascript or css files that the new page will need.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/730/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/730/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/729",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/729/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/729/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/729/events",
    "html_url": "https://github.com/expressjs/express/issues/729",
    "id": 1141868,
    "node_id": "MDU6SXNzdWUxMTQxODY4",
    "number": 729,
    "title": "Partials don't return strings, cause res.send() to be called more than once",
    "user": {
      "login": "isaacs",
      "id": 9287,
      "node_id": "MDQ6VXNlcjkyODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9287?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/isaacs",
      "html_url": "https://github.com/isaacs",
      "followers_url": "https://api.github.com/users/isaacs/followers",
      "following_url": "https://api.github.com/users/isaacs/following{/other_user}",
      "gists_url": "https://api.github.com/users/isaacs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/isaacs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/isaacs/subscriptions",
      "organizations_url": "https://api.github.com/users/isaacs/orgs",
      "repos_url": "https://api.github.com/users/isaacs/repos",
      "events_url": "https://api.github.com/users/isaacs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/isaacs/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2011-06-30T02:19:47Z",
    "updated_at": "2011-12-02T23:05:58Z",
    "closed_at": "2011-12-02T23:05:58Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Here's a reduced example of my situation: https://github.com/isaacs/express-partial-break\n1. There's a dynamicHelper function that does `return res.partial(\"flashMessages.ejs\", options)`.  This is a handy bit of logic that shows a message if there's a message to show, and clears out the messages for that session.  (In the reduced example, it's just a single global object.)\n2. A few different views do `<%- flashMessages() %>` to call the dynamicHelper function and spit out the results of the partial.\n3. Since the partial gets run without a cb, it calls res.send().  I think this is a mistake.\n4. Since the headers have already been sent (when it entered the initial res.render() call that loaded the template that called the dynamic helper that called res.partial), this makes node blow up in a huge mushroom-cloud of stack traces.\n\nThe optimum solution here seems to be a way for me to call res.partial and get the results as a string.  I suspect that doing res.send in a res.partial call is almost always going to be a problem, because partials by their very nature are not a full response, but only part of one.  If no cb is provided, then res.partial should return the partial string, instead of sending it.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/729/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/729/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/728",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/728/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/728/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/728/events",
    "html_url": "https://github.com/expressjs/express/issues/728",
    "id": 1131237,
    "node_id": "MDU6SXNzdWUxMTMxMjM3",
    "number": 728,
    "title": "Remove res.send() as 204 in 3.x",
    "user": {
      "login": "tj",
      "id": 25254,
      "node_id": "MDQ6VXNlcjI1MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tj",
      "html_url": "https://github.com/tj",
      "followers_url": "https://api.github.com/users/tj/followers",
      "following_url": "https://api.github.com/users/tj/following{/other_user}",
      "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
      "organizations_url": "https://api.github.com/users/tj/orgs",
      "repos_url": "https://api.github.com/users/tj/repos",
      "events_url": "https://api.github.com/users/tj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 88345,
        "node_id": "MDU6TGFiZWw4ODM0NQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/3.x",
        "name": "3.x",
        "color": "ededed",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2011-06-28T16:09:53Z",
    "updated_at": "2011-07-11T18:43:26Z",
    "closed_at": "2011-07-11T18:43:26Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "too obscure \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/728/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/728/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/727",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/727/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/727/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/727/events",
    "html_url": "https://github.com/expressjs/express/issues/727",
    "id": 1131219,
    "node_id": "MDU6SXNzdWUxMTMxMjE5",
    "number": 727,
    "title": "Remove res.send() etc header field support (in 3.x)",
    "user": {
      "login": "tj",
      "id": 25254,
      "node_id": "MDQ6VXNlcjI1MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tj",
      "html_url": "https://github.com/tj",
      "followers_url": "https://api.github.com/users/tj/followers",
      "following_url": "https://api.github.com/users/tj/following{/other_user}",
      "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
      "organizations_url": "https://api.github.com/users/tj/orgs",
      "repos_url": "https://api.github.com/users/tj/repos",
      "events_url": "https://api.github.com/users/tj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 88345,
        "node_id": "MDU6TGFiZWw4ODM0NQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/3.x",
        "name": "3.x",
        "color": "ededed",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2011-06-28T16:06:40Z",
    "updated_at": "2011-07-15T18:30:37Z",
    "closed_at": "2011-07-15T18:30:37Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "for example:\n\n```\nres.send(string, { 'X-Foo': 'bar' }, 500);\n```\n\nshould be defined as shown below in 3.x, because.. it's ugly when you have many and/or large fields.\n\n```\nres.header('X-Foo', 'bar');\nres.send(string, 500);\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/727/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/727/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/726",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/726/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/726/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/726/events",
    "html_url": "https://github.com/expressjs/express/issues/726",
    "id": 1126565,
    "node_id": "MDU6SXNzdWUxMTI2NTY1",
    "number": 726,
    "title": "Failed to locate view:  layout",
    "user": {
      "login": "marccampbell",
      "id": 173451,
      "node_id": "MDQ6VXNlcjE3MzQ1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/173451?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marccampbell",
      "html_url": "https://github.com/marccampbell",
      "followers_url": "https://api.github.com/users/marccampbell/followers",
      "following_url": "https://api.github.com/users/marccampbell/following{/other_user}",
      "gists_url": "https://api.github.com/users/marccampbell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marccampbell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marccampbell/subscriptions",
      "organizations_url": "https://api.github.com/users/marccampbell/orgs",
      "repos_url": "https://api.github.com/users/marccampbell/repos",
      "events_url": "https://api.github.com/users/marccampbell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marccampbell/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2011-06-28T03:35:18Z",
    "updated_at": "2011-06-28T18:30:03Z",
    "closed_at": "2011-06-28T05:25:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have a few pages using layout which is different from the default one.  One of these works, while the others show this error (the filename in question most definitely does exist)\n\n```\nfailed to locate view \"authedLayout.jade\", tried:\n  - /server/current/views/authedLayout.jade\n\nError: failed to locate view \"authedLayout.jade\"\n    at Function.compile (/home/ec2-user/node_modules/express/lib/view.js:58:15)\n    at ServerResponse._render (/home/ec2-user/node_modules/express/lib/view.js:416:18)\n    at ServerResponse.render (/home/ec2-user/node_modules/express/lib/view.js:316:17)\n    at ServerResponse._render (/home/ec2-user/node_modules/express/lib/view.js:432:10)\n    at ServerResponse.render (/home/ec2-user/node_modules/express/lib/view.js:316:17)\n    at /server/current/site_authed.js:125:21\n    at /server/current/lib/team.js:162:9\n    at /server/current/lib/account.js:192:9\n    at /home/ec2-user/node_modules/mongoose/lib/mongoose/query.js:660:22\n    at model.init (/home/ec2-user/node_modules/mongoose/lib/mongoose/document.js:147:5)\n```\n\nThe code I'm using to attempt to render the view is:\n\n```\n    res.render('team',\n               {layout: 'authedLayout.jade',\n                locals:\n                  {pageTitle: 'My Page Title',\n                   account:account}\n                });\n```\n\nI use this code in both places, and it works in one and not in others.  I'm not sure what to do.  It works perfectly fine on my OSX machine running express 2.2.2 but not on my server (Amazon Linux) running express 2.3.12.\n\nAny thoughts on what to try?  The layout jade files and the page template jade files are all in the same location, it's a flat \"views\" folder with maybe a dozen .jade files.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/726/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/726/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/725",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/725/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/725/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/725/events",
    "html_url": "https://github.com/expressjs/express/issues/725",
    "id": 1123822,
    "node_id": "MDU6SXNzdWUxMTIzODIy",
    "number": 725,
    "title": "Dynamic Helpers that can act as functions",
    "user": {
      "login": "gdpotter",
      "id": 364612,
      "node_id": "MDQ6VXNlcjM2NDYxMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/364612?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gdpotter",
      "html_url": "https://github.com/gdpotter",
      "followers_url": "https://api.github.com/users/gdpotter/followers",
      "following_url": "https://api.github.com/users/gdpotter/following{/other_user}",
      "gists_url": "https://api.github.com/users/gdpotter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gdpotter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gdpotter/subscriptions",
      "organizations_url": "https://api.github.com/users/gdpotter/orgs",
      "repos_url": "https://api.github.com/users/gdpotter/repos",
      "events_url": "https://api.github.com/users/gdpotter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gdpotter/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2011-06-27T17:50:16Z",
    "updated_at": "2011-06-27T18:02:20Z",
    "closed_at": "2011-06-27T18:02:20Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Dynamic helpers are great because they allow access to the req and res objects, but I don't (always) like how they \"become the local variable it is associated with.\"  Besides making a static helper that requires the view pass in request and response, is there a way to create functions that can see these objects?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/725/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/725/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/724",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/724/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/724/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/724/events",
    "html_url": "https://github.com/expressjs/express/issues/724",
    "id": 1117511,
    "node_id": "MDU6SXNzdWUxMTE3NTEx",
    "number": 724,
    "title": "Bug: CLI `Express app` does not auto-support npm 1.x",
    "user": {
      "login": "jasonkuhrt",
      "id": 284476,
      "node_id": "MDQ6VXNlcjI4NDQ3Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/284476?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasonkuhrt",
      "html_url": "https://github.com/jasonkuhrt",
      "followers_url": "https://api.github.com/users/jasonkuhrt/followers",
      "following_url": "https://api.github.com/users/jasonkuhrt/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasonkuhrt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasonkuhrt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasonkuhrt/subscriptions",
      "organizations_url": "https://api.github.com/users/jasonkuhrt/orgs",
      "repos_url": "https://api.github.com/users/jasonkuhrt/repos",
      "events_url": "https://api.github.com/users/jasonkuhrt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasonkuhrt/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2011-06-26T16:35:50Z",
    "updated_at": "2012-06-17T02:37:23Z",
    "closed_at": "2012-06-17T02:37:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "CLI created express apps are missing an `npm link express` and the folder to contain it `node_modules`. This is basically a bug because new express apps simply don't work without these extra two steps.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/724/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/724/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/723",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/723/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/723/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/723/events",
    "html_url": "https://github.com/expressjs/express/issues/723",
    "id": 1114786,
    "node_id": "MDU6SXNzdWUxMTE0Nzg2",
    "number": 723,
    "title": "Add support to res.sendfile() for non-GET request",
    "user": {
      "login": "tj",
      "id": 25254,
      "node_id": "MDQ6VXNlcjI1MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tj",
      "html_url": "https://github.com/tj",
      "followers_url": "https://api.github.com/users/tj/followers",
      "following_url": "https://api.github.com/users/tj/following{/other_user}",
      "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
      "organizations_url": "https://api.github.com/users/tj/orgs",
      "repos_url": "https://api.github.com/users/tj/repos",
      "events_url": "https://api.github.com/users/tj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 8497,
        "node_id": "MDU6TGFiZWw4NDk3",
        "url": "https://api.github.com/repos/expressjs/express/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/5",
      "html_url": "https://github.com/expressjs/express/milestone/5",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/5/labels",
      "id": 4736,
      "node_id": "MDk6TWlsZXN0b25lNDczNg==",
      "number": 5,
      "title": "3.0",
      "description": "rawr",
      "creator": {
        "login": "tj",
        "id": 25254,
        "node_id": "MDQ6VXNlcjI1MjU0",
        "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tj",
        "html_url": "https://github.com/tj",
        "followers_url": "https://api.github.com/users/tj/followers",
        "following_url": "https://api.github.com/users/tj/following{/other_user}",
        "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
        "organizations_url": "https://api.github.com/users/tj/orgs",
        "repos_url": "https://api.github.com/users/tj/repos",
        "events_url": "https://api.github.com/users/tj/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tj/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 38,
      "state": "closed",
      "created_at": "2011-04-20T22:29:45Z",
      "updated_at": "2013-12-04T11:26:26Z",
      "due_on": null,
      "closed_at": "2013-12-04T11:26:26Z"
    },
    "comments": 0,
    "created_at": "2011-06-25T14:55:52Z",
    "updated_at": "2011-11-24T20:37:58Z",
    "closed_at": "2011-11-24T20:37:58Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "currently it uses connect's `connect.static.send()` which checks for **GET**, so we need to remove that (for express only) with an option, and pause the request data \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/723/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/723/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/722",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/722/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/722/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/722/events",
    "html_url": "https://github.com/expressjs/express/issues/722",
    "id": 1108140,
    "node_id": "MDU6SXNzdWUxMTA4MTQw",
    "number": 722,
    "title": "Express server delayed recovery after connect-redis reconnects",
    "user": {
      "login": "joecroninallen",
      "id": 486323,
      "node_id": "MDQ6VXNlcjQ4NjMyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/486323?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joecroninallen",
      "html_url": "https://github.com/joecroninallen",
      "followers_url": "https://api.github.com/users/joecroninallen/followers",
      "following_url": "https://api.github.com/users/joecroninallen/following{/other_user}",
      "gists_url": "https://api.github.com/users/joecroninallen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joecroninallen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joecroninallen/subscriptions",
      "organizations_url": "https://api.github.com/users/joecroninallen/orgs",
      "repos_url": "https://api.github.com/users/joecroninallen/repos",
      "events_url": "https://api.github.com/users/joecroninallen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joecroninallen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2011-06-24T03:50:21Z",
    "updated_at": "2015-01-22T19:44:27Z",
    "closed_at": "2011-06-25T01:51:14Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Here's the steps to take to see this issue I am having when the connect-redis client temporarily loses its connection:\n\n1) Start redis database used by connect-redis module to store sessions\n2) Start express server\n3) Run test client to show that express server can handle http requests\n4) Shutdown redis database\n5) Now, the express server is unable to handle connections (as expected) and the client \"hangs\" before timing out.\n6) Turn Redis Database back on.\n7) Note that redis client used by connect-redis immediately regains connection.  (I see this because I captured the \"connect\" event on the node redis client.)\n8) Run test client again and for several minutes, requests continue to hang\n9) Eventually after a few minutes, the express server can handle connections again.\n\nIts as if there is some cache that needs to \"timeout\" before the state can be reset, but I don't know.  The expected behavior of course is that as soon as the at our Redis database is back up, Express should be able to start handling requests again.\n\nAny ideas?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/722/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/722/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/721",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/721/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/721/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/721/events",
    "html_url": "https://github.com/expressjs/express/issues/721",
    "id": 1105087,
    "node_id": "MDU6SXNzdWUxMTA1MDg3",
    "number": 721,
    "title": "Consider each call to app.get() etc as it's own middleware",
    "user": {
      "login": "tj",
      "id": 25254,
      "node_id": "MDQ6VXNlcjI1MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tj",
      "html_url": "https://github.com/tj",
      "followers_url": "https://api.github.com/users/tj/followers",
      "following_url": "https://api.github.com/users/tj/following{/other_user}",
      "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
      "organizations_url": "https://api.github.com/users/tj/orgs",
      "repos_url": "https://api.github.com/users/tj/repos",
      "events_url": "https://api.github.com/users/tj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 88345,
        "node_id": "MDU6TGFiZWw4ODM0NQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/3.x",
        "name": "3.x",
        "color": "ededed",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/5",
      "html_url": "https://github.com/expressjs/express/milestone/5",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/5/labels",
      "id": 4736,
      "node_id": "MDk6TWlsZXN0b25lNDczNg==",
      "number": 5,
      "title": "3.0",
      "description": "rawr",
      "creator": {
        "login": "tj",
        "id": 25254,
        "node_id": "MDQ6VXNlcjI1MjU0",
        "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tj",
        "html_url": "https://github.com/tj",
        "followers_url": "https://api.github.com/users/tj/followers",
        "following_url": "https://api.github.com/users/tj/following{/other_user}",
        "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
        "organizations_url": "https://api.github.com/users/tj/orgs",
        "repos_url": "https://api.github.com/users/tj/repos",
        "events_url": "https://api.github.com/users/tj/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tj/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 38,
      "state": "closed",
      "created_at": "2011-04-20T22:29:45Z",
      "updated_at": "2013-12-04T11:26:26Z",
      "due_on": null,
      "closed_at": "2013-12-04T11:26:26Z"
    },
    "comments": 1,
    "created_at": "2011-06-23T16:26:49Z",
    "updated_at": "2011-08-17T02:08:17Z",
    "closed_at": "2011-08-17T02:08:17Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": " for 3.x, as this will be a breaking change. the main benefit of this, though making configuration of middleware awkward would be placing a middleware after say N routes, so that only N remaining routes would be influenced, allowing you to authenticate for a service etc. definitely needs some more thought, having middleware scattered throughout the app wouldn't be great\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/721/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/721/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/720",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/720/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/720/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/720/events",
    "html_url": "https://github.com/expressjs/express/issues/720",
    "id": 1096381,
    "node_id": "MDU6SXNzdWUxMDk2Mzgx",
    "number": 720,
    "title": "Error: failed to locate view \"layout\"",
    "user": {
      "login": "codesplicer",
      "id": 107590,
      "node_id": "MDQ6VXNlcjEwNzU5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/107590?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codesplicer",
      "html_url": "https://github.com/codesplicer",
      "followers_url": "https://api.github.com/users/codesplicer/followers",
      "following_url": "https://api.github.com/users/codesplicer/following{/other_user}",
      "gists_url": "https://api.github.com/users/codesplicer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codesplicer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codesplicer/subscriptions",
      "organizations_url": "https://api.github.com/users/codesplicer/orgs",
      "repos_url": "https://api.github.com/users/codesplicer/repos",
      "events_url": "https://api.github.com/users/codesplicer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codesplicer/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 8497,
        "node_id": "MDU6TGFiZWw4NDk3",
        "url": "https://api.github.com/repos/expressjs/express/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 11,
    "created_at": "2011-06-22T05:46:36Z",
    "updated_at": "2011-06-22T20:54:18Z",
    "closed_at": "2011-06-22T20:54:18Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Just updated express and keep getting this error when directory layout is like:\n- views\n  - frontend\n    - room\n      - index.jade\n      - layout-room.jade\n\nand my view function is:\n\n`res.render('frontend/room/index', {\n  layout: 'layout-room'\n});`\n\nThis was working fine until I updated, if that helps.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/720/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/720/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/719",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/719/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/719/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/719/events",
    "html_url": "https://github.com/expressjs/express/issues/719",
    "id": 1093036,
    "node_id": "MDU6SXNzdWUxMDkzMDM2",
    "number": 719,
    "title": "Add header field param access",
    "user": {
      "login": "tj",
      "id": 25254,
      "node_id": "MDQ6VXNlcjI1MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tj",
      "html_url": "https://github.com/tj",
      "followers_url": "https://api.github.com/users/tj/followers",
      "following_url": "https://api.github.com/users/tj/following{/other_user}",
      "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
      "organizations_url": "https://api.github.com/users/tj/orgs",
      "repos_url": "https://api.github.com/users/tj/repos",
      "events_url": "https://api.github.com/users/tj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2011-06-21T16:57:50Z",
    "updated_at": "2011-06-21T17:53:12Z",
    "closed_at": "2011-06-21T17:53:12Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "ex: \"Content-Disposition: attachment; filename=tobi.jpg\"\n\nthe api should be something like `req.header('content-disposition', 'filename')` returning \"tobi.jpg\", or \"\" when not present. this will be an issue if/when node decides to go with _only_ a request object etc, but will be fine for now\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/719/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/719/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/718",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/718/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/718/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/718/events",
    "html_url": "https://github.com/expressjs/express/issues/718",
    "id": 1091321,
    "node_id": "MDU6SXNzdWUxMDkxMzIx",
    "number": 718,
    "title": "Insufficient error handling documentation",
    "user": {
      "login": "anttis",
      "id": 29652,
      "node_id": "MDQ6VXNlcjI5NjUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/29652?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anttis",
      "html_url": "https://github.com/anttis",
      "followers_url": "https://api.github.com/users/anttis/followers",
      "following_url": "https://api.github.com/users/anttis/following{/other_user}",
      "gists_url": "https://api.github.com/users/anttis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anttis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anttis/subscriptions",
      "organizations_url": "https://api.github.com/users/anttis/orgs",
      "repos_url": "https://api.github.com/users/anttis/repos",
      "events_url": "https://api.github.com/users/anttis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anttis/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2011-06-21T11:49:39Z",
    "updated_at": "2012-06-17T02:37:23Z",
    "closed_at": "2012-06-17T02:37:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "We were just trying to override the 404 error handling to display our custom 404 page. While the documentation shows how to use app.error to define a custom error handler, there is nothing about the other required part: Adding a custom middleware for passing a NotFound exception after the router is finished and didn't respond.\n\nWe found our clues from /examples/error-pages/app.js .\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/718/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/718/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/717",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/717/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/717/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/717/events",
    "html_url": "https://github.com/expressjs/express/issues/717",
    "id": 1087338,
    "node_id": "MDU6SXNzdWUxMDg3MzM4",
    "number": 717,
    "title": "Disabling module caching",
    "user": {
      "login": "AMSTKO",
      "id": 408968,
      "node_id": "MDQ6VXNlcjQwODk2OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/408968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AMSTKO",
      "html_url": "https://github.com/AMSTKO",
      "followers_url": "https://api.github.com/users/AMSTKO/followers",
      "following_url": "https://api.github.com/users/AMSTKO/following{/other_user}",
      "gists_url": "https://api.github.com/users/AMSTKO/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AMSTKO/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AMSTKO/subscriptions",
      "organizations_url": "https://api.github.com/users/AMSTKO/orgs",
      "repos_url": "https://api.github.com/users/AMSTKO/repos",
      "events_url": "https://api.github.com/users/AMSTKO/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AMSTKO/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2011-06-20T19:51:20Z",
    "updated_at": "2011-06-20T20:26:38Z",
    "closed_at": "2011-06-20T20:02:55Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi!\nI want to disable module caching during development and experimented..\n\n```\nrequire(file);\n```\n\nbut my file is caching after the first require.\nMy file can change at any time..\n\nthx :-)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/717/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/717/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/716",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/716/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/716/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/716/events",
    "html_url": "https://github.com/expressjs/express/issues/716",
    "id": 1085737,
    "node_id": "MDU6SXNzdWUxMDg1NzM3",
    "number": 716,
    "title": "move res.download logic to res.sendfile",
    "user": {
      "login": "tj",
      "id": 25254,
      "node_id": "MDQ6VXNlcjI1MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tj",
      "html_url": "https://github.com/tj",
      "followers_url": "https://api.github.com/users/tj/followers",
      "following_url": "https://api.github.com/users/tj/following{/other_user}",
      "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
      "organizations_url": "https://api.github.com/users/tj/orgs",
      "repos_url": "https://api.github.com/users/tj/repos",
      "events_url": "https://api.github.com/users/tj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2011-06-20T15:52:30Z",
    "updated_at": "2011-11-10T22:24:00Z",
    "closed_at": "2011-11-10T22:24:00Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "these should be identical as far as error-handling goes. still not a huge fan of the double callbacks, but i fear if we make it one people may try to respond carelessly\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/716/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/716/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/715",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/715/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/715/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/715/events",
    "html_url": "https://github.com/expressjs/express/issues/715",
    "id": 1081442,
    "node_id": "MDU6SXNzdWUxMDgxNDQy",
    "number": 715,
    "title": "res methods should be properly bound",
    "user": {
      "login": "matthewleon",
      "id": 278859,
      "node_id": "MDQ6VXNlcjI3ODg1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/278859?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matthewleon",
      "html_url": "https://github.com/matthewleon",
      "followers_url": "https://api.github.com/users/matthewleon/followers",
      "following_url": "https://api.github.com/users/matthewleon/following{/other_user}",
      "gists_url": "https://api.github.com/users/matthewleon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthewleon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthewleon/subscriptions",
      "organizations_url": "https://api.github.com/users/matthewleon/orgs",
      "repos_url": "https://api.github.com/users/matthewleon/repos",
      "events_url": "https://api.github.com/users/matthewleon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthewleon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2011-06-19T18:44:46Z",
    "updated_at": "2011-06-19T18:52:59Z",
    "closed_at": "2011-06-19T18:52:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I often find myself using underscore.js (or the native bind functionality of V8) to bind methods on res, for example:\n\n``` javascript\n  send = _(res.send).bind(res)\n```\n\nThis allows me to send res.send around as a callback. I see no reason that the \"this\" keyword shouldn't be permanently bound to the res object in all of res's methods.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/715/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/715/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/714",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/714/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/714/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/714/events",
    "html_url": "https://github.com/expressjs/express/issues/714",
    "id": 1079995,
    "node_id": "MDU6SXNzdWUxMDc5OTk1",
    "number": 714,
    "title": "How best to install and use.",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2011-06-19T10:07:29Z",
    "updated_at": "2011-06-20T18:14:53Z",
    "closed_at": "2011-06-20T18:06:43Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi folks.\n\nI have installed my machine a few times now and cannot seem to work out the best way to install and use express.\n\nOn one install all i had to do was go to a directory and just go express --sessions and boom a site.  Then i just went node app.js and everything went ok.\n\nSo.  I have installed a fresh copy of ubuntu.\n\nI have opened up my terminal and  installed (as me - not root) node.js,  (./configure, make, sudo make install).\n\nThen i have installed (as me not root) npm   (sudo make install).\n\nNow i get stuck.  What are the steps to get express working so all i do once installed is create a folder (express (my setting) and i get a site and also when im in my  dir i want to just type node app,js to start the server.\n\ni have noticed a few people do things different way ( like install express into folder you are creating a web site in).\n\nmm im a bit stuck i think im not understanding this install as me and not root  and why install express into site when its installed allready. \n\nwhen i installed express globaly.  i can go into a folder and go express --sessions and get a site, but when i go node app.js is say cannot find express.    \n\nSos people,  i have had it working, but there seems to be a few way to get it working and use it.\n\nThanks for any help.\n\nAsbo.\n\ngreat bit of kit by the way.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/714/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/714/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/713",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/713/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/713/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/713/events",
    "html_url": "https://github.com/expressjs/express/issues/713",
    "id": 1075413,
    "node_id": "MDU6SXNzdWUxMDc1NDEz",
    "number": 713,
    "title": "throw new Error() not caught",
    "user": {
      "login": "mdiniz",
      "id": 518007,
      "node_id": "MDQ6VXNlcjUxODAwNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/518007?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mdiniz",
      "html_url": "https://github.com/mdiniz",
      "followers_url": "https://api.github.com/users/mdiniz/followers",
      "following_url": "https://api.github.com/users/mdiniz/following{/other_user}",
      "gists_url": "https://api.github.com/users/mdiniz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mdiniz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mdiniz/subscriptions",
      "organizations_url": "https://api.github.com/users/mdiniz/orgs",
      "repos_url": "https://api.github.com/users/mdiniz/repos",
      "events_url": "https://api.github.com/users/mdiniz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mdiniz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2011-06-17T19:35:33Z",
    "updated_at": "2012-06-17T02:37:23Z",
    "closed_at": "2012-06-17T02:37:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "By reading the guide, section Error Handling, I thought that if I throw an error inside a route, the error would be caught by the function X registered with app.error(). However, if the error is thrown in an asynchronous callback inside the route, it's not caught by the function X.\n\nHere's a sample app that shows what I mean:\n\n```\nvar app = require('express').createServer();\n\napp.error(function(er, req, res, next){\n    console.log('error caught, no problems');\n    res.send('error caught, no problems');\n});\n\napp.get('/ok', function(req, res){\n    console.log('request ok');\n    res.send('request ok');\n});\n\napp.get('/caught', function(req, res){\n    throw new Error('an error');\n});\n\napp.get('/problem', function(req, res, next) {\n    setTimeout(function() {\n      throw new Error('problem error');\n    }, 3000);\n});\n\napp.listen(3000);\n```\n\nThe error is correctly caught when you access /caught, but when you access /problem it bubbles up and crashes node (default behaviour as there's nothing listening on uncaughtException). To have this working, I had to replace the line \n\n```\nthrow new Error('problem error');\n```\n\nby\n\n```\nnext(new Error('problem error'));\n```\n\nwhich means, when an asynchronous call causes an exception, it should be passed to next() rather than thrown.\n\nIs this behaviour expected or am I missing something? If yes, I would suggest to explicitly mention it in the guide.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/713/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/713/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/712",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/712/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/712/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/712/events",
    "html_url": "https://github.com/expressjs/express/issues/712",
    "id": 1072299,
    "node_id": "MDU6SXNzdWUxMDcyMjk5",
    "number": 712,
    "title": "npm install returns bad_utf8_character_code",
    "user": {
      "login": "DeviaVir",
      "id": 777823,
      "node_id": "MDQ6VXNlcjc3NzgyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/777823?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DeviaVir",
      "html_url": "https://github.com/DeviaVir",
      "followers_url": "https://api.github.com/users/DeviaVir/followers",
      "following_url": "https://api.github.com/users/DeviaVir/following{/other_user}",
      "gists_url": "https://api.github.com/users/DeviaVir/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DeviaVir/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DeviaVir/subscriptions",
      "organizations_url": "https://api.github.com/users/DeviaVir/orgs",
      "repos_url": "https://api.github.com/users/DeviaVir/repos",
      "events_url": "https://api.github.com/users/DeviaVir/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DeviaVir/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2011-06-17T08:19:30Z",
    "updated_at": "2011-06-17T08:20:09Z",
    "closed_at": "2011-06-17T08:19:48Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Manually browsing over to http://registry.npmjs.org/connect returns the same error.\n\nLogs are here (last part):\n\n``` bash\nverbose response http://registry.npmjs.org/mime\nsilly get cb [ 304,\nsilly get cb   { server: 'CouchDB/1.1.0 (Erlang OTP/R14B)',\nsilly get cb     etag: '\"3ZW2IDCGFENFVTD230R7J71T5\"',\nsilly get cb     date: 'Fri, 17 Jun 2011 08:16:01 GMT',\nsilly get cb     'content-length': '0' } ]\nverbose etag mime from cache\nverbose GET mime/1.2.2\nverbose raw, before any munging mime/1.2.2\nverbose url resolving [ 'http://registry.npmjs.org/', './mime/1.2.2' ]\nverbose url resolved http://registry.npmjs.org/mime/1.2.2\nverbose url parsed { protocol: 'http:',\nverbose url parsed   slashes: true,\nverbose url parsed   host: 'registry.npmjs.org',\nverbose url parsed   hostname: 'registry.npmjs.org',\nverbose url parsed   href: 'http://registry.npmjs.org/mime/1.2.2',\nverbose url parsed   pathname: '/mime/1.2.2' }\nverbose etag \"3ZW2IDCGFENFVTD230R7J71T5\"\nverbose response http://registry.npmjs.org/qs\nsilly get cb [ 304,\nsilly get cb   { server: 'CouchDB/1.1.0 (Erlang OTP/R14B)',\nsilly get cb     etag: '\"DKQQOPXN16NYVA6TL6TY5AAJP\"',\nsilly get cb     date: 'Fri, 17 Jun 2011 08:16:02 GMT',\nsilly get cb     'content-length': '0' } ]\nverbose etag qs from cache\nverbose GET qs/0.1.0\nverbose raw, before any munging qs/0.1.0\nverbose url resolving [ 'http://registry.npmjs.org/', './qs/0.1.0' ]\nverbose url resolved http://registry.npmjs.org/qs/0.1.0\nverbose url parsed { protocol: 'http:',\nverbose url parsed   slashes: true,\nverbose url parsed   host: 'registry.npmjs.org',\nverbose url parsed   hostname: 'registry.npmjs.org',\nverbose url parsed   href: 'http://registry.npmjs.org/qs/0.1.0',\nverbose url parsed   pathname: '/qs/0.1.0' }\nverbose etag \"DKQQOPXN16NYVA6TL6TY5AAJP\"\nverbose response http://registry.npmjs.org/connect\nsilly chunk {\"error\":\"ucs\",\"reason\":\"{bad_utf8_character_code}\"}\nsilly chunk\nsilly get cb [ 500,\nsilly get cb   { server: 'CouchDB/1.1.0 (Erlang OTP/R14B)',\nsilly get cb     date: 'Fri, 17 Jun 2011 08:16:08 GMT',\nsilly get cb     'content-type': 'application/json',\nsilly get cb     'content-length': '53',\nsilly get cb     'cache-control': 'must-revalidate' } ]\nERR! Error: ucs {bad_utf8_character_code}: connect\nERR!     at IncomingMessage.<anonymous> (/usr/lib/node_modules/npm/lib/utils/npm-registry-client/request.js:177:16)\nERR!     at IncomingMessage.emit (events.js:81:20)\nERR!     at HTTPParser.onMessageComplete (http.js:133:23)\nERR!     at Socket.ondata (http.js:1226:22)\nERR!     at Socket._onReadable (net.js:683:27)\nERR!     at IOWatcher.onReadable [as callback] (net.js:177:10)\nERR! Report this *entire* log at:\nERR!     <http://github.com/isaacs/npm/issues>\nERR! or email it to:\nERR!     <npm-@googlegroups.com>\nERR!\nERR! System Darwin 11.0.0\nERR! command \"node\" \"/usr/bin/npm\" \"install\"\nverbose exit [ 1, true ]\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/712/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/712/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/711",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/711/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/711/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/711/events",
    "html_url": "https://github.com/expressjs/express/issues/711",
    "id": 1057343,
    "node_id": "MDU6SXNzdWUxMDU3MzQz",
    "number": 711,
    "title": "\"Can't send headers...\" after returning JSON",
    "user": {
      "login": "Greta",
      "id": 311798,
      "node_id": "MDQ6VXNlcjMxMTc5OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/311798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Greta",
      "html_url": "https://github.com/Greta",
      "followers_url": "https://api.github.com/users/Greta/followers",
      "following_url": "https://api.github.com/users/Greta/following{/other_user}",
      "gists_url": "https://api.github.com/users/Greta/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Greta/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Greta/subscriptions",
      "organizations_url": "https://api.github.com/users/Greta/orgs",
      "repos_url": "https://api.github.com/users/Greta/repos",
      "events_url": "https://api.github.com/users/Greta/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Greta/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2011-06-14T20:21:19Z",
    "updated_at": "2013-08-23T22:52:25Z",
    "closed_at": "2012-05-02T15:02:30Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have an app that I've set up with Mongodb, LESS and Jade.  \n\nI tried to set up a route that would do nothing but receive an id, and return a correlating json object from the db.  It works in that once hit, the json object is returned, HOWEVER immediately afterwards the server throws an error and dies.\n\nI'm hoping this is something small that I'm too noobish to notice.  I appreciate any help in this matter.\n\n**Here is the error**\n\n```\nError: Can't set headers after they are sent.\n    at ServerResponse.<anonymous> (http.js:525:11)\n    at ServerResponse.setHeader (/usr/local/lib/node/.npm/connect/1.1.1/package/lib/patch.js:44:20)\n    at next (/usr/local/lib/node/.npm/connect/1.1.1/package/lib/http.js:172:13)\n    at next (/usr/local/lib/node/.npm/connect/1.1.1/package/lib/http.js:206:9)\n    at /usr/local/lib/node/.npm/connect/1.1.1/package/lib/middleware/static.js:139:11\n\nhttp.js:525\n    throw new Error(\"Can't set headers after they are sent.\");\n          ^\nError: Can't set headers after they are sent.\n    at ServerResponse.<anonymous> (http.js:525:11)\n    at ServerResponse.setHeader (/usr/local/lib/node/.npm/connect/1.1.1/package/lib/patch.js:44:20)\n    at next (/usr/local/lib/node/.npm/connect/1.1.1/package/lib/http.js:168:13)\n    at next (/usr/local/lib/node/.npm/connect/1.1.1/package/lib/http.js:213:9)\n    at /usr/local/lib/node/.npm/connect/1.1.1/package/lib/middleware/static.js:139:11\n```\n\n**Here is my app**\n\n``` javascript\napp.get('/quiz', loadGames, function(req, res){\n  res.render('quiz', {\n    head_title: 'NESVGM',\n    title: 'It\\'s the music, man.',\n    games: req.games.sort(function() { return 0.5 - Math.random() })\n  });\n}).get('/quiz/:id', loadGames, function(req, res) {\n  res.send(req.game);\n});\n```\n\n**And Middleware**\n\n``` javascript\nfunction loadGames(req, res, next) {\n  var games = [];\n\n  db.open(function(err, db) {\n    db.collection('games', function(err, collection) {\n      if (req.params.id) {\n        collection.find({_id:new BSON.ObjectID(req.params.id)}, function(err, cursor){\n          cursor.each(function(err, doc){\n            req.game = doc;\n            db.close(); next();\n          });\n        });\n      } else {\n        collection.find(function(err, cursor) {\n          cursor.toArray(function(err, docs) {\n            req.games = docs;\n            db.close(); next();\n          })\n        });\n      }\n    });\n  });\n}\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/711/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/711/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/710",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/710/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/710/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/710/events",
    "html_url": "https://github.com/expressjs/express/issues/710",
    "id": 1049296,
    "node_id": "MDU6SXNzdWUxMDQ5Mjk2",
    "number": 710,
    "title": "res.download doesn't trigger the callback function [connect 1.4.3]",
    "user": {
      "login": "pyrostrex",
      "id": 343789,
      "node_id": "MDQ6VXNlcjM0Mzc4OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/343789?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pyrostrex",
      "html_url": "https://github.com/pyrostrex",
      "followers_url": "https://api.github.com/users/pyrostrex/followers",
      "following_url": "https://api.github.com/users/pyrostrex/following{/other_user}",
      "gists_url": "https://api.github.com/users/pyrostrex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pyrostrex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pyrostrex/subscriptions",
      "organizations_url": "https://api.github.com/users/pyrostrex/orgs",
      "repos_url": "https://api.github.com/users/pyrostrex/repos",
      "events_url": "https://api.github.com/users/pyrostrex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pyrostrex/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2011-06-13T14:13:35Z",
    "updated_at": "2011-07-06T17:00:15Z",
    "closed_at": "2011-07-06T16:23:55Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "First, thanks for fixing all my old issues regarding download problems. Second, you make some mistake inside your last fix. It will no longer trigger the callback. Heheh. Well, just a simple fix though.\n\ninstead of using these,\n\n```\nif (fn) {\n  function callback(err) { done || fn(err); done = true }\n  req.on('close', callback);\n  req.socket.on('error', callback);\n  stream.on('end', callback);\n}\n```\n\nI use these to fix the trigger problem,\n\n```\nif (fn) {\n  function callback(err) { done || fn(err); done = true }\n  req.on('close', function(){ callback(); });\n  req.socket.on('error', function(error){ callback(error); });\n  stream.on('end', function(){ callback(); });\n}\n```\n\nWell, just a way of me fixing it, I know you have a better way lol.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/710/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/710/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/709",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/709/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/709/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/709/events",
    "html_url": "https://github.com/expressjs/express/pull/709",
    "id": 1047050,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTgwNDA3",
    "number": 709,
    "title": "documentation: typo fix for view-lookup",
    "user": {
      "login": "jzacsh",
      "id": 156228,
      "node_id": "MDQ6VXNlcjE1NjIyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/156228?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jzacsh",
      "html_url": "https://github.com/jzacsh",
      "followers_url": "https://api.github.com/users/jzacsh/followers",
      "following_url": "https://api.github.com/users/jzacsh/following{/other_user}",
      "gists_url": "https://api.github.com/users/jzacsh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jzacsh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jzacsh/subscriptions",
      "organizations_url": "https://api.github.com/users/jzacsh/orgs",
      "repos_url": "https://api.github.com/users/jzacsh/repos",
      "events_url": "https://api.github.com/users/jzacsh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jzacsh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2011-06-13T00:16:47Z",
    "updated_at": "2014-07-26T21:12:26Z",
    "closed_at": "2011-06-13T01:43:12Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/709",
      "html_url": "https://github.com/expressjs/express/pull/709",
      "diff_url": "https://github.com/expressjs/express/pull/709.diff",
      "patch_url": "https://github.com/expressjs/express/pull/709.patch",
      "merged_at": "2011-06-13T01:43:12Z"
    },
    "body": "Having some trouble with views partials and reading through the docs. Found a typo that threw me off for a split second (as the URL didn't seem to work).\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/709/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/709/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/708",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/708/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/708/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/708/events",
    "html_url": "https://github.com/expressjs/express/issues/708",
    "id": 1046579,
    "node_id": "MDU6SXNzdWUxMDQ2NTc5",
    "number": 708,
    "title": "Ubuntu 11 npm install -g express (VK Codes) error",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 18,
    "created_at": "2011-06-12T20:48:22Z",
    "updated_at": "2012-07-31T09:27:00Z",
    "closed_at": "2011-06-13T08:32:53Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "me@ubuntu:~$ npm install -g express\n[WARNING] Out of OEM specific VK codes, changing to unassigned\n[WARNING] Out of unassigned VK codes, assigning $FF\n $FF\n\nHi all when i try to do this in ubuntu (latest one)\n\ni get the above error..  I am very new to the whole things and any step by step help would be appreciated\n\nThanks..\n\nive installed nodes.js (git way).  then npm(git way) and now im trying express via above method, i so hope im get this process right. Wana make my apps this way now.\n\nim in  windwos c# world and would so love to convert to node.js and express then i can go totally ubumtu.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/708/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/708/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/707",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/707/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/707/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/707/events",
    "html_url": "https://github.com/expressjs/express/pull/707",
    "id": 1046218,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTgwMjE1",
    "number": 707,
    "title": "trying the .md file this time",
    "user": {
      "login": "jakeg",
      "id": 744792,
      "node_id": "MDQ6VXNlcjc0NDc5Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/744792?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakeg",
      "html_url": "https://github.com/jakeg",
      "followers_url": "https://api.github.com/users/jakeg/followers",
      "following_url": "https://api.github.com/users/jakeg/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakeg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakeg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakeg/subscriptions",
      "organizations_url": "https://api.github.com/users/jakeg/orgs",
      "repos_url": "https://api.github.com/users/jakeg/repos",
      "events_url": "https://api.github.com/users/jakeg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakeg/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2011-06-12T18:00:26Z",
    "updated_at": "2014-07-26T03:27:15Z",
    "closed_at": "2011-06-12T18:07:11Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/707",
      "html_url": "https://github.com/expressjs/express/pull/707",
      "diff_url": "https://github.com/expressjs/express/pull/707.diff",
      "patch_url": "https://github.com/expressjs/express/pull/707.patch",
      "merged_at": "2011-06-12T18:07:11Z"
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/707/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/707/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/706",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/706/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/706/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/706/events",
    "html_url": "https://github.com/expressjs/express/pull/706",
    "id": 1045444,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTgwMDQ3",
    "number": 706,
    "title": "docs to show require('connect-redis')(express) re npm 1.x changes",
    "user": {
      "login": "jakeg",
      "id": 744792,
      "node_id": "MDQ6VXNlcjc0NDc5Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/744792?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakeg",
      "html_url": "https://github.com/jakeg",
      "followers_url": "https://api.github.com/users/jakeg/followers",
      "following_url": "https://api.github.com/users/jakeg/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakeg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakeg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakeg/subscriptions",
      "organizations_url": "https://api.github.com/users/jakeg/orgs",
      "repos_url": "https://api.github.com/users/jakeg/repos",
      "events_url": "https://api.github.com/users/jakeg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakeg/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2011-06-12T12:06:24Z",
    "updated_at": "2014-07-26T05:16:34Z",
    "closed_at": "2011-06-12T16:32:22Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/706",
      "html_url": "https://github.com/expressjs/express/pull/706",
      "diff_url": "https://github.com/expressjs/express/pull/706.diff",
      "patch_url": "https://github.com/expressjs/express/pull/706.patch",
      "merged_at": "2011-06-12T16:32:22Z"
    },
    "body": "Due to npm 1.x changes need to pass connect/express to the function connect-redis exports (see https://github.com/visionmedia/connect-redis)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/706/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/706/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/705",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/705/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/705/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/705/events",
    "html_url": "https://github.com/expressjs/express/issues/705",
    "id": 1027840,
    "node_id": "MDU6SXNzdWUxMDI3ODQw",
    "number": 705,
    "title": "error in cygwin with npm install",
    "user": {
      "login": "natedsaint",
      "id": 690210,
      "node_id": "MDQ6VXNlcjY5MDIxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/690210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/natedsaint",
      "html_url": "https://github.com/natedsaint",
      "followers_url": "https://api.github.com/users/natedsaint/followers",
      "following_url": "https://api.github.com/users/natedsaint/following{/other_user}",
      "gists_url": "https://api.github.com/users/natedsaint/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/natedsaint/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/natedsaint/subscriptions",
      "organizations_url": "https://api.github.com/users/natedsaint/orgs",
      "repos_url": "https://api.github.com/users/natedsaint/repos",
      "events_url": "https://api.github.com/users/natedsaint/events{/privacy}",
      "received_events_url": "https://api.github.com/users/natedsaint/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2011-06-09T02:15:14Z",
    "updated_at": "2011-06-19T18:52:27Z",
    "closed_at": "2011-06-19T18:37:12Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I've been debugging this for a couple hours, and I've tested that I can install a few other packages through npm. Unfortunately, express appears to still be giving me these errors, so I'm fairly certain it's something about the way the package is set up. Maybe a bad tar or something? Let me know if I'm doing anything obviously dumb. =)\n\n```\n$ npm install express\nnpm ERR! tar \"-mvxpf\" \"-\" \"--no-same-owner\" \"-C\" \"/tmp/npm-1307585204577/1307585206803-    0.4860939725767821/contents/___package.npm\" tar: Unexpected EOF in archive\nnpm ERR! tar \"-mvxpf\" \"-\" \"--no-same-owner\" \"-C\" \"/tmp/npm-1307585204577/1307585206803-0.4860939725767821/contents/___package.npm\" tar: Unexpected EOF in archive\nnpm ERR! tar \"-mvxpf\" \"-\" \"--no-same-owner\" \"-C\" \"/tmp/npm-1307585204577/1307585206803-0.4860939725767821/contents/___package.npm\" tar: Error is not recoverable: exiting now\nnpm ERR! tar \"-mvxpf\" \"-\" \"--no-same-owner\" \"-C\" \"/tmp/npm-1307585204577/1307585206803-0.4860939725767821/contents/___package.npm\"\nnpm ERR! Failed unpacking /tmp/npm-1307585204577/1307585206803-0.4860939725767821/tmp.tgz\nnpm ERR! couldn't unpack /tmp/npm-1307585204577/1307585206803-0.4860939725767821/tmp.tgz to /tmp/npm-1307585204577/1307585206803-0.4860939725767821/contents\nnpm ERR! error installing express@2.3.11 Error: Failed tar \"-mvxpf\" \"-\" \"--no-same-owner\" \"-C\" \"/tmp/npm-1307585204577/1307585206803-0.4860939725767821/contents/___package.npm\"\nnpm ERR! error installing express@2.3.11 exited with 2\nnpm ERR! error installing express@2.3.11     at ChildProcess.<anonymous> (/usr/local/lib/node_modules/npm/lib/utils/exec.js:85:8)\nnpm ERR! error installing express@2.3.11     at ChildProcess.emit (events.js:67:17)\nnpm ERR! error installing express@2.3.11     at ChildProcess.onexit (child_process.js:192:12)\nnpm ERR! Error: Failed tar \"-mvxpf\" \"-\" \"--no-same-owner\" \"-C\" \"/tmp/npm-1307585204577/1307585206803-0.4860939725767821/contents/___package.npm\"\nnpm ERR! exited with 2\nnpm ERR!     at ChildProcess.<anonymous> (/usr/local/lib/node_modules/npm/lib/utils/exec.js:85:8)\nnpm ERR!     at ChildProcess.emit (events.js:67:17)\nnpm ERR!     at ChildProcess.onexit (child_process.js:192:12)\nnpm ERR! Report this *entire* log at:\nnpm ERR!     <http://github.com/isaacs/npm/issues>\nnpm ERR! or email it to:\nnpm ERR!     <npm-@googlegroups.com>\nnpm ERR!\nnpm ERR! System CYGWIN_NT-6.1-WOW64 1.7.9(0.237/5/3)\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"install\" \"express\"\nnpm ERR!\nnpm ERR! Additional logging details can be found in:\nnpm ERR!     /home/Nathan/npm/npm-debug.log\nnpm not ok\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/705/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/705/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/704",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/704/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/704/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/704/events",
    "html_url": "https://github.com/expressjs/express/issues/704",
    "id": 1027833,
    "node_id": "MDU6SXNzdWUxMDI3ODMz",
    "number": 704,
    "title": "Feature: app.helpers not available without accessing res.local",
    "user": {
      "login": "jasonkuhrt",
      "id": 284476,
      "node_id": "MDQ6VXNlcjI4NDQ3Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/284476?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasonkuhrt",
      "html_url": "https://github.com/jasonkuhrt",
      "followers_url": "https://api.github.com/users/jasonkuhrt/followers",
      "following_url": "https://api.github.com/users/jasonkuhrt/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasonkuhrt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasonkuhrt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasonkuhrt/subscriptions",
      "organizations_url": "https://api.github.com/users/jasonkuhrt/orgs",
      "repos_url": "https://api.github.com/users/jasonkuhrt/repos",
      "events_url": "https://api.github.com/users/jasonkuhrt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasonkuhrt/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 14,
    "created_at": "2011-06-09T02:12:45Z",
    "updated_at": "2012-06-17T02:37:23Z",
    "closed_at": "2012-06-17T02:37:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "With the following code:\n\n```\napp.helpers\n    classes: ''\n    content: content\n    secondary_nav: false\n\napp.get '/works/:work', getWork, (req,res)->\n    res._locals.classes +=  new SemanticURL('/page/page:work,resource', req.url).classify()\n    res.local 'secondary_nav_labels', [req.work.title] #req.work is assigned by the getWork middleware\n    res.render 'work'\n```\n\nI get the error:\n\n```\nTypeError: Cannot read property 'classes' of undefined\n    at Router.<anonymous> (/Users/KUHRT/code/vanyarose-test/app.coffee:47:16)\n    at done (/usr/local/lib/node_modules/express/lib/router/index.js:250:22)\n    at middleware (/usr/local/lib/node_modules/express/lib/router/index.js:244:9)\n    at param (/usr/local/lib/node_modules/express/lib/router/index.js:227:11)\n    at param (/usr/local/lib/node_modules/express/lib/router/index.js:224:11)\n    at pass (/usr/local/lib/node_modules/express/lib/router/index.js:232:6)\n    at Router._dispatch (/usr/local/lib/node_modules/express/lib/router/index.js:255:4)\n    at Object.handle (/usr/local/lib/node_modules/express/lib/router/index.js:45:10)\n    at next (/usr/local/lib/node_modules/express/node_modules/connect/lib/http.js:204:15)\n    at /usr/local/lib/node_modules/express/node_modules/connect/lib/middleware/static.js:151:11\n```\n\nThis is because Express thinks `res._locals.classes` is undefined, even though it was defined by `app.helpers`!  \n\nIf I modify my code with an access to res.local (`res.local 'a',1`), like this:\n\n```\napp.helpers\n    classes: ''\n    content: content\n    secondary_nav: false\n\napp.get '/works/:work', getWork, (req,res)->\n    res.local 'a',1\n    res._locals.classes +=  new SemanticURL('/page/page:work,resource', req.url).classify()\n    res.local 'secondary_nav_labels', [req.work.title] #req.work is assigned by the getWork middleware\n    res.render 'work'\n```\n\nit works.\n\nSo the problem is this:\n- I can only access _locals if a previous invocation of res.local or res.locals has occurred.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/704/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/704/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/703",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/703/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/703/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/703/events",
    "html_url": "https://github.com/expressjs/express/issues/703",
    "id": 1026912,
    "node_id": "MDU6SXNzdWUxMDI2OTEy",
    "number": 703,
    "title": "Nested mounted apps and res.redirect issue",
    "user": {
      "login": "gsmcwhirter",
      "id": 10193,
      "node_id": "MDQ6VXNlcjEwMTkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/10193?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gsmcwhirter",
      "html_url": "https://github.com/gsmcwhirter",
      "followers_url": "https://api.github.com/users/gsmcwhirter/followers",
      "following_url": "https://api.github.com/users/gsmcwhirter/following{/other_user}",
      "gists_url": "https://api.github.com/users/gsmcwhirter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gsmcwhirter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gsmcwhirter/subscriptions",
      "organizations_url": "https://api.github.com/users/gsmcwhirter/orgs",
      "repos_url": "https://api.github.com/users/gsmcwhirter/repos",
      "events_url": "https://api.github.com/users/gsmcwhirter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gsmcwhirter/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 88345,
        "node_id": "MDU6TGFiZWw4ODM0NQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/3.x",
        "name": "3.x",
        "color": "ededed",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2011-06-08T21:58:11Z",
    "updated_at": "2012-05-27T18:10:45Z",
    "closed_at": "2012-05-27T18:08:18Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Code: https://gist.github.com/1010581\n\nI would expect the route /subapp/subapp/redir to redirect to /subapp/subapp/test, but it redirects to /subapp/test instead.\nThe route /subapp/redir properly redirects to /subapp/test.\n\nYou can find the following information (modulo possible trailing slashes):\n\napp1.route == \"/\"\napp2.route == \"/subapp\"\napp3.route == \"/subapp\"\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/703/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/703/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/702",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/702/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/702/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/702/events",
    "html_url": "https://github.com/expressjs/express/issues/702",
    "id": 1026879,
    "node_id": "MDU6SXNzdWUxMDI2ODc5",
    "number": 702,
    "title": "Redirects lose session data?",
    "user": {
      "login": "brikis98",
      "id": 711908,
      "node_id": "MDQ6VXNlcjcxMTkwOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/711908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brikis98",
      "html_url": "https://github.com/brikis98",
      "followers_url": "https://api.github.com/users/brikis98/followers",
      "following_url": "https://api.github.com/users/brikis98/following{/other_user}",
      "gists_url": "https://api.github.com/users/brikis98/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brikis98/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brikis98/subscriptions",
      "organizations_url": "https://api.github.com/users/brikis98/orgs",
      "repos_url": "https://api.github.com/users/brikis98/repos",
      "events_url": "https://api.github.com/users/brikis98/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brikis98/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2011-06-08T21:51:01Z",
    "updated_at": "2011-07-10T18:20:17Z",
    "closed_at": "2011-06-08T21:57:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "http://stackoverflow.com/questions/5883821/node-js-express-session-problem\n1. Go to http://localhost:8003/foo\n2. In the console, I can see that I have sessionID \"S1\" and the session contains data \"B\". \n3. Redirect the user to some OAuth provider such as Twitter\n4. OAuth provider redirects the user back to http://localhost:8003/foo\n5. In the console, I now see that I have a new sessionID \"S2\" and there is no session data. \n\nAny ideas why I'd get a new session after a redirect?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/702/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/702/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/701",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/701/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/701/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/701/events",
    "html_url": "https://github.com/expressjs/express/issues/701",
    "id": 1025923,
    "node_id": "MDU6SXNzdWUxMDI1OTIz",
    "number": 701,
    "title": "Sending a 304 defaults to having a body and content-type",
    "user": {
      "login": "thedufer",
      "id": 21338,
      "node_id": "MDQ6VXNlcjIxMzM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/21338?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thedufer",
      "html_url": "https://github.com/thedufer",
      "followers_url": "https://api.github.com/users/thedufer/followers",
      "following_url": "https://api.github.com/users/thedufer/following{/other_user}",
      "gists_url": "https://api.github.com/users/thedufer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thedufer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thedufer/subscriptions",
      "organizations_url": "https://api.github.com/users/thedufer/orgs",
      "repos_url": "https://api.github.com/users/thedufer/repos",
      "events_url": "https://api.github.com/users/thedufer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thedufer/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2011-06-08T19:14:48Z",
    "updated_at": "2011-06-08T19:40:14Z",
    "closed_at": "2011-06-08T19:40:14Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When sending a 304 (`res.send(304)`) and catching the traffic, I see the following headers:\n\n```\nEntity\n  Content-Length: 12\n  Content-Type: text/plain\nMiscellaneous\n  X-Powered-By: Express\nTransport\n  Connection: keep-alive\n```\n\nand the content `Not Modified`.\n\nHowever, a 304 is not allowed to contain a non-empty body, and the spurious content-type causes the browser to override the (correct) content-type that the cached page contains.\n\nNote: Sending with `res.send(\"\", {}, 304)` solves the body problem, but shouldn't be necessary.  \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/701/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/701/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/700",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/700/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/700/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/700/events",
    "html_url": "https://github.com/expressjs/express/issues/700",
    "id": 1021387,
    "node_id": "MDU6SXNzdWUxMDIxMzg3",
    "number": 700,
    "title": "Creating an app with the exe should ln -s into local node_modules",
    "user": {
      "login": "isaacs",
      "id": 9287,
      "node_id": "MDQ6VXNlcjkyODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9287?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/isaacs",
      "html_url": "https://github.com/isaacs",
      "followers_url": "https://api.github.com/users/isaacs/followers",
      "following_url": "https://api.github.com/users/isaacs/following{/other_user}",
      "gists_url": "https://api.github.com/users/isaacs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/isaacs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/isaacs/subscriptions",
      "organizations_url": "https://api.github.com/users/isaacs/orgs",
      "repos_url": "https://api.github.com/users/isaacs/repos",
      "events_url": "https://api.github.com/users/isaacs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/isaacs/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2011-06-08T01:23:05Z",
    "updated_at": "2012-06-17T02:37:23Z",
    "closed_at": "2012-06-17T02:37:23Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "It'd be good to do this:\n\n```\nnpm install -g express\nexpress my-app\ncd my-app\nvim server.js\n```\n\nand be able to do `require(\"express\")` in there, and have it work.\n\nAll that must be done to accomplish this is to have the executable do something like this:\n\n``` javascript\nfs.symlink\n  ( path.resolve(__dirname, '..')\n  , path.resolve(theTargetFolder, 'node_modules', 'express')\n  , function (er) { ... }\n  )\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/700/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/700/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/699",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/699/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/699/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/699/events",
    "html_url": "https://github.com/expressjs/express/issues/699",
    "id": 1010661,
    "node_id": "MDU6SXNzdWUxMDEwNjYx",
    "number": 699,
    "title": "Wildcard routes with variable number of parameters",
    "user": {
      "login": "bramstein",
      "id": 114871,
      "node_id": "MDQ6VXNlcjExNDg3MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/114871?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bramstein",
      "html_url": "https://github.com/bramstein",
      "followers_url": "https://api.github.com/users/bramstein/followers",
      "following_url": "https://api.github.com/users/bramstein/following{/other_user}",
      "gists_url": "https://api.github.com/users/bramstein/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bramstein/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bramstein/subscriptions",
      "organizations_url": "https://api.github.com/users/bramstein/orgs",
      "repos_url": "https://api.github.com/users/bramstein/repos",
      "events_url": "https://api.github.com/users/bramstein/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bramstein/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2011-06-06T17:54:20Z",
    "updated_at": "2016-03-09T01:52:04Z",
    "closed_at": "2012-06-17T02:37:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm working on an Express application that exposes a REST API. One of the requirements of the API is browsing a hierarchical folder structure (`root/foo/bar/` etc.) where the structure is user defined. My initial approach was to use the wildcard pattern in my route:\n\n```\napp.get('/root/*', function (req, res) {\n   var path = req.params[0]; // path = 'foo/bar/'\n});\n```\n\nThis works OK for most cases except when the path contains an encoded slash, e.g. `/foo%2Fbar/`. The `path` variable now contains `foo/bar/` instead of `foo%2Fbar/` due to the `decodeURIComponent` call in `lib/router/index.js:Router.prototype._match`.\n\nI've also tried using a regular expression to split the path on the slash, but this fails due to `RegExp.exec` only returning the first result of regular expressions with the global modifier.\n\nMy current hack is to modify `lib/router/index.js:Router.prototype._match` to split `captures[j]` on slashes, `decodeURIComponent` each item in the resulting array and join them again. This works fine (I can't really think of a downside to doing this,) but I would prefer an out-of-the-box solution. Perhaps I'm overlooking something simple---`req.url` and `req.originalUrl` are available---but I would rather not repeat the route matching that Express is doing. Is this a use-case that Express will support?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/699/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/699/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/698",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/698/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/698/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/698/events",
    "html_url": "https://github.com/expressjs/express/pull/698",
    "id": 1010007,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTcyNTM1",
    "number": 698,
    "title": "Updated CLI to pass in a port",
    "user": {
      "login": "joemccann",
      "id": 48234,
      "node_id": "MDQ6VXNlcjQ4MjM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/48234?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joemccann",
      "html_url": "https://github.com/joemccann",
      "followers_url": "https://api.github.com/users/joemccann/followers",
      "following_url": "https://api.github.com/users/joemccann/following{/other_user}",
      "gists_url": "https://api.github.com/users/joemccann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joemccann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joemccann/subscriptions",
      "organizations_url": "https://api.github.com/users/joemccann/orgs",
      "repos_url": "https://api.github.com/users/joemccann/repos",
      "events_url": "https://api.github.com/users/joemccann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joemccann/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2011-06-06T15:35:38Z",
    "updated_at": "2011-06-06T21:13:46Z",
    "closed_at": "2011-06-06T20:20:06Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/698",
      "html_url": "https://github.com/expressjs/express/pull/698",
      "diff_url": "https://github.com/expressjs/express/pull/698.diff",
      "patch_url": "https://github.com/expressjs/express/pull/698.patch",
      "merged_at": null
    },
    "body": "I seem to have to manually change the port every time I build an express app.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/698/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/698/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/697",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/697/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/697/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/697/events",
    "html_url": "https://github.com/expressjs/express/issues/697",
    "id": 1009632,
    "node_id": "MDU6SXNzdWUxMDA5NjMy",
    "number": 697,
    "title": "Static File Not Properly Closed.",
    "user": {
      "login": "pyrostrex",
      "id": 343789,
      "node_id": "MDQ6VXNlcjM0Mzc4OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/343789?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pyrostrex",
      "html_url": "https://github.com/pyrostrex",
      "followers_url": "https://api.github.com/users/pyrostrex/followers",
      "following_url": "https://api.github.com/users/pyrostrex/following{/other_user}",
      "gists_url": "https://api.github.com/users/pyrostrex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pyrostrex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pyrostrex/subscriptions",
      "organizations_url": "https://api.github.com/users/pyrostrex/orgs",
      "repos_url": "https://api.github.com/users/pyrostrex/repos",
      "events_url": "https://api.github.com/users/pyrostrex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pyrostrex/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 13,
    "created_at": "2011-06-06T14:35:38Z",
    "updated_at": "2011-06-08T15:51:07Z",
    "closed_at": "2011-06-08T09:26:27Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "OK, after a while, for the chrome problem in issue #625, i used req.socket.setTimeout(..) and it works. the broken request can now be catched. But, since express doesn't really catch this problematic request, i think the file doesn't get closed properly, care to check this? This problem causing my server to crash with the ulimit problem. my ulimit is 100000 files and the downloaders are only like 30 ip addresses.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/697/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/697/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/696",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/696/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/696/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/696/events",
    "html_url": "https://github.com/expressjs/express/issues/696",
    "id": 1006828,
    "node_id": "MDU6SXNzdWUxMDA2ODI4",
    "number": 696,
    "title": "app.use('/:param', paramApp) not supported",
    "user": {
      "login": "alexgorbatchev",
      "id": 65633,
      "node_id": "MDQ6VXNlcjY1NjMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/65633?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexgorbatchev",
      "html_url": "https://github.com/alexgorbatchev",
      "followers_url": "https://api.github.com/users/alexgorbatchev/followers",
      "following_url": "https://api.github.com/users/alexgorbatchev/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexgorbatchev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexgorbatchev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexgorbatchev/subscriptions",
      "organizations_url": "https://api.github.com/users/alexgorbatchev/orgs",
      "repos_url": "https://api.github.com/users/alexgorbatchev/repos",
      "events_url": "https://api.github.com/users/alexgorbatchev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexgorbatchev/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 13,
    "created_at": "2011-06-05T23:50:07Z",
    "updated_at": "2019-06-27T21:55:41Z",
    "closed_at": "2014-02-25T17:35:13Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "It seems that a use case where an app would be mounted onto a URL with arguments in not currently supported.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/696/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/696/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/695",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/695/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/695/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/695/events",
    "html_url": "https://github.com/expressjs/express/issues/695",
    "id": 1002925,
    "node_id": "MDU6SXNzdWUxMDAyOTI1",
    "number": 695,
    "title": "expresso test fails on vanilla Express 2.3.9 project",
    "user": {
      "login": "stereosteve",
      "id": 97163,
      "node_id": "MDQ6VXNlcjk3MTYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/97163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stereosteve",
      "html_url": "https://github.com/stereosteve",
      "followers_url": "https://api.github.com/users/stereosteve/followers",
      "following_url": "https://api.github.com/users/stereosteve/following{/other_user}",
      "gists_url": "https://api.github.com/users/stereosteve/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stereosteve/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stereosteve/subscriptions",
      "organizations_url": "https://api.github.com/users/stereosteve/orgs",
      "repos_url": "https://api.github.com/users/stereosteve/repos",
      "events_url": "https://api.github.com/users/stereosteve/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stereosteve/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2011-06-04T16:10:08Z",
    "updated_at": "2012-06-17T02:37:24Z",
    "closed_at": "2012-06-17T02:37:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "after generating a new express app like so:\n\n```\nexpress exp\n```\n\nI get the following when running tests:\n\n```\nexpresso\nExpress server listening on port 3000\n\n   app.test.js GET /: TypeError: Cannot call method 'push' of undefined\n    at Object.response (/usr/local/lib/node_modules/expresso/bin/expresso:370:27)\n    at /Users/steve/dev/exp/test/app.test.js:14:12\n    at next (/usr/local/lib/node_modules/expresso/bin/expresso:796:25)\n    at runSuite (/usr/local/lib/node_modules/expresso/bin/expresso:814:6)\n    at check (/usr/local/lib/node_modules/expresso/bin/expresso:720:16)\n    at runFile (/usr/local/lib/node_modules/expresso/bin/expresso:724:10)\n    at Array.forEach (native)\n    at runFiles (/usr/local/lib/node_modules/expresso/bin/expresso:701:13)\n    at run (/usr/local/lib/node_modules/expresso/bin/expresso:669:5)\n    at Object.<anonymous> (/usr/local/lib/node_modules/expresso/bin/expresso:882:13)\n```\n\nAny advice?\nThanks,\nSteve\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/695/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/695/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/694",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/694/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/694/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/694/events",
    "html_url": "https://github.com/expressjs/express/issues/694",
    "id": 1002514,
    "node_id": "MDU6SXNzdWUxMDAyNTE0",
    "number": 694,
    "title": "in cygwin install express error:",
    "user": {
      "login": "yangjiandong",
      "id": 276788,
      "node_id": "MDQ6VXNlcjI3Njc4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/276788?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yangjiandong",
      "html_url": "https://github.com/yangjiandong",
      "followers_url": "https://api.github.com/users/yangjiandong/followers",
      "following_url": "https://api.github.com/users/yangjiandong/following{/other_user}",
      "gists_url": "https://api.github.com/users/yangjiandong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yangjiandong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yangjiandong/subscriptions",
      "organizations_url": "https://api.github.com/users/yangjiandong/orgs",
      "repos_url": "https://api.github.com/users/yangjiandong/repos",
      "events_url": "https://api.github.com/users/yangjiandong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yangjiandong/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2011-06-04T12:19:34Z",
    "updated_at": "2012-06-17T02:37:25Z",
    "closed_at": "2012-06-17T02:37:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "win2003+cygwin1.7.\nnpm install express \n\ninfo it worked if it ends with ok\nverbose cli [ 'node', '/usr/local/bin/npm', 'install', 'express' ]\ninfo using npm@1.0.9\ninfo using node@v0.4.8\nverbose config file /cygdrive/d/HOME/.npmrc\nverbose config file /usr/local/etc/npmrc\nsilly testEngine { name: 'jade',\nsilly testEngine   description: 'Jade template engine',\nsilly testEngine   version: '0.11.1',\nsilly testEngine   author: \nsilly testEngine    { name: 'TJ Holowaychuk',\nsilly testEngine      email: 'tj@vision-media.ca' },\nsilly testEngine   repository: \nsilly testEngine    { type: 'git',\nsilly testEngine      url: 'git://github.com/visionmedia/jade.git' },\nsilly testEngine   main: './index.js',\nsilly testEngine   bin: { jade: './bin/jade' },\nsilly testEngine   devDependencies: \nsilly testEngine    { expresso: '0.6.4',\nsilly testEngine      'coffee-script': '>= 0.0.1',\nsilly testEngine      sass: '>= 0.0.1',\nsilly testEngine      less: '>= 0.0.1',\nsilly testEngine      markdown: '>= 0.0.1',\nsilly testEngine      stylus: '>= 0.0.1' },\nsilly testEngine   engines: { node: '>= 0.1.98' },\nsilly testEngine   _id: 'jade@0.11.1',\nsilly testEngine   dependencies: {},\nsilly testEngine   _engineSupported: true,\nsilly testEngine   _npmVersion: '1.0.9',\nsilly testEngine   _nodeVersion: 'v0.4.8',\nsilly testEngine   _defaultsLoaded: true }\nverbose caching /cygdrive/d/workspace/node.js/node_modules/jade/package.json\nverbose loadDefaults jade@0.11.1\nverbose into /cygdrive/d/workspace/node.js [ 'express' ]\nverbose cache add [ 'express', null ]\ninfo addNamed [ 'express', '' ]\nverbose addNamed [ null, '' ]\nverbose GET express\nverbose raw, before any munging express\nverbose url resolving [ 'http://registry.npmjs.org/', './express' ]\nverbose url resolved http://registry.npmjs.org/express\nverbose url parsed { protocol: 'http:',\nverbose url parsed   slashes: true,\nverbose url parsed   host: 'registry.npmjs.org',\nverbose url parsed   hostname: 'registry.npmjs.org',\nverbose url parsed   href: 'http://registry.npmjs.org/express',\nverbose url parsed   pathname: '/express' }\nverbose response http://registry.npmjs.org/express\nsilly chunk {\"_id\":\"express\",\"_rev\":\"119-cc17f00abd1e5c2406a7ef4603498f90\",\"name\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"dist-tags\":{\"latest\":\"2.3.10\"},\"versions\":{\"0.14.0\":{\"name\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"version\":\"0.14.0\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"}],\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"directories\":{\"lib\":\"./lib\"},\"scripts\":{\"test\":\"make test\"},\"engines\":{\"node\":\">= 0.1.98\"},\"_id\":\"express@0.14.0\",\"_nodeSupported\":true,\"_npmVersion\":\"0.2.7-2\",\"_nodeVersion\":\"v0.3.1-pre\",\"dist\":{\"tarball\":\"http://registry.npmjs.org/express/-/express-0.14.0.tgz\"}},\"0.14.1\":{\"name\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"version\":\"0.14.1\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"}],\"keywords\":[\"framework\",\"sin\nsilly chunk atra\",\"web\",\"rest\",\"restful\"],\"directories\":{\"lib\":\"./lib\"},\"scripts\":{\"test\":\"make test\"},\"engines\":{\"node\":\">= 0.1.98\"},\"_id\":\"express@0.14.1\",\"_nodeSupported\":true,\"_npmVersion\":\"0.2.7-2\",\"_nodeVersion\":\"v0.3.1-pre\",\"dist\":{\"tarball\":\"http://registry.npmjs.org/express/-/express-0.14.1.tgz\"}},\"1.0.0beta\":{\"name\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"version\":\"1.0.0beta\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"}],\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"directories\":{\"lib\":\"./lib/express\"},\"scripts\":{\"test\":\"make test\"},\"bin\":{\"express\":\"./bin/express\"},\"engines\":{\"node\":\">= 0.1.98\"},\"_id\":\"express@1.0.0beta\",\"_nodeSupported\":true,\"_npmVersion\":\"0.2.7-2\",\"_nodeVersion\":\"v0.3.1-pre\",\"dist\":{\"tarball\":\"http://registry.npmjs.org/express/-/express-1.0.0beta.tgz\"}},\"1.0.0beta2\":{\"name\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"version\":\"1.0.0beta2\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"}],\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"directories\":{\"lib\":\"./lib/express\"},\"scripts\":{\"test\":\"make test\"},\"bin\":{\"express\":\"./bin/express\"},\"engines\":{\"node\":\">= 0.1.98\"},\"_id\":\"express@1.0.0beta2\",\"_nodeSupported\":true,\"_npmVersion\":\"0.2.7-2\",\"_nodeVersion\":\"v0.3.1-pre\",\"dist\":{\"tarball\":\"http://registry.npmjs.org/express/-/express-1.0.0beta2.tgz\"}},\"1.0.0rc\":{\"name\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"version\":\"1.0.0rc\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"}],\"dependencies\":{\"connect\":\">= 0.2.2\"},\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"directories\":{\"lib\":\"./lib/express\"},\"scripts\":{\"test\":\"make test\"},\"bin\":{\"express\":\"./bin/express\"},\"engines\":{\"node\":\">= 0.1.98\"},\"_id\":\"express@1.0.0rc\",\"_nodeSupported\":true,\"_npmVersion\":\"0.2.7-2\",\"_nodeVersion\":\"v0.3.1-pre\",\"dist\":{\"tarball\":\"http://registry.npmjs.org/express/-/express-1.0.0rc.tgz\"}},\"1.0.0rc2\":{\"name\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"version\":\"1.0.0rc2\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"}],\"dependencies\":{\"connect\":\">= 0.2.4\"},\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"directories\":{\"lib\":\"./lib/express\"},\"scripts\":{\"test\":\"make test\"},\"bin\":{\"express\":\"./bin/express\"},\"engines\":{\"node\":\">= 0.1.98\"},\"_id\":\"express@1.0.0rc2\",\"_nodeSupported\":true,\"_npmVersion\":\"0.2.7-2\",\"_nodeVersion\":\"v0.3.1-pre\",\"dist\":{\"tarball\":\"http://registry.npmjs.org/express/-/express-1.0.0rc2.tgz\"}},\"1.0.0rc3\":{\"name\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"version\":\"1.0.0rc3\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"}],\"dependencies\":{\"connect\":\">= 0.2.5\"},\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"directories\":{\"lib\":\"./lib/express\"},\"scripts\":{\"test\":\"make test\"},\"bin\":{\"express\":\"./bin/express\"},\"engines\":{\"node\":\">= 0.2.0\"},\"_id\":\"express@1.0.0rc3\",\"_nodeSupported\":true,\"_npmVersion\":\"0.2.7-2\",\"_nodeVersion\":\"v0.3.1-pre\",\"dist\":{\"tarball\":\"http://registry.npmjs.org/express/-/express-1.0.0rc3.tgz\"}},\"1.0.0rc4\":{\"name\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"version\":\"1.0.0rc4\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"\nsilly chunk tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"},{\"name\":\"Guillermo Rauch\",\"email\":\"rauchg@gmail.com\"}],\"dependencies\":{\"connect\":\">= 0.2.6\"},\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"directories\":{\"lib\":\"./lib/express\"},\"scripts\":{\"test\":\"make test\"},\"bin\":{\"express\":\"./bin/express\"},\"engines\":{\"node\":\">= 0.2.0\"},\"_id\":\"express@1.0.0rc4\",\"_nodeSupported\":true,\"_npmVersion\":\"0.2.7-2\",\"_nodeVersion\":\"v0.3.1-pre\",\"dist\":{\"tarball\":\"http://registry.npmjs.org/express/-/express-1.0.0rc4.tgz\"}},\"1.0.0\":{\"name\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"version\":\"1.0.0\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"},{\"name\":\"Guillermo Rauch\",\"email\":\"rauchg@gmail.com\"}],\"dependencies\":{\"connect\":\">= 0.3.0\"},\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"directories\":{\"lib\":\"./lib/express\"},\"scripts\":{\"test\":\"make test\"},\"bin\":{\"express\":\"./bin/express\"},\"engines\":{\"node\":\">= 0.2.0\"},\"_id\":\"express@1.0.0\",\"_nodeSupported\":true,\"_npmVersion\":\"0.2.7-3\",\"_nodeVersion\":\"v0.2.4\",\"dist\":{\"tarball\":\"http://registry.npmjs.org/express/-/express-1.0.0.tgz\"}},\"1.0.1\":{\"name\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"version\":\"1.0.1\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"},{\"name\":\"Guillermo Rauch\",\"email\":\"rauchg@gmail.com\"}],\"dependencies\":{\"connect\":\">= 0.3.0\"},\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"directories\":{\"lib\":\"./lib/express\"},\"scripts\":{\"test\":\"make test\"},\"bin\":{\"express\":\"./bin/express\"},\"engines\":{\"node\":\">= 0.2.0\"},\"_id\":\"express@1.0.1\",\"_engineSupported\":true,\"_npmVersion\":\"0.2.13-1\",\"_nodeVersion\":\"v0.2.5\",\"dist\":{\"shasum\":\"53ad8442c3feb46588f08698f1872c4dbf24137f\",\"tarball\":\"http://registry.npmjs.org/express/-/express-1.0.1.tgz\"}},\"1.0.2\":{\"name\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"version\":\"1.0.2\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"},{\"name\":\"Guillermo Rauch\",\"email\":\"rauchg@gmail.com\"}],\"dependencies\":{\"connect\":\">= 0.3.0\"},\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"directories\":{\"lib\":\"./lib/express\"},\"scripts\":{\"test\":\"make test\"},\"bin\":{\"express\":\"./bin/express\"},\"engines\":{\"node\":\">= 0.2.0\"},\"_id\":\"express@1.0.2\",\"_engineSupported\":true,\"_npmVersion\":\"0.2.13-1\",\"_nodeVersion\":\"v0.2.6\",\"dist\":{\"shasum\":\"5985fd1986b2275d8e96976a8b8de011dc823e0d\",\"tarball\":\"http://registry.npmjs.org/express/-/express-1.0.2.tgz\"}},\"1.0.3\":{\"name\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"version\":\"1.0.3\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"},{\"name\":\"Guillermo Rauch\",\"email\":\"rauchg@gmail.com\"}],\"dependencies\":{\"connect\":\">= 0.3.0\"},\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"directories\":{\"lib\":\"./lib/express\"},\"scripts\":{\"test\":\"make test\"},\"bin\":{\"express\":\"./bin/express\"},\"engines\":{\"node\":\">= 0.2.0\"},\"_id\":\"express@1.0.3\",\"_engineSupported\":true,\"_npmVersion\":\"0.2.13-1\",\"_nodeVersion\":\"v0.2.6\",\"dist\":{\"shasum\":\"e07fd860c4af7ffddc77653fd1fd930fce26cb61\",\"tarball\":\"http://registry.npmjs.org/express/-/express-1.0.3.tgz\"}},\"1.0.4\":{\"name\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"version\":\"1.0.4\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"},{\"name\":\"Guillermo Rauch\",\"email\":\"rauchg@gmail.com\"}],\"dependencies\":{\"connect\":\">= 0.5.x\",\"qs\":\">= 0.0.1\"},\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"directories\":{\"lib\":\"./lib/express\",\"bin\":\"./bin\"},\"scripts\":{\"test\":\"make test\"},\"bin\":{\"express\":\"./bin/express\"},\"engines\":{\"node\":\">= 0.2.0\"},\"_id\":\"express@1.0.4\",\"_engineSupported\":true,\"_npmVersion\":\"0.2.16\",\"_nodeVersion\":\"v0.2.6\",\"modules\":{\"index.js\":\"lib/express/index.js\",\"request.js\":\"lib/express/request.js\",\"response.js\":\"lib/express/response.js\",\"server.js\":\"lib/express/server.js\",\"utils.js\":\"lib/express/utils.js\",\"view.js\":\"lib/express/view.js\"},\"files\":[\"\"],\"_defaultsLoaded\":true,\"dist\":{\"shasum\":\"fab80c530d40b04f4f558f7f03b2cbf0f9040b14\",\"tarball\":\"http://registry.npmjs.org/express/-/express-1.0.4.tgz\"}},\"1.0.5\":{\"name\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"version\":\"1.0.5\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"},{\"name\":\"Guillermo Rauch\",\"email\":\"rauchg@gmail.com\"}],\"dependencies\":{\"connect\":\">= 0.5.0\",\"qs\":\">= 0.0.2\"},\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"directories\":{\"lib\":\"./lib/express\",\"bin\":\"./bin\"},\"scripts\":{\"t\nsilly chunk est\":\"make test\"},\"bin\":{\"express\":\"./bin/express\"},\"engines\":{\"node\":\">= 0.2.0\"},\"_id\":\"express@1.0.5\",\"_engineSupported\":true,\"_npmVersion\":\"0.2.16\",\"_nodeVersion\":\"v0.2.6\",\"modules\":{\"index.js\":\"lib/express/index.js\",\"request.js\":\"lib/express/request.js\",\"response.js\":\"lib/express/response.js\",\"server.js\":\"lib/express/server.js\",\"utils.js\":\"lib/express/utils.js\",\"view.js\":\"lib/express/view.js\"},\"files\":[\"\"],\"_defaultsLoaded\":true,\"dist\":{\"shasum\":\"2d32dff93a8c454e9a717c43b856c5369efc2856\",\"tarball\":\"http://registry.npmjs.org/express/-/express-1.0.5.tgz\"}},\"1.0.6\":{\"name\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"version\":\"1.0.6\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"},{\"name\":\"Guillermo Rauch\",\"email\":\"rauchg@gmail.com\"}],\"dependencies\":{\"connect\":\">= 0.5.0\",\"qs\":\">= 0.0.2\"},\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"directories\":{\"lib\":\"./lib/express\",\"bin\":\"./bin\"},\"scripts\":{\"test\":\"make test\"},\"bin\":{\"express\":\"./bin/express\"},\"engines\":{\"node\":\">= 0.2.0\"},\"_id\":\"express@1.0.6\",\"_engineSupported\":true,\"_npmVersion\":\"0.2.16\",\"_nodeVersion\":\"v0.2.6\",\"modules\":{\"index.js\":\"lib/express/index.js\",\"request.js\":\"lib/express/request.js\",\"response.js\":\"lib/express/response.js\",\"server.js\":\"lib/express/server.js\",\"utils.js\":\"lib/express/utils.js\",\"view.js\":\"lib/express/view.js\"},\"files\":[\"\"],\"_defaultsLoaded\":true,\"dist\":{\"shasum\":\"9aee1508f0e9ce4cc2eabdda94ec8793898306f9\",\"tarball\":\"http://registry.npmjs.org/express/-/express-1.0.6.tgz\"}},\"1.0.7\":{\"name\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"version\":\"1.0.7\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"},{\"name\":\"Guillermo Rauch\",\"email\":\"rauchg@gmail.com\"}],\"dependencies\":{\"connect\":\">= 0.5.0\",\"qs\":\">= 0.0.2\"},\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"directories\":{\"lib\":\"./lib/express\",\"bin\":\"./bin\"},\"scripts\":{\"test\":\"make test\"},\"bin\":{\"express\":\"./bin/express\"},\"engines\":{\"node\":\">= 0.2.0\"},\"_id\":\"express@1.0.7\",\"_engineSupported\":true,\"_npmVersion\":\"0.2.16\",\"_nodeVersion\":\"v0.2.6\",\"modules\":{\"index.js\":\"lib/express/index.js\",\"request.js\":\"lib/express/request.js\",\"response.js\":\"lib/express/response.js\",\"server.js\":\"lib/express/server.js\",\"utils.js\":\"lib/express/utils.js\",\"view.js\":\"lib/express/view.js\"},\"files\":[\"\"],\"_defaultsLoaded\":true,\"dist\":{\"shasum\":\"ccb14eee039e4177ce410fe5f074e96f68629e6c\",\"tarball\":\"http://registry.npmjs.org/express/-/express-1.0.7.tgz\"}},\"2.0.0beta\":{\"name\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"version\":\"2.0.0beta\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"},{\"name\":\"Guillermo Rauch\",\"email\":\"rauchg@gmail.com\"}],\"dependencies\":{\"connect\":\">= 1.0.1\",\"mime\":\">= 0.0.1\",\"qs\":\">= 0.0.6\"},\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"main\":\"index\",\"bin\":{\"express\":\"./bin/express\"},\"engines\":{\"node\":\">= 0.4.1 < 0.5.0\"},\"_id\":\"express@2.0.0beta\",\"_engineSupported\":true,\"_npmVersion\":\"0.3.13\",\"_nodeVersion\":\"v0.4.2\",\"directories\":{\"lib\":\"./lib\",\"bin\":\"./bin\"},\"files\":[\"\"],\"_defaultsLoaded\":true,\"dist\":{\"shasum\":\"c2095479887128f161ee13211e7b886edb4d9f98\",\"tarball\":\"http://registry.npmjs.org/express/-/express-2.0.0beta.tgz\"}},\"1.0.8\":{\"name\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"version\":\"1.0.8\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"},{\"name\":\"Guillermo Rauch\",\"email\":\"rauchg@gmail.com\"}],\"dependencies\":{\"connect\":\">= 0.5.0 < 1.0.0\",\"qs\":\">= 0.0.5\"},\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"directories\":{\"lib\":\"./lib/express\",\"bin\":\"./bin\"},\"main\":\"index\",\"scripts\":{\"test\":\"make test\"},\"bin\":{\"express\":\"./bin/express\"},\"engines\":{\"node\":\">= 0.2.0 < 0.4.0\"},\"_id\":\"express@1.0.8\",\"_engineSupported\":false,\"_npmVersion\":\"0.3.13\",\"_nodeVersion\":\"v0.4.2\",\"files\":[\"\"],\"_defaultsLoaded\":true,\"dist\":{\"shasum\":\"fe254667ad612c23dd87d61180dc194cda1f7d38\",\"tarball\":\"http://registry.npmjs.org/express/-/express-1.0.8.tgz\"}},\"2.0.0beta2\":{\"name\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"version\":\"2.0.0beta2\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"},{\"name\":\"Guillermo Rauch\",\"email\":\"rauchg@gmail.com\"}],\"dependencies\":{\"connect\":\">= 1.0.1 < 2.0.0\",\"mime\":\">= 0.0.1\",\"qs\":\">= 0.0.6\"},\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"main\":\"index\",\"bin\":{\"express\":\"./bin/express\"},\"engines\":{\"node\":\">= 0.4.1 < 0.5.0\"},\"_id\":\"express@2.0.0beta2\",\"_engineSupported\":true,\"_npmVersion\":\"0.3.15\",\"_nodeVersion\":\"v0.4.1\",\"directories\":{\"lib\":\"./lib\",\"bin\":\"./bin\"},\"files\":[\"\"],\"_defaultsLoaded\":true,\"dist\":{\"shasum\":\"274e49af300145688e87ed2f5c5e59f6e26af135\",\"tarball\":\"http://registry.npmjs.org/express/-/express-2.0.0beta2.tgz\"}},\"2.0.0beta3\":\nsilly chunk {\"name\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"version\":\"2.0.0beta3\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"},{\"name\":\"Guillermo Rauch\",\"email\":\"rauchg@gmail.com\"}],\"dependencies\":{\"connect\":\">= 1.0.1 < 2.0.0\",\"mime\":\">= 0.0.1\",\"qs\":\">= 0.0.6\"},\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"main\":\"index\",\"bin\":{\"express\":\"./bin/express\"},\"engines\":{\"node\":\">= 0.4.1 < 0.5.0\"},\"_id\":\"express@2.0.0beta3\",\"_engineSupported\":true,\"_npmVersion\":\"0.3.15\",\"_nodeVersion\":\"v0.4.2\",\"directories\":{\"lib\":\"./lib\",\"bin\":\"./bin\"},\"files\":[\"\"],\"_defaultsLoaded\":true,\"dist\":{\"shasum\":\"f9c1324023729c4eb96688023e989fe2f8565c61\",\"tarball\":\"http://registry.npmjs.org/express/-/express-2.0.0beta3.tgz\"}},\"2.0.0rc\":{\"name\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"version\":\"2.0.0rc\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"},{\"name\":\"Guillermo Rauch\",\"email\":\"rauchg@gmail.com\"}],\"dependencies\":{\"connect\":\">= 1.0.1 < 2.0.0\",\"mime\":\">= 0.0.1\",\"qs\":\">= 0.0.6\"},\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"main\":\"index\",\"bin\":{\"express\":\"./bin/express\"},\"engines\":{\"node\":\">= 0.4.1 < 0.5.0\"},\"_id\":\"express@2.0.0rc\",\"_engineSupported\":true,\"_npmVersion\":\"0.3.15\",\"_nodeVersion\":\"v0.4.2\",\"directories\":{\"lib\":\"./lib\",\"bin\":\"./bin\"},\"files\":[\"\"],\"_defaultsLoaded\":true,\"dist\":{\"shasum\":\"6d3da0301b6cdce94ee437ae40ae6c8c7f5d7ccf\",\"tarball\":\"http://registry.npmjs.org/express/-/express-2.0.0rc.tgz\"}},\"2.0.0rc2\":{\"name\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"version\":\"2.0.0rc2\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"},{\"name\":\"Guillermo Rauch\",\"email\":\"rauchg@gmail.com\"}],\"dependencies\":{\"connect\":\">= 1.1.0 < 2.0.0\",\"mime\":\">= 0.0.1\",\"qs\":\">= 0.0.6\"},\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"main\":\"index\",\"bin\":{\"express\":\"./bin/express\"},\"engines\":{\"node\":\">= 0.4.1 < 0.5.0\"},\"_id\":\"express@2.0.0rc2\",\"_engineSupported\":true,\"_npmVersion\":\"0.3.15\",\"_nodeVersion\":\"v0.4.2\",\"directories\":{\"lib\":\"./lib\",\"bin\":\"./bin\"},\"files\":[\"\"],\"_defaultsLoaded\":true,\"dist\":{\"shasum\":\"381e1388bcd56d0449dbbf2272975f907488f710\",\"tarball\":\"http://registry.npmjs.org/express/-/express-2.0.0rc2.tgz\"}},\"2.0.0rc3\":{\"name\":\"express\",\"des\nsilly chunk cription\":\"Sinatra inspired web development framework\",\"version\":\"2.0.0rc3\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"},{\"name\":\"Guillermo Rauch\",\"email\":\"rauchg@gmail.com\"}],\"dependencies\":{\"connect\":\">= 1.1.0 < 2.0.0\",\"mime\":\">= 0.0.1\",\"qs\":\">= 0.0.6\"},\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"main\":\"index\",\"bin\":{\"express\":\"./bin/express\"},\"engines\":{\"node\":\">= 0.4.1 < 0.5.0\"},\"_id\":\"express@2.0.0rc3\",\"_engineSupported\":true,\"_npmVersion\":\"0.3.15\",\"_nodeVersion\":\"v0.4.2\",\"directories\":{\"lib\":\"./lib\",\"bin\":\"./bin\"},\"files\":[\"\"],\"_defaultsLoaded\":true,\"dist\":{\"shasum\":\"538a35c8b0e2b08c455a20528b8d6a5568e901c1\",\"tarball\":\"http://registry.npmjs.org/express/-/express-2.0.0rc3.tgz\"}},\"2.0.0\":{\"name\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"version\":\"2.0.0\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"},{\"name\":\"Guillermo Rauch\",\"email\":\"rauchg@gmail.com\"}],\"dependencies\":{\"connect\":\">= 1.1.0 < 2.0.0\",\"mime\":\">= 0.0.1\",\"qs\":\">= 0.0.6\"},\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"main\":\"index\",\"bin\":{\"express\":\"./bin/express\"},\"engines\":{\"node\":\">= 0.4.1 < 0.5.0\"},\"_id\":\"express@2.0.0\",\"_engineSupported\":true,\"_npmVersion\":\"0.3.15\",\"_nodeVersion\":\"v0.4.2\",\"directories\":{\"lib\":\"./lib\",\"bin\":\"./bin\"},\"files\":[\"\"],\"_defaultsLoaded\":true,\"dist\":{\"shasum\":\"f9f715cf54e9b6f3f00115fe7e1188964d0a74b2\",\"tarball\":\"http://registry.npmjs.org/express/-/express-2.0.0.tgz\"}},\"2.1.0\":{\"name\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"version\":\"2.1.0\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"},{\"name\":\"Guillermo Rauch\",\"email\":\"rauchg@gmail.com\"}],\"dependencies\":{\"connect\":\">= 1.1.1 < 2.0.0\",\"mime\":\">= 0.0.1\",\"qs\":\">= 0.0.6\"},\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"main\":\"index\",\"bin\":{\"express\":\"./bin/express\"},\"engines\":{\"node\":\">= 0.4.1 < 0.5.0\"},\"_id\":\"express@2.1.0\",\"_engineSupported\":true,\"_npmVersion\":\"0.3.15\",\"_nodeVersion\":\"v0.4.3\",\"directories\":{\"lib\":\"./lib\",\"bin\":\"./bin\"},\"files\":[\"\"],\"_defaultsLoaded\":true,\"dist\":{\"shasum\":\"34542d68cf298d5a89d74dc1c8f96b5c4e1b00a7\",\"tarball\":\"http://registry.npmjs.org/express/-/express-2.1.0.tgz\"}},\"2.1.1\":{\"name\":\"express\",\"description\":\"Sinatra inspired web development framewo\nsilly chunk rk\",\"version\":\"2.1.1\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"},{\"name\":\"Guillermo Rauch\",\"email\":\"rauchg@gmail.com\"}],\"dependencies\":{\"connect\":\">= 1.1.1 < 2.0.0\",\"mime\":\">= 0.0.1\",\"qs\":\">= 0.0.6\"},\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/visionmedia/express.git\"},\"main\":\"index\",\"bin\":{\"express\":\"./bin/express\"},\"engines\":{\"node\":\">= 0.4.1 < 0.5.0\"},\"_id\":\"express@2.1.1\",\"_engineSupported\":true,\"_npmVersion\":\"0.3.15\",\"_nodeVersion\":\"v0.4.3\",\"directories\":{\"lib\":\"./lib\",\"bin\":\"./bin\"},\"files\":[\"\"],\"_defaultsLoaded\":true,\"dist\":{\"shasum\":\"4ab83c3509050ef917532cdb174bc23d8a007af4\",\"tarball\":\"http://registry.npmjs.org/express/-/express-2.1.1.tgz\"}},\"2.2.0\":{\"name\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"version\":\"2.2.0\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"},{\"name\":\"Guillermo Rauch\",\"email\":\"rauchg@gmail.com\"}],\"dependencies\":{\"connect\":\">= 1.2.0 < 2.0.0\",\"mime\":\">= 0.0.1\",\"qs\":\">= 0.0.6\"},\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/visionmedia/express.git\"},\"main\":\"index\",\"bin\":{\"express\":\"./bin/express\"},\"engines\":{\"node\":\">= 0.4.1 < 0.5.0\"},\"_id\":\"express@2.2.0\",\"_engineSupported\":true,\"_npmVersion\":\"0.3.15\",\"_nodeVersion\":\"v0.4.3\",\"directories\":{\"lib\":\"./lib\",\"bin\":\"./bin\"},\"files\":[\"\"],\"_defaultsLoaded\":true,\"dist\":{\"shasum\":\"ab38a7eaad67a1c28495021a798d234086d73dea\",\"tarball\":\"http://registry.npmjs.org/express/-/express-2.2.0.tgz\"}},\"2.2.1\":{\"name\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"version\":\"2.2.1\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"},{\"name\":\"Guillermo Rauch\",\"email\":\"rauchg@gmail.com\"}],\"dependencies\":{\"connect\":\">= 1.2.0 < 2.0.0\",\"mime\":\">= 0.0.1\",\"qs\":\">= 0.0.6\"},\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/visionmedia/express.git\"},\"main\":\"index\",\"bin\":{\"express\":\"./bin/express\"},\"engines\":{\"node\":\">= 0.4.1 < 0.5.0\"},\"_id\":\"express@2.2.1\",\"_engineSupported\":true,\"_npmVersion\":\"0.3.15\",\"_nodeVersion\":\"v0.4.4\",\"directories\":{\"lib\":\"./lib\",\"bin\":\"./bin\"},\"files\":[\"\"],\"_defaultsLoaded\":true,\"dist\":{\"shasum\":\"a4937f9d5e661282cd62\nsilly chunk d88e227132f79ccbe25f\",\"tarball\":\"http://registry.npmjs.org/express/-/express-2.2.1.tgz\"}},\"2.2.2\":{\"name\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"version\":\"2.2.2\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"},{\"name\":\"Guillermo Rauch\",\"email\":\"rauchg@gmail.com\"}],\"dependencies\":{\"connect\":\">= 1.3.0 < 2.0.0\",\"mime\":\">= 0.0.1\",\"qs\":\">= 0.0.6\"},\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/visionmedia/express.git\"},\"main\":\"index\",\"bin\":{\"express\":\"./bin/express\"},\"engines\":{\"node\":\">= 0.4.1 < 0.5.0\"},\"_id\":\"express@2.2.2\",\"_engineSupported\":true,\"_npmVersion\":\"0.3.15\",\"_nodeVersion\":\"v0.4.5\",\"directories\":{\"lib\":\"./lib\",\"bin\":\"./bin\"},\"files\":[\"\"],\"_defaultsLoaded\":true,\"dist\":{\"shasum\":\"19c26d4cd36018896fc90a9eef3300052b3e01d2\",\"tarball\":\"http://registry.npmjs.org/express/-/express-2.2.2.tgz\"}},\"2.3.0\":{\"name\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"version\":\"2.3.0\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"},{\"name\":\"Guillermo Rauch\",\"email\":\"rauchg@gmail.com\"}],\"dependencies\":{\"connect\":\">= 1.4.0 < 2.0.0\",\"mime\":\">= 0.0.1\",\"qs\":\">= 0.0.6\"},\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/visionmedia/express.git\"},\"main\":\"index\",\"bin\":{\"express\":\"./bin/express\"},\"engines\":{\"node\":\">= 0.4.1 < 0.5.0\"},\"_id\":\"express@2.3.0\",\"_engineSupported\":true,\"_npmVersion\":\"0.3.18\",\"_nodeVersion\":\"v0.4.6\",\"directories\":{\"lib\":\"./lib\",\"bin\":\"./bin\"},\"files\":[\"\"],\"_defaultsLoaded\":true,\"dist\":{\"shasum\":\"c32ae9a32a364077976352349eac54820cf21e3e\",\"tarball\":\"http://registry.npmjs.org/express/-/express-2.3.0.tgz\"}},\"2.3.1\":{\"name\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"version\":\"2.3.1\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"},{\"name\":\"Guillermo Rauch\",\"email\":\"rauchg@gmail.com\"}],\"dependencies\":{\"connect\":\">= 1.4.0 < 2.0.0\",\"mime\":\">= 0.0.1\",\"qs\":\">= 0.0.6\"},\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/visionmedia/express.git\"},\"main\":\"index\",\"bin\":{\"express\":\"./bin/express\"},\"engines\":{\"node\":\">= 0.4.1 < 0.5.0\"},\"_id\":\"express@2.3.1\",\"_engineSupported\"\nsilly chunk :true,\"_npmVersion\":\"0.3.18\",\"_nodeVersion\":\"v0.4.6\",\"directories\":{\"lib\":\"./lib\",\"bin\":\"./bin\"},\"files\":[\"\"],\"_defaultsLoaded\":true,\"dist\":{\"shasum\":\"15a9459c9b9e785d52d14a62595a29d7cbab4882\",\"tarball\":\"http://registry.npmjs.org/express/-/express-2.3.1.tgz\"}},\"2.3.2\":{\"name\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"version\":\"2.3.2\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"},{\"name\":\"Guillermo Rauch\",\"email\":\"rauchg@gmail.com\"}],\"dependencies\":{\"connect\":\">= 1.4.0 < 2.0.0\",\"mime\":\">= 0.0.1\",\"qs\":\">= 0.0.6\"},\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/visionmedia/express.git\"},\"main\":\"index\",\"bin\":{\"express\":\"./bin/express\"},\"engines\":{\"node\":\">= 0.4.1 < 0.5.0\"},\"_id\":\"express@2.3.2\",\"_engineSupported\":true,\"_npmVersion\":\"0.3.18\",\"_nodeVersion\":\"v0.4.6\",\"directories\":{\"lib\":\"./lib\",\"bin\":\"./bin\"},\"files\":[\"\"],\"_defaultsLoaded\":true,\"dist\":{\"shasum\":\"ad6a3071d59a3bf1a4ed0b1b2942d9f0e510a028\",\"tarball\":\"http://registry.npmjs.org/express/-/express-2.3.2.tgz\"}},\"2.3.3\":{\"name\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"version\":\"2.3.3\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"},{\"name\":\"Guillermo Rauch\",\"email\":\"rauchg@gmail.com\"}],\"dependencies\":{\"connect\":\">= 1.4.0 < 2.0.0\",\"mime\":\">= 0.0.1\",\"qs\":\">= 0.0.6\"},\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/visionmedia/express.git\"},\"main\":\"index\",\"bin\":{\"express\":\"./bin/express\"},\"engines\":{\"node\":\">= 0.4.1 < 0.5.0\"},\"devDependencies\":{},\"_id\":\"express@2.3.3\",\"_engineSupported\":true,\"_npmVersion\":\"1.0.3\",\"_nodeVersion\":\"v0.4.7\",\"_defaultsLoaded\":true,\"dist\":{\"shasum\":\"936507d26e0433598679a645a87e403b3292547c\",\"tarball\":\"http://registry.npmjs.org/express/-/express-2.3.3.tgz\"},\"scripts\":{},\"directories\":{}},\"2.3.4\":{\"name\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"version\":\"2.3.4\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"},{\"name\":\"Guillermo Rauch\",\"email\":\"rauchg@gmail.com\"}],\"dependencies\":{\"connect\":\">= 1.4.0 < 2.0.0\",\"mime\":\">= 0.0.1\",\"qs\":\">= 0.0.6\"},\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/visionmedia/express.git\"},\"main\":\"index\",\"bin\":{\"express\":\"./bin/express\"},\"engines\":{\"node\":\">= 0.4.1 < 0.5.0\"},\"devDependencies\":{},\"_id\":\"express@2.3.4\",\"_engineSupported\":true,\"_npmVersion\":\"1.0.3\",\"_nodeVersion\":\"v0.4.7\",\"_defaultsLoaded\":true,\"dist\":{\"shasum\":\"8db976504b3f7f1da32abc845c45c20610a1ffd0\",\"tarball\":\"http://registry.npmjs.org/express/-/express-2.3.4.tgz\"},\"scripts\":{},\"directories\":{}},\"2.3.5\":{\"name\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"version\":\"2.3.5\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"},{\"name\":\"Guillermo Rauch\",\"email\":\"rauchg@gmail.com\"}],\"dependencies\":{\"connect\":\">= 1.4.0 < 2.0.0\",\"mime\":\">= 0.0.1\",\"qs\":\">= 0.0.6\"},\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/visionmedia/express.git\"},\"main\":\"index\",\"bin\":{\"express\":\"./bin/express\"},\"engines\":{\"node\":\">= 0.4.1 < 0.5.0\"},\"devDependencies\":{},\"_id\":\"express@2.3.5\",\"_engineSupported\":true,\"_npmVersion\":\"1.0.3\",\"_nodeVersion\":\"v0.4.7\",\"_defaultsLoaded\":true,\"dist\":{\"shasum\":\"a3113d0d9db4ea118e2c12b044a04c16741e799b\",\"tarball\":\"http://registry.npmjs.org/express/-/express-2.3.5.tgz\"},\"scripts\":{},\"directories\":{}},\"2.3.6\":{\"na\nsilly chunk me\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"version\":\"2.3.6\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"},{\"name\":\"Guillermo Rauch\",\"email\":\"rauchg@gmail.com\"}],\"dependencies\":{\"connect\":\">= 1.4.1 < 2.0.0\",\"mime\":\">= 0.0.1\",\"qs\":\">= 0.0.6\"},\"devDependencies\":{\"connect-form\":\"0.2.1\",\"ejs\":\"0.4.2\",\"expresso\":\"0.7.2\",\"hamljs\":\"0.5.1\",\"jade\":\"0.11.0\",\"stylus\":\"0.13.0\",\"should\":\"0.2.1\",\"express-messages\":\"0.0.2\",\"node-markdown\":\">= 0.0.1\",\"connect-redis\":\">= 0.0.1\"},\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/visionmedia/express.git\"},\"main\":\"index\",\"bin\":{\"express\":\"./bin/express\"},\"engines\":{\"node\":\">= 0.4.1 < 0.5.0\"},\"_id\":\"express@2.3.6\",\"_engineSupported\":true,\"_npmVersion\":\"1.0.3\",\"_nodeVersion\":\"v0.4.7\",\"_defaultsLoaded\":true,\"dist\":{\"shasum\":\"8598e2995fc7c7427b7c3aed53837be652e873c7\",\"tarball\":\"http://registry.npmjs.org/express/-/express-2.3.6.tgz\"},\"scripts\":{},\"directories\":{}},\"2.3.7\":{\"name\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"version\":\"2.3.7\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"},{\"name\":\"Guillermo Rauch\",\"email\":\"rauchg@gmail.com\"}],\"dependencies\":{\"connect\":\">= 1.4.1 < 2.0.0\",\"mime\":\">= 0.0.1\",\"qs\":\">= 0.0.6\"},\"devDependencies\":{\"connect-form\":\"0.2.1\",\"ejs\":\"0.4.2\",\"expresso\":\"0.7.2\",\"hamljs\":\"0.5.1\",\"jade\":\"0.11.0\",\"stylus\":\"0.13.0\",\"should\":\"0.2.1\",\"express-messages\":\"0.0.2\",\"node-markdown\":\">= 0.0.1\",\"connect-redis\":\">= 0.0.1\"},\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/visionmedia/express.git\"},\"main\":\"index\",\"bin\":{\"express\":\"./bin/express\"},\"engines\":{\"node\":\">= 0.4.1 < 0.5.0\"},\"_id\":\"express@2.3.7\",\"_engineSupported\":true,\"_npmVersion\":\"1.0.3\",\"_nodeVersion\":\"v0.4.8\",\"_defaultsLoaded\":true,\"dist\":{\"shasum\":\"6d008ca32c4a23110032e67f4c40843c068e13b7\",\"tarball\":\"http://registry.npmjs.org/express/-/express-2.3.7.tgz\"},\"scripts\":{},\"directories\":{}},\"2.3.8\":{\"name\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"version\":\"2.3.8\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"},{\"name\":\"Guillermo Rauch\",\"email\":\"rauchg@gmail.com\"}],\"dependencies\":{\"connect\":\">= 1.4.1 < 2.0.0\",\"mime\":\">= 0.0.1\",\"qs\":\">= 0.0.6\"},\"devDependencies\":{\"connect-form\":\"0.2.1\",\"ejs\":\"0.4.2\",\"expresso\":\"0.7.2\",\"hamljs\":\"0.5.1\",\"jade\":\"0.11.0\",\"stylus\":\"0.13.0\",\"should\":\"0.2.1\",\"express-messages\":\"0.0.2\",\"node-markdown\":\">= 0.0.1\",\"connect-redis\":\">= 0.0.1\"},\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/visionmedia/express.git\"},\"main\":\"index\",\"bin\":{\"express\":\"./bin/express\"},\"engines\":{\"node\":\">= 0.4.1 < 0.5.0\"},\"_id\":\"express@2.3.8\",\"_engineSupported\":true,\"_npmVersion\":\"1.0.3\",\"_nodeVersion\":\"v0.4.8\",\"_defaultsLoaded\":true,\"dist\":{\"shasum\":\"fac5808b93b5abf84906c886fe314a0d4f44fa89\",\"tarball\":\"http://registry.npmjs.org/express/-/express-2.3.8.tgz\"},\"scripts\":{},\"directories\":{}},\"2.3.9\":{\"name\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"version\":\"2.3.9\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"},{\"name\":\"Guillermo Rauch\",\"email\":\"rauchg@gmail.com\"}],\"dependencies\":{\"connect\":\">= 1.4.1 < 2.0.0\",\"mime\":\">= 0.0.1\",\"qs\":\">= 0.0.6\"},\"devDependencies\":{\"connect-form\":\"0.2.1\",\"ejs\":\"0.4.2\",\"expresso\":\"0.7.2\",\"hamljs\":\"0.5.1\",\"jade\":\"0.11.0\",\"stylus\":\"0.13.0\",\"should\":\"0.2.1\",\"express-messages\":\"0.0.2\",\"node-markdown\":\">= 0.0.1\"\nsilly chunk ,\"connect-redis\":\">= 0.0.1\"},\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/visionmedia/express.git\"},\"main\":\"index\",\"bin\":{\"express\":\"./bin/express\"},\"engines\":{\"node\":\">= 0.4.1 < 0.5.0\"},\"_id\":\"express@2.3.9\",\"_engineSupported\":true,\"_npmVersion\":\"1.0.3\",\"_nodeVersion\":\"v0.4.8\",\"_defaultsLoaded\":true,\"dist\":{\"shasum\":\"e5b6a5dc5452e9bcaf8936297f9f0e111b71a2a7\",\"tarball\":\"http://registry.npmjs.org/express/-/express-2.3.9.tgz\"},\"scripts\":{},\"directories\":{}},\"2.3.10\":{\"name\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"version\":\"2.3.10\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"},{\"name\":\"Guillermo Rauch\",\"email\":\"rauchg@gmail.com\"}],\"dependencies\":{\"connect\":\">= 1.4.1 < 2.0.0\",\"mime\":\">= 0.0.1\",\"qs\":\">= 0.0.6\"},\"devDependencies\":{\"connect-form\":\"0.2.1\",\"ejs\":\"0.4.2\",\"expresso\":\"0.7.2\",\"hamljs\":\"0.5.1\",\"jade\":\"0.11.0\",\"stylus\":\"0.13.0\",\"should\":\"0.2.1\",\"express-messages\":\"0.0.2\",\"node-markdown\":\">= 0.0.1\",\"connect-redis\":\">= 0.0.1\"},\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/visionmedia/express.git\"},\"main\":\"index\",\"bin\":{\"express\":\"./bin/express\"},\"engines\":{\"node\":\">= 0.4.1 < 0.5.0\"},\"_id\":\"express@2.3.10\",\"_engineSupported\":true,\"_npmVersion\":\"1.0.3\",\"_nodeVersion\":\"v0.4.8\",\"_defaultsLoaded\":true,\"dist\":{\"shasum\":\"09b5e939b28af0705d1ac46265c703db1016310c\",\"tarball\":\"http://registry.npmjs.org/express/-/express-2.3.10.tgz\"},\"scripts\":{},\"directories\":{}}},\"maintainers\":[{\"name\":\"tjholowaychuk\",\"email\":\"tj@vision-media.ca\"}],\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"time\":{\"0.14.0\":\"2010-12-29T19:38:25.450Z\",\"0.14.1\":\"2010-12-29T19:38:25.450Z\",\"1.0.0beta\":\"2010-12-29T19:38:25.450Z\",\"1.0.0beta2\":\"2010-12-29T19:38:25.450Z\",\"1.0.0rc\":\"2\nsilly chunk 010-12-29T19:38:25.450Z\",\"1.0.0rc2\":\"2010-12-29T19:38:25.450Z\",\"1.0.0rc3\":\"2010-12-29T19:38:25.450Z\",\"1.0.0rc4\":\"2010-12-29T19:38:25.450Z\",\"1.0.0\":\"2010-12-29T19:38:25.450Z\",\"1.0.1\":\"2010-12-29T19:38:25.450Z\",\"1.0.2\":\"2011-01-11T02:09:30.004Z\",\"1.0.3\":\"2011-01-13T22:09:07.840Z\",\"1.0.4\":\"2011-02-05T19:13:15.043Z\",\"1.0.5\":\"2011-02-05T19:16:30.839Z\",\"1.0.6\":\"2011-02-07T21:45:32.271Z\",\"1.0.7\":\"2011-02-07T22:26:51.313Z\",\"1.0.8\":\"2011-03-02T02:58:14.314Z\",\"2.0.0beta\":\"2011-03-04T00:19:22.568Z\",\"2.0.0beta2\":\"2011-03-07T17:40:46.229Z\",\"2.0.0beta3\":\"2011-03-09T23:46:02.495Z\",\"2.0.0rc\":\"2011-03-14T22:01:43.971Z\",\"2.0.0rc2\":\"2011-03-17T18:01:26.604Z\",\"2.0.0rc3\":\"2011-03-17T20:02:05.880Z\",\"2.0.0\":\"2011-03-18T01:06:40.271Z\",\"2.1.0\":\"2011-03-24T20:47:46.219Z\",\"2.1.1\":\"2011-03-29T17:40:33.337Z\",\"2.2.0\":\"2011-03-30T18:40:56.080Z\",\"2.2.1\":\"2011-04-04T19:23:50.483Z\",\"2.2.2\":\"2011-04-12T09:44:57.909Z\",\"2.3.0\":\"2011-04-25T16:50:01.384Z\",\"2.3.1\":\"2011-04-26T22:26:27.392Z\",\"2.3.2\":\"2011-04-27T16:13:33.518Z\",\"2.3.3\":\"2011-05-03T18:31:39.123Z\",\"2.3.4\":\"2011-05-08T17:54:04.615Z\",\"2.3.5\":\"2011-05-20T02:07:37.117Z\",\"2.3.6\":\"2011-05-20T16:42:09.750Z\",\"2.3.7\":\"2011-05-23T22:54:25.787Z\",\"2.3.8\":\"2011-05-25T04:53:16.574Z\",\"2.3.9\":\"2011-05-25T17:18:34.557Z\",\"2.3.10\":\"2011-05-27T16:20:13.495Z\"},\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/visionmedia/express.git\"}}\nsilly get cb [ 200,\nsilly get cb   { vary: 'Accept',\nsilly get cb     server: 'CouchDB/1.0.2 (Erlang OTP/R14B)',\nsilly get cb     etag: '\"CJ1XRWAFJTRN7GU8T6REIMIUW\"',\nsilly get cb     date: 'Sat, 04 Jun 2011 12:14:35 GMT',\nsilly get cb     'content-type': 'application/json',\nsilly get cb     'content-length': '40667' } ]\nverbose mkdir done: /cygdrive/d/HOME/.npm/express 755\nverbose GET express/2.3.10\nverbose raw, before any munging express/2.3.10\nverbose url resolving [ 'http://registry.npmjs.org/', './express/2.3.10' ]\nverbose url resolved http://registry.npmjs.org/express/2.3.10\nverbose url parsed { protocol: 'http:',\nverbose url parsed   slashes: true,\nverbose url parsed   host: 'registry.npmjs.org',\nverbose url parsed   hostname: 'registry.npmjs.org',\nverbose url parsed   href: 'http://registry.npmjs.org/express/2.3.10',\nverbose url parsed   pathname: '/express/2.3.10' }\nverbose response http://registry.npmjs.org/express/2.3.10\nsilly chunk {\"name\":\"express\",\"description\":\"Sinatra inspired web development framework\",\"version\":\"2.3.10\",\"author\":{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},\"contributors\":[{\"name\":\"TJ Holowaychuk\",\"email\":\"tj@vision-media.ca\"},{\"name\":\"Aaron Heckmann\",\"email\":\"aaron.heckmann+github@gmail.com\"},{\"name\":\"Ciaran Jessup\",\"email\":\"ciaranj@gmail.com\"},{\"name\":\"Guillermo Rauch\",\"email\":\"rauchg@gmail.com\"}],\"dependencies\":{\"connect\":\">= 1.4.1 < 2.0.0\",\"mime\":\">= 0.0.1\",\"qs\":\">= 0.0.6\"},\"devDependencies\":{\"connect-form\":\"0.2.1\",\"ejs\":\"0.4.2\",\"expresso\":\"0.7.2\",\"hamljs\":\"0.5.1\",\"jade\":\"0.11.0\",\"stylus\":\"0.13.0\",\"should\":\"0.2.1\",\"express-messages\":\"0.0.2\",\"node-markdown\":\">= 0.0.1\",\"connect-redis\":\">= 0.0.1\"},\"keywords\":[\"framework\",\"sinatra\",\"web\",\"rest\",\"restful\"],\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/visionmedia/express.git\"},\"main\":\"index\",\"bin\":{\"express\":\"./bin/express\"},\"engines\":{\"node\":\">= 0.4.1 < 0.5.0\"},\"_id\":\"express@2.3.10\",\"_engineSupported\":true,\"_npmVersion\":\"1.0.3\",\"_nodeVersion\":\"v0.4.8\",\"_defaultsLoaded\":true,\"dist\":{\"shasum\":\"09b5e939b28af0705d1ac46265c703db1016310c\",\"tarball\":\"http://registry.npmjs.org/express/-/express-2.3.10.tgz\"},\"scripts\":{},\"directories\":{}}\nsilly get cb [ 200,\nsilly get cb   { vary: 'Accept',\nsilly get cb     server: 'CouchDB/1.0.2 (Erlang OTP/R14B)',\nsilly get cb     etag: '\"CJ1XRWAFJTRN7GU8T6REIMIUW\"',\nsilly get cb     date: 'Sat, 04 Jun 2011 12:15:29 GMT',\nsilly get cb     'content-type': 'application/json',\nsilly get cb     'content-length': '1208' } ]\nverbose mkdir done: /cygdrive/d/HOME/.npm/express/2.3.10 755\nverbose bin dist [ '0.4-ares1.7.4-ev4.4-openssl0.9.8r-v83.1.8.16-cygwin-1.7.9(0.237/5/3)',\nverbose bin dist   { shasum: '09b5e939b28af0705d1ac46265c703db1016310c',\nverbose bin dist     tarball: 'http://registry.npmjs.org/express/-/express-2.3.10.tgz' } ]\nverbose addRemoteTarball [ 'http://registry.npmjs.org/express/-/express-2.3.10.tgz',\nverbose addRemoteTarball   '09b5e939b28af0705d1ac46265c703db1016310c' ]\nverbose mkdir done: /tmp/npm-1307189729779/1307189729779-0.46252190810628235 755\ninfo fetch http://registry.npmjs.org/express/-/express-2.3.10.tgz\nverbose fetch to /tmp/npm-1307189729779/1307189729779-0.46252190810628235/tmp.tgz\nsilly updated sha bytes 30172\ninfo shasum 09b5e939b28af0705d1ac46265c703db1016310c\ninfo shasum /tmp/npm-1307189729779/1307189729779-0.46252190810628235/tmp.tgz\nverbose mkdir done: /tmp/npm-1307189729779/1307189729779-0.46252190810628235/contents/___package.npm 755\nverbose unpack_ uid, gid [ undefined, undefined ]\nverbose unpackTarget /tmp/npm-1307189729779/1307189729779-0.46252190810628235/contents/package\nsilly gunzTarPerm modes [ '755', '644' ]\nverbose success gzip \"--decompress\" \"--stdout\" \"/tmp/npm-1307189729779/1307189729779-0.46252190810628235/tmp.tgz\"\nverbose success tar \"-mvxpf\" \"-\" \"--no-same-owner\" \"-C\" \"/tmp/npm-1307189729779/1307189729779-0.46252190810628235/contents/___package.npm\"\nsilly asyncMap in gTP /tmp/npm-1307189729779/1307189729779-0.46252190810628235/contents/___package.npm/package/\nsilly asyncMap in gTP /tmp/npm-1307189729779/1307189729779-0.46252190810628235/contents/___package.npm/package/.npmignore\nsilly asyncMap in gTP /tmp/npm-1307189729779/1307189729779-0.46252190810628235/contents/___package.npm/package/History.md\nsilly asyncMap in gTP /tmp/npm-1307189729779/1307189729779-0.46252190810628235/contents/___package.npm/package/index.js\nsilly asyncMap in gTP /tmp/npm-1307189729779/1307189729779-0.46252190810628235/contents/___package.npm/package/LICENSE\nsilly asyncMap in gTP /tmp/npm-1307189729779/1307189729779-0.46252190810628235/contents/___package.npm/package/Makefile\nsilly asyncMap in gTP /tmp/npm-1307189729779/1307189729779-0.46252190810628235/contents/___package.npm/package/package.json\nsilly asyncMap in gTP /tmp/npm-1307189729779/1307189729779-0.46252190810628235/contents/___package.npm/package/Readme.md\nsilly asyncMap in gTP /tmp/npm-1307189729779/1307189729779-0.46252190810628235/contents/___package.npm/package/bin/\nsilly asyncMap in gTP /tmp/npm-1307189729779/1307189729779-0.46252190810628235/contents/___package.npm/package/bin/express\nsilly asyncMap in gTP /tmp/npm-1307189729779/1307189729779-0.46252190810628235/contents/___package.npm/package/lib/\nsilly asyncMap in gTP /tmp/npm-1307189729779/1307189729779-0.46252190810628235/contents/___package.npm/package/lib/express.js\nsilly asyncMap in gTP /tmp/npm-1307189729779/1307189729779-0.46252190810628235/contents/___package.npm/package/lib/http.js\nsilly asyncMap in gTP /tmp/npm-1307189729779/1307189729779-0.46252190810628235/contents/___package.npm/package/lib/https.js\nsilly asyncMap in gTP /tmp/npm-1307189729779/1307189729779-0.46252190810628235/contents/___package.npm/package/lib/request.js\nsilly asyncMap in gTP /tmp/npm-1307189729779/1307189729779-0.46252190810628235/contents/___package.npm/package/lib/utils.js\nsilly asyncMap in gTP /tmp/npm-1307189729779/1307189729779-0.46252190810628235/contents/___package.npm/package/lib/response.js\nsilly asyncMap in gTP /tmp/npm-1307189729779/1307189729779-0.46252190810628235/contents/___package.npm/package/lib/view.js\nsilly asyncMap in gTP /tmp/npm-1307189729779/1307189729779-0.46252190810628235/contents/___package.npm/package/lib/view/\nsilly asyncMap in gTP /tmp/npm-1307189729779/1307189729779-0.46252190810628235/contents/___package.npm/package/lib/view/partial.js\nsilly asyncMap in gTP /tmp/npm-1307189729779/1307189729779-0.46252190810628235/contents/___package.npm/package/lib/view/view.js\nsilly asyncMap in gTP /tmp/npm-1307189729779/1307189729779-0.46252190810628235/contents/___package.npm/package/lib/router/\nsilly asyncMap in gTP /tmp/npm-1307189729779/1307189729779-0.46252190810628235/contents/___package.npm/package/lib/router/collection.js\nsilly asyncMap in gTP /tmp/npm-1307189729779/1307189729779-0.46252190810628235/contents/___package.npm/package/lib/router/index.js\nsilly asyncMap in gTP /tmp/npm-1307189729779/1307189729779-0.46252190810628235/contents/___package.npm/package/lib/router/methods.js\nsilly asyncMap in gTP /tmp/npm-1307189729779/1307189729779-0.46252190810628235/contents/___package.npm/package/lib/router/route.js\nverbose gunzed /tmp/npm-1307189729779/1307189729779-0.46252190810628235/contents/___package.npm/package\nverbose rm'ed /tmp/npm-1307189729779/1307189729779-0.46252190810628235/contents/package\nverbose renamed [ '/tmp/npm-1307189729779/1307189729779-0.46252190810628235/contents/___package.npm/package',\nverbose renamed   '/tmp/npm-1307189729779/1307189729779-0.46252190810628235/contents/package' ]\nsilly testEngine { name: 'express',\nsilly testEngine   description: 'Sinatra inspired web development framework',\nsilly testEngine   version: '2.3.10',\nsilly testEngine   author: \nsilly testEngine    { name: 'TJ Holowaychuk',\nsilly testEngine      email: 'tj@vision-media.ca' },\nsilly testEngine   contributors: \nsilly testEngine    [ { name: 'TJ Holowaychuk',\nsilly testEngine        email: 'tj@vision-media.ca' },\nsilly testEngine      { name: 'Aaron Heckmann',\nsilly testEngine        email: 'aaron.heckmann+github@gmail.com' },\nsilly testEngine      { name: 'Ciaran Jessup', email: 'ciaranj@gmail.com' },\nsilly testEngine      { name: 'Guillermo Rauch', email: 'rauchg@gmail.com' } ],\nsilly testEngine   dependencies: \nsilly testEngine    { connect: '>= 1.4.1 < 2.0.0',\nsilly testEngine      mime: '>= 0.0.1',\nsilly testEngine      qs: '>= 0.0.6' },\nsilly testEngine   devDependencies: \nsilly testEngine    { 'connect-form': '0.2.1',\nsilly testEngine      ejs: '0.4.2',\nsilly testEngine      expresso: '0.7.2',\nsilly testEngine      hamljs: '0.5.1',\nsilly testEngine      jade: '0.11.0',\nsilly testEngine      stylus: '0.13.0',\nsilly testEngine      should: '0.2.1',\nsilly testEngine      'express-messages': '0.0.2',\nsilly testEngine      'node-markdown': '>= 0.0.1',\nsilly testEngine      'connect-redis': '>= 0.0.1' },\nsilly testEngine   keywords: [ 'framework', 'sinatra', 'web', 'rest', 'restful' ],\nsilly testEngine   repository: \nsilly testEngine    { type: 'git',\nsilly testEngine      url: 'git://github.com/visionmedia/express.git' },\nsilly testEngine   main: 'index',\nsilly testEngine   bin: { express: './bin/express' },\nsilly testEngine   engines: { node: '>= 0.4.1 < 0.5.0' },\nsilly testEngine   _id: 'express@2.3.10',\nsilly testEngine   _engineSupported: true,\nsilly testEngine   _npmVersion: '1.0.9',\nsilly testEngine   _nodeVersion: 'v0.4.8',\nsilly testEngine   _defaultsLoaded: true,\nsilly testEngine   path: '/tmp/npm-1307189729779/1307189729779-0.46252190810628235/contents/package' }\nverbose caching /tmp/npm-1307189729779/1307189729779-0.46252190810628235/contents/package/package.json\nverbose loadDefaults express@2.3.10\nverbose tarball contents [ 'package' ]\nverbose from cache /tmp/npm-1307189729779/1307189729779-0.46252190810628235/contents/package/package.json\nverbose pack /tmp/npm-1307189729779/1307189729779-0.46252190810628235/contents/package /cygdrive/d/HOME/.npm/express/2.3.10/package.tgz\nverbose mkdir'ed /cygdrive/d/HOME/.npm/express/2.3.10\nverbose tar about to write tar and gzip it.\nsilly tar args [ '-cvf',\nsilly tar args   '-',\nsilly tar args   'package/.npmignore',\nsilly tar args   'package/index.js',\nsilly tar args   'package/LICENSE',\nsilly tar args   'package/package.json',\nsilly tar args   'package/Readme.md',\nsilly tar args   'package/History.md',\nsilly tar args   'package/Makefile',\nsilly tar args   'package/bin/express',\nsilly tar args   'package/lib/express.js',\nsilly tar args   'package/lib/response.js',\nsilly tar args   'package/lib/utils.js',\nsilly tar args   'package/lib/request.js',\nsilly tar args   'package/lib/https.js',\nsilly tar args   'package/lib/view.js',\nsilly tar args   'package/lib/http.js',\nsilly tar args   'package/lib/view/view.js',\nsilly tar args   'package/lib/view/partial.js',\nsilly tar args   'package/lib/router/collection.js',\nsilly tar args   'package/lib/router/route.js',\nsilly tar args   'package/lib/router/index.js',\nsilly tar args   'package/lib/router/methods.js' ]\nverbose success gzip \"--stdout\"\nverbose mkdir done: /cygdrive/d/HOME/.npm/express/2.3.10/___package.npm 755\nverbose unpack_ uid, gid [ undefined, undefined ]\nverbose unpackTarget /cygdrive/d/HOME/.npm/express/2.3.10/package\nsilly gunzTarPerm modes [ '755', '644' ]\nverbose success tar -cvf - <file list elided>\nverbose success gzip \"--decompress\" \"--stdout\" \"/cygdrive/d/HOME/.npm/express/2.3.10/package.tgz\"\nverbose success tar \"-mvxpf\" \"-\" \"--no-same-owner\" \"-C\" \"/cygdrive/d/HOME/.npm/express/2.3.10/___package.npm\"\nsilly asyncMap in gTP /cygdrive/d/HOME/.npm/express/2.3.10/___package.npm/package/\nsilly asyncMap in gTP /cygdrive/d/HOME/.npm/express/2.3.10/___package.npm/package/.npmignore\nsilly asyncMap in gTP /cygdrive/d/HOME/.npm/express/2.3.10/___package.npm/package/History.md\nsilly asyncMap in gTP /cygdrive/d/HOME/.npm/express/2.3.10/___package.npm/package/index.js\nsilly asyncMap in gTP /cygdrive/d/HOME/.npm/express/2.3.10/___package.npm/package/LICENSE\nsilly asyncMap in gTP /cygdrive/d/HOME/.npm/express/2.3.10/___package.npm/package/Makefile\nsilly asyncMap in gTP /cygdrive/d/HOME/.npm/express/2.3.10/___package.npm/package/package.json\nsilly asyncMap in gTP /cygdrive/d/HOME/.npm/express/2.3.10/___package.npm/package/Readme.md\nsilly asyncMap in gTP /cygdrive/d/HOME/.npm/express/2.3.10/___package.npm/package/bin/\nsilly asyncMap in gTP /cygdrive/d/HOME/.npm/express/2.3.10/___package.npm/package/bin/express\nsilly asyncMap in gTP /cygdrive/d/HOME/.npm/express/2.3.10/___package.npm/package/lib/\nsilly asyncMap in gTP /cygdrive/d/HOME/.npm/express/2.3.10/___package.npm/package/lib/http.js\nsilly asyncMap in gTP /cygdrive/d/HOME/.npm/express/2.3.10/___package.npm/package/lib/https.js\nsilly asyncMap in gTP /cygdrive/d/HOME/.npm/express/2.3.10/___package.npm/package/lib/express.js\nsilly asyncMap in gTP /cygdrive/d/HOME/.npm/express/2.3.10/___package.npm/package/lib/request.js\nsilly asyncMap in gTP /cygdrive/d/HOME/.npm/express/2.3.10/___package.npm/package/lib/response.js\nsilly asyncMap in gTP /cygdrive/d/HOME/.npm/express/2.3.10/___package.npm/package/lib/utils.js\nsilly asyncMap in gTP /cygdrive/d/HOME/.npm/express/2.3.10/___package.npm/package/lib/view.js\nsilly asyncMap in gTP /cygdrive/d/HOME/.npm/express/2.3.10/___package.npm/package/lib/view/\nsilly asyncMap in gTP /cygdrive/d/HOME/.npm/express/2.3.10/___package.npm/package/lib/view/partial.js\nsilly asyncMap in gTP /cygdrive/d/HOME/.npm/express/2.3.10/___package.npm/package/lib/view/view.js\nsilly asyncMap in gTP /cygdrive/d/HOME/.npm/express/2.3.10/___package.npm/package/lib/router/\nsilly asyncMap in gTP /cygdrive/d/HOME/.npm/express/2.3.10/___package.npm/package/lib/router/collection.js\nsilly asyncMap in gTP /cygdrive/d/HOME/.npm/express/2.3.10/___package.npm/package/lib/router/methods.js\nsilly asyncMap in gTP /cygdrive/d/HOME/.npm/express/2.3.10/___package.npm/package/lib/router/index.js\nsilly asyncMap in gTP /cygdrive/d/HOME/.npm/express/2.3.10/___package.npm/package/lib/router/route.js\nverbose gunzed /cygdrive/d/HOME/.npm/express/2.3.10/___package.npm/package\nverbose rm'ed /cygdrive/d/HOME/.npm/express/2.3.10/package\nverbose renamed [ '/cygdrive/d/HOME/.npm/express/2.3.10/___package.npm/package',\nverbose renamed   '/cygdrive/d/HOME/.npm/express/2.3.10/package' ]\nsilly testEngine { name: 'express',\nsilly testEngine   description: 'Sinatra inspired web development framework',\nsilly testEngine   version: '2.3.10',\nsilly testEngine   author: \nsilly testEngine    { name: 'TJ Holowaychuk',\nsilly testEngine      email: 'tj@vision-media.ca' },\nsilly testEngine   contributors: \nsilly testEngine    [ { name: 'TJ Holowaychuk',\nsilly testEngine        email: 'tj@vision-media.ca' },\nsilly testEngine      { name: 'Aaron Heckmann',\nsilly testEngine        email: 'aaron.heckmann+github@gmail.com' },\nsilly testEngine      { name: 'Ciaran Jessup', email: 'ciaranj@gmail.com' },\nsilly testEngine      { name: 'Guillermo Rauch', email: 'rauchg@gmail.com' } ],\nsilly testEngine   dependencies: \nsilly testEngine    { connect: '>= 1.4.1 < 2.0.0',\nsilly testEngine      mime: '>= 0.0.1',\nsilly testEngine      qs: '>= 0.0.6' },\nsilly testEngine   devDependencies: \nsilly testEngine    { 'connect-form': '0.2.1',\nsilly testEngine      ejs: '0.4.2',\nsilly testEngine      expresso: '0.7.2',\nsilly testEngine      hamljs: '0.5.1',\nsilly testEngine      jade: '0.11.0',\nsilly testEngine      stylus: '0.13.0',\nsilly testEngine      should: '0.2.1',\nsilly testEngine      'express-messages': '0.0.2',\nsilly testEngine      'node-markdown': '>= 0.0.1',\nsilly testEngine      'connect-redis': '>= 0.0.1' },\nsilly testEngine   keywords: [ 'framework', 'sinatra', 'web', 'rest', 'restful' ],\nsilly testEngine   repository: \nsilly testEngine    { type: 'git',\nsilly testEngine      url: 'git://github.com/visionmedia/express.git' },\nsilly testEngine   main: 'index',\nsilly testEngine   bin: { express: './bin/express' },\nsilly testEngine   engines: { node: '>= 0.4.1 < 0.5.0' },\nsilly testEngine   _id: 'express@2.3.10',\nsilly testEngine   _engineSupported: true,\nsilly testEngine   _npmVersion: '1.0.9',\nsilly testEngine   _nodeVersion: 'v0.4.8',\nsilly testEngine   _defaultsLoaded: true,\nsilly testEngine   dist: { shasum: '3a87b9cfe2a8f5a1eb06cbb75e6bbffbdb13c3f9' },\nsilly testEngine   scripts: {} }\nverbose caching /cygdrive/d/HOME/.npm/express/2.3.10/package/package.json\nverbose loadDefaults express@2.3.10\nsilly updated sha bytes 30068\ninfo shasum 3a87b9cfe2a8f5a1eb06cbb75e6bbffbdb13c3f9\ninfo shasum /cygdrive/d/HOME/.npm/express/2.3.10/package.tgz\nverbose from cache /cygdrive/d/HOME/.npm/express/2.3.10/package/package.json\nverbose chmod /cygdrive/d/HOME/.npm/express/2.3.10/package.json 644\nverbose chmod /cygdrive/d/HOME/.npm/express/2.3.10/package.tgz 644\nsilly resolved [ { name: 'express',\nsilly resolved     description: 'Sinatra inspired web development framework',\nsilly resolved     version: '2.3.10',\nsilly resolved     author: \nsilly resolved      { name: 'TJ Holowaychuk',\nsilly resolved        email: 'tj@vision-media.ca' },\nsilly resolved     contributors: \nsilly resolved      [ { name: 'TJ Holowaychuk',\nsilly resolved          email: 'tj@vision-media.ca' },\nsilly resolved        { name: 'Aaron Heckmann',\nsilly resolved          email: 'aaron.heckmann+github@gmail.com' },\nsilly resolved        { name: 'Ciaran Jessup', email: 'ciaranj@gmail.com' },\nsilly resolved        { name: 'Guillermo Rauch', email: 'rauchg@gmail.com' } ],\nsilly resolved     dependencies: \nsilly resolved      { connect: '>= 1.4.1 < 2.0.0',\nsilly resolved        mime: '>= 0.0.1',\nsilly resolved        qs: '>= 0.0.6' },\nsilly resolved     devDependencies: \nsilly resolved      { 'connect-form': '0.2.1',\nsilly resolved        ejs: '0.4.2',\nsilly resolved        expresso: '0.7.2',\nsilly resolved        hamljs: '0.5.1',\nsilly resolved        jade: '0.11.0',\nsilly resolved        stylus: '0.13.0',\nsilly resolved        should: '0.2.1',\nsilly resolved        'express-messages': '0.0.2',\nsilly resolved        'node-markdown': '>= 0.0.1',\nsilly resolved        'connect-redis': '>= 0.0.1' },\nsilly resolved     keywords: [ 'framework', 'sinatra', 'web', 'rest', 'restful' ],\nsilly resolved     repository: \nsilly resolved      { type: 'git',\nsilly resolved        url: 'git://github.com/visionmedia/express.git' },\nsilly resolved     main: 'index',\nsilly resolved     bin: { express: './bin/express' },\nsilly resolved     engines: { node: '>= 0.4.1 < 0.5.0' },\nsilly resolved     _id: 'express@2.3.10',\nsilly resolved     _engineSupported: true,\nsilly resolved     _npmVersion: '1.0.9',\nsilly resolved     _nodeVersion: 'v0.4.8',\nsilly resolved     _defaultsLoaded: true,\nsilly resolved     dist: { shasum: '3a87b9cfe2a8f5a1eb06cbb75e6bbffbdb13c3f9' },\nsilly resolved     scripts: {} } ]\ninfo into /cygdrive/d/workspace/node.js express@2.3.10\ninfo installOne express@2.3.10\ninfo unbuild /cygdrive/d/workspace/node.js/node_modules/express\nsilly testEngine { name: 'express',\nsilly testEngine   description: 'Sinatra inspired web development framework',\nsilly testEngine   version: '2.3.10',\nsilly testEngine   author: \nsilly testEngine    { name: 'TJ Holowaychuk',\nsilly testEngine      email: 'tj@vision-media.ca' },\nsilly testEngine   contributors: \nsilly testEngine    [ { name: 'TJ Holowaychuk',\nsilly testEngine        email: 'tj@vision-media.ca' },\nsilly testEngine      { name: 'Aaron Heckmann',\nsilly testEngine        email: 'aaron.heckmann+github@gmail.com' },\nsilly testEngine      { name: 'Ciaran Jessup', email: 'ciaranj@gmail.com' },\nsilly testEngine      { name: 'Guillermo Rauch', email: 'rauchg@gmail.com' } ],\nsilly testEngine   dependencies: \nsilly testEngine    { connect: '>= 1.4.1 < 2.0.0',\nsilly testEngine      mime: '>= 0.0.1',\nsilly testEngine      qs: '>= 0.0.6' },\nsilly testEngine   devDependencies: \nsilly testEngine    { 'connect-form': '0.2.1',\nsilly testEngine      ejs: '0.4.2',\nsilly testEngine      expresso: '0.7.2',\nsilly testEngine      hamljs: '0.5.1',\nsilly testEngine      jade: '0.11.0',\nsilly testEngine      stylus: '0.13.0',\nsilly testEngine      should: '0.2.1',\nsilly testEngine      'express-messages': '0.0.2',\nsilly testEngine      'node-markdown': '>= 0.0.1',\nsilly testEngine      'connect-redis': '>= 0.0.1' },\nsilly testEngine   keywords: [ 'framework', 'sinatra', 'web', 'rest', 'restful' ],\nsilly testEngine   repository: \nsilly testEngine    { type: 'git',\nsilly testEngine      url: 'git://github.com/visionmedia/express.git' },\nsilly testEngine   main: 'index',\nsilly testEngine   bin: { express: './bin/express' },\nsilly testEngine   engines: { node: '>= 0.4.1 < 0.5.0' },\nsilly testEngine   _id: 'express@2.3.10',\nsilly testEngine   _engineSupported: true,\nsilly testEngine   _npmVersion: '1.0.9',\nsilly testEngine   _nodeVersion: 'v0.4.8',\nsilly testEngine   _defaultsLoaded: true,\nsilly testEngine   dist: { shasum: '3a87b9cfe2a8f5a1eb06cbb75e6bbffbdb13c3f9' } }\nverbose caching /cygdrive/d/HOME/.npm/express/2.3.10/package.json\nverbose mkdir done: /cygdrive/d/workspace/node.js/node_modules/___express.npm 755\nverbose unpack_ uid, gid [ undefined, undefined ]\nverbose unpackTarget /cygdrive/d/workspace/node.js/node_modules/express\nsilly gunzTarPerm modes [ '755', '644' ]\nverbose success gzip \"--decompress\" \"--stdout\" \"/cygdrive/d/HOME/.npm/express/2.3.10/package.tgz\"\nverbose success tar \"-mvxpf\" \"-\" \"--no-same-owner\" \"-C\" \"/cygdrive/d/workspace/node.js/node_modules/___express.npm\"\nsilly asyncMap in gTP /cygdrive/d/workspace/node.js/node_modules/___express.npm/package/\nsilly asyncMap in gTP /cygdrive/d/workspace/node.js/node_modules/___express.npm/package/.npmignore\nsilly asyncMap in gTP /cygdrive/d/workspace/node.js/node_modules/___express.npm/package/History.md\nsilly asyncMap in gTP /cygdrive/d/workspace/node.js/node_modules/___express.npm/package/index.js\nsilly asyncMap in gTP /cygdrive/d/workspace/node.js/node_modules/___express.npm/package/LICENSE\nsilly asyncMap in gTP /cygdrive/d/workspace/node.js/node_modules/___express.npm/package/Makefile\nsilly asyncMap in gTP /cygdrive/d/workspace/node.js/node_modules/___express.npm/package/package.json\nsilly asyncMap in gTP /cygdrive/d/workspace/node.js/node_modules/___express.npm/packag\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/694/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/694/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/693",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/693/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/693/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/693/events",
    "html_url": "https://github.com/expressjs/express/issues/693",
    "id": 1000280,
    "node_id": "MDU6SXNzdWUxMDAwMjgw",
    "number": 693,
    "title": "res.sendfile() is named inconsistently",
    "user": {
      "login": "aviflax",
      "id": 141844,
      "node_id": "MDQ6VXNlcjE0MTg0NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/141844?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aviflax",
      "html_url": "https://github.com/aviflax",
      "followers_url": "https://api.github.com/users/aviflax/followers",
      "following_url": "https://api.github.com/users/aviflax/following{/other_user}",
      "gists_url": "https://api.github.com/users/aviflax/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aviflax/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aviflax/subscriptions",
      "organizations_url": "https://api.github.com/users/aviflax/orgs",
      "repos_url": "https://api.github.com/users/aviflax/repos",
      "events_url": "https://api.github.com/users/aviflax/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aviflax/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2011-06-03T19:20:00Z",
    "updated_at": "2012-06-17T02:37:24Z",
    "closed_at": "2012-06-17T02:37:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Every other method of `res` which has a compound name uses lowerCamelCase: `contentType` and `clearCookie`.\n\n`sendfile` isn't consistent, it should be `sendFile`.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/693/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/693/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/692",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/692/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/692/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/692/events",
    "html_url": "https://github.com/expressjs/express/issues/692",
    "id": 1000262,
    "node_id": "MDU6SXNzdWUxMDAwMjYy",
    "number": 692,
    "title": "sendfile() causes a POST request/handler to return 404",
    "user": {
      "login": "aviflax",
      "id": 141844,
      "node_id": "MDQ6VXNlcjE0MTg0NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/141844?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aviflax",
      "html_url": "https://github.com/aviflax",
      "followers_url": "https://api.github.com/users/aviflax/followers",
      "following_url": "https://api.github.com/users/aviflax/following{/other_user}",
      "gists_url": "https://api.github.com/users/aviflax/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aviflax/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aviflax/subscriptions",
      "organizations_url": "https://api.github.com/users/aviflax/orgs",
      "repos_url": "https://api.github.com/users/aviflax/repos",
      "events_url": "https://api.github.com/users/aviflax/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aviflax/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2011-06-03T19:17:14Z",
    "updated_at": "2012-06-17T02:37:24Z",
    "closed_at": "2012-06-17T02:37:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This works:\n\n``` javascript\napp.get('foo', function (req, res) {\n  res.sendfile('/path/to/file');\n});\n```\n\nThis causes a 404 response:\n\n``` javascript\napp.post('foo', function (req, res) {\n  res.sendfile('/path/to/file');\n});\n```\n\nand the problem seems to be internal in Express, because even when I add a callback to sendfile to handle errors, `err` is null/undefined.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/692/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/692/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/691",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/691/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/691/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/691/events",
    "html_url": "https://github.com/expressjs/express/issues/691",
    "id": 995024,
    "node_id": "MDU6SXNzdWU5OTUwMjQ=",
    "number": 691,
    "title": "res.clearCookie() doesn't work",
    "user": {
      "login": "weekendlogic",
      "id": 632241,
      "node_id": "MDQ6VXNlcjYzMjI0MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/632241?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/weekendlogic",
      "html_url": "https://github.com/weekendlogic",
      "followers_url": "https://api.github.com/users/weekendlogic/followers",
      "following_url": "https://api.github.com/users/weekendlogic/following{/other_user}",
      "gists_url": "https://api.github.com/users/weekendlogic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/weekendlogic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/weekendlogic/subscriptions",
      "organizations_url": "https://api.github.com/users/weekendlogic/orgs",
      "repos_url": "https://api.github.com/users/weekendlogic/repos",
      "events_url": "https://api.github.com/users/weekendlogic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/weekendlogic/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2011-06-03T04:31:49Z",
    "updated_at": "2022-07-14T20:08:46Z",
    "closed_at": "2011-06-03T04:33:16Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "res.clearCookie('<cookie name>'); \n\ndoes nothing for me.\n\nI have worked around it by using:\nres.cookie('<cookie name>', '', {expires: new Date(1), path: '/' }); \ninstead, as per: http://groups.google.com/group/express-js/browse_thread/thread/3e680630d3b38603\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/691/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/691/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/690",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/690/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/690/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/690/events",
    "html_url": "https://github.com/expressjs/express/issues/690",
    "id": 975061,
    "node_id": "MDU6SXNzdWU5NzUwNjE=",
    "number": 690,
    "title": "Remove app.error",
    "user": {
      "login": "tj",
      "id": 25254,
      "node_id": "MDQ6VXNlcjI1MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tj",
      "html_url": "https://github.com/tj",
      "followers_url": "https://api.github.com/users/tj/followers",
      "following_url": "https://api.github.com/users/tj/following{/other_user}",
      "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
      "organizations_url": "https://api.github.com/users/tj/orgs",
      "repos_url": "https://api.github.com/users/tj/repos",
      "events_url": "https://api.github.com/users/tj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/5",
      "html_url": "https://github.com/expressjs/express/milestone/5",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/5/labels",
      "id": 4736,
      "node_id": "MDk6TWlsZXN0b25lNDczNg==",
      "number": 5,
      "title": "3.0",
      "description": "rawr",
      "creator": {
        "login": "tj",
        "id": 25254,
        "node_id": "MDQ6VXNlcjI1MjU0",
        "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tj",
        "html_url": "https://github.com/tj",
        "followers_url": "https://api.github.com/users/tj/followers",
        "following_url": "https://api.github.com/users/tj/following{/other_user}",
        "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
        "organizations_url": "https://api.github.com/users/tj/orgs",
        "repos_url": "https://api.github.com/users/tj/repos",
        "events_url": "https://api.github.com/users/tj/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tj/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 38,
      "state": "closed",
      "created_at": "2011-04-20T22:29:45Z",
      "updated_at": "2013-12-04T11:26:26Z",
      "due_on": null,
      "closed_at": "2013-12-04T11:26:26Z"
    },
    "comments": 12,
    "created_at": "2011-05-30T17:07:10Z",
    "updated_at": "2012-07-22T17:19:23Z",
    "closed_at": "2011-11-10T20:30:46Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "it's really just a wrapper for app.use(function(err,req,res,next){}); but difficult to position and in general just seems to confuse people so might be worth getting rid of this in 3.x\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/690/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/690/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/689",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/689/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/689/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/689/events",
    "html_url": "https://github.com/expressjs/express/issues/689",
    "id": 972612,
    "node_id": "MDU6SXNzdWU5NzI2MTI=",
    "number": 689,
    "title": "TypeError: Cannot read property 'merge' of undefined ",
    "user": {
      "login": "falconair",
      "id": 365542,
      "node_id": "MDQ6VXNlcjM2NTU0Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/365542?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/falconair",
      "html_url": "https://github.com/falconair",
      "followers_url": "https://api.github.com/users/falconair/followers",
      "following_url": "https://api.github.com/users/falconair/following{/other_user}",
      "gists_url": "https://api.github.com/users/falconair/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/falconair/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/falconair/subscriptions",
      "organizations_url": "https://api.github.com/users/falconair/orgs",
      "repos_url": "https://api.github.com/users/falconair/repos",
      "events_url": "https://api.github.com/users/falconair/events{/privacy}",
      "received_events_url": "https://api.github.com/users/falconair/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2011-05-30T04:07:01Z",
    "updated_at": "2011-05-30T17:17:21Z",
    "closed_at": "2011-05-30T17:17:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "TypeError: Cannot read property 'merge' of undefined\n    at Object.<anonymous> (/usr/local/lib/node/.npm/express/2.3.10/package/lib/view.js:20:18)\n    at Module._compile (module.js:423:26)\n    at Object..js (module.js:429:10)\n    at Module.load (module.js:339:31)\n    at Function._load (module.js:298:12)\n    at require (module.js:367:19)\n    at Object.<anonymous> (/usr/local/lib/node/.npm/express/2.3.10/package/lib/http.js:16:12)\n    at Module._compile (module.js:423:26)\n    at Object..js (module.js:429:10)\n    at Module.load (module.js:339:31)\n\n---\n\nnode -v\n## v0.5.0-pre\n\nI am using express with socket.io. In fact, the following is all the express code I have:\n\n...\nvar express = require('express');\nvar socketio = require('socket.io');\n...\n//start app server\nvar app = express.createServer();\napp.use(express.staticProvider(__dirname + '/'));\napp.listen(3000);\n...\nvar socket = socketio.listen(app);\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/689/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/689/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/688",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/688/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/688/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/688/events",
    "html_url": "https://github.com/expressjs/express/issues/688",
    "id": 962701,
    "node_id": "MDU6SXNzdWU5NjI3MDE=",
    "number": 688,
    "title": "route middleware",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2011-05-27T05:33:30Z",
    "updated_at": "2011-05-27T16:09:34Z",
    "closed_at": "2011-05-27T14:17:31Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "function andRestrictToSelf(req, res, next) {\n    if(33 == req.params.id){\n        return next();\n    }else{\n        next(new Error('Unauthorized'));\n    } \n}\n\napp.get('/user/:id', andRestrictToSelf, function(req,res){\n    var x = 56 \\* 1000;\n    var y = 3;\n    var z = [];\n    for(var i=0;i<10;i++){\n        y = gU.rand(1,2147483647);\n        z.push({\"x\":x,\"y\":y});\n    }\n    zS = JSON.stringify(z);\n    res.send(zS);\n});\n\nI get this:500 Error: ENOENT, No such file or directory\n...../public/user/33'\nWhy does this insert the public from staticProvider?\nWhen I remove this line\n     app.use(express.staticProvider(__dirname + '/public'));\n\nI get\nCannot GET /user/33\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/688/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/688/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/687",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/687/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/687/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/687/events",
    "html_url": "https://github.com/expressjs/express/issues/687",
    "id": 961653,
    "node_id": "MDU6SXNzdWU5NjE2NTM=",
    "number": 687,
    "title": "secure server",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2011-05-26T22:41:47Z",
    "updated_at": "2011-05-27T14:22:01Z",
    "closed_at": "2011-05-27T14:22:01Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Trouble with secure server\n\nmy app is nothing more than:\n\nvar express = require(\"express\");\nvar fs = require('fs');\nvar options = {\n  key: fs.readFileSync('./keys/my-key.pem'),\n  cert: fs.readFileSync('./keys/my-cert.pem')\n};\nvar app = module.exports = express.createServer(options);\nvar app = express.createServer(options);\n\napp.listen(8000);\nand I get \nnode.js:134\n        throw e; // process.nextTick error, or 'error' event on first tick\n        ^\nError: Each layer must have a route and a handle function\n    at Server.<anonymous> (/Users/me/.node_libraries/connect/index.js:131:15)\n\nI am running nvm and on v0.4.6, and npm express:\nmp:exposocial web2guru$ npm install express\nnpm info it worked if it ends with ok\nnpm info using npm@0.3.18\nnpm info using node@v0.4.6\nnpm info preinstall express@2.3.9\nnpm info install express@2.3.9\nnpm info postinstall express@2.3.9\nnpm info predeactivate express@2.3.9\nnpm info deactivate express@2.3.9\nnpm info postdeactivate express@2.3.9\nnpm info preactivate express@2.3.9\nnpm info activate express@2.3.9\nnpm info postactivate express@2.3.9\nnpm info build Success: express@2.3.9\nnpm ok\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/687/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/687/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/686",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/686/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/686/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/686/events",
    "html_url": "https://github.com/expressjs/express/issues/686",
    "id": 961530,
    "node_id": "MDU6SXNzdWU5NjE1MzA=",
    "number": 686,
    "title": "npm 0.4.8",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2011-05-26T22:10:19Z",
    "updated_at": "2011-05-26T22:39:32Z",
    "closed_at": "2011-05-26T22:39:32Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Now using node v0.4.8\n/usr/local/bin/npm\nmp:exposocial web2guru$ npm install express\nnpm info it worked if it ends with ok\nnpm info using npm@0.2.4-1\nnpm info install express@2.3.9\nnpm info preinstall express@2.3.9\nnpm ERR! failed to link bins\nnpm ERR! install failed Error: EACCES, Permission denied '/usr/local/bin/express@2.3.9'\nnpm ERR! install failed     at node.js:604:9\nnpm info install failed rollback\nnpm info not installed express,2.3.9\nnpm info install failed rolled back\nnpm ERR! Error: EACCES, Permission denied '/usr/local/bin/express@2.3.9'\nnpm ERR!     at node.js:604:9\nnpm ERR! There appear to be some permission problems\nnpm ERR! See the section on 'Permission Errors' at\nnpm ERR!   http://github.com/isaacs/npm#readme\nnpm ERR! This will get better in the future, I promise.\nnpm not ok\n\nSame for 0.4.7 btw. \nI was hoping an upgrade would sort out the https issues I am still having after reinstalling express and connect on 04.6\n\"Error: Each layer must have a route and a handle function\"\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/686/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/686/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/685",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/685/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/685/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/685/events",
    "html_url": "https://github.com/expressjs/express/issues/685",
    "id": 961386,
    "node_id": "MDU6SXNzdWU5NjEzODY=",
    "number": 685,
    "title": "setting env",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2011-05-26T21:32:40Z",
    "updated_at": "2011-05-26T22:08:06Z",
    "closed_at": "2011-05-26T22:08:06Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When I use\nNODE_ENV=production node app.js\nand then inspect the app.settings \n\nif (!module.parent) {\n  app.listen(8000);\n  console.log(\"Express started in \" +sys.inpect(app.settings) + \" mode\");\n}\n\nis always shows development not production as the env\nExpress started in { home: '/',\n  env: 'development',.....\n\nIs there something I am missing here, do I need to use bash.profile or something?\nI have different configs for dev and prod\nsuch as app.configure('development', function(){ ......\n\nand it would be great to switch which env the app runs in from the Command Line.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/685/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/685/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/684",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/684/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/684/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/684/events",
    "html_url": "https://github.com/expressjs/express/issues/684",
    "id": 958360,
    "node_id": "MDU6SXNzdWU5NTgzNjA=",
    "number": 684,
    "title": "csrf value not being generated using coffeekup as template engine",
    "user": {
      "login": "alduro",
      "id": 183364,
      "node_id": "MDQ6VXNlcjE4MzM2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/183364?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alduro",
      "html_url": "https://github.com/alduro",
      "followers_url": "https://api.github.com/users/alduro/followers",
      "following_url": "https://api.github.com/users/alduro/following{/other_user}",
      "gists_url": "https://api.github.com/users/alduro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alduro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alduro/subscriptions",
      "organizations_url": "https://api.github.com/users/alduro/orgs",
      "repos_url": "https://api.github.com/users/alduro/repos",
      "events_url": "https://api.github.com/users/alduro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alduro/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2011-05-26T13:08:48Z",
    "updated_at": "2011-05-26T17:17:14Z",
    "closed_at": "2011-05-26T16:52:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "following basic sample generating csrf as dynamicHelper the value is not being passed as local to template.\nsample code using jade that it is working:\napp.dynamicHelpers({\n   csrf: csrf.token\n});\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/684/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/684/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/683",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/683/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/683/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/683/events",
    "html_url": "https://github.com/expressjs/express/pull/683",
    "id": 957873,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTYwNTg2",
    "number": 683,
    "title": "Express / jqtpl partial rendering issue",
    "user": {
      "login": "codders",
      "id": 17782,
      "node_id": "MDQ6VXNlcjE3Nzgy",
      "avatar_url": "https://avatars.githubusercontent.com/u/17782?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codders",
      "html_url": "https://github.com/codders",
      "followers_url": "https://api.github.com/users/codders/followers",
      "following_url": "https://api.github.com/users/codders/following{/other_user}",
      "gists_url": "https://api.github.com/users/codders/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codders/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codders/subscriptions",
      "organizations_url": "https://api.github.com/users/codders/orgs",
      "repos_url": "https://api.github.com/users/codders/repos",
      "events_url": "https://api.github.com/users/codders/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codders/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2011-05-26T10:41:55Z",
    "updated_at": "2014-07-03T08:02:05Z",
    "closed_at": "2011-05-26T16:46:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/683",
      "html_url": "https://github.com/expressjs/express/pull/683",
      "diff_url": "https://github.com/expressjs/express/pull/683.diff",
      "patch_url": "https://github.com/expressjs/express/pull/683.patch",
      "merged_at": null
    },
    "body": "Hi,\n\nNode sure if this is the right place to discuss this, and pretty sure this isn't the right patch, but there's an issue with Express and jqtpl (possibly also other rendering engines).\n\nWhen rendering partials, options.filename (which is passed to the rendering engine) is set to the filename for the containing template rather than that of the partial. I don't know enough about the API to know if this is the desired behaviour, but it's confusing jqtpl's filename-based caching.\n\nThis is the patch I'm using in my project - solves the problem for me. I'd be open to better / cleaner answers, including bouncing the issue to jqtpl.\n\nThanks,\n\nArthur\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/683/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/683/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/682",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/682/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/682/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/682/events",
    "html_url": "https://github.com/expressjs/express/issues/682",
    "id": 956300,
    "node_id": "MDU6SXNzdWU5NTYzMDA=",
    "number": 682,
    "title": "app.param and optional params",
    "user": {
      "login": "cjoudrey",
      "id": 385270,
      "node_id": "MDQ6VXNlcjM4NTI3MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/385270?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cjoudrey",
      "html_url": "https://github.com/cjoudrey",
      "followers_url": "https://api.github.com/users/cjoudrey/followers",
      "following_url": "https://api.github.com/users/cjoudrey/following{/other_user}",
      "gists_url": "https://api.github.com/users/cjoudrey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cjoudrey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cjoudrey/subscriptions",
      "organizations_url": "https://api.github.com/users/cjoudrey/orgs",
      "repos_url": "https://api.github.com/users/cjoudrey/repos",
      "events_url": "https://api.github.com/users/cjoudrey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cjoudrey/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2011-05-26T01:59:39Z",
    "updated_at": "2011-05-26T16:56:51Z",
    "closed_at": "2011-05-26T16:56:51Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This might be an edge case, but take the following situation:\n\n``` javascript\napp.param('year', function(req, res, next, val) {\n  if (!val.match(/^[0-9]+$/)) return next('route');\n  next();\n});\n\napp.get('/:year?', function() { ... });\n\napp.get('/another/route/:year', function() { ... });\n```\n\nThe idea is that in some cases the parameter is optional and in others it isn't. When specified, `:year` should be validated.\n\nHowever, in both cases the `app.param` is being executed.\n\nI have fixed this by simply checking if `val` is `undefined`, but I felt I'd raise the question.\n\nShould `app.param` really be called on optional params that are unspecified?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/682/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/682/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/680",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/680/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/680/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/680/events",
    "html_url": "https://github.com/expressjs/express/issues/680",
    "id": 953886,
    "node_id": "MDU6SXNzdWU5NTM4ODY=",
    "number": 680,
    "title": "partial() issue with ../",
    "user": {
      "login": "tj",
      "id": 25254,
      "node_id": "MDQ6VXNlcjI1MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tj",
      "html_url": "https://github.com/tj",
      "followers_url": "https://api.github.com/users/tj/followers",
      "following_url": "https://api.github.com/users/tj/following{/other_user}",
      "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
      "organizations_url": "https://api.github.com/users/tj/orgs",
      "repos_url": "https://api.github.com/users/tj/repos",
      "events_url": "https://api.github.com/users/tj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2011-05-25T16:40:19Z",
    "updated_at": "2011-05-25T17:15:14Z",
    "closed_at": "2011-05-25T17:15:14Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "currently things the engine is set and fails. this is normally not something you would run into but we have symlinks for some things right now so this messes up\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/680/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/680/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/679",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/679/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/679/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/679/events",
    "html_url": "https://github.com/expressjs/express/issues/679",
    "id": 953441,
    "node_id": "MDU6SXNzdWU5NTM0NDE=",
    "number": 679,
    "title": "Views caching in development mode",
    "user": {
      "login": "anatoliychakkaev",
      "id": 34927,
      "node_id": "MDQ6VXNlcjM0OTI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/34927?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anatoliychakkaev",
      "html_url": "https://github.com/anatoliychakkaev",
      "followers_url": "https://api.github.com/users/anatoliychakkaev/followers",
      "following_url": "https://api.github.com/users/anatoliychakkaev/following{/other_user}",
      "gists_url": "https://api.github.com/users/anatoliychakkaev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anatoliychakkaev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anatoliychakkaev/subscriptions",
      "organizations_url": "https://api.github.com/users/anatoliychakkaev/orgs",
      "repos_url": "https://api.github.com/users/anatoliychakkaev/repos",
      "events_url": "https://api.github.com/users/anatoliychakkaev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anatoliychakkaev/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2011-05-25T15:23:18Z",
    "updated_at": "2011-05-26T18:55:06Z",
    "closed_at": "2011-05-26T18:55:06Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have tried to switch off view caching:\n\n```\napp.disable('view cache');\n```\n\nBut it's not working now.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/679/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/679/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/678",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/678/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/678/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/678/events",
    "html_url": "https://github.com/expressjs/express/issues/678",
    "id": 952270,
    "node_id": "MDU6SXNzdWU5NTIyNzA=",
    "number": 678,
    "title": "decodeURIComponent throws exception with some URLs",
    "user": {
      "login": "jhurliman",
      "id": 195374,
      "node_id": "MDQ6VXNlcjE5NTM3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/195374?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jhurliman",
      "html_url": "https://github.com/jhurliman",
      "followers_url": "https://api.github.com/users/jhurliman/followers",
      "following_url": "https://api.github.com/users/jhurliman/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhurliman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jhurliman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhurliman/subscriptions",
      "organizations_url": "https://api.github.com/users/jhurliman/orgs",
      "repos_url": "https://api.github.com/users/jhurliman/repos",
      "events_url": "https://api.github.com/users/jhurliman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jhurliman/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 12,
    "created_at": "2011-05-25T10:37:57Z",
    "updated_at": "2012-07-20T09:27:38Z",
    "closed_at": "2011-05-25T23:10:52Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have a handler like this:\n\napp.get('/rename/:id/:name', rename);\n\nfunction rename(req, res, next)\n{\n  var id = req.params.id;\n  var name = req.params.name;\n}\n\nAnd if I request the URL \"/rename/1/%A0\" I get this stack trace:\n\nURIError: URI malformed\n    at decodeURIComponent (native)\n    at match (/usr/lib/node/.npm/express/2.3.3/package/lib/router/index.js:316:17)\n    at pass (/usr/lib/node/.npm/express/2.3.3/package/lib/router/index.js:98:19)\n    at Object.router [as handle](/usr/lib/node/.npm/express/2.3.3/package/lib/router/index.js:161:6)\n\nA similar issue came up with querystring (https://github.com/joyent/node/issues/60) and seems to have been resolved with their unescape method.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/678/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/678/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/677",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/677/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/677/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/677/events",
    "html_url": "https://github.com/expressjs/express/issues/677",
    "id": 950535,
    "node_id": "MDU6SXNzdWU5NTA1MzU=",
    "number": 677,
    "title": "Safari (and mobile Safari) displaying HTTP headers on rendered page",
    "user": {
      "login": "geoffreak",
      "id": 338037,
      "node_id": "MDQ6VXNlcjMzODAzNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/338037?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/geoffreak",
      "html_url": "https://github.com/geoffreak",
      "followers_url": "https://api.github.com/users/geoffreak/followers",
      "following_url": "https://api.github.com/users/geoffreak/following{/other_user}",
      "gists_url": "https://api.github.com/users/geoffreak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/geoffreak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/geoffreak/subscriptions",
      "organizations_url": "https://api.github.com/users/geoffreak/orgs",
      "repos_url": "https://api.github.com/users/geoffreak/repos",
      "events_url": "https://api.github.com/users/geoffreak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/geoffreak/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2011-05-25T00:56:54Z",
    "updated_at": "2012-10-08T20:18:36Z",
    "closed_at": "2011-05-25T01:53:04Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This issue has me baffled as I have never seen anything like it and everything I can find online is from people who reported the same problem unable to find a solution. Safari is displaying the HTTP headers on the page! How on earth did anyone at Apple think that would ever be the proper way to handle headers? Desktop Safari will render the remainder of the page, but mobile (iOS) Safari just displays the headers and HTML code then sits like it's waiting for the server until it times out around 30 seconds later. The source code from the \"rendered\" page starts as follows:\n\n```\nHTTP/1.1 Ongoing unknown\nX-Powered-By: Express\nContent-Type: text/html; charset=utf-8\nContent-Length: 1794\nConnection: keep-alive\n\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Trans\n```\n\nNow there are zero issues in any other browser, so I don't know why Safari has an issue. The issue is only on one of the paths too! The path source code is below:\n\n``` javascript\napp.get('/read/:uri', function(req, res){\n    Manga.findOne({uri: req.params.uri}, function(err, manga){\n        if (err) {\n            console.log(err);\n            res.redirect('/');\n            return;\n        }\n        if (!manga) {\n            res.redirect('/');\n            return;\n        }\n        res.render('view', {locals: {\n            showAdd: false,\n            backTo: 'Manga List',\n            backToUrl: '/',\n            cover: manga.cover ? '/images/manga/'+manga.uri+'/cover.jpg' : '',\n            title: manga.title,\n            genres: manga.genres.toString().replace(/,/g,', '),\n            status: manga.status,\n            uri: manga.uri,\n            chapters: manga.chapterCount,\n            lastUpdate: lf.getTimeDiff(manga.lastUpdate),\n            class: manga.hasUnread ? 'new' : '',\n            processing: lf.isProcessing(manga.uri),\n            description: manga.description\n        }});\n    });\n});\n```\n\nI'm using the default setup (made from using the `express` command line tool) so it's rendering with jade and connecting to mongo with Mongoose. I've checked both the development and production environments to confirm it's not an environment issue.\n\nI really hope I just missed something obvious... \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/677/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/677/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/676",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/676/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/676/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/676/events",
    "html_url": "https://github.com/expressjs/express/issues/676",
    "id": 944699,
    "node_id": "MDU6SXNzdWU5NDQ2OTk=",
    "number": 676,
    "title": "Problem in express. Has no method 'static'",
    "user": {
      "login": "JonathasJivago",
      "id": 759147,
      "node_id": "MDQ6VXNlcjc1OTE0Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/759147?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JonathasJivago",
      "html_url": "https://github.com/JonathasJivago",
      "followers_url": "https://api.github.com/users/JonathasJivago/followers",
      "following_url": "https://api.github.com/users/JonathasJivago/following{/other_user}",
      "gists_url": "https://api.github.com/users/JonathasJivago/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JonathasJivago/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JonathasJivago/subscriptions",
      "organizations_url": "https://api.github.com/users/JonathasJivago/orgs",
      "repos_url": "https://api.github.com/users/JonathasJivago/repos",
      "events_url": "https://api.github.com/users/JonathasJivago/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JonathasJivago/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 11,
    "created_at": "2011-05-24T01:26:27Z",
    "updated_at": "2011-11-08T17:12:22Z",
    "closed_at": "2011-11-08T17:12:22Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When I run this command:\n\n$node server.js 80\n\nAppears the following error:\n\nnode.js:63\n    throw e;\n    ^\nTypeError: Object #<an Object> has no method 'static'\n    at Server.<anonymous> (/home/jonathas/Documentos/scrumblr/server.js:22:18)\n    at Server.configure (/usr/local/lib/node/.npm/express/1.0.8/package/lib/express/server.js:323:8)\n    at Object.<anonymous> (/home/jonathas/Documentos/scrumblr/server.js:21:5)\n    at Module._compile (node.js:462:23)\n    at Module._loadScriptSync (node.js:469:10)\n    at Module.loadSync (node.js:338:12)\n    at Object.runMain (node.js:522:24)\n    at Array.<anonymous> (node.js:756:12)\n    at EventEmitter._tickCallback (node.js:55:22)\n    at node.js:773:9\n\nWhat can I do to solve this problem?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/676/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/676/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/675",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/675/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/675/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/675/events",
    "html_url": "https://github.com/expressjs/express/issues/675",
    "id": 942419,
    "node_id": "MDU6SXNzdWU5NDI0MTk=",
    "number": 675,
    "title": "Add app.param() regexp support",
    "user": {
      "login": "tj",
      "id": 25254,
      "node_id": "MDQ6VXNlcjI1MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tj",
      "html_url": "https://github.com/tj",
      "followers_url": "https://api.github.com/users/tj/followers",
      "following_url": "https://api.github.com/users/tj/following{/other_user}",
      "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
      "organizations_url": "https://api.github.com/users/tj/orgs",
      "repos_url": "https://api.github.com/users/tj/repos",
      "events_url": "https://api.github.com/users/tj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2011-05-23T17:00:52Z",
    "updated_at": "2011-05-23T23:33:04Z",
    "closed_at": "2011-05-23T23:33:04Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "```\napp.param('username', /(\\w[\\w\\d]*)/)\n```\n\nconverts to /^(\\w[\\w\\d]*)$/, exec()s and returns the first capture\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/675/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/675/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/674",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/674/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/674/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/674/events",
    "html_url": "https://github.com/expressjs/express/issues/674",
    "id": 942371,
    "node_id": "MDU6SXNzdWU5NDIzNzE=",
    "number": 674,
    "title": "Add support for named param mapping",
    "user": {
      "login": "tj",
      "id": 25254,
      "node_id": "MDQ6VXNlcjI1MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tj",
      "html_url": "https://github.com/tj",
      "followers_url": "https://api.github.com/users/tj/followers",
      "following_url": "https://api.github.com/users/tj/following{/other_user}",
      "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
      "organizations_url": "https://api.github.com/users/tj/orgs",
      "repos_url": "https://api.github.com/users/tj/repos",
      "events_url": "https://api.github.com/users/tj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2011-05-23T16:48:59Z",
    "updated_at": "2012-12-12T23:45:53Z",
    "closed_at": "2011-05-26T17:32:52Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "``` javascript\napp.param('point', ...);\n\napp.get('/pos/:a(point)..:b(point)', ....)\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/674/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/674/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/673",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/673/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/673/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/673/events",
    "html_url": "https://github.com/expressjs/express/issues/673",
    "id": 942021,
    "node_id": "MDU6SXNzdWU5NDIwMjE=",
    "number": 673,
    "title": "Don't abort after failed param loader",
    "user": {
      "login": "kkaefer",
      "id": 52399,
      "node_id": "MDQ6VXNlcjUyMzk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/52399?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kkaefer",
      "html_url": "https://github.com/kkaefer",
      "followers_url": "https://api.github.com/users/kkaefer/followers",
      "following_url": "https://api.github.com/users/kkaefer/following{/other_user}",
      "gists_url": "https://api.github.com/users/kkaefer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kkaefer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kkaefer/subscriptions",
      "organizations_url": "https://api.github.com/users/kkaefer/orgs",
      "repos_url": "https://api.github.com/users/kkaefer/repos",
      "events_url": "https://api.github.com/users/kkaefer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kkaefer/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2011-05-23T15:39:23Z",
    "updated_at": "2011-11-10T22:25:51Z",
    "closed_at": "2011-11-10T22:25:51Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When using `app.param` as preconditions, express currently fails after the first parameter placeholder at a position:\n\n``` javascript\n\nvar express = require('express');\nvar app = express.createServer();\n\napp.param('username', function(req, res, next, id) {\n    if (/^[a-z]\\w+/i.test(id)) next();\n    else next('invalid username');\n});\n\napp.param('userid', function(req, res, next, id) {\n    if (/^[0-9]+/i.test(id)) next();\n    else next('invalid userid');\n});\n\napp.get('/user/:username', function(req, res) { res.send('by username'); });\napp.get('/user/:userid', function(req, res) { res.send('by userid'); });\n\napp.listen(3000);\n```\n\nWhen requesting `/user/foo`, we get `by username` as the result, however, requesting `/user/234` results in an error as express aborts execution after the first failed parameter. Would be cool if express supported multiple parameters at the same position.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/673/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/673/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/672",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/672/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/672/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/672/events",
    "html_url": "https://github.com/expressjs/express/pull/672",
    "id": 937384,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTU1MzAz",
    "number": 672,
    "title": "Add support for multiple view roots",
    "user": {
      "login": "naholyr",
      "id": 214067,
      "node_id": "MDQ6VXNlcjIxNDA2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/214067?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naholyr",
      "html_url": "https://github.com/naholyr",
      "followers_url": "https://api.github.com/users/naholyr/followers",
      "following_url": "https://api.github.com/users/naholyr/following{/other_user}",
      "gists_url": "https://api.github.com/users/naholyr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naholyr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naholyr/subscriptions",
      "organizations_url": "https://api.github.com/users/naholyr/orgs",
      "repos_url": "https://api.github.com/users/naholyr/repos",
      "events_url": "https://api.github.com/users/naholyr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naholyr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2011-05-22T09:00:37Z",
    "updated_at": "2014-08-26T14:09:36Z",
    "closed_at": "2011-11-08T17:12:30Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/672",
      "html_url": "https://github.com/expressjs/express/pull/672",
      "diff_url": "https://github.com/expressjs/express/pull/672.diff",
      "patch_url": "https://github.com/expressjs/express/pull/672.patch",
      "merged_at": null
    },
    "body": "Added support for multiple view roots: define \"views\" options as an array, and all paths will be checked until the first one found.\n\nThis would allow to \"package\" modules embedding their own views, override views, etc...\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/672/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/672/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/671",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/671/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/671/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/671/events",
    "html_url": "https://github.com/expressjs/express/pull/671",
    "id": 937142,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTU1MjUx",
    "number": 671,
    "title": ":uri -> :url ",
    "user": {
      "login": "jpalardy",
      "id": 18142,
      "node_id": "MDQ6VXNlcjE4MTQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/18142?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jpalardy",
      "html_url": "https://github.com/jpalardy",
      "followers_url": "https://api.github.com/users/jpalardy/followers",
      "following_url": "https://api.github.com/users/jpalardy/following{/other_user}",
      "gists_url": "https://api.github.com/users/jpalardy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jpalardy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jpalardy/subscriptions",
      "organizations_url": "https://api.github.com/users/jpalardy/orgs",
      "repos_url": "https://api.github.com/users/jpalardy/repos",
      "events_url": "https://api.github.com/users/jpalardy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jpalardy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2011-05-22T06:18:09Z",
    "updated_at": "2011-05-22T17:18:02Z",
    "closed_at": "2011-05-22T17:18:02Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/671",
      "html_url": "https://github.com/expressjs/express/pull/671",
      "diff_url": "https://github.com/expressjs/express/pull/671.diff",
      "patch_url": "https://github.com/expressjs/express/pull/671.patch",
      "merged_at": "2011-05-22T17:18:02Z"
    },
    "body": "Example won't work otherwise. I checked the code :-)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/671/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/671/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/670",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/670/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/670/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/670/events",
    "html_url": "https://github.com/expressjs/express/issues/670",
    "id": 936414,
    "node_id": "MDU6SXNzdWU5MzY0MTQ=",
    "number": 670,
    "title": "`if (!module.parent)` should be `if (module === require.main)`",
    "user": {
      "login": "indexzero",
      "id": 4624,
      "node_id": "MDQ6VXNlcjQ2MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4624?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/indexzero",
      "html_url": "https://github.com/indexzero",
      "followers_url": "https://api.github.com/users/indexzero/followers",
      "following_url": "https://api.github.com/users/indexzero/following{/other_user}",
      "gists_url": "https://api.github.com/users/indexzero/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/indexzero/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/indexzero/subscriptions",
      "organizations_url": "https://api.github.com/users/indexzero/orgs",
      "repos_url": "https://api.github.com/users/indexzero/repos",
      "events_url": "https://api.github.com/users/indexzero/events{/privacy}",
      "received_events_url": "https://api.github.com/users/indexzero/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2011-05-21T20:57:53Z",
    "updated_at": "2011-05-21T21:40:17Z",
    "closed_at": "2011-05-21T21:17:40Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "FYI.\n\n```\nIsaac Schlueter 4:52\nwell, the \"correct\" way to check that would be if (module === require.main)\n```\n\nWe've got a related issue in haibu with a workaround coming, but since this is in the default `app.js` script for express, it seems worthwhile to change if it's not \"correct\" (for what it's worth).\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/670/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/670/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/669",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/669/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/669/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/669/events",
    "html_url": "https://github.com/expressjs/express/issues/669",
    "id": 934274,
    "node_id": "MDU6SXNzdWU5MzQyNzQ=",
    "number": 669,
    "title": "Variables in routes including a \".\" doesn't work",
    "user": {
      "login": "trnc-ck",
      "id": 435783,
      "node_id": "MDQ6VXNlcjQzNTc4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/435783?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/trnc-ck",
      "html_url": "https://github.com/trnc-ck",
      "followers_url": "https://api.github.com/users/trnc-ck/followers",
      "following_url": "https://api.github.com/users/trnc-ck/following{/other_user}",
      "gists_url": "https://api.github.com/users/trnc-ck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/trnc-ck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/trnc-ck/subscriptions",
      "organizations_url": "https://api.github.com/users/trnc-ck/orgs",
      "repos_url": "https://api.github.com/users/trnc-ck/repos",
      "events_url": "https://api.github.com/users/trnc-ck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/trnc-ck/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2011-05-20T22:49:43Z",
    "updated_at": "2016-02-26T03:45:19Z",
    "closed_at": "2011-05-20T23:15:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "hi.\n\ni have following route: \n\n```\napp.post('/pin/save/:latitude/:longitude', function(req, res) { \n    ... \n} \n```\n\nthe latitude/langitude values have the following format: \ne.g. 43**.**273844 \n\nthe problem is, when passing the params, I get an error 500, when I \nremove the dots it works perfectly... \nany advice how I can achieve, that the route can use values containing \ndots? \nthanks in advance!\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/669/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/669/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/668",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/668/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/668/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/668/events",
    "html_url": "https://github.com/expressjs/express/pull/668",
    "id": 932203,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTUzOTc2",
    "number": 668,
    "title": "Simple Update to Markdown example",
    "user": {
      "login": "joemccann",
      "id": 48234,
      "node_id": "MDQ6VXNlcjQ4MjM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/48234?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joemccann",
      "html_url": "https://github.com/joemccann",
      "followers_url": "https://api.github.com/users/joemccann/followers",
      "following_url": "https://api.github.com/users/joemccann/following{/other_user}",
      "gists_url": "https://api.github.com/users/joemccann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joemccann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joemccann/subscriptions",
      "organizations_url": "https://api.github.com/users/joemccann/orgs",
      "repos_url": "https://api.github.com/users/joemccann/repos",
      "events_url": "https://api.github.com/users/joemccann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joemccann/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2011-05-20T14:24:09Z",
    "updated_at": "2011-05-20T15:07:22Z",
    "closed_at": "2011-05-20T15:07:22Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/668",
      "html_url": "https://github.com/expressjs/express/pull/668",
      "diff_url": "https://github.com/expressjs/express/pull/668.diff",
      "patch_url": "https://github.com/expressjs/express/pull/668.patch",
      "merged_at": "2011-05-20T15:07:22Z"
    },
    "body": "Updated markdown example to latest version of node-markdown and modified the compile method.\n\nJust run \n\nnode app.js\n\nand you'll see it.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/668/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/668/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/667",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/667/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/667/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/667/events",
    "html_url": "https://github.com/expressjs/express/issues/667",
    "id": 930042,
    "node_id": "MDU6SXNzdWU5MzAwNDI=",
    "number": 667,
    "title": "emit events for tracing",
    "user": {
      "login": "tj",
      "id": 25254,
      "node_id": "MDQ6VXNlcjI1MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tj",
      "html_url": "https://github.com/tj",
      "followers_url": "https://api.github.com/users/tj/followers",
      "following_url": "https://api.github.com/users/tj/following{/other_user}",
      "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
      "organizations_url": "https://api.github.com/users/tj/orgs",
      "repos_url": "https://api.github.com/users/tj/repos",
      "events_url": "https://api.github.com/users/tj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 11,
    "created_at": "2011-05-20T01:49:27Z",
    "updated_at": "2013-12-04T21:38:59Z",
    "closed_at": "2013-12-04T06:09:06Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/667/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/667/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/666",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/666/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/666/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/666/events",
    "html_url": "https://github.com/expressjs/express/pull/666",
    "id": 903912,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ4MDEw",
    "number": 666,
    "title": "Fixes broken link to res.partial(view[, options])",
    "user": {
      "login": "ashokgelal",
      "id": 401055,
      "node_id": "MDQ6VXNlcjQwMTA1NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/401055?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ashokgelal",
      "html_url": "https://github.com/ashokgelal",
      "followers_url": "https://api.github.com/users/ashokgelal/followers",
      "following_url": "https://api.github.com/users/ashokgelal/following{/other_user}",
      "gists_url": "https://api.github.com/users/ashokgelal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ashokgelal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ashokgelal/subscriptions",
      "organizations_url": "https://api.github.com/users/ashokgelal/orgs",
      "repos_url": "https://api.github.com/users/ashokgelal/repos",
      "events_url": "https://api.github.com/users/ashokgelal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ashokgelal/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2011-05-16T00:48:29Z",
    "updated_at": "2011-05-16T01:03:35Z",
    "closed_at": "2011-05-16T01:03:35Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/666",
      "html_url": "https://github.com/expressjs/express/pull/666",
      "diff_url": "https://github.com/expressjs/express/pull/666.diff",
      "patch_url": "https://github.com/expressjs/express/pull/666.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/666/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/666/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/665",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/665/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/665/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/665/events",
    "html_url": "https://github.com/expressjs/express/issues/665",
    "id": 902916,
    "node_id": "MDU6SXNzdWU5MDI5MTY=",
    "number": 665,
    "title": ":var(capture) matching strips /",
    "user": {
      "login": "sh1mmer",
      "id": 37673,
      "node_id": "MDQ6VXNlcjM3Njcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/37673?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sh1mmer",
      "html_url": "https://github.com/sh1mmer",
      "followers_url": "https://api.github.com/users/sh1mmer/followers",
      "following_url": "https://api.github.com/users/sh1mmer/following{/other_user}",
      "gists_url": "https://api.github.com/users/sh1mmer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sh1mmer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sh1mmer/subscriptions",
      "organizations_url": "https://api.github.com/users/sh1mmer/orgs",
      "repos_url": "https://api.github.com/users/sh1mmer/repos",
      "events_url": "https://api.github.com/users/sh1mmer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sh1mmer/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2011-05-15T17:28:26Z",
    "updated_at": "2011-05-16T01:00:59Z",
    "closed_at": "2011-05-15T21:17:58Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The docs show it's possible to add a capture variable in routes. However after poking around it seems like the regexes get mangled. I'm pretty sure it's this line in route.js\n\nhttps://github.com/visionmedia/express/blob/master/lib/router/route.js#L57\n\nThe ordering of matching / vs the captures causes all the routes to get mangled because the / gets matched. \n\nFor example from the docs:\n\n'/user/:id(\\d+)'\n\ngets turned into\n\n/^\\/user\\/(?:(d))\\/?$/i\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/665/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/665/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/664",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/664/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/664/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/664/events",
    "html_url": "https://github.com/expressjs/express/issues/664",
    "id": 897382,
    "node_id": "MDU6SXNzdWU4OTczODI=",
    "number": 664,
    "title": "JSONP Callbacks",
    "user": {
      "login": "shackpank",
      "id": 655660,
      "node_id": "MDQ6VXNlcjY1NTY2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/655660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shackpank",
      "html_url": "https://github.com/shackpank",
      "followers_url": "https://api.github.com/users/shackpank/followers",
      "following_url": "https://api.github.com/users/shackpank/following{/other_user}",
      "gists_url": "https://api.github.com/users/shackpank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shackpank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shackpank/subscriptions",
      "organizations_url": "https://api.github.com/users/shackpank/orgs",
      "repos_url": "https://api.github.com/users/shackpank/repos",
      "events_url": "https://api.github.com/users/shackpank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shackpank/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2011-05-13T20:43:32Z",
    "updated_at": "2011-10-24T21:35:49Z",
    "closed_at": "2011-05-13T21:07:20Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Looking at the source of response.js, you can call app.set( \"json callback\", true ) to wrap the response in a function. Is this supported (It's absolutely a useful feature)? If so, is it documented anywhere? Isn't on http://expressjs.com/guide.html\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/664/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/664/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/663",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/663/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/663/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/663/events",
    "html_url": "https://github.com/expressjs/express/issues/663",
    "id": 896803,
    "node_id": "MDU6SXNzdWU4OTY4MDM=",
    "number": 663,
    "title": "Issue with Layouts",
    "user": {
      "login": "wavded",
      "id": 26638,
      "node_id": "MDQ6VXNlcjI2NjM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/26638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wavded",
      "html_url": "https://github.com/wavded",
      "followers_url": "https://api.github.com/users/wavded/followers",
      "following_url": "https://api.github.com/users/wavded/following{/other_user}",
      "gists_url": "https://api.github.com/users/wavded/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wavded/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wavded/subscriptions",
      "organizations_url": "https://api.github.com/users/wavded/orgs",
      "repos_url": "https://api.github.com/users/wavded/repos",
      "events_url": "https://api.github.com/users/wavded/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wavded/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2011-05-13T19:30:29Z",
    "updated_at": "2011-11-10T22:26:06Z",
    "closed_at": "2011-11-10T22:26:06Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When rendering the the view `foo` it renders the `layout.jade` in the `reports` directory, which is expected:\n\n```\nviews\n    reports\n        foo.jade\n        layout.jade\n    layout.jade\n```\n\nHowever when rendering out the view `bar` in it will render `layout.jade` in the `views` directory.  I guess in my mind I would expect it to grab the one in `reports` first:\n\n```\nviews\n    reports\n        master\n            bar.jade\n        layout.jade\n    layout.jade\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/663/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/663/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/662",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/662/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/662/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/662/events",
    "html_url": "https://github.com/expressjs/express/issues/662",
    "id": 895577,
    "node_id": "MDU6SXNzdWU4OTU1Nzc=",
    "number": 662,
    "title": "Question: Install?",
    "user": {
      "login": "mnek84",
      "id": 482779,
      "node_id": "MDQ6VXNlcjQ4Mjc3OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/482779?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mnek84",
      "html_url": "https://github.com/mnek84",
      "followers_url": "https://api.github.com/users/mnek84/followers",
      "following_url": "https://api.github.com/users/mnek84/following{/other_user}",
      "gists_url": "https://api.github.com/users/mnek84/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mnek84/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mnek84/subscriptions",
      "organizations_url": "https://api.github.com/users/mnek84/orgs",
      "repos_url": "https://api.github.com/users/mnek84/repos",
      "events_url": "https://api.github.com/users/mnek84/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mnek84/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2011-05-13T15:35:57Z",
    "updated_at": "2011-05-23T16:58:35Z",
    "closed_at": "2011-05-23T16:58:35Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "i have a problem with the npm installation so, i wonder if i can install the express without the npm \n\nthanks in advance!\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/662/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/662/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/661",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/661/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/661/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/661/events",
    "html_url": "https://github.com/expressjs/express/issues/661",
    "id": 882308,
    "node_id": "MDU6SXNzdWU4ODIzMDg=",
    "number": 661,
    "title": "Switch app.router and static() in created app.js file",
    "user": {
      "login": "chendrix",
      "id": 474000,
      "node_id": "MDQ6VXNlcjQ3NDAwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/474000?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chendrix",
      "html_url": "https://github.com/chendrix",
      "followers_url": "https://api.github.com/users/chendrix/followers",
      "following_url": "https://api.github.com/users/chendrix/following{/other_user}",
      "gists_url": "https://api.github.com/users/chendrix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chendrix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chendrix/subscriptions",
      "organizations_url": "https://api.github.com/users/chendrix/orgs",
      "repos_url": "https://api.github.com/users/chendrix/repos",
      "events_url": "https://api.github.com/users/chendrix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chendrix/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2011-05-11T10:19:30Z",
    "updated_at": "2013-07-31T09:47:45Z",
    "closed_at": "2011-05-11T20:15:53Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "So when you initially do `$ express appname` and it creates a blank app for you, in the app.js file, it initially places \n\n```\napp.use(app.router);\napp.use(express.static(__dirname + '/public'));\n```\n\nin `app.configure()`. This messes with any error handling done by \n\n```\napp.get('/*', function(req, res) {\n   // error throwing etc here\n}\n```\n\nbecause it throws an error for any static files before checking them against express.static.\n\nSimply switching their order to\n\n```\napp.use(express.static(__dirname + '/public')); \napp.use(app.router);\n```\n\nresolves the issue.\n\nCould this be changed, and noted as an issue in the documentation?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/661/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/661/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/660",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/660/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/660/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/660/events",
    "html_url": "https://github.com/expressjs/express/issues/660",
    "id": 878302,
    "node_id": "MDU6SXNzdWU4NzgzMDI=",
    "number": 660,
    "title": "Error!  And that's it :)",
    "user": {
      "login": "wavded",
      "id": 26638,
      "node_id": "MDQ6VXNlcjI2NjM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/26638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wavded",
      "html_url": "https://github.com/wavded",
      "followers_url": "https://api.github.com/users/wavded/followers",
      "following_url": "https://api.github.com/users/wavded/following{/other_user}",
      "gists_url": "https://api.github.com/users/wavded/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wavded/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wavded/subscriptions",
      "organizations_url": "https://api.github.com/users/wavded/orgs",
      "repos_url": "https://api.github.com/users/wavded/repos",
      "events_url": "https://api.github.com/users/wavded/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wavded/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2011-05-10T20:26:36Z",
    "updated_at": "2012-06-17T02:37:24Z",
    "closed_at": "2012-06-17T02:37:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Using this url:\n\n```\nhttp://localhost:3000/form/exhibits/remove//data/exhibits/138000/138970a.jpg\n```\n\nAnd this route:\n\n``` javascript\napp.get('/form/exhibits/remove/:link', function(req,res){\n    console.log(req);\n});\n```\n\nGets me a page that just says Error!  with no details.  and `undefined` logged out to the console.  NE ideas?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/660/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/660/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/659",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/659/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/659/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/659/events",
    "html_url": "https://github.com/expressjs/express/pull/659",
    "id": 862512,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTM5MjIz",
    "number": 659,
    "title": "Just a tiny typo",
    "user": {
      "login": "basdirks",
      "id": 578048,
      "node_id": "MDQ6VXNlcjU3ODA0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/578048?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/basdirks",
      "html_url": "https://github.com/basdirks",
      "followers_url": "https://api.github.com/users/basdirks/followers",
      "following_url": "https://api.github.com/users/basdirks/following{/other_user}",
      "gists_url": "https://api.github.com/users/basdirks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/basdirks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/basdirks/subscriptions",
      "organizations_url": "https://api.github.com/users/basdirks/orgs",
      "repos_url": "https://api.github.com/users/basdirks/repos",
      "events_url": "https://api.github.com/users/basdirks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/basdirks/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2011-05-07T14:20:35Z",
    "updated_at": "2011-11-08T17:12:58Z",
    "closed_at": "2011-11-08T17:12:58Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/659",
      "html_url": "https://github.com/expressjs/express/pull/659",
      "diff_url": "https://github.com/expressjs/express/pull/659.diff",
      "patch_url": "https://github.com/expressjs/express/pull/659.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/659/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/659/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/658",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/658/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/658/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/658/events",
    "html_url": "https://github.com/expressjs/express/issues/658",
    "id": 860939,
    "node_id": "MDU6SXNzdWU4NjA5Mzk=",
    "number": 658,
    "title": "cookieParser not working on app.on event",
    "user": {
      "login": "dese",
      "id": 731432,
      "node_id": "MDQ6VXNlcjczMTQzMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/731432?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dese",
      "html_url": "https://github.com/dese",
      "followers_url": "https://api.github.com/users/dese/followers",
      "following_url": "https://api.github.com/users/dese/following{/other_user}",
      "gists_url": "https://api.github.com/users/dese/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dese/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dese/subscriptions",
      "organizations_url": "https://api.github.com/users/dese/orgs",
      "repos_url": "https://api.github.com/users/dese/repos",
      "events_url": "https://api.github.com/users/dese/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dese/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2011-05-06T21:35:45Z",
    "updated_at": "2011-05-08T19:50:12Z",
    "closed_at": "2011-05-08T19:50:12Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi.\nI am using the 'on' events, eg:\n\napp.on('connection', function(req, res){\n        console.log(req.cookies);\n});\n\nbut i get undefined. While \napp.get('/', function(req, res) {\n        console.log(req.cookies);\n})\n\nworks fine. Any ideas?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/658/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/658/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/657",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/657/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/657/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/657/events",
    "html_url": "https://github.com/expressjs/express/issues/657",
    "id": 860851,
    "node_id": "MDU6SXNzdWU4NjA4NTE=",
    "number": 657,
    "title": "errorHandler.js defense against err and stack values",
    "user": {
      "login": "jameswberry",
      "id": 303206,
      "node_id": "MDQ6VXNlcjMwMzIwNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/303206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jameswberry",
      "html_url": "https://github.com/jameswberry",
      "followers_url": "https://api.github.com/users/jameswberry/followers",
      "following_url": "https://api.github.com/users/jameswberry/following{/other_user}",
      "gists_url": "https://api.github.com/users/jameswberry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jameswberry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jameswberry/subscriptions",
      "organizations_url": "https://api.github.com/users/jameswberry/orgs",
      "repos_url": "https://api.github.com/users/jameswberry/repos",
      "events_url": "https://api.github.com/users/jameswberry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jameswberry/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2011-05-06T21:08:50Z",
    "updated_at": "2012-06-17T02:37:24Z",
    "closed_at": "2012-06-17T02:37:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "On a clean install of connect, I get the following error message\n\n```\n/node_modules/express/node_modules/connect/lib/middleware/errorHandler.js:67\n              .split('\\n').slice(1)\n               ^\nTypeError: Cannot call method 'split' of undefined\n```\n\nIt turns out that the error passed to the error handler is of the form\n\n```\n{ message: \"\" }\n```\n\nerrorHandler.js expects err to contain an additional property 'stack' which is not present, and the cause of this error.\n\nI have not debugged what is causing the lack of the err.stack property when the error is thrown, but it would be nice if errorHandler were defensive against this edge case.  Something like...\n\n```\n...\nfs.readFile(__dirname + '/../public/error.html', 'utf8', function(e, html){\nif(err.stack) {\n    var stack = err.stack\n        .split('\\n').slice(1)\n        .map(function(v){ return '<li>' + v + '</li>'; }).join('');\n } else {\n    var stack = \"\";\n}\nif (err.message) {\n    err = err.message;\n}\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/657/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/657/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/656",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/656/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/656/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/656/events",
    "html_url": "https://github.com/expressjs/express/issues/656",
    "id": 858765,
    "node_id": "MDU6SXNzdWU4NTg3NjU=",
    "number": 656,
    "title": "Flash system doesn't detect lack of session",
    "user": {
      "login": "bingomanatee",
      "id": 684016,
      "node_id": "MDQ6VXNlcjY4NDAxNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/684016?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bingomanatee",
      "html_url": "https://github.com/bingomanatee",
      "followers_url": "https://api.github.com/users/bingomanatee/followers",
      "following_url": "https://api.github.com/users/bingomanatee/following{/other_user}",
      "gists_url": "https://api.github.com/users/bingomanatee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bingomanatee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bingomanatee/subscriptions",
      "organizations_url": "https://api.github.com/users/bingomanatee/orgs",
      "repos_url": "https://api.github.com/users/bingomanatee/repos",
      "events_url": "https://api.github.com/users/bingomanatee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bingomanatee/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2011-05-06T14:51:17Z",
    "updated_at": "2011-05-08T17:08:55Z",
    "closed_at": "2011-05-08T17:08:55Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "request.js #193 assumes that a session property exists; when I started using messages, there were times when it did not, and I got, \n\nTypeError: Cannot set property 'flash' of undefined\n    at IncomingMessage.flash (/Users/bingomanatee/Documents/node/MVC/node_modules/express/lib/request.js:214:24)\n    at Object.messages (/Users/bingomanatee/Documents/node/MVC/node_modules/express-messages/index.js:11:24)\n    at Object.anonymous (eval at <anonymous> (/Users/bingomanatee/Documents/node/MVC/node_modules/ejs/lib/ejs.js:140:12))\n    at Object.<anonymous> (/Users/bingomanatee/Documents/node/MVC/node_modules/ejs/lib/ejs.js:142:15)\n    at ServerResponse.render (/Users/bingomanatee/Documents/node/MVC/node_modules/express/lib/view.js:323:24)\n    at ServerResponse.render (/Users/bingomanatee/Documents/node/MVC/node_modules/express/lib/view.js:330:12)\n    at Object.<anonymous> (/Users/bingomanatee/Documents/node/MVC/node_modules/mvc/load.js:12:13)\n    at Object.handle (/Users/bingomanatee/Documents/node/MVC/node_modules/express/lib/http.js:119:10)\n    at IncomingMessage.next (/Users/bingomanatee/Documents/node/MVC/node_modules/express/node_modules/connect/lib/http.js:199:17)\n    at ServerResponse.render (/Users/bingomanatee/Documents/node/MVC/node_modules/express/lib/view.js:352:16)\nGET /favicon.ico 500\n\nsuggestion: \n\n  if (this.hasOwnProperty('session')){\n  var msgs = this.session.flash = this.session.flash || {};\n  } else {\n    var msgs = {};\n  }\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/656/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/656/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/655",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/655/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/655/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/655/events",
    "html_url": "https://github.com/expressjs/express/issues/655",
    "id": 853240,
    "node_id": "MDU6SXNzdWU4NTMyNDA=",
    "number": 655,
    "title": "Renaming static()",
    "user": {
      "login": "yvsong",
      "id": 753149,
      "node_id": "MDQ6VXNlcjc1MzE0OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/753149?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yvsong",
      "html_url": "https://github.com/yvsong",
      "followers_url": "https://api.github.com/users/yvsong/followers",
      "following_url": "https://api.github.com/users/yvsong/following{/other_user}",
      "gists_url": "https://api.github.com/users/yvsong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yvsong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yvsong/subscriptions",
      "organizations_url": "https://api.github.com/users/yvsong/orgs",
      "repos_url": "https://api.github.com/users/yvsong/repos",
      "events_url": "https://api.github.com/users/yvsong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yvsong/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2011-05-05T13:10:37Z",
    "updated_at": "2011-05-05T15:38:11Z",
    "closed_at": "2011-05-05T15:38:11Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "_static_ is a reserved keyword in JavaScript and better not used as a function name. Static resources are fetched by clients with the get request. Similar to the _get_ function for dynamic responses, _getStatic_ may be a good name for serving static resources.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/655/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/655/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/654",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/654/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/654/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/654/events",
    "html_url": "https://github.com/expressjs/express/issues/654",
    "id": 852129,
    "node_id": "MDU6SXNzdWU4NTIxMjk=",
    "number": 654,
    "title": "Use both of string and module for `set('view engine', ...)`",
    "user": {
      "login": "shaunlee",
      "id": 655635,
      "node_id": "MDQ6VXNlcjY1NTYzNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/655635?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shaunlee",
      "html_url": "https://github.com/shaunlee",
      "followers_url": "https://api.github.com/users/shaunlee/followers",
      "following_url": "https://api.github.com/users/shaunlee/following{/other_user}",
      "gists_url": "https://api.github.com/users/shaunlee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shaunlee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shaunlee/subscriptions",
      "organizations_url": "https://api.github.com/users/shaunlee/orgs",
      "repos_url": "https://api.github.com/users/shaunlee/repos",
      "events_url": "https://api.github.com/users/shaunlee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shaunlee/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 12,
    "created_at": "2011-05-05T06:06:31Z",
    "updated_at": "2011-05-08T17:27:07Z",
    "closed_at": "2011-05-08T17:27:07Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I like to suggest use both of string and module for `set('view enigne', ...)`, for example:\n\n```\napp.set('view engine', 'engine');\n```\n\nor \n\n```\nvar engine = require('engine');\n// ...\napp.set('view engine', engine);\n```\n\nIn the second situation, people can set or config the engine with some special options before use it.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/654/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/654/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/653",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/653/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/653/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/653/events",
    "html_url": "https://github.com/expressjs/express/pull/653",
    "id": 848136,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTM1NTE5",
    "number": 653,
    "title": "Fixed a typo: \"A route is simple a string\" => \"A route is simply a string",
    "user": {
      "login": "darrentorpey",
      "id": 50610,
      "node_id": "MDQ6VXNlcjUwNjEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/50610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darrentorpey",
      "html_url": "https://github.com/darrentorpey",
      "followers_url": "https://api.github.com/users/darrentorpey/followers",
      "following_url": "https://api.github.com/users/darrentorpey/following{/other_user}",
      "gists_url": "https://api.github.com/users/darrentorpey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darrentorpey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darrentorpey/subscriptions",
      "organizations_url": "https://api.github.com/users/darrentorpey/orgs",
      "repos_url": "https://api.github.com/users/darrentorpey/repos",
      "events_url": "https://api.github.com/users/darrentorpey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darrentorpey/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2011-05-04T11:15:00Z",
    "updated_at": "2014-06-17T02:18:38Z",
    "closed_at": "2011-05-04T16:35:50Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/653",
      "html_url": "https://github.com/expressjs/express/pull/653",
      "diff_url": "https://github.com/expressjs/express/pull/653.diff",
      "patch_url": "https://github.com/expressjs/express/pull/653.patch",
      "merged_at": "2011-05-04T16:35:50Z"
    },
    "body": "Fixed a typo: \"A route is simple a string\" => \"A route is simply a string\"\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/653/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/653/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/652",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/652/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/652/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/652/events",
    "html_url": "https://github.com/expressjs/express/issues/652",
    "id": 845976,
    "node_id": "MDU6SXNzdWU4NDU5NzY=",
    "number": 652,
    "title": ".get() obscures .use()",
    "user": {
      "login": "kkaefer",
      "id": 52399,
      "node_id": "MDQ6VXNlcjUyMzk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/52399?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kkaefer",
      "html_url": "https://github.com/kkaefer",
      "followers_url": "https://api.github.com/users/kkaefer/followers",
      "following_url": "https://api.github.com/users/kkaefer/following{/other_user}",
      "gists_url": "https://api.github.com/users/kkaefer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kkaefer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kkaefer/subscriptions",
      "organizations_url": "https://api.github.com/users/kkaefer/orgs",
      "repos_url": "https://api.github.com/users/kkaefer/repos",
      "events_url": "https://api.github.com/users/kkaefer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kkaefer/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2011-05-03T22:16:09Z",
    "updated_at": "2011-11-10T22:26:51Z",
    "closed_at": "2011-11-10T22:26:51Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When adding a `.get()` route, express adds a handler to `stack` that checks all routes. When adding a middleware with `.use()` after a `.get()` route has been added, that middleware may potentially never be called.\n\nMaybe I don't understand `.use()` properly; I assumed that it adds middleware that is supposed to run before any concrete routes added with `.get()/.post()/...`. Is that in fact the case or am I misusing express?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/652/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/652/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/651",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/651/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/651/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/651/events",
    "html_url": "https://github.com/expressjs/express/issues/651",
    "id": 843264,
    "node_id": "MDU6SXNzdWU4NDMyNjQ=",
    "number": 651,
    "title": "Updated lib/router/methods.js",
    "user": {
      "login": "slaskis",
      "id": 5991,
      "node_id": "MDQ6VXNlcjU5OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5991?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/slaskis",
      "html_url": "https://github.com/slaskis",
      "followers_url": "https://api.github.com/users/slaskis/followers",
      "following_url": "https://api.github.com/users/slaskis/following{/other_user}",
      "gists_url": "https://api.github.com/users/slaskis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/slaskis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/slaskis/subscriptions",
      "organizations_url": "https://api.github.com/users/slaskis/orgs",
      "repos_url": "https://api.github.com/users/slaskis/repos",
      "events_url": "https://api.github.com/users/slaskis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/slaskis/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2011-05-03T13:00:24Z",
    "updated_at": "2011-05-04T07:50:40Z",
    "closed_at": "2011-05-03T16:25:02Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Hey, I was missing the PATCH http method myself in express so here's an updated methods.js, documented with the related RFCs (stolen from rails), that would be sweet if you could add.\n\nhttps://gist.github.com/953280\n\nCheers!\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/651/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/651/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/650",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/650/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/650/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/650/events",
    "html_url": "https://github.com/expressjs/express/issues/650",
    "id": 834113,
    "node_id": "MDU6SXNzdWU4MzQxMTM=",
    "number": 650,
    "title": "document next('route')",
    "user": {
      "login": "tj",
      "id": 25254,
      "node_id": "MDQ6VXNlcjI1MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tj",
      "html_url": "https://github.com/tj",
      "followers_url": "https://api.github.com/users/tj/followers",
      "following_url": "https://api.github.com/users/tj/following{/other_user}",
      "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
      "organizations_url": "https://api.github.com/users/tj/orgs",
      "repos_url": "https://api.github.com/users/tj/repos",
      "events_url": "https://api.github.com/users/tj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2011-04-30T20:07:45Z",
    "updated_at": "2011-05-01T18:07:00Z",
    "closed_at": "2011-05-01T18:07:00Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/650/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/650/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/649",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/649/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/649/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/649/events",
    "html_url": "https://github.com/expressjs/express/issues/649",
    "id": 833017,
    "node_id": "MDU6SXNzdWU4MzMwMTc=",
    "number": 649,
    "title": "Rails 3.1 like \"flushing\"",
    "user": {
      "login": "slaskis",
      "id": 5991,
      "node_id": "MDQ6VXNlcjU5OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5991?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/slaskis",
      "html_url": "https://github.com/slaskis",
      "followers_url": "https://api.github.com/users/slaskis/followers",
      "following_url": "https://api.github.com/users/slaskis/following{/other_user}",
      "gists_url": "https://api.github.com/users/slaskis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/slaskis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/slaskis/subscriptions",
      "organizations_url": "https://api.github.com/users/slaskis/orgs",
      "repos_url": "https://api.github.com/users/slaskis/repos",
      "events_url": "https://api.github.com/users/slaskis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/slaskis/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2011-04-30T08:59:18Z",
    "updated_at": "2011-05-03T20:49:48Z",
    "closed_at": "2011-05-01T08:56:16Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Would it be possible to apply something like the [rails 3.1 'flushing' strategy](http://yehudakatz.com/2010/09/07/automatic-flushing-the-rails-3-1-plan/) in express? \n\nCould be really useful if we, in the views, would use lazy data retrieval (like with mongoose?)...\n\nJust curious what you guys think!\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/649/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/649/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/648",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/648/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/648/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/648/events",
    "html_url": "https://github.com/expressjs/express/pull/648",
    "id": 826901,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTMwODYz",
    "number": 648,
    "title": "Coffeescript generator",
    "user": {
      "login": "petrjanda",
      "id": 419414,
      "node_id": "MDQ6VXNlcjQxOTQxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/419414?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petrjanda",
      "html_url": "https://github.com/petrjanda",
      "followers_url": "https://api.github.com/users/petrjanda/followers",
      "following_url": "https://api.github.com/users/petrjanda/following{/other_user}",
      "gists_url": "https://api.github.com/users/petrjanda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petrjanda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petrjanda/subscriptions",
      "organizations_url": "https://api.github.com/users/petrjanda/orgs",
      "repos_url": "https://api.github.com/users/petrjanda/repos",
      "events_url": "https://api.github.com/users/petrjanda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petrjanda/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2011-04-28T22:56:52Z",
    "updated_at": "2011-04-29T03:02:17Z",
    "closed_at": "2011-04-29T03:02:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/648",
      "html_url": "https://github.com/expressjs/express/pull/648",
      "diff_url": "https://github.com/expressjs/express/pull/648.diff",
      "patch_url": "https://github.com/expressjs/express/pull/648.patch",
      "merged_at": null
    },
    "body": "Hello!\n\nI've created coffeescript application skeleton generator for express. Because its quite popular I thought may be other developers may utilize coffeescript support to generate new project. \n\nI did move the templates out of bin/express because it didn't look quite well if I wanted to switch js/coffeescript templates there on place. Let me know what do you think about that idea.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/648/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/648/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/647",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/647/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/647/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/647/events",
    "html_url": "https://github.com/expressjs/express/pull/647",
    "id": 825318,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTMwNDUw",
    "number": 647,
    "title": "View: set options.filename for correct EJS error reporting",
    "user": {
      "login": "ybogdanov",
      "id": 292569,
      "node_id": "MDQ6VXNlcjI5MjU2OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/292569?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ybogdanov",
      "html_url": "https://github.com/ybogdanov",
      "followers_url": "https://api.github.com/users/ybogdanov/followers",
      "following_url": "https://api.github.com/users/ybogdanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ybogdanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ybogdanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ybogdanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ybogdanov/orgs",
      "repos_url": "https://api.github.com/users/ybogdanov/repos",
      "events_url": "https://api.github.com/users/ybogdanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ybogdanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2011-04-28T17:15:32Z",
    "updated_at": "2011-04-28T17:27:47Z",
    "closed_at": "2011-04-28T17:27:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/647",
      "html_url": "https://github.com/expressjs/express/pull/647",
      "diff_url": "https://github.com/expressjs/express/pull/647.diff",
      "patch_url": "https://github.com/expressjs/express/pull/647.patch",
      "merged_at": null
    },
    "body": "Please, verify that it not breaks other template engines.\nFor EJS it helps to print file name in error stack trace correctly, very convenient for development. Otherwise, it doesn't know in which file the error was occurred, only line number.\n\nThanks!\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/647/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/647/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/646",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/646/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/646/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/646/events",
    "html_url": "https://github.com/expressjs/express/issues/646",
    "id": 823866,
    "node_id": "MDU6SXNzdWU4MjM4NjY=",
    "number": 646,
    "title": "Allow disabling the express server header",
    "user": {
      "login": "tommedema",
      "id": 331833,
      "node_id": "MDQ6VXNlcjMzMTgzMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331833?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tommedema",
      "html_url": "https://github.com/tommedema",
      "followers_url": "https://api.github.com/users/tommedema/followers",
      "following_url": "https://api.github.com/users/tommedema/following{/other_user}",
      "gists_url": "https://api.github.com/users/tommedema/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tommedema/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tommedema/subscriptions",
      "organizations_url": "https://api.github.com/users/tommedema/orgs",
      "repos_url": "https://api.github.com/users/tommedema/repos",
      "events_url": "https://api.github.com/users/tommedema/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tommedema/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2011-04-28T11:16:23Z",
    "updated_at": "2011-04-28T16:15:15Z",
    "closed_at": "2011-04-28T15:54:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I would normally not mind if others would know what server infrastructure I use, especially something as awesome as Express and node.js but I believe that this header should be possible to disable as:\n\n```\n1. it tells malicious users what infrastructure is used; since everything here is open source, this makes finding vulnerabilities easier for them\n\n2. it does not really add value; merely send more bytes to the client\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/646/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/646/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/645",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/645/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/645/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/645/events",
    "html_url": "https://github.com/expressjs/express/pull/645",
    "id": 822139,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTI5NjM2",
    "number": 645,
    "title": "Incorrect reference to template in a comment",
    "user": {
      "login": "8bitDesigner",
      "id": 139790,
      "node_id": "MDQ6VXNlcjEzOTc5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/139790?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/8bitDesigner",
      "html_url": "https://github.com/8bitDesigner",
      "followers_url": "https://api.github.com/users/8bitDesigner/followers",
      "following_url": "https://api.github.com/users/8bitDesigner/following{/other_user}",
      "gists_url": "https://api.github.com/users/8bitDesigner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/8bitDesigner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/8bitDesigner/subscriptions",
      "organizations_url": "https://api.github.com/users/8bitDesigner/orgs",
      "repos_url": "https://api.github.com/users/8bitDesigner/repos",
      "events_url": "https://api.github.com/users/8bitDesigner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/8bitDesigner/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2011-04-27T23:12:00Z",
    "updated_at": "2011-04-28T01:56:00Z",
    "closed_at": "2011-04-28T01:56:00Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/645",
      "html_url": "https://github.com/expressjs/express/pull/645",
      "diff_url": "https://github.com/expressjs/express/pull/645.diff",
      "patch_url": "https://github.com/expressjs/express/pull/645.patch",
      "merged_at": "2011-04-28T01:56:00Z"
    },
    "body": "The comment here refers to using \"jade\" for layouts, but you're using \"ejs\" instead.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/645/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/645/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/644",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/644/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/644/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/644/events",
    "html_url": "https://github.com/expressjs/express/issues/644",
    "id": 816827,
    "node_id": "MDU6SXNzdWU4MTY4Mjc=",
    "number": 644,
    "title": "odd view behavior in production env",
    "user": {
      "login": "wavded",
      "id": 26638,
      "node_id": "MDQ6VXNlcjI2NjM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/26638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wavded",
      "html_url": "https://github.com/wavded",
      "followers_url": "https://api.github.com/users/wavded/followers",
      "following_url": "https://api.github.com/users/wavded/following{/other_user}",
      "gists_url": "https://api.github.com/users/wavded/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wavded/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wavded/subscriptions",
      "organizations_url": "https://api.github.com/users/wavded/orgs",
      "repos_url": "https://api.github.com/users/wavded/repos",
      "events_url": "https://api.github.com/users/wavded/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wavded/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2011-04-26T21:39:10Z",
    "updated_at": "2011-04-27T15:13:31Z",
    "closed_at": "2011-04-26T22:24:38Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm getting an odd error when using multiple layouts and also using NODE_ENV=production\n\nI have this directory structure:\n\n<pre>\n    views\n       layout.jade\n       report\n         layout.jade\n</pre>\n\nIt seems that in production mode only one of those layouts is used for everything regardless if its in the parent directory or not.  Sometimes it uses `views/layout.jade` sometimes it uses `view/report/layout.jade` but whatever it 'picks' it renders every page that way.  If I run the app without NODE_ENV it seems to run fine.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/644/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/644/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/643",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/643/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/643/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/643/events",
    "html_url": "https://github.com/expressjs/express/issues/643",
    "id": 816384,
    "node_id": "MDU6SXNzdWU4MTYzODQ=",
    "number": 643,
    "title": "After update to 2.3.0, GET route being matched by POST",
    "user": {
      "login": "publickeating",
      "id": 108359,
      "node_id": "MDQ6VXNlcjEwODM1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/108359?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/publickeating",
      "html_url": "https://github.com/publickeating",
      "followers_url": "https://api.github.com/users/publickeating/followers",
      "following_url": "https://api.github.com/users/publickeating/following{/other_user}",
      "gists_url": "https://api.github.com/users/publickeating/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/publickeating/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/publickeating/subscriptions",
      "organizations_url": "https://api.github.com/users/publickeating/orgs",
      "repos_url": "https://api.github.com/users/publickeating/repos",
      "events_url": "https://api.github.com/users/publickeating/events{/privacy}",
      "received_events_url": "https://api.github.com/users/publickeating/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 8497,
        "node_id": "MDU6TGFiZWw4NDk3",
        "url": "https://api.github.com/repos/expressjs/express/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 12,
    "created_at": "2011-04-26T20:09:16Z",
    "updated_at": "2014-07-29T04:18:19Z",
    "closed_at": "2012-06-17T02:37:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have the following routes:\n\n```\napp.post('/session’,\n  sc.createSession,\n  sc.returnSession);\napp.get('/session',\n  sc.checkSession,\n  sc.returnSession);\n```\n\nAfter updating, a POST to /session is getting caught by the GET route.  Downgrading back to 2.2.2 fixes it.  My config is something like this:\n\n```\napp.use(express.logger());\napp.use(express.bodyParser());\napp.use(cookieSessions());\napp.use(form());\napp.use(express.static(__dirname + '/public’));\napp.set('views', __dirname + '/views’);\n```\n\nIf I remove the app.get(‘/session’) route, than no other route matches the POST.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/643/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/643/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/642",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/642/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/642/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/642/events",
    "html_url": "https://github.com/expressjs/express/pull/642",
    "id": 810435,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTI2Njcz",
    "number": 642,
    "title": "Added request and response functions as per the docs",
    "user": {
      "login": "heroic",
      "id": 523335,
      "node_id": "MDQ6VXNlcjUyMzMzNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/523335?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/heroic",
      "html_url": "https://github.com/heroic",
      "followers_url": "https://api.github.com/users/heroic/followers",
      "following_url": "https://api.github.com/users/heroic/following{/other_user}",
      "gists_url": "https://api.github.com/users/heroic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/heroic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/heroic/subscriptions",
      "organizations_url": "https://api.github.com/users/heroic/orgs",
      "repos_url": "https://api.github.com/users/heroic/repos",
      "events_url": "https://api.github.com/users/heroic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/heroic/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2011-04-25T17:40:07Z",
    "updated_at": "2011-04-25T17:43:27Z",
    "closed_at": "2011-04-25T17:43:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/642",
      "html_url": "https://github.com/expressjs/express/pull/642",
      "diff_url": "https://github.com/expressjs/express/pull/642.diff",
      "patch_url": "https://github.com/expressjs/express/pull/642.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/642/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/642/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  }
]