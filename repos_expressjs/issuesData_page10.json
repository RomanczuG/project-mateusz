[
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4081",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4081/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4081/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4081/events",
    "html_url": "https://github.com/expressjs/express/issues/4081",
    "id": 510834231,
    "node_id": "MDU6SXNzdWU1MTA4MzQyMzE=",
    "number": 4081,
    "title": "Problem with app.use(path, router)",
    "user": {
      "login": "mauriciocirelli",
      "id": 1136027,
      "node_id": "MDQ6VXNlcjExMzYwMjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1136027?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mauriciocirelli",
      "html_url": "https://github.com/mauriciocirelli",
      "followers_url": "https://api.github.com/users/mauriciocirelli/followers",
      "following_url": "https://api.github.com/users/mauriciocirelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/mauriciocirelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mauriciocirelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mauriciocirelli/subscriptions",
      "organizations_url": "https://api.github.com/users/mauriciocirelli/orgs",
      "repos_url": "https://api.github.com/users/mauriciocirelli/repos",
      "events_url": "https://api.github.com/users/mauriciocirelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mauriciocirelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-10-22T18:35:04Z",
    "updated_at": "2019-10-25T01:08:10Z",
    "closed_at": "2019-10-24T11:55:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Dear express community,\r\n\r\nI am trying to organize my routes in different files, as described in the docs and in several websites I have been searching for this subject.\r\nAll of them suggest to use app.use(\"path\", router obj) to assign a route to a router instance.\r\n\r\nThis is the code I have so far:\r\n\r\n**server.js:**\r\n```js\r\nconst devices = require(\"./controllers/devices.js\");\r\napp.use(\"/api/devices\", devices);\r\n```\r\n**controllers/devices.js:**\r\n```js\r\nvar router = express.Router();\r\n// Middleware that is specific to this router\r\nrouter.use(function timeLog(req, res, next) {\r\n  // Middleware here\r\n  next();\r\n});\r\n\r\nrouter.get('/', function(req, res) {\r\n    logger.debug(\"GET DEVICES\");\r\n    db.Devices.find({}).then(function (err, result) {\r\n        res.send(result);\r\n    });\r\n});\r\n\r\nexports = router;\r\n```\r\nHowever, when I launch my application, I am getting this exception:\r\n\r\n`(node:17868) UnhandledPromiseRejectionWarning: TypeError: Router.use() requires a middleware function but got a Object`\r\n\r\nI cannot find what I am doing wrong. The error is pretty clear: I am sending a router instance to 'app.use', which expetcs a function, but this is what I am seeing in all examples and in the documentation.\r\n\r\nWhat is the correct way to organize the routes in different files?\r\n\r\nThank you!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4081/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4081/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4080",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4080/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4080/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4080/events",
    "html_url": "https://github.com/expressjs/express/issues/4080",
    "id": 509228235,
    "node_id": "MDU6SXNzdWU1MDkyMjgyMzU=",
    "number": 4080,
    "title": "express.static redirects instead of responding 404",
    "user": {
      "login": "repinvv",
      "id": 1575441,
      "node_id": "MDQ6VXNlcjE1NzU0NDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1575441?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/repinvv",
      "html_url": "https://github.com/repinvv",
      "followers_url": "https://api.github.com/users/repinvv/followers",
      "following_url": "https://api.github.com/users/repinvv/following{/other_user}",
      "gists_url": "https://api.github.com/users/repinvv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/repinvv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/repinvv/subscriptions",
      "organizations_url": "https://api.github.com/users/repinvv/orgs",
      "repos_url": "https://api.github.com/users/repinvv/repos",
      "events_url": "https://api.github.com/users/repinvv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/repinvv/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2019-10-18T17:52:28Z",
    "updated_at": "2019-10-18T21:03:58Z",
    "closed_at": "2019-10-18T20:14:29Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Empty express, like that - \r\n```js\r\nexport const app = express();\r\nhttp.createServer(app).listen(80);\r\n```\r\nredirects /scripts to /scripts/  on its own.\r\n\r\nExpected behaviour is to return 404, like to any other path, /assets for example",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4080/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4080/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4079",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4079/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4079/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4079/events",
    "html_url": "https://github.com/expressjs/express/issues/4079",
    "id": 508486152,
    "node_id": "MDU6SXNzdWU1MDg0ODYxNTI=",
    "number": 4079,
    "title": "Can't handle non GET Requests",
    "user": {
      "login": "tbhaxor",
      "id": 28386721,
      "node_id": "MDQ6VXNlcjI4Mzg2NzIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/28386721?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tbhaxor",
      "html_url": "https://github.com/tbhaxor",
      "followers_url": "https://api.github.com/users/tbhaxor/followers",
      "following_url": "https://api.github.com/users/tbhaxor/following{/other_user}",
      "gists_url": "https://api.github.com/users/tbhaxor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tbhaxor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tbhaxor/subscriptions",
      "organizations_url": "https://api.github.com/users/tbhaxor/orgs",
      "repos_url": "https://api.github.com/users/tbhaxor/repos",
      "events_url": "https://api.github.com/users/tbhaxor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tbhaxor/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-10-17T13:44:55Z",
    "updated_at": "2019-10-17T14:46:20Z",
    "closed_at": "2019-10-17T14:46:20Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Describe the issue**\r\nI have made an application for my company and hosted on a digitalocean. I have added all CORS related options. I can now send only GET request\r\n\r\nMy server is running on `8090` and i am using apache as reverse proxy\r\n\r\n**Example Code** (_config of apache2_)\r\n```conf\r\n<VirtualHost *:80>\r\n        <Directory /home/ems/public>\r\n                Options Indexes FollowSymLinks MultiViews\r\n          #      ...\r\n        </Directory>\r\nServerName ems.4iresearch.com\r\nServerAdmin webmaster@localhost\r\nDocumentRoot /home/ems/public\r\nProxyRequests on\r\nProxyPass / http://localhost:8090/\r\n</VirtualHost>\r\n```\r\n\r\n\r\n**Expected behavior, if applicable**\r\nIn the screen shot, the credentials used are wrong and do not exist. So the toast message on *bottom right* should appear saying `Check email/password`\r\n\r\n**Express Version**\r\n^4\r\n\r\n**Testing URL**\r\nhttp://ems.4iresearch.com\r\n\r\n**Additional context/Screenshots**\r\n![image](https://user-images.githubusercontent.com/28386721/66979003-9f1bc200-f0c9-11e9-827f-251bfc54637d.png)\r\n\r\n![image](https://user-images.githubusercontent.com/28386721/66979169-2e28da00-f0ca-11e9-8866-c2ba7302ffda.png)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4079/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4079/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4078",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4078/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4078/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4078/events",
    "html_url": "https://github.com/expressjs/express/issues/4078",
    "id": 508323786,
    "node_id": "MDU6SXNzdWU1MDgzMjM3ODY=",
    "number": 4078,
    "title": "Guys need help",
    "user": {
      "login": "ta19ee",
      "id": 56583876,
      "node_id": "MDQ6VXNlcjU2NTgzODc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/56583876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ta19ee",
      "html_url": "https://github.com/ta19ee",
      "followers_url": "https://api.github.com/users/ta19ee/followers",
      "following_url": "https://api.github.com/users/ta19ee/following{/other_user}",
      "gists_url": "https://api.github.com/users/ta19ee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ta19ee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ta19ee/subscriptions",
      "organizations_url": "https://api.github.com/users/ta19ee/orgs",
      "repos_url": "https://api.github.com/users/ta19ee/repos",
      "events_url": "https://api.github.com/users/ta19ee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ta19ee/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-10-17T08:40:02Z",
    "updated_at": "2019-10-17T09:32:56Z",
    "closed_at": "2019-10-17T09:32:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "http://35.176.39.253/\r\nI have given this link to analyse what is wrong with this link and what could be the solution. Can any one help. I am a newbie at this.\r\n\r\nIt has some sort of javascript while inspecting the webpage. ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4078/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4078/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4077",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4077/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4077/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4077/events",
    "html_url": "https://github.com/expressjs/express/pull/4077",
    "id": 507334931,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzI4MzQ0NTAz",
    "number": 4077,
    "title": "Add semicolons",
    "user": {
      "login": "pedroprado010",
      "id": 7854437,
      "node_id": "MDQ6VXNlcjc4NTQ0Mzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7854437?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pedroprado010",
      "html_url": "https://github.com/pedroprado010",
      "followers_url": "https://api.github.com/users/pedroprado010/followers",
      "following_url": "https://api.github.com/users/pedroprado010/following{/other_user}",
      "gists_url": "https://api.github.com/users/pedroprado010/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pedroprado010/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pedroprado010/subscriptions",
      "organizations_url": "https://api.github.com/users/pedroprado010/orgs",
      "repos_url": "https://api.github.com/users/pedroprado010/repos",
      "events_url": "https://api.github.com/users/pedroprado010/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pedroprado010/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-10-15T15:51:29Z",
    "updated_at": "2019-10-15T15:58:31Z",
    "closed_at": "2019-10-15T15:58:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4077",
      "html_url": "https://github.com/expressjs/express/pull/4077",
      "diff_url": "https://github.com/expressjs/express/pull/4077.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4077.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4077/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4077/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4076",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4076/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4076/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4076/events",
    "html_url": "https://github.com/expressjs/express/issues/4076",
    "id": 506673446,
    "node_id": "MDU6SXNzdWU1MDY2NzM0NDY=",
    "number": 4076,
    "title": "req.params do not return string properly",
    "user": {
      "login": "kaigothe",
      "id": 44293674,
      "node_id": "MDQ6VXNlcjQ0MjkzNjc0",
      "avatar_url": "https://avatars.githubusercontent.com/u/44293674?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kaigothe",
      "html_url": "https://github.com/kaigothe",
      "followers_url": "https://api.github.com/users/kaigothe/followers",
      "following_url": "https://api.github.com/users/kaigothe/following{/other_user}",
      "gists_url": "https://api.github.com/users/kaigothe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kaigothe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kaigothe/subscriptions",
      "organizations_url": "https://api.github.com/users/kaigothe/orgs",
      "repos_url": "https://api.github.com/users/kaigothe/repos",
      "events_url": "https://api.github.com/users/kaigothe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kaigothe/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-10-14T14:01:35Z",
    "updated_at": "2019-10-14T14:45:24Z",
    "closed_at": "2019-10-14T14:26:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello, \r\ni have following router:\r\n\r\n```js\r\nrouter.get(\"/detail/:itemId\", function(req, res){\r\n    const identification_key = req.params.itemId;\r\n    console.log( \"-> Item id\", typeof identification_key, identification_key);\r\n})\r\nmodule.exports = router;\r\n```\r\n\r\nIf I enter following Url : `http://<domain ...>/detail/ABC-#123` params return `ABC-`. \r\nIf I enter `http://<domain ...>/detail/ABC-123` it's return `ABC-123`. \r\n\r\nIs this a bug? \r\n\r\nI use express 4.17.1 \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4076/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4076/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4075",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4075/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4075/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4075/events",
    "html_url": "https://github.com/expressjs/express/issues/4075",
    "id": 505588728,
    "node_id": "MDU6SXNzdWU1MDU1ODg3Mjg=",
    "number": 4075,
    "title": "Can't find information about release cycles (version support period)",
    "user": {
      "login": "msantana-dev",
      "id": 24710499,
      "node_id": "MDQ6VXNlcjI0NzEwNDk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/24710499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/msantana-dev",
      "html_url": "https://github.com/msantana-dev",
      "followers_url": "https://api.github.com/users/msantana-dev/followers",
      "following_url": "https://api.github.com/users/msantana-dev/following{/other_user}",
      "gists_url": "https://api.github.com/users/msantana-dev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/msantana-dev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msantana-dev/subscriptions",
      "organizations_url": "https://api.github.com/users/msantana-dev/orgs",
      "repos_url": "https://api.github.com/users/msantana-dev/repos",
      "events_url": "https://api.github.com/users/msantana-dev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/msantana-dev/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-10-11T01:28:23Z",
    "updated_at": "2020-04-10T22:51:00Z",
    "closed_at": "2020-04-10T22:51:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "For how long does express maintain major releases?\r\nFor example, I saw [on the website](https://expressjs.com/en/advanced/security-updates.html) that version 3 is deprecated, but I can't seem to find any statement which specified exactly when that version would be deprecated right from release date.\r\n\r\nI'm choosing the stack for my next project and this is important to know.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4075/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4075/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4074",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4074/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4074/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4074/events",
    "html_url": "https://github.com/expressjs/express/issues/4074",
    "id": 504053913,
    "node_id": "MDU6SXNzdWU1MDQwNTM5MTM=",
    "number": 4074,
    "title": "I'm curious about the build matrix on express and related packages",
    "user": {
      "login": "helio-frota",
      "id": 6443576,
      "node_id": "MDQ6VXNlcjY0NDM1NzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6443576?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/helio-frota",
      "html_url": "https://github.com/helio-frota",
      "followers_url": "https://api.github.com/users/helio-frota/followers",
      "following_url": "https://api.github.com/users/helio-frota/following{/other_user}",
      "gists_url": "https://api.github.com/users/helio-frota/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/helio-frota/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/helio-frota/subscriptions",
      "organizations_url": "https://api.github.com/users/helio-frota/orgs",
      "repos_url": "https://api.github.com/users/helio-frota/repos",
      "events_url": "https://api.github.com/users/helio-frota/events{/privacy}",
      "received_events_url": "https://api.github.com/users/helio-frota/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-10-08T13:45:20Z",
    "updated_at": "2019-10-08T14:25:03Z",
    "closed_at": "2019-10-08T14:24:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Why to keep all the Node.js versions on travis.yml ?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4074/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4074/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4073",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4073/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4073/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4073/events",
    "html_url": "https://github.com/expressjs/express/issues/4073",
    "id": 503032666,
    "node_id": "MDU6SXNzdWU1MDMwMzI2NjY=",
    "number": 4073,
    "title": "Can't Retrieve Module Version",
    "user": {
      "login": "sykeben",
      "id": 33205078,
      "node_id": "MDQ6VXNlcjMzMjA1MDc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/33205078?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sykeben",
      "html_url": "https://github.com/sykeben",
      "followers_url": "https://api.github.com/users/sykeben/followers",
      "following_url": "https://api.github.com/users/sykeben/following{/other_user}",
      "gists_url": "https://api.github.com/users/sykeben/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sykeben/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sykeben/subscriptions",
      "organizations_url": "https://api.github.com/users/sykeben/orgs",
      "repos_url": "https://api.github.com/users/sykeben/repos",
      "events_url": "https://api.github.com/users/sykeben/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sykeben/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-10-06T00:17:44Z",
    "updated_at": "2019-10-06T00:21:04Z",
    "closed_at": "2019-10-06T00:19:37Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I may be approaching this from the wrong angle, but the following code that I use at the beginning of an application I am working on prints that the express version is `undefined`:\r\n```javascript\r\nconst express = require('express')\r\nlogger.info(`Using express v${express.version}`)\r\n```\r\n\r\nIs there no such thing as `express.version`? I am fairly new to NodeJS and am most likely doing this wrong.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4073/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4073/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4072",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4072/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4072/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4072/events",
    "html_url": "https://github.com/expressjs/express/issues/4072",
    "id": 503010539,
    "node_id": "MDU6SXNzdWU1MDMwMTA1Mzk=",
    "number": 4072,
    "title": "Problem with hbs - Failed to lookup view \"index\" in views directory",
    "user": {
      "login": "KamilGadawski",
      "id": 28691476,
      "node_id": "MDQ6VXNlcjI4NjkxNDc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/28691476?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KamilGadawski",
      "html_url": "https://github.com/KamilGadawski",
      "followers_url": "https://api.github.com/users/KamilGadawski/followers",
      "following_url": "https://api.github.com/users/KamilGadawski/following{/other_user}",
      "gists_url": "https://api.github.com/users/KamilGadawski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KamilGadawski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KamilGadawski/subscriptions",
      "organizations_url": "https://api.github.com/users/KamilGadawski/orgs",
      "repos_url": "https://api.github.com/users/KamilGadawski/repos",
      "events_url": "https://api.github.com/users/KamilGadawski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KamilGadawski/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-10-05T20:13:50Z",
    "updated_at": "2020-06-13T19:07:46Z",
    "closed_at": "2019-10-05T20:22:35Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\r\nI was directed here with a problem. I have created the index.hbs file\r\n\r\nhttps://github.com/pillarjs/hbs/issues/183",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4072/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4072/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4070",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4070/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4070/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4070/events",
    "html_url": "https://github.com/expressjs/express/pull/4070",
    "id": 502606627,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzI0NjU1NDU4",
    "number": 4070,
    "title": "Update path-to-regexp",
    "user": {
      "login": "golyshevd",
      "id": 1090017,
      "node_id": "MDQ6VXNlcjEwOTAwMTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1090017?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/golyshevd",
      "html_url": "https://github.com/golyshevd",
      "followers_url": "https://api.github.com/users/golyshevd/followers",
      "following_url": "https://api.github.com/users/golyshevd/following{/other_user}",
      "gists_url": "https://api.github.com/users/golyshevd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/golyshevd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/golyshevd/subscriptions",
      "organizations_url": "https://api.github.com/users/golyshevd/orgs",
      "repos_url": "https://api.github.com/users/golyshevd/repos",
      "events_url": "https://api.github.com/users/golyshevd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/golyshevd/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 133578716,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/deps",
        "name": "deps",
        "color": "444444",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-10-04T12:24:12Z",
    "updated_at": "2019-10-04T13:47:37Z",
    "closed_at": "2019-10-04T13:47:18Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4070",
      "html_url": "https://github.com/expressjs/express/pull/4070",
      "diff_url": "https://github.com/expressjs/express/pull/4070.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4070.patch",
      "merged_at": null
    },
    "body": "0.1.7 can not parse my expression: `/foo/bar-baz-*/(v*)?/`",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4070/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4070/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4069",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4069/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4069/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4069/events",
    "html_url": "https://github.com/expressjs/express/issues/4069",
    "id": 502006424,
    "node_id": "MDU6SXNzdWU1MDIwMDY0MjQ=",
    "number": 4069,
    "title": "Adding Status to Response causes responsebody to be ignored?",
    "user": {
      "login": "1nchHigh",
      "id": 50449715,
      "node_id": "MDQ6VXNlcjUwNDQ5NzE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/50449715?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/1nchHigh",
      "html_url": "https://github.com/1nchHigh",
      "followers_url": "https://api.github.com/users/1nchHigh/followers",
      "following_url": "https://api.github.com/users/1nchHigh/following{/other_user}",
      "gists_url": "https://api.github.com/users/1nchHigh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/1nchHigh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/1nchHigh/subscriptions",
      "organizations_url": "https://api.github.com/users/1nchHigh/orgs",
      "repos_url": "https://api.github.com/users/1nchHigh/repos",
      "events_url": "https://api.github.com/users/1nchHigh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/1nchHigh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-10-03T11:23:53Z",
    "updated_at": "2019-10-07T12:45:48Z",
    "closed_at": "2019-10-07T09:55:36Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\r\n\r\nI found issue: #3862 which seems to be similar to my request, but I am not using Axios.\r\n\r\nWhen I set the 'status' of a response, any body provided is completely ignored?\r\n\r\nFor example, in your documentation:\r\nres.status(400).send('Bad Request')\r\n\r\nIf I change the 'Bad Request' the response is ignored and still sends 'Bad Request'.\r\n\r\nI'm sure when I first started with Express, the above worked but now doesn't?\r\n\r\nProbably something I'm doing, but just can't figure it out.\r\n\r\nIf I remove the status, the body is sent fine. If I set the status to 200 then body is sent fine.\r\nAny other response bodies just use the default?\r\n\r\nMany thanks",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4069/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4069/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4068",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4068/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4068/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4068/events",
    "html_url": "https://github.com/expressjs/express/issues/4068",
    "id": 501399496,
    "node_id": "MDU6SXNzdWU1MDEzOTk0OTY=",
    "number": 4068,
    "title": "Correct way to initialise request context",
    "user": {
      "login": "matej-prokop",
      "id": 7286793,
      "node_id": "MDQ6VXNlcjcyODY3OTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7286793?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matej-prokop",
      "html_url": "https://github.com/matej-prokop",
      "followers_url": "https://api.github.com/users/matej-prokop/followers",
      "following_url": "https://api.github.com/users/matej-prokop/following{/other_user}",
      "gists_url": "https://api.github.com/users/matej-prokop/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matej-prokop/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matej-prokop/subscriptions",
      "organizations_url": "https://api.github.com/users/matej-prokop/orgs",
      "repos_url": "https://api.github.com/users/matej-prokop/repos",
      "events_url": "https://api.github.com/users/matej-prokop/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matej-prokop/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-10-02T10:13:24Z",
    "updated_at": "2020-04-10T22:47:35Z",
    "closed_at": "2020-04-10T22:47:35Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I would like to use async hooks provided by Node.js to implement request context (having context without manually passing it everywhere). I saw some implementations using middleware to initialise request context:\r\n\r\n```\r\nconst contextMiddleware = (req, res, next) => {\r\n  // initialize request context\r\n  const cxt = asyncContext.create({ parent: asyncHooks.executionAsyncId() });\r\n  // take Request ID from request headers and store it into context\r\n  cxt.set(\"request-id\", req.get(\"X-Request-Id\"))\r\n\r\n  next();\r\n};\r\n```\r\n\r\nThis code says that async resource executing middleware code is parent of request context. So any code invoked by this async resource is going to share the same request context.\r\n\r\nThis approach works until you use something like `morgan` to log request which uses `on-finished` under the hood. Where code is executed outside of our request context so metadata such as Request ID aren't available within logs produced by `morgan`.\r\n\r\nIs there any other better place to initialise request context other than within middleware to capture entire request lifecycle (including executing of `on-finished`)? Or would be using \r\n\r\n```\r\nconst cxt = asyncContext.create({ parent: asyncHooks.triggerAsyncId() });\r\n```\r\n\r\ninstead within middleware viable solution? Saying that root of request context is parent of resource executing middleware code (isn't parent resource reused among multiple requests? As it would cause leaking of request context among different requests)\r\n\r\nI would be glad for any feedback. Thank you!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4068/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4068/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4067",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4067/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4067/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4067/events",
    "html_url": "https://github.com/expressjs/express/issues/4067",
    "id": 500697805,
    "node_id": "MDU6SXNzdWU1MDA2OTc4MDU=",
    "number": 4067,
    "title": "Express converting date object to ISO String by default when returning response",
    "user": {
      "login": "AshayTikekar",
      "id": 15188592,
      "node_id": "MDQ6VXNlcjE1MTg4NTky",
      "avatar_url": "https://avatars.githubusercontent.com/u/15188592?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AshayTikekar",
      "html_url": "https://github.com/AshayTikekar",
      "followers_url": "https://api.github.com/users/AshayTikekar/followers",
      "following_url": "https://api.github.com/users/AshayTikekar/following{/other_user}",
      "gists_url": "https://api.github.com/users/AshayTikekar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AshayTikekar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AshayTikekar/subscriptions",
      "organizations_url": "https://api.github.com/users/AshayTikekar/orgs",
      "repos_url": "https://api.github.com/users/AshayTikekar/repos",
      "events_url": "https://api.github.com/users/AshayTikekar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AshayTikekar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-10-01T06:44:00Z",
    "updated_at": "2019-10-01T16:13:39Z",
    "closed_at": "2019-10-01T16:13:32Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am having a simple customer model. I have created an endpoint for creating a customer and returning the created customer. I wrote a test class using supertest for testing the model.\r\nFollowing is the code from relevant files.\r\n\r\n```\r\n//customer.model.js\r\nconst customerSchema = new mongoose.Schema({\r\n    \"fullName\":{\r\n        type:String,\r\n        requried:true\r\n    },\r\n    'startDate\":{\r\n        type:Date,\r\n        required:true\r\n    },\r\n    \"endDate\":{\r\n        type:Date,\r\n        required:true\r\n    }\r\n});\r\n```\r\n```\r\n//customer.api.js\r\n\r\nrouter.post(\"/customer\",auth([\"ROLE_ADMIN\"]),async (req,res)=>{\r\n    try{\r\n        const customer = await CustomerService().add(req.body)\r\n        console.log(\"customer.endDate\",customer.endDate instanceof Date) //true\r\n        return res.status(200).send({customer});\r\n    }catch(e){\r\n        console.log(\"exception\",e);\r\n        return res.status(503).send({});\r\n    }\r\n})\r\n```\r\n\r\n```\r\n//customer.test.js\r\ndescribe(\"Customer\",()=>{\r\n    test(\"should add a user\",async()=>{\r\n        //login\r\n        const response = await request(app).post('/login').send(\r\n            {\r\n                email: 'testadmin@example.com',\r\n                password: 'MyPass777!',\r\n            }\r\n        ).expect(200);\r\n\r\n\r\n        const customer = await request(app).post(\"/customer\")\r\n        .set(\"Cookie\",response.headers['set-cookie'])\r\n        .send(_customer)\r\n        .expect(200);\r\n        expect(customer.body.customer.fullName).toBe(_customer.fullName);\r\n        expect(customer.body.customer.endDate).toBe(_customer.endDate.toISOString()); //I am getting customer.body.customer.endDate as an ISO string here\r\n        expect(customer.body.customer.startDate).toBe(_customer.startDate.toISOString());\r\n        expect(customer.body.customer.phone).toBe(_customer.phone);\r\n    })\r\n})\r\n```\r\nI am not able to understand why the express router seems to send Date in response in ISO format.\r\n\r\nKindly help out.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4067/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4067/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4066",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4066/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4066/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4066/events",
    "html_url": "https://github.com/expressjs/express/issues/4066",
    "id": 500080525,
    "node_id": "MDU6SXNzdWU1MDAwODA1MjU=",
    "number": 4066,
    "title": "How do you get expressjs to use the system time?",
    "user": {
      "login": "sunnz",
      "id": 1378551,
      "node_id": "MDQ6VXNlcjEzNzg1NTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1378551?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sunnz",
      "html_url": "https://github.com/sunnz",
      "followers_url": "https://api.github.com/users/sunnz/followers",
      "following_url": "https://api.github.com/users/sunnz/following{/other_user}",
      "gists_url": "https://api.github.com/users/sunnz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sunnz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sunnz/subscriptions",
      "organizations_url": "https://api.github.com/users/sunnz/orgs",
      "repos_url": "https://api.github.com/users/sunnz/repos",
      "events_url": "https://api.github.com/users/sunnz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sunnz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-09-30T06:37:34Z",
    "updated_at": "2019-10-01T02:06:24Z",
    "closed_at": "2019-09-30T14:38:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\r\n\r\nI see that expressjs uses the GMT timezone in the date http header:\r\n\r\n```\r\nHTTP/1.1 200 OK\r\nX-Powered-By: Express\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 114\r\nETag: W/\"72-MxNUYw8tX3YB2aknT+h9hozsoSA\"\r\nDate: Mon, 30 Sep 2019 06:19:52 GMT\r\nConnection: keep-alive\r\n```\r\n\r\nI have set the system date in both the container and the host to AEST:\r\n\r\n```\r\n[ec2-user@myserver]$ docker-compose exec mycontainer date\r\nMon Sep 30 16:20:35 AEST 2019\r\n[ec2-user@myserver]$ date\r\nMon Sep 30 16:20:35 AEST 2019\r\n```\r\n\r\nA quick search shows the correct way is to simply change the system time:\r\n\r\nhttps://stackoverflow.com/questions/8083410/how-can-i-set-the-default-timezone-in-node-js\r\n\r\nBut it is still not working\r\n\r\nHow do you get expressjs to use the system time?\r\n\r\nnodejs: 12.10.0\r\nexpressjs: 4.17.1\r\n\r\nThanks!! :D",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4066/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4066/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4065",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4065/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4065/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4065/events",
    "html_url": "https://github.com/expressjs/express/issues/4065",
    "id": 499722453,
    "node_id": "MDU6SXNzdWU0OTk3MjI0NTM=",
    "number": 4065,
    "title": "catch error for bad json format thrown by express.json() middleware",
    "user": {
      "login": "sujeet-agrahari",
      "id": 22151975,
      "node_id": "MDQ6VXNlcjIyMTUxOTc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/22151975?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sujeet-agrahari",
      "html_url": "https://github.com/sujeet-agrahari",
      "followers_url": "https://api.github.com/users/sujeet-agrahari/followers",
      "following_url": "https://api.github.com/users/sujeet-agrahari/following{/other_user}",
      "gists_url": "https://api.github.com/users/sujeet-agrahari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sujeet-agrahari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sujeet-agrahari/subscriptions",
      "organizations_url": "https://api.github.com/users/sujeet-agrahari/orgs",
      "repos_url": "https://api.github.com/users/sujeet-agrahari/repos",
      "events_url": "https://api.github.com/users/sujeet-agrahari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sujeet-agrahari/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-09-28T03:57:45Z",
    "updated_at": "2019-09-28T04:02:59Z",
    "closed_at": "2019-09-28T04:02:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am getting `SyntaxError: Unexpected string in JSON at position 59` error in html format when format of json data is not valid. I don't know why it is giving me html instead of error object.\r\nI have set my header like below.\r\n```js\r\n//header middlewares\r\napp.use((req, res, next) => {\r\n    res.setHeader('Content-Type', 'application/json');\r\n    res.setHeader(\"Access-Control-Allow-Origin\", \"*\");\r\n    next();\r\n  });\r\n````\r\nI want to catch the error and send a message in below format.\r\n```js\r\n{ \r\n  \"status\":404,\r\n  \"message\":\"Unexpected string in JSON at position 59\"\r\n}\r\n```\r\nHere is the error that I get.\r\n```html\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n<meta charset=\"utf-8\">\r\n<title>Error</title>\r\n</head>\r\n<body>\r\n<pre>SyntaxError: Unexpected string in JSON at position 59<br> &nbsp; &nbsp;at JSON.parse (&lt;anonymous&gt;)<br> &nbsp; &nbsp;at parse (C:\\Users\\mydirectory\\auth\\node_modules\\body-parser\\lib\\types\\json.js: 89: 19)<br> &nbsp; &nbsp;at C:\\Users\\mydirectory\\auth\\node_modules\\body-parser\\lib\\read.js: 121: 18<br> &nbsp; &nbsp;at invokeCallback (C:\\Users\\mydirectory\\auth\\node_modules\\raw-body\\index.js: 224: 16)<br> &nbsp; &nbsp;at done (C:\\Users\\my-directory\\auth\\node_modules\\raw-body\\index.js: 213: 7)<br> &nbsp; &nbsp;at IncomingMessage.onEnd (C:\\Users\\mydirectory\\auth\\node_modules\\raw-body\\index.js: 273: 7)<br> &nbsp; &nbsp;at IncomingMessage.emit (events.js: 203: 15)<br> &nbsp; &nbsp;at endReadableNT (_stream_readable.js: 1145: 12)<br> &nbsp; &nbsp;at process._tickCallback (internal/process/next_tick.js: 63: 19)</pre>\r\n</body>\r\n</html>\r\n```\r\nI tried catching this error.\r\n\r\n```js\r\napp.use((err, req, res, next) => {\r\n    if (err instanceof SyntaxError && err.status === 400 && 'body' in err) {\r\n        console.error(err);\r\n        return res.status(400).send(err); // Bad request\r\n    }\r\n    next();\r\n});\r\n```\r\nBut the response that I get now is like below.\r\n\r\n```js\r\n{\r\n    \"expose\": true,\r\n    \"statusCode\": 400,\r\n    \"status\": 400,\r\n    \"body\": \"{\\n\\t\\\"username\\\":\\n}\",\r\n    \"type\": \"entity.parse.failed\"\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4065/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4065/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4064",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4064/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4064/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4064/events",
    "html_url": "https://github.com/expressjs/express/issues/4064",
    "id": 499577039,
    "node_id": "MDU6SXNzdWU0OTk1NzcwMzk=",
    "number": 4064,
    "title": "Ability for disabling default behavior for unhandled OPTIONS request.",
    "user": {
      "login": "thesayyn",
      "id": 20563340,
      "node_id": "MDQ6VXNlcjIwNTYzMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20563340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thesayyn",
      "html_url": "https://github.com/thesayyn",
      "followers_url": "https://api.github.com/users/thesayyn/followers",
      "following_url": "https://api.github.com/users/thesayyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/thesayyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thesayyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thesayyn/subscriptions",
      "organizations_url": "https://api.github.com/users/thesayyn/orgs",
      "repos_url": "https://api.github.com/users/thesayyn/repos",
      "events_url": "https://api.github.com/users/thesayyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thesayyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-09-27T18:05:51Z",
    "updated_at": "2019-09-27T18:13:48Z",
    "closed_at": "2019-09-27T18:07:51Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "By default, Router handles unhandled options requests. This becomes a real headache if you want to handle those requests on top of a router tree.\r\n\r\nLet me clarify with an example\r\n\r\n```js\r\nconst express = require('express');\r\n\r\nconst rootRouter = express.Router();\r\n\r\n// These routers above have many routes inside them.\r\nconst myChildRouter = express.Router();\r\nconst mySecondChildRouter = express.Router();\r\n\r\n// I don't care about what happening in those routers.\r\nrootRouter.all('/myfeaturemodule1', myChildRouter);\r\nrootRouter.all('/myfeaturemodule2', mySecondChildRouter);\r\n\r\n// When I route to an indistinct route that does not start with feature module paths my callback will be called.\r\n// However when I route to any indistinct route that starts with feature module paths\r\n// my callback will never fire since child routers will be handling the unhandled options request\r\n\r\nrootRouter.use((req,res) => {\r\n    if (! req.route ) {\r\n        // Route is unhandled\r\n        // My logic goes here\r\n    }\r\n})\r\n```\r\n\r\nTo work around this I need to put my handler to end of every router on the router tree.\r\n\r\nmy suggestion is adding an option to disable this behavior let the parent route handle that request.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4064/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4064/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4063",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4063/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4063/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4063/events",
    "html_url": "https://github.com/expressjs/express/issues/4063",
    "id": 499014130,
    "node_id": "MDU6SXNzdWU0OTkwMTQxMzA=",
    "number": 4063,
    "title": "Memory Leak on minimal express server",
    "user": {
      "login": "Sorok-Dva",
      "id": 15158794,
      "node_id": "MDQ6VXNlcjE1MTU4Nzk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/15158794?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sorok-Dva",
      "html_url": "https://github.com/Sorok-Dva",
      "followers_url": "https://api.github.com/users/Sorok-Dva/followers",
      "following_url": "https://api.github.com/users/Sorok-Dva/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sorok-Dva/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sorok-Dva/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sorok-Dva/subscriptions",
      "organizations_url": "https://api.github.com/users/Sorok-Dva/orgs",
      "repos_url": "https://api.github.com/users/Sorok-Dva/repos",
      "events_url": "https://api.github.com/users/Sorok-Dva/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sorok-Dva/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2019-09-26T17:17:51Z",
    "updated_at": "2019-12-19T15:28:20Z",
    "closed_at": "2019-12-19T15:21:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi everyone,\r\n\r\nI'm confronted to a really weird problem.\r\nI just create a whole new projet, I use express generator to generate my app squeleton.\r\nI use **Node v 10.15**, **NPM 6.4.1**, **Express-generator 4.16.1** and **view Engine EJS**.\r\n\r\nI didn't do huge changements, some default things like adding a console.log on server listening and add some usefull basics package like dotenv.\r\nI didn't create new routes or controller and I don't configured an ORM or a DB connection.\r\n\r\nBut when I'm launching Apache Benchmark on this minimal express server, I've memory leak detected after ~400K requests.\r\n\r\n\r\nI use node-memleak to detect it and here is the results : \r\n\r\n![image](https://user-images.githubusercontent.com/15158794/65709797-f8c43a00-e091-11e9-89ae-46b091d9ef42.png)\r\n\r\n![image](https://user-images.githubusercontent.com/15158794/65709813-024da200-e092-11e9-90f2-7b66a66641cb.png)\r\n\r\n\r\nSooo what's the problem ? Why I have a memory leak on a minimal server where there is no modifications ?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4063/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4063/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4061",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4061/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4061/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4061/events",
    "html_url": "https://github.com/expressjs/express/issues/4061",
    "id": 497687789,
    "node_id": "MDU6SXNzdWU0OTc2ODc3ODk=",
    "number": 4061,
    "title": "TypeScript behaves differently on Linux",
    "user": {
      "login": "akopchinskiy",
      "id": 39277134,
      "node_id": "MDQ6VXNlcjM5Mjc3MTM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/39277134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akopchinskiy",
      "html_url": "https://github.com/akopchinskiy",
      "followers_url": "https://api.github.com/users/akopchinskiy/followers",
      "following_url": "https://api.github.com/users/akopchinskiy/following{/other_user}",
      "gists_url": "https://api.github.com/users/akopchinskiy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akopchinskiy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akopchinskiy/subscriptions",
      "organizations_url": "https://api.github.com/users/akopchinskiy/orgs",
      "repos_url": "https://api.github.com/users/akopchinskiy/repos",
      "events_url": "https://api.github.com/users/akopchinskiy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akopchinskiy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-09-24T13:26:15Z",
    "updated_at": "2019-10-03T15:23:42Z",
    "closed_at": "2019-10-03T15:23:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Windows:**\r\nhttps://i.imgur.com/Y5l1O6Y.png\r\n\r\n**Linux:**\r\nhttps://i.imgur.com/RLPtmAW.png\r\n\r\n**Code:**\r\n```ts\r\nimport { ContactController } from '../controllers/contact';\r\nimport express = require('express');\r\n\r\n\r\nconst router = express.Router({ mergeParams: true });\r\n\r\n\r\nrouter.get('/:email', async (request, response, next) => {\r\n    try {\r\n        return response.status(200).send(await ContactController.get(request));\r\n    } catch (error) {\r\n        next(error);\r\n    }\r\n});\r\n\r\nexport default router;\r\n```\r\n\r\n**Expected behavior:**\r\n`Found 0 errors.`\r\n\r\n**Actual behavior:**\r\n`Argument of type 'Request<Dictionary<string>>' is not assignable to parameter of type 'Get'.\r\n  Types of property 'params' are incompatible.`\r\n\r\n**Versions:**\r\nWindows:\r\n```\r\ntsc -v  // Version 3.6.3\r\nnode -v  // v10.15.3\r\nts-node -v  // v8.4.1\r\n```\r\nLinux:\r\n```\r\ntsc -v  // Version 3.6.3\r\nnode -v  // v10.16.3\r\nts-node -v  // v8.4.1\r\n```\r\nexpress version: 4.16.9\r\n\r\n**Details:**\r\nSame project, same branch, same commit.\r\nI also found that typings deffers between windows and linux builds:\r\n\r\nLinux:\r\n```ts\r\n\r\nexport interface IRouterMatcher<T> {\r\n    // tslint:disable-next-line no-unnecessary-generics (This generic is meant to be passed explicitly.)\r\n    <P extends Params = ParamsDictionary>(path: PathParams, ...handlers: Array<RequestHandler<P>>): T;\r\n    // tslint:disable-next-line no-unnecessary-generics (This generic is meant to be passed explicitly.)\r\n    <P extends Params = ParamsDictionary>(path: PathParams, ...handlers: Array<RequestHandlerParams<P>>): T;\r\n    (path: PathParams, subApplication: Application): T;\r\n}\r\n```\r\nWindows:\r\n```ts\r\nexport interface IRouterMatcher<T> {\r\n    (path: PathParams, ...handlers: RequestHandler[]): T;\r\n    (path: PathParams, ...handlers: RequestHandlerParams[]): T;\r\n    (path: PathParams, subApplication: Application): T;\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4061/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4061/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4060",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4060/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4060/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4060/events",
    "html_url": "https://github.com/expressjs/express/issues/4060",
    "id": 497610051,
    "node_id": "MDU6SXNzdWU0OTc2MTAwNTE=",
    "number": 4060,
    "title": "Debugging ERR_HTTP_HEADERS_SENT errors in res.render",
    "user": {
      "login": "jstarmx",
      "id": 12033907,
      "node_id": "MDQ6VXNlcjEyMDMzOTA3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12033907?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jstarmx",
      "html_url": "https://github.com/jstarmx",
      "followers_url": "https://api.github.com/users/jstarmx/followers",
      "following_url": "https://api.github.com/users/jstarmx/following{/other_user}",
      "gists_url": "https://api.github.com/users/jstarmx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jstarmx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jstarmx/subscriptions",
      "organizations_url": "https://api.github.com/users/jstarmx/orgs",
      "repos_url": "https://api.github.com/users/jstarmx/repos",
      "events_url": "https://api.github.com/users/jstarmx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jstarmx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2019-09-24T10:49:45Z",
    "updated_at": "2021-10-14T12:13:59Z",
    "closed_at": "2020-04-10T23:12:13Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I work on a large Express app with a lot of async code. Occasionally due to a bug we are calling `res.render` twice, the second of which causes a `ERR_HTTP_HEADERS_SENT:  Cannot set headers after they are sent to the client` error which crashes the app 🤯\r\n\r\nI think that due to the nature of render using an async callback, the stack trace is meaningless in terms of identifying where this errant render call was made. E.g.\r\n\r\n```\r\nError [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client\r\n    at ServerResponse.setHeader (_http_outgoing.js:467:11)\r\n    at ServerResponse.header (/usr/src/app/node_modules/express/lib/response.js:771:10)\r\n    at ServerResponse.send (/usr/src/app/node_modules/express/lib/response.js:170:12)\r\n    at done (/usr/src/app/node_modules/express/lib/response.js:1008:10)\r\n    at render_file (/usr/src/app/node_modules/hbs/lib/hbs.js:49:14)\r\n    at ReadFileContext.callback (/usr/src/app/node_modules/hbs/lib/hbs.js:168:16)\r\n    at FSReqCallback.readFileAfterOpen [as oncomplete] (fs.js:232:13)\r\n```\r\n\r\n🤷‍♂️\r\n\r\nI have managed to debug it by monkey-patching `res.render` and `res.send`:\r\n\r\n```js\r\napp.use((req, res, next) => {\r\n    const render = res.render;\r\n    const send = res.send;\r\n    res.render = function renderWrapper(...args) {\r\n        Error.captureStackTrace(this);\r\n        return render.apply(this, args);\r\n    };\r\n    res.send = function sendWrapper(...args) {\r\n        try {\r\n            send.apply(this, args);\r\n        } catch (err) {\r\n            console.error(`Error in res.send | ${err.code} | ${err.message} | ${res.stack}`);\r\n        }\r\n    };\r\n    next();\r\n});\r\n```\r\n\r\nWhich prevents the crash and changes the logs to:\r\n\r\n```\r\nError in res.send | ERR_HTTP_HEADERS_SENT | Cannot set headers after they are sent to the client | Error\r\n     at ServerResponse.renderWrapper [as render] (/usr/src/app/app/server.js:289:15)\r\n     at index (/usr/src/app/app/controllers/home-controller.js:88:21)\r\n     at processTicksAndRejections (internal/process/task_queues.js:89:5)\r\n```\r\n\r\nThe second last line is the exact place the second `render` call occurred 🎉 \r\n\r\nQuestion is, is this a terrible approach? Is there a better way? Or is there potential to make this kind of debugging easier in Express?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4060/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4060/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4059",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4059/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4059/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4059/events",
    "html_url": "https://github.com/expressjs/express/issues/4059",
    "id": 495978295,
    "node_id": "MDU6SXNzdWU0OTU5NzgyOTU=",
    "number": 4059,
    "title": "Rewriting req.url in router with prefix path results in missing slash (/)",
    "user": {
      "login": "fchu",
      "id": 819179,
      "node_id": "MDQ6VXNlcjgxOTE3OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/819179?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fchu",
      "html_url": "https://github.com/fchu",
      "followers_url": "https://api.github.com/users/fchu/followers",
      "following_url": "https://api.github.com/users/fchu/following{/other_user}",
      "gists_url": "https://api.github.com/users/fchu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fchu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fchu/subscriptions",
      "organizations_url": "https://api.github.com/users/fchu/orgs",
      "repos_url": "https://api.github.com/users/fchu/repos",
      "events_url": "https://api.github.com/users/fchu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fchu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578718,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTg=",
        "url": "https://api.github.com/repos/expressjs/express/labels/investigate",
        "name": "investigate",
        "color": "bfdadc",
        "default": false,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2019-09-19T19:11:35Z",
    "updated_at": "2022-10-15T08:37:10Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello, I've been trying to use a npm module (`connect-history-api-fallback`) and encounter problems that after a lot of debugging I believe boils down to this issue.\r\n\r\nWhen you're in a router that has a mount path, doing a rewrite on the relative root ('') path result in a missing slash, eg with `bug.js` as below\r\n```js\r\nconst express = require('express')\r\nconst app = express()\r\nconst port = 3000\r\n\r\nvar router = express.Router();\r\nrouter.get('/', function (req, res, next) {\r\n    req.url = \"/index.html\"\r\n    next()\r\n});\r\n\r\napp.use('/app', router);\r\n\r\napp.use(function (req, res, next) {\r\n    console.log(\"Rewritten path: \" + req.url)\r\n    res.end()\r\n});\r\n\r\napp.listen(port, () => console.log(`Example app listening on port ${port}!`))\r\n```\r\n\r\nRunning the following commands:\r\n```js\r\nnode bug.js\r\ncurl localhost:3000/app\r\n```\r\nresults in the rewritten path to be `/appindex.html` instead of `/app/index.html`\r\n\r\nEnvironment:\r\n```\r\n\"node\": 12.10.0\r\n\"express\": 4.17.1\r\n```\r\n\r\nThis sounds like a bug to me, but maybe I'm doing something wrong? I'm not too expert in expressjs to know for sure (my hunch is the router code doesn't 'remount' the prefix path properly.\r\n\r\nThanks!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4059/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4059/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4058",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4058/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4058/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4058/events",
    "html_url": "https://github.com/expressjs/express/issues/4058",
    "id": 495288152,
    "node_id": "MDU6SXNzdWU0OTUyODgxNTI=",
    "number": 4058,
    "title": "Documentation for middleware with 4 arguments should be linked from \"writing middleware\"",
    "user": {
      "login": "denilsonsa",
      "id": 121676,
      "node_id": "MDQ6VXNlcjEyMTY3Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/121676?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/denilsonsa",
      "html_url": "https://github.com/denilsonsa",
      "followers_url": "https://api.github.com/users/denilsonsa/followers",
      "following_url": "https://api.github.com/users/denilsonsa/following{/other_user}",
      "gists_url": "https://api.github.com/users/denilsonsa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/denilsonsa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/denilsonsa/subscriptions",
      "organizations_url": "https://api.github.com/users/denilsonsa/orgs",
      "repos_url": "https://api.github.com/users/denilsonsa/repos",
      "events_url": "https://api.github.com/users/denilsonsa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/denilsonsa/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-09-18T15:08:42Z",
    "updated_at": "2019-09-18T15:10:30Z",
    "closed_at": "2019-09-18T15:10:29Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "At <http://expressjs.com/en/guide/writing-middleware.html>, I see no mention of the error handling middleware, or even that 4-argument middleware exists. That page should have a mention (and a link to full documentation) just like how [using middleware](http://expressjs.com/en/guide/using-middleware.html#middleware.error-handling) and [app.use()](http://expressjs.com/en/api.html#app.use) already have.\r\n\r\n---\r\n\r\n**Bonus feedback** (that should probably be a separate issue anyway):\r\n\r\n<https://dev.to/nedsoft/central-error-handling-in-express-3aej> - This third-party page notes that  *“The error-handling middleware must be the last among other middleware and routes for it to function correctly.”*. If this note is so important, I think it should exist in the official documentation (or it should be more visible).",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4058/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4058/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4057",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4057/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4057/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4057/events",
    "html_url": "https://github.com/expressjs/express/pull/4057",
    "id": 494314075,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzE4MDkzNzA4",
    "number": 4057,
    "title": "Fix-[Request] Use `app.set` method to get settings",
    "user": {
      "login": "pandres95",
      "id": 2502577,
      "node_id": "MDQ6VXNlcjI1MDI1Nzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2502577?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pandres95",
      "html_url": "https://github.com/pandres95",
      "followers_url": "https://api.github.com/users/pandres95/followers",
      "following_url": "https://api.github.com/users/pandres95/following{/other_user}",
      "gists_url": "https://api.github.com/users/pandres95/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pandres95/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pandres95/subscriptions",
      "organizations_url": "https://api.github.com/users/pandres95/orgs",
      "repos_url": "https://api.github.com/users/pandres95/repos",
      "events_url": "https://api.github.com/users/pandres95/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pandres95/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55587817,
        "node_id": "MDU6TGFiZWw1NTU4NzgxNw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/needs%20tests",
        "name": "needs tests",
        "color": "e11d21",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-09-16T22:51:56Z",
    "updated_at": "2019-09-16T23:30:59Z",
    "closed_at": "2019-09-16T23:10:27Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4057",
      "html_url": "https://github.com/expressjs/express/pull/4057",
      "diff_url": "https://github.com/expressjs/express/pull/4057.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4057.patch",
      "merged_at": null
    },
    "body": "Closes #4056 ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4057/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4057/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4056",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4056/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4056/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4056/events",
    "html_url": "https://github.com/expressjs/express/issues/4056",
    "id": 494312774,
    "node_id": "MDU6SXNzdWU0OTQzMTI3NzQ=",
    "number": 4056,
    "title": "req.protocol: trust is not a function",
    "user": {
      "login": "pandres95",
      "id": 2502577,
      "node_id": "MDQ6VXNlcjI1MDI1Nzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2502577?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pandres95",
      "html_url": "https://github.com/pandres95",
      "followers_url": "https://api.github.com/users/pandres95/followers",
      "following_url": "https://api.github.com/users/pandres95/following{/other_user}",
      "gists_url": "https://api.github.com/users/pandres95/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pandres95/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pandres95/subscriptions",
      "organizations_url": "https://api.github.com/users/pandres95/orgs",
      "repos_url": "https://api.github.com/users/pandres95/repos",
      "events_url": "https://api.github.com/users/pandres95/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pandres95/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-09-16T22:47:34Z",
    "updated_at": "2019-09-16T23:21:55Z",
    "closed_at": "2019-09-16T23:10:14Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When trying to the the property `protocol` (maybe by a logger like [morgan](https://npm.im/morgan) or [zipkin](https://npm.im/zipkin), I'm getting a failure similar to this one:\r\n\r\n```javascript\r\nTypeError: trust is not a function\r\n    at IncomingMessage.protocol (/Users/pandres95/Documents/Valiu/Development/Projects/APIs/api/node_modules/express/lib/request.js:314:8)\r\n    at formatRequestUrl (/Users/pandres95/Documents/Valiu/Development/Projects/APIs/api/node_modules/zipkin-instrumentation-express/lib/expressMiddleware.js:20:19)\r\n    at /Users/pandres95/Documents/Valiu/Development/Projects/APIs/api/node_modules/zipkin-instrumentation-express/lib/expressMiddleware.js:69:58\r\n    ...\r\n    at IncomingMessage.emit (events.js:214:15)\r\n    at IncomingMessage.EventEmitter.emit (domain.js:476:20)\r\n    at endReadableNT (_stream_readable.js:1178:12)\r\n    at processTicksAndRejections (internal/process/task_queues.js:80:21)\r\n```\r\n\r\n## Context\r\n\r\nWhen debugging, I found out that, despite `trust` should be defined as a function that returns `false`, is getting an undefined value. Also found that `this.app.get` function is not the same as the `#get` found in [`lib/application.js:472`](https;//github.com/expressjs/express/blob/master/lib/application.js#L472), but the one found at [`request.js:64`](https;//github.com/expressjs/express/blob/master/lib/request.js#L64). The latter, however isn't calling to the `#set` method, as the one in [`application.js:476`](https;//github.com/expressjs/express/blob/master/lib/request.js#L476). The request is being constructed with the `settings` field, as well as the `#set` method declared within the `Application` class.\r\n\r\n## Steps to reproduce\r\n\r\n1. Install the [`zipkin`](https://npm.im/zipkin) client library using the [`zipkin-instrumentation-express`](https://npm.im/zipkin-instrumentation-express) library.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4056/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4056/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4055",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4055/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4055/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4055/events",
    "html_url": "https://github.com/expressjs/express/pull/4055",
    "id": 493840825,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzE3NzExNTg4",
    "number": 4055,
    "title": "docs: add a triage section",
    "user": {
      "login": "gireeshpunathil",
      "id": 6447530,
      "node_id": "MDQ6VXNlcjY0NDc1MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6447530?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gireeshpunathil",
      "html_url": "https://github.com/gireeshpunathil",
      "followers_url": "https://api.github.com/users/gireeshpunathil/followers",
      "following_url": "https://api.github.com/users/gireeshpunathil/following{/other_user}",
      "gists_url": "https://api.github.com/users/gireeshpunathil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gireeshpunathil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gireeshpunathil/subscriptions",
      "organizations_url": "https://api.github.com/users/gireeshpunathil/orgs",
      "repos_url": "https://api.github.com/users/gireeshpunathil/repos",
      "events_url": "https://api.github.com/users/gireeshpunathil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gireeshpunathil/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 14,
    "created_at": "2019-09-16T04:28:29Z",
    "updated_at": "2020-05-11T05:05:06Z",
    "closed_at": "2020-05-11T05:05:03Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4055",
      "html_url": "https://github.com/expressjs/express/pull/4055",
      "diff_url": "https://github.com/expressjs/express/pull/4055.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4055.patch",
      "merged_at": "2020-05-11T05:05:06Z"
    },
    "body": "ref: https://github.com/expressjs/discussions/issues/92\r\n\r\nthanks in advance!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4055/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4055/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4054",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4054/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4054/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4054/events",
    "html_url": "https://github.com/expressjs/express/issues/4054",
    "id": 493686129,
    "node_id": "MDU6SXNzdWU0OTM2ODYxMjk=",
    "number": 4054,
    "title": "[HELP] patch returns 400 bad request",
    "user": {
      "login": "aprilmintacpineda",
      "id": 21032419,
      "node_id": "MDQ6VXNlcjIxMDMyNDE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/21032419?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aprilmintacpineda",
      "html_url": "https://github.com/aprilmintacpineda",
      "followers_url": "https://api.github.com/users/aprilmintacpineda/followers",
      "following_url": "https://api.github.com/users/aprilmintacpineda/following{/other_user}",
      "gists_url": "https://api.github.com/users/aprilmintacpineda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aprilmintacpineda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aprilmintacpineda/subscriptions",
      "organizations_url": "https://api.github.com/users/aprilmintacpineda/orgs",
      "repos_url": "https://api.github.com/users/aprilmintacpineda/repos",
      "events_url": "https://api.github.com/users/aprilmintacpineda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aprilmintacpineda/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-09-15T02:13:02Z",
    "updated_at": "2019-09-15T02:16:08Z",
    "closed_at": "2019-09-15T02:16:07Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "![image](https://user-images.githubusercontent.com/21032419/64915743-f237e780-d7a0-11e9-9e4c-d52ced0d5ac6.png)\r\n\r\n**server.js**\r\n\r\n```js\r\napp.patch('/api/test', () => {\r\n  console.log('hit');\r\n});\r\n```\r\n\r\n**frontend**\r\n\r\n```js\r\nfetch('/api/test', {\r\n  method: 'patch'\r\n});\r\n```\r\n\r\nPOST, PUT, GET all works well though...\r\n\r\nexpress^4.17.1\r\n\r\nI think I may be doing it incorrectly, I can't find any instructions as to how I should handle patch requests...",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4054/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4054/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4053",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4053/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4053/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4053/events",
    "html_url": "https://github.com/expressjs/express/issues/4053",
    "id": 493615818,
    "node_id": "MDU6SXNzdWU0OTM2MTU4MTg=",
    "number": 4053,
    "title": "override qs module default value",
    "user": {
      "login": "natarajanmca11",
      "id": 9244766,
      "node_id": "MDQ6VXNlcjkyNDQ3NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9244766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/natarajanmca11",
      "html_url": "https://github.com/natarajanmca11",
      "followers_url": "https://api.github.com/users/natarajanmca11/followers",
      "following_url": "https://api.github.com/users/natarajanmca11/following{/other_user}",
      "gists_url": "https://api.github.com/users/natarajanmca11/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/natarajanmca11/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/natarajanmca11/subscriptions",
      "organizations_url": "https://api.github.com/users/natarajanmca11/orgs",
      "repos_url": "https://api.github.com/users/natarajanmca11/repos",
      "events_url": "https://api.github.com/users/natarajanmca11/events{/privacy}",
      "received_events_url": "https://api.github.com/users/natarajanmca11/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-09-14T11:58:08Z",
    "updated_at": "2019-09-16T14:49:55Z",
    "closed_at": "2019-09-14T14:04:51Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am not able to send more than 20 elements in the array. in my case, it has 24 elements. Is there any way to increase the arrayLimit value?\r\n```javascript\r\nfunction parseExtendedQueryString(str) {\r\n  return qs.parse(str, {\r\n    allowPrototypes: true,\r\n    arrayLimit: 100 // Need to be like this. \r\n  });\r\n}\r\n```\r\n\r\nhttps://github.com/expressjs/express/blob/f4120a645301366891775d1f03925449239a2cb7/lib/utils.js#L243\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4053/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4053/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4052",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4052/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4052/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4052/events",
    "html_url": "https://github.com/expressjs/express/pull/4052",
    "id": 493523916,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzE3NDg4Nzkx",
    "number": 4052,
    "title": "5.0",
    "user": {
      "login": "Gurshant",
      "id": 55114429,
      "node_id": "MDQ6VXNlcjU1MTE0NDI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/55114429?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Gurshant",
      "html_url": "https://github.com/Gurshant",
      "followers_url": "https://api.github.com/users/Gurshant/followers",
      "following_url": "https://api.github.com/users/Gurshant/following{/other_user}",
      "gists_url": "https://api.github.com/users/Gurshant/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Gurshant/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Gurshant/subscriptions",
      "organizations_url": "https://api.github.com/users/Gurshant/orgs",
      "repos_url": "https://api.github.com/users/Gurshant/repos",
      "events_url": "https://api.github.com/users/Gurshant/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Gurshant/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-09-13T21:28:42Z",
    "updated_at": "2019-09-13T21:29:37Z",
    "closed_at": "2019-09-13T21:29:30Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4052",
      "html_url": "https://github.com/expressjs/express/pull/4052",
      "diff_url": "https://github.com/expressjs/express/pull/4052.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4052.patch",
      "merged_at": null
    },
    "body": " ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4052/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4052/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4051",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4051/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4051/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4051/events",
    "html_url": "https://github.com/expressjs/express/issues/4051",
    "id": 493074335,
    "node_id": "MDU6SXNzdWU0OTMwNzQzMzU=",
    "number": 4051,
    "title": "400 Bad Request closing connection prematurely",
    "user": {
      "login": "Stroemgren",
      "id": 2242472,
      "node_id": "MDQ6VXNlcjIyNDI0NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2242472?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Stroemgren",
      "html_url": "https://github.com/Stroemgren",
      "followers_url": "https://api.github.com/users/Stroemgren/followers",
      "following_url": "https://api.github.com/users/Stroemgren/following{/other_user}",
      "gists_url": "https://api.github.com/users/Stroemgren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Stroemgren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Stroemgren/subscriptions",
      "organizations_url": "https://api.github.com/users/Stroemgren/orgs",
      "repos_url": "https://api.github.com/users/Stroemgren/repos",
      "events_url": "https://api.github.com/users/Stroemgren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Stroemgren/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2019-09-12T23:32:16Z",
    "updated_at": "2019-09-13T00:44:02Z",
    "closed_at": "2019-09-13T00:16:27Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have an issue with Express running behind an Nginx proxy.\r\n\r\nIt's an API receiving about a 1 million requests a day and some of these requests will always be malformed. An example is a GET parameter with an unencoded space. This will make Express throw a 400 request instantly. \r\n\r\nNow, my Nginx proxy will error out with \"upstream prematurely closed connection while reading response header from upstream\". Upstream, in this case, being the express app.\r\n\r\nI have 5 instances of the Express app running, but since Nginx never gets to read this 400 response properly, it will try the same request on the next instance, in turn taking down all 5 instances.\r\n\r\nIs there any way to override how Express handles these validation errors? Is it a bug? Or maybe I should configure Nginx differently? In which case I know I'm not in the right place.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4051/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4051/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4050",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4050/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4050/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4050/events",
    "html_url": "https://github.com/expressjs/express/pull/4050",
    "id": 492649790,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzE2NzgwNzc3",
    "number": 4050,
    "title": "Improve Readme",
    "user": {
      "login": "yanokenken",
      "id": 32897687,
      "node_id": "MDQ6VXNlcjMyODk3Njg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/32897687?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yanokenken",
      "html_url": "https://github.com/yanokenken",
      "followers_url": "https://api.github.com/users/yanokenken/followers",
      "following_url": "https://api.github.com/users/yanokenken/following{/other_user}",
      "gists_url": "https://api.github.com/users/yanokenken/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yanokenken/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yanokenken/subscriptions",
      "organizations_url": "https://api.github.com/users/yanokenken/orgs",
      "repos_url": "https://api.github.com/users/yanokenken/repos",
      "events_url": "https://api.github.com/users/yanokenken/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yanokenken/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 11,
    "created_at": "2019-09-12T08:05:38Z",
    "updated_at": "2020-03-25T20:56:33Z",
    "closed_at": "2020-03-25T20:55:57Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4050",
      "html_url": "https://github.com/expressjs/express/pull/4050",
      "diff_url": "https://github.com/expressjs/express/pull/4050.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4050.patch",
      "merged_at": "2020-03-25T20:55:57Z"
    },
    "body": "This PR is created from #4049 \r\nAdded explanation about `$ npm init`.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4050/reactions",
      "total_count": 3,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 2,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4050/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4049",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4049/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4049/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4049/events",
    "html_url": "https://github.com/expressjs/express/issues/4049",
    "id": 492181359,
    "node_id": "MDU6SXNzdWU0OTIxODEzNTk=",
    "number": 4049,
    "title": "About `npm install express` in Readme.md",
    "user": {
      "login": "yanokenken",
      "id": 32897687,
      "node_id": "MDQ6VXNlcjMyODk3Njg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/32897687?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yanokenken",
      "html_url": "https://github.com/yanokenken",
      "followers_url": "https://api.github.com/users/yanokenken/followers",
      "following_url": "https://api.github.com/users/yanokenken/following{/other_user}",
      "gists_url": "https://api.github.com/users/yanokenken/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yanokenken/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yanokenken/subscriptions",
      "organizations_url": "https://api.github.com/users/yanokenken/orgs",
      "repos_url": "https://api.github.com/users/yanokenken/repos",
      "events_url": "https://api.github.com/users/yanokenken/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yanokenken/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 18291,
        "node_id": "MDU6TGFiZWwxODI5MQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1",
        "default": false,
        "description": null
      },
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 566325046,
        "node_id": "MDU6TGFiZWw1NjYzMjUwNDY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/good%20first%20contribution",
        "name": "good first contribution",
        "color": "159818",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2019-09-11T11:34:13Z",
    "updated_at": "2020-02-20T05:07:04Z",
    "closed_at": "2020-02-20T05:07:04Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "If you follow the readme procedure, the following error will occur in the first npm install express.\r\n```\r\nsaveError ENOENT: no such file or directory, open '/xxx/xxx/package.json'\r\n```\r\nAs you know, the cause is `package.json` does not exist.\r\nOther users seem to have a similar error, so it seems better to add `npm init` to the readme.\r\nOr I thought it would be nice to bring a link `Please follow the installation guide for details` before `npm install express`.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4049/reactions",
      "total_count": 5,
      "+1": 2,
      "-1": 0,
      "laugh": 3,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4049/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4048",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4048/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4048/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4048/events",
    "html_url": "https://github.com/expressjs/express/issues/4048",
    "id": 491308644,
    "node_id": "MDU6SXNzdWU0OTEzMDg2NDQ=",
    "number": 4048,
    "title": "Content type for .mem files is always null",
    "user": {
      "login": "lbittner-pdftron",
      "id": 30271920,
      "node_id": "MDQ6VXNlcjMwMjcxOTIw",
      "avatar_url": "https://avatars.githubusercontent.com/u/30271920?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lbittner-pdftron",
      "html_url": "https://github.com/lbittner-pdftron",
      "followers_url": "https://api.github.com/users/lbittner-pdftron/followers",
      "following_url": "https://api.github.com/users/lbittner-pdftron/following{/other_user}",
      "gists_url": "https://api.github.com/users/lbittner-pdftron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lbittner-pdftron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lbittner-pdftron/subscriptions",
      "organizations_url": "https://api.github.com/users/lbittner-pdftron/orgs",
      "repos_url": "https://api.github.com/users/lbittner-pdftron/repos",
      "events_url": "https://api.github.com/users/lbittner-pdftron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lbittner-pdftron/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-09-09T20:26:49Z",
    "updated_at": "2019-09-09T20:45:20Z",
    "closed_at": "2019-09-09T20:45:20Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello,\r\n\r\nI'm trying to use express to serve some `.mem` (which are either Brotli or gzip encoded) files, but no matter what I do, the `Content-Type` header is always `null`:\r\n\r\n```\r\nContent-Type: null; charset=UTF-8\r\n```\r\n\r\nI've tried writing middleware to set the Content type for these files, but it seems to get overwritten or something by Express.\r\n\r\nIs there anything I can do to set the proper headers here?\r\n\r\nThanks!\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4048/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4048/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4047",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4047/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4047/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4047/events",
    "html_url": "https://github.com/expressjs/express/pull/4047",
    "id": 490703657,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzE1MjQwNzgx",
    "number": 4047,
    "title": "fg",
    "user": {
      "login": "raselmahmudr",
      "id": 42914006,
      "node_id": "MDQ6VXNlcjQyOTE0MDA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/42914006?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raselmahmudr",
      "html_url": "https://github.com/raselmahmudr",
      "followers_url": "https://api.github.com/users/raselmahmudr/followers",
      "following_url": "https://api.github.com/users/raselmahmudr/following{/other_user}",
      "gists_url": "https://api.github.com/users/raselmahmudr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raselmahmudr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raselmahmudr/subscriptions",
      "organizations_url": "https://api.github.com/users/raselmahmudr/orgs",
      "repos_url": "https://api.github.com/users/raselmahmudr/repos",
      "events_url": "https://api.github.com/users/raselmahmudr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raselmahmudr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-09-08T02:58:59Z",
    "updated_at": "2019-09-08T03:05:53Z",
    "closed_at": "2019-09-08T03:05:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4047",
      "html_url": "https://github.com/expressjs/express/pull/4047",
      "diff_url": "https://github.com/expressjs/express/pull/4047.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4047.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4047/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4047/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4046",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4046/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4046/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4046/events",
    "html_url": "https://github.com/expressjs/express/pull/4046",
    "id": 490350355,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzE0OTczNDU3",
    "number": 4046,
    "title": "[Deleted]",
    "user": {
      "login": "sgb-io",
      "id": 1183773,
      "node_id": "MDQ6VXNlcjExODM3NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1183773?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sgb-io",
      "html_url": "https://github.com/sgb-io",
      "followers_url": "https://api.github.com/users/sgb-io/followers",
      "following_url": "https://api.github.com/users/sgb-io/following{/other_user}",
      "gists_url": "https://api.github.com/users/sgb-io/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sgb-io/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sgb-io/subscriptions",
      "organizations_url": "https://api.github.com/users/sgb-io/orgs",
      "repos_url": "https://api.github.com/users/sgb-io/repos",
      "events_url": "https://api.github.com/users/sgb-io/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sgb-io/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-09-06T14:12:37Z",
    "updated_at": "2019-10-03T15:47:09Z",
    "closed_at": "2019-09-06T14:12:48Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4046",
      "html_url": "https://github.com/expressjs/express/pull/4046",
      "diff_url": "https://github.com/expressjs/express/pull/4046.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4046.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4046/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4046/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4044",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4044/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4044/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4044/events",
    "html_url": "https://github.com/expressjs/express/pull/4044",
    "id": 488310008,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzEzMzYwMTMy",
    "number": 4044,
    "title": "added the ability to for app.set to accept a json of settings",
    "user": {
      "login": "ahmedHusseinF",
      "id": 4062161,
      "node_id": "MDQ6VXNlcjQwNjIxNjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4062161?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ahmedHusseinF",
      "html_url": "https://github.com/ahmedHusseinF",
      "followers_url": "https://api.github.com/users/ahmedHusseinF/followers",
      "following_url": "https://api.github.com/users/ahmedHusseinF/following{/other_user}",
      "gists_url": "https://api.github.com/users/ahmedHusseinF/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ahmedHusseinF/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ahmedHusseinF/subscriptions",
      "organizations_url": "https://api.github.com/users/ahmedHusseinF/orgs",
      "repos_url": "https://api.github.com/users/ahmedHusseinF/repos",
      "events_url": "https://api.github.com/users/ahmedHusseinF/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ahmedHusseinF/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-09-02T20:23:02Z",
    "updated_at": "2022-10-06T14:16:29Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4044",
      "html_url": "https://github.com/expressjs/express/pull/4044",
      "diff_url": "https://github.com/expressjs/express/pull/4044.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4044.patch",
      "merged_at": null
    },
    "body": "fixes #3997",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4044/reactions",
      "total_count": 3,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4044/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4043",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4043/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4043/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4043/events",
    "html_url": "https://github.com/expressjs/express/pull/4043",
    "id": 487925523,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzEzMDYxMDY3",
    "number": 4043,
    "title": "chore(deps): upgrade array-flatten",
    "user": {
      "login": "chyzwar",
      "id": 5990767,
      "node_id": "MDQ6VXNlcjU5OTA3Njc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5990767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chyzwar",
      "html_url": "https://github.com/chyzwar",
      "followers_url": "https://api.github.com/users/chyzwar/followers",
      "following_url": "https://api.github.com/users/chyzwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/chyzwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chyzwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chyzwar/subscriptions",
      "organizations_url": "https://api.github.com/users/chyzwar/orgs",
      "repos_url": "https://api.github.com/users/chyzwar/repos",
      "events_url": "https://api.github.com/users/chyzwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chyzwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 133578716,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/deps",
        "name": "deps",
        "color": "444444",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-09-01T20:06:37Z",
    "updated_at": "2019-09-01T20:10:20Z",
    "closed_at": "2019-09-01T20:09:18Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4043",
      "html_url": "https://github.com/expressjs/express/pull/4043",
      "diff_url": "https://github.com/expressjs/express/pull/4043.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4043.patch",
      "merged_at": null
    },
    "body": "Upgrade array-flatten. Other packages in my node_modules already use v2. ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4043/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4043/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4042",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4042/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4042/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4042/events",
    "html_url": "https://github.com/expressjs/express/issues/4042",
    "id": 487827866,
    "node_id": "MDU6SXNzdWU0ODc4Mjc4NjY=",
    "number": 4042,
    "title": "v4. How to rewrite req.path",
    "user": {
      "login": "PinkyRabbit",
      "id": 11446934,
      "node_id": "MDQ6VXNlcjExNDQ2OTM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/11446934?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PinkyRabbit",
      "html_url": "https://github.com/PinkyRabbit",
      "followers_url": "https://api.github.com/users/PinkyRabbit/followers",
      "following_url": "https://api.github.com/users/PinkyRabbit/following{/other_user}",
      "gists_url": "https://api.github.com/users/PinkyRabbit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PinkyRabbit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PinkyRabbit/subscriptions",
      "organizations_url": "https://api.github.com/users/PinkyRabbit/orgs",
      "repos_url": "https://api.github.com/users/PinkyRabbit/repos",
      "events_url": "https://api.github.com/users/PinkyRabbit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PinkyRabbit/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2019-09-01T01:25:13Z",
    "updated_at": "2019-09-02T18:27:40Z",
    "closed_at": "2019-09-02T07:05:01Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello all! In one case with regexp `req.path` param rewrited to `/`. It is application logic. So I want to return it to originalUrl value. How I can do this?\r\n\r\nThank you!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4042/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4042/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4041",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4041/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4041/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4041/events",
    "html_url": "https://github.com/expressjs/express/issues/4041",
    "id": 487668333,
    "node_id": "MDU6SXNzdWU0ODc2NjgzMzM=",
    "number": 4041,
    "title": "Using Express to serve Gatsby files",
    "user": {
      "login": "alexpreiss",
      "id": 42228175,
      "node_id": "MDQ6VXNlcjQyMjI4MTc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/42228175?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexpreiss",
      "html_url": "https://github.com/alexpreiss",
      "followers_url": "https://api.github.com/users/alexpreiss/followers",
      "following_url": "https://api.github.com/users/alexpreiss/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexpreiss/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexpreiss/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexpreiss/subscriptions",
      "organizations_url": "https://api.github.com/users/alexpreiss/orgs",
      "repos_url": "https://api.github.com/users/alexpreiss/repos",
      "events_url": "https://api.github.com/users/alexpreiss/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexpreiss/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 548077790,
        "node_id": "MDU6TGFiZWw1NDgwNzc3OTA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:express-static",
        "name": "module:express-static",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-08-30T20:58:03Z",
    "updated_at": "2019-08-31T17:00:58Z",
    "closed_at": "2019-08-30T21:41:33Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "I have an application using Gatsby and Express. Right now, Gatsby generates files to the \"public\" folder and I use express.static() to dynamically serve the files. The issue is that Gatsby generates the HTML files to public/[name]/index.html but Express only checks for the index.html at a path if the URL has a trailing slash. So if you go to 'www.site.com/about' it'll flash a 404 page, so instead, you have to go to 'www.site.com/about/'.\r\n\r\nIn the past, I've tried forcing a trailing slash on each individual page (code below). This worked for a time and still does for most pages. However, for pages generated with gatsby-node, it does not let me force a trailing slash and still flashes a 404.\r\n\r\n```js\r\n  if (isPage(pathname)) {\r\n    return res.redirect(301, pathname + '/' + (search || ''))\r\n  }\r\n```\r\n\r\nIt would be great if I could create some sort of middleware for express.static that checks for and index.html at /about or maybe an entirely different way to approach this.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4041/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4041/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4040",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4040/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4040/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4040/events",
    "html_url": "https://github.com/expressjs/express/pull/4040",
    "id": 487107965,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzEyNDM4MjQ5",
    "number": 4040,
    "title": "added the ability to for app.set to accept a json of settings",
    "user": {
      "login": "ahmedHusseinF",
      "id": 4062161,
      "node_id": "MDQ6VXNlcjQwNjIxNjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4062161?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ahmedHusseinF",
      "html_url": "https://github.com/ahmedHusseinF",
      "followers_url": "https://api.github.com/users/ahmedHusseinF/followers",
      "following_url": "https://api.github.com/users/ahmedHusseinF/following{/other_user}",
      "gists_url": "https://api.github.com/users/ahmedHusseinF/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ahmedHusseinF/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ahmedHusseinF/subscriptions",
      "organizations_url": "https://api.github.com/users/ahmedHusseinF/orgs",
      "repos_url": "https://api.github.com/users/ahmedHusseinF/repos",
      "events_url": "https://api.github.com/users/ahmedHusseinF/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ahmedHusseinF/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-08-29T18:21:28Z",
    "updated_at": "2019-09-02T22:23:38Z",
    "closed_at": "2019-09-02T20:18:58Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4040",
      "html_url": "https://github.com/expressjs/express/pull/4040",
      "diff_url": "https://github.com/expressjs/express/pull/4040.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4040.patch",
      "merged_at": null
    },
    "body": "fixes #3997 ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4040/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4040/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4039",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4039/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4039/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4039/events",
    "html_url": "https://github.com/expressjs/express/issues/4039",
    "id": 486148614,
    "node_id": "MDU6SXNzdWU0ODYxNDg2MTQ=",
    "number": 4039,
    "title": "Add Ethereum name or address to package.json",
    "user": {
      "login": "lastmjs",
      "id": 7000719,
      "node_id": "MDQ6VXNlcjcwMDA3MTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7000719?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lastmjs",
      "html_url": "https://github.com/lastmjs",
      "followers_url": "https://api.github.com/users/lastmjs/followers",
      "following_url": "https://api.github.com/users/lastmjs/following{/other_user}",
      "gists_url": "https://api.github.com/users/lastmjs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lastmjs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lastmjs/subscriptions",
      "organizations_url": "https://api.github.com/users/lastmjs/orgs",
      "repos_url": "https://api.github.com/users/lastmjs/repos",
      "events_url": "https://api.github.com/users/lastmjs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lastmjs/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-08-28T04:04:20Z",
    "updated_at": "2019-08-28T16:38:36Z",
    "closed_at": "2019-08-28T09:09:36Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I would like to see an Ethereum name or address added to the ethereum field of the package.json file. This will allow consumers of the project to know a canonical address to send funds to. For example, I'm building an application that will allow developers to automatically donate ETH to all of their npm dependencies that have Ethereum addresses in their package.json files: https://sustainus.io",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4039/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4039/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4038",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4038/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4038/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4038/events",
    "html_url": "https://github.com/expressjs/express/issues/4038",
    "id": 485775655,
    "node_id": "MDU6SXNzdWU0ODU3NzU2NTU=",
    "number": 4038,
    "title": "Sending `204 NO CONTENT` should not require an empty object",
    "user": {
      "login": "leonheess",
      "id": 13834296,
      "node_id": "MDQ6VXNlcjEzODM0Mjk2",
      "avatar_url": "https://avatars.githubusercontent.com/u/13834296?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonheess",
      "html_url": "https://github.com/leonheess",
      "followers_url": "https://api.github.com/users/leonheess/followers",
      "following_url": "https://api.github.com/users/leonheess/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonheess/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonheess/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonheess/subscriptions",
      "organizations_url": "https://api.github.com/users/leonheess/orgs",
      "repos_url": "https://api.github.com/users/leonheess/repos",
      "events_url": "https://api.github.com/users/leonheess/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonheess/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-08-27T12:20:45Z",
    "updated_at": "2019-08-27T15:02:53Z",
    "closed_at": "2019-08-27T15:02:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "If Chrome receives a `200 OK` with `Content-Length=0` as a response to a fetch it logs `Fetch failed` into the Developer-Console. To mitigate this you can either send back random characters or `204 NO CONTENT`. Express however requires you to send along an empty object (see code below). This should not be the case.\r\n\r\nRelated Issue: #2504\r\nDiscovered here: https://stackoverflow.com/q/57477805/7910454\r\nLearn more about HTTP-Status-Codes: https://httpstatuses.com\r\nVersions (Node and Express): latest\r\n\r\n```javascript\r\napp.use(express.static('public'));\r\napp.use(express.urlencoded({extended: true}));\r\napp.use(express.json());\r\n\r\napp.post('/', upload.none(), (req, res) => {\r\n    console.log(`Request received: ${JSON.stringify(req.body)}`);\r\n    res.status(204).send({});\r\n});\r\n```\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4038/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4038/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4037",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4037/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4037/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4037/events",
    "html_url": "https://github.com/expressjs/express/issues/4037",
    "id": 485564059,
    "node_id": "MDU6SXNzdWU0ODU1NjQwNTk=",
    "number": 4037,
    "title": "but still getting from emmory",
    "user": {
      "login": "sean-codes",
      "id": 21677355,
      "node_id": "MDQ6VXNlcjIxNjc3MzU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/21677355?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sean-codes",
      "html_url": "https://github.com/sean-codes",
      "followers_url": "https://api.github.com/users/sean-codes/followers",
      "following_url": "https://api.github.com/users/sean-codes/following{/other_user}",
      "gists_url": "https://api.github.com/users/sean-codes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sean-codes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sean-codes/subscriptions",
      "organizations_url": "https://api.github.com/users/sean-codes/orgs",
      "repos_url": "https://api.github.com/users/sean-codes/repos",
      "events_url": "https://api.github.com/users/sean-codes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sean-codes/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-08-27T03:36:52Z",
    "updated_at": "2019-08-27T03:36:56Z",
    "closed_at": "2019-08-27T03:36:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4037/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4037/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4036",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4036/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4036/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4036/events",
    "html_url": "https://github.com/expressjs/express/issues/4036",
    "id": 485541237,
    "node_id": "MDU6SXNzdWU0ODU1NDEyMzc=",
    "number": 4036,
    "title": "sqlite3 package for sequelize.js requires to be installed frequently",
    "user": {
      "login": "atxiaoxian",
      "id": 26647696,
      "node_id": "MDQ6VXNlcjI2NjQ3Njk2",
      "avatar_url": "https://avatars.githubusercontent.com/u/26647696?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/atxiaoxian",
      "html_url": "https://github.com/atxiaoxian",
      "followers_url": "https://api.github.com/users/atxiaoxian/followers",
      "following_url": "https://api.github.com/users/atxiaoxian/following{/other_user}",
      "gists_url": "https://api.github.com/users/atxiaoxian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/atxiaoxian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/atxiaoxian/subscriptions",
      "organizations_url": "https://api.github.com/users/atxiaoxian/orgs",
      "repos_url": "https://api.github.com/users/atxiaoxian/repos",
      "events_url": "https://api.github.com/users/atxiaoxian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/atxiaoxian/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-08-27T02:05:50Z",
    "updated_at": "2019-08-27T02:52:37Z",
    "closed_at": "2019-08-27T02:52:36Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "here is my stack\r\n```\r\n> myapp@0.0.0 start /home/xiaoxian/source/iAlarm/iAlarm-2019-08-26/server\r\n> node ./bin/www\r\n\r\n/home/xiaoxian/source/iAlarm/iAlarm-2019-08-26/server/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:81\r\n        throw new Error(`Please install ${moduleName} package manually`);\r\n        ^\r\n\r\nError: Please install sqlite3 package manually\r\n    at ConnectionManager._loadDialectModule (/home/xiaoxian/source/iAlarm/iAlarm-2019-08-26/server/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:81:15)\r\n    at new ConnectionManager (/home/xiaoxian/source/iAlarm/iAlarm-2019-08-26/server/node_modules/sequelize/lib/dialects/sqlite/connection-manager.js:22:21)\r\n    at new SqliteDialect (/home/xiaoxian/source/iAlarm/iAlarm-2019-08-26/server/node_modules/sequelize/lib/dialects/sqlite/index.js:14:30)\r\n    at new Sequelize (/home/xiaoxian/source/iAlarm/iAlarm-2019-08-26/server/node_modules/sequelize/lib/sequelize.js:320:20)\r\n    at Object.<anonymous> (/home/xiaoxian/source/iAlarm/iAlarm-2019-08-26/server/db/db.js:3:19)\r\n    at Module._compile (module.js:652:30)\r\n    at loader (/home/xiaoxian/source/iAlarm/iAlarm-2019-08-26/server/node_modules/babel-register/lib/node.js:144:5)\r\n    at Object.require.extensions.(anonymous function) [as .js] (/home/xiaoxian/source/iAlarm/iAlarm-2019-08-26/server/node_modules/babel-register/lib/node.js:154:7)\r\n    at Module.load (module.js:565:32)\r\n    at tryModuleLoad (module.js:505:12)\r\n    at Function.Module._load (module.js:497:3)\r\n    at Module.require (module.js:596:17)\r\n    at require (internal/module.js:11:18)\r\n    at Object.<anonymous> (/home/xiaoxian/source/iAlarm/iAlarm-2019-08-26/server/db/models/IPConfig.js:3:13)\r\n    at Module._compile (module.js:652:30)\r\n    at loader (/home/xiaoxian/source/iAlarm/iAlarm-2019-08-26/server/node_modules/babel-register/lib/node.js:144:5)\r\n    at Object.require.extensions.(anonymous function) [as .js] (/home/xiaoxian/source/iAlarm/iAlarm-2019-08-26/server/node_modules/babel-register/lib/node.js:154:7)\r\n    at Module.load (module.js:565:32)\r\n    at tryModuleLoad (module.js:505:12)\r\n    at Function.Module._load (module.js:497:3)\r\n    at Module.require (module.js:596:17)\r\n    at require (internal/module.js:11:18)\r\nnpm ERR! code ELIFECYCLE\r\nnpm ERR! errno 1\r\nnpm ERR! myapp@0.0.0 start: `node ./bin/www`\r\nnpm ERR! Exit status 1\r\nnpm ERR! \r\nnpm ERR! Failed at the myapp@0.0.0 start script.\r\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\r\n\r\nnpm ERR! A complete log of this run can be found in:\r\nnpm ERR!     /home/xiaoxian/.npm/_logs/2019-08-27T01_35_51_998Z-debug.log\r\n```\r\nespress: 4.16.1\r\nsqlite3:  4.1.0\r\nsequelize: 5.15.1\r\nos: centos7\r\n\r\nthanks for you help",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4036/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4036/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4035",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4035/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4035/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4035/events",
    "html_url": "https://github.com/expressjs/express/issues/4035",
    "id": 485436900,
    "node_id": "MDU6SXNzdWU0ODU0MzY5MDA=",
    "number": 4035,
    "title": "Broken type definitions for form-data",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-08-26T20:32:16Z",
    "updated_at": "2019-09-06T16:23:44Z",
    "closed_at": "2019-09-05T18:28:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Currently the type definitions for form-data are broken and this is the error message given by the typescript compiler\r\n\r\n```\r\nnode_modules/@types/request/index.d.ts:24:27 - error TS7016: Could not find a declaration file for module 'form-data'. '/mnt/c/code/hivemapper/hivemapper-mapserver/node_modules/form-data/lib/form_data.js' implicitly has an 'any' type.\r\n  Try `npm install @types/form-data` if it exists or add a new declaration (.d.ts) file containing `declare module 'form-data';`\r\n\r\n24 import FormData = require('form-data');\r\n```\r\n\r\nInstalling `@types/form-data` doesn't help because it is a stub definition file and the message from the package for it states so\r\n```\r\n\"deprecated\": \"This is a stub types definition. form-data provides its own type definitions, so you do not need this installed.\",\r\n\"description\": \"Stub TypeScript definitions entry for form-data, which provides its own types definitions\",\r\n```\r\n\r\nThe suggested solution does not work because a module can not be used as a type.\r\n\r\nVersion of express where we are seeing this issue\r\n```\r\nexpress@4.16.4\r\n```\r\nTypeScript compiler giving the error\r\n```\r\n$ ./node_modules/.bin/tsc --version\r\nVersion 3.5.3\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4035/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4035/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4034",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4034/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4034/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4034/events",
    "html_url": "https://github.com/expressjs/express/issues/4034",
    "id": 484239223,
    "node_id": "MDU6SXNzdWU0ODQyMzkyMjM=",
    "number": 4034,
    "title": "Relaxed versions?",
    "user": {
      "login": "daveisfera",
      "id": 1686193,
      "node_id": "MDQ6VXNlcjE2ODYxOTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1686193?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/daveisfera",
      "html_url": "https://github.com/daveisfera",
      "followers_url": "https://api.github.com/users/daveisfera/followers",
      "following_url": "https://api.github.com/users/daveisfera/following{/other_user}",
      "gists_url": "https://api.github.com/users/daveisfera/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/daveisfera/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daveisfera/subscriptions",
      "organizations_url": "https://api.github.com/users/daveisfera/orgs",
      "repos_url": "https://api.github.com/users/daveisfera/repos",
      "events_url": "https://api.github.com/users/daveisfera/events{/privacy}",
      "received_events_url": "https://api.github.com/users/daveisfera/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2019-08-22T22:07:46Z",
    "updated_at": "2019-08-23T15:11:54Z",
    "closed_at": "2019-08-22T22:10:55Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Would it be possible to use `^` instead of `~` for the versions so it's less likely that multiple versions of dependencies needing to be installed?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4034/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4034/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4033",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4033/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4033/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4033/events",
    "html_url": "https://github.com/expressjs/express/issues/4033",
    "id": 484054476,
    "node_id": "MDU6SXNzdWU0ODQwNTQ0NzY=",
    "number": 4033,
    "title": "Documentation of \"route\" property of Request",
    "user": {
      "login": "machineghost",
      "id": 448908,
      "node_id": "MDQ6VXNlcjQ0ODkwOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/448908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/machineghost",
      "html_url": "https://github.com/machineghost",
      "followers_url": "https://api.github.com/users/machineghost/followers",
      "following_url": "https://api.github.com/users/machineghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/machineghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/machineghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/machineghost/subscriptions",
      "organizations_url": "https://api.github.com/users/machineghost/orgs",
      "repos_url": "https://api.github.com/users/machineghost/repos",
      "events_url": "https://api.github.com/users/machineghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/machineghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-08-22T15:13:11Z",
    "updated_at": "2019-08-22T15:14:57Z",
    "closed_at": "2019-08-22T15:14:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "http://expressjs.com/en/4x/api.html#req.route\r\n\r\nThe current description of the route property says (emphasis added):\r\n\r\n> Contains the currently-matched route, **a string**. For example:\r\n\r\nHowever, it then shows \"Example output from the previous snippet\", and that previous snippet had only a single `console.log` in it: `console.log(req.route)`.\r\n\r\nOne would expect to see a **string** logged, but what's logged instead is clearly an **object**:\r\n\r\n    { path: '/user/:id?',\r\n      stack:\r\n       [ { handle: [Function: userIdHandler],\r\n           name: 'userIdHandler',\r\n           params: undefined,\r\n           path: undefined,\r\n           keys: [],\r\n           regexp: /^\\/?$/i,\r\n           method: 'get' } ],\r\n      methods: { get: true } }\r\n\r\nIt seems like of the two must be incorrect, and that the documentation should most likely say something like:\r\n\r\n> Contains the currently-matched route, **an object with method, path, and stack properties**. For example:",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4033/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4033/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4032",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4032/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4032/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4032/events",
    "html_url": "https://github.com/expressjs/express/issues/4032",
    "id": 483979866,
    "node_id": "MDU6SXNzdWU0ODM5Nzk4NjY=",
    "number": 4032,
    "title": "FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory",
    "user": {
      "login": "ran-j",
      "id": 17410205,
      "node_id": "MDQ6VXNlcjE3NDEwMjA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17410205?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ran-j",
      "html_url": "https://github.com/ran-j",
      "followers_url": "https://api.github.com/users/ran-j/followers",
      "following_url": "https://api.github.com/users/ran-j/following{/other_user}",
      "gists_url": "https://api.github.com/users/ran-j/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ran-j/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ran-j/subscriptions",
      "organizations_url": "https://api.github.com/users/ran-j/orgs",
      "repos_url": "https://api.github.com/users/ran-j/repos",
      "events_url": "https://api.github.com/users/ran-j/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ran-j/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-08-22T12:59:15Z",
    "updated_at": "2019-08-22T17:34:40Z",
    "closed_at": "2019-08-22T17:34:33Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have an application with is in production, and today I get a weird error.\r\n\r\n![image](https://user-images.githubusercontent.com/17410205/63516046-955b5100-c4c2-11e9-972e-456651656132.png)\r\n\r\nIn the route logs not a route has been called, and looking at this error it informs that it was in an express module.\r\n\r\nWas it a mistake in something else or a possible error in express.\r\n\r\nobs: this happened 2 times\r\n\r\n#########\r\n Express : 4.17\r\n Node :  10\r\n OS : CentOS7 \r\n PM2 : 3,51",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4032/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4032/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4031",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4031/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4031/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4031/events",
    "html_url": "https://github.com/expressjs/express/issues/4031",
    "id": 483813977,
    "node_id": "MDU6SXNzdWU0ODM4MTM5Nzc=",
    "number": 4031,
    "title": "Longer response time in sending 1 million records using express.js",
    "user": {
      "login": "sachinavinaw",
      "id": 11572485,
      "node_id": "MDQ6VXNlcjExNTcyNDg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/11572485?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sachinavinaw",
      "html_url": "https://github.com/sachinavinaw",
      "followers_url": "https://api.github.com/users/sachinavinaw/followers",
      "following_url": "https://api.github.com/users/sachinavinaw/following{/other_user}",
      "gists_url": "https://api.github.com/users/sachinavinaw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sachinavinaw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sachinavinaw/subscriptions",
      "organizations_url": "https://api.github.com/users/sachinavinaw/orgs",
      "repos_url": "https://api.github.com/users/sachinavinaw/repos",
      "events_url": "https://api.github.com/users/sachinavinaw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sachinavinaw/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-08-22T07:17:52Z",
    "updated_at": "2019-08-22T17:32:47Z",
    "closed_at": "2019-08-22T17:32:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi there,\r\n\r\nI have developed an application that rely heavily on database on following environment- \r\n\r\n`node v10.15.3`\r\n`postgresql v10.5`\r\n\r\n200 concurrent applications access API to execute read all records from database. In response, **1 million** record is returned by the database to node server and node server returns the same packet to client application. The response time is **6407.9 msec** which is very high.\r\n\r\n200 concurrent API call is made every second.\r\nI also used `compression` module, but it did not help much.\r\n\r\nCan anyone please let me know how to speed up the response time?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4031/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4031/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4030",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4030/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4030/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4030/events",
    "html_url": "https://github.com/expressjs/express/issues/4030",
    "id": 483185066,
    "node_id": "MDU6SXNzdWU0ODMxODUwNjY=",
    "number": 4030,
    "title": "res.download blocked without any response when the file to download does not exists.",
    "user": {
      "login": "yunnysunny",
      "id": 734818,
      "node_id": "MDQ6VXNlcjczNDgxOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/734818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yunnysunny",
      "html_url": "https://github.com/yunnysunny",
      "followers_url": "https://api.github.com/users/yunnysunny/followers",
      "following_url": "https://api.github.com/users/yunnysunny/following{/other_user}",
      "gists_url": "https://api.github.com/users/yunnysunny/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yunnysunny/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yunnysunny/subscriptions",
      "organizations_url": "https://api.github.com/users/yunnysunny/orgs",
      "repos_url": "https://api.github.com/users/yunnysunny/repos",
      "events_url": "https://api.github.com/users/yunnysunny/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yunnysunny/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 12,
    "created_at": "2019-08-21T03:52:07Z",
    "updated_at": "2019-08-21T06:30:29Z",
    "closed_at": "2019-08-21T03:57:57Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "I use `res.download` to  send file to the client, when the file does not exist in the disk, some error will occur with the message like ` Error: ENOENT: no such file or directory, stat 'd:\\log\\U3zE6MrK-3VkwPZ9pCjXsVpi.zipdd'`. On this condition, we expect the express response with an http status code, such as `5xx`, but express just blocks.\r\nThe version of express we used is 4.17.1 .",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4030/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4030/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4029",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4029/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4029/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4029/events",
    "html_url": "https://github.com/expressjs/express/issues/4029",
    "id": 482503381,
    "node_id": "MDU6SXNzdWU0ODI1MDMzODE=",
    "number": 4029,
    "title": "How can i add (register) a route before ?",
    "user": {
      "login": "w3hr",
      "id": 40523365,
      "node_id": "MDQ6VXNlcjQwNTIzMzY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/40523365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/w3hr",
      "html_url": "https://github.com/w3hr",
      "followers_url": "https://api.github.com/users/w3hr/followers",
      "following_url": "https://api.github.com/users/w3hr/following{/other_user}",
      "gists_url": "https://api.github.com/users/w3hr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/w3hr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/w3hr/subscriptions",
      "organizations_url": "https://api.github.com/users/w3hr/orgs",
      "repos_url": "https://api.github.com/users/w3hr/repos",
      "events_url": "https://api.github.com/users/w3hr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/w3hr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-08-19T20:11:31Z",
    "updated_at": "2019-08-19T20:22:48Z",
    "closed_at": "2019-08-19T20:22:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "i have some routes that i register with app.get(...), at the end i add a route like app.register(app, '*', ..) then i will dynamically add some rows again at runtime, but when i do this, i got * at the default route (cuz * comes before ..)\r\n\r\nso how can i register the route before?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4029/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4029/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4028",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4028/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4028/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4028/events",
    "html_url": "https://github.com/expressjs/express/pull/4028",
    "id": 482122521,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzA4NDU3Mzk5",
    "number": 4028,
    "title": "fixed possible xss in example",
    "user": {
      "login": "rubiin",
      "id": 8222059,
      "node_id": "MDQ6VXNlcjgyMjIwNTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8222059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rubiin",
      "html_url": "https://github.com/rubiin",
      "followers_url": "https://api.github.com/users/rubiin/followers",
      "following_url": "https://api.github.com/users/rubiin/following{/other_user}",
      "gists_url": "https://api.github.com/users/rubiin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rubiin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rubiin/subscriptions",
      "organizations_url": "https://api.github.com/users/rubiin/orgs",
      "repos_url": "https://api.github.com/users/rubiin/repos",
      "events_url": "https://api.github.com/users/rubiin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rubiin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      },
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-08-19T06:09:05Z",
    "updated_at": "2020-03-25T05:46:33Z",
    "closed_at": "2020-03-25T05:46:33Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4028",
      "html_url": "https://github.com/expressjs/express/pull/4028",
      "diff_url": "https://github.com/expressjs/express/pull/4028.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4028.patch",
      "merged_at": null
    },
    "body": "```\r\nGET /users/%22%3E%3Csvg%20onload=prompt()%3E HTTP/1.1\r\nHost: 192.168.122.246:3000\r\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\nAccept-Language: en-US,en;q=0.5\r\nAccept-Encoding: gzip, deflate\r\nConnection: close\r\nUpgrade-Insecure-Requests: 1\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4028/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4028/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4027",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4027/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4027/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4027/events",
    "html_url": "https://github.com/expressjs/express/issues/4027",
    "id": 481304192,
    "node_id": "MDU6SXNzdWU0ODEzMDQxOTI=",
    "number": 4027,
    "title": "How to call Express function from another function?",
    "user": {
      "login": "otaviobps",
      "id": 28715087,
      "node_id": "MDQ6VXNlcjI4NzE1MDg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/28715087?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/otaviobps",
      "html_url": "https://github.com/otaviobps",
      "followers_url": "https://api.github.com/users/otaviobps/followers",
      "following_url": "https://api.github.com/users/otaviobps/following{/other_user}",
      "gists_url": "https://api.github.com/users/otaviobps/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/otaviobps/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/otaviobps/subscriptions",
      "organizations_url": "https://api.github.com/users/otaviobps/orgs",
      "repos_url": "https://api.github.com/users/otaviobps/repos",
      "events_url": "https://api.github.com/users/otaviobps/events{/privacy}",
      "received_events_url": "https://api.github.com/users/otaviobps/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-08-15T19:35:09Z",
    "updated_at": "2019-08-15T21:54:14Z",
    "closed_at": "2019-08-15T21:54:07Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi there, I searched the web but I can't find the answer to my question.\r\n\r\nI have these express functions:\r\n\r\n```\r\nconst token = require(\"./auth\").genToken;\r\nconst rp = require(\"request-promise\");\r\nconst url = \"https://books.zoho.com/api/v3/\";\r\n\r\nmodule.exports = {\r\n  async listInvoices(req, res) {\r\n    let response;\r\n    try {\r\n      const full_url = url + \"invoices\";\r\n      const auth = await token();\r\n\r\n      response = await rp({\r\n        url: full_url,\r\n        method: \"GET\",\r\n        headers: auth,\r\n        json: true\r\n      });\r\n\r\n      return res.json(response);\r\n    } catch (error) {\r\n      return res.status(400).send({ error });\r\n    }\r\n  },\r\n\r\n  async listBankTransactions(req, res) {\r\n    let response;\r\n    try {\r\n      const full_url = url + \"banktransactions\";\r\n      const auth = await token();\r\n\r\n      response = await rp({\r\n        url: full_url,\r\n        method: \"GET\",\r\n        headers: auth,\r\n        qs: req.body,\r\n        json: true\r\n      });\r\n\r\n      return res.json(response);\r\n    } catch (error) {\r\n      return res.status(400).send({ error });\r\n    }\r\n  },\r\n\r\n  async matchTransactions(req, res) {\r\n    let transactions = await module.exports.listBankTransactions(req, res);\r\n    let invoices = await module.exports.listInvoices(req, res);\r\n  }\r\n};\r\n```\r\n\r\nThey have different routes, and I can call them. However, I want the `matchTransactions` function to call `listInvoices` and `listBankTransactions` and store their responses in variables, so I can manipulate these data and then return the `matchTransactions` response.\r\n\r\nThe way my code is right now, `listBankTransactions` returns the response instead of storing in transactions constant, and then there is an exception on the `listInvoices` response, because the response was already returned by `listBankTransactions`.\r\n\r\nWhat's the best way to achieve what I'm looking for?\r\n\r\nThanks in advance!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4027/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4027/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4026",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4026/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4026/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4026/events",
    "html_url": "https://github.com/expressjs/express/issues/4026",
    "id": 479535162,
    "node_id": "MDU6SXNzdWU0Nzk1MzUxNjI=",
    "number": 4026,
    "title": "Inconsistent \"400 bad request\" response, for GET request with a body",
    "user": {
      "login": "marcopeg",
      "id": 427569,
      "node_id": "MDQ6VXNlcjQyNzU2OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/427569?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcopeg",
      "html_url": "https://github.com/marcopeg",
      "followers_url": "https://api.github.com/users/marcopeg/followers",
      "following_url": "https://api.github.com/users/marcopeg/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcopeg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcopeg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcopeg/subscriptions",
      "organizations_url": "https://api.github.com/users/marcopeg/orgs",
      "repos_url": "https://api.github.com/users/marcopeg/repos",
      "events_url": "https://api.github.com/users/marcopeg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcopeg/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 11,
    "created_at": "2019-08-12T08:57:51Z",
    "updated_at": "2022-04-20T08:04:24Z",
    "closed_at": "2019-08-13T14:01:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello, I came across a weird behavior when it comes to GET requests:\r\n\r\nHere is a GET request performed through the `fetch` API.  \r\nIt is **wrong** because GET should NOT have a `body`.\r\n\r\n```js\r\nawait fetch('http://localhost:8080', {\r\n  body: JSON.stringify({})\r\n})\r\n```\r\n\r\nNevertheless, if my Express handler looks like the following code, it works just fine:\r\n\r\n```js\r\napp.get('/', (req, res) => res.send('ok'))\r\n```\r\n\r\nIt looks like Express simply ignores the body part of the request.\r\n\r\n**BUT** if I add a middleware that awaits for a `Promise`, then Express will fail my request with a `400 - Bad Request` answer:\r\n\r\n```js\r\napp.get('/', [\r\n  (req, res, next) => {\r\n    const foo = new Promise(r => r())\r\n    foo.then(next)\r\n  }\r\n], (req, res) => res.send('ok'))\r\n```\r\n\r\nThis piece of code will cause Express to \"validate\" the request payload and drop the request due to the existing (and correctly unexpected) body.\r\n\r\n---\r\n\r\nNow, wouldn't it be better if the behavior of either failing the request or ignoring the body was consistent with or without promises in the handling chain?\r\n\r\nThanks guys!  \r\nAwesome work :-)\r\n\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4026/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4026/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4025",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4025/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4025/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4025/events",
    "html_url": "https://github.com/expressjs/express/issues/4025",
    "id": 478970797,
    "node_id": "MDU6SXNzdWU0Nzg5NzA3OTc=",
    "number": 4025,
    "title": "JSON parser running on Content-Type: application/x-www-form-urlencoded requests",
    "user": {
      "login": "robin2309",
      "id": 6467055,
      "node_id": "MDQ6VXNlcjY0NjcwNTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6467055?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/robin2309",
      "html_url": "https://github.com/robin2309",
      "followers_url": "https://api.github.com/users/robin2309/followers",
      "following_url": "https://api.github.com/users/robin2309/following{/other_user}",
      "gists_url": "https://api.github.com/users/robin2309/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/robin2309/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/robin2309/subscriptions",
      "organizations_url": "https://api.github.com/users/robin2309/orgs",
      "repos_url": "https://api.github.com/users/robin2309/repos",
      "events_url": "https://api.github.com/users/robin2309/events{/privacy}",
      "received_events_url": "https://api.github.com/users/robin2309/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 572472845,
        "node_id": "MDU6TGFiZWw1NzI0NzI4NDU=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:body-parser",
        "name": "module:body-parser",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-08-09T12:50:36Z",
    "updated_at": "2019-08-09T13:24:21Z",
    "closed_at": "2019-08-09T13:22:36Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "## Expected Behavior\r\n`app.use(express.json());` should not parse requests with the Content-Type header set to `application/x-www-form-urlencoded`\r\n\r\n## Current Behavior\r\n`app.use(express.json());` parses requests with the Content-Type header set to `application/x-www-form-urlencoded`\r\n\r\n## Steps to Reproduce\r\nservers.js:\r\n```\r\nconst app = express();\r\napp.use((req, res, next) => {\r\n  console.log('BEFORE');\r\n  console.log(req.body);\r\n  next();\r\n});\r\n\r\napp.use(express.json());\r\n\r\napp.use((req, res, next) => {\r\n  console.log('AFTER');\r\n  console.log(req.body);\r\n  next();\r\n});\r\n```\r\n\r\nRunning: \r\n`$ curl -X POST \\\r\n  http://localhost:3000/api/login_check \\\r\n  -H 'Accept: application/json' \\\r\n  -H 'Content-Type: application/x-www-form-urlencoded' \\\r\n  -H 'Host: localhost:3000' \\\r\n  -d 'email=my_email%40gmail.com&password=123456'`\r\n\r\nOutputs:\r\n```\r\nBEFORE\r\nundefined\r\nAFTER\r\n{}\r\n```\r\n\r\n## Context (Environment)\r\nExpress: 4.16.4\r\nOS: Windows 10\r\nNode: 8.11.1\r\nNpm: 6.7.0\r\n\r\n## Detailed Description\r\nWhen I add a parser for POST requests having a JSON body, it seems to also be executed when the server receives a `application/x-www-form-urlencoded` POST request, which I understand should not happen. After the parser, the `req.body` gets set to an empty object, whereas it should in my opinion not be modified by the JSON parser.\r\nAm I doing something wrong in the way I use the JSON parser ?\r\nThanks in advance :) \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4025/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4025/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4024",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4024/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4024/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4024/events",
    "html_url": "https://github.com/expressjs/express/issues/4024",
    "id": 478954477,
    "node_id": "MDU6SXNzdWU0Nzg5NTQ0Nzc=",
    "number": 4024,
    "title": "Can I set a cookie path relative to application mount point?",
    "user": {
      "login": "thw0rted",
      "id": 943160,
      "node_id": "MDQ6VXNlcjk0MzE2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/943160?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thw0rted",
      "html_url": "https://github.com/thw0rted",
      "followers_url": "https://api.github.com/users/thw0rted/followers",
      "following_url": "https://api.github.com/users/thw0rted/following{/other_user}",
      "gists_url": "https://api.github.com/users/thw0rted/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thw0rted/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thw0rted/subscriptions",
      "organizations_url": "https://api.github.com/users/thw0rted/orgs",
      "repos_url": "https://api.github.com/users/thw0rted/repos",
      "events_url": "https://api.github.com/users/thw0rted/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thw0rted/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2019-08-09T12:10:00Z",
    "updated_at": "2019-08-17T07:25:39Z",
    "closed_at": "2019-08-17T07:25:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When I call `res.cookie(..., {path: \"/foo\"})`, that `path` value is passed directly to the relevant HTTP response header.  Any time I specify an absolute path like this, though, I limit where my application can be mounted.  I have to either know that I'm always mounted under `/foo`, or compute this value for each request at runtime.\r\n\r\nIs there any way to make the `path` relative to the application base?  As far as I know, `{path: \"./foo\"}` is passed to the header literally, and [RFC 6265](https://tools.ietf.org/search/rfc6265#section-5.2.4) says that a Path that doesn't start with a leading slash is ignored (set to \"default-path\").\r\n\r\nIf such a syntax doesn't exist, would it be a reasonable feature to add?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4024/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4024/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4023",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4023/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4023/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4023/events",
    "html_url": "https://github.com/expressjs/express/issues/4023",
    "id": 476064671,
    "node_id": "MDU6SXNzdWU0NzYwNjQ2NzE=",
    "number": 4023,
    "title": " Can I use express-session and cookie-session together?",
    "user": {
      "login": "matamune94",
      "id": 41405551,
      "node_id": "MDQ6VXNlcjQxNDA1NTUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/41405551?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matamune94",
      "html_url": "https://github.com/matamune94",
      "followers_url": "https://api.github.com/users/matamune94/followers",
      "following_url": "https://api.github.com/users/matamune94/following{/other_user}",
      "gists_url": "https://api.github.com/users/matamune94/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matamune94/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matamune94/subscriptions",
      "organizations_url": "https://api.github.com/users/matamune94/orgs",
      "repos_url": "https://api.github.com/users/matamune94/repos",
      "events_url": "https://api.github.com/users/matamune94/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matamune94/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-08-02T08:38:20Z",
    "updated_at": "2020-04-23T02:43:11Z",
    "closed_at": "2020-04-23T02:43:11Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I need to save some important data on the server and some data is not important on the browser cookie, can I use 2 modules together?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4023/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4023/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4022",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4022/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4022/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4022/events",
    "html_url": "https://github.com/expressjs/express/issues/4022",
    "id": 474155352,
    "node_id": "MDU6SXNzdWU0NzQxNTUzNTI=",
    "number": 4022,
    "title": "TypeError: Cannot read property 'get' of undefined",
    "user": {
      "login": "ooxiongoo",
      "id": 53354088,
      "node_id": "MDQ6VXNlcjUzMzU0MDg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/53354088?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ooxiongoo",
      "html_url": "https://github.com/ooxiongoo",
      "followers_url": "https://api.github.com/users/ooxiongoo/followers",
      "following_url": "https://api.github.com/users/ooxiongoo/following{/other_user}",
      "gists_url": "https://api.github.com/users/ooxiongoo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ooxiongoo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ooxiongoo/subscriptions",
      "organizations_url": "https://api.github.com/users/ooxiongoo/orgs",
      "repos_url": "https://api.github.com/users/ooxiongoo/repos",
      "events_url": "https://api.github.com/users/ooxiongoo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ooxiongoo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-07-29T16:55:10Z",
    "updated_at": "2019-07-29T17:33:10Z",
    "closed_at": "2019-07-29T17:32:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "![image](https://user-images.githubusercontent.com/53354088/62066672-b0e67b00-b1e6-11e9-9a33-3b2d70e7e9d4.png)\r\n\r\n/*App.js */\r\n```\r\n<script>\r\nimport { Server } from 'http';\r\nexport default {\r\n  data() {\r\n    return {\r\n      query: '',\r\n      data: [ ]\r\n    }\r\n  },\r\n  methods: {\r\n    search() {\r\n        this.axios.get(\"http://localhost:5000/search?q=\" +this.query)\r\n        .then(response => {this.data = response.data})        \r\n  }\r\n}\r\n\r\n}\r\n</script>\r\n```\r\n\r\nIm trying to learn elasticsearch, and I built a demo to create a node.js server and index the data to the elastic-server by using vue.js. But when I typed and searched from the data, it gives me this error. ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4022/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4022/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4021",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4021/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4021/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4021/events",
    "html_url": "https://github.com/expressjs/express/issues/4021",
    "id": 473333469,
    "node_id": "MDU6SXNzdWU0NzMzMzM0Njk=",
    "number": 4021,
    "title": "Issue while sending Huge JSON responses to client  -- JavaScript heap out of memory",
    "user": {
      "login": "mallikarjunece",
      "id": 1826210,
      "node_id": "MDQ6VXNlcjE4MjYyMTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1826210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mallikarjunece",
      "html_url": "https://github.com/mallikarjunece",
      "followers_url": "https://api.github.com/users/mallikarjunece/followers",
      "following_url": "https://api.github.com/users/mallikarjunece/following{/other_user}",
      "gists_url": "https://api.github.com/users/mallikarjunece/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mallikarjunece/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mallikarjunece/subscriptions",
      "organizations_url": "https://api.github.com/users/mallikarjunece/orgs",
      "repos_url": "https://api.github.com/users/mallikarjunece/repos",
      "events_url": "https://api.github.com/users/mallikarjunece/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mallikarjunece/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-07-26T12:26:42Z",
    "updated_at": "2019-08-21T04:04:49Z",
    "closed_at": "2019-08-21T04:04:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi, I am new to express and developing REST Api.\r\n\r\nWhile sending huge JSON responses(size: ~200 MB) I am facing the issue.\r\n\r\nHow to handle huge json object transfers from server to client ?\r\n\r\nAppreciate if you provide some examples.\r\n\r\nCode:\r\n```js\r\n    const logs = JsonObj // Size: 200MB\r\n    res.status(200).json(logs);\r\n```\r\nError:\r\n```\r\n<--- Last few GCs --->                                                                                                                                                                         \r\n                                                                                                                                                                                               \r\n[7056:000002510BE62250]    33662 ms: Scavenge 1367.8 (1424.6) -> 1367.5 (1425.6) MB, 6.0 / 0.0 ms  (average mu = 0.123, current mu = 0.034) allocation failure                                 \r\n[7056:000002510BE62250]    35228 ms: Mark-sweep 1368.2 (1425.6) -> 1367.8 (1425.1) MB, 1557.2 / 0.0 ms  (average mu = 0.068, current mu = 0.016) allocation failure scavenge might not succeed \r\n                                                                                                                                                                                               \r\n                                                                                                                                                                                               \r\n<--- JS stacktrace --->                                                                                                                                                                        \r\n                                                                                                                                                                                               \r\n==== JS stack trace =========================================                                                                                                                                  \r\n                                                                                                                                                                                               \r\nSecurity context: 0x00d72fe1e6e9 <JSObject>                                                                                                                                                    \r\n    0: builtin exit frame: toISOString(this=0x03918f150fc1 <Date map = 0000019D04403439>,0x03918f150fc1 <Date map = 0000019D04403439>)                                                         \r\n                                                                                                                                                                                               \r\n    1: InternalFrame [pc: 000003CD6838F0B6]                                                                                                                                                    \r\n    2: EntryFrame [pc: 000003CD68389455]                                                                                                                                                       \r\n    3: builtin exit frame: toJSON(this=0x03918f150fc1 <Date map = 0000019D04403439>,0x01ee05c25819 <String[9]: updatedAt>,0x03918f150fc1 <Date map = 0000019D04403439>)                        \r\n                                                                                                                                                                                               \r\n    4: I...                                                                                                                                                                                    \r\n                                                                                                                                                                                               \r\nFATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory                                                                                       \r\n 1: 00007FF76EE3C6AA v8::internal::GCIdleTimeHandler::GCIdleTimeHandler+4506                                                                                                                   \r\n 2: 00007FF76EE17416 node::MakeCallback+4534                                                                                                                                                   \r\n 3: 00007FF76EE17D90 node_module_register+2032                                                                                                                                                 \r\n 4: 00007FF76F13189E v8::internal::FatalProcessOutOfMemory+846                                                                                                                                 \r\n 5: 00007FF76F1317CF v8::internal::FatalProcessOutOfMemory+639                                                                                                                                 \r\n 6: 00007FF76F317F94 v8::internal::Heap::MaxHeapGrowingFactor+9620                                                                                                                             \r\n 7: 00007FF76F30EF76 v8::internal::ScavengeJob::operator=+24550                                                                                                                                \r\n 8: 00007FF76F30D5CC v8::internal::ScavengeJob::operator=+17980                                                                                                                                \r\n 9: 00007FF76F316317 v8::internal::Heap::MaxHeapGrowingFactor+2327                                                                                                                             \r\n10: 00007FF76F316396 v8::internal::Heap::MaxHeapGrowingFactor+2454                                                                                                                             \r\n11: 00007FF76F4402BB v8::internal::Factory::AllocateRawWithImmortalMap+59                                                                                                                      \r\n12: 00007FF76F442C2D v8::internal::Factory::NewRawOneByteString+77                                                                                                                             \r\n13: 00007FF76F441D99 v8::internal::Factory::NewStringFromOneByte+121                                                                                                                           \r\n14: 00007FF76F70EF81 v8::internal::wasm::WasmModuleBuilder::WriteAsmJsOffsetTable+283569                                                                                                       \r\n15: 00007FF76F70ED0B v8::internal::wasm::WasmModuleBuilder::WriteAsmJsOffsetTable+282939                                                                                                       \r\n16: 000003CD683DC721                                                                                                                                                                           \r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4021/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4021/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4020",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4020/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4020/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4020/events",
    "html_url": "https://github.com/expressjs/express/pull/4020",
    "id": 472134801,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzAwNjA0MjUy",
    "number": 4020,
    "title": "Intellij dependency",
    "user": {
      "login": "rummanhasnayeen",
      "id": 19999694,
      "node_id": "MDQ6VXNlcjE5OTk5Njk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19999694?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rummanhasnayeen",
      "html_url": "https://github.com/rummanhasnayeen",
      "followers_url": "https://api.github.com/users/rummanhasnayeen/followers",
      "following_url": "https://api.github.com/users/rummanhasnayeen/following{/other_user}",
      "gists_url": "https://api.github.com/users/rummanhasnayeen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rummanhasnayeen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rummanhasnayeen/subscriptions",
      "organizations_url": "https://api.github.com/users/rummanhasnayeen/orgs",
      "repos_url": "https://api.github.com/users/rummanhasnayeen/repos",
      "events_url": "https://api.github.com/users/rummanhasnayeen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rummanhasnayeen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2019-07-24T07:57:50Z",
    "updated_at": "2019-07-25T05:09:16Z",
    "closed_at": "2019-07-25T05:09:16Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4020",
      "html_url": "https://github.com/expressjs/express/pull/4020",
      "diff_url": "https://github.com/expressjs/express/pull/4020.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4020.patch",
      "merged_at": null
    },
    "body": ".gitignore update to ignore Intellij IDEA project files.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4020/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4020/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4019",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4019/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4019/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4019/events",
    "html_url": "https://github.com/expressjs/express/issues/4019",
    "id": 471947572,
    "node_id": "MDU6SXNzdWU0NzE5NDc1NzI=",
    "number": 4019,
    "title": "how to respond to the request after the preflight?",
    "user": {
      "login": "rconstantine",
      "id": 8312587,
      "node_id": "MDQ6VXNlcjgzMTI1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8312587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rconstantine",
      "html_url": "https://github.com/rconstantine",
      "followers_url": "https://api.github.com/users/rconstantine/followers",
      "following_url": "https://api.github.com/users/rconstantine/following{/other_user}",
      "gists_url": "https://api.github.com/users/rconstantine/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rconstantine/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rconstantine/subscriptions",
      "organizations_url": "https://api.github.com/users/rconstantine/orgs",
      "repos_url": "https://api.github.com/users/rconstantine/repos",
      "events_url": "https://api.github.com/users/rconstantine/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rconstantine/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2019-07-23T21:05:13Z",
    "updated_at": "2019-07-25T18:30:11Z",
    "closed_at": "2019-07-24T23:48:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When I make a POST via axios, it first sends an OPTIONS preflight request, then the regular request. Both are returned as successful to the browser with code 200. However, the ```.then``` only intercepts the response for the preflight request. How can I respond to the second, actual POST request's response? There are no errors. This is a client application (VueJS).\r\n\r\nI don't think it matters, but the payload is {path: filePathOnServer} where filePathOnServer is a string of a UNC.\r\n\r\n```js\r\nthis.$axios.post('/inpatientPDFs/snr/download', payload, { responseType: 'blob'\r\n          /* headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n            'Access-Control-Allow-Origin': '*'\r\n          } */\r\n        }).then(res => {\r\n          console.log('am i downloading?', res)\r\n          const blob = new Blob([res.data], { type: res.data.type })\r\n          const url = window.URL.createObjectURL(blob)\r\n          const link = document.createElement('a')\r\n          link.href = url\r\n          const contentDisposition = res.headers['content-disposition']\r\n          let fileName = 'unknown'\r\n          if (contentDisposition) {\r\n            const fileNameMatch = contentDisposition.match(/filename=\"(.+)\"/)\r\n            if (fileNameMatch.length === 2) {\r\n              fileName = fileNameMatch[1]\r\n            }\r\n          }\r\n          link.setAttribute('download', fileName)\r\n          document.body.appendChild(link)\r\n          link.click()\r\n          link.remove()\r\n          window.URL.revokeObjectURL(url)\r\n        }).catch(err => {\r\n          console.log('or do i have an error?', err)\r\n        })\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4019/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4019/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4017",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4017/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4017/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4017/events",
    "html_url": "https://github.com/expressjs/express/issues/4017",
    "id": 471285130,
    "node_id": "MDU6SXNzdWU0NzEyODUxMzA=",
    "number": 4017,
    "title": "I'm getting two downloads from one request - need just the second one",
    "user": {
      "login": "rconstantine",
      "id": 8312587,
      "node_id": "MDQ6VXNlcjgzMTI1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8312587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rconstantine",
      "html_url": "https://github.com/rconstantine",
      "followers_url": "https://api.github.com/users/rconstantine/followers",
      "following_url": "https://api.github.com/users/rconstantine/following{/other_user}",
      "gists_url": "https://api.github.com/users/rconstantine/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rconstantine/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rconstantine/subscriptions",
      "organizations_url": "https://api.github.com/users/rconstantine/orgs",
      "repos_url": "https://api.github.com/users/rconstantine/repos",
      "events_url": "https://api.github.com/users/rconstantine/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rconstantine/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-07-22T19:48:53Z",
    "updated_at": "2019-07-22T21:47:36Z",
    "closed_at": "2019-07-22T20:56:27Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have the following code in my server app:\r\n```js\r\napi.post('/snr/download', ensureAuthenticated, (req, res, next) => {\r\n    let filepath = req.body.path;\r\n    let filename = path.parse(filepath).base;\r\n    console.log('req body', filepath);\r\n    return res.download(filepath, filename, function (err) {\r\n      if (err) {\r\n        next(err)\r\n      } else {\r\n        console.log('Sent:', filename)\r\n      }\r\n    });\r\n  });\r\n```\r\nWhen I call it from my Vue/Quasar client app using Axios with the below code, I don't get the behavior I expect.\r\n```js\r\nthis.$axios.post('/inpatientPDFs/snr/download', payload, { responseType: 'blob' }).then(res => {\r\n          console.log('am i downloading?', res)\r\n          const blob = new Blob([res.data], { type: res.data.type })\r\n          const url = window.URL.createObjectURL(blob)\r\n          const link = document.createElement('a')\r\n          link.href = url\r\n          const contentDisposition = res.headers['content-disposition']\r\n          let fileName = 'unknown'\r\n          if (contentDisposition) {\r\n            const fileNameMatch = contentDisposition.match(/filename=\"(.+)\"/)\r\n            if (fileNameMatch.length === 2) {\r\n              fileName = fileNameMatch[1]\r\n            }\r\n          }\r\n          link.setAttribute('download', fileName)\r\n          document.body.appendChild(link)\r\n          link.click()\r\n          link.remove()\r\n          window.URL.revokeObjectURL(url)\r\n        }).catch(err => {\r\n          console.log('or do i have an error?', err)\r\n        })\r\n```\r\nI do get a save file dialog showing up, but the content-disposition isn't set and the file is empty. Upon inspecting the developer tab's Network section of my browser, I find two 'download' events.\r\n\r\nFirst:\r\n![ScreenHunter_496 Jul  22 12 38](https://user-images.githubusercontent.com/8312587/61660292-657c1c00-ac7e-11e9-8b71-f2f1fd8ec892.jpg)\r\n\r\nSecond:\r\n![ScreenHunter_497 Jul  22 12 38](https://user-images.githubusercontent.com/8312587/61660322-72007480-ac7e-11e9-9f09-97b778574673.jpg)\r\n\r\nAs you can see, the first doesn't contain what I want, but the second does. Indeed, inspecting the 'Preview' or 'Response' of the second has the contents of the PDF in it.\r\n\r\nBUT the 'then' part of my axios call is only seeing the first download. I don't know why there are two in the first place. Since commenting out the contents of the axios 'then' block makes no difference, I conclude that the server code is to blame, which is why I'm posting here.\r\n\r\nAny ideas what I'm doing wrong?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4017/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4017/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4016",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4016/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4016/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4016/events",
    "html_url": "https://github.com/expressjs/express/issues/4016",
    "id": 471015473,
    "node_id": "MDU6SXNzdWU0NzEwMTU0NzM=",
    "number": 4016,
    "title": "problem about css class name same as HTML filename",
    "user": {
      "login": "hikigaya58",
      "id": 25583714,
      "node_id": "MDQ6VXNlcjI1NTgzNzE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25583714?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hikigaya58",
      "html_url": "https://github.com/hikigaya58",
      "followers_url": "https://api.github.com/users/hikigaya58/followers",
      "following_url": "https://api.github.com/users/hikigaya58/following{/other_user}",
      "gists_url": "https://api.github.com/users/hikigaya58/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hikigaya58/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hikigaya58/subscriptions",
      "organizations_url": "https://api.github.com/users/hikigaya58/orgs",
      "repos_url": "https://api.github.com/users/hikigaya58/repos",
      "events_url": "https://api.github.com/users/hikigaya58/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hikigaya58/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-07-22T10:25:31Z",
    "updated_at": "2019-07-22T20:49:50Z",
    "closed_at": "2019-07-22T20:49:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Apologies if this has been already requested.\r\nI get a strange problem when I use a css class whose name is same as the HTML file.Like blow:\r\nin my `style.css` I have:\r\n```css\r\n.warn{ color:red;}\r\n```\r\nin my html file named `warn.html` I have:\r\n```html\r\n<link rel=\"stylesheet\" href=\"/css/style.css\" type=\"text/css\">\r\n...//other code\r\n<div class=\"warn\">warning</div>\r\n```\r\nthen in express' `app.js` I have:\r\n```javascript\r\napp.use(express.static('public');\r\n...//other code\r\napp.get('/', (req, res) \r\n    =>res.sendFile('warn.html', {root:path_of_file})\r\n);\r\n```\r\nother things are all right but the `<div>` above doesn't display.\r\nthen F12 in firefox I find the `<div>` exist and click it you can see it has the property of the css class `.warn` .\r\nthe localhost test without express is also fine, it only happens when run with express on a remote linux service.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4016/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4016/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4015",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4015/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4015/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4015/events",
    "html_url": "https://github.com/expressjs/express/issues/4015",
    "id": 470822605,
    "node_id": "MDU6SXNzdWU0NzA4MjI2MDU=",
    "number": 4015,
    "title": "Upgrade path-to-regexp to version 1.7.0",
    "user": {
      "login": "abumq",
      "id": 1683515,
      "node_id": "MDQ6VXNlcjE2ODM1MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1683515?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abumq",
      "html_url": "https://github.com/abumq",
      "followers_url": "https://api.github.com/users/abumq/followers",
      "following_url": "https://api.github.com/users/abumq/following{/other_user}",
      "gists_url": "https://api.github.com/users/abumq/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abumq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abumq/subscriptions",
      "organizations_url": "https://api.github.com/users/abumq/orgs",
      "repos_url": "https://api.github.com/users/abumq/repos",
      "events_url": "https://api.github.com/users/abumq/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abumq/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2019-07-21T20:41:41Z",
    "updated_at": "2019-08-19T11:29:37Z",
    "closed_at": "2019-08-19T11:29:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Is it safe to upgrade to version 1.7.0 of underlying path matching lib `path-to-regexp`? Latest i.e, version 3 but i am not fussed. I need features from version 1.7.0 specifically matching something like `/user/(profile|settings)/:user_id` ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4015/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4015/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4014",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4014/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4014/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4014/events",
    "html_url": "https://github.com/expressjs/express/pull/4014",
    "id": 470439264,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjk5NDEyODQ5",
    "number": 4014,
    "title": "Redis",
    "user": {
      "login": "mam-nh",
      "id": 42825498,
      "node_id": "MDQ6VXNlcjQyODI1NDk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/42825498?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mam-nh",
      "html_url": "https://github.com/mam-nh",
      "followers_url": "https://api.github.com/users/mam-nh/followers",
      "following_url": "https://api.github.com/users/mam-nh/following{/other_user}",
      "gists_url": "https://api.github.com/users/mam-nh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mam-nh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mam-nh/subscriptions",
      "organizations_url": "https://api.github.com/users/mam-nh/orgs",
      "repos_url": "https://api.github.com/users/mam-nh/repos",
      "events_url": "https://api.github.com/users/mam-nh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mam-nh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-07-19T17:06:42Z",
    "updated_at": "2019-07-31T23:42:26Z",
    "closed_at": "2019-07-31T23:42:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4014",
      "html_url": "https://github.com/expressjs/express/pull/4014",
      "diff_url": "https://github.com/expressjs/express/pull/4014.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4014.patch",
      "merged_at": null
    },
    "body": "I have created a simple express application with mongoose and Redis, this might be so helpful to peoples who are trying to integrate Redis on there express application, Why I choose mongoose for DB? most people prefer MongoDB as there database,",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4014/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4014/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4013",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4013/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4013/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4013/events",
    "html_url": "https://github.com/expressjs/express/issues/4013",
    "id": 470380240,
    "node_id": "MDU6SXNzdWU0NzAzODAyNDA=",
    "number": 4013,
    "title": "buffer deprecated",
    "user": {
      "login": "AlexisLapeze",
      "id": 25206033,
      "node_id": "MDQ6VXNlcjI1MjA2MDMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/25206033?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AlexisLapeze",
      "html_url": "https://github.com/AlexisLapeze",
      "followers_url": "https://api.github.com/users/AlexisLapeze/followers",
      "following_url": "https://api.github.com/users/AlexisLapeze/following{/other_user}",
      "gists_url": "https://api.github.com/users/AlexisLapeze/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AlexisLapeze/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AlexisLapeze/subscriptions",
      "organizations_url": "https://api.github.com/users/AlexisLapeze/orgs",
      "repos_url": "https://api.github.com/users/AlexisLapeze/repos",
      "events_url": "https://api.github.com/users/AlexisLapeze/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AlexisLapeze/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 24,
    "created_at": "2019-07-19T15:20:45Z",
    "updated_at": "2020-04-10T23:05:22Z",
    "closed_at": "2020-04-10T23:05:22Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi ! I have an error : [DEP0005] DeprecationWarning: Buffer() is deprecated due to security and usability issues. Please use the Buffer.alloc(), Buffer.allocUnsafe(), or Buffer.from() methods instead\r\n\r\n is it possible to update the source code ?\r\nthank's \r\nAlex",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4013/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4013/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4012",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4012/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4012/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4012/events",
    "html_url": "https://github.com/expressjs/express/issues/4012",
    "id": 470166916,
    "node_id": "MDU6SXNzdWU0NzAxNjY5MTY=",
    "number": 4012,
    "title": "can't set cookie",
    "user": {
      "login": "jesse996",
      "id": 20895372,
      "node_id": "MDQ6VXNlcjIwODk1Mzcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/20895372?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jesse996",
      "html_url": "https://github.com/jesse996",
      "followers_url": "https://api.github.com/users/jesse996/followers",
      "following_url": "https://api.github.com/users/jesse996/following{/other_user}",
      "gists_url": "https://api.github.com/users/jesse996/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jesse996/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jesse996/subscriptions",
      "organizations_url": "https://api.github.com/users/jesse996/orgs",
      "repos_url": "https://api.github.com/users/jesse996/repos",
      "events_url": "https://api.github.com/users/jesse996/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jesse996/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2019-07-19T06:50:02Z",
    "updated_at": "2019-07-29T22:59:17Z",
    "closed_at": "2019-07-29T01:23:03Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "my serve ip,for example ,is  a.com,and client ip is b.com,\r\ni want to set cookie for b.com in my serve a.com,\r\ni have already set cors in serve,\r\nand cline have set with credential,\r\nbut just cant set cookie\r\ni can get the Set-Cookie in the res header,\r\nbut the browser don't set",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4012/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4012/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4011",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4011/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4011/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4011/events",
    "html_url": "https://github.com/expressjs/express/pull/4011",
    "id": 469573725,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjk4NzU4MjAx",
    "number": 4011,
    "title": "deps: setprototypeof@1.2.0",
    "user": {
      "login": "wesleytodd",
      "id": 1027776,
      "node_id": "MDQ6VXNlcjEwMjc3NzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1027776?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesleytodd",
      "html_url": "https://github.com/wesleytodd",
      "followers_url": "https://api.github.com/users/wesleytodd/followers",
      "following_url": "https://api.github.com/users/wesleytodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesleytodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesleytodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesleytodd/subscriptions",
      "organizations_url": "https://api.github.com/users/wesleytodd/orgs",
      "repos_url": "https://api.github.com/users/wesleytodd/repos",
      "events_url": "https://api.github.com/users/wesleytodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesleytodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 133578716,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/deps",
        "name": "deps",
        "color": "444444",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/18",
      "html_url": "https://github.com/expressjs/express/milestone/18",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/18/labels",
      "id": 5234171,
      "node_id": "MDk6TWlsZXN0b25lNTIzNDE3MQ==",
      "number": 18,
      "title": "4.18",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 15,
      "state": "closed",
      "created_at": "2020-03-24T23:16:48Z",
      "updated_at": "2022-04-24T22:50:58Z",
      "due_on": null,
      "closed_at": "2022-04-24T22:50:58Z"
    },
    "comments": 1,
    "created_at": "2019-07-18T05:13:54Z",
    "updated_at": "2021-12-16T04:52:12Z",
    "closed_at": "2021-12-16T04:52:12Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4011",
      "html_url": "https://github.com/expressjs/express/pull/4011",
      "diff_url": "https://github.com/expressjs/express/pull/4011.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4011.patch",
      "merged_at": "2021-12-16T04:52:12Z"
    },
    "body": "Update setprototypeof.  No impact here, but includes a fix for a possible prototype pollution in the fallback.  Can be ported to `5.x` as well.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4011/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4011/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4010",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4010/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4010/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4010/events",
    "html_url": "https://github.com/expressjs/express/pull/4010",
    "id": 467938115,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjk3NDY2OTc3",
    "number": 4010,
    "title": "ES6 Update, Permit me to add my quota.",
    "user": {
      "login": "McZenith",
      "id": 38901009,
      "node_id": "MDQ6VXNlcjM4OTAxMDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/38901009?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/McZenith",
      "html_url": "https://github.com/McZenith",
      "followers_url": "https://api.github.com/users/McZenith/followers",
      "following_url": "https://api.github.com/users/McZenith/following{/other_user}",
      "gists_url": "https://api.github.com/users/McZenith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/McZenith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/McZenith/subscriptions",
      "organizations_url": "https://api.github.com/users/McZenith/orgs",
      "repos_url": "https://api.github.com/users/McZenith/repos",
      "events_url": "https://api.github.com/users/McZenith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/McZenith/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-07-15T04:40:48Z",
    "updated_at": "2019-07-18T02:45:36Z",
    "closed_at": "2019-07-18T01:43:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4010",
      "html_url": "https://github.com/expressjs/express/pull/4010",
      "diff_url": "https://github.com/expressjs/express/pull/4010.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4010.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4010/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4010/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4009",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4009/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4009/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4009/events",
    "html_url": "https://github.com/expressjs/express/issues/4009",
    "id": 467853016,
    "node_id": "MDU6SXNzdWU0Njc4NTMwMTY=",
    "number": 4009,
    "title": " TypeError: res.status is not a function",
    "user": {
      "login": "IDONTSUDO",
      "id": 44754773,
      "node_id": "MDQ6VXNlcjQ0NzU0Nzcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/44754773?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/IDONTSUDO",
      "html_url": "https://github.com/IDONTSUDO",
      "followers_url": "https://api.github.com/users/IDONTSUDO/followers",
      "following_url": "https://api.github.com/users/IDONTSUDO/following{/other_user}",
      "gists_url": "https://api.github.com/users/IDONTSUDO/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/IDONTSUDO/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/IDONTSUDO/subscriptions",
      "organizations_url": "https://api.github.com/users/IDONTSUDO/orgs",
      "repos_url": "https://api.github.com/users/IDONTSUDO/repos",
      "events_url": "https://api.github.com/users/IDONTSUDO/events{/privacy}",
      "received_events_url": "https://api.github.com/users/IDONTSUDO/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-07-14T15:32:11Z",
    "updated_at": "2019-07-15T12:49:34Z",
    "closed_at": "2019-07-15T12:49:34Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "*bug\r\n\r\n*behavior\r\nI have a request.\r\n\r\nHe walks through the router. He sends it to check for two callbacks. These calbacks complement the Req data. I expect that the application will collect data from two collections. And on the basis of them will create a new collection.\r\n\r\nIf the current behavior is a bug, please provide the steps to reproduce.\r\ngit clone https://github.com/IDONTSUDO/CRM-\r\nnpm i\r\nnpm run dev\r\nand watch video https://www.youtube.com/watch?v=0io--BhXVwk&feature=youtu.be\r\n```\r\nTypeError: res.status is not a function\r\n\r\nat C:\\Users\\User\\CRM\\CRM-\\controllers\\user\\Order.js:62:24\r\n\r\nat C:\\Users\\User\\CRM\\CRM-\\node_modules\\mongoose\\lib\\model.js:4733:16\r\n\r\nat C:\\Users\\User\\CRM\\CRM-\\node_modules\\mongoose\\lib\\utils.js:255:11\r\n\r\nat C:\\Users\\User\\CRM\\CRM-\\node_modules\\mongoose\\lib\\query.js:4216:18\r\n\r\nat model.Query.<anonymous> (C:\\Users\\User\\CRM\\CRM-\r\n\r\n\\node_modules\\mongoose\\lib\\query.js:2018:5)\r\n\r\nat model.Query._wrappedThunk [as _findOne] (C:\\Users\\User\\CRM\\CRM-\r\n\r\n\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\r\n\r\nat C:\\Users\\User\\CRM\\CRM-\\node_modules\\kareem\\index.js:369:33\r\n\r\nat processTicksAndRejections (internal/process/task_queues.js:82:9)\r\n\r\nEmitted 'error' event at:\r\n\r\nat C:\\Users\\User\\CRM\\CRM-\\node_modules\\mongoose\\lib\\model.js:4735:13\r\n\r\nat C:\\Users\\User\\CRM\\CRM-\\node_modules\\mongoose\\lib\\utils.js:255:11\r\n\r\n[... lines matching original stack trace ...]\r\n\r\nat processTicksAndRejections (internal/process/task_queues.js:82:9)\r\n\r\n[nodemon] app crashed - waiting for file changes before starting...\r\n```\r\nWhat is the expected behavior?\r\n\r\nI expected to be saved\r\nMongoDb 3.2.5 Mongoose last version Node js last version.\r\n\r\n--------------------------------\r\nI created two tickets. Since I do not understand which side of the problem.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4009/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4009/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4008",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4008/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4008/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4008/events",
    "html_url": "https://github.com/expressjs/express/issues/4008",
    "id": 467549558,
    "node_id": "MDU6SXNzdWU0Njc1NDk1NTg=",
    "number": 4008,
    "title": "Express.js app issues",
    "user": {
      "login": "Leealp",
      "id": 43460440,
      "node_id": "MDQ6VXNlcjQzNDYwNDQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/43460440?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Leealp",
      "html_url": "https://github.com/Leealp",
      "followers_url": "https://api.github.com/users/Leealp/followers",
      "following_url": "https://api.github.com/users/Leealp/following{/other_user}",
      "gists_url": "https://api.github.com/users/Leealp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Leealp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Leealp/subscriptions",
      "organizations_url": "https://api.github.com/users/Leealp/orgs",
      "repos_url": "https://api.github.com/users/Leealp/repos",
      "events_url": "https://api.github.com/users/Leealp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Leealp/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-07-12T18:40:29Z",
    "updated_at": "2019-07-18T01:39:00Z",
    "closed_at": "2019-07-18T01:36:09Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello everyone. I'm working on my express app and keep getting the following error and I was wondering if someone could help me see what the problem is.\r\n```\r\nError: Failed to lookup view \"index\" in views directory \"C:\\Users\\AlphaLy\\Desktop\\SMU-coding-bootcamp\\work\\homework-done\\14th-homework\\Burger2\\Eat-Da-Burger-Week-14-\\views\"\r\n    at Function.render (C:\\Users\\AlphaLy\\Desktop\\SMU-coding-bootcamp\\work\\homework-done\\14th-homework\\Burger2\\Eat-Da-Burger-Week-14-\\node_modules\\express\\lib\\application.js:580:17)\r\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- etc ...\r\n```\r\nbelow are my files related to the problem:\r\nfolder tree:\r\n```\r\nCONFIG\r\n     connection.js\r\n     orms.js\r\nCONTROLLERS\r\n     router.js\r\nMODELS\r\n   burger.js\r\nVIEWS\r\n    index.handlebars\r\n    main.handlebars\r\n```\r\n\r\nSERVER.JS:\r\n```js\r\nvar express = require(\"express\");\r\nvar path = require('path');\r\nvar bodyParser = require(\"body-parser\");\r\nvar methodOverride = require('method-override');\r\nvar PORT = process.env.PORT || 8081;\r\n\r\nvar app = express();\r\n\r\n// serve static content for the app and set up body-parser\r\napp.use(express.static(__dirname+'/public'));\r\napp.use(bodyParser.urlencoded({\r\n  extended: false\r\n}));\r\napp.use(bodyParser.json());\r\napp.use(methodOverride('_method'));\r\n\r\n// set up Handlebars\r\nvar exphbs = require(\"express-handlebars\");\r\napp.engine(\"handlebars\", exphbs({\r\n  defaultLayout: \"main\"\r\n}));\r\n\r\n// app.set('views', path.join(__dirname, 'views'));\r\napp.set(\"view engine\", \"handlebars\");\r\n\r\n// Import routes and give the server access to them\r\nvar routes = require(\"./controllers/routes.js\");\r\napp.use('/',routes);\r\n\r\n// start the server listening\r\napp.listen(PORT, function() {\r\n  console.log(\"App now listening at localhost:\" + PORT);\r\n});\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4008/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4008/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4007",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4007/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4007/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4007/events",
    "html_url": "https://github.com/expressjs/express/issues/4007",
    "id": 467474376,
    "node_id": "MDU6SXNzdWU0Njc0NzQzNzY=",
    "number": 4007,
    "title": "req.query only contains the first query param",
    "user": {
      "login": "tsteuwer-accesso",
      "id": 32495798,
      "node_id": "MDQ6VXNlcjMyNDk1Nzk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32495798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tsteuwer-accesso",
      "html_url": "https://github.com/tsteuwer-accesso",
      "followers_url": "https://api.github.com/users/tsteuwer-accesso/followers",
      "following_url": "https://api.github.com/users/tsteuwer-accesso/following{/other_user}",
      "gists_url": "https://api.github.com/users/tsteuwer-accesso/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tsteuwer-accesso/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tsteuwer-accesso/subscriptions",
      "organizations_url": "https://api.github.com/users/tsteuwer-accesso/orgs",
      "repos_url": "https://api.github.com/users/tsteuwer-accesso/repos",
      "events_url": "https://api.github.com/users/tsteuwer-accesso/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tsteuwer-accesso/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2019-07-12T15:27:57Z",
    "updated_at": "2019-07-12T18:03:23Z",
    "closed_at": "2019-07-12T18:03:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello,\r\nWe're having an issue that when we put our code on our production red hat servers (or ubuntu), we're only getting the first query param.\r\n\r\nExample:\r\n```\r\n// /test?bucket=derp&yes=no&this=that&test=pass\r\napp.get('/test', (req, res) => {\r\n    req.query; // { bucket: 'derp' }\r\n});\r\n```\r\n\r\nEven looking at `req.originalUrl` we're only seeing `/test?bucket=derp`.\r\n\r\nThis doesn't happen when we run it locally on MacOS. I've removed every `app.use()` from the server file and it still happens. We're running express 4.16.3 and node 8.9.3.\r\n\r\nAny ideas?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4007/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4007/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4006",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4006/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4006/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4006/events",
    "html_url": "https://github.com/expressjs/express/pull/4006",
    "id": 466490956,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjk2MzIwOTEx",
    "number": 4006,
    "title": "5.x",
    "user": {
      "login": "samihashehatta",
      "id": 25582335,
      "node_id": "MDQ6VXNlcjI1NTgyMzM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/25582335?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/samihashehatta",
      "html_url": "https://github.com/samihashehatta",
      "followers_url": "https://api.github.com/users/samihashehatta/followers",
      "following_url": "https://api.github.com/users/samihashehatta/following{/other_user}",
      "gists_url": "https://api.github.com/users/samihashehatta/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/samihashehatta/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/samihashehatta/subscriptions",
      "organizations_url": "https://api.github.com/users/samihashehatta/orgs",
      "repos_url": "https://api.github.com/users/samihashehatta/repos",
      "events_url": "https://api.github.com/users/samihashehatta/events{/privacy}",
      "received_events_url": "https://api.github.com/users/samihashehatta/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-07-10T19:58:59Z",
    "updated_at": "2019-07-10T20:00:41Z",
    "closed_at": "2019-07-10T20:00:03Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4006",
      "html_url": "https://github.com/expressjs/express/pull/4006",
      "diff_url": "https://github.com/expressjs/express/pull/4006.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4006.patch",
      "merged_at": null
    },
    "body": "5.x",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4006/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4006/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4005",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4005/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4005/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4005/events",
    "html_url": "https://github.com/expressjs/express/pull/4005",
    "id": 466490569,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjk2MzIwNTc4",
    "number": 4005,
    "title": "bench: use flod module for basic benchmarks",
    "user": {
      "login": "samihashehatta",
      "id": 25582335,
      "node_id": "MDQ6VXNlcjI1NTgyMzM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/25582335?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/samihashehatta",
      "html_url": "https://github.com/samihashehatta",
      "followers_url": "https://api.github.com/users/samihashehatta/followers",
      "following_url": "https://api.github.com/users/samihashehatta/following{/other_user}",
      "gists_url": "https://api.github.com/users/samihashehatta/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/samihashehatta/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/samihashehatta/subscriptions",
      "organizations_url": "https://api.github.com/users/samihashehatta/orgs",
      "repos_url": "https://api.github.com/users/samihashehatta/repos",
      "events_url": "https://api.github.com/users/samihashehatta/events{/privacy}",
      "received_events_url": "https://api.github.com/users/samihashehatta/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-07-10T19:58:02Z",
    "updated_at": "2019-07-10T20:00:41Z",
    "closed_at": "2019-07-10T19:58:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4005",
      "html_url": "https://github.com/expressjs/express/pull/4005",
      "diff_url": "https://github.com/expressjs/express/pull/4005.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4005.patch",
      "merged_at": null
    },
    "body": "bench: use flod module for basic benchmarks",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4005/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4005/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4004",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4004/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4004/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4004/events",
    "html_url": "https://github.com/expressjs/express/issues/4004",
    "id": 466156130,
    "node_id": "MDU6SXNzdWU0NjYxNTYxMzA=",
    "number": 4004,
    "title": "-",
    "user": {
      "login": "Asgator",
      "id": 5278430,
      "node_id": "MDQ6VXNlcjUyNzg0MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5278430?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Asgator",
      "html_url": "https://github.com/Asgator",
      "followers_url": "https://api.github.com/users/Asgator/followers",
      "following_url": "https://api.github.com/users/Asgator/following{/other_user}",
      "gists_url": "https://api.github.com/users/Asgator/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Asgator/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Asgator/subscriptions",
      "organizations_url": "https://api.github.com/users/Asgator/orgs",
      "repos_url": "https://api.github.com/users/Asgator/repos",
      "events_url": "https://api.github.com/users/Asgator/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Asgator/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-07-10T07:52:33Z",
    "updated_at": "2019-07-10T07:58:49Z",
    "closed_at": "2019-07-10T07:58:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "-",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4004/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4004/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4003",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4003/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4003/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4003/events",
    "html_url": "https://github.com/expressjs/express/issues/4003",
    "id": 464864528,
    "node_id": "MDU6SXNzdWU0NjQ4NjQ1Mjg=",
    "number": 4003,
    "title": "The route /^\\/(hello|world|).*/ doesn't work",
    "user": {
      "login": "extensionsapp",
      "id": 8192379,
      "node_id": "MDQ6VXNlcjgxOTIzNzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8192379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/extensionsapp",
      "html_url": "https://github.com/extensionsapp",
      "followers_url": "https://api.github.com/users/extensionsapp/followers",
      "following_url": "https://api.github.com/users/extensionsapp/following{/other_user}",
      "gists_url": "https://api.github.com/users/extensionsapp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/extensionsapp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/extensionsapp/subscriptions",
      "organizations_url": "https://api.github.com/users/extensionsapp/orgs",
      "repos_url": "https://api.github.com/users/extensionsapp/repos",
      "events_url": "https://api.github.com/users/extensionsapp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/extensionsapp/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-07-06T15:29:26Z",
    "updated_at": "2019-07-19T00:44:58Z",
    "closed_at": "2019-07-07T01:11:19Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello.\r\n\r\n**YES**: /hello/bob/22\r\n```js\r\napp.use('/hello', website);\r\napp.use('/world', website);\r\napp.use('/', website);\r\n\r\nwebsite.get('/:name/:ids', function (req, res, next) {\r\n    console.log(req.params);  //=> { name: 'bob', ids: '22'}\r\n}\r\n```\r\n\r\n**NOT**: /hello/bob/22\r\n```js\r\napp.use(/^\\/(hello|world|).*$/, website);\r\n\r\nwebsite.get('/:name/:ids', function (req, res, next) {\r\n    console.log(req.params); //=> { name: undefined, ids: undefined }\r\n}\r\n```\r\n\r\nHow to make the second version of REGEXP?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4003/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4003/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4002",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4002/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4002/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4002/events",
    "html_url": "https://github.com/expressjs/express/pull/4002",
    "id": 464058333,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjk0NDE0MzEx",
    "number": 4002,
    "title": "fix: add missing semicolons",
    "user": {
      "login": "tiendq",
      "id": 815910,
      "node_id": "MDQ6VXNlcjgxNTkxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/815910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tiendq",
      "html_url": "https://github.com/tiendq",
      "followers_url": "https://api.github.com/users/tiendq/followers",
      "following_url": "https://api.github.com/users/tiendq/following{/other_user}",
      "gists_url": "https://api.github.com/users/tiendq/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tiendq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tiendq/subscriptions",
      "organizations_url": "https://api.github.com/users/tiendq/orgs",
      "repos_url": "https://api.github.com/users/tiendq/repos",
      "events_url": "https://api.github.com/users/tiendq/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tiendq/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2019-07-04T04:44:29Z",
    "updated_at": "2019-07-18T02:47:07Z",
    "closed_at": "2019-07-04T04:45:31Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4002",
      "html_url": "https://github.com/expressjs/express/pull/4002",
      "diff_url": "https://github.com/expressjs/express/pull/4002.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4002.patch",
      "merged_at": null
    },
    "body": "I found most of code use ; but some lines don't. Just added all missing semicolons. I think we should add an ESLint rule to enforce consistent coding style.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4002/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4002/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4001",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4001/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4001/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4001/events",
    "html_url": "https://github.com/expressjs/express/issues/4001",
    "id": 463740561,
    "node_id": "MDU6SXNzdWU0NjM3NDA1NjE=",
    "number": 4001,
    "title": "Order of paths array shouldn't matter while mounting a router on multiple paths.",
    "user": {
      "login": "devqalandar",
      "id": 45256870,
      "node_id": "MDQ6VXNlcjQ1MjU2ODcw",
      "avatar_url": "https://avatars.githubusercontent.com/u/45256870?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/devqalandar",
      "html_url": "https://github.com/devqalandar",
      "followers_url": "https://api.github.com/users/devqalandar/followers",
      "following_url": "https://api.github.com/users/devqalandar/following{/other_user}",
      "gists_url": "https://api.github.com/users/devqalandar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/devqalandar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/devqalandar/subscriptions",
      "organizations_url": "https://api.github.com/users/devqalandar/orgs",
      "repos_url": "https://api.github.com/users/devqalandar/repos",
      "events_url": "https://api.github.com/users/devqalandar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/devqalandar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-07-03T13:02:32Z",
    "updated_at": "2019-07-19T10:01:07Z",
    "closed_at": "2019-07-18T01:28:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "If I mount a router on multiple paths like below, it works fine for both paths. But on changing the order of paths array, it only works for the first path.\r\n```javascript\r\nconst app = require('express')();\r\n\r\nconst router = require('express').Router();\r\nrouter.get(\"/orders\", (req, res, next)=>res.send(\"Reached /orders\"));\r\n\r\n/*\r\n * Following works fine for \"/api/v1/orders\" as well as for \"/api/orders\"\r\n */\r\napp.use( [\"/api/v1\", \"/api\"], router );\r\n\r\n/*\r\n * Following works fine only for \"/api/orders\" and says \"Cannot GET /api/v1/orders\" for \"/api/v1/orders\"\r\n */\r\napp.use( [\"/api\", \"/api/v1\"], router );\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4001/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4001/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4000",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4000/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4000/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4000/events",
    "html_url": "https://github.com/expressjs/express/issues/4000",
    "id": 463541293,
    "node_id": "MDU6SXNzdWU0NjM1NDEyOTM=",
    "number": 4000,
    "title": "express.static not working for directory",
    "user": {
      "login": "manatarms",
      "id": 4206893,
      "node_id": "MDQ6VXNlcjQyMDY4OTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4206893?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/manatarms",
      "html_url": "https://github.com/manatarms",
      "followers_url": "https://api.github.com/users/manatarms/followers",
      "following_url": "https://api.github.com/users/manatarms/following{/other_user}",
      "gists_url": "https://api.github.com/users/manatarms/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/manatarms/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/manatarms/subscriptions",
      "organizations_url": "https://api.github.com/users/manatarms/orgs",
      "repos_url": "https://api.github.com/users/manatarms/repos",
      "events_url": "https://api.github.com/users/manatarms/events{/privacy}",
      "received_events_url": "https://api.github.com/users/manatarms/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 548077790,
        "node_id": "MDU6TGFiZWw1NDgwNzc3OTA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:express-static",
        "name": "module:express-static",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2019-07-03T04:41:12Z",
    "updated_at": "2019-07-03T05:44:14Z",
    "closed_at": "2019-07-03T05:40:31Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm experiencing some strange behaviour from express.static\r\n```\r\n// This works \r\n    app.use(\r\n      /^\\/static\\/[0-9]+\\/app.js/,\r\n      express.static(`/Users/user/test/dist/app.js`)\r\n    );\r\n\r\n// Redirects to a weird path (/static/2/style1.js/)\r\n    app.use(\r\n     /^\\/static\\/[0-9]+\\/style[0-9]+.js/\r\n      express.static(`/Users/user/test/dist/`)\r\n    );\r\n```\r\n\r\nI've tried to debug this and it seems like this line in send might be doing it. https://github.com/pillarjs/send/blob/master/index.js#L727\r\n\r\nAny ideas about what's happening here?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4000/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4000/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3999",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3999/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3999/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3999/events",
    "html_url": "https://github.com/expressjs/express/issues/3999",
    "id": 463523232,
    "node_id": "MDU6SXNzdWU0NjM1MjMyMzI=",
    "number": 3999,
    "title": "Use custom regex for matching parameters?",
    "user": {
      "login": "s-oram",
      "id": 1150429,
      "node_id": "MDQ6VXNlcjExNTA0Mjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1150429?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s-oram",
      "html_url": "https://github.com/s-oram",
      "followers_url": "https://api.github.com/users/s-oram/followers",
      "following_url": "https://api.github.com/users/s-oram/following{/other_user}",
      "gists_url": "https://api.github.com/users/s-oram/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s-oram/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s-oram/subscriptions",
      "organizations_url": "https://api.github.com/users/s-oram/orgs",
      "repos_url": "https://api.github.com/users/s-oram/repos",
      "events_url": "https://api.github.com/users/s-oram/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s-oram/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2019-07-03T03:16:32Z",
    "updated_at": "2019-08-21T07:27:32Z",
    "closed_at": "2019-08-21T07:27:32Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Express is permissive when it comes to accepting what characters are captured with route parameters. For example: \r\n```\r\nRoute path: /users/:userId\r\nRequest URL: http://localhost:3000/users/name@example.com:ResetPassword\r\nreq.params: { \"userId\": \"name@example.com:ResetPassword\" }\r\n```\r\n\r\nAn alternative regex for parameter matching can be set on a route by route basis with parentheses. For example:\r\n```\r\nRoute path: /user/:userId(\\d+)\r\nRequest URL: http://localhost:3000/user/42\r\nreq.params: {\"userId\": \"42\"}\r\n```\r\n\r\nIs it possible to change the default parameter match regex so it doesn't need to be specified within every route? \r\n\r\nI ask because Google's Api design recommendation is to use colons to specify custom method names. For example: \r\n`https://service.name/v1/some/resource/name:customVerb`\r\n`http://localhost:3000/users/name@example.com:ResetPassword`\r\nSource: https://cloud.google.com/apis/design/custom_methods\r\n\r\n\r\nI'd like to write an Express route to match paths with Google style custom methods. For example:\r\n```\r\nRoute path: /users/:userId::ResetPassword\r\nRequest URL: `http://localhost:3000/users/name@example.com:ResetPassword`\r\nreq.params: {\"userId\": \"name@example.com\"}\r\n```\r\nBut the above doesn't seem possible with Express' default parameter match regex, if I'm not doing something wrong. Any ideas? \r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3999/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3999/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3998",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3998/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3998/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3998/events",
    "html_url": "https://github.com/expressjs/express/issues/3998",
    "id": 463040073,
    "node_id": "MDU6SXNzdWU0NjMwNDAwNzM=",
    "number": 3998,
    "title": "OPTIONS request doesn't follow the order of route declaration",
    "user": {
      "login": "abhishekjain2604",
      "id": 15106857,
      "node_id": "MDQ6VXNlcjE1MTA2ODU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/15106857?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abhishekjain2604",
      "html_url": "https://github.com/abhishekjain2604",
      "followers_url": "https://api.github.com/users/abhishekjain2604/followers",
      "following_url": "https://api.github.com/users/abhishekjain2604/following{/other_user}",
      "gists_url": "https://api.github.com/users/abhishekjain2604/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abhishekjain2604/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abhishekjain2604/subscriptions",
      "organizations_url": "https://api.github.com/users/abhishekjain2604/orgs",
      "repos_url": "https://api.github.com/users/abhishekjain2604/repos",
      "events_url": "https://api.github.com/users/abhishekjain2604/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abhishekjain2604/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-07-02T06:15:04Z",
    "updated_at": "2019-07-02T07:43:14Z",
    "closed_at": "2019-07-02T06:20:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I just notice that an OPTIONS request doesn't follow the order of route declaration and applies for all the routes that are defined using the same instance. \r\nI am not sure if it's bug or an intended behaviour since I don't fully understand the nature of OPTIONS request.\r\n\r\nHere are 2 code snippets\r\n\r\n```js\r\nconst app = require('express')();\r\n\r\napp.use((req, res, next) => {\r\n  res.send('Blocked');\r\n});\r\n\r\napp.get('/route1', (req, res) => {\r\n  res.send('route1');\r\n});\r\n\r\napp.get('/route2', (req, res) => {\r\n  res.send('route2')\r\n});\r\n\r\napp.listen(3000, () => {\r\n  console.log('Server started on port: 3000');\r\n});\r\n```\r\n\r\n```js\r\nconst app = require('express')();\r\n\r\napp.get('/route1', (req, res) => {\r\n  res.send('route1');\r\n});\r\n\r\napp.use((req, res, next) => {\r\n  res.send('Blocked');\r\n});\r\n\r\napp.get('/route2', (req, res) => {\r\n  res.send('route2')\r\n});\r\n\r\napp.listen(3000, () => {\r\n  console.log('Server started on port: 3000');\r\n});\r\n```\r\n\r\nIn first case, both GET and OPTIONS request to any of the 2 routes returns the message \"blocked\" as expected since the middleware is defined prior to both and hence any request to either of these will first pass through it.\r\n\r\nIn second case, both GET and OPTIONS request to the second route return the message \"blocked\". Again as expected.  But for the first route, the GET request return the message \"route1\" while the OPTIONS request returns the message \"Blocked\". \r\n\r\nWhy did the GET request was successfully served but the OPTIONS request first passed through the middleware that was defined after that route?\r\n\r\nI'm using v4.17.1",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3998/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3998/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3997",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3997/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3997/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3997/events",
    "html_url": "https://github.com/expressjs/express/issues/3997",
    "id": 462487235,
    "node_id": "MDU6SXNzdWU0NjI0ODcyMzU=",
    "number": 3997,
    "title": "app.set() JSON style",
    "user": {
      "login": "knoxcard",
      "id": 7561190,
      "node_id": "MDQ6VXNlcjc1NjExOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7561190?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/knoxcard",
      "html_url": "https://github.com/knoxcard",
      "followers_url": "https://api.github.com/users/knoxcard/followers",
      "following_url": "https://api.github.com/users/knoxcard/following{/other_user}",
      "gists_url": "https://api.github.com/users/knoxcard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/knoxcard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/knoxcard/subscriptions",
      "organizations_url": "https://api.github.com/users/knoxcard/orgs",
      "repos_url": "https://api.github.com/users/knoxcard/repos",
      "events_url": "https://api.github.com/users/knoxcard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/knoxcard/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2019-07-01T02:54:56Z",
    "updated_at": "2020-04-10T23:09:37Z",
    "closed_at": "2020-04-10T23:09:37Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Why cant I do this?\r\n```\r\napp.set({\r\n  'view engine': 'hbs',\r\n  'colors': require('chalk'),\r\n  'functions': require('./lib/functions')(app)\r\n})\r\n```\r\n\r\ninstead of doing this?\r\n```\r\napp.set('view engine', 'hbs')\r\napp.set('colors', require('chalk'))\r\napp.set('functions', require('./lib/functions')(app))\r\n```\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3997/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3997/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3996",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3996/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3996/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3996/events",
    "html_url": "https://github.com/expressjs/express/issues/3996",
    "id": 462368870,
    "node_id": "MDU6SXNzdWU0NjIzNjg4NzA=",
    "number": 3996,
    "title": "Npm Err!  package.json must be actual JSON, not just JavaScript.",
    "user": {
      "login": "Sunriselegacy",
      "id": 52367305,
      "node_id": "MDQ6VXNlcjUyMzY3MzA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/52367305?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sunriselegacy",
      "html_url": "https://github.com/Sunriselegacy",
      "followers_url": "https://api.github.com/users/Sunriselegacy/followers",
      "following_url": "https://api.github.com/users/Sunriselegacy/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sunriselegacy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sunriselegacy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sunriselegacy/subscriptions",
      "organizations_url": "https://api.github.com/users/Sunriselegacy/orgs",
      "repos_url": "https://api.github.com/users/Sunriselegacy/repos",
      "events_url": "https://api.github.com/users/Sunriselegacy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sunriselegacy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-06-30T05:21:09Z",
    "updated_at": "2020-01-17T18:27:47Z",
    "closed_at": "2020-01-17T18:25:06Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I've been tryna fix this for a while, but I can't seem to figure it out. Considering I'm new to coding it may be an easy fix and I'm just not quite sure about what I'm doing'\r\n\r\n\r\n0 info it worked if it ends with ok\r\n1 verbose cli [\r\n1 verbose cli   'C:\\\\Program Files\\\\nodejs\\\\node.exe',\r\n1 verbose cli   'C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js',\r\n1 verbose cli   'install',\r\n1 verbose cli   'discord.io',\r\n1 verbose cli   'winston',\r\n1 verbose cli   '-save'\r\n1 verbose cli ]\r\n2 info using npm@6.9.0\r\n3 info using node@v12.5.0\r\n4 verbose npm-session 39d5088f2ca6dfd0\r\n5 silly install loadCurrentTree\r\n6 silly install readLocalPackageData\r\n7 timing stage:rollbackFailedOptional Completed in 3ms\r\n8 timing stage:runTopLevelLifecycles Completed in 28ms\r\n9 verbose stack Error: Failed to parse json\r\n9 verbose stack Unexpected token n in JSON at position 7 while parsing near '{\r\n9 verbose stack     name: “Blotch”\r\n9 verbose stack     ...'\r\n9 verbose stack     at parseError (C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\read-package-json\\read-json.js:452:11)\r\n9 verbose stack     at parseJson (C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\read-package-json\\read-json.js:104:26)\r\n9 verbose stack     at C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\read-package-json\\read-json.js:51:5\r\n9 verbose stack     at C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\graceful-fs\\graceful-fs.js:90:16\r\n9 verbose stack     at FSReqCallback.readFileAfterClose [as oncomplete] (internal/fs/read_file_context.js:61:3)\r\n10 verbose cwd C:\\Users\\Thornstrider Studios\\Desktop\\Discordbot\r\n11 verbose Windows_NT 10.0.17134\r\n12 verbose argv \"C:\\\\Program Files\\\\nodejs\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"discord.io\" \"winston\" \"-save\"\r\n13 verbose node v12.5.0\r\n14 verbose npm  v6.9.0\r\n15 error file C:\\Users\\Thornstrider Studios\\Desktop\\Discordbot\\package.json\r\n16 error code EJSONPARSE\r\n17 error JSON.parse Failed to parse json\r\n17 error JSON.parse Unexpected token n in JSON at position 7 while parsing near '{\r\n17 error JSON.parse     name: “Blotch”\r\n17 error JSON.parse     ...'\r\n18 error JSON.parse Failed to parse package.json data.\r\n18 error JSON.parse package.json must be actual JSON, not just JavaScript.\r\n19 verbose exit [ 1, true ]\r\n\r\n\r\nThis is what package.json says;\r\n\r\n{\r\n    name: “Blotch”,\r\n    version: “1.0.0”,\r\n    main: “bot.js”,\r\n    author: “Marsh”,\r\n    dependencies: {\r\n}\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3996/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 2,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3996/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3995",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3995/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3995/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3995/events",
    "html_url": "https://github.com/expressjs/express/issues/3995",
    "id": 462107626,
    "node_id": "MDU6SXNzdWU0NjIxMDc2MjY=",
    "number": 3995,
    "title": "How to print request objects?",
    "user": {
      "login": "mcandre",
      "id": 5316,
      "node_id": "MDQ6VXNlcjUzMTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5316?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcandre",
      "html_url": "https://github.com/mcandre",
      "followers_url": "https://api.github.com/users/mcandre/followers",
      "following_url": "https://api.github.com/users/mcandre/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcandre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcandre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcandre/subscriptions",
      "organizations_url": "https://api.github.com/users/mcandre/orgs",
      "repos_url": "https://api.github.com/users/mcandre/repos",
      "events_url": "https://api.github.com/users/mcandre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcandre/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-06-28T16:09:31Z",
    "updated_at": "2019-07-03T05:42:06Z",
    "closed_at": "2019-07-03T05:42:06Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "`JSON.stringify()` complains that incoming HTTP request objects present infinite loops. How should we print requests out for debugging purposes?\r\n\r\nFairly sure this is happening with Express.js, but could be coming from the NPM request library as well.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3995/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3995/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3993",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3993/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3993/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3993/events",
    "html_url": "https://github.com/expressjs/express/issues/3993",
    "id": 460688020,
    "node_id": "MDU6SXNzdWU0NjA2ODgwMjA=",
    "number": 3993,
    "title": "res.status doesn't chain with redirect",
    "user": {
      "login": "govindrai",
      "id": 13859249,
      "node_id": "MDQ6VXNlcjEzODU5MjQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/13859249?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/govindrai",
      "html_url": "https://github.com/govindrai",
      "followers_url": "https://api.github.com/users/govindrai/followers",
      "following_url": "https://api.github.com/users/govindrai/following{/other_user}",
      "gists_url": "https://api.github.com/users/govindrai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/govindrai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/govindrai/subscriptions",
      "organizations_url": "https://api.github.com/users/govindrai/orgs",
      "repos_url": "https://api.github.com/users/govindrai/repos",
      "events_url": "https://api.github.com/users/govindrai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/govindrai/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-06-25T23:18:08Z",
    "updated_at": "2019-06-25T23:21:57Z",
    "closed_at": "2019-06-25T23:21:52Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "`res.status(301).redirect('url')` emits a 302. \r\n\r\nI know you can write `res.redirect(301, 'url')` but it seems unintuitive that `res.status` doesn't set the 301. At the minimum, `res.status` method [documentation](http://expressjs.com/en/4x/api.html#res.status) needs to be updated to note this peculiarity, as I wasted a good hour on this.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3993/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3993/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3992",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3992/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3992/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3992/events",
    "html_url": "https://github.com/expressjs/express/issues/3992",
    "id": 460511929,
    "node_id": "MDU6SXNzdWU0NjA1MTE5Mjk=",
    "number": 3992,
    "title": "XSS in examples",
    "user": {
      "login": "jthorpe6",
      "id": 15141282,
      "node_id": "MDQ6VXNlcjE1MTQxMjgy",
      "avatar_url": "https://avatars.githubusercontent.com/u/15141282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jthorpe6",
      "html_url": "https://github.com/jthorpe6",
      "followers_url": "https://api.github.com/users/jthorpe6/followers",
      "following_url": "https://api.github.com/users/jthorpe6/following{/other_user}",
      "gists_url": "https://api.github.com/users/jthorpe6/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jthorpe6/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jthorpe6/subscriptions",
      "organizations_url": "https://api.github.com/users/jthorpe6/orgs",
      "repos_url": "https://api.github.com/users/jthorpe6/repos",
      "events_url": "https://api.github.com/users/jthorpe6/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jthorpe6/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2019-06-25T16:03:15Z",
    "updated_at": "2020-03-25T21:59:54Z",
    "closed_at": "2020-03-25T21:59:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello, \r\n\r\njust been playing around with the examples and i discovered XSS in the route-map example.\r\n\r\nstarting the app like so \r\n\r\n```\r\n~/express$ node examples/route-map/\r\nget /users\r\ndelete /users\r\nget /users/:uid\r\nget /users/:uid/pets\r\ndelete /users/:uid/pets/:pid\r\nExpress started on port 3000\r\n```\r\n\r\nThen browsing to the following causes the injected javascript to load\r\n` http://ip:3000/users/%22%3E%3Csvg%20onload=prompt()%3E`\r\n\r\nfull request\r\n\r\n```\r\nGET /users/%22%3E%3Csvg%20onload=prompt()%3E HTTP/1.1\r\nHost: 192.168.122.246:3000\r\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\nAccept-Language: en-US,en;q=0.5\r\nAccept-Encoding: gzip, deflate\r\nConnection: close\r\nUpgrade-Insecure-Requests: 1\r\n```\r\n\r\nthe issue seems to be with the following in the codebase\r\n\r\n```\r\nvar users = {\r\n  list: function(req, res){\r\n    res.send('user list');\r\n  },\r\n \r\n  get: function(req, res){\r\n    res.send('user ' + req.params.uid);\r\n  },\r\n \r\n  delete: function(req, res){\r\n    res.send('delete users');\r\n  }\r\n};\r\n```\r\n\r\nwhere `req.params.uid` is not sanitised\r\n\r\nthanks \r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3992/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3992/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3991",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3991/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3991/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3991/events",
    "html_url": "https://github.com/expressjs/express/issues/3991",
    "id": 460432386,
    "node_id": "MDU6SXNzdWU0NjA0MzIzODY=",
    "number": 3991,
    "title": "Improve promise/async support for Express 4",
    "user": {
      "login": "elliot-nelson",
      "id": 58273,
      "node_id": "MDQ6VXNlcjU4Mjcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/58273?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elliot-nelson",
      "html_url": "https://github.com/elliot-nelson",
      "followers_url": "https://api.github.com/users/elliot-nelson/followers",
      "following_url": "https://api.github.com/users/elliot-nelson/following{/other_user}",
      "gists_url": "https://api.github.com/users/elliot-nelson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elliot-nelson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elliot-nelson/subscriptions",
      "organizations_url": "https://api.github.com/users/elliot-nelson/orgs",
      "repos_url": "https://api.github.com/users/elliot-nelson/repos",
      "events_url": "https://api.github.com/users/elliot-nelson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elliot-nelson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-06-25T13:41:49Z",
    "updated_at": "2019-06-25T13:45:06Z",
    "closed_at": "2019-06-25T13:44:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "### SUMMARY\r\n\r\nI know there is a new and improved Router looming on the horizon for Express 5 (tbd), but it would be nice to see at least basic support for promises/async functions in router handling for current Express (4).\r\n\r\n### PROPOSAL\r\n\r\nWhat I'd like to see is a pretty basic, non-breaking change:\r\n\r\n- When the router calls a route handler, if it appears to return a \"promise-like\" object, attach a catch handler to that object that will call the `next(error)` function if it is triggered.\r\n\r\nThis would allow the following two handlers to behave identically:\r\n\r\n```\r\nrouter.use('/', (req, res) => {\r\n    throw new Error('oops');\r\n});\r\n\r\nrouter.use('/', async (req, res) => {\r\n    throw new Error('oops');\r\n});\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3991/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3991/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3990",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3990/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3990/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3990/events",
    "html_url": "https://github.com/expressjs/express/issues/3990",
    "id": 458699766,
    "node_id": "MDU6SXNzdWU0NTg2OTk3NjY=",
    "number": 3990,
    "title": "express not parsing request body correctly when request has passed through Ambassador API gateway",
    "user": {
      "login": "digressionary",
      "id": 30506653,
      "node_id": "MDQ6VXNlcjMwNTA2NjUz",
      "avatar_url": "https://avatars.githubusercontent.com/u/30506653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/digressionary",
      "html_url": "https://github.com/digressionary",
      "followers_url": "https://api.github.com/users/digressionary/followers",
      "following_url": "https://api.github.com/users/digressionary/following{/other_user}",
      "gists_url": "https://api.github.com/users/digressionary/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/digressionary/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/digressionary/subscriptions",
      "organizations_url": "https://api.github.com/users/digressionary/orgs",
      "repos_url": "https://api.github.com/users/digressionary/repos",
      "events_url": "https://api.github.com/users/digressionary/events{/privacy}",
      "received_events_url": "https://api.github.com/users/digressionary/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 572472845,
        "node_id": "MDU6TGFiZWw1NzI0NzI4NDU=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:body-parser",
        "name": "module:body-parser",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2019-06-20T14:41:51Z",
    "updated_at": "2019-06-20T15:04:02Z",
    "closed_at": "2019-06-20T14:59:40Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have an extremely simple express app here:\r\nhttps://gist.githubusercontent.com/digressionary/86c48ccf89fc210d05ae5e76d8390b7d/raw/fa66d729927ce594ee146cf444b168eec170fc32/index.js\r\n\r\nThe app is running in the Kubernetes ecosystem.  \r\nDocker version: 19.03\r\nKubernetes version : 1.14.1\r\nAmbassador version: 0.72.0\r\n\r\nI send a simple cURL request here:\r\n```curl -X POST \\\r\n  http://localhost/example/ \\\r\n  -H 'Content-Type: application/json' \\\r\n  -H 'Postman-Token: a00e1ecc-c567-4df1-94ee-c2d39c6618e8' \\\r\n  -H 'cache-control: no-cache' \\\r\n  -d '{\"username\":\"redacted\",\"password\":\"redacted\"}'\r\n```\r\n\r\nWhen I send this request , and console.log req.body, it's always an empty object.\r\n\r\nHowever, if instead of using body parsing middleware, I change the app to use home-grown body parser, here:\r\nhttps://gist.githubusercontent.com/digressionary/8898b55177ee5a1a8ebd0d143b3ee0c8/raw/b540d9e522ffd48d98896ea201795b11f64543db/index.js\r\n\r\nWhen I send the same request and console.log out req.body, it is populated with this JSON object: `{\"username\":\"redacted\",\"password\":\"redacted\"}`\r\n\r\nSo basically the observed behaviour is the body is included in the requests but not parsed by express or body-parser.  I'm not sure where exactly the issue is, so I will be cross-posting this bug in a few places :)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3990/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3990/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3989",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3989/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3989/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3989/events",
    "html_url": "https://github.com/expressjs/express/pull/3989",
    "id": 458107889,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg5NzgyMTcz",
    "number": 3989,
    "title": "route parametere issue solved. FIXED #2495",
    "user": {
      "login": "Anant016",
      "id": 29782958,
      "node_id": "MDQ6VXNlcjI5NzgyOTU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/29782958?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Anant016",
      "html_url": "https://github.com/Anant016",
      "followers_url": "https://api.github.com/users/Anant016/followers",
      "following_url": "https://api.github.com/users/Anant016/following{/other_user}",
      "gists_url": "https://api.github.com/users/Anant016/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Anant016/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Anant016/subscriptions",
      "organizations_url": "https://api.github.com/users/Anant016/orgs",
      "repos_url": "https://api.github.com/users/Anant016/repos",
      "events_url": "https://api.github.com/users/Anant016/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Anant016/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 133578716,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/deps",
        "name": "deps",
        "color": "444444",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-06-19T16:22:45Z",
    "updated_at": "2019-06-19T16:24:51Z",
    "closed_at": "2019-06-19T16:24:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3989",
      "html_url": "https://github.com/expressjs/express/pull/3989",
      "diff_url": "https://github.com/expressjs/express/pull/3989.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3989.patch",
      "merged_at": null
    },
    "body": "Fixed #2495\r\nI have checked and it is working fine with both conditions now.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3989/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3989/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3988",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3988/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3988/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3988/events",
    "html_url": "https://github.com/expressjs/express/issues/3988",
    "id": 457845359,
    "node_id": "MDU6SXNzdWU0NTc4NDUzNTk=",
    "number": 3988,
    "title": "How to find out the email of lead maintainer?",
    "user": {
      "login": "gaurav5430",
      "id": 12510548,
      "node_id": "MDQ6VXNlcjEyNTEwNTQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/12510548?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gaurav5430",
      "html_url": "https://github.com/gaurav5430",
      "followers_url": "https://api.github.com/users/gaurav5430/followers",
      "following_url": "https://api.github.com/users/gaurav5430/following{/other_user}",
      "gists_url": "https://api.github.com/users/gaurav5430/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gaurav5430/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gaurav5430/subscriptions",
      "organizations_url": "https://api.github.com/users/gaurav5430/orgs",
      "repos_url": "https://api.github.com/users/gaurav5430/repos",
      "events_url": "https://api.github.com/users/gaurav5430/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gaurav5430/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-06-19T07:14:30Z",
    "updated_at": "2019-06-19T10:35:06Z",
    "closed_at": "2019-06-19T10:34:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\r\n\r\nI would like to report some potential security issues. I have read the guidelines, but i am unable to find out the email of the lead maintainer.\r\n\r\nIs it purposefully not mentioned in the README and is there another way to find that out ?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3988/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3988/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3987",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3987/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3987/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3987/events",
    "html_url": "https://github.com/expressjs/express/issues/3987",
    "id": 457823541,
    "node_id": "MDU6SXNzdWU0NTc4MjM1NDE=",
    "number": 3987,
    "title": ".use() caches responses that .get() doesn't?",
    "user": {
      "login": "coolaj86",
      "id": 122831,
      "node_id": "MDQ6VXNlcjEyMjgzMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/122831?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/coolaj86",
      "html_url": "https://github.com/coolaj86",
      "followers_url": "https://api.github.com/users/coolaj86/followers",
      "following_url": "https://api.github.com/users/coolaj86/following{/other_user}",
      "gists_url": "https://api.github.com/users/coolaj86/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/coolaj86/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/coolaj86/subscriptions",
      "organizations_url": "https://api.github.com/users/coolaj86/orgs",
      "repos_url": "https://api.github.com/users/coolaj86/repos",
      "events_url": "https://api.github.com/users/coolaj86/events{/privacy}",
      "received_events_url": "https://api.github.com/users/coolaj86/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-06-19T06:08:53Z",
    "updated_at": "2019-06-19T06:17:05Z",
    "closed_at": "2019-06-19T06:17:05Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I haven't gotten a reduced test case yet, but I basically had code that looked like this:\r\n\r\n```js\r\napp.use(function (req, res, next) {\r\n  if (!isSpecial(req.url)) {\r\n    return next();\r\n  }\r\n  // .. do special stuff\r\n  res.render(view, data);\r\n});\r\n```\r\n\r\nAnd the strangest thing was happening where the request being sent back to the browser was the very first response.\r\n\r\nI quadruple checked throughout my whole pipeline that the data was correct at each stage and nothing was being cached. I was going crazy.\r\n\r\nThen I had a funny feeling in my little toe, so I changed `.use(fn)` to `.get('/', fn)` as seen here:\r\n\r\n```js\r\napp.get('/*', function (req, res, next) {\r\n  if (!isSpecial(req.url)) {\r\n    return next();\r\n  }\r\n  // .. do special stuff\r\n  res.render(view, data);\r\n});\r\n```\r\n\r\nAnd then it stopped caching the first request and began responding with the correct data. I did a git diff to make sure that I hadn't made any other code changes (other than comments and console.logs).\r\n\r\nWhat the heck was going on? Any hints?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3987/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3987/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3986",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3986/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3986/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3986/events",
    "html_url": "https://github.com/expressjs/express/issues/3986",
    "id": 457446770,
    "node_id": "MDU6SXNzdWU0NTc0NDY3NzA=",
    "number": 3986,
    "title": "Unable to clearCookie",
    "user": {
      "login": "justinkchen",
      "id": 1000741,
      "node_id": "MDQ6VXNlcjEwMDA3NDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1000741?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/justinkchen",
      "html_url": "https://github.com/justinkchen",
      "followers_url": "https://api.github.com/users/justinkchen/followers",
      "following_url": "https://api.github.com/users/justinkchen/following{/other_user}",
      "gists_url": "https://api.github.com/users/justinkchen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/justinkchen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/justinkchen/subscriptions",
      "organizations_url": "https://api.github.com/users/justinkchen/orgs",
      "repos_url": "https://api.github.com/users/justinkchen/repos",
      "events_url": "https://api.github.com/users/justinkchen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/justinkchen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-06-18T12:18:27Z",
    "updated_at": "2019-06-19T16:39:58Z",
    "closed_at": "2019-06-19T16:39:58Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I've got my code here which doesn't work at all in local dev because I can't hit the /api/users/logout endpoint even though my /api/users/login works...it seems to be hit in production though but clearCookie doesn't seem to have any effect on the cookie. Any thoughts on what looks wrong here?\r\n```\r\n\r\n// @route POST api/users/login\r\n// @desc Login user and return JWT token\r\n// @access Public\r\nrouter.post(\"/login\", (req, res) => {\r\n  // Form validation\r\n  const { errors, isValid } = validateLoginInput(req.body);\r\n  // Check validation\r\n  if (!isValid) {\r\n    return res.status(400).json(errors);\r\n  }\r\n  const email = req.body.email;\r\n  const password = req.body.password;\r\n  // Find user by email\r\n  User.findOne({ email }).then(user => {\r\n    // Check if user exists\r\n    if (!user) {\r\n      return res.status(404).json({ emailnotfound: \"Email not found\" });\r\n    }\r\n    // Check password\r\n    bcrypt.compare(password, user.password).then(isMatch => {\r\n      if (isMatch) {\r\n        // User matched\r\n        // Create JWT Payload\r\n        const payload = {\r\n          _id: user.id,\r\n          name: user.name,\r\n          email: user.email,\r\n          date: user.date,\r\n        };\r\n        // Sign token\r\n        const token = jwt.sign(\r\n          payload,\r\n          keys.secretOrKey,\r\n          {\r\n            expiresIn: 31556926 // 1 year in seconds\r\n          }\r\n        );\r\n\r\n        return res\r\n          .cookie('jwt', token, { httpOnly: true, secure: process.env.ENV !== 'development' })\r\n          .json({\r\n            success: true,\r\n            token: \"Bearer \" + token\r\n          });\r\n      } else {\r\n        return res\r\n          .status(400)\r\n          .json({ passwordincorrect: \"Password incorrect\" });\r\n      }\r\n    });\r\n  });\r\n\r\n  // @route GET api/users/logout\r\n  // @desc Logout the user and clear the JWT cookie\r\n  // @access Public\r\n  router.get(\"/logout\", (req, res) => {\r\n    console.log(\"logout\");\r\n    res.clearCookie('jwt', { httpOnly: true, secure: process.env.ENV !== 'development' });\r\n\r\n    return res.status(200).json({ success: true });\r\n  });\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3986/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3986/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3985",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3985/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3985/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3985/events",
    "html_url": "https://github.com/expressjs/express/issues/3985",
    "id": 457445389,
    "node_id": "MDU6SXNzdWU0NTc0NDUzODk=",
    "number": 3985,
    "title": "Express router Cannot GET ",
    "user": {
      "login": "justinkchen",
      "id": 1000741,
      "node_id": "MDQ6VXNlcjEwMDA3NDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1000741?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/justinkchen",
      "html_url": "https://github.com/justinkchen",
      "followers_url": "https://api.github.com/users/justinkchen/followers",
      "following_url": "https://api.github.com/users/justinkchen/following{/other_user}",
      "gists_url": "https://api.github.com/users/justinkchen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/justinkchen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/justinkchen/subscriptions",
      "organizations_url": "https://api.github.com/users/justinkchen/orgs",
      "repos_url": "https://api.github.com/users/justinkchen/repos",
      "events_url": "https://api.github.com/users/justinkchen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/justinkchen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2019-06-18T12:15:12Z",
    "updated_at": "2019-06-19T16:21:57Z",
    "closed_at": "2019-06-19T16:21:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "i'm trying to use express router to have an /api/users to handle things like /login and /logout endpoint. i have app.use(\"/api/users\", users); already and my login (which is a POST) seems to work, but when I try to add in a GET /logout method, i just see Cannot GET /api/users/logout any idea why? this is primarily a dev issue, i THINK i can hit it from production as long as its from an http request (otherwise React router seems to intercept it) \r\n\r\n``` \r\n\r\n// @route POST api/users/login\r\n// @desc Login user and return JWT token\r\n// @access Public\r\nrouter.post(\"/login\", (req, res) => {\r\n  // Form validation\r\n  const { errors, isValid } = validateLoginInput(req.body);\r\n  // Check validation\r\n  if (!isValid) {\r\n    return res.status(400).json(errors);\r\n  }\r\n  const email = req.body.email;\r\n  const password = req.body.password;\r\n  // Find user by email\r\n  User.findOne({ email }).then(user => {\r\n    // Check if user exists\r\n    if (!user) {\r\n      return res.status(404).json({ emailnotfound: \"Email not found\" });\r\n    }\r\n    // Check password\r\n    bcrypt.compare(password, user.password).then(isMatch => {\r\n      if (isMatch) {\r\n        // User matched\r\n        // Create JWT Payload\r\n        const payload = {\r\n          _id: user.id,\r\n          name: user.name,\r\n          email: user.email,\r\n          date: user.date,\r\n        };\r\n        // Sign token\r\n        const token = jwt.sign(\r\n          payload,\r\n          keys.secretOrKey,\r\n          {\r\n            expiresIn: 31556926 // 1 year in seconds\r\n          }\r\n        );\r\n\r\n        return res\r\n          .cookie('jwt', token, { httpOnly: true, secure: process.env.ENV !== 'development' })\r\n          .json({\r\n            success: true,\r\n            token: \"Bearer \" + token\r\n          });\r\n      } else {\r\n        return res\r\n          .status(400)\r\n          .json({ passwordincorrect: \"Password incorrect\" });\r\n      }\r\n    });\r\n  });\r\n\r\n  // @route GET api/users/logout\r\n  // @desc Logout the user and clear the JWT cookie\r\n  // @access Public\r\n  router.get(\"/logout\", (req, res) => {\r\n    console.log(\"logout\");\r\n    res.clearCookie('jwt', { httpOnly: true, secure: process.env.ENV !== 'development' });\r\n\r\n    return res.status(200).json({ success: true });\r\n  });```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3985/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3985/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3984",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3984/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3984/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3984/events",
    "html_url": "https://github.com/expressjs/express/issues/3984",
    "id": 457024027,
    "node_id": "MDU6SXNzdWU0NTcwMjQwMjc=",
    "number": 3984,
    "title": "dependency cookie-signature v1.0.6 uses sha1, flagged by security tool",
    "user": {
      "login": "gaurav5430",
      "id": 12510548,
      "node_id": "MDQ6VXNlcjEyNTEwNTQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/12510548?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gaurav5430",
      "html_url": "https://github.com/gaurav5430",
      "followers_url": "https://api.github.com/users/gaurav5430/followers",
      "following_url": "https://api.github.com/users/gaurav5430/following{/other_user}",
      "gists_url": "https://api.github.com/users/gaurav5430/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gaurav5430/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gaurav5430/subscriptions",
      "organizations_url": "https://api.github.com/users/gaurav5430/orgs",
      "repos_url": "https://api.github.com/users/gaurav5430/repos",
      "events_url": "https://api.github.com/users/gaurav5430/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gaurav5430/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 133578716,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/deps",
        "name": "deps",
        "color": "444444",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-06-17T16:17:19Z",
    "updated_at": "2019-06-17T16:43:16Z",
    "closed_at": "2019-06-17T16:20:06Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am using express v4.16.4 , it has [cookie-signature](https://github.com/tj/node-cookie-signature) v1.0.6 as a dependency.\r\nMy organization uses a tool called [checkmarx](https://www.checkmarx.com/) which has flagged cookie-parser v1.0.6 as using sha1 and categorized this is as a security vulnerability because sha1 is broken now (sha1, as I understand is being used to avoid timing attacks and not for any kind of cryptographic signing in this case, so this is seems like a false positive). \r\n\r\nI also understand that since then cookie-parser has moved on to using `crypto.timingSafeEqual` instead of sha1 , based on https://github.com/tj/node-cookie-signature/pull/22 and https://github.com/tj/node-cookie-signature/pull/24\r\n\r\nare there any plans to have express depend on v1.1.0 of cookie-parser, so that now these false(?) security flags can be avoided?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3984/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3984/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3983",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3983/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3983/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3983/events",
    "html_url": "https://github.com/expressjs/express/issues/3983",
    "id": 456992452,
    "node_id": "MDU6SXNzdWU0NTY5OTI0NTI=",
    "number": 3983,
    "title": "Pipe file to express response",
    "user": {
      "login": "BilalBoulifa",
      "id": 6527549,
      "node_id": "MDQ6VXNlcjY1Mjc1NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6527549?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BilalBoulifa",
      "html_url": "https://github.com/BilalBoulifa",
      "followers_url": "https://api.github.com/users/BilalBoulifa/followers",
      "following_url": "https://api.github.com/users/BilalBoulifa/following{/other_user}",
      "gists_url": "https://api.github.com/users/BilalBoulifa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BilalBoulifa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BilalBoulifa/subscriptions",
      "organizations_url": "https://api.github.com/users/BilalBoulifa/orgs",
      "repos_url": "https://api.github.com/users/BilalBoulifa/repos",
      "events_url": "https://api.github.com/users/BilalBoulifa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BilalBoulifa/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-06-17T15:13:58Z",
    "updated_at": "2019-06-17T17:17:04Z",
    "closed_at": "2019-06-17T17:17:03Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I want to download a remote file, for this I'm using the request module to pipe the file to the user.\r\n\r\nthis is the code that I'm using\r\n\r\nvar options = {\r\n            method: 'GET',\r\n            url: 'https://www.onsemi.com/pub/Collateral/P2N2222A-D.PDF'\r\n};\r\n__request(options)\r\n        .on('end',function(){\r\n            console.log('end');\r\n        })\r\n        .on(\"error\",function(err){\r\n            console.log('error')\r\n          })\r\n        .pipe(__fs.createWriteStream('test.pdf'))\r\n        //.pipe(res);\r\n\r\n\r\nwhen doing  .pipe(__fs.createWriteStream('test.pdf')) I'm getting the file on disk without any issue\r\n\r\nbut when doing .pipe(res); I'm receiving the below response header which seems correct but I'm not receiving the file on the client side, what I'm doing wrong ?\r\n\r\n\r\nResponseHeader:\r\nHTTP/1.1 200 OK\r\nX-Powered-By: Express\r\nserver: Apache/2.2.15 (Oracle)\r\ncontent-disposition: inline; filename=\"P2N2222A-D.PDF\"\r\ncontent-type: application/pdf\r\ncontent-length: 122542\r\ncache-control: max-age=0\r\nexpires: Mon, 17 Jun 2019 15:10:57 GMT\r\ndate: Mon, 17 Jun 2019 15:10:57 GMT\r\nconnection: close\r\naccess-control-allow-headers: X-Requested-With\r\naccess-control-allow-origin: *",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3983/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3983/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3982",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3982/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3982/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3982/events",
    "html_url": "https://github.com/expressjs/express/issues/3982",
    "id": 456640361,
    "node_id": "MDU6SXNzdWU0NTY2NDAzNjE=",
    "number": 3982,
    "title": "Content-Type value is converted to lowercase",
    "user": {
      "login": "Madayano",
      "id": 21341579,
      "node_id": "MDQ6VXNlcjIxMzQxNTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/21341579?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Madayano",
      "html_url": "https://github.com/Madayano",
      "followers_url": "https://api.github.com/users/Madayano/followers",
      "following_url": "https://api.github.com/users/Madayano/following{/other_user}",
      "gists_url": "https://api.github.com/users/Madayano/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Madayano/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Madayano/subscriptions",
      "organizations_url": "https://api.github.com/users/Madayano/orgs",
      "repos_url": "https://api.github.com/users/Madayano/repos",
      "events_url": "https://api.github.com/users/Madayano/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Madayano/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-06-16T13:14:35Z",
    "updated_at": "2019-06-17T07:36:55Z",
    "closed_at": "2019-06-16T14:31:29Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\r\nI have an issue when i set the content-type with res.set('Content-Type', 'UPPERCASE-CONTENT-TYPE');. The response I receive is then written in lower case: 'uppercase-content-type'.\r\n\r\nIs there a way to set the value without it being written in lower case?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3982/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3982/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3981",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3981/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3981/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3981/events",
    "html_url": "https://github.com/expressjs/express/pull/3981",
    "id": 455938379,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg4MDg0NDE0",
    "number": 3981,
    "title": "Provision to pass json replacer with a set of options.",
    "user": {
      "login": "prkeshri",
      "id": 6885298,
      "node_id": "MDQ6VXNlcjY4ODUyOTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6885298?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prkeshri",
      "html_url": "https://github.com/prkeshri",
      "followers_url": "https://api.github.com/users/prkeshri/followers",
      "following_url": "https://api.github.com/users/prkeshri/following{/other_user}",
      "gists_url": "https://api.github.com/users/prkeshri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prkeshri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prkeshri/subscriptions",
      "organizations_url": "https://api.github.com/users/prkeshri/orgs",
      "repos_url": "https://api.github.com/users/prkeshri/repos",
      "events_url": "https://api.github.com/users/prkeshri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prkeshri/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-06-13T20:29:30Z",
    "updated_at": "2022-10-06T14:16:29Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3981",
      "html_url": "https://github.com/expressjs/express/pull/3981",
      "diff_url": "https://github.com/expressjs/express/pull/3981.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3981.patch",
      "merged_at": null
    },
    "body": "app.set('json replacer', {\r\n\tfn: function(key, value, {req, res}) { ...},\r\n\treqRes: true\r\n});\r\nThis is another way.\r\nOne of the options is reqRes : true. In this case, the replacer function is called with req and res objects, which can be used to customise the replacement process according to the request.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3981/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3981/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3980",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3980/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3980/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3980/events",
    "html_url": "https://github.com/expressjs/express/issues/3980",
    "id": 454453401,
    "node_id": "MDU6SXNzdWU0NTQ0NTM0MDE=",
    "number": 3980,
    "title": "Client Cannot GET /xxx.html before accessing main ",
    "user": {
      "login": "ctlkkc",
      "id": 37203109,
      "node_id": "MDQ6VXNlcjM3MjAzMTA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/37203109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctlkkc",
      "html_url": "https://github.com/ctlkkc",
      "followers_url": "https://api.github.com/users/ctlkkc/followers",
      "following_url": "https://api.github.com/users/ctlkkc/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctlkkc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctlkkc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctlkkc/subscriptions",
      "organizations_url": "https://api.github.com/users/ctlkkc/orgs",
      "repos_url": "https://api.github.com/users/ctlkkc/repos",
      "events_url": "https://api.github.com/users/ctlkkc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctlkkc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-06-11T02:37:33Z",
    "updated_at": "2019-06-12T03:42:39Z",
    "closed_at": "2019-06-11T11:29:30Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have the following server side code:\r\n\r\n```\r\nvar app = express();\r\napp.get('/', function (req, res) {\r\n\tres.redirect('/main');\r\n});\r\napp.get('/main', function (req, res) {\r\n\tvar d = new Date();\r\n\tres.sendFile(path.join(__dirname + '/main.html'));\r\n\tInfo(req.ip + ' - Session to main.html built successfully! ');\r\n\tapp.use(express.static(__dirname));\r\n});\r\n```\r\n\r\nAlso there are some other html files in the same directory, e.g. xxx.html.  \r\nI found the following behavior that confuses, if I build a new session, try to access localhost:7778/xxx.html, the client cannot get: Cannot GET /xxx.html:\r\n\r\n```\r\nFailed to load resource: the server responded with a status of 404 (Not Found)\r\n```\r\n\r\nOn the other hand, after accessed localhost:7778/, and then try to access localhost:7778/xxx.html, will succeed.\r\n\r\nCan anyone explain the behavior? Can I set the localhost/xxx.html be able to directly accessed?\r\n\r\nThanks a lot!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3980/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3980/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3979",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3979/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3979/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3979/events",
    "html_url": "https://github.com/expressjs/express/pull/3979",
    "id": 452290340,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg1MjA4Njk5",
    "number": 3979,
    "title": "Add CodeTriage badge to expressjs/express",
    "user": {
      "login": "codetriage-readme-bot",
      "id": 35302948,
      "node_id": "MDQ6VXNlcjM1MzAyOTQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/35302948?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codetriage-readme-bot",
      "html_url": "https://github.com/codetriage-readme-bot",
      "followers_url": "https://api.github.com/users/codetriage-readme-bot/followers",
      "following_url": "https://api.github.com/users/codetriage-readme-bot/following{/other_user}",
      "gists_url": "https://api.github.com/users/codetriage-readme-bot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codetriage-readme-bot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codetriage-readme-bot/subscriptions",
      "organizations_url": "https://api.github.com/users/codetriage-readme-bot/orgs",
      "repos_url": "https://api.github.com/users/codetriage-readme-bot/repos",
      "events_url": "https://api.github.com/users/codetriage-readme-bot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codetriage-readme-bot/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2019-06-05T02:42:14Z",
    "updated_at": "2020-03-04T21:55:25Z",
    "closed_at": "2020-03-04T21:55:25Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3979",
      "html_url": "https://github.com/expressjs/express/pull/3979",
      "diff_url": "https://github.com/expressjs/express/pull/3979.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3979.patch",
      "merged_at": null
    },
    "body": "Adds a badge showing the number of people helping this repo on CodeTriage.\n\n[![Open Source Helpers](https://www.codetriage.com/expressjs/express/badges/users.svg)](https://www.codetriage.com/expressjs/express)\n\n\n## What is CodeTriage?\n\nCodeTriage is an Open Source app that is designed to make contributing to Open Source projects easier. It works by sending subscribers a few open issues in their inbox. If subscribers get busy, there is an algorithm that backs off issue load so they do not get overwhelmed\n\n[Read more about the CodeTriage project](https://www.codetriage.com/what).\n\n## Why am I getting this PR?\n\nYour project was picked by the human, @schneems. They selected it from the projects submitted to https://www.codetriage.com and hand edited the PR. How did your project get added to [CodeTriage](https://www.codetriage.com/what)? Roughly about 3 years ago, [joshsaintjacque](https://github.com/joshsaintjacque) added this project to CodeTriage in order to start contributing. Since then, 40 people have subscribed to help this repo.\n\n## What does adding a badge accomplish?\n\nAdding a badge invites people to help contribute to your project. It also lets developers know that others are invested in the longterm success and maintainability of the project.\n\nYou can see an example of a CodeTriage badge on these popular OSS READMEs:\n\n- [![Email clients like GMAIL do not render SVG images](https://www.codetriage.com/rails/rails/badges/users.svg)](https://www.codetriage.com/rails/rails) https://github.com/rails/rails\n- [![Email clients like GMAIL do not render SVG images](https://www.codetriage.com/crystal-lang/crystal/badges/users.svg)](https://www.codetriage.com/crystal-lang/crystal) https://github.com/crystal-lang/crystal\n\n## Have a question or comment?\n\nWhile I am a bot, this PR was manually reviewed and monitored by a human - @schneems. My job is writing commit messages and handling PR logistics.\n\nIf you have any questions, you can reply back to this PR and they will be answered by @schneems. If you do not want a badge right now, no worries, close the PR, you will not hear from me again.\n\nThanks for making your project Open Source! Any feedback is greatly appreciated.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3979/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3979/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3978",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3978/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3978/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3978/events",
    "html_url": "https://github.com/expressjs/express/issues/3978",
    "id": 452115608,
    "node_id": "MDU6SXNzdWU0NTIxMTU2MDg=",
    "number": 3978,
    "title": "CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
    "user": {
      "login": "Yohanna",
      "id": 6926228,
      "node_id": "MDQ6VXNlcjY5MjYyMjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6926228?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Yohanna",
      "html_url": "https://github.com/Yohanna",
      "followers_url": "https://api.github.com/users/Yohanna/followers",
      "following_url": "https://api.github.com/users/Yohanna/following{/other_user}",
      "gists_url": "https://api.github.com/users/Yohanna/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Yohanna/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Yohanna/subscriptions",
      "organizations_url": "https://api.github.com/users/Yohanna/orgs",
      "repos_url": "https://api.github.com/users/Yohanna/repos",
      "events_url": "https://api.github.com/users/Yohanna/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Yohanna/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-06-04T17:22:18Z",
    "updated_at": "2019-06-04T18:16:20Z",
    "closed_at": "2019-06-04T17:25:30Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When I run [Audit JS](https://github.com/OSSIndex/auditjs) scan on the latest ExpressJS module, v `4.17.1`, I get the following security warning:\r\n\r\n```sh\r\nexpress 4.17.1  [VULNERABLE]   1 known vulnerabilities affecting installed version\r\n\r\nCWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')\r\nThe software uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the software does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.\r\n\r\nID: e1f470a8-5800-4828-bad8-a6f001221b16\r\nDetails: https://ossindex.sonatype.org/vuln/e1f470a8-5800-4828-bad8-a6f001221b16\r\nDependency path: /express\r\n```\r\n\r\nI couldn't find any recent issues about this so I'm not sure if it's already fixed, or if it's just happening in my local environment?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3978/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3978/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3977",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3977/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3977/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3977/events",
    "html_url": "https://github.com/expressjs/express/issues/3977",
    "id": 452089075,
    "node_id": "MDU6SXNzdWU0NTIwODkwNzU=",
    "number": 3977,
    "title": "Match route based on request URL",
    "user": {
      "login": "viglucci",
      "id": 6305490,
      "node_id": "MDQ6VXNlcjYzMDU0OTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6305490?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/viglucci",
      "html_url": "https://github.com/viglucci",
      "followers_url": "https://api.github.com/users/viglucci/followers",
      "following_url": "https://api.github.com/users/viglucci/following{/other_user}",
      "gists_url": "https://api.github.com/users/viglucci/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/viglucci/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/viglucci/subscriptions",
      "organizations_url": "https://api.github.com/users/viglucci/orgs",
      "repos_url": "https://api.github.com/users/viglucci/repos",
      "events_url": "https://api.github.com/users/viglucci/events{/privacy}",
      "received_events_url": "https://api.github.com/users/viglucci/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-06-04T16:19:06Z",
    "updated_at": "2019-06-04T16:31:21Z",
    "closed_at": "2019-06-04T16:31:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Given an instance of an express app or router, is it possible to match a request against the apps configured routes and receive a object that describes the route as registered with the app?\r\n\r\nIn our use-case, we have a middleware (via `app.use(...)`) that in some configurations intercepts and terminates all requests and returns a cached response. Because of this, we are unable to determine which handler would have ultimately satisfied the request, and some of our logging/reporting is worse off because of it. If we were able to determine which route would have handle the request, this would be hugely helpful.\r\n\r\nIs this possible today? If not, would the existing API support such an addition?\r\n\r\nDesirable sudo(ish) code:\r\n```js\r\nconst app = express();\r\n\r\napp.use((req, res, next) => {\r\n    const handler = app.match(req);\r\n    // {\r\n    //     'method': 'GET',\r\n    //     'path': '/user/:id', <--- mainly looking for this\r\n    //     'handler': <function reference>\r\n    // }\r\n    next();\r\n});\r\n\r\napp.get('/user/:id', (req, res, next) => {\r\n    // fetch the user and do something with it\r\n});\r\n\r\n...\r\n```\r\n\r\nThanks",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3977/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3977/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  }
]