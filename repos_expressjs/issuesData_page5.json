[
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4648",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4648/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4648/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4648/events",
    "html_url": "https://github.com/expressjs/express/issues/4648",
    "id": 948502654,
    "node_id": "MDU6SXNzdWU5NDg1MDI2NTQ=",
    "number": 4648,
    "title": "How to change the HTML, when <select> element value changes?",
    "user": {
      "login": "imagine3D-ai",
      "id": 69309676,
      "node_id": "MDQ6VXNlcjY5MzA5Njc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/69309676?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/imagine3D-ai",
      "html_url": "https://github.com/imagine3D-ai",
      "followers_url": "https://api.github.com/users/imagine3D-ai/followers",
      "following_url": "https://api.github.com/users/imagine3D-ai/following{/other_user}",
      "gists_url": "https://api.github.com/users/imagine3D-ai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/imagine3D-ai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/imagine3D-ai/subscriptions",
      "organizations_url": "https://api.github.com/users/imagine3D-ai/orgs",
      "repos_url": "https://api.github.com/users/imagine3D-ai/repos",
      "events_url": "https://api.github.com/users/imagine3D-ai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/imagine3D-ai/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-07-20T10:08:27Z",
    "updated_at": "2021-07-21T17:48:33Z",
    "closed_at": "2021-07-21T17:47:40Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have a select element with multiple values and I need to use Express inline interpolation to change the Pug template when the value of select element changes, for example:\r\n\r\n```\r\nselect \r\n   option Apple\r\n   option Orange\r\n\r\n//THIS PART DOESN'T WORK\r\nif select.value=='Apple'\r\n   h1 #{apple.price}\r\n\r\n```\r\n\r\n\r\nI'm passing 'apple' object to Pug template via Express `res.renderer` in the example. When the user picks an 'Apple' option I need to change the `h1` value to be `apple.price`, and in case of 'Orange' option, some other value.\r\nCan this be done with Express?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4648/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4648/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4647",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4647/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4647/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4647/events",
    "html_url": "https://github.com/expressjs/express/issues/4647",
    "id": 948070819,
    "node_id": "MDU6SXNzdWU5NDgwNzA4MTk=",
    "number": 4647,
    "title": "QUESTIONS:: Why express redirects when i tried to open a static page",
    "user": {
      "login": "harshit123hh",
      "id": 30870362,
      "node_id": "MDQ6VXNlcjMwODcwMzYy",
      "avatar_url": "https://avatars.githubusercontent.com/u/30870362?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/harshit123hh",
      "html_url": "https://github.com/harshit123hh",
      "followers_url": "https://api.github.com/users/harshit123hh/followers",
      "following_url": "https://api.github.com/users/harshit123hh/following{/other_user}",
      "gists_url": "https://api.github.com/users/harshit123hh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/harshit123hh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/harshit123hh/subscriptions",
      "organizations_url": "https://api.github.com/users/harshit123hh/orgs",
      "repos_url": "https://api.github.com/users/harshit123hh/repos",
      "events_url": "https://api.github.com/users/harshit123hh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/harshit123hh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 548077790,
        "node_id": "MDU6TGFiZWw1NDgwNzc3OTA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:express-static",
        "name": "module:express-static",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2021-07-19T22:16:35Z",
    "updated_at": "2021-07-20T15:36:43Z",
    "closed_at": "2021-07-19T22:19:53Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi, I was trying to make my own web server in cpp so i was trying to learn how http and express in itself works.\r\nWhen i was trying to see how express static page is displayed in browser . i discovered that express redirect you one time when you are trying to load a statically  host html page\r\n\r\n\r\n### My express code\r\n`const express = require('express')\r\nconst app = express();\r\napp.listen(4000);\r\n\r\napp.get(\"/\",(req,res)=>{\r\n    res.send(\"Harshit\")\r\n})\r\n\r\napp.use(\"/html\",express.static(\"./public\"))`\r\n\r\n\r\n###My client side\r\n\r\n`http --follow --all --verbose GET http://localhost:4000/html    ``\r\nGET /html HTTP/1.1\r\nAccept: */*\r\nAccept-Encoding: gzip, deflate\r\nConnection: keep-alive\r\nHost: localhost:4000\r\nUser-Agent: HTTPie/2.4.0\r\n\r\n\r\n\r\nHTTP/1.1 301 Moved Permanently\r\nConnection: keep-alive\r\nContent-Length: 175\r\nContent-Security-Policy: default-src 'none'\r\nContent-Type: text/html; charset=UTF-8\r\nDate: Mon, 19 Jul 2021 21:46:50 GMT\r\nKeep-Alive: timeout=5\r\nLocation: /html/\r\nX-Content-Type-Options: nosniff\r\nX-Powered-By: Express\r\n\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n<meta charset=\"utf-8\">\r\n<title>Redirecting</title>\r\n</head>\r\n<body>\r\n<pre>Redirecting to <a href=\"/html/\">/html/</a></pre>\r\n</body>\r\n</html>\r\n\r\n\r\nGET /html/ HTTP/1.1\r\nAccept: */*\r\nAccept-Encoding: gzip, deflate\r\nConnection: keep-alive\r\nHost: localhost:4000\r\nUser-Agent: HTTPie/2.4.0\r\n\r\n\r\n\r\nHTTP/1.1 200 OK\r\nAccept-Ranges: bytes\r\nCache-Control: public, max-age=0\r\nConnection: keep-alive\r\nContent-Length: 263\r\nContent-Type: text/html; charset=UTF-8\r\nDate: Mon, 19 Jul 2021 21:46:50 GMT\r\nETag: W/\"107-17ac0b0b192\"\r\nKeep-Alive: timeout=5\r\nLast-Modified: Mon, 19 Jul 2021 21:34:03 GMT\r\nX-Powered-By: Express\r\n\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Document</title>\r\n</head>\r\n<body>\r\n    \r\n</body>\r\n</html>`\r\n\r\n\r\n### response end\r\nhere you can see express first send 301 status code \r\n\r\n\r\n**so i want to know why this is the case or .....basically why**\r\n\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4647/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4647/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4646",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4646/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4646/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4646/events",
    "html_url": "https://github.com/expressjs/express/issues/4646",
    "id": 946220011,
    "node_id": "MDU6SXNzdWU5NDYyMjAwMTE=",
    "number": 4646,
    "title": "Can I integrate cors library into express Framework? ",
    "user": {
      "login": "mouadTaoussi",
      "id": 50294614,
      "node_id": "MDQ6VXNlcjUwMjk0NjE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/50294614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mouadTaoussi",
      "html_url": "https://github.com/mouadTaoussi",
      "followers_url": "https://api.github.com/users/mouadTaoussi/followers",
      "following_url": "https://api.github.com/users/mouadTaoussi/following{/other_user}",
      "gists_url": "https://api.github.com/users/mouadTaoussi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mouadTaoussi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mouadTaoussi/subscriptions",
      "organizations_url": "https://api.github.com/users/mouadTaoussi/orgs",
      "repos_url": "https://api.github.com/users/mouadTaoussi/repos",
      "events_url": "https://api.github.com/users/mouadTaoussi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mouadTaoussi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-07-16T11:47:39Z",
    "updated_at": "2021-07-16T21:01:02Z",
    "closed_at": "2021-07-16T13:32:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Hello everyone! I Hope you are going well!**\r\n\r\nMy question is there is the ability to integrate **cors** library into express.js Framework?\r\nJust like body-parser?\r\nIf not I'm gonna be glad and happy to know the reasons!\r\n\r\n**Thank you!**",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4646/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4646/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4645",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4645/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4645/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4645/events",
    "html_url": "https://github.com/expressjs/express/issues/4645",
    "id": 946166391,
    "node_id": "MDU6SXNzdWU5NDYxNjYzOTE=",
    "number": 4645,
    "title": "How could i get remote address in header?",
    "user": {
      "login": "george6680",
      "id": 26359873,
      "node_id": "MDQ6VXNlcjI2MzU5ODcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/26359873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/george6680",
      "html_url": "https://github.com/george6680",
      "followers_url": "https://api.github.com/users/george6680/followers",
      "following_url": "https://api.github.com/users/george6680/following{/other_user}",
      "gists_url": "https://api.github.com/users/george6680/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/george6680/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/george6680/subscriptions",
      "organizations_url": "https://api.github.com/users/george6680/orgs",
      "repos_url": "https://api.github.com/users/george6680/repos",
      "events_url": "https://api.github.com/users/george6680/events{/privacy}",
      "received_events_url": "https://api.github.com/users/george6680/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-07-16T10:41:58Z",
    "updated_at": "2021-07-16T13:35:31Z",
    "closed_at": "2021-07-16T13:35:27Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Is there any way to get the remote address by using router.post() function, \r\nI need to get the remote address information from the requester, thank you.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4645/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4645/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4643",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4643/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4643/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4643/events",
    "html_url": "https://github.com/expressjs/express/pull/4643",
    "id": 941492131,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Njg3MzY0NTI1",
    "number": 4643,
    "title": "Update {Redis-connect} and {hbs} to fix vulnerabilities",
    "user": {
      "login": "Albertobar94",
      "id": 73672526,
      "node_id": "MDQ6VXNlcjczNjcyNTI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/73672526?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Albertobar94",
      "html_url": "https://github.com/Albertobar94",
      "followers_url": "https://api.github.com/users/Albertobar94/followers",
      "following_url": "https://api.github.com/users/Albertobar94/following{/other_user}",
      "gists_url": "https://api.github.com/users/Albertobar94/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Albertobar94/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Albertobar94/subscriptions",
      "organizations_url": "https://api.github.com/users/Albertobar94/orgs",
      "repos_url": "https://api.github.com/users/Albertobar94/repos",
      "events_url": "https://api.github.com/users/Albertobar94/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Albertobar94/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 133578716,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/deps",
        "name": "deps",
        "color": "444444",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-07-11T16:49:37Z",
    "updated_at": "2021-08-01T01:36:51Z",
    "closed_at": "2021-08-01T01:36:51Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4643",
      "html_url": "https://github.com/expressjs/express/pull/4643",
      "diff_url": "https://github.com/expressjs/express/pull/4643.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4643.patch",
      "merged_at": "2021-08-01T01:36:51Z"
    },
    "body": "There were 6 vulnerabilities using npm audit.\r\nWe can fix them by upgrading the packages.\r\nAll tests passed!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4643/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4643/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4642",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4642/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4642/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4642/events",
    "html_url": "https://github.com/expressjs/express/issues/4642",
    "id": 940586289,
    "node_id": "MDU6SXNzdWU5NDA1ODYyODk=",
    "number": 4642,
    "title": "How to change CSS properties using URL building?",
    "user": {
      "login": "da-source",
      "id": 73023767,
      "node_id": "MDQ6VXNlcjczMDIzNzY3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73023767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/da-source",
      "html_url": "https://github.com/da-source",
      "followers_url": "https://api.github.com/users/da-source/followers",
      "following_url": "https://api.github.com/users/da-source/following{/other_user}",
      "gists_url": "https://api.github.com/users/da-source/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/da-source/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/da-source/subscriptions",
      "organizations_url": "https://api.github.com/users/da-source/orgs",
      "repos_url": "https://api.github.com/users/da-source/repos",
      "events_url": "https://api.github.com/users/da-source/events{/privacy}",
      "received_events_url": "https://api.github.com/users/da-source/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2021-07-09T09:23:43Z",
    "updated_at": "2021-07-12T07:03:48Z",
    "closed_at": "2021-07-11T17:01:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Let's say there is an element and I need to simply change the color property:\r\n```\r\n<p id='text'>COLOR</p>\r\n\r\n<script>\r\ndocument.getElementById('text').style.color = \"red\";\r\n</script>\r\n```\r\nHow can I achieve this by using the dynamic route parameter as described [here](https://www.tutorialspoint.com/expressjs/expressjs_url_building.htm) for example\r\n`http://localhost:3000/colors/blue`\r\nwould make the `style.color` property of text element, blue.\r\n\r\n```\r\napp.get('/template/:color', function(req, res){\r\n  res.render('view', {\r\n    text: MyText \r\n    //change css property of 'text' using 'color' url parameter\r\n  });\r\n });\r\n```\r\n\r\nHow can I change the `style.color` property of a DOM element using Express URL?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4642/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4642/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4641",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4641/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4641/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4641/events",
    "html_url": "https://github.com/expressjs/express/issues/4641",
    "id": 940027997,
    "node_id": "MDU6SXNzdWU5NDAwMjc5OTc=",
    "number": 4641,
    "title": "How to pass async function output to the renderer?",
    "user": {
      "login": "imagine3D-ai",
      "id": 69309676,
      "node_id": "MDQ6VXNlcjY5MzA5Njc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/69309676?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/imagine3D-ai",
      "html_url": "https://github.com/imagine3D-ai",
      "followers_url": "https://api.github.com/users/imagine3D-ai/followers",
      "following_url": "https://api.github.com/users/imagine3D-ai/following{/other_user}",
      "gists_url": "https://api.github.com/users/imagine3D-ai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/imagine3D-ai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/imagine3D-ai/subscriptions",
      "organizations_url": "https://api.github.com/users/imagine3D-ai/orgs",
      "repos_url": "https://api.github.com/users/imagine3D-ai/repos",
      "events_url": "https://api.github.com/users/imagine3D-ai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/imagine3D-ai/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 14,
    "created_at": "2021-07-08T16:25:25Z",
    "updated_at": "2021-07-13T12:01:26Z",
    "closed_at": "2021-07-13T11:59:34Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm having trouble using async functions and Express renderers. I make a request to get a sample XML file, parse it and now I would like to pass it to Express renderer to dynamically display the value on a page. My renderer router:\r\n\r\n```\r\napp.get('/dynamic_view', function(req, res){\r\n    res.render('dynamic', {\r\n        name: //pass my output here\r\n    });\r\n });\r\n```\r\nand I get my async output like this:\r\n\r\n```\r\nconst parseString = require('xml2js').parseString;\r\nconst axios = require('axios');\r\n\r\nlet url = 'https://www.w3schools.com/xml/simple.xml';\r\n\r\n    axios.get(url)\r\n      .then(response => {\r\n        parseString(response.data, function (err, result) {\r\n          console.log(result.breakfast_menu.food[0].name); // returns 'Belgian Waffles'\r\n        });        \r\n      })\r\n```\r\nHow do I pass my Async variable output, which should be 'Belgian Waffles', to name property of` res.renderer`?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4641/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4641/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4638",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4638/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4638/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4638/events",
    "html_url": "https://github.com/expressjs/express/issues/4638",
    "id": 937733036,
    "node_id": "MDU6SXNzdWU5Mzc3MzMwMzY=",
    "number": 4638,
    "title": "Cannot install express, and doesn't show up on npm.",
    "user": {
      "login": "Vexxlol",
      "id": 40529545,
      "node_id": "MDQ6VXNlcjQwNTI5NTQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/40529545?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Vexxlol",
      "html_url": "https://github.com/Vexxlol",
      "followers_url": "https://api.github.com/users/Vexxlol/followers",
      "following_url": "https://api.github.com/users/Vexxlol/following{/other_user}",
      "gists_url": "https://api.github.com/users/Vexxlol/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Vexxlol/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Vexxlol/subscriptions",
      "organizations_url": "https://api.github.com/users/Vexxlol/orgs",
      "repos_url": "https://api.github.com/users/Vexxlol/repos",
      "events_url": "https://api.github.com/users/Vexxlol/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Vexxlol/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2021-07-06T10:08:32Z",
    "updated_at": "2021-07-06T13:04:35Z",
    "closed_at": "2021-07-06T10:23:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "So just went to install express and it's not available.\r\n![image](https://user-images.githubusercontent.com/40529545/124582934-da5db600-de95-11eb-86a2-fa6e2cc64fe7.png)\r\n![image](https://user-images.githubusercontent.com/40529545/124582970-e6497800-de95-11eb-9b38-b5eac509594f.png)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4638/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4638/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4635",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4635/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4635/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4635/events",
    "html_url": "https://github.com/expressjs/express/pull/4635",
    "id": 937008461,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjgzNjMxNzI0",
    "number": 4635,
    "title": "Fixed Router.js test",
    "user": {
      "login": "saurabh-prakash",
      "id": 10282419,
      "node_id": "MDQ6VXNlcjEwMjgyNDE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/10282419?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/saurabh-prakash",
      "html_url": "https://github.com/saurabh-prakash",
      "followers_url": "https://api.github.com/users/saurabh-prakash/followers",
      "following_url": "https://api.github.com/users/saurabh-prakash/following{/other_user}",
      "gists_url": "https://api.github.com/users/saurabh-prakash/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/saurabh-prakash/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/saurabh-prakash/subscriptions",
      "organizations_url": "https://api.github.com/users/saurabh-prakash/orgs",
      "repos_url": "https://api.github.com/users/saurabh-prakash/repos",
      "events_url": "https://api.github.com/users/saurabh-prakash/events{/privacy}",
      "received_events_url": "https://api.github.com/users/saurabh-prakash/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 133578714,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/tests",
        "name": "tests",
        "color": "944008",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "saurabh-prakash",
      "id": 10282419,
      "node_id": "MDQ6VXNlcjEwMjgyNDE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/10282419?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/saurabh-prakash",
      "html_url": "https://github.com/saurabh-prakash",
      "followers_url": "https://api.github.com/users/saurabh-prakash/followers",
      "following_url": "https://api.github.com/users/saurabh-prakash/following{/other_user}",
      "gists_url": "https://api.github.com/users/saurabh-prakash/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/saurabh-prakash/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/saurabh-prakash/subscriptions",
      "organizations_url": "https://api.github.com/users/saurabh-prakash/orgs",
      "repos_url": "https://api.github.com/users/saurabh-prakash/repos",
      "events_url": "https://api.github.com/users/saurabh-prakash/events{/privacy}",
      "received_events_url": "https://api.github.com/users/saurabh-prakash/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "saurabh-prakash",
        "id": 10282419,
        "node_id": "MDQ6VXNlcjEwMjgyNDE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/10282419?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/saurabh-prakash",
        "html_url": "https://github.com/saurabh-prakash",
        "followers_url": "https://api.github.com/users/saurabh-prakash/followers",
        "following_url": "https://api.github.com/users/saurabh-prakash/following{/other_user}",
        "gists_url": "https://api.github.com/users/saurabh-prakash/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/saurabh-prakash/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/saurabh-prakash/subscriptions",
        "organizations_url": "https://api.github.com/users/saurabh-prakash/orgs",
        "repos_url": "https://api.github.com/users/saurabh-prakash/repos",
        "events_url": "https://api.github.com/users/saurabh-prakash/events{/privacy}",
        "received_events_url": "https://api.github.com/users/saurabh-prakash/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-07-05T11:46:18Z",
    "updated_at": "2021-07-30T20:21:24Z",
    "closed_at": "2021-07-30T20:20:50Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": true,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4635",
      "html_url": "https://github.com/expressjs/express/pull/4635",
      "diff_url": "https://github.com/expressjs/express/pull/4635.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4635.patch",
      "merged_at": null
    },
    "body": "Running the `Router.js` test individually:\r\n```\r\n$ ./node_modules/.bin/mocha test/Router.js\r\n\r\n\r\n  Router\r\n    ✓ should return a function with router methods\r\n    ✓ should support .use of other routers\r\n    1) should support dynamic routes\r\n    ✓ should handle blank URL\r\n    ✓ should handle missing URL\r\n    ✓ should not stack overflow with many registered routes (129ms)\r\n    .handle\r\n      2) should dispatch\r\n    .multiple callbacks\r\n      ✓ should throw if a callback is null\r\n      ✓ should throw if a callback is undefined\r\n      ✓ should throw if a callback is not a function\r\n      ✓ should not throw if all callbacks are functions\r\n    error\r\n      ✓ should skip non error middleware\r\n      ✓ should handle throwing inside routes with params\r\n      ✓ should handle throwing in handler after async param\r\n      ✓ should handle throwing inside error handlers\r\n    FQDN\r\n      ✓ should not obscure FQDNs\r\n      ✓ should ignore FQDN in search\r\n      ✓ should ignore FQDN in path\r\n      ✓ should adjust FQDN req.url\r\n      ✓ should adjust FQDN req.url with multiple handlers\r\n      ✓ should adjust FQDN req.url with multiple routed handlers\r\n    .all\r\n      ✓ should support using .all to capture all http verbs\r\n      ✓ should be called for any URL when \"*\"\r\n    .use\r\n      ✓ should require middleware\r\n      ✓ should reject string as middleware\r\n      ✓ should reject number as middleware\r\n      ✓ should reject null as middleware\r\n      ✓ should reject Date as middleware\r\n      ✓ should be called for any URL\r\n      ✓ should accept array of middleware\r\n    .param\r\n      ✓ should call param function when routing VERBS\r\n      ✓ should call param function when routing middleware\r\n      ✓ should only call once per request\r\n      ✓ should call when values differ\r\n    parallel requests\r\n      ✓ should not mix requests (54ms)\r\n\r\n\r\n  33 passing (236ms)\r\n  2 failing\r\n\r\n  1) Router\r\n       should support dynamic routes:\r\n     Uncaught TypeError: Cannot read property 'apply' of undefined\r\n      at Immediate.<anonymous> (lib/router/index.js:635:15)\r\n      at processImmediate (internal/timers.js:466:21)\r\n\r\n  2) Router\r\n       .handle\r\n         should dispatch:\r\n     Uncaught TypeError: Cannot read property 'apply' of undefined\r\n      at Immediate.<anonymous> (lib/router/index.js:635:15)\r\n      at processImmediate (internal/timers.js:466:21)\r\n\r\n\r\n```\r\nWith above fix:\r\n```\r\n$ ./node_modules/.bin/mocha test/Router.js\r\n\r\n\r\n  Router\r\n    ✓ should return a function with router methods\r\n    ✓ should support .use of other routers\r\n    ✓ should support dynamic routes\r\n    ✓ should handle blank URL\r\n    ✓ should handle missing URL\r\n    ✓ should not stack overflow with many registered routes (121ms)\r\n    .handle\r\n      ✓ should dispatch\r\n    .multiple callbacks\r\n      ✓ should throw if a callback is null\r\n      ✓ should throw if a callback is undefined\r\n      ✓ should throw if a callback is not a function\r\n      ✓ should not throw if all callbacks are functions\r\n    error\r\n      ✓ should skip non error middleware\r\n      ✓ should handle throwing inside routes with params\r\n      ✓ should handle throwing in handler after async param\r\n      ✓ should handle throwing inside error handlers\r\n    FQDN\r\n      ✓ should not obscure FQDNs\r\n      ✓ should ignore FQDN in search\r\n      ✓ should ignore FQDN in path\r\n      ✓ should adjust FQDN req.url\r\n      ✓ should adjust FQDN req.url with multiple handlers\r\n      ✓ should adjust FQDN req.url with multiple routed handlers\r\n    .all\r\n      ✓ should support using .all to capture all http verbs\r\n      ✓ should be called for any URL when \"*\"\r\n    .use\r\n      ✓ should require middleware\r\n      ✓ should reject string as middleware\r\n      ✓ should reject number as middleware\r\n      ✓ should reject null as middleware\r\n      ✓ should reject Date as middleware\r\n      ✓ should be called for any URL\r\n      ✓ should accept array of middleware\r\n    .param\r\n      ✓ should call param function when routing VERBS\r\n      ✓ should call param function when routing middleware\r\n      ✓ should only call once per request\r\n      ✓ should call when values differ\r\n    parallel requests\r\n      ✓ should not mix requests (56ms)\r\n\r\n\r\n  35 passing (230ms)\r\n\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4635/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4635/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4634",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4634/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4634/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4634/events",
    "html_url": "https://github.com/expressjs/express/issues/4634",
    "id": 936944997,
    "node_id": "MDU6SXNzdWU5MzY5NDQ5OTc=",
    "number": 4634,
    "title": "Request triager role for NawafSwe",
    "user": {
      "login": "NawafSwe",
      "id": 35840833,
      "node_id": "MDQ6VXNlcjM1ODQwODMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/35840833?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NawafSwe",
      "html_url": "https://github.com/NawafSwe",
      "followers_url": "https://api.github.com/users/NawafSwe/followers",
      "following_url": "https://api.github.com/users/NawafSwe/following{/other_user}",
      "gists_url": "https://api.github.com/users/NawafSwe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NawafSwe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NawafSwe/subscriptions",
      "organizations_url": "https://api.github.com/users/NawafSwe/orgs",
      "repos_url": "https://api.github.com/users/NawafSwe/repos",
      "events_url": "https://api.github.com/users/NawafSwe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NawafSwe/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-07-05T10:28:00Z",
    "updated_at": "2021-07-30T19:49:16Z",
    "closed_at": "2021-07-30T19:49:16Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Hey there, I hope everyone doing great!, I would like to join the express team and give it a try to be one of the active express contributor since I am using it for 2 years, it is time to make something in it.\r\n\r\nI have read and understood the project's Code of Conduct.\r\nI also have read and understood the process and best practices around Express triaging.\r\nI also have watched the <strong>Looking at the Future of Express: Using and Contributing to Express in 2020</strong>\r\n\r\nI request for a triager role for the following GitHub organizations:\r\n* expressjs/express. ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4634/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4634/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4633",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4633/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4633/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4633/events",
    "html_url": "https://github.com/expressjs/express/issues/4633",
    "id": 936516649,
    "node_id": "MDU6SXNzdWU5MzY1MTY2NDk=",
    "number": 4633,
    "title": "WHEN CAN WE EXPECT EXPRESS 5",
    "user": {
      "login": "Darek79",
      "id": 23696140,
      "node_id": "MDQ6VXNlcjIzNjk2MTQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/23696140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Darek79",
      "html_url": "https://github.com/Darek79",
      "followers_url": "https://api.github.com/users/Darek79/followers",
      "following_url": "https://api.github.com/users/Darek79/following{/other_user}",
      "gists_url": "https://api.github.com/users/Darek79/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Darek79/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Darek79/subscriptions",
      "organizations_url": "https://api.github.com/users/Darek79/orgs",
      "repos_url": "https://api.github.com/users/Darek79/repos",
      "events_url": "https://api.github.com/users/Darek79/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Darek79/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-07-04T18:43:08Z",
    "updated_at": "2021-07-04T18:54:04Z",
    "closed_at": "2021-07-04T18:53:02Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "i think the title says it all!\r\n\r\nregards",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4633/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4633/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4628",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4628/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4628/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4628/events",
    "html_url": "https://github.com/expressjs/express/pull/4628",
    "id": 935742012,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjgyNjA0NTE1",
    "number": 4628,
    "title": "Set CI fail-fast to false",
    "user": {
      "login": "aravindvnair99",
      "id": 22199259,
      "node_id": "MDQ6VXNlcjIyMTk5MjU5",
      "avatar_url": "https://avatars.githubusercontent.com/u/22199259?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aravindvnair99",
      "html_url": "https://github.com/aravindvnair99",
      "followers_url": "https://api.github.com/users/aravindvnair99/followers",
      "following_url": "https://api.github.com/users/aravindvnair99/following{/other_user}",
      "gists_url": "https://api.github.com/users/aravindvnair99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aravindvnair99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aravindvnair99/subscriptions",
      "organizations_url": "https://api.github.com/users/aravindvnair99/orgs",
      "repos_url": "https://api.github.com/users/aravindvnair99/repos",
      "events_url": "https://api.github.com/users/aravindvnair99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aravindvnair99/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 133578714,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/tests",
        "name": "tests",
        "color": "944008",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-07-02T12:52:19Z",
    "updated_at": "2021-07-02T20:11:36Z",
    "closed_at": "2021-07-02T20:10:55Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4628",
      "html_url": "https://github.com/expressjs/express/pull/4628",
      "diff_url": "https://github.com/expressjs/express/pull/4628.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4628.patch",
      "merged_at": "2021-07-02T20:10:55Z"
    },
    "body": "Documentation: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idstrategyfail-fast\r\n\r\nThis helps us understand if something is failing only on a particular configuration as opposed to us having only partial stats up until failure. Hence, I recommend setting it to false.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4628/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4628/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4627",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4627/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4627/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4627/events",
    "html_url": "https://github.com/expressjs/express/issues/4627",
    "id": 935737261,
    "node_id": "MDU6SXNzdWU5MzU3MzcyNjE=",
    "number": 4627,
    "title": "Change Default Template Engine of the Application Generator",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-07-02T12:45:54Z",
    "updated_at": "2021-07-02T12:48:00Z",
    "closed_at": "2021-07-02T12:47:55Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I know this is a personal subject and it's very easy to swap out template engines; however, Express does have an outdated template engine and would benefit from a change. I believe the best candidate for a new default is EJS - below are some reasons to why.\r\n\r\n### Popularity\r\nEJS currently has the widest audience on NPM by a large margin.\r\n\r\n<img width=\"1366\" alt=\"Screen Shot 2021-07-02 at 15 39 08\" src=\"https://user-images.githubusercontent.com/86835829/124275817-b7f13300-db4b-11eb-8be2-78bbd023c639.png\">\r\n\r\n\r\n### Any other option is inconsistent with Node and Express\r\nUsing a template engine that introduces different syntax/structure makes little sense. Embedded JavaScript is similar to ERB - used in Ruby on Rails - and, IMO, should be the default in a server-side JavaScript framework.\r\n\r\n### Some candidates are inconsistent altogether (to me)\r\nHandlebars, for instance, tries to \"separate concerns\" as if this is the HTML/CSS that's in the browser. Yet, it lets the use of _some_ logic in the templates through `if` blocks, `for` loops, and custom helpers. Also, even if it was consistent, why separate them in a template engine? It spits out pure HTML/CSS anyway, which itself is enough separation of concerns for the end product. If the reason is to be portable, I can't say much, other than to show EJS's popularity.\r\n\r\nAgain, this is would be a small change, but that does not make it unnecessary. Feel free to add your opinions below - it doesn't have to be EJS!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4627/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4627/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4626",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4626/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4626/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4626/events",
    "html_url": "https://github.com/expressjs/express/issues/4626",
    "id": 935609745,
    "node_id": "MDU6SXNzdWU5MzU2MDk3NDU=",
    "number": 4626,
    "title": "Is express dead?",
    "user": {
      "login": "bmadone",
      "id": 23120972,
      "node_id": "MDQ6VXNlcjIzMTIwOTcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/23120972?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bmadone",
      "html_url": "https://github.com/bmadone",
      "followers_url": "https://api.github.com/users/bmadone/followers",
      "following_url": "https://api.github.com/users/bmadone/following{/other_user}",
      "gists_url": "https://api.github.com/users/bmadone/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bmadone/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bmadone/subscriptions",
      "organizations_url": "https://api.github.com/users/bmadone/orgs",
      "repos_url": "https://api.github.com/users/bmadone/repos",
      "events_url": "https://api.github.com/users/bmadone/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bmadone/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2021-07-02T09:52:33Z",
    "updated_at": "2021-07-02T12:39:53Z",
    "closed_at": "2021-07-02T10:00:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "As I see last updates were more that 2 years ago, so my question is, is express dead? If yes, what framework should I use instead of express",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4626/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4626/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4624",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4624/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4624/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4624/events",
    "html_url": "https://github.com/expressjs/express/pull/4624",
    "id": 930156173,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Njc3ODk4Mzg4",
    "number": 4624,
    "title": "Remove deprecated property in hello-world example",
    "user": {
      "login": "icepaq",
      "id": 62949848,
      "node_id": "MDQ6VXNlcjYyOTQ5ODQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/62949848?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/icepaq",
      "html_url": "https://github.com/icepaq",
      "followers_url": "https://api.github.com/users/icepaq/followers",
      "following_url": "https://api.github.com/users/icepaq/following{/other_user}",
      "gists_url": "https://api.github.com/users/icepaq/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/icepaq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/icepaq/subscriptions",
      "organizations_url": "https://api.github.com/users/icepaq/orgs",
      "repos_url": "https://api.github.com/users/icepaq/repos",
      "events_url": "https://api.github.com/users/icepaq/events{/privacy}",
      "received_events_url": "https://api.github.com/users/icepaq/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-06-25T13:04:07Z",
    "updated_at": "2021-07-30T19:31:12Z",
    "closed_at": "2021-07-30T19:31:12Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4624",
      "html_url": "https://github.com/expressjs/express/pull/4624",
      "diff_url": "https://github.com/expressjs/express/pull/4624.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4624.patch",
      "merged_at": null
    },
    "body": "Fixes #4623",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4624/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4624/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4623",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4623/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4623/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4623/events",
    "html_url": "https://github.com/expressjs/express/issues/4623",
    "id": 930155704,
    "node_id": "MDU6SXNzdWU5MzAxNTU3MDQ=",
    "number": 4623,
    "title": "Deprecated Property in hello-world example",
    "user": {
      "login": "icepaq",
      "id": 62949848,
      "node_id": "MDQ6VXNlcjYyOTQ5ODQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/62949848?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/icepaq",
      "html_url": "https://github.com/icepaq",
      "followers_url": "https://api.github.com/users/icepaq/followers",
      "following_url": "https://api.github.com/users/icepaq/following{/other_user}",
      "gists_url": "https://api.github.com/users/icepaq/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/icepaq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/icepaq/subscriptions",
      "organizations_url": "https://api.github.com/users/icepaq/orgs",
      "repos_url": "https://api.github.com/users/icepaq/repos",
      "events_url": "https://api.github.com/users/icepaq/events{/privacy}",
      "received_events_url": "https://api.github.com/users/icepaq/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2021-06-25T13:03:27Z",
    "updated_at": "2021-07-30T19:50:26Z",
    "closed_at": "2021-07-30T19:50:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This was discussed in issue #4620 and PR #4621\r\n\r\nI will shortly create a PR to replace the deprecated `parent` property with `children`.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4623/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4623/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4622",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4622/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4622/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4622/events",
    "html_url": "https://github.com/expressjs/express/issues/4622",
    "id": 928449890,
    "node_id": "MDU6SXNzdWU5Mjg0NDk4OTA=",
    "number": 4622,
    "title": "Travis CI no longer functional",
    "user": {
      "login": "aravindvnair99",
      "id": 22199259,
      "node_id": "MDQ6VXNlcjIyMTk5MjU5",
      "avatar_url": "https://avatars.githubusercontent.com/u/22199259?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aravindvnair99",
      "html_url": "https://github.com/aravindvnair99",
      "followers_url": "https://api.github.com/users/aravindvnair99/followers",
      "following_url": "https://api.github.com/users/aravindvnair99/following{/other_user}",
      "gists_url": "https://api.github.com/users/aravindvnair99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aravindvnair99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aravindvnair99/subscriptions",
      "organizations_url": "https://api.github.com/users/aravindvnair99/orgs",
      "repos_url": "https://api.github.com/users/aravindvnair99/repos",
      "events_url": "https://api.github.com/users/aravindvnair99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aravindvnair99/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578714,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/tests",
        "name": "tests",
        "color": "944008",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-06-23T16:40:29Z",
    "updated_at": "2021-06-23T16:42:26Z",
    "closed_at": "2021-06-23T16:42:26Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Message on Travis CI website states:\r\n\r\n![image](https://user-images.githubusercontent.com/22199259/123135028-feb99b80-d46e-11eb-9922-9b238f09cf0a.png)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4622/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4622/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4621",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4621/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4621/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4621/events",
    "html_url": "https://github.com/expressjs/express/pull/4621",
    "id": 928411211,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Njc2NDIwNTI2",
    "number": 4621,
    "title": "Update Hello World Example with Up to Date Practices",
    "user": {
      "login": "icepaq",
      "id": 62949848,
      "node_id": "MDQ6VXNlcjYyOTQ5ODQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/62949848?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/icepaq",
      "html_url": "https://github.com/icepaq",
      "followers_url": "https://api.github.com/users/icepaq/followers",
      "following_url": "https://api.github.com/users/icepaq/following{/other_user}",
      "gists_url": "https://api.github.com/users/icepaq/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/icepaq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/icepaq/subscriptions",
      "organizations_url": "https://api.github.com/users/icepaq/orgs",
      "repos_url": "https://api.github.com/users/icepaq/repos",
      "events_url": "https://api.github.com/users/icepaq/events{/privacy}",
      "received_events_url": "https://api.github.com/users/icepaq/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2021-06-23T15:54:43Z",
    "updated_at": "2021-06-24T00:15:31Z",
    "closed_at": "2021-06-24T00:15:14Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4621",
      "html_url": "https://github.com/expressjs/express/pull/4621",
      "diff_url": "https://github.com/expressjs/express/pull/4621.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4621.patch",
      "merged_at": null
    },
    "body": "Fixes #4620\r\n\r\nReplaced var with const, \r\nadded arrow functions, \r\nreplaced deprecated function\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4621/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4621/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4620",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4620/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4620/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4620/events",
    "html_url": "https://github.com/expressjs/express/issues/4620",
    "id": 928410154,
    "node_id": "MDU6SXNzdWU5Mjg0MTAxNTQ=",
    "number": 4620,
    "title": "Hello World Example is Outdated",
    "user": {
      "login": "icepaq",
      "id": 62949848,
      "node_id": "MDQ6VXNlcjYyOTQ5ODQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/62949848?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/icepaq",
      "html_url": "https://github.com/icepaq",
      "followers_url": "https://api.github.com/users/icepaq/followers",
      "following_url": "https://api.github.com/users/icepaq/following{/other_user}",
      "gists_url": "https://api.github.com/users/icepaq/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/icepaq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/icepaq/subscriptions",
      "organizations_url": "https://api.github.com/users/icepaq/orgs",
      "repos_url": "https://api.github.com/users/icepaq/repos",
      "events_url": "https://api.github.com/users/icepaq/events{/privacy}",
      "received_events_url": "https://api.github.com/users/icepaq/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-06-23T15:53:32Z",
    "updated_at": "2021-06-23T15:56:46Z",
    "closed_at": "2021-06-23T15:56:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The Hello World example was last updated 7 years ago. A few styling changes should be made. This is usually the first example new express users look at so it should be up to date. \r\n\r\nI will issue a new PR with the following changes:\r\n\r\nReplaced `var` with `const`, \r\nReplaced `function(req, res)` with `(req, res) =>`, \r\nReplaced `if(!module.parent)` with `if(module.children`). I'm not an expert with node. I made this last change simply because the docs said module.parent was deprecated.\r\n\r\nThis is my first PR in a large repository so please let me know if I made any mistakes. Cheers!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4620/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4620/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4619",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4619/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4619/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4619/events",
    "html_url": "https://github.com/expressjs/express/issues/4619",
    "id": 928014342,
    "node_id": "MDU6SXNzdWU5MjgwMTQzNDI=",
    "number": 4619,
    "title": "Package-lock.json shouldn't be gitignored",
    "user": {
      "login": "tiziodcaio",
      "id": 61084118,
      "node_id": "MDQ6VXNlcjYxMDg0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/61084118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tiziodcaio",
      "html_url": "https://github.com/tiziodcaio",
      "followers_url": "https://api.github.com/users/tiziodcaio/followers",
      "following_url": "https://api.github.com/users/tiziodcaio/following{/other_user}",
      "gists_url": "https://api.github.com/users/tiziodcaio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tiziodcaio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tiziodcaio/subscriptions",
      "organizations_url": "https://api.github.com/users/tiziodcaio/orgs",
      "repos_url": "https://api.github.com/users/tiziodcaio/repos",
      "events_url": "https://api.github.com/users/tiziodcaio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tiziodcaio/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2021-06-23T08:48:39Z",
    "updated_at": "2021-06-23T13:22:44Z",
    "closed_at": "2021-06-23T10:46:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "As sayed [here](https://nodejs.dev/learn/the-package-lock-json-file), we should commit it.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4619/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4619/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4618",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4618/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4618/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4618/events",
    "html_url": "https://github.com/expressjs/express/issues/4618",
    "id": 927211779,
    "node_id": "MDU6SXNzdWU5MjcyMTE3Nzk=",
    "number": 4618,
    "title": "No overload matches this call -> use(express.json()) ? ",
    "user": {
      "login": "JimmyBjorklund",
      "id": 9413089,
      "node_id": "MDQ6VXNlcjk0MTMwODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9413089?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JimmyBjorklund",
      "html_url": "https://github.com/JimmyBjorklund",
      "followers_url": "https://api.github.com/users/JimmyBjorklund/followers",
      "following_url": "https://api.github.com/users/JimmyBjorklund/following{/other_user}",
      "gists_url": "https://api.github.com/users/JimmyBjorklund/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JimmyBjorklund/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JimmyBjorklund/subscriptions",
      "organizations_url": "https://api.github.com/users/JimmyBjorklund/orgs",
      "repos_url": "https://api.github.com/users/JimmyBjorklund/repos",
      "events_url": "https://api.github.com/users/JimmyBjorklund/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JimmyBjorklund/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2021-06-22T13:05:26Z",
    "updated_at": "2021-06-23T12:34:21Z",
    "closed_at": "2021-06-22T13:29:43Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "app/server.ts:53:8 - error TS2769: No overload matches this call.\r\nThe last overload gave the following error.\r\nArgument of type 'NextHandleFunction' is not assignable to parameter of type 'PathParams'.\r\nType 'NextHandleFunction' is not assignable to type '(string | RegExp)[]'.\r\n\r\n53 .use(express.json())\r\n\r\nconst app = express();\r\napp\r\n.set(\"port\", port)\r\n.set(\"trust proxy\", 2)\r\n.disable(\"x-powered-by\")\r\n.use(requireHttps())\r\n.use(i18n.init)\r\n.use(express.json())",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4618/reactions",
      "total_count": 5,
      "+1": 5,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4618/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4617",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4617/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4617/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4617/events",
    "html_url": "https://github.com/expressjs/express/issues/4617",
    "id": 925449065,
    "node_id": "MDU6SXNzdWU5MjU0NDkwNjU=",
    "number": 4617,
    "title": "next(params)",
    "user": {
      "login": "Anatoly03",
      "id": 44678124,
      "node_id": "MDQ6VXNlcjQ0Njc4MTI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/44678124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Anatoly03",
      "html_url": "https://github.com/Anatoly03",
      "followers_url": "https://api.github.com/users/Anatoly03/followers",
      "following_url": "https://api.github.com/users/Anatoly03/following{/other_user}",
      "gists_url": "https://api.github.com/users/Anatoly03/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Anatoly03/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Anatoly03/subscriptions",
      "organizations_url": "https://api.github.com/users/Anatoly03/orgs",
      "repos_url": "https://api.github.com/users/Anatoly03/repos",
      "events_url": "https://api.github.com/users/Anatoly03/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Anatoly03/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-06-19T18:55:17Z",
    "updated_at": "2021-06-27T14:50:22Z",
    "closed_at": "2021-06-27T14:50:22Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "A neat way to avoid [res.locals](https://stackoverflow.com/questions/18875292/passing-variables-to-the-next-middleware-using-next-in-express-js) could be implemented as follows:\r\n\r\n```js\r\nfunction (req, res, next) {\r\n    next(param1, param2, ...)\r\n}\r\n\r\nfunction (req, res, next, param1, param2, ...) {\r\n    next(...)\r\n}\r\n\r\napp.get('path/to/*', ..., function(req, res, ...) {\r\n    // Do something\r\n})\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4617/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4617/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4616",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4616/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4616/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4616/events",
    "html_url": "https://github.com/expressjs/express/issues/4616",
    "id": 925444644,
    "node_id": "MDU6SXNzdWU5MjU0NDQ2NDQ=",
    "number": 4616,
    "title": "Failed to lookup view \"admin/login\" in views directory \"/home/sagar/Documents/fserver/views\"",
    "user": {
      "login": "sagar03d",
      "id": 19644555,
      "node_id": "MDQ6VXNlcjE5NjQ0NTU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/19644555?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sagar03d",
      "html_url": "https://github.com/sagar03d",
      "followers_url": "https://api.github.com/users/sagar03d/followers",
      "following_url": "https://api.github.com/users/sagar03d/following{/other_user}",
      "gists_url": "https://api.github.com/users/sagar03d/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sagar03d/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sagar03d/subscriptions",
      "organizations_url": "https://api.github.com/users/sagar03d/orgs",
      "repos_url": "https://api.github.com/users/sagar03d/repos",
      "events_url": "https://api.github.com/users/sagar03d/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sagar03d/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-06-19T18:24:44Z",
    "updated_at": "2023-01-04T20:38:55Z",
    "closed_at": "2021-06-20T11:20:58Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Here is my folder structure - \r\n![image](https://user-images.githubusercontent.com/19644555/122651910-644d1580-d159-11eb-86c7-c6650a6bb0f7.png)\r\n\r\nloginController code - \r\n\r\n`const index = (async (req, res) => {\r\n  res.render('admin/login');\r\n});\r\n\r\nmodule.exports = {\r\n  index\r\n}`\r\n\r\nbut this returns \r\n\r\n\r\nFailed to lookup view \"admin/login\" in views directory \"/home/sagar/Documents/fserver/views\"\r\nError: Failed to lookup view \"admin/login\" in views directory \"/home/sagar/Documents/fserver/views\"\r\n    at Function.render (/home/sagar/Documents/fserver/node_modules/express/lib/application.js:580:17)\r\n    at ServerResponse.render (/home/sagar/Documents/fserver/node_modules/express/lib/response.js:1008:7)\r\n    at index (/home/sagar/Documents/fserver/controllers/admin/loginController.js:2:7)\r\n    at Layer.handle [as handle_request] (/home/sagar/Documents/fserver/node_modules/express/lib/router/layer.js:95:5)\r\n    at next (/home/sagar/Documents/fserver/node_modules/express/lib/router/route.js:137:13)\r\n    at Route.dispatch (/home/sagar/Documents/fserver/node_modules/express/lib/router/route.js:112:3)\r\n    at Layer.handle [as handle_request] (/home/sagar/Documents/fserver/node_modules/express/lib/router/layer.js:95:5)\r\n    at /home/sagar/Documents/fserver/node_modules/express/lib/router/index.js:281:22\r\n    at Function.process_params (/home/sagar/Documents/fserver/node_modules/express/lib/router/index.js:335:12)\r\n    at next (/home/sagar/Documents/fserver/node_modules/express/lib/router/index.js:275:10)",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4616/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4616/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4615",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4615/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4615/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4615/events",
    "html_url": "https://github.com/expressjs/express/pull/4615",
    "id": 920618591,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjY5NzQwNzEx",
    "number": 4615,
    "title": "Develop",
    "user": {
      "login": "jashan510",
      "id": 3119871,
      "node_id": "MDQ6VXNlcjMxMTk4NzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3119871?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jashan510",
      "html_url": "https://github.com/jashan510",
      "followers_url": "https://api.github.com/users/jashan510/followers",
      "following_url": "https://api.github.com/users/jashan510/following{/other_user}",
      "gists_url": "https://api.github.com/users/jashan510/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jashan510/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jashan510/subscriptions",
      "organizations_url": "https://api.github.com/users/jashan510/orgs",
      "repos_url": "https://api.github.com/users/jashan510/repos",
      "events_url": "https://api.github.com/users/jashan510/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jashan510/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2021-06-14T17:18:16Z",
    "updated_at": "2021-06-14T17:19:19Z",
    "closed_at": "2021-06-14T17:19:19Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4615",
      "html_url": "https://github.com/expressjs/express/pull/4615",
      "diff_url": "https://github.com/expressjs/express/pull/4615.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4615.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4615/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4615/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4614",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4614/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4614/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4614/events",
    "html_url": "https://github.com/expressjs/express/issues/4614",
    "id": 920453047,
    "node_id": "MDU6SXNzdWU5MjA0NTMwNDc=",
    "number": 4614,
    "title": "API ROUTE GROUP PREFIX || LIKE LARAVEL",
    "user": {
      "login": "hardikhari96",
      "id": 32766262,
      "node_id": "MDQ6VXNlcjMyNzY2MjYy",
      "avatar_url": "https://avatars.githubusercontent.com/u/32766262?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hardikhari96",
      "html_url": "https://github.com/hardikhari96",
      "followers_url": "https://api.github.com/users/hardikhari96/followers",
      "following_url": "https://api.github.com/users/hardikhari96/following{/other_user}",
      "gists_url": "https://api.github.com/users/hardikhari96/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hardikhari96/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hardikhari96/subscriptions",
      "organizations_url": "https://api.github.com/users/hardikhari96/orgs",
      "repos_url": "https://api.github.com/users/hardikhari96/repos",
      "events_url": "https://api.github.com/users/hardikhari96/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hardikhari96/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2021-06-14T06:29:27Z",
    "updated_at": "2021-07-30T19:51:06Z",
    "closed_at": "2021-07-30T19:51:05Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Can we create Group , i tried all soultions from stack overflow but not woking properly , if we could get in express its better ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4614/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4614/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4613",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4613/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4613/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4613/events",
    "html_url": "https://github.com/expressjs/express/issues/4613",
    "id": 919505668,
    "node_id": "MDU6SXNzdWU5MTk1MDU2Njg=",
    "number": 4613,
    "title": "POST method ajax with CORS 405 Method Not allowed",
    "user": {
      "login": "dimaslanjaka",
      "id": 12471057,
      "node_id": "MDQ6VXNlcjEyNDcxMDU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/12471057?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dimaslanjaka",
      "html_url": "https://github.com/dimaslanjaka",
      "followers_url": "https://api.github.com/users/dimaslanjaka/followers",
      "following_url": "https://api.github.com/users/dimaslanjaka/following{/other_user}",
      "gists_url": "https://api.github.com/users/dimaslanjaka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dimaslanjaka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dimaslanjaka/subscriptions",
      "organizations_url": "https://api.github.com/users/dimaslanjaka/orgs",
      "repos_url": "https://api.github.com/users/dimaslanjaka/repos",
      "events_url": "https://api.github.com/users/dimaslanjaka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dimaslanjaka/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-06-12T09:32:35Z",
    "updated_at": "2021-10-22T15:14:23Z",
    "closed_at": "2021-10-22T15:14:22Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "```js\r\nimport express from 'express';\r\nimport cookieParser from \"cookie-parser\";\r\nimport methodOverride from \"method-override\";\r\nimport bodyParser from \"body-parser\";\r\nconst app = express();\r\napp.use(methodOverride());\r\napp.use(cookieParser());\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\napp.use(bodyParser.json());\r\n// noinspection HttpUrlsUsage\r\nconst allowedOrigins = [\r\n  \"http://0.0.0.0:3000\",\r\n  \"http://localhost:3000\",\r\n  \"http://127.0.0.1:3000\",\r\n  \"http://[::1]:3000\",\r\n  \"http://::1:3000\",\r\n];\r\nconst corsOptions: CorsOptions = {\r\n  origin: function (origin, callback) {\r\n    // allow requests with no origin\r\n    // (like mobile apps or curl requests)\r\n    if (!origin) return callback(null, true);\r\n    console.log(origin, allowedOrigins.indexOf(origin) === -1);\r\n    if (allowedOrigins.indexOf(origin) === -1) {\r\n      const msg = \"The CORS policy for this site does not allow access from the specified Origin.\";\r\n      return callback(new Error(msg), false);\r\n    }\r\n    return callback(null, true);\r\n  },\r\n  credentials: true,\r\n  allowedHeaders: [\"GET\", \"POST\", \"OPTIONS\", \"HEAD\", \"DELETE\", \"PUT\"],\r\n};\r\napp.use(cors(corsOptions));\r\n```\r\npackage.json\r\n```json\r\n{\r\n    \"cookie-parser\": \"^1.4.5\",\r\n    \"cors\": \"^2.8.5\",\r\n    \"body-parser\": \"^1.19.0\",\r\n    \"express\": \"^4.17.1\",\r\n    \"express-session\": \"^1.17.2\"\r\n}\r\n```\r\n![image](https://user-images.githubusercontent.com/12471057/121771753-92e85080-cb9b-11eb-8e85-1eef7d73ad23.png)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4613/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4613/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4612",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4612/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4612/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4612/events",
    "html_url": "https://github.com/expressjs/express/issues/4612",
    "id": 916219785,
    "node_id": "MDU6SXNzdWU5MTYyMTk3ODU=",
    "number": 4612,
    "title": "Question : Is there a way to get checkpoints in a request ?",
    "user": {
      "login": "Soteded",
      "id": 43409872,
      "node_id": "MDQ6VXNlcjQzNDA5ODcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/43409872?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Soteded",
      "html_url": "https://github.com/Soteded",
      "followers_url": "https://api.github.com/users/Soteded/followers",
      "following_url": "https://api.github.com/users/Soteded/following{/other_user}",
      "gists_url": "https://api.github.com/users/Soteded/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Soteded/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Soteded/subscriptions",
      "organizations_url": "https://api.github.com/users/Soteded/orgs",
      "repos_url": "https://api.github.com/users/Soteded/repos",
      "events_url": "https://api.github.com/users/Soteded/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Soteded/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2021-06-09T13:44:43Z",
    "updated_at": "2021-06-15T21:54:35Z",
    "closed_at": "2021-06-15T21:54:35Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello,\r\n\r\nI'm trying to do an upload on my app, but some back process could be very slow, so i'm trying to add some \"news\" for my users to let them know the progress. My question is : is there a way to set checkpoint-like responses to my requests ? Using or not express...\r\nIt'll be like a post request for /users and then i display some responses like \"Uploading avatar...\", followed by \"Creating user....\" and for finally \"User has been successfully created\" to my front user.\r\n\r\nExpectations :\r\n```\r\napp.post('/users', (req, res) => {\r\n    res.send(\"Uploading avatar...\");\r\n    // Do some stuff\r\n    res.send('second');\r\n    // Do other stuff\r\n\r\n    // Send closing response\r\n    return res.end('third');\r\n});\r\n```\r\n\r\nPS: Top example is garbage, i know that send will send final response but that's an example.\r\n\r\nThanks for your responses 👍 ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4612/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4612/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4611",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4611/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4611/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4611/events",
    "html_url": "https://github.com/expressjs/express/issues/4611",
    "id": 915800665,
    "node_id": "MDU6SXNzdWU5MTU4MDA2NjU=",
    "number": 4611,
    "title": "POST request causing PreFlight and then getting cancelled after stalling",
    "user": {
      "login": "am-a-man",
      "id": 57605821,
      "node_id": "MDQ6VXNlcjU3NjA1ODIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/57605821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/am-a-man",
      "html_url": "https://github.com/am-a-man",
      "followers_url": "https://api.github.com/users/am-a-man/followers",
      "following_url": "https://api.github.com/users/am-a-man/following{/other_user}",
      "gists_url": "https://api.github.com/users/am-a-man/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/am-a-man/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/am-a-man/subscriptions",
      "organizations_url": "https://api.github.com/users/am-a-man/orgs",
      "repos_url": "https://api.github.com/users/am-a-man/repos",
      "events_url": "https://api.github.com/users/am-a-man/events{/privacy}",
      "received_events_url": "https://api.github.com/users/am-a-man/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-06-09T05:43:50Z",
    "updated_at": "2022-07-18T07:59:26Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I wrote  a simple API for learning using express, when I try to send a POST request from POSTMAN it is carried out and returns a success message but when POST is sent from client, PreFlight is issued and POST request after being stalled gets cancelled, after which PreFlight does return \"204 No Content\" success message. \r\n1. PreFlight must not be issued during POST request ?\r\n2. if it does how to make sure it does that it does not stall the POST request, or how to increase the timeout for POST request?\r\n\r\nmy  client side code is: \r\n```\r\n  button.onclick = addElement=> {\r\n            var key = document.getElementById('key').value;\r\n            console.log(\"button clicked\");\r\n            var value = document.getElementById('value').value;\r\n        \r\n            console.log(key);\r\n            var options = {\r\n                method : \"POST\",\r\n                headers : {'Content-Type': 'application/json'},\r\n                body : JSON.stringify({\r\n                    'key':key,\r\n                    'value':value\r\n                })\r\n            };\r\n            console.log(\"initializing POST\");\r\n            const fet =  fetch('https://skiadrum.herokuapp.com/data', options).then(response => {\r\n                console.log(response);\r\n                return response.json();\r\n            }).then(response => {\r\n                console.log(response);\r\n                document.getElementById('api_response').innerHTML = response;\r\n            })\r\n            .catch(error => {\r\n                console.log(\"post request failed\");\r\n                console.error(error);\r\n            });    \r\n\r\n        }\r\n```\r\n\r\n\r\nand the server POST request handler is:\r\n```\r\nvar postCorsOptions = {\r\n\t\"origin\": ['http://127.0.0.1:5500','http://127.0.0.1:5501'],\r\n\t\"methods\": \"GET,HEAD,PUT,PATCH,POST,DELETE\",\r\n\t\"preflightContinue\": false,\r\n\t\"optionsSuccessStatus\": 204,\r\n    \"Content-Type\":\"appllication/json\"\r\n}\r\n\r\napp.post(\"/data\", cors(postCorsOptions) , (request, response) => {\r\n    var file = request.body;\r\n    console.log(file.value);\r\n    console.log(\"post request recieved in server\");\r\n    reply = {\r\n        'status': 'success',\r\n        'data_recieved' : {\r\n            'key': request.body.key,\r\n            'value': request.body.value\r\n        }\r\n    }\r\n    score[request.body.key]=request.body.value;\r\n    try{\r\n        fs.writeFile('score.json', JSON.stringify(score, null, 2), err => {\r\n            console.log(\"writing into the file from post request\");\r\n        });\r\n    } catch(error){\r\n        console.error(error);\r\n    }\r\n    \r\n    response.send(reply);\r\n});\r\n\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4611/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4611/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4608",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4608/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4608/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4608/events",
    "html_url": "https://github.com/expressjs/express/issues/4608",
    "id": 912212659,
    "node_id": "MDU6SXNzdWU5MTIyMTI2NTk=",
    "number": 4608,
    "title": "use res.download throw error when file's name only contains extension",
    "user": {
      "login": "CoelisMyName",
      "id": 63242816,
      "node_id": "MDQ6VXNlcjYzMjQyODE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/63242816?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CoelisMyName",
      "html_url": "https://github.com/CoelisMyName",
      "followers_url": "https://api.github.com/users/CoelisMyName/followers",
      "following_url": "https://api.github.com/users/CoelisMyName/following{/other_user}",
      "gists_url": "https://api.github.com/users/CoelisMyName/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CoelisMyName/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CoelisMyName/subscriptions",
      "organizations_url": "https://api.github.com/users/CoelisMyName/orgs",
      "repos_url": "https://api.github.com/users/CoelisMyName/repos",
      "events_url": "https://api.github.com/users/CoelisMyName/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CoelisMyName/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-06-05T11:16:20Z",
    "updated_at": "2022-02-19T23:48:31Z",
    "closed_at": "2021-06-05T11:16:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "i write a file sync app. here is code below\r\n\r\n`res.download(file_path, err => {\r\n                if (err) {\r\n                    console.log(file_path)\r\n                    console.log(err)\r\n                    res.sendStatus(404)\r\n                }\r\n            })`\r\n\r\nand when comes to file such as \".gitignore\", \".txt\", it throw error message below\r\n\r\n`E:\\BACKUP\\.txt\r\nNotFoundError: Not Found\r\n    at SendStream.error (C:\\Users\\user\\Desktop\\js\\file-sync\\node_modules\\send\\index.js:270:31)\r\n    at SendStream.pipe (C:\\Users\\user\\Desktop\\js\\file-sync\\node_modules\\send\\index.js:584:14)\r\n    at sendfile (C:\\Users\\user\\Desktop\\js\\file-sync\\node_modules\\express\\lib\\response.js:1103:8)\r\n    at ServerResponse.sendFile (C:\\Users\\user\\Desktop\\js\\file-sync\\node_modules\\express\\lib\\response.js:433:3)\r\n    at ServerResponse.download (C:\\Users\\user\\Desktop\\js\\file-sync\\node_modules\\express\\lib\\response.js:573:15)\r\n    at _handle (C:\\Users\\user\\Desktop\\js\\file-sync\\router\\data.js:38:17)\r\n    at Layer.handle [as handle_request] (C:\\Users\\user\\Desktop\\js\\file-sync\\node_modules\\express\\lib\\router\\layer.js:95:5)\r\n    at next (C:\\Users\\user\\Desktop\\js\\file-sync\\node_modules\\express\\lib\\router\\route.js:137:13)\r\n    at Route.dispatch (C:\\Users\\user\\Desktop\\js\\file-sync\\node_modules\\express\\lib\\router\\route.js:112:3)\r\n    at Layer.handle [as handle_request] (C:\\Users\\user\\Desktop\\js\\file-sync\\node_modules\\express\\lib\\router\\layer.js:95:5) {\r\n  expose: false\r\n}`\r\n\r\ni don't know why.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4608/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4608/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4607",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4607/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4607/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4607/events",
    "html_url": "https://github.com/expressjs/express/issues/4607",
    "id": 912211825,
    "node_id": "MDU6SXNzdWU5MTIyMTE4MjU=",
    "number": 4607,
    "title": "HELP  why res.body is undefined,how can i get response body?",
    "user": {
      "login": "edcjian",
      "id": 48635933,
      "node_id": "MDQ6VXNlcjQ4NjM1OTMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/48635933?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/edcjian",
      "html_url": "https://github.com/edcjian",
      "followers_url": "https://api.github.com/users/edcjian/followers",
      "following_url": "https://api.github.com/users/edcjian/following{/other_user}",
      "gists_url": "https://api.github.com/users/edcjian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/edcjian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/edcjian/subscriptions",
      "organizations_url": "https://api.github.com/users/edcjian/orgs",
      "repos_url": "https://api.github.com/users/edcjian/repos",
      "events_url": "https://api.github.com/users/edcjian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/edcjian/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2021-06-05T11:13:50Z",
    "updated_at": "2021-06-05T17:16:55Z",
    "closed_at": "2021-06-05T17:16:55Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "![image](https://user-images.githubusercontent.com/48635933/120889899-01745e00-c632-11eb-813a-544321aec5ed.png)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4607/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4607/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4606",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4606/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4606/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4606/events",
    "html_url": "https://github.com/expressjs/express/issues/4606",
    "id": 911711990,
    "node_id": "MDU6SXNzdWU5MTE3MTE5OTA=",
    "number": 4606,
    "title": "express.json() returning empty POST body ",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2021-06-04T17:36:06Z",
    "updated_at": "2021-06-04T20:50:14Z",
    "closed_at": "2021-06-04T20:49:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When I hit my POST endpoint with JSON using Postman, my expressJS application wrongly claims that my JSON is an empty object.\r\n\r\n**Versions:**\r\n\r\nexpress: \"4.17.1\"\r\n npm: '7.11.1'\r\n node: '15.12.0'\r\n\r\n**Code:**\r\n\r\nindex.js\r\n\r\n```\r\nconst express = require( 'express' );\r\nconst app = express();\r\nconst controller = require ( './modules/controller' );\r\napp.use( express.json() );\r\napp.post( '/broken', ( req, res ) => controller.post( req, res ) );\r\n```\r\n\r\ncontroller.js\r\n\r\n```\r\nmodule.exports.post = async ( req, res ) =>\r\n{\r\n    const body = req.body;\r\n    log.debug( `body received from request ${JSON.stringify( body )}` );\r\n}\r\n```\r\n\r\nPostman config:\r\n\r\nPOST body (raw):\r\n\r\n````\r\n{\r\n\"a\": \"b\"\r\n}\r\n````\r\n\r\nHeaders:\r\n\r\nContent-Type: application/json\r\n\r\n**Expected behaviour:**\r\n\r\nLogs out: `body received from request {\"a\"=\"b\"}`\r\n\r\n**Actual behaviour:**\r\n\r\nLogs out: `body received from request {}`\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4606/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4606/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4605",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4605/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4605/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4605/events",
    "html_url": "https://github.com/expressjs/express/pull/4605",
    "id": 909608736,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjYwMTU4MTAy",
    "number": 4605,
    "title": "lib: refactor `application.js`",
    "user": {
      "login": "VoltrexKeyva",
      "id": 62040526,
      "node_id": "MDQ6VXNlcjYyMDQwNTI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/62040526?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VoltrexKeyva",
      "html_url": "https://github.com/VoltrexKeyva",
      "followers_url": "https://api.github.com/users/VoltrexKeyva/followers",
      "following_url": "https://api.github.com/users/VoltrexKeyva/following{/other_user}",
      "gists_url": "https://api.github.com/users/VoltrexKeyva/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VoltrexKeyva/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VoltrexKeyva/subscriptions",
      "organizations_url": "https://api.github.com/users/VoltrexKeyva/orgs",
      "repos_url": "https://api.github.com/users/VoltrexKeyva/repos",
      "events_url": "https://api.github.com/users/VoltrexKeyva/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VoltrexKeyva/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "VoltrexKeyva",
      "id": 62040526,
      "node_id": "MDQ6VXNlcjYyMDQwNTI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/62040526?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VoltrexKeyva",
      "html_url": "https://github.com/VoltrexKeyva",
      "followers_url": "https://api.github.com/users/VoltrexKeyva/followers",
      "following_url": "https://api.github.com/users/VoltrexKeyva/following{/other_user}",
      "gists_url": "https://api.github.com/users/VoltrexKeyva/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VoltrexKeyva/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VoltrexKeyva/subscriptions",
      "organizations_url": "https://api.github.com/users/VoltrexKeyva/orgs",
      "repos_url": "https://api.github.com/users/VoltrexKeyva/repos",
      "events_url": "https://api.github.com/users/VoltrexKeyva/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VoltrexKeyva/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "VoltrexKeyva",
        "id": 62040526,
        "node_id": "MDQ6VXNlcjYyMDQwNTI2",
        "avatar_url": "https://avatars.githubusercontent.com/u/62040526?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/VoltrexKeyva",
        "html_url": "https://github.com/VoltrexKeyva",
        "followers_url": "https://api.github.com/users/VoltrexKeyva/followers",
        "following_url": "https://api.github.com/users/VoltrexKeyva/following{/other_user}",
        "gists_url": "https://api.github.com/users/VoltrexKeyva/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/VoltrexKeyva/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/VoltrexKeyva/subscriptions",
        "organizations_url": "https://api.github.com/users/VoltrexKeyva/orgs",
        "repos_url": "https://api.github.com/users/VoltrexKeyva/repos",
        "events_url": "https://api.github.com/users/VoltrexKeyva/events{/privacy}",
        "received_events_url": "https://api.github.com/users/VoltrexKeyva/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-06-02T15:11:26Z",
    "updated_at": "2021-06-02T15:54:05Z",
    "closed_at": "2021-06-02T15:54:05Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4605",
      "html_url": "https://github.com/expressjs/express/pull/4605",
      "diff_url": "https://github.com/expressjs/express/pull/4605.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4605.patch",
      "merged_at": null
    },
    "body": "Fixed some formatting, added missing semi-colons and some improvements.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4605/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4605/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4604",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4604/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4604/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4604/events",
    "html_url": "https://github.com/expressjs/express/issues/4604",
    "id": 907744677,
    "node_id": "MDU6SXNzdWU5MDc3NDQ2Nzc=",
    "number": 4604,
    "title": "Serving Static Assets larger than 65KB from Local IP (192.168.x.x) fails",
    "user": {
      "login": "eyedean",
      "id": 5694695,
      "node_id": "MDQ6VXNlcjU2OTQ2OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5694695?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eyedean",
      "html_url": "https://github.com/eyedean",
      "followers_url": "https://api.github.com/users/eyedean/followers",
      "following_url": "https://api.github.com/users/eyedean/following{/other_user}",
      "gists_url": "https://api.github.com/users/eyedean/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eyedean/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eyedean/subscriptions",
      "organizations_url": "https://api.github.com/users/eyedean/orgs",
      "repos_url": "https://api.github.com/users/eyedean/repos",
      "events_url": "https://api.github.com/users/eyedean/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eyedean/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2021-05-31T22:46:24Z",
    "updated_at": "2021-06-09T03:23:54Z",
    "closed_at": "2021-06-08T23:38:01Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Greetings,\r\n\r\n## Background\r\nI am serving some static assets, using `express.static()`.  I also want to have my server (a development server) to be accessible in the office network via my local network IP (e.g. `192.168.1.242`)\r\n\r\nIt seems like Express fails to serve assets larger than 65KB using my local IP.\r\n\r\nWhat happens is some \"headers\" content pop in the middle of the actual image content, and that makes the file unreadable (`ERR_INVALID_HTTP_RESPONSE` in Chrome). \r\n\r\n## Reproduction\r\nI created a simple repro in the github repo below.  \r\nhttps://github.com/eyedean/express-statics-65kb-fail\r\n\r\nNote the for the problem to happen, all the two conditions below must be held.\r\n* **Larger than 65KB only**: a 60KB asset works just fine.\r\n* **on Network IP only**: it works fine on `127.0.0.1` and `localhost`.\r\n\r\nAlso, note that it is an **Express only** bug -- The repo shows the problem is occurring on a simple (3-line `express` server), but doesn't happen on a pure `require('http')` server via `require('serve-static')`.\r\n\r\n### Screenshot\r\n<img width=\"1128\" alt=\"image\" src=\"https://user-images.githubusercontent.com/5694695/120246627-a0115100-c225-11eb-9c75-149025da5fbf.png\">\r\n\r\n## Notes\r\n* It works fine when I disable `X-Powered-By` header via `app.disable('x-powered-by');`\r\n* I spent 6 hours debugging a lot of tools (e.g. Quasar, Webpack Build configs, Webpack Dev Server, etc.) until I reached here and could come up with this minimal reproduction repository.  I don't have the option to disable the header above, nor do I think it's a sustainable solution.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4604/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4604/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4603",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4603/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4603/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4603/events",
    "html_url": "https://github.com/expressjs/express/issues/4603",
    "id": 906699611,
    "node_id": "MDU6SXNzdWU5MDY2OTk2MTE=",
    "number": 4603,
    "title": "Example missing for drawing a static image file",
    "user": {
      "login": "kailash360",
      "id": 75155230,
      "node_id": "MDQ6VXNlcjc1MTU1MjMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/75155230?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kailash360",
      "html_url": "https://github.com/kailash360",
      "followers_url": "https://api.github.com/users/kailash360/followers",
      "following_url": "https://api.github.com/users/kailash360/following{/other_user}",
      "gists_url": "https://api.github.com/users/kailash360/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kailash360/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kailash360/subscriptions",
      "organizations_url": "https://api.github.com/users/kailash360/orgs",
      "repos_url": "https://api.github.com/users/kailash360/repos",
      "events_url": "https://api.github.com/users/kailash360/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kailash360/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-05-30T09:47:50Z",
    "updated_at": "2021-05-31T20:54:51Z",
    "closed_at": "2021-05-31T20:22:18Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "There is no example for drawing a static file through express from \"public\" directory. I would like to add that example with an example of a kitty image.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4603/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4603/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4602",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4602/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4602/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4602/events",
    "html_url": "https://github.com/expressjs/express/pull/4602",
    "id": 906453397,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjU3NDU0NDE1",
    "number": 4602,
    "title": "Fixing the express error handling for async functions",
    "user": {
      "login": "daniel-souza",
      "id": 5624392,
      "node_id": "MDQ6VXNlcjU2MjQzOTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5624392?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/daniel-souza",
      "html_url": "https://github.com/daniel-souza",
      "followers_url": "https://api.github.com/users/daniel-souza/followers",
      "following_url": "https://api.github.com/users/daniel-souza/following{/other_user}",
      "gists_url": "https://api.github.com/users/daniel-souza/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/daniel-souza/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daniel-souza/subscriptions",
      "organizations_url": "https://api.github.com/users/daniel-souza/orgs",
      "repos_url": "https://api.github.com/users/daniel-souza/repos",
      "events_url": "https://api.github.com/users/daniel-souza/events{/privacy}",
      "received_events_url": "https://api.github.com/users/daniel-souza/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2021-05-29T11:52:39Z",
    "updated_at": "2021-06-01T07:41:22Z",
    "closed_at": "2021-05-29T14:36:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4602",
      "html_url": "https://github.com/expressjs/express/pull/4602",
      "diff_url": "https://github.com/expressjs/express/pull/4602.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4602.patch",
      "merged_at": null
    },
    "body": "The try/catch block does not handle errors of async functions and they cannot be forwarded (next) to the proper error middleware, as done with sync functions. Instead, if an exception is thrown from an async function, this exception will be returned as a <rejected> Promise, that must be handled on a Promise.catch() method.\r\n\r\nWe cannot simply await async functions to handle it synchronous in this section of code to only enable try/catch block to handle async exceptions, it would not make sense.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4602/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4602/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4600",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4600/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4600/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4600/events",
    "html_url": "https://github.com/expressjs/express/issues/4600",
    "id": 902205105,
    "node_id": "MDU6SXNzdWU5MDIyMDUxMDU=",
    "number": 4600,
    "title": "ERR_INVALID_HTTP_RESPONSE when accessing statically served files using an external IP",
    "user": {
      "login": "DominikPalo",
      "id": 1623257,
      "node_id": "MDQ6VXNlcjE2MjMyNTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1623257?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DominikPalo",
      "html_url": "https://github.com/DominikPalo",
      "followers_url": "https://api.github.com/users/DominikPalo/followers",
      "following_url": "https://api.github.com/users/DominikPalo/following{/other_user}",
      "gists_url": "https://api.github.com/users/DominikPalo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DominikPalo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DominikPalo/subscriptions",
      "organizations_url": "https://api.github.com/users/DominikPalo/orgs",
      "repos_url": "https://api.github.com/users/DominikPalo/repos",
      "events_url": "https://api.github.com/users/DominikPalo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DominikPalo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 14,
    "created_at": "2021-05-26T10:58:37Z",
    "updated_at": "2022-07-29T01:43:26Z",
    "closed_at": "2021-05-27T11:21:19Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "We are trying to debug an issue we have with `webpack-dev-server` while developing a local web app (the `webpack-dev-server` is based on Express) - [more details bout the original here](https://stackoverflow.com/questions/67623851/err-ssl-protocol-error-when-accessing-webpack-devserver-sub-urls-from-a-differen). So, I've just tried to replicate the scenario with a simple Express JS server and it seems that the root cause of the issue is in Express:\r\n\r\n## The scenario/steps to replicate the issue:\r\n1) Create a simple HTTP server listening on all interfaces:\r\n```js\r\nconst express = require(\"express\");\r\nconst app = express();\r\n\r\napp.use(express.static('public'));\r\napp.listen(3000, '0.0.0.0');\r\n```\r\n\r\n2) Upload two JS files to the `/public` directory\r\n- one small JS file (in my case `small.js` - it contains only the \"test\" word)\r\n- a few bigger files (in my case `polyfills.js` - around 700 kB and `main.js`- around 8 MB)) \r\n\r\n3) Start the server\r\n\r\n## What happens:\r\nWhen you try to access the files using the localhost routes (http://localhost:3000/small.js, http://localhost:3000/main.js, http://localhost:3000/polyfills.js) everything works as expected and the content of files is returned to the browser.\r\n\r\nWhen you try to access the files using the external IP (in my case 192.168.0.96), only the http://192.168.0.96:3000/small.js (the smallest one) is served, http://192.168.0.96:3000/polyfills.js and http://192.168.0.96:3000/main.js return `ERR_INVALID_HTTP_RESPONSE` in case of HTTP (and `ERR_SSL_PROTOCOL_ERROR` in case of running the server with HTTPS). It doesn't matter if I'm accessing files from the same computer (on which the Express server is running) or from a different computer on the same network.\r\n\r\nHere are the screenshots:\r\n![image](https://user-images.githubusercontent.com/1623257/119648019-41ad3280-be21-11eb-84a9-b4af0ed422e1.png)\r\n![image](https://user-images.githubusercontent.com/1623257/119648094-52f63f00-be21-11eb-9e68-923e59f74362.png)\r\n![image](https://user-images.githubusercontent.com/1623257/119648148-66a1a580-be21-11eb-9832-d1a1dbe3cbdd.png)\r\n\r\nThe interesting thing is that according to Wireshark a small part of the main.js content was transferred\r\n\r\n![image](https://user-images.githubusercontent.com/1623257/119648642-ff382580-be21-11eb-9b87-2c66a5acf2d5.png)\r\n\r\n## My environment:\r\nNode.js: v16.1.0\r\nExpress: v4.17.1\r\nOS: macOS Big Sur 11.3.1",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4600/reactions",
      "total_count": 4,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4600/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4599",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4599/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4599/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4599/events",
    "html_url": "https://github.com/expressjs/express/issues/4599",
    "id": 900193985,
    "node_id": "MDU6SXNzdWU5MDAxOTM5ODU=",
    "number": 4599,
    "title": "Response.redirect() encoding URLs incorrectly",
    "user": {
      "login": "dsommerich",
      "id": 45643387,
      "node_id": "MDQ6VXNlcjQ1NjQzMzg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/45643387?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsommerich",
      "html_url": "https://github.com/dsommerich",
      "followers_url": "https://api.github.com/users/dsommerich/followers",
      "following_url": "https://api.github.com/users/dsommerich/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsommerich/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsommerich/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsommerich/subscriptions",
      "organizations_url": "https://api.github.com/users/dsommerich/orgs",
      "repos_url": "https://api.github.com/users/dsommerich/repos",
      "events_url": "https://api.github.com/users/dsommerich/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsommerich/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2021-05-25T02:28:05Z",
    "updated_at": "2021-05-25T03:24:26Z",
    "closed_at": "2021-05-25T02:42:04Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "A URL like `http://example.com\\@evil.com` has the host name `example.com`:\r\n\r\n```\r\n> new URL('http://example.com\\\\@evil.com')\r\nURL {\r\n  href: 'http://example.com/@evil.com',\r\n  origin: 'http://example.com',\r\n  protocol: 'http:',\r\n  username: '',\r\n  password: '',\r\n  host: 'example.com',\r\n  hostname: 'example.com',\r\n  port: '',\r\n  pathname: '/@evil.com',\r\n  search: '',\r\n  searchParams: URLSearchParams {},\r\n  hash: ''\r\n}\r\n```\r\n\r\nBrowser parse this URL correctly, and will go to `example.com` and not `evil.com`. However, when using this URL with the `res.redirect()` function, the URL is incorrectly encoded as `http://example.com%5C@evil.com` which has the host name `evil.com`.\r\n\r\n# Example code \r\n\r\n```js\r\nconst app = require('express')();\r\napp.get('/', (req, res) => res.redirect('http://example.com\\\\@evil.com/'));\r\napp.listen(8080);\r\n```\r\n\r\nThis causes clients (tested with latest Firefox, Chrome and curl) to redirect to `evil.com` instead of `example.com`, Firefox has even implemented a warning for this:\r\n\r\n![image](https://user-images.githubusercontent.com/45643387/119430117-8b2f4c00-bd53-11eb-9ff2-d5532611b97a.png)\r\n\r\nThe correct behaviour should be to not encode the `\\` in the URL, and browsers should redirect to `example.com` instead of `evil.com`.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4599/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4599/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4598",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4598/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4598/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4598/events",
    "html_url": "https://github.com/expressjs/express/pull/4598",
    "id": 899037914,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjUwODAyNjk1",
    "number": 4598,
    "title": "Check for invalid or unknown http status codes.",
    "user": {
      "login": "AakifurRahman",
      "id": 63335023,
      "node_id": "MDQ6VXNlcjYzMzM1MDIz",
      "avatar_url": "https://avatars.githubusercontent.com/u/63335023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AakifurRahman",
      "html_url": "https://github.com/AakifurRahman",
      "followers_url": "https://api.github.com/users/AakifurRahman/followers",
      "following_url": "https://api.github.com/users/AakifurRahman/following{/other_user}",
      "gists_url": "https://api.github.com/users/AakifurRahman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AakifurRahman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AakifurRahman/subscriptions",
      "organizations_url": "https://api.github.com/users/AakifurRahman/orgs",
      "repos_url": "https://api.github.com/users/AakifurRahman/repos",
      "events_url": "https://api.github.com/users/AakifurRahman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AakifurRahman/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-05-23T14:53:32Z",
    "updated_at": "2021-05-23T14:56:24Z",
    "closed_at": "2021-05-23T14:55:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4598",
      "html_url": "https://github.com/expressjs/express/pull/4598",
      "diff_url": "https://github.com/expressjs/express/pull/4598.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4598.patch",
      "merged_at": null
    },
    "body": "Nodejs http module does not throw any error for invalid ( undefined http response codes ) up to 999. Any typo ( like 209  instead of 208 [  Already Reported ] or 309 instead of 308 [ Permanent Redirect]  ) might causes inconvenience at the frontend. **An error message throw by express can prevent this.**\r\n\r\nCode:\r\n``` javascript\r\nconst express = require(\"express\");\r\n\r\nconst app = express();\r\nconst PORT = 8000\r\n\r\napp.get(\"/\", (req, res) => {\r\n  res.status(209).json({\r\n    data:\"test\"\r\n  });\r\n});\r\n\r\napp.listen(PORT, () => {\r\n  console.log(\"App is running\");\r\n});\r\n```\r\n\r\nBefore change \r\n\r\n![Before](https://user-images.githubusercontent.com/63335023/119265122-3b416f80-bc03-11eb-9ae0-99328a60e491.PNG)\r\n\r\n1. The response data is passed.\r\n2. Postman marks the status code as unknown\r\n\r\nAfter change\r\n\r\n![After](https://user-images.githubusercontent.com/63335023/119265163-5ca25b80-bc03-11eb-984b-fb47310b6498.png)\r\n\r\n1. A 500 - Internal Server Error is thrown\r\n2.  A error message is displayed (  TypeError: 209 is not a valid http status code.  )",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4598/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4598/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4597",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4597/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4597/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4597/events",
    "html_url": "https://github.com/expressjs/express/issues/4597",
    "id": 897645949,
    "node_id": "MDU6SXNzdWU4OTc2NDU5NDk=",
    "number": 4597,
    "title": "res.status(xxx) sometimes returning `undefined`",
    "user": {
      "login": "adamreisnz",
      "id": 490562,
      "node_id": "MDQ6VXNlcjQ5MDU2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/490562?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamreisnz",
      "html_url": "https://github.com/adamreisnz",
      "followers_url": "https://api.github.com/users/adamreisnz/followers",
      "following_url": "https://api.github.com/users/adamreisnz/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamreisnz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamreisnz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamreisnz/subscriptions",
      "organizations_url": "https://api.github.com/users/adamreisnz/orgs",
      "repos_url": "https://api.github.com/users/adamreisnz/repos",
      "events_url": "https://api.github.com/users/adamreisnz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamreisnz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2021-05-21T03:36:27Z",
    "updated_at": "2021-08-04T01:55:51Z",
    "closed_at": "2021-07-30T20:06:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am baffled as to why this error is happening, but it's occurring frequently enough for us to warrant further investigation.\r\n\r\nWe occasionally see errors like `TypeError: Cannot read property 'json' of undefined` or `TypeError: Cannot read property 'end' of undefined` being thrown by simple lines of code like:\r\n\r\n```\r\nres.status(200).json(json);\r\n```\r\n\r\nor \r\n\r\n```\r\nres.status(204).end();\r\n```\r\n\r\nJudging by the code at https://github.com/expressjs/express/blob/master/lib/response.js#L66-L69, the `status()` method should always return `this`, e.g. a reference to the response object. However, the error above seems to imply that sometimes `this` is returned as `undefined`.\r\n\r\nAre there any circumstances where `this` may have been cleaned up or reset, causing these errors after setting the status of a response?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4597/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4597/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4596",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4596/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4596/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4596/events",
    "html_url": "https://github.com/expressjs/express/pull/4596",
    "id": 896257419,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjQ4MzgzODM0",
    "number": 4596,
    "title": "Send Content-Length: 0 and empty chunk for HTTP 205",
    "user": {
      "login": "tkesgar",
      "id": 2698543,
      "node_id": "MDQ6VXNlcjI2OTg1NDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2698543?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkesgar",
      "html_url": "https://github.com/tkesgar",
      "followers_url": "https://api.github.com/users/tkesgar/followers",
      "following_url": "https://api.github.com/users/tkesgar/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkesgar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkesgar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkesgar/subscriptions",
      "organizations_url": "https://api.github.com/users/tkesgar/orgs",
      "repos_url": "https://api.github.com/users/tkesgar/repos",
      "events_url": "https://api.github.com/users/tkesgar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkesgar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/18",
      "html_url": "https://github.com/expressjs/express/milestone/18",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/18/labels",
      "id": 5234171,
      "node_id": "MDk6TWlsZXN0b25lNTIzNDE3MQ==",
      "number": 18,
      "title": "4.18",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 15,
      "state": "closed",
      "created_at": "2020-03-24T23:16:48Z",
      "updated_at": "2022-04-24T22:50:58Z",
      "due_on": null,
      "closed_at": "2022-04-24T22:50:58Z"
    },
    "comments": 0,
    "created_at": "2021-05-20T04:27:24Z",
    "updated_at": "2022-02-21T00:13:12Z",
    "closed_at": "2022-02-21T00:13:12Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4596",
      "html_url": "https://github.com/expressjs/express/pull/4596",
      "diff_url": "https://github.com/expressjs/express/pull/4596.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4596.patch",
      "merged_at": "2022-02-21T00:13:12Z"
    },
    "body": "Fixes #4592.\r\n\r\nSpec: https://tools.ietf.org/html/rfc7231#section-6.3.6",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4596/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4596/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4595",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4595/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4595/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4595/events",
    "html_url": "https://github.com/expressjs/express/issues/4595",
    "id": 894424540,
    "node_id": "MDU6SXNzdWU4OTQ0MjQ1NDA=",
    "number": 4595,
    "title": "Find out whether the URL was redirected or not",
    "user": {
      "login": "agarwalvaibhav0211",
      "id": 43950046,
      "node_id": "MDQ6VXNlcjQzOTUwMDQ2",
      "avatar_url": "https://avatars.githubusercontent.com/u/43950046?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/agarwalvaibhav0211",
      "html_url": "https://github.com/agarwalvaibhav0211",
      "followers_url": "https://api.github.com/users/agarwalvaibhav0211/followers",
      "following_url": "https://api.github.com/users/agarwalvaibhav0211/following{/other_user}",
      "gists_url": "https://api.github.com/users/agarwalvaibhav0211/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/agarwalvaibhav0211/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agarwalvaibhav0211/subscriptions",
      "organizations_url": "https://api.github.com/users/agarwalvaibhav0211/orgs",
      "repos_url": "https://api.github.com/users/agarwalvaibhav0211/repos",
      "events_url": "https://api.github.com/users/agarwalvaibhav0211/events{/privacy}",
      "received_events_url": "https://api.github.com/users/agarwalvaibhav0211/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2021-05-18T14:07:07Z",
    "updated_at": "2021-07-21T19:26:40Z",
    "closed_at": "2021-07-21T19:26:33Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Suppose If I use the following code:\r\n\r\n```\r\nrouter.get('/1',function(req,res,next){\r\n   res.redirect('/');\r\n});\r\nrouter.get('/',function(req,res,next){\r\n   if(redirect){\r\n      //Do Something\r\n   }\r\n   else{\r\n      //Do Something Else\r\n   }\r\n   //Do Something Anyway\r\n})\r\n```\r\nHow can I find whether it was a redirect or not? And if it was a redirect, is it possible to get the original URL? It is not possible to store the original URL or anything in the the redirecting function as I need to use this in a module",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4595/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4595/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4594",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4594/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4594/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4594/events",
    "html_url": "https://github.com/expressjs/express/issues/4594",
    "id": 893564268,
    "node_id": "MDU6SXNzdWU4OTM1NjQyNjg=",
    "number": 4594,
    "title": "`ext` should be case-insensitive for view engines.",
    "user": {
      "login": "issuefiler",
      "id": 57908781,
      "node_id": "MDQ6VXNlcjU3OTA4Nzgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/57908781?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/issuefiler",
      "html_url": "https://github.com/issuefiler",
      "followers_url": "https://api.github.com/users/issuefiler/followers",
      "following_url": "https://api.github.com/users/issuefiler/following{/other_user}",
      "gists_url": "https://api.github.com/users/issuefiler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/issuefiler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/issuefiler/subscriptions",
      "organizations_url": "https://api.github.com/users/issuefiler/orgs",
      "repos_url": "https://api.github.com/users/issuefiler/repos",
      "events_url": "https://api.github.com/users/issuefiler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/issuefiler/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 163600,
        "node_id": "MDU6TGFiZWwxNjM2MDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2021-05-17T17:52:26Z",
    "updated_at": "2022-05-10T16:36:53Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Actually, in issue https://github.com/expressjs/express/issues/4593, I provided _Express_ the `import`ed view engine instance.\r\nI registered it as `\"Eta\"` (`\".Eta\"` internally), and _Express_ did not use it for `search.eta` (because it was only looking for the `\".eta\"` one), triggering the undesired automatic `require`.\r\n\r\n```javascript\r\napp.engine(\"Eta\", Eta.renderFile);\r\nconsole.log(app.engines); // { '.Eta': [Function: renderFile] }\r\napp.set(\"view engine\", \"Eta\");\r\n```\r\n\r\n```javascript\r\nfunction View(name, options) {\r\n  var opts = options || {};\r\n\r\n  this.defaultEngine = opts.defaultEngine;\r\n  this.ext = extname(name);\r\nconsole.info(\"EXPRESS\", [name, extname(name)]); // EXPRESS [ 'search.eta', '.eta' ]\r\n  this.name = name;\r\n  this.root = opts.root;\r\n```\r\n\r\n-----\r\n\r\nMaybe it should normalize the `ext` to a single case?\r\n\r\nhttps://github.com/expressjs/express/blob/5c4f3e7cc76fed9b42c27cebcdd9d66ef63092f9/lib/application.js#L293-L307\r\n\r\nhttps://github.com/expressjs/express/blob/5c4f3e7cc76fed9b42c27cebcdd9d66ef63092f9/lib/view.js#L52-L88\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4594/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4594/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4593",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4593/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4593/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4593/events",
    "html_url": "https://github.com/expressjs/express/issues/4593",
    "id": 893541323,
    "node_id": "MDU6SXNzdWU4OTM1NDEzMjM=",
    "number": 4593,
    "title": "Allow “import”ing view engines.",
    "user": {
      "login": "issuefiler",
      "id": 57908781,
      "node_id": "MDQ6VXNlcjU3OTA4Nzgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/57908781?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/issuefiler",
      "html_url": "https://github.com/issuefiler",
      "followers_url": "https://api.github.com/users/issuefiler/followers",
      "following_url": "https://api.github.com/users/issuefiler/following{/other_user}",
      "gists_url": "https://api.github.com/users/issuefiler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/issuefiler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/issuefiler/subscriptions",
      "organizations_url": "https://api.github.com/users/issuefiler/orgs",
      "repos_url": "https://api.github.com/users/issuefiler/repos",
      "events_url": "https://api.github.com/users/issuefiler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/issuefiler/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-05-17T17:19:44Z",
    "updated_at": "2021-05-17T17:21:46Z",
    "closed_at": "2021-05-17T17:21:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "https://github.com/expressjs/express/blob/5c4f3e7cc76fed9b42c27cebcdd9d66ef63092f9/lib/view.js#L80-L81\r\n\r\nI `import` view engines, configure them with the `import`ed instances,\r\n\r\nthen _Express_ `require`s them, creating new clones of them, and they, the `require`’d instances that are in use, end up unconfigured.\r\n\r\nSee https://github.com/eta-dev/eta/issues/113.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4593/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4593/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4592",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4592/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4592/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4592/events",
    "html_url": "https://github.com/expressjs/express/issues/4592",
    "id": 892661279,
    "node_id": "MDU6SXNzdWU4OTI2NjEyNzk=",
    "number": 4592,
    "title": "res.sendStatus(205) returns a `Reset Content` body",
    "user": {
      "login": "tkesgar",
      "id": 2698543,
      "node_id": "MDQ6VXNlcjI2OTg1NDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2698543?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkesgar",
      "html_url": "https://github.com/tkesgar",
      "followers_url": "https://api.github.com/users/tkesgar/followers",
      "following_url": "https://api.github.com/users/tkesgar/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkesgar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkesgar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkesgar/subscriptions",
      "organizations_url": "https://api.github.com/users/tkesgar/orgs",
      "repos_url": "https://api.github.com/users/tkesgar/repos",
      "events_url": "https://api.github.com/users/tkesgar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkesgar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2021-05-16T12:30:09Z",
    "updated_at": "2022-06-23T14:00:48Z",
    "closed_at": "2022-04-24T22:48:05Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "It seems that HTTP 204 and 205 responses should not have a response body:\r\n\r\n- https://httpstatuses.com/205\r\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/205\r\n\r\n`res.sendStatus(204)` correctly returns no response body, but `res.sendStatus(205)` returns a `Reset Content` string. Is this expected?\r\n\r\n## How to reproduce\r\n\r\n```js\r\nrequire('express')()\r\n  .get('/204', (req, res) => res.sendStatus(204))\r\n  .get('/205', (req, res) => res.sendStatus(205))\r\n  .listen(8080, () => console.log('Ready'))\r\n```\r\n\r\n```\r\n$ curl http://localhost:8080/204\r\n\r\n$ curl http://localhost:8080/205\r\nReset Content\r\n\r\n$ curl -I -XGET http://192.168.100.232:8080/204\r\nHTTP/1.1 204 No Content\r\nX-Powered-By: Express\r\nETag: W/\"a-bAsFyilMr4Ra1hIU5PyoyFRunpI\"\r\nDate: Sun, 16 May 2021 12:26:18 GMT\r\nConnection: keep-alive\r\nKeep-Alive: timeout=5\r\n\r\n$ curl -I -XGET http://192.168.100.232:8080/205\r\nHTTP/1.1 205 Reset Content\r\nX-Powered-By: Express\r\nContent-Type: text/plain; charset=utf-8\r\nContent-Length: 13\r\nETag: W/\"d-yL62EER5Ke7tFugRpssh46aJ7As\"\r\nDate: Sun, 16 May 2021 12:26:25 GMT\r\nConnection: keep-alive\r\nKeep-Alive: timeout=5\r\n```\r\n\r\nExpress version: `4.17.1`\r\nNode.js version: `15.14.0`",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4592/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4592/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4591",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4591/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4591/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4591/events",
    "html_url": "https://github.com/expressjs/express/pull/4591",
    "id": 892357266,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjQ1MDgxMjA3",
    "number": 4591,
    "title": "Refactor auth example",
    "user": {
      "login": "Abhishek01039",
      "id": 56479665,
      "node_id": "MDQ6VXNlcjU2NDc5NjY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/56479665?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Abhishek01039",
      "html_url": "https://github.com/Abhishek01039",
      "followers_url": "https://api.github.com/users/Abhishek01039/followers",
      "following_url": "https://api.github.com/users/Abhishek01039/following{/other_user}",
      "gists_url": "https://api.github.com/users/Abhishek01039/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Abhishek01039/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Abhishek01039/subscriptions",
      "organizations_url": "https://api.github.com/users/Abhishek01039/orgs",
      "repos_url": "https://api.github.com/users/Abhishek01039/repos",
      "events_url": "https://api.github.com/users/Abhishek01039/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Abhishek01039/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      },
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 11,
    "created_at": "2021-05-15T04:55:12Z",
    "updated_at": "2021-05-15T05:30:35Z",
    "closed_at": "2021-05-15T05:23:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4591",
      "html_url": "https://github.com/expressjs/express/pull/4591",
      "diff_url": "https://github.com/expressjs/express/pull/4591.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4591.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4591/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4591/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4590",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4590/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4590/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4590/events",
    "html_url": "https://github.com/expressjs/express/issues/4590",
    "id": 891465386,
    "node_id": "MDU6SXNzdWU4OTE0NjUzODY=",
    "number": 4590,
    "title": "Route matching stops working for RegExp POST routes, if Content-Type is set in request",
    "user": {
      "login": "SephReed",
      "id": 14002040,
      "node_id": "MDQ6VXNlcjE0MDAyMDQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/14002040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SephReed",
      "html_url": "https://github.com/SephReed",
      "followers_url": "https://api.github.com/users/SephReed/followers",
      "following_url": "https://api.github.com/users/SephReed/following{/other_user}",
      "gists_url": "https://api.github.com/users/SephReed/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SephReed/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SephReed/subscriptions",
      "organizations_url": "https://api.github.com/users/SephReed/orgs",
      "repos_url": "https://api.github.com/users/SephReed/repos",
      "events_url": "https://api.github.com/users/SephReed/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SephReed/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-05-13T23:47:31Z",
    "updated_at": "2021-05-13T23:55:44Z",
    "closed_at": "2021-05-13T23:50:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I need to get some sanity back after this bug... it doesn't make any sense at all, but it's real.\r\n\r\nI have an express server:\r\n\r\n```\r\napp.use(express.json());\r\n\r\napp.post(/city\\/get-ids/g, (req, res) => {\r\n  console.log(req.body);\r\n  res.send('Hello World!')\r\n})\r\n```\r\n\r\nAnd a fetch function:\r\n```\r\nconst response = await fetch('http://localhost:3000/city/get-ids/', {\r\n  method: 'POST',\r\n  headers: {\r\n    'Content-Type': 'application/json;charset=utf-8'\r\n  },\r\n  body: JSON.stringify({a: 1})\r\n});\r\n```\r\n\r\n----------\r\n\r\n* If `Content-Type` is set, the POST route becomes 404.\r\n* If `Content-Type` is NOT set, the POST route returns \"Hello World\" (but req.body is empty)\r\n* if I update to `app.post(\"/city/get-ids*\")` everything works as it should\r\n\r\nFor some reason Content-Type and RegExp don't get along.  I can have one or the other, but not both.\r\n\r\n-----------\r\n\r\nPlease, help me restore some sanity.  Fix this bug, and tell me how such a thing could even be possible.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4590/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4590/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4589",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4589/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4589/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4589/events",
    "html_url": "https://github.com/expressjs/express/issues/4589",
    "id": 890963218,
    "node_id": "MDU6SXNzdWU4OTA5NjMyMTg=",
    "number": 4589,
    "title": "Concurrent Requests to ExpressJS fails. Need explanation what is happening",
    "user": {
      "login": "lvillacin",
      "id": 55445461,
      "node_id": "MDQ6VXNlcjU1NDQ1NDYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/55445461?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lvillacin",
      "html_url": "https://github.com/lvillacin",
      "followers_url": "https://api.github.com/users/lvillacin/followers",
      "following_url": "https://api.github.com/users/lvillacin/following{/other_user}",
      "gists_url": "https://api.github.com/users/lvillacin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lvillacin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lvillacin/subscriptions",
      "organizations_url": "https://api.github.com/users/lvillacin/orgs",
      "repos_url": "https://api.github.com/users/lvillacin/repos",
      "events_url": "https://api.github.com/users/lvillacin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lvillacin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2021-05-13T11:29:25Z",
    "updated_at": "2021-06-07T02:48:14Z",
    "closed_at": "2021-06-07T02:48:14Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi I have an expressjs server running on AWS Fargate that handles many API calls to different services and aggregates them to a single response back to the client.\r\n\r\nMy problem is that, I have found that when I have requests to the same endpoint coming in at around the same time, at least one of these requests will fail. The behavior has been very weird and so I'd like a little help explaining what is happening and hopefully how to fix this.\r\n\r\nTo start this is a pseudo code of how my route is setup:\r\n```javascript\r\nrouter.post( '/endpoint', async function (req, res, next) {\r\n  try {\r\n    let uId = req.body.uId\r\n    let logId = req.body.logId\r\n\r\n    let user = await axios(uId) //call to database to retrieve user information (appsync)\r\n    console.log(logId, user)\r\n\r\n    let data = []\r\n\r\n    for (i = 0, i<user.accounts.length, i++) {\r\n      if (user.accounts[i].provider === 'google') {\r\n        let googleInfo = await axios(user.accounts[i]) // calls google API \r\n        console.log(user.accounts[i], i , googleInfo)\r\n        data.push(googleInfo)\r\n\r\n      } else if (user.accounts[i].provider === 'microsoft') {\r\n        let microsoftInfo = await axios(user.accounts[i]) // calls microsoft graph API\r\n        console.log(user.accounts[i], i , microsoftInfo)\r\n        data.push(microsoftInfo)\r\n\r\n      }\r\n    }\r\n\r\n    let response = processDataFunction(data) // some function that processes the data\r\n\r\n    res.json(response)\r\n  } catch (e) {\r\n    next(e)\r\n  }\r\n})\r\n```\r\n\r\nThis all works normally when there is only one request. However, when 2 or more are going to our endpoint at the same time, the server responds with a 500 server error and this thing is what I see in my cloudwatch logs.\r\n\r\n```\r\ndateTime1: request1, user: {}\r\ndateTime2: request1, 0, googleInfo: {user.accounts[0]}\r\ndateTime3: request1, 1, microsoftInfo: {user.accounts[1]}\r\ndateTime4: request1, 2, googleInfo: {user.accounts[3]}\r\ndateTime5: error ......\r\ndateTime6: request2, 0, googleInfo: {user.accounts[0]}\r\ndateTime7: request2, 1, microsoftInfo: {user.accounts[1]}\r\ndateTime8: request2, 2, googleInfo: {user.accounts[2]}\r\ndateTime9: request2, 3, googleInfo: {user.accounts[3]}\r\n```\r\n\r\nThe error is caused by the microsoft/google server erroring out because I am requesting resources for `user.accounts[3]`, when the loop and the access token is still in `user.accounts[2]` (see dateTime4)\r\n\r\nI was able to partially fix this by raising the number of running tasks in ECS. I ended up being able to have more concurrent requests at the same time. However, at a certain point the same errors would still occur. \r\n\r\nAny explanation why this is happening and is my only fix to raise the number of ECS tasks?\r\n\r\nMore context:\r\nI have provisioned 0.25vcpu and 0.5gb memory. I tried increasing this already and it does not fix the problem\r\nThe process function at the end is fairly cpu intensive",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4589/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4589/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4588",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4588/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4588/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4588/events",
    "html_url": "https://github.com/expressjs/express/issues/4588",
    "id": 890105885,
    "node_id": "MDU6SXNzdWU4OTAxMDU4ODU=",
    "number": 4588,
    "title": "New verison or upgade",
    "user": {
      "login": "phumzani101",
      "id": 72985020,
      "node_id": "MDQ6VXNlcjcyOTg1MDIw",
      "avatar_url": "https://avatars.githubusercontent.com/u/72985020?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phumzani101",
      "html_url": "https://github.com/phumzani101",
      "followers_url": "https://api.github.com/users/phumzani101/followers",
      "following_url": "https://api.github.com/users/phumzani101/following{/other_user}",
      "gists_url": "https://api.github.com/users/phumzani101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phumzani101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phumzani101/subscriptions",
      "organizations_url": "https://api.github.com/users/phumzani101/orgs",
      "repos_url": "https://api.github.com/users/phumzani101/repos",
      "events_url": "https://api.github.com/users/phumzani101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phumzani101/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-05-12T13:43:48Z",
    "updated_at": "2021-05-27T11:35:45Z",
    "closed_at": "2021-05-22T01:53:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hie Guys, is there any hope of express.js new verison or upgading, nodejs has many new features that can boost express.js to the other level",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4588/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4588/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4587",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4587/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4587/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4587/events",
    "html_url": "https://github.com/expressjs/express/pull/4587",
    "id": 889209291,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjQyMzcxMTYw",
    "number": 4587,
    "title": "fix duplication in a switch case statements",
    "user": {
      "login": "Abderrahmenla",
      "id": 29304794,
      "node_id": "MDQ6VXNlcjI5MzA0Nzk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/29304794?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Abderrahmenla",
      "html_url": "https://github.com/Abderrahmenla",
      "followers_url": "https://api.github.com/users/Abderrahmenla/followers",
      "following_url": "https://api.github.com/users/Abderrahmenla/following{/other_user}",
      "gists_url": "https://api.github.com/users/Abderrahmenla/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Abderrahmenla/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Abderrahmenla/subscriptions",
      "organizations_url": "https://api.github.com/users/Abderrahmenla/orgs",
      "repos_url": "https://api.github.com/users/Abderrahmenla/repos",
      "events_url": "https://api.github.com/users/Abderrahmenla/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Abderrahmenla/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-05-11T23:57:27Z",
    "updated_at": "2021-07-30T20:12:03Z",
    "closed_at": "2021-07-30T20:12:02Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4587",
      "html_url": "https://github.com/expressjs/express/pull/4587",
      "diff_url": "https://github.com/expressjs/express/pull/4587.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4587.patch",
      "merged_at": "2021-07-30T20:12:03Z"
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4587/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4587/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4586",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4586/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4586/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4586/events",
    "html_url": "https://github.com/expressjs/express/issues/4586",
    "id": 888712170,
    "node_id": "MDU6SXNzdWU4ODg3MTIxNzA=",
    "number": 4586,
    "title": "Params not passed between url destructuration steps",
    "user": {
      "login": "a2br",
      "id": 62328077,
      "node_id": "MDQ6VXNlcjYyMzI4MDc3",
      "avatar_url": "https://avatars.githubusercontent.com/u/62328077?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/a2br",
      "html_url": "https://github.com/a2br",
      "followers_url": "https://api.github.com/users/a2br/followers",
      "following_url": "https://api.github.com/users/a2br/following{/other_user}",
      "gists_url": "https://api.github.com/users/a2br/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/a2br/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/a2br/subscriptions",
      "organizations_url": "https://api.github.com/users/a2br/orgs",
      "repos_url": "https://api.github.com/users/a2br/repos",
      "events_url": "https://api.github.com/users/a2br/events{/privacy}",
      "received_events_url": "https://api.github.com/users/a2br/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-05-11T21:24:04Z",
    "updated_at": "2021-05-11T21:27:33Z",
    "closed_at": "2021-05-11T21:27:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Let's say I have this:\r\n```js\r\ngroupRouter.get(\"/\", (req) => console.log(req.params.id)) // -> undefined\r\nrouter.use(\"/groups/:id\", groupRouter)\r\n```\r\nThe `:id` request param doesn't stay in `req.params`. Bug or feature? Should a PR be opened to fix this?\r\nDon't hesitate to give me advice on how I should handle this! For now, I re-write the `/:id/` base, but it's not that big of a problem.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4586/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4586/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4584",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4584/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4584/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4584/events",
    "html_url": "https://github.com/expressjs/express/pull/4584",
    "id": 885310282,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjM4NjM4Nzg4",
    "number": 4584,
    "title": "remove duplicates",
    "user": {
      "login": "Abderrahmenla",
      "id": 29304794,
      "node_id": "MDQ6VXNlcjI5MzA0Nzk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/29304794?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Abderrahmenla",
      "html_url": "https://github.com/Abderrahmenla",
      "followers_url": "https://api.github.com/users/Abderrahmenla/followers",
      "following_url": "https://api.github.com/users/Abderrahmenla/following{/other_user}",
      "gists_url": "https://api.github.com/users/Abderrahmenla/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Abderrahmenla/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Abderrahmenla/subscriptions",
      "organizations_url": "https://api.github.com/users/Abderrahmenla/orgs",
      "repos_url": "https://api.github.com/users/Abderrahmenla/repos",
      "events_url": "https://api.github.com/users/Abderrahmenla/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Abderrahmenla/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2021-05-10T23:04:31Z",
    "updated_at": "2021-05-11T23:58:58Z",
    "closed_at": "2021-05-10T23:09:22Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4584",
      "html_url": "https://github.com/expressjs/express/pull/4584",
      "diff_url": "https://github.com/expressjs/express/pull/4584.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4584.patch",
      "merged_at": null
    },
    "body": "\r\nlib/utils.js\r\nThe body of this case clause [:167] duplicates the body of this case clause [:159]. This may be caused by a copy-paste error. remove-duplicates\r\n\r\nlib/response.js\r\nContent-type application/json [:264] set in set [:264] does not specify a charset. Add charset=utf-8 or another charset.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4584/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4584/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4583",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4583/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4583/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4583/events",
    "html_url": "https://github.com/expressjs/express/issues/4583",
    "id": 880296580,
    "node_id": "MDU6SXNzdWU4ODAyOTY1ODA=",
    "number": 4583,
    "title": "Have first-party support for errors thrown by async request handlers",
    "user": {
      "login": "sandylunar",
      "id": 6354754,
      "node_id": "MDQ6VXNlcjYzNTQ3NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6354754?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sandylunar",
      "html_url": "https://github.com/sandylunar",
      "followers_url": "https://api.github.com/users/sandylunar/followers",
      "following_url": "https://api.github.com/users/sandylunar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sandylunar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sandylunar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sandylunar/subscriptions",
      "organizations_url": "https://api.github.com/users/sandylunar/orgs",
      "repos_url": "https://api.github.com/users/sandylunar/repos",
      "events_url": "https://api.github.com/users/sandylunar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sandylunar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2021-05-08T05:14:23Z",
    "updated_at": "2021-05-08T05:36:20Z",
    "closed_at": "2021-05-08T05:16:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "#### Feature Request\r\nDoes anyone know what's going on with Express 5.0? The main feature I'm after is better support for errors thrown by async request handlers (I know this can be achieved using express-async-handler but it would be nice to have first-party support.\r\n\r\n#### Additional Information\r\n\r\nThis is automatically mined by [FRMiner2.0](https://github.com/elloworl/FRMiner2.0) from Gitter. \r\nJames Pickard @euoia posted to Room [expressjs/express](https://gitter.im/expressjs/express?at=60642ecfc1c67842a3fcccef) on Mar 31 16:11 (UTC+8). ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4583/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4583/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4582",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4582/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4582/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4582/events",
    "html_url": "https://github.com/expressjs/express/issues/4582",
    "id": 880288278,
    "node_id": "MDU6SXNzdWU4ODAyODgyNzg=",
    "number": 4582,
    "title": "Whether there was a way to begin sending the zip file as its being generated?",
    "user": {
      "login": "sandylunar",
      "id": 6354754,
      "node_id": "MDQ6VXNlcjYzNTQ3NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6354754?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sandylunar",
      "html_url": "https://github.com/sandylunar",
      "followers_url": "https://api.github.com/users/sandylunar/followers",
      "following_url": "https://api.github.com/users/sandylunar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sandylunar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sandylunar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sandylunar/subscriptions",
      "organizations_url": "https://api.github.com/users/sandylunar/orgs",
      "repos_url": "https://api.github.com/users/sandylunar/repos",
      "events_url": "https://api.github.com/users/sandylunar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sandylunar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2021-05-08T05:06:15Z",
    "updated_at": "2021-08-29T16:04:15Z",
    "closed_at": "2021-08-29T16:04:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello, I'm working on a project, and I'm trying to process a bunch of files and return them in a zip file. I'm using archiver and I'm hosting on aws. However, AWS idles out before the zip file is finished creating. I was wondering whether there was a way to begin sending the zip file as its being generated?\r\nIts sent in response by using a stream from archiver to the response object\r\n\r\n#### Additional Information\r\nThis is automatically mined by [FRMiner2.0](https://github.com/elloworl/FRMiner2.0) from Gitter. \r\nmdsflyboy @mdsflyboy posted to Room [expressjs/express](https://gitter.im/expressjs/express?at=6053acad2beb1e1da3b60597) on Mar 19 03:40 (UTC+8). ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4582/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4582/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4581",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4581/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4581/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4581/events",
    "html_url": "https://github.com/expressjs/express/issues/4581",
    "id": 878439537,
    "node_id": "MDU6SXNzdWU4Nzg0Mzk1Mzc=",
    "number": 4581,
    "title": "Issue with array and object params in form submit",
    "user": {
      "login": "prcongithub",
      "id": 604476,
      "node_id": "MDQ6VXNlcjYwNDQ3Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/604476?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prcongithub",
      "html_url": "https://github.com/prcongithub",
      "followers_url": "https://api.github.com/users/prcongithub/followers",
      "following_url": "https://api.github.com/users/prcongithub/following{/other_user}",
      "gists_url": "https://api.github.com/users/prcongithub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prcongithub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prcongithub/subscriptions",
      "organizations_url": "https://api.github.com/users/prcongithub/orgs",
      "repos_url": "https://api.github.com/users/prcongithub/repos",
      "events_url": "https://api.github.com/users/prcongithub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prcongithub/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2021-05-07T04:31:19Z",
    "updated_at": "2021-05-08T03:56:02Z",
    "closed_at": "2021-05-08T03:53:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "## ExpressJS: 4.16.4\r\n## NodeJS:    10.9.0\r\n## NPM:       6.4.1\r\n\r\nWhen I have a form like this which POSTs data to an ExpressJS endpoint:\r\n```\r\n<form action=\"/submit\" method=\"post\">\r\n  <input type=\"text\" name=\"user[fields_attributes][0][name]\" value=\"Name\">  \r\n  <input type=\"text\" name=\"user[fields_attributes][0][value]\" value=\"ABC\">  \r\n  <input type=\"text\" name=\"user[fields_attributes][1][name]\" value=\"Email\">  \r\n  <input type=\"text\" name=\"user[fields_attributes][1][name]\" value=\"abc@example.com\">  \r\n  <input type=\"text\" name=\"user[fields_attributes][2][name]\" value=\"Mobile\">  \r\n  <input type=\"text\" name=\"user[fields_attributes][2][name]\" value=\"XXXXXXXXXX\">  \r\n  <input type=\"submit\" value=\"Submit\">\r\n</form>\r\n```\r\n\r\nrequest.body on Express side is:\r\n```\r\n{\r\n  user: {\r\n    fields_attributes: [\r\n      {\r\n        name: \"Name\",\r\n        value: \"ABC\"\r\n      },\r\n      {\r\n        name: \"Email\",\r\n        value: \"abc@example.com\"\r\n      },\r\n      {\r\n        name: \"Mobile\",\r\n        value: \"XXXXXXXXXX\"\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\nAnd when I have similar form with indexes for fields more than say 200\r\n```\r\n<form action=\"/submit\" method=\"post\">\r\n  <input type=\"text\" name=\"user[fields_attributes][300][name]\" value=\"Name\">  \r\n  <input type=\"text\" name=\"user[fields_attributes][300][value]\" value=\"ABC\">  \r\n  <input type=\"text\" name=\"user[fields_attributes][301][name]\" value=\"Email\">  \r\n  <input type=\"text\" name=\"user[fields_attributes][301][name]\" value=\"abc@example.com\">  \r\n  <input type=\"text\" name=\"user[fields_attributes][302][name]\" value=\"Mobile\">  \r\n  <input type=\"text\" name=\"user[fields_attributes][302][name]\" value=\"XXXXXXXXXX\">  \r\n  <input type=\"submit\" value=\"Submit\">\r\n</form>\r\n```\r\nrequest.body on Express side is:\r\n```\r\n{\r\n  user: {\r\n    fields_attributes: {\r\n      '300': {\r\n        name: \"Name\",\r\n        value: \"ABC\"\r\n      },\r\n      '301': {\r\n        name: \"Email\",\r\n        value: \"abc@example.com\"\r\n      },\r\n      '302': {\r\n        name: \"Mobile\",\r\n        value: \"XXXXXXXXXX\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\nThis creates problems while handling the request obviously.\r\nWhat could be the issue? ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4581/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4581/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4580",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4580/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4580/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4580/events",
    "html_url": "https://github.com/expressjs/express/issues/4580",
    "id": 875174038,
    "node_id": "MDU6SXNzdWU4NzUxNzQwMzg=",
    "number": 4580,
    "title": "Request: Support for http/2",
    "user": {
      "login": "WhereCanI",
      "id": 49956203,
      "node_id": "MDQ6VXNlcjQ5OTU2MjAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/49956203?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WhereCanI",
      "html_url": "https://github.com/WhereCanI",
      "followers_url": "https://api.github.com/users/WhereCanI/followers",
      "following_url": "https://api.github.com/users/WhereCanI/following{/other_user}",
      "gists_url": "https://api.github.com/users/WhereCanI/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WhereCanI/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WhereCanI/subscriptions",
      "organizations_url": "https://api.github.com/users/WhereCanI/orgs",
      "repos_url": "https://api.github.com/users/WhereCanI/repos",
      "events_url": "https://api.github.com/users/WhereCanI/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WhereCanI/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-05-04T07:12:21Z",
    "updated_at": "2021-05-04T13:04:26Z",
    "closed_at": "2021-05-04T13:03:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "As of now Express.js doesn't have support for http/2 out of the box, but I would like to request that it will get support for it since most of the internet now is running http/2.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4580/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4580/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4577",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4577/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4577/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4577/events",
    "html_url": "https://github.com/expressjs/express/pull/4577",
    "id": 869451649,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjI0ODExNzQ4",
    "number": 4577,
    "title": "template literalify :)",
    "user": {
      "login": "Looskie",
      "id": 50378828,
      "node_id": "MDQ6VXNlcjUwMzc4ODI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/50378828?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Looskie",
      "html_url": "https://github.com/Looskie",
      "followers_url": "https://api.github.com/users/Looskie/followers",
      "following_url": "https://api.github.com/users/Looskie/following{/other_user}",
      "gists_url": "https://api.github.com/users/Looskie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Looskie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Looskie/subscriptions",
      "organizations_url": "https://api.github.com/users/Looskie/orgs",
      "repos_url": "https://api.github.com/users/Looskie/repos",
      "events_url": "https://api.github.com/users/Looskie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Looskie/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-04-28T03:19:53Z",
    "updated_at": "2021-04-28T17:22:52Z",
    "closed_at": "2021-04-28T03:29:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4577",
      "html_url": "https://github.com/expressjs/express/pull/4577",
      "diff_url": "https://github.com/expressjs/express/pull/4577.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4577.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4577/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4577/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4576",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4576/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4576/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4576/events",
    "html_url": "https://github.com/expressjs/express/issues/4576",
    "id": 868259867,
    "node_id": "MDU6SXNzdWU4NjgyNTk4Njc=",
    "number": 4576,
    "title": "What needs to happen for progress to be made? Sponsorship? Maintainers?",
    "user": {
      "login": "coolaj86",
      "id": 122831,
      "node_id": "MDQ6VXNlcjEyMjgzMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/122831?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/coolaj86",
      "html_url": "https://github.com/coolaj86",
      "followers_url": "https://api.github.com/users/coolaj86/followers",
      "following_url": "https://api.github.com/users/coolaj86/following{/other_user}",
      "gists_url": "https://api.github.com/users/coolaj86/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/coolaj86/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/coolaj86/subscriptions",
      "organizations_url": "https://api.github.com/users/coolaj86/orgs",
      "repos_url": "https://api.github.com/users/coolaj86/repos",
      "events_url": "https://api.github.com/users/coolaj86/events{/privacy}",
      "received_events_url": "https://api.github.com/users/coolaj86/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-04-26T22:49:29Z",
    "updated_at": "2021-04-26T23:03:17Z",
    "closed_at": "2021-04-26T23:03:12Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm just wondering if we can figure out where the bottleneck is and what to do to move it out of the way a bit.\r\n\r\nCertainly being one of the most popular projects on the planet - nay, in the Universe - there must be enough potential to unlock to get the ball rolling again. 🤷",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4576/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4576/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4575",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4575/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4575/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4575/events",
    "html_url": "https://github.com/expressjs/express/issues/4575",
    "id": 865713512,
    "node_id": "MDU6SXNzdWU4NjU3MTM1MTI=",
    "number": 4575,
    "title": "express.json() is not parsing nested json object. it return [object Object] instead.",
    "user": {
      "login": "shivktyr",
      "id": 65708060,
      "node_id": "MDQ6VXNlcjY1NzA4MDYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/65708060?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shivktyr",
      "html_url": "https://github.com/shivktyr",
      "followers_url": "https://api.github.com/users/shivktyr/followers",
      "following_url": "https://api.github.com/users/shivktyr/following{/other_user}",
      "gists_url": "https://api.github.com/users/shivktyr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shivktyr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shivktyr/subscriptions",
      "organizations_url": "https://api.github.com/users/shivktyr/orgs",
      "repos_url": "https://api.github.com/users/shivktyr/repos",
      "events_url": "https://api.github.com/users/shivktyr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shivktyr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-04-23T03:44:59Z",
    "updated_at": "2021-04-23T04:41:56Z",
    "closed_at": "2021-04-23T04:33:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi Everyone!\r\nexpress.json() is not parsing nested json object. it return [object Object] instead.\r\nexpress - 4.17.1,\r\n\r\nRequest Headers\r\nContent-Type: application/json;charset=UTF-8\r\n\r\nI m using express.json() as follows.\r\n`app.use(express.json());`\r\n\r\nwhen i post data without nested object. it works\r\n`const data = await this.$axios.$post(`user/update/${this.username}`, {confirmationCode:  \"code\"});`\r\n\r\nnow req.body.confirmationCode is \"code\".\r\n\r\nbut if i post nested json object. It doesn't works\r\n`const data = await this.$axios.$post(`user/update/${this.username}`, {confirmationCode: { mobile: \"code\"}});`\r\n\r\nnow req.body.confirmationCode.mobile is undefined.\r\nnow req.body.confirmationCode is [object Object].\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4575/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4575/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4574",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4574/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4574/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4574/events",
    "html_url": "https://github.com/expressjs/express/pull/4574",
    "id": 865508682,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjIxNTc3MDgy",
    "number": 4574,
    "title": "Update CI",
    "user": {
      "login": "aravindvnair99",
      "id": 22199259,
      "node_id": "MDQ6VXNlcjIyMTk5MjU5",
      "avatar_url": "https://avatars.githubusercontent.com/u/22199259?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aravindvnair99",
      "html_url": "https://github.com/aravindvnair99",
      "followers_url": "https://api.github.com/users/aravindvnair99/followers",
      "following_url": "https://api.github.com/users/aravindvnair99/following{/other_user}",
      "gists_url": "https://api.github.com/users/aravindvnair99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aravindvnair99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aravindvnair99/subscriptions",
      "organizations_url": "https://api.github.com/users/aravindvnair99/orgs",
      "repos_url": "https://api.github.com/users/aravindvnair99/repos",
      "events_url": "https://api.github.com/users/aravindvnair99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aravindvnair99/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 133578714,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/tests",
        "name": "tests",
        "color": "944008",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-04-22T21:39:18Z",
    "updated_at": "2021-08-15T06:34:54Z",
    "closed_at": "2021-08-15T06:26:59Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4574",
      "html_url": "https://github.com/expressjs/express/pull/4574",
      "diff_url": "https://github.com/expressjs/express/pull/4574.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4574.patch",
      "merged_at": "2021-08-15T06:27:00Z"
    },
    "body": "- Update 12 series to Node.js@12.22\n- Update 10 series to Node.js@10.24\n- Fix missing Node.js@8.17 in AppVeyor (Travis CI was using 8.17 but AppVeyor was using 8.16)\n\nSigned-off-by: Aravind Nair <22199259+aravindvnair99@users.noreply.github.com>",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4574/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4574/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4573",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4573/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4573/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4573/events",
    "html_url": "https://github.com/expressjs/express/pull/4573",
    "id": 865382066,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjIxNDY3MjY5",
    "number": 4573,
    "title": "Update EJS include syntax",
    "user": {
      "login": "aravindvnair99",
      "id": 22199259,
      "node_id": "MDQ6VXNlcjIyMTk5MjU5",
      "avatar_url": "https://avatars.githubusercontent.com/u/22199259?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aravindvnair99",
      "html_url": "https://github.com/aravindvnair99",
      "followers_url": "https://api.github.com/users/aravindvnair99/followers",
      "following_url": "https://api.github.com/users/aravindvnair99/following{/other_user}",
      "gists_url": "https://api.github.com/users/aravindvnair99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aravindvnair99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aravindvnair99/subscriptions",
      "organizations_url": "https://api.github.com/users/aravindvnair99/orgs",
      "repos_url": "https://api.github.com/users/aravindvnair99/repos",
      "events_url": "https://api.github.com/users/aravindvnair99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aravindvnair99/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2021-04-22T19:19:46Z",
    "updated_at": "2021-08-01T08:11:30Z",
    "closed_at": "2021-08-01T02:14:55Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4573",
      "html_url": "https://github.com/expressjs/express/pull/4573",
      "diff_url": "https://github.com/expressjs/express/pull/4573.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4573.patch",
      "merged_at": "2021-08-01T02:14:56Z"
    },
    "body": "# Proposed changes\r\n- Fix #4572 and other places where old code is used (EJS syntax changed in v3.0.1 and above)\r\n- Update `ejs` devDependency to 3.1.6\r\n\r\nSigned-off-by: Aravind Nair <22199259+aravindvnair99@users.noreply.github.com>",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4573/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4573/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4572",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4572/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4572/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4572/events",
    "html_url": "https://github.com/expressjs/express/issues/4572",
    "id": 865329356,
    "node_id": "MDU6SXNzdWU4NjUzMjkzNTY=",
    "number": 4572,
    "title": "EJS in examples won't render @3.1.6 ",
    "user": {
      "login": "RELNO",
      "id": 14296774,
      "node_id": "MDQ6VXNlcjE0Mjk2Nzc0",
      "avatar_url": "https://avatars.githubusercontent.com/u/14296774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RELNO",
      "html_url": "https://github.com/RELNO",
      "followers_url": "https://api.github.com/users/RELNO/followers",
      "following_url": "https://api.github.com/users/RELNO/following{/other_user}",
      "gists_url": "https://api.github.com/users/RELNO/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RELNO/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RELNO/subscriptions",
      "organizations_url": "https://api.github.com/users/RELNO/orgs",
      "repos_url": "https://api.github.com/users/RELNO/repos",
      "events_url": "https://api.github.com/users/RELNO/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RELNO/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2021-04-22T18:47:30Z",
    "updated_at": "2021-04-22T19:35:12Z",
    "closed_at": "2021-04-22T19:12:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In example : https://github.com/expressjs/express/blob/de122c14f5b57b3dadbf3e33020cd5ad22e9d04d/examples/auth/views/login.ejs#L3\r\n\r\nwould fail to render: `SyntaxError: Unexpected identifier in /home/noyman/auth/views/login.ejs while compiling ejs` \r\n\r\nNew ejs api below would work: \r\n\r\n```\r\n<% var title = 'Authentication Example' %>\r\n<%- include('head'); -%>\r\n\r\n<h1>Login</h1>\r\n<%- message %>\r\nTry accessing <a href=\"/restricted\">/restricted</a>, then authenticate with \"tj\" and \"foobar\".\r\n<form method=\"post\" action=\"/login\">\r\n  <p>\r\n    <label>Username:</label>\r\n    <input type=\"text\" name=\"username\">\r\n  </p>\r\n  <p>\r\n    <label>Password:</label>\r\n    <input type=\"text\" name=\"password\">\r\n  </p>\r\n  <p>\r\n    <input type=\"submit\" value=\"Login\">\r\n  </p>\r\n</form>\r\n\r\n<%- include('foot'); -%>\r\n\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4572/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4572/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4570",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4570/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4570/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4570/events",
    "html_url": "https://github.com/expressjs/express/issues/4570",
    "id": 864362031,
    "node_id": "MDU6SXNzdWU4NjQzNjIwMzE=",
    "number": 4570,
    "title": "is there a way to format json middleware response",
    "user": {
      "login": "simonppg",
      "id": 3270997,
      "node_id": "MDQ6VXNlcjMyNzA5OTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3270997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simonppg",
      "html_url": "https://github.com/simonppg",
      "followers_url": "https://api.github.com/users/simonppg/followers",
      "following_url": "https://api.github.com/users/simonppg/following{/other_user}",
      "gists_url": "https://api.github.com/users/simonppg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simonppg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simonppg/subscriptions",
      "organizations_url": "https://api.github.com/users/simonppg/orgs",
      "repos_url": "https://api.github.com/users/simonppg/repos",
      "events_url": "https://api.github.com/users/simonppg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simonppg/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-04-21T22:42:26Z",
    "updated_at": "2021-04-21T23:06:05Z",
    "closed_at": "2021-04-21T22:48:38Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm using express app with express.json() middleware, and I wonder if there is a way to control the way this middleware respon, what is happening right now is: if there is a request with a body that can't be parse it just return an html response with the callstack on it, it would be nice if I can capture those errors and send a response with something like: { msg: 'Bad format'}",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4570/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4570/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4569",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4569/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4569/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4569/events",
    "html_url": "https://github.com/expressjs/express/issues/4569",
    "id": 861596146,
    "node_id": "MDU6SXNzdWU4NjE1OTYxNDY=",
    "number": 4569,
    "title": "Answering before routes are registered",
    "user": {
      "login": "MatsG23",
      "id": 60609373,
      "node_id": "MDQ6VXNlcjYwNjA5Mzcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/60609373?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MatsG23",
      "html_url": "https://github.com/MatsG23",
      "followers_url": "https://api.github.com/users/MatsG23/followers",
      "following_url": "https://api.github.com/users/MatsG23/following{/other_user}",
      "gists_url": "https://api.github.com/users/MatsG23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MatsG23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MatsG23/subscriptions",
      "organizations_url": "https://api.github.com/users/MatsG23/orgs",
      "repos_url": "https://api.github.com/users/MatsG23/repos",
      "events_url": "https://api.github.com/users/MatsG23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MatsG23/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2021-04-19T17:43:54Z",
    "updated_at": "2021-04-19T18:03:57Z",
    "closed_at": "2021-04-19T17:59:18Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**My environment:**\r\n-Node app with Express\r\n-Nginx with nginx-mod-passenger (Phusion Passenger open source)\r\n-Ubuntu 18.04 on an virtual private server\r\n\r\n**My problem is:**\r\nPhusion Passenger seems to have a sleep mode that pauses the Node.JS app after a bit time without requests. When I now make a request and the app is woken up, express immediatly returns 404. To access the routes I have set, I must make a second request as soon as the routes are loaded.\r\n\r\n**My proposal:**\r\nAs long as not all routes are loaded, express should wait instead of responding.  ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4569/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4569/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4568",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4568/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4568/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4568/events",
    "html_url": "https://github.com/expressjs/express/issues/4568",
    "id": 860743970,
    "node_id": "MDU6SXNzdWU4NjA3NDM5NzA=",
    "number": 4568,
    "title": "Module exporting Router logs Server object to the console",
    "user": {
      "login": "AceKiron",
      "id": 39498818,
      "node_id": "MDQ6VXNlcjM5NDk4ODE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/39498818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AceKiron",
      "html_url": "https://github.com/AceKiron",
      "followers_url": "https://api.github.com/users/AceKiron/followers",
      "following_url": "https://api.github.com/users/AceKiron/following{/other_user}",
      "gists_url": "https://api.github.com/users/AceKiron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AceKiron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AceKiron/subscriptions",
      "organizations_url": "https://api.github.com/users/AceKiron/orgs",
      "repos_url": "https://api.github.com/users/AceKiron/repos",
      "events_url": "https://api.github.com/users/AceKiron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AceKiron/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2021-04-18T19:26:41Z",
    "updated_at": "2021-04-19T10:09:51Z",
    "closed_at": "2021-04-18T19:32:10Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Here's a pastebin link with the console output: https://pastebin.com/Vi0TbMEw\r\n\r\nThe following is enough to reproduce it:\r\n\r\nindex.js:\r\n```js\r\nconst express = require(\"express\");\r\nconst expressApp = express();\r\n\r\nconst routes = require(\"./routes/index.js\");\r\nexpressApp.use(\"/api\", routes);\r\n\r\nexpressApp.listen(8000, function() {\r\n  console.log(\"Running webserver!\");\r\n});\r\n```\r\n\r\nroutes/index.js:\r\n```js\r\nconst router = require(\"express\").Router();\r\n\r\nrouter.get(\"/\", function(req, res) {\r\n  res.sendStatus(200);\r\n});\r\n\r\nmodule.exports = router;\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4568/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4568/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4567",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4567/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4567/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4567/events",
    "html_url": "https://github.com/expressjs/express/issues/4567",
    "id": 860574174,
    "node_id": "MDU6SXNzdWU4NjA1NzQxNzQ=",
    "number": 4567,
    "title": "Increase response stream buffer (highwatermark)",
    "user": {
      "login": "emiliosanches",
      "id": 55329280,
      "node_id": "MDQ6VXNlcjU1MzI5Mjgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/55329280?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/emiliosanches",
      "html_url": "https://github.com/emiliosanches",
      "followers_url": "https://api.github.com/users/emiliosanches/followers",
      "following_url": "https://api.github.com/users/emiliosanches/following{/other_user}",
      "gists_url": "https://api.github.com/users/emiliosanches/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/emiliosanches/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/emiliosanches/subscriptions",
      "organizations_url": "https://api.github.com/users/emiliosanches/orgs",
      "repos_url": "https://api.github.com/users/emiliosanches/repos",
      "events_url": "https://api.github.com/users/emiliosanches/events{/privacy}",
      "received_events_url": "https://api.github.com/users/emiliosanches/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2021-04-18T04:56:22Z",
    "updated_at": "2022-03-06T16:32:53Z",
    "closed_at": "2022-03-06T16:32:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello everyone!\r\nToday I started developing a streaming feature for my website (using Express on back-end) and I faced a problem: the speed of data transmission is incredibly low. It takes around 10 seconds to send 30MB of data, even with my file stored in a SSD and I'm on localhost.\r\nThis is how I am sending data to response:\r\n```js\r\nconst stream = fs.createReadStream(path.resolve('..', '..', 'storage', 'file.mp4'), {\r\n  start,\r\n  end\r\n});\r\nstream.pipe(response);\r\n```\r\nSo, I started to researching what could be causing it and found that it's because of a property of the streams named highwatermark, which defines the amouont of RAM used to store data in streaming. The higher the highwatermark value, the fast the data streaming, but also the higher the cost of memory.\r\n\r\nI can't just change the highwatermark value for an existing stream instance (like the response object), so I am trying to find a way to do it. I need a higher highwatermark value for streaming this file, what can I do?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4567/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4567/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4565",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4565/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4565/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4565/events",
    "html_url": "https://github.com/expressjs/express/issues/4565",
    "id": 855530754,
    "node_id": "MDU6SXNzdWU4NTU1MzA3NTQ=",
    "number": 4565,
    "title": "Requesting triager role for firmanJS",
    "user": {
      "login": "firmanJS",
      "id": 5679509,
      "node_id": "MDQ6VXNlcjU2Nzk1MDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5679509?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/firmanJS",
      "html_url": "https://github.com/firmanJS",
      "followers_url": "https://api.github.com/users/firmanJS/followers",
      "following_url": "https://api.github.com/users/firmanJS/following{/other_user}",
      "gists_url": "https://api.github.com/users/firmanJS/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/firmanJS/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/firmanJS/subscriptions",
      "organizations_url": "https://api.github.com/users/firmanJS/orgs",
      "repos_url": "https://api.github.com/users/firmanJS/repos",
      "events_url": "https://api.github.com/users/firmanJS/events{/privacy}",
      "received_events_url": "https://api.github.com/users/firmanJS/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 324166296,
        "node_id": "MDU6TGFiZWwzMjQxNjYyOTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/meta",
        "name": "meta",
        "color": "fef2c0",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2021-04-12T04:28:55Z",
    "updated_at": "2021-04-17T21:10:40Z",
    "closed_at": "2021-04-17T21:10:40Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Hello \r\n\r\nI have been using express js for about 2 years as a backend engineer, I want to join the community and take part in development.\r\n\r\nHence, I acknowledge the following:\r\n\r\n* I have read and understood the [Code of Conduct for Express.js](https://github.com/expressjs/express/blob/master/Code-Of-Conduct.md).\r\n* I also have read and understood the process and best practices around [Express triaging](https://github.com/expressjs/express/blob/master/Triager-Guide.md).\r\n* I promise to follow and abide by the [contributing guidelines](https://github.com/expressjs/express/blob/master/Contributing.md) always.\r\n* I have watched some of the [previous meetings](https://www.youtube.com/channel/UCYjxjAeH6TRik9Iwy5nXw7g/videos) to get some insights.\r\n\r\nThus, I request for the `triager` role for the following GitHub organizations:\r\n\r\n* [jshttp](https://github.com/jshttp)\r\n* [pillarjs](https://github.com/pillarjs)\r\n* [Express.js](https://github.com/expressjs)\r\n\r\nLooking forward to helping the community :)",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4565/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4565/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4564",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4564/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4564/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4564/events",
    "html_url": "https://github.com/expressjs/express/pull/4564",
    "id": 855400832,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjEzMTQzMzY3",
    "number": 4564,
    "title": "Fixed typos",
    "user": {
      "login": "HusseinMoHu",
      "id": 73659434,
      "node_id": "MDQ6VXNlcjczNjU5NDM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/73659434?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/HusseinMoHu",
      "html_url": "https://github.com/HusseinMoHu",
      "followers_url": "https://api.github.com/users/HusseinMoHu/followers",
      "following_url": "https://api.github.com/users/HusseinMoHu/following{/other_user}",
      "gists_url": "https://api.github.com/users/HusseinMoHu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/HusseinMoHu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HusseinMoHu/subscriptions",
      "organizations_url": "https://api.github.com/users/HusseinMoHu/orgs",
      "repos_url": "https://api.github.com/users/HusseinMoHu/repos",
      "events_url": "https://api.github.com/users/HusseinMoHu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/HusseinMoHu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2021-04-11T20:30:28Z",
    "updated_at": "2021-07-31T22:30:29Z",
    "closed_at": "2021-07-31T22:30:29Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4564",
      "html_url": "https://github.com/expressjs/express/pull/4564",
      "diff_url": "https://github.com/expressjs/express/pull/4564.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4564.patch",
      "merged_at": "2021-07-31T22:30:29Z"
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4564/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4564/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4563",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4563/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4563/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4563/events",
    "html_url": "https://github.com/expressjs/express/issues/4563",
    "id": 854748646,
    "node_id": "MDU6SXNzdWU4NTQ3NDg2NDY=",
    "number": 4563,
    "title": "Requesting triager role for AravindVNair99",
    "user": {
      "login": "aravindvnair99",
      "id": 22199259,
      "node_id": "MDQ6VXNlcjIyMTk5MjU5",
      "avatar_url": "https://avatars.githubusercontent.com/u/22199259?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aravindvnair99",
      "html_url": "https://github.com/aravindvnair99",
      "followers_url": "https://api.github.com/users/aravindvnair99/followers",
      "following_url": "https://api.github.com/users/aravindvnair99/following{/other_user}",
      "gists_url": "https://api.github.com/users/aravindvnair99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aravindvnair99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aravindvnair99/subscriptions",
      "organizations_url": "https://api.github.com/users/aravindvnair99/orgs",
      "repos_url": "https://api.github.com/users/aravindvnair99/repos",
      "events_url": "https://api.github.com/users/aravindvnair99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aravindvnair99/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2021-04-09T18:09:45Z",
    "updated_at": "2021-04-12T05:45:20Z",
    "closed_at": "2021-04-12T04:35:18Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Greetings!\r\n\r\nHope you all are having a good day!\r\n\r\nI have been using Express.js for a couple of years now as a student and as a freelancer. I felt I could make use of my time to give back to the community by helping in triaging issues and pull requests and eventually making issue trackers and PRs as time passes.\r\n\r\nHence, I acknowledge the following:\r\n\r\n- I have read and understood the [Code of Conduct for Express.js](https://github.com/expressjs/express/blob/master/Code-Of-Conduct.md).\r\n- I also have read and understood the process and best practices around [Express triaging](https://github.com/expressjs/express/blob/master/Triager-Guide.md).\r\n- I promise to follow and abide by the [contributing guidelines](https://github.com/expressjs/express/blob/master/Contributing.md) always.\r\n- I have watched some of the [previous meetings](https://www.youtube.com/channel/UCYjxjAeH6TRik9Iwy5nXw7g/videos) to get some insights.\r\n\r\nThus, I request for the `triager` role for the following GitHub organizations:\r\n\r\n- [jshttp](https://github.com/jshttp)\r\n- [pillarjs](https://github.com/pillarjs)\r\n- [Express.js](https://github.com/expressjs)\r\n\r\nLooking forward to helping the community! Wishing you all a good day ahead! :)",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4563/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4563/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4561",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4561/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4561/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4561/events",
    "html_url": "https://github.com/expressjs/express/issues/4561",
    "id": 851724360,
    "node_id": "MDU6SXNzdWU4NTE3MjQzNjA=",
    "number": 4561,
    "title": "Request triager role for @marsonya",
    "user": {
      "login": "marsonya",
      "id": 16393876,
      "node_id": "MDQ6VXNlcjE2MzkzODc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/16393876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marsonya",
      "html_url": "https://github.com/marsonya",
      "followers_url": "https://api.github.com/users/marsonya/followers",
      "following_url": "https://api.github.com/users/marsonya/following{/other_user}",
      "gists_url": "https://api.github.com/users/marsonya/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marsonya/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marsonya/subscriptions",
      "organizations_url": "https://api.github.com/users/marsonya/orgs",
      "repos_url": "https://api.github.com/users/marsonya/repos",
      "events_url": "https://api.github.com/users/marsonya/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marsonya/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2021-04-06T18:57:14Z",
    "updated_at": "2021-04-09T18:58:38Z",
    "closed_at": "2021-04-09T18:45:04Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "I have read and understood the project's Code of Conduct.\r\nI also have read and understood the [Express Triager Guide](https://github.com/expressjs/express/blob/master/Triager-Guide.md).\r\n\r\nI request for a triager role for the following GitHub organizations:\r\n`jshttp`\r\n`express`",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4561/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4561/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4560",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4560/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4560/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4560/events",
    "html_url": "https://github.com/expressjs/express/issues/4560",
    "id": 851406592,
    "node_id": "MDU6SXNzdWU4NTE0MDY1OTI=",
    "number": 4560,
    "title": "Request triager role for lucasraziel",
    "user": {
      "login": "lucasraziel",
      "id": 26093830,
      "node_id": "MDQ6VXNlcjI2MDkzODMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/26093830?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lucasraziel",
      "html_url": "https://github.com/lucasraziel",
      "followers_url": "https://api.github.com/users/lucasraziel/followers",
      "following_url": "https://api.github.com/users/lucasraziel/following{/other_user}",
      "gists_url": "https://api.github.com/users/lucasraziel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lucasraziel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lucasraziel/subscriptions",
      "organizations_url": "https://api.github.com/users/lucasraziel/orgs",
      "repos_url": "https://api.github.com/users/lucasraziel/repos",
      "events_url": "https://api.github.com/users/lucasraziel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lucasraziel/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2021-04-06T13:07:46Z",
    "updated_at": "2021-04-12T04:33:49Z",
    "closed_at": "2021-04-12T04:33:48Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have read and understood the project's Code of Conduct.\r\nI also have read and understood the process and best practices around Express triaging.\r\n\r\nI request for a triager role for the following GitHub organizations:\r\n\r\nexpress",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4560/reactions",
      "total_count": 4,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4560/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4559",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4559/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4559/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4559/events",
    "html_url": "https://github.com/expressjs/express/issues/4559",
    "id": 849923461,
    "node_id": "MDU6SXNzdWU4NDk5MjM0NjE=",
    "number": 4559,
    "title": "`req.ip` is `undefined` in controller subroutine",
    "user": {
      "login": "fangyibkk",
      "id": 16625249,
      "node_id": "MDQ6VXNlcjE2NjI1MjQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16625249?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fangyibkk",
      "html_url": "https://github.com/fangyibkk",
      "followers_url": "https://api.github.com/users/fangyibkk/followers",
      "following_url": "https://api.github.com/users/fangyibkk/following{/other_user}",
      "gists_url": "https://api.github.com/users/fangyibkk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fangyibkk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fangyibkk/subscriptions",
      "organizations_url": "https://api.github.com/users/fangyibkk/orgs",
      "repos_url": "https://api.github.com/users/fangyibkk/repos",
      "events_url": "https://api.github.com/users/fangyibkk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fangyibkk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-04-04T17:37:18Z",
    "updated_at": "2021-04-04T18:00:50Z",
    "closed_at": "2021-04-04T17:39:36Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi, I don't know if this is the beginner mistake or the issue.\r\nI reproduce the issue similar to the the real world case I encounter.\r\n\r\n### Problem\r\n`req.ip` is `undefined` when in the subroutine.\r\nIn my case, the subroutine take some time and need to run after the response.\r\n\r\n### Reproduce step\r\nMain file `app.js` (only one)\r\nI simulate long running subroutine by `setTimeout`\r\n```js\r\nimport express from \"express\";\r\n\r\nconst app = express();\r\n\r\nconst subroutine = (req) => {\r\n  setTimeout(() => {\r\n    console.log(req.headers);\r\n    console.log(req.ip);\r\n  }, 5000);\r\n};\r\n\r\napp.get(\"/ip\", async (req, res) => {\r\n  subroutine(req);\r\n  return res.send(\"Done\");\r\n});\r\n\r\napp.listen(9999, () => {\r\n  console.log(\"listening on 9999\");\r\n});\r\n```\r\nThen I send the request. I can log `req.headers` but for `req.ip` it gives me `undefined`.\r\n```\r\n// Client\r\ncurl localhost:9999/ip\r\nDone\r\n\r\n// Application\r\n{ host: 'localhost:9999', 'user-agent': 'curl/7.68.0', accept: '*/*' }\r\nundefined\r\n```\r\n\r\n### Workaround:\r\nI call `req.ip` once and it persist value in the subroutine and I don't know why\r\n```js\r\napp.get(\"/ip\", async (req, res) => {\r\n  req.ip // <--- call it here\r\n  subroutine(req);\r\n  return res.send(\"Done\");\r\n});\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4559/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4559/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4558",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4558/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4558/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4558/events",
    "html_url": "https://github.com/expressjs/express/issues/4558",
    "id": 843787651,
    "node_id": "MDU6SXNzdWU4NDM3ODc2NTE=",
    "number": 4558,
    "title": "Is there a safe place in the request object for app-specific state data?",
    "user": {
      "login": "gh-andre",
      "id": 7843659,
      "node_id": "MDQ6VXNlcjc4NDM2NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7843659?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gh-andre",
      "html_url": "https://github.com/gh-andre",
      "followers_url": "https://api.github.com/users/gh-andre/followers",
      "following_url": "https://api.github.com/users/gh-andre/following{/other_user}",
      "gists_url": "https://api.github.com/users/gh-andre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gh-andre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gh-andre/subscriptions",
      "organizations_url": "https://api.github.com/users/gh-andre/orgs",
      "repos_url": "https://api.github.com/users/gh-andre/repos",
      "events_url": "https://api.github.com/users/gh-andre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gh-andre/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2021-03-29T20:36:07Z",
    "updated_at": "2021-03-30T17:12:47Z",
    "closed_at": "2021-03-30T17:12:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm aware that the common advice is to just add any data member the app needs to the request. What I'm looking for, though, is whether there is an application-specific location that is guaranteed not to conflict with any possible property names in the request.\r\n\r\nFor example, in Hapi such place is [request.app](https://hapi.dev/api/?v=20.1.0#-requestapp), which serves exactly this purpose and allows applications to carry request-level application data without any possibility of running into conflicting property names between different components. Hapi plug-ins, which are somewhat similar in functionality to Express middleware, also have a safe location for per-plugin request state.\r\n\r\nThoughts and common best-practices approaches would be appreciated. Thanks.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4558/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4558/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4557",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4557/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4557/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4557/events",
    "html_url": "https://github.com/expressjs/express/issues/4557",
    "id": 842771807,
    "node_id": "MDU6SXNzdWU4NDI3NzE4MDc=",
    "number": 4557,
    "title": "`App.use(path, ...)` Does Not Mount at `'//'`",
    "user": {
      "login": "gebbber",
      "id": 36095842,
      "node_id": "MDQ6VXNlcjM2MDk1ODQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/36095842?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gebbber",
      "html_url": "https://github.com/gebbber",
      "followers_url": "https://api.github.com/users/gebbber/followers",
      "following_url": "https://api.github.com/users/gebbber/following{/other_user}",
      "gists_url": "https://api.github.com/users/gebbber/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gebbber/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gebbber/subscriptions",
      "organizations_url": "https://api.github.com/users/gebbber/orgs",
      "repos_url": "https://api.github.com/users/gebbber/repos",
      "events_url": "https://api.github.com/users/gebbber/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gebbber/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2021-03-28T16:16:46Z",
    "updated_at": "2021-04-01T00:23:47Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "`Router` instance mounted explicitly at `'//'` exposes routes when path begins only with a single `/`:\r\n\r\n```javascript\r\nconst TestRoutes = express.Router();\r\n\r\nTestRoutes.get('/drop/table/:table', (req, res) => { \r\n  // drop table\r\n  res.send(`Dropped table '${req.params.table}'`);\r\n})\r\n\r\nTestRoutes.get('/', sendListOfTestRoutes);\r\n\r\nif (TEST) app.use('//', TestRoutes);\r\n\r\napp.listen();\r\n```\r\n\r\nExpected behavior is that navigating to `http://hostname/` would bypass this `Router` and go to the main app, but instead Express serves the list of test routes mounted within the router at `//`.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4557/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4557/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4556",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4556/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4556/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4556/events",
    "html_url": "https://github.com/expressjs/express/issues/4556",
    "id": 842767963,
    "node_id": "MDU6SXNzdWU4NDI3Njc5NjM=",
    "number": 4556,
    "title": "`App.use(path, ...)` Does Not Mount at `'//'`",
    "user": {
      "login": "gebbber",
      "id": 36095842,
      "node_id": "MDQ6VXNlcjM2MDk1ODQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/36095842?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gebbber",
      "html_url": "https://github.com/gebbber",
      "followers_url": "https://api.github.com/users/gebbber/followers",
      "following_url": "https://api.github.com/users/gebbber/following{/other_user}",
      "gists_url": "https://api.github.com/users/gebbber/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gebbber/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gebbber/subscriptions",
      "organizations_url": "https://api.github.com/users/gebbber/orgs",
      "repos_url": "https://api.github.com/users/gebbber/repos",
      "events_url": "https://api.github.com/users/gebbber/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gebbber/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2021-03-28T15:57:56Z",
    "updated_at": "2021-03-28T16:15:29Z",
    "closed_at": "2021-03-28T16:07:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Opened and closed this issue a few times so I'm just opening a clean one.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4556/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4556/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4555",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4555/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4555/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4555/events",
    "html_url": "https://github.com/expressjs/express/issues/4555",
    "id": 842301141,
    "node_id": "MDU6SXNzdWU4NDIzMDExNDE=",
    "number": 4555,
    "title": "NodeJS Modules",
    "user": {
      "login": "BobFrankston",
      "id": 5490484,
      "node_id": "MDQ6VXNlcjU0OTA0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5490484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BobFrankston",
      "html_url": "https://github.com/BobFrankston",
      "followers_url": "https://api.github.com/users/BobFrankston/followers",
      "following_url": "https://api.github.com/users/BobFrankston/following{/other_user}",
      "gists_url": "https://api.github.com/users/BobFrankston/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BobFrankston/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BobFrankston/subscriptions",
      "organizations_url": "https://api.github.com/users/BobFrankston/orgs",
      "repos_url": "https://api.github.com/users/BobFrankston/repos",
      "events_url": "https://api.github.com/users/BobFrankston/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BobFrankston/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2021-03-26T21:16:13Z",
    "updated_at": "2021-03-26T22:51:43Z",
    "closed_at": "2021-03-26T21:26:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "(I withdraw report on problems converting to es6 modules while I track down an approach that might work)",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4555/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4555/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4554",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4554/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4554/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4554/events",
    "html_url": "https://github.com/expressjs/express/pull/4554",
    "id": 838095609,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTk4MzI5ODk5",
    "number": 4554,
    "title": "Typo in example CSS",
    "user": {
      "login": "lukeart",
      "id": 18706818,
      "node_id": "MDQ6VXNlcjE4NzA2ODE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/18706818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lukeart",
      "html_url": "https://github.com/lukeart",
      "followers_url": "https://api.github.com/users/lukeart/followers",
      "following_url": "https://api.github.com/users/lukeart/following{/other_user}",
      "gists_url": "https://api.github.com/users/lukeart/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lukeart/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lukeart/subscriptions",
      "organizations_url": "https://api.github.com/users/lukeart/orgs",
      "repos_url": "https://api.github.com/users/lukeart/repos",
      "events_url": "https://api.github.com/users/lukeart/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lukeart/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2021-03-22T20:46:31Z",
    "updated_at": "2021-07-31T19:59:18Z",
    "closed_at": "2021-07-31T19:59:17Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4554",
      "html_url": "https://github.com/expressjs/express/pull/4554",
      "diff_url": "https://github.com/expressjs/express/pull/4554.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4554.patch",
      "merged_at": "2021-07-31T19:59:18Z"
    },
    "body": "Fixed the spelling of `Helvetica Neue`.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4554/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4554/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4553",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4553/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4553/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4553/events",
    "html_url": "https://github.com/expressjs/express/issues/4553",
    "id": 837287488,
    "node_id": "MDU6SXNzdWU4MzcyODc0ODg=",
    "number": 4553,
    "title": "Send page within a dist folder from NodeJS Express",
    "user": {
      "login": "bpracht",
      "id": 45239253,
      "node_id": "MDQ6VXNlcjQ1MjM5MjUz",
      "avatar_url": "https://avatars.githubusercontent.com/u/45239253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bpracht",
      "html_url": "https://github.com/bpracht",
      "followers_url": "https://api.github.com/users/bpracht/followers",
      "following_url": "https://api.github.com/users/bpracht/following{/other_user}",
      "gists_url": "https://api.github.com/users/bpracht/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bpracht/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bpracht/subscriptions",
      "organizations_url": "https://api.github.com/users/bpracht/orgs",
      "repos_url": "https://api.github.com/users/bpracht/repos",
      "events_url": "https://api.github.com/users/bpracht/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bpracht/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-03-22T03:48:12Z",
    "updated_at": "2021-03-24T19:29:09Z",
    "closed_at": "2021-03-24T19:29:09Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have an Angular app that I'm doing a production build into a dist folder. It's being served by an Express server. The biggest problem I've had is sub pages into the Angular app. I've seen advice on SO and have had limited success. As it is now, if I do a page refresh, the browser URL stays the same, but it goes to the entry index.html. \r\n\r\nIf the user goes to one of \r\n```\r\nhttps://localhost/\r\nhttps://localhost/cost-recovery \r\nhttps://localhost/cost-recovery/finance\r\n```\r\n\r\nit goes to index.html and is considered the entry point for the application.\r\n\r\nOne sub-URL is\r\n```\r\nhttps://localhost/cost-recovery/cost-dashboard\r\n```\r\nIf the user navigates via links in the app, the routing works and the page renders properly.\r\n\r\nIn *all* cases, if someone does a page reload, the app goes back to the entry page and the URL on the browser is not changed. \r\n\r\nIt's difficult for me to pair down my code because not all my routes are ones going to the Angular app. Also, the Angular app is subject to authentication. Nonetheless, I think I've managed to show only the Angular based snippets. I realize the code I'm showing could be improved, nonetheless I'm confused by the examples which have both an app.use something, something express.static(some path), then an app.get('/', function(req,res) { res.sendFile(\"the static Angular dist index.html file\")}\r\n\r\nIn my index.html (I changed the <base href from /cost-recovery to /:\r\n```\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <base href=\"/\">\r\n    <oldbase href=\"/cost-recovery/\">    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n    <title>SPRINT Cost</title>\r\n    <link rel=\"icon\" type=\"image/x-icon\" href=\"./assets/ibm_icon.ico\" />\r\n    <link rel=\"stylesheet\" href=\"./assets/css/w3ds-5.4.0.css\" />\r\n  <link rel=\"stylesheet\" href=\"styles.3ff695c00d717f2d2a11.css\"></head>\r\n\r\n  <body>\r\n    <app-root></app-root>\r\n    <script src=\"./assets/js/w3ds-5-4-0.js\"></script>\r\n  <script type=\"text/javascript\" src=\"runtime.06daa30a2963fa413676.js\"></script><script type=\"text/javascript\" src=\"polyfills.eda2d610c377a19f9f35.js\"></script><script type=\"text/javascript\" src=\"scripts.cc2b720567c4dabe68e6.js\"></script><script type=\"text/javascript\" src=\"main.d29d2f9ec5e70ab89fcd.js\"></script></body>\r\n</html>\r\n```\r\n\r\nRoute snippets:\r\n```\r\nvar express = require('express');\r\nvar path = require('path');\r\nconst bodyParser = require('body-parser');\r\nconst FormData = require('form-data');\r\nconst axios = require('axios');\r\nconst fs = require('fs');\r\n\r\nfunction getFullyLoadedApp() {\r\n    app = express();\r\n    app.use(bodyParser.json());\r\n    app.use(bodyParser.urlencoded({ extended: false }));\r\n    // app.use(express.static(path.join(__dirname, 'public')));\r\n\r\n    var cookieParser = require('cookie-parser');\r\n    app.use(cookieParser());\r\n    app.use(session({ resave: 'true', saveUninitialized: 'true', secret: config.secret }));\r\n    addRoutes(app, config);\r\n    return app;\r\n}\r\n\r\nfunction addRoutes(app, config) {\r\n\r\n    app.use(function (req, res, next) {\r\n        if (req.path == '/' || req.path.includes('download') || req.path.includes('static')) {\r\n            logger.info(req.path);\r\n        }\r\n        res.header(\"Access-Control-Allow-Origin\", \"*\")\r\n        res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-Width, Content-Type, Accept\")\r\n        next();\r\n    });\r\n\r\n    app.use('/', express.static(__dirname + '/../client/dist'));\r\n\r\n    app.get('/', ensureAuthenticated, function (req, res) {\r\n        logger.info('Sending file ' + path.join(__dirname, '/../client/dist/client/index.html'));\r\n        res.sendFile(path.join(__dirname, '/../client/dist/client/index.html'));\r\n    });\r\n\r\n    app.use(express.static(__dirname + \"/../client/dist/client\"));\r\n\r\n    app.use('/sprint-cost-recovery*', ensureAuthenticated, function (req, res) {\r\n        logger.info('Sending file ' + path.join(__dirname, '/../client/dist/client/index.html'));\r\n        res.sendFile(path.join(__dirname, '/../client/dist/client/index.html'));\r\n    });\r\n}\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4553/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4553/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4552",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4552/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4552/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4552/events",
    "html_url": "https://github.com/expressjs/express/issues/4552",
    "id": 837117987,
    "node_id": "MDU6SXNzdWU4MzcxMTc5ODc=",
    "number": 4552,
    "title": "Body parser doesn't work",
    "user": {
      "login": "Lk2v",
      "id": 26687216,
      "node_id": "MDQ6VXNlcjI2Njg3MjE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/26687216?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Lk2v",
      "html_url": "https://github.com/Lk2v",
      "followers_url": "https://api.github.com/users/Lk2v/followers",
      "following_url": "https://api.github.com/users/Lk2v/following{/other_user}",
      "gists_url": "https://api.github.com/users/Lk2v/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Lk2v/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Lk2v/subscriptions",
      "organizations_url": "https://api.github.com/users/Lk2v/orgs",
      "repos_url": "https://api.github.com/users/Lk2v/repos",
      "events_url": "https://api.github.com/users/Lk2v/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Lk2v/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2021-03-21T16:11:40Z",
    "updated_at": "2021-03-22T09:36:45Z",
    "closed_at": "2021-03-21T18:26:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello I'm trying to get the parameters in a post request but it always returns an empty object.\r\n\r\nHere is my code :\r\n```Javascript\r\nconst express = require('express')\r\nconst app = express()\r\nconst port = 3000\r\n\r\napp.use(express.json({ limit: '1mb' }));\r\n\r\n\r\napp.post('/api/device_code', (req, res) => {\r\n    console.log(req.body); //always return {}\r\n})\r\n\r\napp.listen(port, () => {\r\n  console.log(`Example app listening at http://localhost:${port}`)\r\n})\r\n```\r\n\r\nMy request parameters :\r\n![image](https://user-images.githubusercontent.com/26687216/111912092-69220080-8a68-11eb-8e7b-c5b8837fe84c.png)\r\n\r\nThanks and have a nice day\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4552/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4552/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4551",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4551/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4551/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4551/events",
    "html_url": "https://github.com/expressjs/express/pull/4551",
    "id": 836953715,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTk3MzkzODA4",
    "number": 4551,
    "title": "update for adding constants",
    "user": {
      "login": "ylcnfrht",
      "id": 22433665,
      "node_id": "MDQ6VXNlcjIyNDMzNjY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/22433665?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ylcnfrht",
      "html_url": "https://github.com/ylcnfrht",
      "followers_url": "https://api.github.com/users/ylcnfrht/followers",
      "following_url": "https://api.github.com/users/ylcnfrht/following{/other_user}",
      "gists_url": "https://api.github.com/users/ylcnfrht/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ylcnfrht/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ylcnfrht/subscriptions",
      "organizations_url": "https://api.github.com/users/ylcnfrht/orgs",
      "repos_url": "https://api.github.com/users/ylcnfrht/repos",
      "events_url": "https://api.github.com/users/ylcnfrht/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ylcnfrht/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 19,
    "created_at": "2021-03-21T00:44:47Z",
    "updated_at": "2021-11-17T04:32:17Z",
    "closed_at": "2021-11-17T04:32:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4551",
      "html_url": "https://github.com/expressjs/express/pull/4551",
      "diff_url": "https://github.com/expressjs/express/pull/4551.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4551.patch",
      "merged_at": null
    },
    "body": "Hi, everyone, I think moving constants-related codes to constants can be better that's why I created this pr.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4551/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4551/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4550",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4550/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4550/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4550/events",
    "html_url": "https://github.com/expressjs/express/issues/4550",
    "id": 836185036,
    "node_id": "MDU6SXNzdWU4MzYxODUwMzY=",
    "number": 4550,
    "title": "Nested router overrides param sanitization",
    "user": {
      "login": "MMauro94",
      "id": 21290655,
      "node_id": "MDQ6VXNlcjIxMjkwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/21290655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MMauro94",
      "html_url": "https://github.com/MMauro94",
      "followers_url": "https://api.github.com/users/MMauro94/followers",
      "following_url": "https://api.github.com/users/MMauro94/following{/other_user}",
      "gists_url": "https://api.github.com/users/MMauro94/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MMauro94/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MMauro94/subscriptions",
      "organizations_url": "https://api.github.com/users/MMauro94/orgs",
      "repos_url": "https://api.github.com/users/MMauro94/repos",
      "events_url": "https://api.github.com/users/MMauro94/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MMauro94/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2021-03-19T16:43:24Z",
    "updated_at": "2021-03-19T17:51:35Z",
    "closed_at": "2021-03-19T17:33:12Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm trying to have a nested router `use`d by a bigger one while also sanitizing a param (an ID) globally, so that it doesn't have to be done in each nested page.\r\nIt seems that `req.params` gets overridden at every nesting, so any sanitization prior to that gets discarded.\r\n\r\nRepro:\r\n```js\r\nimport express, {Router} from 'express';\r\nimport {param, query} from \"express-validator\";\r\n\r\n// Sanitization middlewares\r\nconst sanitizers = [\r\n    param(\"id\").isInt().toInt(),\r\n    query(\"test\").isInt().toInt()\r\n]\r\n// Handler for both example pages that outputs the types of the param and the query\r\nconst requestHandler = (req, res) => {\r\n    res.send({\r\n        paramType: typeof req.params.id,\r\n        queryType: typeof req.query.test\r\n    })\r\n}\r\n\r\nconst app = express()\r\n\r\n// By putting the sanitizers in the router use() middlewares the param sanitization gets discarded\r\nconst doesntWork = Router({mergeParams: true})\r\ndoesntWork.get(\"/\", requestHandler)\r\napp.use(\"/doesnt-work/:id\", sanitizers , doesntWork)\r\n\r\n// Putting the sanitizers directly in the pages middlewares works OK\r\nconst works = Router({mergeParams: true})\r\nworks.get(\"/\", sanitizers, requestHandler)\r\napp.use(\"/works/:id\", works)\r\n```\r\n\r\nIn this small example I've declared two routes `/works/:id` and `/doesnt-work/:id`. Both also accept an int query parameter `test` that isn't affected.\r\n\r\nResults:\r\n* `/works/1?test=2` outputs `{\"paramType\": \"number\", \"queryType\": \"number\"}`\r\n* `/doesnt-work/1?test=2` outputs `{\"paramType\": \"string\", \"queryType\": \"number\"}`\r\n\r\nI didn't find any documentation for this behavior, nor any bug report. I'm guessing that the culprit is the `mergeParams` options, but it obviously cannot be omitted, otherwise the `id` param won't be visible at all in the nested router.\r\n\r\n\r\nThanks in advance for the help!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4550/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4550/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4548",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4548/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4548/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4548/events",
    "html_url": "https://github.com/expressjs/express/issues/4548",
    "id": 833173379,
    "node_id": "MDU6SXNzdWU4MzMxNzMzNzk=",
    "number": 4548,
    "title": "Errors not passing through express.route ",
    "user": {
      "login": "YashKumarVerma",
      "id": 14032427,
      "node_id": "MDQ6VXNlcjE0MDMyNDI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/14032427?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YashKumarVerma",
      "html_url": "https://github.com/YashKumarVerma",
      "followers_url": "https://api.github.com/users/YashKumarVerma/followers",
      "following_url": "https://api.github.com/users/YashKumarVerma/following{/other_user}",
      "gists_url": "https://api.github.com/users/YashKumarVerma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YashKumarVerma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YashKumarVerma/subscriptions",
      "organizations_url": "https://api.github.com/users/YashKumarVerma/orgs",
      "repos_url": "https://api.github.com/users/YashKumarVerma/repos",
      "events_url": "https://api.github.com/users/YashKumarVerma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YashKumarVerma/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-03-16T20:32:23Z",
    "updated_at": "2021-03-16T20:41:41Z",
    "closed_at": "2021-03-16T20:35:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I attempted to write a middleware that can catch the errors that I throw inside `app.get` (and sister functions) and transform the response to a particular format.\r\nCodebase [here](https://github.com/UniAuth/http-exception-transformer), NPM [here](https://www.npmjs.com/package/http-exception-transformer).\r\n\r\nThe package works fine and handles the errors that are thrown inside the route definitions, but when routes are added using the `app.use` method, it does not handle it.\r\n\r\n## Example\r\nthis works completely fine\r\n```js\r\n\r\napp.use('/user', UserRoutes)\r\napp.use('/auth', AuthRoutes)\r\n\r\nconst foo = (req: Request, res: Response) => {\r\n  throw new NotFoundException('err !')\r\n}\r\napp.get('/', foo)\r\n\r\napp.use(HttpExceptionTransformer)\r\nexport default app\r\n\r\n```\r\n\r\nbut when an error is thrown in either of `UserRoutes` or `AuthRoutes`, it does not handle them, and hangs up the connection. In UserRoutes, i throw an error using:\r\n```js\r\n\r\n\r\nconst router = express.Router()\r\n\r\n/**\r\n * declaring user rotues that are nested under the /users scope\r\n */\r\nrouter.get('/', async (req: Request, res: Response) => {\r\n  throw new NotFoundException('why here !')\r\n  const data = await UserController.getAllUsers()\r\n  res.json(SuccessToResponseMapper(data))\r\n})\r\n```\r\n\r\nand the application throws an error with the following trace.\r\n```txt\r\n\r\n/home/yash/Desktop/files/works/projects/simple-rbs/node_modules/http-exception-transformer/exceptions/HttpException.js:22\r\n        var _this = _super.call(this, message) || this;\r\n                           ^\r\nGenericHttpException: why here !\r\n    at NotFoundException.HttpException [as constructor] (/home/yash/Desktop/files/works/projects/simple-rbs/node_modules/http-exception-transformer/exceptions/HttpException.js:22:28)\r\n    at new NotFoundException (/home/yash/Desktop/files/works/projects/simple-rbs/node_modules/http-exception-transformer/exceptions/NotFoundException.gen.js:22:28)\r\n    at /home/yash/Desktop/files/works/projects/simple-rbs/src/modules/user/routes.ts:15:9\r\n    at step (/home/yash/Desktop/files/works/projects/simple-rbs/src/modules/user/routes.ts:33:23)\r\n    at Object.next (/home/yash/Desktop/files/works/projects/simple-rbs/src/modules/user/routes.ts:14:53)\r\n    at /home/yash/Desktop/files/works/projects/simple-rbs/src/modules/user/routes.ts:8:71\r\n    at new Promise (<anonymous>)\r\n    at __awaiter (/home/yash/Desktop/files/works/projects/simple-rbs/src/modules/user/routes.ts:4:12)\r\n    at /home/yash/Desktop/files/works/projects/simple-rbs/src/modules/user/routes.ts:14:51\r\n    at Layer.handle [as handle_request] (/home/yash/Desktop/files/works/projects/simple-rbs/node_modules/express/lib/router/layer.js:95:5)\r\n    at next (/home/yash/Desktop/files/works/projects/simple-rbs/node_modules/express/lib/router/route.js:137:13)\r\n    at Route.dispatch (/home/yash/Desktop/files/works/projects/simple-rbs/node_modules/express/lib/router/route.js:112:3)\r\n    at Layer.handle [as handle_request] (/home/yash/Desktop/files/works/projects/simple-rbs/node_modules/express/lib/router/layer.js:95:5)\r\n    at /home/yash/Desktop/files/works/projects/simple-rbs/node_modules/express/lib/router/index.js:281:22\r\n    at Function.process_params (/home/yash/Desktop/files/works/projects/simple-rbs/node_modules/express/lib/router/index.js:335:12)\r\n    at next (/home/yash/Desktop/files/works/projects/simple-rbs/node_modules/express/lib/router/index.js:275:10)\r\n[nodemon] app crashed - waiting for file changes before starting...\r\n```\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4548/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4548/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4547",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4547/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4547/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4547/events",
    "html_url": "https://github.com/expressjs/express/issues/4547",
    "id": 832283498,
    "node_id": "MDU6SXNzdWU4MzIyODM0OTg=",
    "number": 4547,
    "title": "headerSent undefined",
    "user": {
      "login": "HellpMe",
      "id": 64676117,
      "node_id": "MDQ6VXNlcjY0Njc2MTE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/64676117?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/HellpMe",
      "html_url": "https://github.com/HellpMe",
      "followers_url": "https://api.github.com/users/HellpMe/followers",
      "following_url": "https://api.github.com/users/HellpMe/following{/other_user}",
      "gists_url": "https://api.github.com/users/HellpMe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/HellpMe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HellpMe/subscriptions",
      "organizations_url": "https://api.github.com/users/HellpMe/orgs",
      "repos_url": "https://api.github.com/users/HellpMe/repos",
      "events_url": "https://api.github.com/users/HellpMe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/HellpMe/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2021-03-15T23:39:49Z",
    "updated_at": "2021-03-15T23:45:49Z",
    "closed_at": "2021-03-15T23:45:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "whenever I try to start the bot it presents this error, but I never saw this error happen.\r\nI'm still starting in this part of the express\r\n\r\n> node src/index.js\r\n\r\nTypeError: Cannot read property 'headersSent' of undefined\r\n    at headersSent (D:\\Projetos\\Columbine Projects\\node_modules\\finalhandler\\index.js:256:21)\r\n    at D:\\Projetos\\Columbine Projects\\node_modules\\finalhandler\\index.js:92:17\r\n    at D:\\Projetos\\Columbine Projects\\node_modules\\express\\lib\\router\\index.js:635:15\r\n    at next (D:\\Projetos\\Columbine Projects\\node_modules\\express\\lib\\router\\index.js:210:14)\r\n    at Function.handle (D:\\Projetos\\Columbine Projects\\node_modules\\express\\lib\\router\\index.js:174:3)\r\n    at Function.handle (D:\\Projetos\\Columbine Projects\\node_modules\\express\\lib\\application.js:174:10)\r\n    at app (D:\\Projetos\\Columbine Projects\\node_modules\\express\\lib\\express.js:39:9)\r\n    at module.exports (D:\\Projetos\\Columbine Projects\\src\\http\\api\\index.js:15:50)\r\n    at Object.<anonymous> (D:\\Projetos\\Columbine Projects\\src\\index.js:56:24)",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4547/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4547/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4545",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4545/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4545/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4545/events",
    "html_url": "https://github.com/expressjs/express/issues/4545",
    "id": 830416361,
    "node_id": "MDU6SXNzdWU4MzA0MTYzNjE=",
    "number": 4545,
    "title": "Express response.download() Not Behaving as Expected",
    "user": {
      "login": "bamunusingha",
      "id": 8347833,
      "node_id": "MDQ6VXNlcjgzNDc4MzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8347833?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bamunusingha",
      "html_url": "https://github.com/bamunusingha",
      "followers_url": "https://api.github.com/users/bamunusingha/followers",
      "following_url": "https://api.github.com/users/bamunusingha/following{/other_user}",
      "gists_url": "https://api.github.com/users/bamunusingha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bamunusingha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bamunusingha/subscriptions",
      "organizations_url": "https://api.github.com/users/bamunusingha/orgs",
      "repos_url": "https://api.github.com/users/bamunusingha/repos",
      "events_url": "https://api.github.com/users/bamunusingha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bamunusingha/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2021-03-12T20:15:29Z",
    "updated_at": "2021-03-13T11:21:05Z",
    "closed_at": "2021-03-12T20:45:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm using following code to track active download counts.\r\n\r\n```js\r\nrouter.get('/download/:fileName', (req, res) => {\r\n    let fileName = req.params.fileName;\r\n    let baseFilePath='/home/filePath';\r\n\r\n    incrementDownloadCount(fileName);\r\n\r\n    return res.download(\r\n        `${baseFilePath}/${fileName}`,\r\n        `${fileName}`,\r\n        function (err) {\r\n            if (err) {\r\n                console.log(`ERROR ++ : ${err}`);\r\n            } else {\r\n                console.log('download completed');\r\n            }\r\n            decrementDownloadCount(fileName);\r\n        }\r\n    );\r\n});\r\n```\r\n\r\nWhen each time download started it increments download count by one, but after few seconds 'download completed' is printed to the log and download count get decremented while the downloading is in progress.\r\n\r\nAs of the nodejs express documentation the callback function is called after the download is finished or in an event of exception. Can anyone please help on this ?\r\n\r\nI'm using nodejs 14.16.0 and express 4.17.1",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4545/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4545/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4544",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4544/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4544/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4544/events",
    "html_url": "https://github.com/expressjs/express/issues/4544",
    "id": 824757333,
    "node_id": "MDU6SXNzdWU4MjQ3NTczMzM=",
    "number": 4544,
    "title": "No way to stop express webserver",
    "user": {
      "login": "YodaLightsabr",
      "id": 76178582,
      "node_id": "MDQ6VXNlcjc2MTc4NTgy",
      "avatar_url": "https://avatars.githubusercontent.com/u/76178582?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YodaLightsabr",
      "html_url": "https://github.com/YodaLightsabr",
      "followers_url": "https://api.github.com/users/YodaLightsabr/followers",
      "following_url": "https://api.github.com/users/YodaLightsabr/following{/other_user}",
      "gists_url": "https://api.github.com/users/YodaLightsabr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YodaLightsabr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YodaLightsabr/subscriptions",
      "organizations_url": "https://api.github.com/users/YodaLightsabr/orgs",
      "repos_url": "https://api.github.com/users/YodaLightsabr/repos",
      "events_url": "https://api.github.com/users/YodaLightsabr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YodaLightsabr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2021-03-08T17:01:34Z",
    "updated_at": "2021-04-05T19:25:53Z",
    "closed_at": "2021-03-08T17:03:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have read through the docs for `4x` and I haven't found a method to stop the webserver. Am I making a mistake or is there really no method to stop express? If I had this code below, what could I do to stop the webserver?\r\n```js\r\nconst express = require('express');\r\nconst app = express();\r\napp.get('/', (req, res) => {\r\n  res.send('Hello, world!');\r\n});\r\napp.listen(8080, () => {\r\n  console.log('Listening on *:8080');\r\n  setTimeout(() => {\r\n    // do something here to stop express\r\n  }, 10000);\r\n});\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4544/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4544/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4543",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4543/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4543/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4543/events",
    "html_url": "https://github.com/expressjs/express/issues/4543",
    "id": 820429495,
    "node_id": "MDU6SXNzdWU4MjA0Mjk0OTU=",
    "number": 4543,
    "title": "Feature Request: Allow middleware to handle errors thrown by async handlers",
    "user": {
      "login": "yz89122",
      "id": 24453597,
      "node_id": "MDQ6VXNlcjI0NDUzNTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/24453597?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yz89122",
      "html_url": "https://github.com/yz89122",
      "followers_url": "https://api.github.com/users/yz89122/followers",
      "following_url": "https://api.github.com/users/yz89122/following{/other_user}",
      "gists_url": "https://api.github.com/users/yz89122/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yz89122/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yz89122/subscriptions",
      "organizations_url": "https://api.github.com/users/yz89122/orgs",
      "repos_url": "https://api.github.com/users/yz89122/repos",
      "events_url": "https://api.github.com/users/yz89122/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yz89122/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-03-02T22:05:51Z",
    "updated_at": "2021-03-02T22:54:05Z",
    "closed_at": "2021-03-02T22:10:22Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Allow to catch errors in middleware in this way\r\n\r\n```javascript\r\nrouter.use(async (req, res, next) => {\r\n  try {\r\n    await next();\r\n  } catch (e) { // catch errors thrown by async handlers\r\n    res.status(500).end();\r\n    return next(e);\r\n  }\r\n});\r\n```\r\n\r\nAnd allow to wait for the handler done\r\n\r\n```javascript\r\nrouter.use(async (req, res, next) => {\r\n  const connection = connectionPool.pop();\r\n  try {\r\n    res.locals.connection = connection;\r\n    await next(); // wait for the handlers done\r\n  } finally {\r\n    connection.add(connection);\r\n  }\r\n});\r\n```\r\n\r\nThis feature can be done by [this change](https://github.com/yz89122/express/commit/7dbc6e0cc8904813429e9981684a40ceab6679e6). This change add return to pass `Promise` if the underlying middleware/handlers return them.\r\n\r\nBut this change also require middleware between the async error catcher and the thrower to be changed from\r\n\r\n```javascript\r\nrouter.use((req, res, next) => {\r\n  // do STH\r\n  next();\r\n});\r\n```\r\n\r\nto\r\n\r\n```javascript\r\nrouter.use((req, res, next) => {\r\n  // do STH\r\n  return next();\r\n});\r\n```\r\n\r\n(e.g. [this](https://github.com/yz89122/express/commit/7dbc6e0cc8904813429e9981684a40ceab6679e6#diff-653dcdfd7e9a4ff9f5a487e8e7850f73ac6a36d7ee61258556b2d15b907d6070)).\r\n\r\nAnd yes, no need to add async/await(overhead probably, and compatibility problem) to middleware if you have no need to handle them.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4543/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4543/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4542",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4542/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4542/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4542/events",
    "html_url": "https://github.com/expressjs/express/pull/4542",
    "id": 820095062,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTgzMDk2MzY5",
    "number": 4542,
    "title": "clearCookie should probably only set one header per cookie name test case",
    "user": {
      "login": "StefanWallin",
      "id": 457653,
      "node_id": "MDQ6VXNlcjQ1NzY1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/457653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/StefanWallin",
      "html_url": "https://github.com/StefanWallin",
      "followers_url": "https://api.github.com/users/StefanWallin/followers",
      "following_url": "https://api.github.com/users/StefanWallin/following{/other_user}",
      "gists_url": "https://api.github.com/users/StefanWallin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/StefanWallin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/StefanWallin/subscriptions",
      "organizations_url": "https://api.github.com/users/StefanWallin/orgs",
      "repos_url": "https://api.github.com/users/StefanWallin/repos",
      "events_url": "https://api.github.com/users/StefanWallin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/StefanWallin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 133578714,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/tests",
        "name": "tests",
        "color": "944008",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-03-02T14:55:52Z",
    "updated_at": "2022-10-06T14:16:28Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": true,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4542",
      "html_url": "https://github.com/expressjs/express/pull/4542",
      "diff_url": "https://github.com/expressjs/express/pull/4542.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4542.patch",
      "merged_at": null
    },
    "body": "While developing a session termination feature in our apps I noticed that a cookie set by our session middleware to maintain cookie expiration was kept in the response even though the clearCookie was set at a later request handler. This test case attempts to replicate this circumstances.\r\n\r\n**According to https://tools.ietf.org/html/rfc6265#section-4.1.1:**\r\n>    Servers SHOULD NOT include more than one Set-Cookie header field in\r\n   the same response with the same cookie-name.  (See Section 5.2 for\r\n   how user agents handle this case.)\r\n\r\nDo you want filtration of setCookie-headers like this case to be handled within the expressjs framework, if so I could create a PR to fix that, or is this something that should be handled by expressjs users?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4542/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4542/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4541",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4541/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4541/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4541/events",
    "html_url": "https://github.com/expressjs/express/issues/4541",
    "id": 819783595,
    "node_id": "MDU6SXNzdWU4MTk3ODM1OTU=",
    "number": 4541,
    "title": "why does my req.body numbers change?",
    "user": {
      "login": "sayantan300",
      "id": 62213554,
      "node_id": "MDQ6VXNlcjYyMjEzNTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/62213554?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sayantan300",
      "html_url": "https://github.com/sayantan300",
      "followers_url": "https://api.github.com/users/sayantan300/followers",
      "following_url": "https://api.github.com/users/sayantan300/following{/other_user}",
      "gists_url": "https://api.github.com/users/sayantan300/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sayantan300/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sayantan300/subscriptions",
      "organizations_url": "https://api.github.com/users/sayantan300/orgs",
      "repos_url": "https://api.github.com/users/sayantan300/repos",
      "events_url": "https://api.github.com/users/sayantan300/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sayantan300/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-03-02T08:37:13Z",
    "updated_at": "2021-03-02T16:34:22Z",
    "closed_at": "2021-03-02T16:34:16Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm using express `v4.17.1`\r\nHere's my router code:\r\n```js\r\nlet Bots = require(\"@models/bots.js\");\r\nlet {fetch} = require(\"rovel.js\");\r\nlet router = require(\"express\").Router();\r\nrouter.use(require(\"express\").json())\r\nrouter.get(\"/\", (req, res)=>{\r\n Bots.find(function (err, bots){\r\n  if (err) return console.error(err);\r\n  res.send(bots);\r\n })\r\n});\r\nrouter.delete(\"/:id\", (req, res)=>{\r\n Bots.deleteOne({id: req.params.id}, function (err) {\r\n  if (err) return res.send(err);\r\n  res.send(`${req.params.id} deleted`);\r\n })\r\n})\r\nrouter.post(\"/new\", (req, res)=>{\r\n console.log(req.body);\r\n /*const bot = new Bots({\r\n _id: req.body.id,\r\n owners: req.body.owners,\r\n short: req.body.short,\r\n desc: req.body.desc,\r\n verified: false,\r\n support: req.body.support,\r\n bg: req.body.bg,\r\n github: req.body.github,\r\n website: req.body.website,\r\n donate: req.body.donate,\r\n invite: req.body.invite\r\n }).save((err, bot)=>{\r\n  if(err) return res.send(err);\r\n  if(!err){ \r\n   res.send(bot);\r\n  fetch(process.env.WEBHOOK, {\r\n  method: \"POST\",\r\n  headers: {\r\n   \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify({\r\n   \"username\": \"RDL New Bot Added!\",\r\n   \"content\": `Bot <@!${bot.id}> has been added by <@!${bot.owners[0].id}>`\r\n  })\r\n });\r\n \r\n  }\r\n });*/\r\n res.send(req.body);\r\n});\r\nmodule.exports = router;\r\n```\r\n*Don't mind those db stuff, there's no problem there..*\r\n\r\n## here's what I'm posting:\r\n```js\r\n{\r\n  \"_id\": 603213294265958400,\r\n \"owners\": [{\"id\": 60290205067798124}],\r\n \"short\": \"fuck u owner\",\r\n \"desc\": \"Test\",\r\n \"verified\": false,\r\n \"support\": 602906543356379156,\r\n \"bg\": \"https://cdn.discordapp.com/attachments/775220204699385886/793450723031515168/Screenshot_20201217-2232413.png\",\r\n \"github\": \"https://github.com/rovelstars/rovel.js\",\r\n \"website\": \"https://rovelstars.ga/\",\r\n \"donate\": \"https://discord.gg/953XCpHbKF\",\r\n \"invite\": \"https://rovelstars.ga\"\r\n}\r\n```\r\n(Headers: content type is application json)\r\n\r\nAnd here's the response I'm getting:\r\n```js\r\n{\r\n  \"_id\": 603213294265958400,\r\n  \"owners\": [\r\n    {\r\n      \"id\": 60290205067798130\r\n    }\r\n  ],\r\n  \"short\": \"fuck u owner\",\r\n  \"desc\": \"Test\",\r\n  \"verified\": false,\r\n  \"support\": 602906543356379100,\r\n  \"bg\": \"https://cdn.discordapp.com/attachments/775220204699385886/793450723031515168/Screenshot_20201217-2232413.png\",\r\n  \"github\": \"https://github.com/rovelstars/rovel.js\",\r\n  \"website\": \"https://rovelstars.ga/\",\r\n  \"donate\": \"https://discord.gg/953XCpHbKF\",\r\n  \"invite\": \"https://rovelstars.ga\"\r\n}\r\n```\r\nNote that the id numbers change, and nothing else changes... Any idea what's the problem with IDs?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4541/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4541/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4540",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4540/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4540/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4540/events",
    "html_url": "https://github.com/expressjs/express/issues/4540",
    "id": 818912435,
    "node_id": "MDU6SXNzdWU4MTg5MTI0MzU=",
    "number": 4540,
    "title": "Adding SSL Authentication to Express",
    "user": {
      "login": "kaustav-aarish",
      "id": 65616588,
      "node_id": "MDQ6VXNlcjY1NjE2NTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/65616588?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kaustav-aarish",
      "html_url": "https://github.com/kaustav-aarish",
      "followers_url": "https://api.github.com/users/kaustav-aarish/followers",
      "following_url": "https://api.github.com/users/kaustav-aarish/following{/other_user}",
      "gists_url": "https://api.github.com/users/kaustav-aarish/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kaustav-aarish/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kaustav-aarish/subscriptions",
      "organizations_url": "https://api.github.com/users/kaustav-aarish/orgs",
      "repos_url": "https://api.github.com/users/kaustav-aarish/repos",
      "events_url": "https://api.github.com/users/kaustav-aarish/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kaustav-aarish/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-03-01T14:20:44Z",
    "updated_at": "2021-03-10T20:00:45Z",
    "closed_at": "2021-03-10T20:00:45Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm getting the following error:\r\n\r\n```Error: write EPROTO 140333960492168:error:10000410:SSL routines:OPENSSL_internal:SSLV3_ALERT_HANDSHAKE_FAILURE:../../third_party/boringssl/src/ssl/tls_record.cc:592:SSL alert number 40 at WriteWrap.onWriteComplete [as oncomplete] (internal/stream_base_commons.js:87:16) ```\r\n\r\nThere are many components involved, I followed [this][1] to generate all my certificates and keys, but is the usage on Express correct?\r\n\r\n```\r\nconst https = require('https')\r\nconst express = require('express');\r\nconst app = express();\r\nconst port = 3000;\r\napp.use(express.json());\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\napp.use(morgan('combined'));\r\nvar helmet = require('helmet')\r\napp.use(helmet())\r\n\r\napp.get('/endpoint', async function(req, res, next) {\r\n       res.json({ message: 'Connection has been established successfully.' })\r\n});\r\n\r\nconst sslServer = https.createServer({\r\n    key: fs.readFileSync(path.join(__dirname, 'cert', 'server-key.pem')),\r\n    cert: fs.readFileSync(path.join(__dirname, 'cert', 'server-crt.pem')),\r\n    ca: fs.readFileSync(path.join(__dirname,'cert', 'ca-crt.pem')),\r\n    requestCert: true, \r\n    rejectUnauthorized: true\r\n}, app);\r\n\r\nsslServer.listen(port, () => console.log(`Example app listening on port ${port}!`));\r\n```\r\n\r\nThanks for your help!\r\n  [1]: https://gist.github.com/pcan/e384fcad2a83e3ce20f9a4c33f4a13ae",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4540/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4540/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4539",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4539/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4539/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4539/events",
    "html_url": "https://github.com/expressjs/express/issues/4539",
    "id": 818207076,
    "node_id": "MDU6SXNzdWU4MTgyMDcwNzY=",
    "number": 4539,
    "title": "Whether the express function is an http server？",
    "user": {
      "login": "PachVerb",
      "id": 43908467,
      "node_id": "MDQ6VXNlcjQzOTA4NDY3",
      "avatar_url": "https://avatars.githubusercontent.com/u/43908467?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PachVerb",
      "html_url": "https://github.com/PachVerb",
      "followers_url": "https://api.github.com/users/PachVerb/followers",
      "following_url": "https://api.github.com/users/PachVerb/following{/other_user}",
      "gists_url": "https://api.github.com/users/PachVerb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PachVerb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PachVerb/subscriptions",
      "organizations_url": "https://api.github.com/users/PachVerb/orgs",
      "repos_url": "https://api.github.com/users/PachVerb/repos",
      "events_url": "https://api.github.com/users/PachVerb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PachVerb/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-02-28T13:31:58Z",
    "updated_at": "2021-03-01T09:56:26Z",
    "closed_at": "2021-03-01T09:56:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I want to use express as a websocket external http server, is it possible to call it\r\n\r\nMaybe so:\r\n\r\n```let express = require('express'),\r\n    WebSocket = require('ws');\r\n\r\nconst app = express();\r\n\r\napp.listen(3000, () => {\r\n    console.log('server listen oning: 3000');\r\n});\r\nconst wss = new WebSocket.Server({server: app});\r\n\r\nwss.on('connection', function(socket){\r\n    wss.send('pong');\r\n    socket.on('message', function(e){\r\n        console.log('msg: ' + e);\r\n        socket.send('pong');\r\n    });\r\n});\r\n\r\napp.use(express.static('public'));\r\n\r\n```\r\n\r\nBut the websocket handshake failed（statusCode 200）",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4539/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4539/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4538",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4538/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4538/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4538/events",
    "html_url": "https://github.com/expressjs/express/issues/4538",
    "id": 817407808,
    "node_id": "MDU6SXNzdWU4MTc0MDc4MDg=",
    "number": 4538,
    "title": "Request triager role for enyoghasim",
    "user": {
      "login": "enyoghasim",
      "id": 73113145,
      "node_id": "MDQ6VXNlcjczMTEzMTQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/73113145?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/enyoghasim",
      "html_url": "https://github.com/enyoghasim",
      "followers_url": "https://api.github.com/users/enyoghasim/followers",
      "following_url": "https://api.github.com/users/enyoghasim/following{/other_user}",
      "gists_url": "https://api.github.com/users/enyoghasim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/enyoghasim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/enyoghasim/subscriptions",
      "organizations_url": "https://api.github.com/users/enyoghasim/orgs",
      "repos_url": "https://api.github.com/users/enyoghasim/repos",
      "events_url": "https://api.github.com/users/enyoghasim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/enyoghasim/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-02-26T14:36:30Z",
    "updated_at": "2021-03-10T19:57:06Z",
    "closed_at": "2021-03-10T19:57:05Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "I have read and understood the project's Code of Conduct.\r\nI also have read and understood the process and best practices around Express triaging.\r\n\r\nI request for a triager role for the following GitHub organizations:\r\n\r\njshttp\r\npillarjs\r\nexpress",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4538/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4538/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4537",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4537/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4537/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4537/events",
    "html_url": "https://github.com/expressjs/express/issues/4537",
    "id": 814693289,
    "node_id": "MDU6SXNzdWU4MTQ2OTMyODk=",
    "number": 4537,
    "title": "Application goes offline all the time",
    "user": {
      "login": "jvherck",
      "id": 75937214,
      "node_id": "MDQ6VXNlcjc1OTM3MjE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/75937214?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jvherck",
      "html_url": "https://github.com/jvherck",
      "followers_url": "https://api.github.com/users/jvherck/followers",
      "following_url": "https://api.github.com/users/jvherck/following{/other_user}",
      "gists_url": "https://api.github.com/users/jvherck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jvherck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jvherck/subscriptions",
      "organizations_url": "https://api.github.com/users/jvherck/orgs",
      "repos_url": "https://api.github.com/users/jvherck/repos",
      "events_url": "https://api.github.com/users/jvherck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jvherck/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2021-02-23T17:48:03Z",
    "updated_at": "2021-02-26T13:51:57Z",
    "closed_at": "2021-02-23T17:54:37Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm hosting a Discord bot on replit using this module. It creates a webserver which gets pinged by uptimerobot so it doesn't go offline. However, it does go offline often, and for a long time. I'm hosting 2 other bots the same way, but they're written in python. Even the code that's used to make the webserver is the same in the python bots (keep_alive.py and keepalive() in main file) but they *never* go offline, or if they do, it's only once in 2 weeks for only a few minutes. So I guess the problem is with this express module? Can this be solved?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4537/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4537/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4536",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4536/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4536/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4536/events",
    "html_url": "https://github.com/expressjs/express/issues/4536",
    "id": 814453735,
    "node_id": "MDU6SXNzdWU4MTQ0NTM3MzU=",
    "number": 4536,
    "title": "Some fetch similarities",
    "user": {
      "login": "jimmywarting",
      "id": 1148376,
      "node_id": "MDQ6VXNlcjExNDgzNzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1148376?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimmywarting",
      "html_url": "https://github.com/jimmywarting",
      "followers_url": "https://api.github.com/users/jimmywarting/followers",
      "following_url": "https://api.github.com/users/jimmywarting/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimmywarting/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimmywarting/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimmywarting/subscriptions",
      "organizations_url": "https://api.github.com/users/jimmywarting/orgs",
      "repos_url": "https://api.github.com/users/jimmywarting/repos",
      "events_url": "https://api.github.com/users/jimmywarting/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimmywarting/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 163600,
        "node_id": "MDU6TGFiZWwxNjM2MDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false,
        "description": null
      },
      {
        "id": 572472845,
        "node_id": "MDU6TGFiZWw1NzI0NzI4NDU=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:body-parser",
        "name": "module:body-parser",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2021-02-23T13:14:18Z",
    "updated_at": "2022-07-15T10:54:59Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I was wondering if we could have a few of the methods that exist on the `window.Request.prototype` since we are all mostly familiar with working with fetch on frontend and backend (using node-fetch/undici). And maybe have it work a little bit like a service worker.\r\n\r\nnamely\r\n- Request.prototype.arrayBuffer\r\n- Request.prototype.text\r\n- Request.prototype.formData\r\n- Request.prototype.blob\r\n- Request.prototype.json\r\n\r\nAll of this returns a promise with the hole body being parsed. so you don't have to work with streams\r\n\r\nSo instead of having to do this blocking request (that don't call the next handler until it's finish\r\n```js\r\n// manual body parser\r\napp.post(path, function (req, res, next) {\r\n  const chunks = []\r\n  req.on('data', data => chunks.push(data))\r\n  req.on('end', () => {\r\n    const body = Buffer.concat(chunks)\r\n    // do something with the hole body\r\n    req.body = JSON.parse(body.toString())\r\n    next()\r\n  })\r\n}, routeHandler)\r\n// or\r\napp.use(bodyParser.json(), routeHandler)\r\n```\r\nwe could just do what is normally done in service worker & the fetch api:\r\n```js\r\napp.post(path, async function routeHandler (req, res) {\r\n  const arrayBuffer = await req.arrayBuffer()\r\n  const text = await req.text()\r\n  const blob = await req.blob()\r\n  const json = await req.json()\r\n  const formData = await req.formData()\r\n})\r\n```\r\nThe benefit of this would be that your route handler would be able to retrieve request headers first. So you can validate more quickly if a user is authenticated, if the payload is too large by looking at the content-length, what kind of content-type they are sending etc \r\n\r\nofc it is also possible to do that already but it would would require 3 \r\nhandlers and look something like: `app.post(authenticate, bodyParser.json(), handler)` \r\n\r\nI don't know so much about formData since it requires some more work/parsing and it would require some formdata package\r\n\r\nNode 15.8 introduced buffer.Blob so we also have that.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4536/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4536/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4535",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4535/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4535/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4535/events",
    "html_url": "https://github.com/expressjs/express/issues/4535",
    "id": 814421264,
    "node_id": "MDU6SXNzdWU4MTQ0MjEyNjQ=",
    "number": 4535,
    "title": "Node.js 15+ starts recommending promise based versions by default - Express 5.0 and wrapAsync",
    "user": {
      "login": "thernstig",
      "id": 30827238,
      "node_id": "MDQ6VXNlcjMwODI3MjM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/30827238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thernstig",
      "html_url": "https://github.com/thernstig",
      "followers_url": "https://api.github.com/users/thernstig/followers",
      "following_url": "https://api.github.com/users/thernstig/following{/other_user}",
      "gists_url": "https://api.github.com/users/thernstig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thernstig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thernstig/subscriptions",
      "organizations_url": "https://api.github.com/users/thernstig/orgs",
      "repos_url": "https://api.github.com/users/thernstig/repos",
      "events_url": "https://api.github.com/users/thernstig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thernstig/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578715,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTU=",
        "url": "https://api.github.com/repos/expressjs/express/labels/future",
        "name": "future",
        "color": "e102d8",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 15,
    "created_at": "2021-02-23T12:31:48Z",
    "updated_at": "2022-02-17T16:01:51Z",
    "closed_at": "2022-02-17T16:01:51Z",
    "author_association": "NONE",
    "active_lock_reason": "too heated",
    "body": "Hi!\r\n\r\nAs an example Node.js and https://nodejs.org/api/fs.html is starting to recommend promise-based versions foremost. (compare with earlier versions that has the promised based versions last: https://nodejs.org/docs/latest-v14.x/api/fs.html).\r\n\r\nExpress 5.0 has added automatic handling in routes of async/await routes that will automatically invoke the Express error handler if a an async function throws. There are current workarounds to create a `wrapAsync()` function around routes, but in bigger projects some users miss this and it's also not-so-nice-looking (and confusing for some).\r\n\r\nI am merely wondering if Express 5.0 could be released, and current items on https://github.com/expressjs/express/milestone/11 could be moved to a 6.0 release? I am very respectful of the fact that you voluntarily work on this, and these kind of questions are frowned upon. https://github.com/expressjs/express/pull/2237 was created 7 years ago now, so I at least think it should be ok to ask for this without in any way not being grateful of this project already and its release cadence.\r\n\r\nI guess what I am saying is that there are some nice things already on the main branch for Express 5.0 that works good with latest versions of Node.js 15, so a release would be amazing.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4535/reactions",
      "total_count": 36,
      "+1": 36,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4535/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4534",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4534/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4534/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4534/events",
    "html_url": "https://github.com/expressjs/express/issues/4534",
    "id": 813626894,
    "node_id": "MDU6SXNzdWU4MTM2MjY4OTQ=",
    "number": 4534,
    "title": "certain proxies break req.secure",
    "user": {
      "login": "calvinmetcalf",
      "id": 1128607,
      "node_id": "MDQ6VXNlcjExMjg2MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1128607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/calvinmetcalf",
      "html_url": "https://github.com/calvinmetcalf",
      "followers_url": "https://api.github.com/users/calvinmetcalf/followers",
      "following_url": "https://api.github.com/users/calvinmetcalf/following{/other_user}",
      "gists_url": "https://api.github.com/users/calvinmetcalf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/calvinmetcalf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/calvinmetcalf/subscriptions",
      "organizations_url": "https://api.github.com/users/calvinmetcalf/orgs",
      "repos_url": "https://api.github.com/users/calvinmetcalf/repos",
      "events_url": "https://api.github.com/users/calvinmetcalf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/calvinmetcalf/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2021-02-22T15:53:41Z",
    "updated_at": "2021-02-22T16:21:31Z",
    "closed_at": "2021-02-22T15:59:31Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "when deploying an app in google app engine using a custom domain\r\n\r\nif my app has \r\n\r\n```js\r\napp.enable('trust proxy');\r\n  app.use((req, res, next) => {\r\n\r\n    console.log('is secure?', req.secure);\r\n    console.log('proto', req.protocol);\r\n    console.log('orig url', req.originalUrl);\r\n    console.log('host', req.headers.host);\r\n    console.log('headers', req.headers);\r\n    next();\r\n  });\r\n```\r\n\r\nand i then go to https://my.host/ the logs print:\r\n\r\n```\r\n is secure? false\r\n proto http\r\n orig url /\r\n host my.host\r\n headers { host: 'my.host,\r\n   'x-forwarded-for': '<ip1>,<ip2>, <ip3>',\r\n   'x-forwarded-proto': 'http',\r\n   forwarded: 'for=\"<ip2>\";proto=http',\r\n   'cf-ipcountry': 'US',\r\n   'cf-ray': 'xxxxxxxxxxxx-IAD',\r\n   'cf-visitor': '{\"scheme\":\"https\"}',\r\n  ...\r\n```\r\nit seems like there is a cloud flare proxy in the middle somewhere here which is screwing up x-forwarded-proto causing my app to repeatedly try to redirect to the https version of the page.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4534/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4534/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4533",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4533/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4533/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4533/events",
    "html_url": "https://github.com/expressjs/express/issues/4533",
    "id": 812674041,
    "node_id": "MDU6SXNzdWU4MTI2NzQwNDE=",
    "number": 4533,
    "title": "Res.download not working filename on Chrome",
    "user": {
      "login": "NilsBaumgartner1994",
      "id": 33295329,
      "node_id": "MDQ6VXNlcjMzMjk1MzI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/33295329?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NilsBaumgartner1994",
      "html_url": "https://github.com/NilsBaumgartner1994",
      "followers_url": "https://api.github.com/users/NilsBaumgartner1994/followers",
      "following_url": "https://api.github.com/users/NilsBaumgartner1994/following{/other_user}",
      "gists_url": "https://api.github.com/users/NilsBaumgartner1994/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NilsBaumgartner1994/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NilsBaumgartner1994/subscriptions",
      "organizations_url": "https://api.github.com/users/NilsBaumgartner1994/orgs",
      "repos_url": "https://api.github.com/users/NilsBaumgartner1994/repos",
      "events_url": "https://api.github.com/users/NilsBaumgartner1994/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NilsBaumgartner1994/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2021-02-20T18:02:41Z",
    "updated_at": "2021-02-20T18:36:21Z",
    "closed_at": "2021-02-20T18:36:04Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "https://expressjs.com/en/api.html#res.download\r\n\r\nAs the doc states, by giving a filename it should use it on the download.\r\nThis works fine in Firefox but not with Chrome.\r\n\r\nI'm using express 4.17.1\r\nHeaders are getting set correctly by express ('Content-Disposition')",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4533/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4533/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4532",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4532/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4532/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4532/events",
    "html_url": "https://github.com/expressjs/express/issues/4532",
    "id": 812387500,
    "node_id": "MDU6SXNzdWU4MTIzODc1MDA=",
    "number": 4532,
    "title": "HTTP Performance regression some release after Node.js 12.16.1 using express",
    "user": {
      "login": "schamberg97",
      "id": 50446906,
      "node_id": "MDQ6VXNlcjUwNDQ2OTA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/50446906?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/schamberg97",
      "html_url": "https://github.com/schamberg97",
      "followers_url": "https://api.github.com/users/schamberg97/followers",
      "following_url": "https://api.github.com/users/schamberg97/following{/other_user}",
      "gists_url": "https://api.github.com/users/schamberg97/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/schamberg97/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/schamberg97/subscriptions",
      "organizations_url": "https://api.github.com/users/schamberg97/orgs",
      "repos_url": "https://api.github.com/users/schamberg97/repos",
      "events_url": "https://api.github.com/users/schamberg97/events{/privacy}",
      "received_events_url": "https://api.github.com/users/schamberg97/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 11,
    "created_at": "2021-02-19T22:08:40Z",
    "updated_at": "2021-05-27T11:31:59Z",
    "closed_at": "2021-05-27T11:31:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hey there! I have noticed a bit of a weird performance regression when testing express with wrk on macOS Big Sur.\r\n\r\nI have used the following script:\r\n\r\n```\r\n'use strict'\r\n\r\nvar express = require('express')\r\n\r\nvar app = express()\r\n\r\napp.set('etag', false)\r\n\r\napp.get('/hi', function (req, res) {\r\n  res.send('')\r\n})\r\n\r\napp.listen(3005)\r\n```\r\n\r\nWhenever I have tested this script under node.js 12.16.1, wrk showed that express is able to serve more than ~27000 requests per second. But when I switched to the latest node.js 12 or 14, I have noticed that express is only able to serve around 13000 requests per second. \r\n\r\nTo check whether it is node.js issue, I have tried another script:\r\n\r\n```\r\n'use strict'\r\n\r\nvar http = require('http')\r\n\r\nhttp.createServer(function (req, res) {\r\n  if (req.url === '/hi/') {\r\n    res.writeHead(200, { 'Content-Type': 'text/html' })\r\n    return res.end('', 'utf-8')\r\n  }\r\n  res.writeHead(404, { 'Content-Type': 'text/html' })\r\n  return res.end('Not Found', 'utf-8')\r\n}).listen(3000)\r\n```\r\n\r\nNonetheless, I haven't managed to find any notable difference. I firmly believe it has to be some sort of node.js issue (could be related to their reworking of http to fix some major bugs, but can't find PR yet). However, since the issue doesn't show with native `http` module, I thought it'd be prudent to file it with express community first. ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4532/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4532/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4531",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4531/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4531/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4531/events",
    "html_url": "https://github.com/expressjs/express/issues/4531",
    "id": 812337464,
    "node_id": "MDU6SXNzdWU4MTIzMzc0NjQ=",
    "number": 4531,
    "title": "Add Examples on \"Adding API Based CMS Capability\" ",
    "user": {
      "login": "moluwole",
      "id": 23439463,
      "node_id": "MDQ6VXNlcjIzNDM5NDYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/23439463?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/moluwole",
      "html_url": "https://github.com/moluwole",
      "followers_url": "https://api.github.com/users/moluwole/followers",
      "following_url": "https://api.github.com/users/moluwole/following{/other_user}",
      "gists_url": "https://api.github.com/users/moluwole/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/moluwole/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/moluwole/subscriptions",
      "organizations_url": "https://api.github.com/users/moluwole/orgs",
      "repos_url": "https://api.github.com/users/moluwole/repos",
      "events_url": "https://api.github.com/users/moluwole/events{/privacy}",
      "received_events_url": "https://api.github.com/users/moluwole/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-02-19T20:50:10Z",
    "updated_at": "2021-12-17T21:06:38Z",
    "closed_at": "2021-12-17T21:06:38Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I would like to add this project: (https://github.com/ButterCMS/nodejs-express-example) to the Express JS example folder. It shows an example on how to add HeadLess CMS capability to an ExpressJS application. ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4531/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4531/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4530",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4530/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4530/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4530/events",
    "html_url": "https://github.com/expressjs/express/issues/4530",
    "id": 812142178,
    "node_id": "MDU6SXNzdWU4MTIxNDIxNzg=",
    "number": 4530,
    "title": "Piping a decrypted stream to browser results in \"Caution: Request is not finished yet\"",
    "user": {
      "login": "ddombrowsky",
      "id": 1651785,
      "node_id": "MDQ6VXNlcjE2NTE3ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1651785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ddombrowsky",
      "html_url": "https://github.com/ddombrowsky",
      "followers_url": "https://api.github.com/users/ddombrowsky/followers",
      "following_url": "https://api.github.com/users/ddombrowsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ddombrowsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ddombrowsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ddombrowsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ddombrowsky/orgs",
      "repos_url": "https://api.github.com/users/ddombrowsky/repos",
      "events_url": "https://api.github.com/users/ddombrowsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ddombrowsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-02-19T16:03:06Z",
    "updated_at": "2021-02-19T16:38:50Z",
    "closed_at": "2021-02-19T16:38:34Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm not sure if this is a bug in express, or electron, or chromium, or if it's a bug at all.  But I want to record it in case it helps anyone else.\r\n\r\nI had an implementation of a web sever for YEARS that would decrypt small files using the `pipe` method, e.g.:\r\n\r\n```\r\n-           // Note that here we do not know the content-length,\r\n-           // so this will automatically set Transfer-Encoding to 'chunked'\r\n-           input.pipe(decipher).pipe(res);\r\n```\r\n\r\nThis worked fine for a long time.  After upgrading node, All of a sudden, the MP3 files would start to back up in my electron app:\r\n\r\n![Selection_002](https://user-images.githubusercontent.com/1651785/108528521-82853080-72a1-11eb-9d2b-bd5d45324734.png)\r\n\r\nAfter 6 \"pending\" operations, chromium will stop making requests until the queue is emptied.  This locked up the whole works.\r\n\r\nI simply COULD NOT find a way to get `express` to tell chromium that the request had been completed.  I ended up re-implementing the decryption, going from one simple line of code to about 40, that doesn't use the flowing mode of the input streams and buffers the data in memory, sending it all in one chunk once the decryption is complete:\r\n\r\n```\r\n+            decipher.on('end', () => {\r\n+                let allDataBuf = Buffer.concat(allData);\r\n+                res.send(allDataBuf);\r\n+            });\r\n```\r\n\r\nThis way there's a content-length, and all things operate as normal.\r\n\r\nSo is this a bug in express?  electron?  chromium?  Or is this not a bug, and can you *never* respond to a non-streaming HTTP request with a pipe?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4530/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4530/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4529",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4529/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4529/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4529/events",
    "html_url": "https://github.com/expressjs/express/issues/4529",
    "id": 810836219,
    "node_id": "MDU6SXNzdWU4MTA4MzYyMTk=",
    "number": 4529,
    "title": "Router only response first route if using dependency injection on router",
    "user": {
      "login": "orzinc",
      "id": 24873536,
      "node_id": "MDQ6VXNlcjI0ODczNTM2",
      "avatar_url": "https://avatars.githubusercontent.com/u/24873536?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/orzinc",
      "html_url": "https://github.com/orzinc",
      "followers_url": "https://api.github.com/users/orzinc/followers",
      "following_url": "https://api.github.com/users/orzinc/following{/other_user}",
      "gists_url": "https://api.github.com/users/orzinc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/orzinc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/orzinc/subscriptions",
      "organizations_url": "https://api.github.com/users/orzinc/orgs",
      "repos_url": "https://api.github.com/users/orzinc/repos",
      "events_url": "https://api.github.com/users/orzinc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/orzinc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-02-18T07:23:22Z",
    "updated_at": "2021-02-18T08:06:49Z",
    "closed_at": "2021-02-18T07:36:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This is related to #4528 \r\n\r\nFull codes are as per following:\r\n\r\n<details>\r\n<summary>/index.js</summary>\r\n\r\n```js\r\nconst express = require('express');\r\nconst app = express();\r\n\r\napp.use('/buy',require('./routes/buy'))\r\napp.use('/sell',require('./routes/sell'))\r\n\r\napp.listen(5000,()=>{\r\n  console.log('Server start')\r\n})\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>/routes/buy.js</summary>\r\n\r\n```js\r\nconst express = require('express')\r\nconst router = express.Router()\r\nconst buyController = require('../controller/buy.js')\r\n\r\nrouter.use('/:id/log', require('./log')(router, 'BuyModel'))\r\nrouter.route('/').get(buyController.fetchBuys)\r\n\r\nmodule.exports = router\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>/routes/sell.js</summary>\r\n\r\n```js\r\nconst express = require('express')\r\nconst router = express.Router()\r\n\r\nrouter.use('/:id/log', require('./log')(router, 'SaleModel'))\r\n\r\nmodule.exports = router\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>/routes/log.js</summary>\r\n\r\n```js\r\nconst logController = require('../controller/log')\r\n\r\nmodule.exports = function(router, model){\r\n  router.route('/')\r\n    .get(logController.fetchLogs(model))\r\n  return router\r\n}\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>/controller/log.js</summary>\r\n\r\n```js\r\nexports.fetchLogs = model => (req, res, next) => {\r\n  console.log('fetch logs');\r\n  console.log('base_url:', req.baseUrl);\r\n  console.log('...');\r\n\r\n  return res.status(200).send('done')\r\n}\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>/controller/buy.js</summary>\r\n\r\n```js\r\nexports.fetchBuys = (req, res, next) => {\r\n  console.log('base_url:', req.baseUrl);\r\n  console.log('result: fetch buys');\r\n  console.log('...')\r\n  res.status(200).send()\r\n}\r\n\r\n```\r\n</details>\r\n\r\n---\r\n\r\nCurrent code consoles:\r\n\r\n**GET: /buy**\r\nfetch logs\r\nbase_url: /buy\r\n\r\n**GET: /buy/123/log**\r\nfetch logs\r\nbase_url: /buy/123/log\r\n\r\n---\r\n\r\nWhat I hope is:\r\n\r\n**GET: /buy**\r\nfetch buys\r\nbase_url: /buy\r\n\r\n**GET: /buy/123/log**\r\nfetch logs\r\nbase_url: /buy/123/log\r\n\r\n---\r\n\r\nIf I reverse the route sequence in /routes/buy.js like following\r\n\r\n```js\r\nrouter.route('/').get(buyController.fetchBuys)\r\nrouter.use('/:id/log', require('./log')(router, 'BuyModel'))\r\n```\r\n\r\n**GET: /buy**\r\nfetch buys\r\nbase_url: /buy\r\n\r\n**GET: /buy/123/log**\r\nfetch buys\r\nbase_url: /buy/123/log\r\n\r\n---\r\n\r\nWould like to know how can I make it work if I still want to use dependency injection in router",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4529/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4529/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4528",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4528/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4528/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4528/events",
    "html_url": "https://github.com/expressjs/express/issues/4528",
    "id": 807665705,
    "node_id": "MDU6SXNzdWU4MDc2NjU3MDU=",
    "number": 4528,
    "title": "Passed in different variables through middle-wear router, but always comes out the same result by different URLs",
    "user": {
      "login": "orzinc",
      "id": 24873536,
      "node_id": "MDQ6VXNlcjI0ODczNTM2",
      "avatar_url": "https://avatars.githubusercontent.com/u/24873536?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/orzinc",
      "html_url": "https://github.com/orzinc",
      "followers_url": "https://api.github.com/users/orzinc/followers",
      "following_url": "https://api.github.com/users/orzinc/following{/other_user}",
      "gists_url": "https://api.github.com/users/orzinc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/orzinc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/orzinc/subscriptions",
      "organizations_url": "https://api.github.com/users/orzinc/orgs",
      "repos_url": "https://api.github.com/users/orzinc/repos",
      "events_url": "https://api.github.com/users/orzinc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/orzinc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2021-02-13T03:33:56Z",
    "updated_at": "2021-02-18T08:09:54Z",
    "closed_at": "2021-02-18T08:09:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Express version: 4.17.1\r\n\r\n---\r\nI am planning to access following two URLs, and trying to process **2 URLs** with **one log controller** through **a log router**\r\n- /buy/:id/log\r\n- /sale/:id/log    \r\n\r\nPreviously, the log controller was linked with 'buy' and 'sell' router files, and works fine.\r\nAfter adding log router file as a middle-wear, result always shows same result, no matter which URL was used. \r\n\r\nI dont know if it is **Express error, or JS error**\r\n\r\n--------\r\n\r\n\r\nCode concept: \r\n1. route('/buy') or route('/sell')\r\n2. route('/:id/log') and pass in BuyModel / SellModel\r\n3. Process request\r\n\r\n----\r\n**Simplified code:**\r\n\r\nIn index.js\r\n```\r\napp.use('/buy', require('/routes/buy.js'))\r\napp.use('/sell', require('/routes/sell.js'))\r\n```\r\n\r\nIn 'buy.js' router file:\r\n```\r\nrouter.use('/:id/log', require('./log.js')(BuyModel))\r\n```\r\n\r\nIn 'sell.js' router file:\r\n```\r\nrouter.use('/:id/log', require('./log.js')(SellModel))\r\n```\r\n\r\nIn 'log.js' router file:\r\n```\r\nmodule.exports = function(model){\r\n  router.route('/')\r\n    .get(fetchLogs(model))\r\n  return router\r\n}\r\n```\r\n\r\nIn 'log' controller file\r\n```\r\nexports.fetchLogs = model => (req, res) => {\r\n  console.log ('model', model)\r\n  console.log ('base url', req.baseUrl)\r\n}\r\n```\r\n---\r\n\r\nBase url is correct, follows the right path, while result always show BuyModel\r\nSuspecting if due to buy.js and sell.js are pre-loaded and model param was replaced.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4528/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4528/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  }
]