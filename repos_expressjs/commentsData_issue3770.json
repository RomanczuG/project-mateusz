[
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/432343878",
    "html_url": "https://github.com/expressjs/express/pull/3770#issuecomment-432343878",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/3770",
    "id": 432343878,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjM0Mzg3OA==",
    "user": {
      "login": "wesleytodd",
      "id": 1027776,
      "node_id": "MDQ6VXNlcjEwMjc3NzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1027776?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesleytodd",
      "html_url": "https://github.com/wesleytodd",
      "followers_url": "https://api.github.com/users/wesleytodd/followers",
      "following_url": "https://api.github.com/users/wesleytodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesleytodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesleytodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesleytodd/subscriptions",
      "organizations_url": "https://api.github.com/users/wesleytodd/orgs",
      "repos_url": "https://api.github.com/users/wesleytodd/repos",
      "events_url": "https://api.github.com/users/wesleytodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesleytodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-23T17:32:24Z",
    "updated_at": "2018-10-23T17:32:24Z",
    "author_association": "MEMBER",
    "body": "Hey @BigFax, thanks for the contribution! While interesting, I think we had wanted to move away from the \"magic strings\".  I think the feature you want seems great, so maybe if we could think of an api to achieve this without the magic string `last`?\r\n\r\nAlso, I would look at opening this PR against the router project, as it is where this would land in the 5.x branch.  https://github.com/pillarjs/router/\r\n\r\nNote: I cannot find the specific issue where \"magic strings\" were discussed.  So feel free to shoot me down if others disagree.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/432343878/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/432348524",
    "html_url": "https://github.com/expressjs/express/pull/3770#issuecomment-432348524",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/3770",
    "id": 432348524,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjM0ODUyNA==",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-23T17:45:14Z",
    "updated_at": "2018-10-23T17:45:14Z",
    "author_association": "MEMBER",
    "body": "I don't know the discussion either, but I recall the same thing. The main annoying danger is that most people do like `doThing((err) => { if (err) return next(err); ... }` so random things are passed in as the argument, causing potential extremely hard to debug problem if it gave a string that matched a magic one.\r\n\r\nThat said, I there there is a more general issue with this solution, in that is is not general enough. For example I can 100% forsee a follow up request if this lands that person x needs it to jump to the 2nd to last middleware, not the last one.\r\n\r\nI was reading your SO question and I think I know a workable solution based on your comments. I don't have a SO account to respond there and don't want to mix that into the conversation in this PR. You're welcome to open a new issue with the full background to explore that if you like.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/432348524/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/432730483",
    "html_url": "https://github.com/expressjs/express/pull/3770#issuecomment-432730483",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/3770",
    "id": 432730483,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjczMDQ4Mw==",
    "user": {
      "login": "BigFax",
      "id": 1742288,
      "node_id": "MDQ6VXNlcjE3NDIyODg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1742288?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BigFax",
      "html_url": "https://github.com/BigFax",
      "followers_url": "https://api.github.com/users/BigFax/followers",
      "following_url": "https://api.github.com/users/BigFax/following{/other_user}",
      "gists_url": "https://api.github.com/users/BigFax/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BigFax/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BigFax/subscriptions",
      "organizations_url": "https://api.github.com/users/BigFax/orgs",
      "repos_url": "https://api.github.com/users/BigFax/repos",
      "events_url": "https://api.github.com/users/BigFax/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BigFax/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-24T16:30:22Z",
    "updated_at": "2018-10-24T16:37:00Z",
    "author_association": "NONE",
    "body": "I proposed a new \"magic string\" because it seemed to me to stick with the vision of the project and the normal behavior of the `next()` function (as 'route' and 'router' already existed). Now, in my personal opinion, \"magic string\" is not a good thing and should be removed from the `next()` function. I would prefer a function `next()` without parameter if it is not an error. I think it would be more logic and less confusing. @wesleytodd Do you think of a particular way to implement an API for this issue ? \r\n\r\n@dougwilson When i was thinking to call `next('last');`, it is more to end the route that to call a specific middleware. When a route ends, i think that the expected behavior is often to end the request by doing the render. In my understanding of Express, the render is made mostly in the last route middleware if everything goes as planned. So jump all middlewares to arrive to the last one in the goal to render the \"normal\" response but with error messages about where it broke was my thought. I think it's a common behavior, which is less the case than jumping from specific number of middleware (which can still be achieved with `next('route')` if really need it ? Even if it duplicate routes). It's my point of view, but maybe my understanding of things is not right here.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/432730483/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/432734678",
    "html_url": "https://github.com/expressjs/express/pull/3770#issuecomment-432734678",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/3770",
    "id": 432734678,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjczNDY3OA==",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-24T16:42:20Z",
    "updated_at": "2018-10-24T16:42:20Z",
    "author_association": "MEMBER",
    "body": "> So jump all middlewares to arrive to the last one in the goal to render the \"normal\" response but with error messages about where it broke was my thought. I think it's a common behavior, which is less the case than jumping from specific number of middleware. It's my point of view, but maybe my understanding of things is not right here.\r\n\r\nRight, that's the problem: you're just thinking about _your_ specific layout. Express makes no such requirement and you can easily have multiple handlers that do rendering based on perhaps what type of user was loaded for example. This is the type of thing someone who is already splitting up everything into separate middlewares is going to do, which is the use-case you're presenting. Just as a simple example of two renders at the end of a route:\r\n```js\r\napp.get('/thing', [...],\r\n  (req, res, next) => { if (!req.user.isAdmin()) return next(); res.render(...) },\r\n  (req, res, next) => { res.render(...) }\r\n)\r\n```\r\n\r\nTypically the `if (...)` is wrapped using a helper, like so:\r\n```js\r\nconst ifUserIsAdmin = (handler) =>\r\n  (req, res, next) => { if (!req.user.isAdmin()) return next() else handler(req, res, next) }\r\napp.get('/thing', [...],\r\n  ifUserIsAdmin((req, res, next) => res.render(...) }),\r\n  (req, res, next) => res.render(...) }\r\n)\r\n```\r\n\r\nThe other thing is just a functional issue with the PR itself, which is that it doesn't work at all in the common case of handling a route-specific error handler on the end of your route (because even your rendering handler may throw an error). Example:\r\n```\r\napp.get('/thing', [...], (req, res, next) => res.render(...), (err, req, res, next) => ...)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/432734678/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/436593800",
    "html_url": "https://github.com/expressjs/express/pull/3770#issuecomment-436593800",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/3770",
    "id": 436593800,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjU5MzgwMA==",
    "user": {
      "login": "BigFax",
      "id": 1742288,
      "node_id": "MDQ6VXNlcjE3NDIyODg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1742288?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BigFax",
      "html_url": "https://github.com/BigFax",
      "followers_url": "https://api.github.com/users/BigFax/followers",
      "following_url": "https://api.github.com/users/BigFax/following{/other_user}",
      "gists_url": "https://api.github.com/users/BigFax/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BigFax/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BigFax/subscriptions",
      "organizations_url": "https://api.github.com/users/BigFax/orgs",
      "repos_url": "https://api.github.com/users/BigFax/repos",
      "events_url": "https://api.github.com/users/BigFax/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BigFax/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-07T11:29:13Z",
    "updated_at": "2018-11-07T11:29:13Z",
    "author_association": "NONE",
    "body": "I got your point. \r\n\r\nTo me, `next('last')` was like `next('route')`, a way to manage routing cycle. In your first example, this is indeed one way of doing rendering. In this case, `next('last')` doesn't make sense. Now, as you said yourself, Express makes no such requirement, so you can totally manage rendering with a custom function where `next('last')` would be great, no ? This is the same for `next('route')` and `next('router')`, it depends of your routing organization and sometimes it doesn't make sense to use them. In fact, i think that `next('last')` is one way to help to manage routing without the need to put \"if\" conditions in each middleware (as i mentionned in case of errors, but also in case of roles check...). \r\n\r\nAbout the PR issue, you are right. One fix could be : \r\n\r\n```\r\n// bypass middleware to last layer\r\nif (err && err === 'last' && idx < stack.length) {\r\n  for (let i = stack.length - 1; i > idx; i--) {\r\n    if (stack[i].handle.length < 4) {\r\n      idx = i;\r\n      break;\r\n    }\r\n  }\r\n  return stack[idx++].handle_request(req, res, next);\r\n}\r\n```\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/436593800/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/522072773",
    "html_url": "https://github.com/expressjs/express/pull/3770#issuecomment-522072773",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/3770",
    "id": 522072773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjA3Mjc3Mw==",
    "user": {
      "login": "Pymossy",
      "id": 5729248,
      "node_id": "MDQ6VXNlcjU3MjkyNDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5729248?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Pymossy",
      "html_url": "https://github.com/Pymossy",
      "followers_url": "https://api.github.com/users/Pymossy/followers",
      "following_url": "https://api.github.com/users/Pymossy/following{/other_user}",
      "gists_url": "https://api.github.com/users/Pymossy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Pymossy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Pymossy/subscriptions",
      "organizations_url": "https://api.github.com/users/Pymossy/orgs",
      "repos_url": "https://api.github.com/users/Pymossy/repos",
      "events_url": "https://api.github.com/users/Pymossy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Pymossy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-16T16:37:46Z",
    "updated_at": "2019-08-16T16:37:46Z",
    "author_association": "NONE",
    "body": "Hi,\r\n\r\nI think we could rid of \"magic string\" and pass to `next` function another function like:\r\n`\r\nconst checking = () => {\r\n    return 'route'; // or return -1 to skip to the final\r\n}\r\n`\r\n\r\nand in `next` function we could do this:\r\n\r\n`\r\nif(typeof err === 'function'){\r\n      err = err();\r\n}\r\n`",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/522072773/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/522082656",
    "html_url": "https://github.com/expressjs/express/pull/3770#issuecomment-522082656",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/3770",
    "id": 522082656,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjA4MjY1Ng==",
    "user": {
      "login": "wesleytodd",
      "id": 1027776,
      "node_id": "MDQ6VXNlcjEwMjc3NzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1027776?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesleytodd",
      "html_url": "https://github.com/wesleytodd",
      "followers_url": "https://api.github.com/users/wesleytodd/followers",
      "following_url": "https://api.github.com/users/wesleytodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesleytodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesleytodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesleytodd/subscriptions",
      "organizations_url": "https://api.github.com/users/wesleytodd/orgs",
      "repos_url": "https://api.github.com/users/wesleytodd/repos",
      "events_url": "https://api.github.com/users/wesleytodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesleytodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-16T17:09:57Z",
    "updated_at": "2019-08-16T17:09:57Z",
    "author_association": "MEMBER",
    "body": "This is a bit of an older issue, but I think an even better api would be something like:\r\n\r\n- `next.router()`\r\n- `next.route()`\r\n- `next.last()`\r\n\r\nIf we move forward with this I think that would be the api which would get my vote.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/522082656/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/670719352",
    "html_url": "https://github.com/expressjs/express/pull/3770#issuecomment-670719352",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/3770",
    "id": 670719352,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MDcxOTM1Mg==",
    "user": {
      "login": "bpernick",
      "id": 57197898,
      "node_id": "MDQ6VXNlcjU3MTk3ODk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/57197898?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bpernick",
      "html_url": "https://github.com/bpernick",
      "followers_url": "https://api.github.com/users/bpernick/followers",
      "following_url": "https://api.github.com/users/bpernick/following{/other_user}",
      "gists_url": "https://api.github.com/users/bpernick/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bpernick/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bpernick/subscriptions",
      "organizations_url": "https://api.github.com/users/bpernick/orgs",
      "repos_url": "https://api.github.com/users/bpernick/repos",
      "events_url": "https://api.github.com/users/bpernick/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bpernick/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-07T21:25:07Z",
    "updated_at": "2020-08-07T21:34:50Z",
    "author_association": "NONE",
    "body": "@BigFax @dougwilson what's the status on this? Is it still under consideration? I saw it needed tests and would be happy to help with that if appropriate!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/670719352/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/670934497",
    "html_url": "https://github.com/expressjs/express/pull/3770#issuecomment-670934497",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/3770",
    "id": 670934497,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MDkzNDQ5Nw==",
    "user": {
      "login": "BigFax",
      "id": 1742288,
      "node_id": "MDQ6VXNlcjE3NDIyODg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1742288?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BigFax",
      "html_url": "https://github.com/BigFax",
      "followers_url": "https://api.github.com/users/BigFax/followers",
      "following_url": "https://api.github.com/users/BigFax/following{/other_user}",
      "gists_url": "https://api.github.com/users/BigFax/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BigFax/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BigFax/subscriptions",
      "organizations_url": "https://api.github.com/users/BigFax/orgs",
      "repos_url": "https://api.github.com/users/BigFax/repos",
      "events_url": "https://api.github.com/users/BigFax/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BigFax/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-08T14:20:14Z",
    "updated_at": "2020-08-08T14:20:14Z",
    "author_association": "NONE",
    "body": "@bpernick I don't know. I didn't follow this subject since a long time. I still think that if magic strings are kept, `next('last')` make sense, but that magic strings should be replaced by another API solution as proposed above.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/670934497/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/861344237",
    "html_url": "https://github.com/expressjs/express/pull/3770#issuecomment-861344237",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/3770",
    "id": 861344237,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MTM0NDIzNw==",
    "user": {
      "login": "tarique1988",
      "id": 825192,
      "node_id": "MDQ6VXNlcjgyNTE5Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/825192?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tarique1988",
      "html_url": "https://github.com/tarique1988",
      "followers_url": "https://api.github.com/users/tarique1988/followers",
      "following_url": "https://api.github.com/users/tarique1988/following{/other_user}",
      "gists_url": "https://api.github.com/users/tarique1988/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tarique1988/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tarique1988/subscriptions",
      "organizations_url": "https://api.github.com/users/tarique1988/orgs",
      "repos_url": "https://api.github.com/users/tarique1988/repos",
      "events_url": "https://api.github.com/users/tarique1988/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tarique1988/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-15T09:30:43Z",
    "updated_at": "2021-06-15T09:30:43Z",
    "author_association": "NONE",
    "body": "> This is a bit of an older issue, but I think an even better api would be something like:\r\n> \r\n> * `next.router()`\r\n> * `next.route()`\r\n> * `next.last()`\r\n> \r\n> If we move forward with this I think that would be the api which would get my vote.\r\n\r\nMost of my current work requires building APIs with express and I see how this can be useful to me as a developer. But I believe this idea would lead to bad design choices when implementing it. Double edged sword imo. If at all it is acceptable, then the API makes more sense than the magic string.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/861344237/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]