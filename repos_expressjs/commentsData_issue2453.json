[
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/64932951",
    "html_url": "https://github.com/expressjs/express/pull/2453#issuecomment-64932951",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2453",
    "id": 64932951,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTMyOTUx",
    "user": {
      "login": "izaakschroeder",
      "id": 206921,
      "node_id": "MDQ6VXNlcjIwNjkyMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/206921?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/izaakschroeder",
      "html_url": "https://github.com/izaakschroeder",
      "followers_url": "https://api.github.com/users/izaakschroeder/followers",
      "following_url": "https://api.github.com/users/izaakschroeder/following{/other_user}",
      "gists_url": "https://api.github.com/users/izaakschroeder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/izaakschroeder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/izaakschroeder/subscriptions",
      "organizations_url": "https://api.github.com/users/izaakschroeder/orgs",
      "repos_url": "https://api.github.com/users/izaakschroeder/repos",
      "events_url": "https://api.github.com/users/izaakschroeder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/izaakschroeder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-28T22:48:10Z",
    "updated_at": "2014-11-28T23:27:47Z",
    "author_association": "NONE",
    "body": "Aligned with: https://github.com/pillarjs/router/pull/7 for express 5.0.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/64932951/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/64935894",
    "html_url": "https://github.com/expressjs/express/pull/2453#issuecomment-64935894",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2453",
    "id": 64935894,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTM1ODk0",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-29T00:15:08Z",
    "updated_at": "2014-11-29T00:15:08Z",
    "author_association": "MEMBER",
    "body": "Thank you for the PR! If you don't mind, you can add tests, but I can always delay the merge while I add them.\n\nIn addition, the layer is not an abstraction we really want to leak. Can you provide the exact feature you need this change for and not a hypothetical use case?\n\nAlso, please make sure req.layer exists only for that exact invocation and make sure it gets cleaned up after the router has exited as well as well as after each layer is executed.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/64935894/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/65039097",
    "html_url": "https://github.com/expressjs/express/pull/2453#issuecomment-65039097",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2453",
    "id": 65039097,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDM5MDk3",
    "user": {
      "login": "izaakschroeder",
      "id": 206921,
      "node_id": "MDQ6VXNlcjIwNjkyMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/206921?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/izaakschroeder",
      "html_url": "https://github.com/izaakschroeder",
      "followers_url": "https://api.github.com/users/izaakschroeder/followers",
      "following_url": "https://api.github.com/users/izaakschroeder/following{/other_user}",
      "gists_url": "https://api.github.com/users/izaakschroeder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/izaakschroeder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/izaakschroeder/subscriptions",
      "organizations_url": "https://api.github.com/users/izaakschroeder/orgs",
      "repos_url": "https://api.github.com/users/izaakschroeder/repos",
      "events_url": "https://api.github.com/users/izaakschroeder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/izaakschroeder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-01T09:30:47Z",
    "updated_at": "2014-12-01T09:30:56Z",
    "author_association": "NONE",
    "body": "@dougwilson let me know if you need anything else :beers: \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/65039097/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/65298871",
    "html_url": "https://github.com/expressjs/express/pull/2453#issuecomment-65298871",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2453",
    "id": 65298871,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Mjk4ODcx",
    "user": {
      "login": "izaakschroeder",
      "id": 206921,
      "node_id": "MDQ6VXNlcjIwNjkyMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/206921?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/izaakschroeder",
      "html_url": "https://github.com/izaakschroeder",
      "followers_url": "https://api.github.com/users/izaakschroeder/followers",
      "following_url": "https://api.github.com/users/izaakschroeder/following{/other_user}",
      "gists_url": "https://api.github.com/users/izaakschroeder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/izaakschroeder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/izaakschroeder/subscriptions",
      "organizations_url": "https://api.github.com/users/izaakschroeder/orgs",
      "repos_url": "https://api.github.com/users/izaakschroeder/repos",
      "events_url": "https://api.github.com/users/izaakschroeder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/izaakschroeder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-02T20:30:18Z",
    "updated_at": "2014-12-02T20:30:30Z",
    "author_association": "NONE",
    "body": "@dougwilson when and in what release can we expect to land this in?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/65298871/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/65302805",
    "html_url": "https://github.com/expressjs/express/pull/2453#issuecomment-65302805",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2453",
    "id": 65302805,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzAyODA1",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-02T20:55:44Z",
    "updated_at": "2014-12-02T20:55:44Z",
    "author_association": "MEMBER",
    "body": "I'm not 100% sure just yet. I'm trying to tread lightly, because as soon as we introduce this, it's hard to ever go back or even change how our internal `Layer` class works. I'm giving it time to sink in.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/65302805/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/65305829",
    "html_url": "https://github.com/expressjs/express/pull/2453#issuecomment-65305829",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2453",
    "id": 65305829,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzA1ODI5",
    "user": {
      "login": "izaakschroeder",
      "id": 206921,
      "node_id": "MDQ6VXNlcjIwNjkyMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/206921?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/izaakschroeder",
      "html_url": "https://github.com/izaakschroeder",
      "followers_url": "https://api.github.com/users/izaakschroeder/followers",
      "following_url": "https://api.github.com/users/izaakschroeder/following{/other_user}",
      "gists_url": "https://api.github.com/users/izaakschroeder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/izaakschroeder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/izaakschroeder/subscriptions",
      "organizations_url": "https://api.github.com/users/izaakschroeder/orgs",
      "repos_url": "https://api.github.com/users/izaakschroeder/repos",
      "events_url": "https://api.github.com/users/izaakschroeder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/izaakschroeder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-02T21:15:14Z",
    "updated_at": "2014-12-02T21:16:51Z",
    "author_association": "NONE",
    "body": "I would be fine to refactor this into some kind of metadata object that hides the fact it's a layer; e.g. \n\n``` javascript\nreq.routing = {\n    handle: layer.handle,\n    route: myroute,\n    // other metadata here\n};\n```\n\nwhere `req.routing` is specific to the router being used. This would also provide a semi-standard way for other routers to expose information to the requests.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/65305829/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/65306980",
    "html_url": "https://github.com/expressjs/express/pull/2453#issuecomment-65306980",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2453",
    "id": 65306980,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzA2OTgw",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-02T21:22:55Z",
    "updated_at": "2014-12-02T21:22:55Z",
    "author_association": "MEMBER",
    "body": "Perhaps, but my biggest concern is that once people start using your module, you may find that `req.layer`/whatever doesn't hold the `handle` value you expected, because they, say, wrapped your middleware in something else (perhaps to support `zones` or `domains`, promises, or what-have-you), which is fairly common.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/65306980/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/65308076",
    "html_url": "https://github.com/expressjs/express/pull/2453#issuecomment-65308076",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2453",
    "id": 65308076,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzA4MDc2",
    "user": {
      "login": "izaakschroeder",
      "id": 206921,
      "node_id": "MDQ6VXNlcjIwNjkyMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/206921?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/izaakschroeder",
      "html_url": "https://github.com/izaakschroeder",
      "followers_url": "https://api.github.com/users/izaakschroeder/followers",
      "following_url": "https://api.github.com/users/izaakschroeder/following{/other_user}",
      "gists_url": "https://api.github.com/users/izaakschroeder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/izaakschroeder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/izaakschroeder/subscriptions",
      "organizations_url": "https://api.github.com/users/izaakschroeder/orgs",
      "repos_url": "https://api.github.com/users/izaakschroeder/repos",
      "events_url": "https://api.github.com/users/izaakschroeder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/izaakschroeder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-02T21:29:27Z",
    "updated_at": "2014-12-02T21:29:51Z",
    "author_association": "NONE",
    "body": "Elaborate?\n\n``` javascript\n// typical middleware\nvar foo = function(req, res, next) {\n   //..\n}\n\n// wrap it\nvar bar = promsify(foo);\n\napp.use(context);\napp.use(bar);\n\n// can we recover the context knowing foo is wrapped? sure can!\ncontext.for(req, bar);\n```\n\nIs there another pattern where the fact foo is wrapped is hidden? If there is a case where it's hidden then the problem becomes more entertaining.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/65308076/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/65309791",
    "html_url": "https://github.com/expressjs/express/pull/2453#issuecomment-65309791",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2453",
    "id": 65309791,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzA5Nzkx",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-02T21:40:10Z",
    "updated_at": "2014-12-02T21:40:10Z",
    "author_association": "MEMBER",
    "body": "> can we recover the context knowing foo is wrapped? sure can!\n\nyes, but at this point, the only safe method would be to always use `context.for` within everything just in case something gets refactored. defeats the whole purpose of exposing anything, i.m.o\n\n> Is there another pattern where the fact foo is wrapped is hidden? \n\nTypical code is third-party or custom middleware glue (I see this in so many places everywhere; both `foo` and `bar` will see the same `handle` value):\n\n``` js\napp.use(function (req, res, next) {\n  // do something\n  foo(req, res, function (err) {\n    if (err) return next(err)\n    // do something\n    bar(req, res, error)\n  })\n})\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/65309791/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/65311432",
    "html_url": "https://github.com/expressjs/express/pull/2453#issuecomment-65311432",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2453",
    "id": 65311432,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzExNDMy",
    "user": {
      "login": "izaakschroeder",
      "id": 206921,
      "node_id": "MDQ6VXNlcjIwNjkyMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/206921?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/izaakschroeder",
      "html_url": "https://github.com/izaakschroeder",
      "followers_url": "https://api.github.com/users/izaakschroeder/followers",
      "following_url": "https://api.github.com/users/izaakschroeder/following{/other_user}",
      "gists_url": "https://api.github.com/users/izaakschroeder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/izaakschroeder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/izaakschroeder/subscriptions",
      "organizations_url": "https://api.github.com/users/izaakschroeder/orgs",
      "repos_url": "https://api.github.com/users/izaakschroeder/repos",
      "events_url": "https://api.github.com/users/izaakschroeder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/izaakschroeder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-02T21:49:58Z",
    "updated_at": "2014-12-02T21:49:58Z",
    "author_association": "NONE",
    "body": "Can you send me a link to one of these 3rd party libs (that you figure would make this a pain or in fact the most painful)? I will make my example play nicely with it in a routing-implementation agnostic way.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/65311432/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/65323392",
    "html_url": "https://github.com/expressjs/express/pull/2453#issuecomment-65323392",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2453",
    "id": 65323392,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzIzMzky",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-02T23:11:51Z",
    "updated_at": "2014-12-02T23:11:51Z",
    "author_association": "MEMBER",
    "body": "The example comes from what people are always posting to us in old issues here, IRC, etc. I don't know anything that has a link off-hand, but the example above is the exact thing I see over and over again. I see people doing it a lot where `foo` or `bar` is an instance of the `express-session` module as well. `body-parser` is another common `foo`/`bar` situation. Basically, because all middleware are is a function, people call them in all kinds of ways, not strictly `app.use`ing them, and as such, the `handle` is not reliable because Express is too flexible.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/65323392/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/65323713",
    "html_url": "https://github.com/expressjs/express/pull/2453#issuecomment-65323713",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2453",
    "id": 65323713,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzIzNzEz",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-02T23:14:28Z",
    "updated_at": "2014-12-02T23:14:28Z",
    "author_association": "MEMBER",
    "body": "I can certainly just search Google: http://stackoverflow.com/questions/19341168/express-composing-middleware and https://gist.github.com/yssk22/740365 come up easily and there are also a whole bunch of modules on `npm`.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/65323713/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/65337600",
    "html_url": "https://github.com/expressjs/express/pull/2453#issuecomment-65337600",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2453",
    "id": 65337600,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzM3NjAw",
    "user": {
      "login": "izaakschroeder",
      "id": 206921,
      "node_id": "MDQ6VXNlcjIwNjkyMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/206921?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/izaakschroeder",
      "html_url": "https://github.com/izaakschroeder",
      "followers_url": "https://api.github.com/users/izaakschroeder/followers",
      "following_url": "https://api.github.com/users/izaakschroeder/following{/other_user}",
      "gists_url": "https://api.github.com/users/izaakschroeder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/izaakschroeder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/izaakschroeder/subscriptions",
      "organizations_url": "https://api.github.com/users/izaakschroeder/orgs",
      "repos_url": "https://api.github.com/users/izaakschroeder/repos",
      "events_url": "https://api.github.com/users/izaakschroeder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/izaakschroeder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-03T01:26:19Z",
    "updated_at": "2014-12-03T01:26:19Z",
    "author_association": "NONE",
    "body": "I don't think this is a problem since it's information that's never hidden?\n\n``` javascript\nfunction parallel(){\n   var list = arguments;\n   return function(req, res, next){\n      var current = 0;\n      var len = list.length;\n      var last = list[len-1];\n      function pass(i){\n         return function(){\n            current += 1;\n            if( current == len - 1 ){\n               last(req, res, next);\n            }\n         };\n      }\n      for(var i=0; i<len-1;i++){\n         var fun = list[i];\n         fun(req, res, pass(i));\n      }\n   };\n}\n\nvar work = parallel(mw1, mw2, mw3);\n\napp.use(context);\napp.use(work);\n\ncontext.for(req, work);\n```\n\nIn fact I'm actually going to argue that this makes more sense; in the current default mode whatever gets put into `use` becomes the context. This behaviour is fine for VERBs as well since a new layer is made for each middleware in the VERB chain.\n\n`handle` points to the outermost function as part of a use call or VERB call, which makes total sense to me.\n\nThoughts?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/65337600/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/65338995",
    "html_url": "https://github.com/expressjs/express/pull/2453#issuecomment-65338995",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2453",
    "id": 65338995,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzM4OTk1",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-03T01:42:18Z",
    "updated_at": "2014-12-03T01:42:18Z",
    "author_association": "MEMBER",
    "body": "But if `mw1` and `mw2` both do `req.context = 'blah'`, they would overwrite each other's context, wouldn't they?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/65338995/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/65339491",
    "html_url": "https://github.com/expressjs/express/pull/2453#issuecomment-65339491",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2453",
    "id": 65339491,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzM5NDkx",
    "user": {
      "login": "izaakschroeder",
      "id": 206921,
      "node_id": "MDQ6VXNlcjIwNjkyMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/206921?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/izaakschroeder",
      "html_url": "https://github.com/izaakschroeder",
      "followers_url": "https://api.github.com/users/izaakschroeder/followers",
      "following_url": "https://api.github.com/users/izaakschroeder/following{/other_user}",
      "gists_url": "https://api.github.com/users/izaakschroeder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/izaakschroeder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/izaakschroeder/subscriptions",
      "organizations_url": "https://api.github.com/users/izaakschroeder/orgs",
      "repos_url": "https://api.github.com/users/izaakschroeder/repos",
      "events_url": "https://api.github.com/users/izaakschroeder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/izaakschroeder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-03T01:48:21Z",
    "updated_at": "2014-12-03T01:50:55Z",
    "author_association": "NONE",
    "body": "Correct. This also seems like intended behaviour, since context only proposes to isolate properties _within_ a context; in this case the context is `parallel` so there is no isolation at a level more granular than that.\n\nCause you could make an argument then that callback functions could in theory have their own context.\n\n``` javascript\nfunction(req, res, next) {\n  calldb(function(err, user) {\n    // should this be a context?\n  });\n}\n```\n\nHaving the context boundary clearly set makes sense to me, and for this case that boundary happens to be whatever gets piped into `.use` or `.VERB`. I'm certain it would be possible to configure other granularities or boundaries in the future.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/65339491/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/65339665",
    "html_url": "https://github.com/expressjs/express/pull/2453#issuecomment-65339665",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2453",
    "id": 65339665,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzM5NjY1",
    "user": {
      "login": "izaakschroeder",
      "id": 206921,
      "node_id": "MDQ6VXNlcjIwNjkyMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/206921?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/izaakschroeder",
      "html_url": "https://github.com/izaakschroeder",
      "followers_url": "https://api.github.com/users/izaakschroeder/followers",
      "following_url": "https://api.github.com/users/izaakschroeder/following{/other_user}",
      "gists_url": "https://api.github.com/users/izaakschroeder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/izaakschroeder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/izaakschroeder/subscriptions",
      "organizations_url": "https://api.github.com/users/izaakschroeder/orgs",
      "repos_url": "https://api.github.com/users/izaakschroeder/repos",
      "events_url": "https://api.github.com/users/izaakschroeder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/izaakschroeder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-03T01:50:34Z",
    "updated_at": "2014-12-03T01:51:10Z",
    "author_association": "NONE",
    "body": "You could make it even more explicit by doing something like:\n\n``` javascript\n// returns new middleware with getter/setter hooks installed\napp.use(context.isolate(middleware))\n```\n\nIt is a little more verbose though.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/65339665/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/65340605",
    "html_url": "https://github.com/expressjs/express/pull/2453#issuecomment-65340605",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2453",
    "id": 65340605,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzQwNjA1",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-03T02:02:30Z",
    "updated_at": "2014-12-03T02:02:30Z",
    "author_association": "MEMBER",
    "body": "Right, I understand. It's just right now, people treat giving the middleware to `app.use` vs just calling it directly as interchangeable; exposing this property makes that promise invalid, which is the main reason I'm just thinking on it so much.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/65340605/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/65341930",
    "html_url": "https://github.com/expressjs/express/pull/2453#issuecomment-65341930",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2453",
    "id": 65341930,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzQxOTMw",
    "user": {
      "login": "izaakschroeder",
      "id": 206921,
      "node_id": "MDQ6VXNlcjIwNjkyMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/206921?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/izaakschroeder",
      "html_url": "https://github.com/izaakschroeder",
      "followers_url": "https://api.github.com/users/izaakschroeder/followers",
      "following_url": "https://api.github.com/users/izaakschroeder/following{/other_user}",
      "gists_url": "https://api.github.com/users/izaakschroeder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/izaakschroeder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/izaakschroeder/subscriptions",
      "organizations_url": "https://api.github.com/users/izaakschroeder/orgs",
      "repos_url": "https://api.github.com/users/izaakschroeder/repos",
      "events_url": "https://api.github.com/users/izaakschroeder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/izaakschroeder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-03T02:15:46Z",
    "updated_at": "2014-12-03T02:15:46Z",
    "author_association": "NONE",
    "body": "Well in that light, doesn't `req.route` make that promise equally as invalid? In fact, I was originally considering using `req.route` but it only shows up in `.VERB` and not `.use`.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/65341930/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/65343865",
    "html_url": "https://github.com/expressjs/express/pull/2453#issuecomment-65343865",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2453",
    "id": 65343865,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzQzODY1",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-03T02:34:21Z",
    "updated_at": "2014-12-03T02:34:21Z",
    "author_association": "MEMBER",
    "body": "`req.route` just contains route information (i.e. `route.path`, pretty much)--not the corresponding function that is being executed. Remember: I'm trying to discussion you _underlying reason for the PR_, not what it's surface implementation looks like. `req.route` can corresponds to tens of functions and middlewares all at once, even the same middleware multiple times.\n\nIn addition, I never said exposing `req.route` was ever a good idea--but we have it and cannot easily remove it. I need to be sure adding something like this is a good thing to do, because just like `req.route`, we may never be able to undo the decision.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/65343865/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/65392979",
    "html_url": "https://github.com/expressjs/express/pull/2453#issuecomment-65392979",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2453",
    "id": 65392979,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzkyOTc5",
    "user": {
      "login": "izaakschroeder",
      "id": 206921,
      "node_id": "MDQ6VXNlcjIwNjkyMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/206921?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/izaakschroeder",
      "html_url": "https://github.com/izaakschroeder",
      "followers_url": "https://api.github.com/users/izaakschroeder/followers",
      "following_url": "https://api.github.com/users/izaakschroeder/following{/other_user}",
      "gists_url": "https://api.github.com/users/izaakschroeder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/izaakschroeder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/izaakschroeder/subscriptions",
      "organizations_url": "https://api.github.com/users/izaakschroeder/orgs",
      "repos_url": "https://api.github.com/users/izaakschroeder/repos",
      "events_url": "https://api.github.com/users/izaakschroeder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/izaakschroeder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-03T11:17:45Z",
    "updated_at": "2014-12-03T11:17:45Z",
    "author_association": "NONE",
    "body": "Not a problem. Using alternative method now (see: https://github.com/izaakschroeder/express-context).\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/65392979/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/65442793",
    "html_url": "https://github.com/expressjs/express/pull/2453#issuecomment-65442793",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/2453",
    "id": 65442793,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NDQyNzkz",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-03T16:41:47Z",
    "updated_at": "2014-12-03T16:41:47Z",
    "author_association": "MEMBER",
    "body": "Ok. I'm still thinking on this, and stuff :) I don't think us doing _nothing_ is the right course of action here, only that I wasn't entirely sure what this did was really going to meet your end goal based on how Express gets used.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/65442793/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]