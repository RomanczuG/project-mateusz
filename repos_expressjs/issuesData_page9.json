[
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4181",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4181/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4181/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4181/events",
    "html_url": "https://github.com/expressjs/express/pull/4181",
    "id": 562096235,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzcyNzcxNjY0",
    "number": 4181,
    "title": "feat: add `app.request` for set `get`, `post`",
    "user": {
      "login": "bluelovers",
      "id": 167966,
      "node_id": "MDQ6VXNlcjE2Nzk2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/167966?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bluelovers",
      "html_url": "https://github.com/bluelovers",
      "followers_url": "https://api.github.com/users/bluelovers/followers",
      "following_url": "https://api.github.com/users/bluelovers/following{/other_user}",
      "gists_url": "https://api.github.com/users/bluelovers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bluelovers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bluelovers/subscriptions",
      "organizations_url": "https://api.github.com/users/bluelovers/orgs",
      "repos_url": "https://api.github.com/users/bluelovers/repos",
      "events_url": "https://api.github.com/users/bluelovers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bluelovers/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55587817,
        "node_id": "MDU6TGFiZWw1NTU4NzgxNw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/needs%20tests",
        "name": "needs tests",
        "color": "e11d21",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-02-08T23:57:51Z",
    "updated_at": "2020-03-14T20:40:35Z",
    "closed_at": "2020-03-14T20:40:35Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4181",
      "html_url": "https://github.com/expressjs/express/pull/4181",
      "diff_url": "https://github.com/expressjs/express/pull/4181.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4181.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4181/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4181/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4180",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4180/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4180/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4180/events",
    "html_url": "https://github.com/expressjs/express/issues/4180",
    "id": 562004727,
    "node_id": "MDU6SXNzdWU1NjIwMDQ3Mjc=",
    "number": 4180,
    "title": "Express router: confused between query parameter and endpoint",
    "user": {
      "login": "mishabhi",
      "id": 16177376,
      "node_id": "MDQ6VXNlcjE2MTc3Mzc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/16177376?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mishabhi",
      "html_url": "https://github.com/mishabhi",
      "followers_url": "https://api.github.com/users/mishabhi/followers",
      "following_url": "https://api.github.com/users/mishabhi/following{/other_user}",
      "gists_url": "https://api.github.com/users/mishabhi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mishabhi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mishabhi/subscriptions",
      "organizations_url": "https://api.github.com/users/mishabhi/orgs",
      "repos_url": "https://api.github.com/users/mishabhi/repos",
      "events_url": "https://api.github.com/users/mishabhi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mishabhi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-02-08T11:08:09Z",
    "updated_at": "2020-02-08T13:51:02Z",
    "closed_at": "2020-02-08T13:51:01Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi Guys, \r\n\r\n![express-router-issue](https://user-images.githubusercontent.com/16177376/74084073-1fa76980-4a91-11ea-9f7d-d88cf1fda88a.gif)\r\nI am using express 4.17.1 and I have two routes:\r\n\r\n1. /api/assessment/:id\r\n2. /api/assessment/audit\r\n\r\nIf I keep \"/api/assessment/audit\" first in the router file,  the router correctly redirects request to the corresponding method. \r\n\r\nHowever if I keep \"/api/assessment/:id\" first, while calling \"/api/assessment/audits\",  it considers audit as id attribute and redirects request to the method of  \"/api/assessment/:id\".\r\n\r\nAttach is the gif file for the same.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4180/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4180/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4179",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4179/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4179/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4179/events",
    "html_url": "https://github.com/expressjs/express/issues/4179",
    "id": 561973778,
    "node_id": "MDU6SXNzdWU1NjE5NzM3Nzg=",
    "number": 4179,
    "title": "mark express-handlebars package as dead",
    "user": {
      "login": "bitshiftnetau",
      "id": 26871600,
      "node_id": "MDQ6VXNlcjI2ODcxNjAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/26871600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bitshiftnetau",
      "html_url": "https://github.com/bitshiftnetau",
      "followers_url": "https://api.github.com/users/bitshiftnetau/followers",
      "following_url": "https://api.github.com/users/bitshiftnetau/following{/other_user}",
      "gists_url": "https://api.github.com/users/bitshiftnetau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bitshiftnetau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bitshiftnetau/subscriptions",
      "organizations_url": "https://api.github.com/users/bitshiftnetau/orgs",
      "repos_url": "https://api.github.com/users/bitshiftnetau/repos",
      "events_url": "https://api.github.com/users/bitshiftnetau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bitshiftnetau/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-02-08T05:31:04Z",
    "updated_at": "2020-02-08T06:32:41Z",
    "closed_at": "2020-02-08T06:32:40Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Express-handlebars no longer appears to be maintained, it is broken and the examples that come with the package to not work. \r\n\r\nPlease update the list of template engines that \"work out of the box\" to reflect this situation. \r\n\r\nThank you ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4179/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4179/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4178",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4178/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4178/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4178/events",
    "html_url": "https://github.com/expressjs/express/issues/4178",
    "id": 561901891,
    "node_id": "MDU6SXNzdWU1NjE5MDE4OTE=",
    "number": 4178,
    "title": "Proper way to extend Request object in Typescript",
    "user": {
      "login": "victorsferreira",
      "id": 25830138,
      "node_id": "MDQ6VXNlcjI1ODMwMTM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/25830138?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/victorsferreira",
      "html_url": "https://github.com/victorsferreira",
      "followers_url": "https://api.github.com/users/victorsferreira/followers",
      "following_url": "https://api.github.com/users/victorsferreira/following{/other_user}",
      "gists_url": "https://api.github.com/users/victorsferreira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/victorsferreira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/victorsferreira/subscriptions",
      "organizations_url": "https://api.github.com/users/victorsferreira/orgs",
      "repos_url": "https://api.github.com/users/victorsferreira/repos",
      "events_url": "https://api.github.com/users/victorsferreira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/victorsferreira/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-02-07T22:21:38Z",
    "updated_at": "2020-02-07T22:34:27Z",
    "closed_at": "2020-02-07T22:34:22Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Question:** Hello, what is the correct way to extend the Request object and add a new property?\r\n\r\nStackoverflow is flooded with options that didn't work to me.\r\n\r\nI need it to have a different name, it can't be Request.\r\n\r\n**Suggestion:** Where is it documented? Shouldn't it be more explicit?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4178/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4178/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4177",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4177/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4177/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4177/events",
    "html_url": "https://github.com/expressjs/express/issues/4177",
    "id": 561523859,
    "node_id": "MDU6SXNzdWU1NjE1MjM4NTk=",
    "number": 4177,
    "title": "Error ECONNABORTED sendFile",
    "user": {
      "login": "sewemark",
      "id": 7123821,
      "node_id": "MDQ6VXNlcjcxMjM4MjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7123821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sewemark",
      "html_url": "https://github.com/sewemark",
      "followers_url": "https://api.github.com/users/sewemark/followers",
      "following_url": "https://api.github.com/users/sewemark/following{/other_user}",
      "gists_url": "https://api.github.com/users/sewemark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sewemark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sewemark/subscriptions",
      "organizations_url": "https://api.github.com/users/sewemark/orgs",
      "repos_url": "https://api.github.com/users/sewemark/repos",
      "events_url": "https://api.github.com/users/sewemark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sewemark/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-02-07T09:38:23Z",
    "updated_at": "2020-03-24T05:21:16Z",
    "closed_at": "2020-03-24T05:21:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello :),\r\nI have a question regarding res.sendFile function. What happens when there is an ECONNABORTED error in callback function ? Is there a way to handle it in my code ? It seems that express hangs forever after that error is thrown in sendFile. I am using express v. 4.17.1 and node v. 10.13.0\r\n\r\n```javascript\r\nsendfile(res, file, opts, function (err) {\r\n    if (done) return done(err);\r\n    if (err && err.code === 'EISDIR') return next();\r\n\r\n    // next() all but write errors\r\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\r\n      next(err);\r\n    }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4177/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4177/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4176",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4176/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4176/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4176/events",
    "html_url": "https://github.com/expressjs/express/issues/4176",
    "id": 560773903,
    "node_id": "MDU6SXNzdWU1NjA3NzM5MDM=",
    "number": 4176,
    "title": "Server not sending last byte",
    "user": {
      "login": "danhab99",
      "id": 13894263,
      "node_id": "MDQ6VXNlcjEzODk0MjYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/13894263?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danhab99",
      "html_url": "https://github.com/danhab99",
      "followers_url": "https://api.github.com/users/danhab99/followers",
      "following_url": "https://api.github.com/users/danhab99/following{/other_user}",
      "gists_url": "https://api.github.com/users/danhab99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danhab99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danhab99/subscriptions",
      "organizations_url": "https://api.github.com/users/danhab99/orgs",
      "repos_url": "https://api.github.com/users/danhab99/repos",
      "events_url": "https://api.github.com/users/danhab99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danhab99/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2020-02-06T04:37:16Z",
    "updated_at": "2022-01-27T21:06:41Z",
    "closed_at": "2020-03-24T05:20:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I don't know how to explain it, or at what code to point to. As far as I know this is the code that fails:\r\n\r\n```javascript\r\nmodule.exports = (req, res, next) => {\r\n  if (req.session.passport) {\r\n    next()\r\n  }\r\n  else {\r\n    debugger\r\n    req.log('You need to login')\r\n    res.redirect('/login') // <--- Fails here\r\n  }\r\n}\r\n```\r\n\r\nThen I would test it with curl executed from inside the container:\r\n\r\n```bash\r\nroot@68f037d2c428:~# curl -i -m1 http://localhost:3000\r\ncurl: (28) Operation timed out after 1000 milliseconds with 0 bytes received\r\nroot@68f037d2c428:~# curl -i -m5 http://localhost:3000\r\nHTTP/1.1 302 Found\r\nX-Powered-By: Express\r\nLocation: /login\r\nVary: Accept\r\nContent-Type: text/plain; charset=utf-8\r\nContent-Length: 28\r\nSet-Cookie: connect.sid=s%3A-O5W8zygEdzUmTtkGCAcfk4b8q6ORs79.KmwdqlKFXeKW5XjoTN09pBmgDIUacFzUCT1hOXG5JVc; Path=/; Expires=Sat, 07 Mar 2020 14:25:22 GMT; HttpOnly\r\nDate: Thu, 06 Feb 2020 04:25:22 GMT\r\nConnection: keep-alive\r\n\r\ncurl: (28) Operation timed out after 5000 milliseconds with 27 out of 28 bytes received\r\nFound. Redirecting to /logi ## Suppose to be \"Found. Redirecting to /login\"\r\n```\r\n\r\nIs there any way to just disable the `Content-Length` header or how to correct the last bit not being sent? Or is this not the right place?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4176/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4176/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4175",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4175/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4175/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4175/events",
    "html_url": "https://github.com/expressjs/express/pull/4175",
    "id": 560543084,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzcxNTE0Nzk4",
    "number": 4175,
    "title": "docs: request for triager role for ulisesGascon",
    "user": {
      "login": "UlisesGascon",
      "id": 5110813,
      "node_id": "MDQ6VXNlcjUxMTA4MTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5110813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/UlisesGascon",
      "html_url": "https://github.com/UlisesGascon",
      "followers_url": "https://api.github.com/users/UlisesGascon/followers",
      "following_url": "https://api.github.com/users/UlisesGascon/following{/other_user}",
      "gists_url": "https://api.github.com/users/UlisesGascon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/UlisesGascon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/UlisesGascon/subscriptions",
      "organizations_url": "https://api.github.com/users/UlisesGascon/orgs",
      "repos_url": "https://api.github.com/users/UlisesGascon/repos",
      "events_url": "https://api.github.com/users/UlisesGascon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/UlisesGascon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-02-05T18:12:15Z",
    "updated_at": "2020-07-11T04:14:46Z",
    "closed_at": "2020-07-11T04:14:46Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4175",
      "html_url": "https://github.com/expressjs/express/pull/4175",
      "diff_url": "https://github.com/expressjs/express/pull/4175.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4175.patch",
      "merged_at": null
    },
    "body": "Hi again! :-)\r\n\r\nI have read and understood the project's Contributing guide.\r\nI also have read and understood the process and best practices around Express triaging.\r\n\r\nI request for a triager role for the below orgs:\r\n- jshttp\r\n- pillarjs\r\n- express",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4175/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4175/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4174",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4174/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4174/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4174/events",
    "html_url": "https://github.com/expressjs/express/pull/4174",
    "id": 560513070,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzcxNDkwMjE5",
    "number": 4174,
    "title": "Feature/4171 depd",
    "user": {
      "login": "UlisesGascon",
      "id": 5110813,
      "node_id": "MDQ6VXNlcjUxMTA4MTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5110813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/UlisesGascon",
      "html_url": "https://github.com/UlisesGascon",
      "followers_url": "https://api.github.com/users/UlisesGascon/followers",
      "following_url": "https://api.github.com/users/UlisesGascon/following{/other_user}",
      "gists_url": "https://api.github.com/users/UlisesGascon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/UlisesGascon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/UlisesGascon/subscriptions",
      "organizations_url": "https://api.github.com/users/UlisesGascon/orgs",
      "repos_url": "https://api.github.com/users/UlisesGascon/repos",
      "events_url": "https://api.github.com/users/UlisesGascon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/UlisesGascon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 133578716,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/deps",
        "name": "deps",
        "color": "444444",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/18",
      "html_url": "https://github.com/expressjs/express/milestone/18",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/18/labels",
      "id": 5234171,
      "node_id": "MDk6TWlsZXN0b25lNTIzNDE3MQ==",
      "number": 18,
      "title": "4.18",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 15,
      "state": "closed",
      "created_at": "2020-03-24T23:16:48Z",
      "updated_at": "2022-04-24T22:50:58Z",
      "due_on": null,
      "closed_at": "2022-04-24T22:50:58Z"
    },
    "comments": 6,
    "created_at": "2020-02-05T17:13:42Z",
    "updated_at": "2022-04-02T20:08:45Z",
    "closed_at": "2022-03-26T18:32:30Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4174",
      "html_url": "https://github.com/expressjs/express/pull/4174",
      "diff_url": "https://github.com/expressjs/express/pull/4174.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4174.patch",
      "merged_at": "2022-03-26T18:32:30Z"
    },
    "body": "### Main Changes\r\n\r\n- Upgrade to `depd@2.0.0`\r\n\r\n### Context\r\n- Related #4171 \r\n- Discussion (call to action) https://github.com/expressjs/express/issues/4171#issuecomment-582466565\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4174/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4174/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4173",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4173/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4173/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4173/events",
    "html_url": "https://github.com/expressjs/express/pull/4173",
    "id": 560501844,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzcxNDgwOTg2",
    "number": 4173,
    "title": "deps: bump debug version to 3.2.6",
    "user": {
      "login": "UlisesGascon",
      "id": 5110813,
      "node_id": "MDQ6VXNlcjUxMTA4MTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5110813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/UlisesGascon",
      "html_url": "https://github.com/UlisesGascon",
      "followers_url": "https://api.github.com/users/UlisesGascon/followers",
      "following_url": "https://api.github.com/users/UlisesGascon/following{/other_user}",
      "gists_url": "https://api.github.com/users/UlisesGascon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/UlisesGascon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/UlisesGascon/subscriptions",
      "organizations_url": "https://api.github.com/users/UlisesGascon/orgs",
      "repos_url": "https://api.github.com/users/UlisesGascon/repos",
      "events_url": "https://api.github.com/users/UlisesGascon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/UlisesGascon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578716,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/deps",
        "name": "deps",
        "color": "444444",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-02-05T16:54:28Z",
    "updated_at": "2020-02-05T17:02:05Z",
    "closed_at": "2020-02-05T17:02:05Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4173",
      "html_url": "https://github.com/expressjs/express/pull/4173",
      "diff_url": "https://github.com/expressjs/express/pull/4173.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4173.patch",
      "merged_at": null
    },
    "body": "See https://github.com/expressjs/express/issues/4171#issuecomment-582466565",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4173/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4173/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4172",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4172/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4172/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4172/events",
    "html_url": "https://github.com/expressjs/express/pull/4172",
    "id": 560204018,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzcxMjM0NjY3",
    "number": 4172,
    "title": "Upgrade dependencies",
    "user": {
      "login": "UlisesGascon",
      "id": 5110813,
      "node_id": "MDQ6VXNlcjUxMTA4MTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5110813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/UlisesGascon",
      "html_url": "https://github.com/UlisesGascon",
      "followers_url": "https://api.github.com/users/UlisesGascon/followers",
      "following_url": "https://api.github.com/users/UlisesGascon/following{/other_user}",
      "gists_url": "https://api.github.com/users/UlisesGascon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/UlisesGascon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/UlisesGascon/subscriptions",
      "organizations_url": "https://api.github.com/users/UlisesGascon/orgs",
      "repos_url": "https://api.github.com/users/UlisesGascon/repos",
      "events_url": "https://api.github.com/users/UlisesGascon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/UlisesGascon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-02-05T08:04:43Z",
    "updated_at": "2020-02-05T13:42:37Z",
    "closed_at": "2020-02-05T13:26:54Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4172",
      "html_url": "https://github.com/expressjs/express/pull/4172",
      "diff_url": "https://github.com/expressjs/express/pull/4172.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4172.patch",
      "merged_at": null
    },
    "body": "### Main changes\r\n- Upgraded outdated dependencies\r\n\r\n### Context\r\n\r\n- Related #4171",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4172/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4172/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4171",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4171/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4171/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4171/events",
    "html_url": "https://github.com/expressjs/express/issues/4171",
    "id": 560200673,
    "node_id": "MDU6SXNzdWU1NjAyMDA2NzM=",
    "number": 4171,
    "title": "outdated dependencies",
    "user": {
      "login": "UlisesGascon",
      "id": 5110813,
      "node_id": "MDQ6VXNlcjUxMTA4MTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5110813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/UlisesGascon",
      "html_url": "https://github.com/UlisesGascon",
      "followers_url": "https://api.github.com/users/UlisesGascon/followers",
      "following_url": "https://api.github.com/users/UlisesGascon/following{/other_user}",
      "gists_url": "https://api.github.com/users/UlisesGascon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/UlisesGascon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/UlisesGascon/subscriptions",
      "organizations_url": "https://api.github.com/users/UlisesGascon/orgs",
      "repos_url": "https://api.github.com/users/UlisesGascon/repos",
      "events_url": "https://api.github.com/users/UlisesGascon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/UlisesGascon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578716,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/deps",
        "name": "deps",
        "color": "444444",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 28,
    "created_at": "2020-02-05T07:56:24Z",
    "updated_at": "2022-04-11T22:51:32Z",
    "closed_at": "2022-04-11T22:51:31Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "### 👉 [SEE](https://github.com/expressjs/express/issues/4171#issuecomment-582466565)",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4171/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4171/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4170",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4170/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4170/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4170/events",
    "html_url": "https://github.com/expressjs/express/issues/4170",
    "id": 558643236,
    "node_id": "MDU6SXNzdWU1NTg2NDMyMzY=",
    "number": 4170,
    "title": "Just need some help.",
    "user": {
      "login": "sqwyer",
      "id": 48366954,
      "node_id": "MDQ6VXNlcjQ4MzY2OTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/48366954?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sqwyer",
      "html_url": "https://github.com/sqwyer",
      "followers_url": "https://api.github.com/users/sqwyer/followers",
      "following_url": "https://api.github.com/users/sqwyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/sqwyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sqwyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sqwyer/subscriptions",
      "organizations_url": "https://api.github.com/users/sqwyer/orgs",
      "repos_url": "https://api.github.com/users/sqwyer/repos",
      "events_url": "https://api.github.com/users/sqwyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sqwyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-02-02T04:58:32Z",
    "updated_at": "2020-02-26T16:27:56Z",
    "closed_at": "2020-02-26T16:27:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Ok, so, I'm trying to use `req.body.type` to get the selected option from a selector element in a form, \r\n```\r\n\r\n<form action=\"/post\" method=\"POST\">\r\n\r\n<select name=\"type\">\r\n<option name=\"headline\" value=\"headline\">Headline News</option>\r\n<option name=\"local\" value=\"local\">Local News</option>\r\n<option name=\"sports\" value=\"sports\">Sports</option>\r\n<option name=\"editorial\" value=\"editorial\">Editorial</option>\r\n</select>\r\n\r\n<input type=\"submit\" value=\"Post\"\r\n</form>\r\n```\r\n\r\nhowever, whenever i console log `req.body.type` it gives me `undefined`",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4170/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4170/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4169",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4169/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4169/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4169/events",
    "html_url": "https://github.com/expressjs/express/issues/4169",
    "id": 557972630,
    "node_id": "MDU6SXNzdWU1NTc5NzI2MzA=",
    "number": 4169,
    "title": "When is the expected date for the next release?",
    "user": {
      "login": "dogemad",
      "id": 48283057,
      "node_id": "MDQ6VXNlcjQ4MjgzMDU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/48283057?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dogemad",
      "html_url": "https://github.com/dogemad",
      "followers_url": "https://api.github.com/users/dogemad/followers",
      "following_url": "https://api.github.com/users/dogemad/following{/other_user}",
      "gists_url": "https://api.github.com/users/dogemad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dogemad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dogemad/subscriptions",
      "organizations_url": "https://api.github.com/users/dogemad/orgs",
      "repos_url": "https://api.github.com/users/dogemad/repos",
      "events_url": "https://api.github.com/users/dogemad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dogemad/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-01-31T07:55:10Z",
    "updated_at": "2020-01-31T08:11:04Z",
    "closed_at": "2020-01-31T08:11:04Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am very pleased with the express.js and trust it.\r\nOn the other hand, I'm concerned that updates are interrupted by too long and unpredictable update cycles.\r\nDo you have or have a specific release plan? I would like to hear if you have a plan.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4169/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4169/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4168",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4168/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4168/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4168/events",
    "html_url": "https://github.com/expressjs/express/pull/4168",
    "id": 556359200,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzY4MTM4Mzg0",
    "number": 4168,
    "title": "Readme update for npm init",
    "user": {
      "login": "raxraj",
      "id": 41513907,
      "node_id": "MDQ6VXNlcjQxNTEzOTA3",
      "avatar_url": "https://avatars.githubusercontent.com/u/41513907?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raxraj",
      "html_url": "https://github.com/raxraj",
      "followers_url": "https://api.github.com/users/raxraj/followers",
      "following_url": "https://api.github.com/users/raxraj/following{/other_user}",
      "gists_url": "https://api.github.com/users/raxraj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raxraj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raxraj/subscriptions",
      "organizations_url": "https://api.github.com/users/raxraj/orgs",
      "repos_url": "https://api.github.com/users/raxraj/repos",
      "events_url": "https://api.github.com/users/raxraj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raxraj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      },
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2020-01-28T17:28:15Z",
    "updated_at": "2020-03-25T20:27:47Z",
    "closed_at": "2020-03-25T20:27:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4168",
      "html_url": "https://github.com/expressjs/express/pull/4168",
      "diff_url": "https://github.com/expressjs/express/pull/4168.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4168.patch",
      "merged_at": null
    },
    "body": "#4049 \r\nReadme file is updated though I am open for Suggestions!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4168/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4168/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4167",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4167/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4167/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4167/events",
    "html_url": "https://github.com/expressjs/express/issues/4167",
    "id": 554442588,
    "node_id": "MDU6SXNzdWU1NTQ0NDI1ODg=",
    "number": 4167,
    "title": "Error: failed to lookup view \"error\" in views directory",
    "user": {
      "login": "aleph-oh",
      "id": 34135923,
      "node_id": "MDQ6VXNlcjM0MTM1OTIz",
      "avatar_url": "https://avatars.githubusercontent.com/u/34135923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aleph-oh",
      "html_url": "https://github.com/aleph-oh",
      "followers_url": "https://api.github.com/users/aleph-oh/followers",
      "following_url": "https://api.github.com/users/aleph-oh/following{/other_user}",
      "gists_url": "https://api.github.com/users/aleph-oh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aleph-oh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aleph-oh/subscriptions",
      "organizations_url": "https://api.github.com/users/aleph-oh/orgs",
      "repos_url": "https://api.github.com/users/aleph-oh/repos",
      "events_url": "https://api.github.com/users/aleph-oh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aleph-oh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-01-23T22:24:11Z",
    "updated_at": "2020-01-28T01:45:34Z",
    "closed_at": "2020-01-27T22:13:27Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I've seen this issue before and none of them seemed to solve this issue, especially because no file references the views directory at all. I've tried git grep views to verify this.\r\n\r\nThe views directory was removed a few commits ago, but the site ran with no errors on the same commit which is now throwing the error mentioned above. ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4167/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4167/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4166",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4166/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4166/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4166/events",
    "html_url": "https://github.com/expressjs/express/pull/4166",
    "id": 554174411,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzY2Mzc1OTYw",
    "number": 4166,
    "title": "docs: request for triager role for chasingSublimity",
    "user": {
      "login": "chasingSublimity",
      "id": 21029639,
      "node_id": "MDQ6VXNlcjIxMDI5NjM5",
      "avatar_url": "https://avatars.githubusercontent.com/u/21029639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chasingSublimity",
      "html_url": "https://github.com/chasingSublimity",
      "followers_url": "https://api.github.com/users/chasingSublimity/followers",
      "following_url": "https://api.github.com/users/chasingSublimity/following{/other_user}",
      "gists_url": "https://api.github.com/users/chasingSublimity/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chasingSublimity/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chasingSublimity/subscriptions",
      "organizations_url": "https://api.github.com/users/chasingSublimity/orgs",
      "repos_url": "https://api.github.com/users/chasingSublimity/repos",
      "events_url": "https://api.github.com/users/chasingSublimity/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chasingSublimity/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-01-23T13:58:48Z",
    "updated_at": "2020-06-07T18:39:45Z",
    "closed_at": "2020-06-07T18:39:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4166",
      "html_url": "https://github.com/expressjs/express/pull/4166",
      "diff_url": "https://github.com/expressjs/express/pull/4166.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4166.patch",
      "merged_at": null
    },
    "body": "Hey there!\r\n\r\nI recently watched @wesleytodd's talk at Node+JS Interactive and would love to help out as a triager. I see that quite a few people have already been added as triagers, so I understand if there are no more roles to fill.\r\n\r\nThanks!\r\n\r\n\r\nI have read and understood the project's Contributing guide.\r\nI also have read and understood the process and best practices around Express triaging.\r\n\r\nI request for a triager role for the below orgs:\r\n\r\npillarjs\r\nexpress",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4166/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4166/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4165",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4165/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4165/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4165/events",
    "html_url": "https://github.com/expressjs/express/issues/4165",
    "id": 552451779,
    "node_id": "MDU6SXNzdWU1NTI0NTE3Nzk=",
    "number": 4165,
    "title": "Query parameter with dot in its name not showing up inside req.query",
    "user": {
      "login": "dmaks9",
      "id": 41797718,
      "node_id": "MDQ6VXNlcjQxNzk3NzE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/41797718?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dmaks9",
      "html_url": "https://github.com/dmaks9",
      "followers_url": "https://api.github.com/users/dmaks9/followers",
      "following_url": "https://api.github.com/users/dmaks9/following{/other_user}",
      "gists_url": "https://api.github.com/users/dmaks9/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dmaks9/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dmaks9/subscriptions",
      "organizations_url": "https://api.github.com/users/dmaks9/orgs",
      "repos_url": "https://api.github.com/users/dmaks9/repos",
      "events_url": "https://api.github.com/users/dmaks9/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dmaks9/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-01-20T18:27:24Z",
    "updated_at": "2020-01-21T17:54:14Z",
    "closed_at": "2020-01-20T20:03:31Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am using the latest version of express.\r\nOther query parameters are there, but the ones with dot are not.\r\nHere is the part of 'req' object:\r\n\r\n```\r\nbaseUrl: '/api/v1/bootcamps',\r\noriginalUrl: '/api/v1/bootcamps?housing=true&averageCost[lte]=10000&careers[in]=Business&location.city=MA',\r\n_parsedUrl: Url {\r\n    protocol: null,\r\n    slashes: null,\r\n    auth: null,\r\n    host: null,\r\n    port: null,\r\n    hostname: null,\r\n    hash: null,\r\n    search: '?housing=true&averageCost[lte]=10000&careers[in]=Business&location.city=MA',\r\n    query: 'housing=true&averageCost[lte]=10000&careers[in]=Business&location.city=MA',\r\n    pathname: '/',\r\n    path: '/?housing=true&averageCost[lte]=10000&careers[in]=Business&location.city=MA',\r\n    href: '/?housing=true&averageCost[lte]=10000&careers[in]=Business&location.city=MA',\r\n    _raw: '/?housing=true&averageCost[lte]=10000&careers[in]=Business&location.city=MA'\r\n},\r\nparams: {},\r\nquery: {\r\n    housing: 'true',\r\n    averageCost: { lte: '10000' },\r\n    careers: { in: 'Business' }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4165/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4165/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4164",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4164/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4164/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4164/events",
    "html_url": "https://github.com/expressjs/express/issues/4164",
    "id": 552134317,
    "node_id": "MDU6SXNzdWU1NTIxMzQzMTc=",
    "number": 4164,
    "title": "Routers not working without hard refresh / no-cache ",
    "user": {
      "login": "kabilan-baskaran",
      "id": 11566970,
      "node_id": "MDQ6VXNlcjExNTY2OTcw",
      "avatar_url": "https://avatars.githubusercontent.com/u/11566970?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kabilan-baskaran",
      "html_url": "https://github.com/kabilan-baskaran",
      "followers_url": "https://api.github.com/users/kabilan-baskaran/followers",
      "following_url": "https://api.github.com/users/kabilan-baskaran/following{/other_user}",
      "gists_url": "https://api.github.com/users/kabilan-baskaran/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kabilan-baskaran/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kabilan-baskaran/subscriptions",
      "organizations_url": "https://api.github.com/users/kabilan-baskaran/orgs",
      "repos_url": "https://api.github.com/users/kabilan-baskaran/repos",
      "events_url": "https://api.github.com/users/kabilan-baskaran/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kabilan-baskaran/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2020-01-20T08:07:56Z",
    "updated_at": "2020-01-24T06:21:36Z",
    "closed_at": "2020-01-24T06:21:36Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The issue might be simple but i have been breaking my head for last two days. My issue is simple. The routers functions are not called without hard refresh. The very first time it works fine as expected. But once it is cached the router functions are not called unless if i do hard refresh. Can somebody help me to fix this issue?\r\n\r\nPlease find my code below.\r\n\r\n**App.js**\r\n\r\n`require('dotenv').config({ path:'./src/config/config.'+require('fs').readFileSync('.env', 'utf8')});\r\nvar createError = require('http-errors');\r\nvar express = require('express');\r\nvar session = require('express-session');\r\nvar MemoryStore = require('memorystore')(session)\r\nvar path = require('path');\r\nvar logger = require('morgan');\r\nvar sassMiddleware = require('node-sass-middleware');\r\nvar routes = require('./src/routes');\r\n\r\nvar app = express();\r\n// view engine setup\r\napp.set('views', path.join(__dirname, 'src/views'));\r\napp.set('view engine', 'pug');\r\n\r\napp.use(logger('dev'));\r\n\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: false }));\r\n\r\n// initialize express-session to allow us track the logged-in user across sessions.\r\n\r\nvar sess = {\r\n  secret: 'dtcops',\r\n  resave: false,\r\n  saveUninitialized: false,\r\n  cookie: {\r\n    maxAge: 3600000\r\n  },\r\n  store: new MemoryStore({\r\n    checkPeriod: 3600000,\r\n    ttl:3600000\r\n  })                              \r\n}\r\n\r\nif (app.get('env') === 'production') {\r\n  app.set('trust proxy', 1); // trust first proxy\r\n  sess.cookie.secure = true; // serve secure cookies\r\n}\r\n\r\n\r\napp.use(session(sess));\r\n\r\napp.use(sassMiddleware({\r\n  src: './public/scss',\r\n  dest: './public/stylesheets',\r\n  debug: false,\r\n  force:false,\r\n  prefix: '/stylesheets',\r\n  outputStyle: 'compressed'\r\n}));\r\n\r\napp.use(express.static(path.join(__dirname, 'public')));\r\n\r\napp.use('/bootstrap-sass', express.static(__dirname + '/node_modules/bootstrap-sass/'));\r\n\r\napp.use(function(req, res, next){\r\n\r\n  console.log(\"coming to index.js & path is: \"+ req.path);\r\n\r\nres.locals.basePath = process.env.BASE_PATH;\r\nres.locals.appTitle = process.env.TITLE\r\nres.locals.appVersion = process.env.APP_VERSION;\r\nres.locals.isLoggedIn = false;\r\nnext();\r\n});\r\n\r\napp.use('/', routes);\r\n\r\napp.use('/api/', function (req, res, next) {\r\n    res.header('Content-Type', 'application/json');\r\n    next();\r\n});\r\n\r\n\r\n\r\n//catch 404 and forward to error handler\r\napp.use(function(req, res, next) {\r\n  next(createError(404));\r\n});\r\n\r\n//error handler\r\napp.use(function(err, req, res, next) {\r\n\r\n  // set locals, only providing error in development\r\n  res.locals.message = err.message;\r\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\r\n\r\n  // render the error page\r\n  res.status(err.status || 500);\r\n  res.render('error');\r\n});\r\n\r\n\r\nvar port = Number(process.env.PORT || 3000);\r\napp.listen(port);\r\n\r\nconsole.log(`App running at http://localhost:${port}`);\r\n\r\nmodule.exports = app;`\r\n\r\n**Router:**\r\n\r\nvar express = require('express');\r\nvar router = express.Router();\r\nvar pdu = require('./../services/pdu');\r\nvar auth = require('./../services/auth');\r\n\r\n// middleware function to check for logged-in users\r\nvar sessionChecker = (req, res, next) => {\r\n  console.log(\"coming to sessionChecker\");\r\n  if (!req.session || !req.session.user) {\r\n    res.redirect(res.locals.basePath + 'login');\r\n    return;\r\n  } else {\r\n    res.locals.isLoggedIn = true;\r\n    res.locals.userFirstName = req.session.user[\"response\"][\"firstName\"];\r\n    next();\r\n  }\r\n};\r\n\r\nrouter.get('/', sessionChecker, function (req, res, next) {\r\n\r\n  console.log(\"coming to router\");\r\n\r\n  res.render('index', {\r\n    meta: pdu.meta,\r\n    req: {}\r\n  });\r\n});\r\nrouter.get('/login', function (req, res, next) {\r\n  console.log(\"coming to login\");\r\n\r\n  if (!req.session || !req.session.user) {\r\n    if (req.query.error){\r\n      res.locals.isLoginError = true;\r\n    }\r\n    res.render('login', {});\r\n  } else {\r\n    res.redirect(res.locals.basePath);\r\n    return;\r\n  }\r\n});\r\nrouter.get('/logout', (req, res) => {\r\n  req.session.destroy();\r\n  res.clearCookie('connect.sid', { path: '/' });\r\n  res.redirect(res.locals.basePath + 'login');\r\n  return;\r\n});\r\n\r\n\r\nmodule.exports = router;\r\n\r\n\r\n**Logs:**\r\n\r\nApp running at http://localhost:3000\r\ncoming to index.js & path is: /login\r\ncoming to login\r\nGET /login 304 3589.345 ms - -\r\nGET /javascripts/jquery-3.4.1.min.js 304 5.929 ms - -\r\nGET /javascripts/bootstrap-multiselect.js 304 6.608 ms - -\r\nGET /stylesheets/bootstrap-multiselect.css 304 13.612 ms - -\r\nGET /bootstrap-sass/assets/javascripts/bootstrap.min.js 304 11.886 ms - -\r\nGET /javascripts/sso.js 304 4.687 ms - -\r\nGET /stylesheets/style.css 200 5453.757 ms - -\r\ncoming to index.js & path is: /login\r\ncoming to login\r\nGET /login 200 207.928 ms - 1178\r\nGET /stylesheets/bootstrap-multiselect.css 200 104.026 ms - 1509\r\nGET /javascripts/sso.js 200 120.580 ms - 368\r\nGET /bootstrap-sass/assets/javascripts/bootstrap.min.js 200 169.527 ms - 39680\r\nGET /javascripts/bootstrap-multiselect.js 200 215.100 ms - 70773\r\nGET /stylesheets/style.css 200 172.162 ms - 271679\r\nGET /javascripts/jquery-3.4.1.min.js 200 272.041 ms - 88147\r\nGET /stylesheets/style.css 304 16.188 ms - -\r\nGET /javascripts/jquery-3.4.1.min.js 304 2.592 ms - -\r\nGET /stylesheets/bootstrap-multiselect.css 304 6.821 ms - -\r\nGET /javascripts/bootstrap-multiselect.js 304 42.888 ms - -\r\nGET /javascripts/sso.js 304 116.333 ms - -\r\nGET /bootstrap-sass/assets/javascripts/bootstrap.min.js 304 173.680 ms - -\r\ncoming to index.js & path is: /login/\r\nGET /login/ 404 180.038 ms - 1304\r\nGET /stylesheets/style.css 304 22.146 ms - -\r\nGET /stylesheets/bootstrap-multiselect.css 304 21.550 ms - -\r\nGET /javascripts/jquery-3.4.1.min.js 304 4.337 ms - -\r\nGET /javascripts/bootstrap-multiselect.js 304 3.475 ms - -\r\nGET /bootstrap-sass/assets/javascripts/bootstrap.min.js 304 5.622 ms - -\r\nGET /stylesheets/bootstrap-multiselect.css 304 3.036 ms - -\r\nGET /stylesheets/style.css 304 18.779 ms - -\r\nGET /bootstrap-sass/assets/javascripts/bootstrap.min.js 304 6.996 ms - -\r\nGET /javascripts/jquery-3.4.1.min.js 304 38.084 ms - -\r\nGET /javascripts/bootstrap-multiselect.js 304 79.287 ms - -\r\nGET /javascripts/sso.js 304 131.031 ms - -\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4164/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4164/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4163",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4163/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4163/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4163/events",
    "html_url": "https://github.com/expressjs/express/issues/4163",
    "id": 551415724,
    "node_id": "MDU6SXNzdWU1NTE0MTU3MjQ=",
    "number": 4163,
    "title": "Calling URL by using param with colon shouldn't crash express",
    "user": {
      "login": "pakastin",
      "id": 1475902,
      "node_id": "MDQ6VXNlcjE0NzU5MDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1475902?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pakastin",
      "html_url": "https://github.com/pakastin",
      "followers_url": "https://api.github.com/users/pakastin/followers",
      "following_url": "https://api.github.com/users/pakastin/following{/other_user}",
      "gists_url": "https://api.github.com/users/pakastin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pakastin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pakastin/subscriptions",
      "organizations_url": "https://api.github.com/users/pakastin/orgs",
      "repos_url": "https://api.github.com/users/pakastin/repos",
      "events_url": "https://api.github.com/users/pakastin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pakastin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2020-01-17T13:28:47Z",
    "updated_at": "2020-01-20T12:41:12Z",
    "closed_at": "2020-01-20T12:41:11Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When you have route like this:\r\n```js\r\napp.get('/:id', (req, res, next) => {\r\n  const id = req.params.id;\r\n  ...\r\n});\r\n```\r\n\r\nAnd you visit URL `/:id` (exactly like that), it crashes express server. Shouldn't it just make `id === ':id'` instead?\r\n\r\nIt's possible to avoid crashing by using `app.use((err, req, res, next) =>`, but still...\r\n\r\nThe error is:\r\n```\r\nTypeError [ERR_INVALID_ARG_TYPE]: The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type undefined\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4163/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4163/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4162",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4162/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4162/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4162/events",
    "html_url": "https://github.com/expressjs/express/issues/4162",
    "id": 551117115,
    "node_id": "MDU6SXNzdWU1NTExMTcxMTU=",
    "number": 4162,
    "title": "multiple query params with the same name gives you object instead of array",
    "user": {
      "login": "ahmad-ali14",
      "id": 46387030,
      "node_id": "MDQ6VXNlcjQ2Mzg3MDMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/46387030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ahmad-ali14",
      "html_url": "https://github.com/ahmad-ali14",
      "followers_url": "https://api.github.com/users/ahmad-ali14/followers",
      "following_url": "https://api.github.com/users/ahmad-ali14/following{/other_user}",
      "gists_url": "https://api.github.com/users/ahmad-ali14/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ahmad-ali14/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ahmad-ali14/subscriptions",
      "organizations_url": "https://api.github.com/users/ahmad-ali14/orgs",
      "repos_url": "https://api.github.com/users/ahmad-ali14/repos",
      "events_url": "https://api.github.com/users/ahmad-ali14/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ahmad-ali14/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-01-16T23:38:24Z",
    "updated_at": "2020-01-17T00:40:54Z",
    "closed_at": "2020-01-17T00:40:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "If you send a request with multiple query params like this:\r\n`http://localhost:3000/api/stock-prices?stock=GOOG&stock=APPL`\r\nYou will get this answer:\r\n```  > node server.js\r\n\r\nListening on port undefined\r\nstock length  = 2\r\ntype of stock = object\r\nstock = [ 'GOOG', 'APPL' ]\r\n```\r\nso the type of stock should be an array, but it gives you Object.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4162/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4162/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4161",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4161/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4161/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4161/events",
    "html_url": "https://github.com/expressjs/express/issues/4161",
    "id": 550973008,
    "node_id": "MDU6SXNzdWU1NTA5NzMwMDg=",
    "number": 4161,
    "title": "Server responds to URL, then says it cannot respond to URL",
    "user": {
      "login": "sslotsky",
      "id": 374078,
      "node_id": "MDQ6VXNlcjM3NDA3OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/374078?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sslotsky",
      "html_url": "https://github.com/sslotsky",
      "followers_url": "https://api.github.com/users/sslotsky/followers",
      "following_url": "https://api.github.com/users/sslotsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/sslotsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sslotsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sslotsky/subscriptions",
      "organizations_url": "https://api.github.com/users/sslotsky/orgs",
      "repos_url": "https://api.github.com/users/sslotsky/repos",
      "events_url": "https://api.github.com/users/sslotsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sslotsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2020-01-16T18:15:12Z",
    "updated_at": "2020-01-17T01:27:35Z",
    "closed_at": "2020-01-16T20:42:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have a test that is suddenly acting strange, and I can't figure it out. I'm hitting `/user-settings` with supertest. The code inside the route executes successfully all the way through `res.render`, but when I inspect the response in my test, it says:\r\n\r\n```\r\ncannot GET /user-settings (500)\r\n```\r\n\r\nMy routes are defined dynamically from a configuration file. In my test, I loop over entries of the configuration and do this for each one:\r\n\r\n```ts\r\n        beforeEach(() => {\r\n          nock(`${page.address}`)\r\n            .log(console.log)\r\n            .get('/v1/')\r\n            .reply(\r\n              200,\r\n              '<html><head><title>Foo</title></head><body><ufe-content /></body></html>',\r\n              {\r\n                'Content-Type': 'text/html',\r\n              }\r\n            );\r\n        });\r\n\r\n        it(`${page.name} should succeed`, async () => {\r\n          const app = listener;\r\n          const res = await request(app)\r\n            .get(`/${page.name}`)\r\n            .set('Cookie', ['__Host-Manifold-Console-Identity=foo']);\r\n\r\n          console.log(`\r\n          \r\n            The server responded with an error:\r\n\r\n            ${res.error.message}\r\n          \r\n          `);\r\n          expect(res.status).toEqual(200);\r\n        });\r\n```\r\n\r\nWhen I call `request(app)`, all of the code inside my route executes:\r\n\r\n```ts\r\n      const contentRequest = async (req: Request, res: Response, next: NextFunction) => {\r\n        try {\r\n\r\n.....................\r\n\r\n          console.log(`\r\n          \r\n            About to render response for ${req.originalUrl}\r\n\r\n          `);\r\n\r\n          res.cookie('XSRF-TOKEN', token);\r\n          res.render('pages/MFE', {\r\n            content: content.innerHTML,\r\n            currentPath: p.name,\r\n            tabs: getTabs(),\r\n            components: components.map(fe => fe.name),\r\n            title: title.text,\r\n            token,\r\n          });\r\n        } catch (e) {\r\n          next(new HttpException(500, e.message));\r\n        }\r\n      };\r\n\r\n      content.get('*', cookieChecker, csrfProtection, getMenus, contentRequest);\r\n      content.post('*', cookieChecker, csrfProtection, getMenus, contentRequest);\r\n```\r\n\r\nThe test output shows that the `console.log` statement within the route prints, which proves that the route was executed. And I've also verified that the `catch` block never executes. But then the `console.log` statement in the test shows that somehow express doesn't recognize the route, even though the code was executed.\r\n\r\n```\r\n  console.log src/server/index.ts:233\r\n    \r\n              \r\n                About to render response for /user-settings\r\n    \r\n              \r\n\r\n::ffff:127.0.0.1 - - [16/Jan/2020:18:07:41 +0000] \"GET /user-settings HTTP/1.1\" 500 1869 \"-\" \"node-superagent/3.8.3\"\r\n FAIL  src/server/index.test.ts\r\n  Routes\r\n    MFE routes\r\n      with a valid format\r\n        ✕ user-settings should succeed (175ms)\r\n\r\n  ● Routes › MFE routes › with a valid format › user-settings should succeed\r\n\r\n    expect(received).toEqual(expected) // deep equality\r\n\r\n    Expected: 200\r\n    Received: 500\r\n\r\n      112 |           \r\n      113 |           `);\r\n    > 114 |           expect(res.status).toEqual(200);\r\n          |                              ^\r\n      115 |         });\r\n      116 |       });\r\n      117 | \r\n\r\n      at src/server/index.test.ts:114:30\r\n      at step (src/server/index.test.ts:33:23)\r\n      at Object.next (src/server/index.test.ts:14:53)\r\n      at fulfilled (src/server/index.test.ts:5:58)\r\n\r\nTest Suites: 1 failed, 1 total\r\nTests:       1 failed, 1 total\r\nSnapshots:   0 total\r\nTime:        2.613s, estimated 3s\r\nRan all test suites matching /src\\/server\\/index.test.ts/i.\r\n  console.log src/server/index.test.ts:107\r\n    \r\n              \r\n                The server responded with an error:\r\n    \r\n                cannot GET /user-settings (500)\r\n```\r\n\r\n**How is it possible that express can say it doesn't recognize a route, when the code for that route is clearly being executed when the route is requested by supertest?**\r\n\r\nThis only occurs in tests. The app runs fine. And these tests used to work. The main thing that's changed is that I'm now using `request` instead of `node-fetch` to make network calls inside my routes, and I'm using `nock` instead of `fetchMock` to mock those requests. I wouldn't expect that to affect anything that express is doing on this level.\r\n\r\nUnfortunately, the repo is private. Coming up with a public repro case would be a lot of effort, but I can try this if it's absolutely necessary.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4161/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4161/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4160",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4160/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4160/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4160/events",
    "html_url": "https://github.com/expressjs/express/issues/4160",
    "id": 550890872,
    "node_id": "MDU6SXNzdWU1NTA4OTA4NzI=",
    "number": 4160,
    "title": "Send non-primitive String as plain text",
    "user": {
      "login": "valoricDe",
      "id": 22564188,
      "node_id": "MDQ6VXNlcjIyNTY0MTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/22564188?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/valoricDe",
      "html_url": "https://github.com/valoricDe",
      "followers_url": "https://api.github.com/users/valoricDe/followers",
      "following_url": "https://api.github.com/users/valoricDe/following{/other_user}",
      "gists_url": "https://api.github.com/users/valoricDe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/valoricDe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/valoricDe/subscriptions",
      "organizations_url": "https://api.github.com/users/valoricDe/orgs",
      "repos_url": "https://api.github.com/users/valoricDe/repos",
      "events_url": "https://api.github.com/users/valoricDe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/valoricDe/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2020-01-16T15:44:21Z",
    "updated_at": "2020-01-17T18:30:32Z",
    "closed_at": "2020-01-17T16:06:55Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Version 4.17.1\r\n\r\nCurrent behaviour:\r\nWhen I do\r\nres.status(200).set('Content-Type', 'text/plain').send(new String(\"My wonderful string\"))\r\nI get a response with `\"My wonderful string\"`\r\n\r\nExpected behaviour:\r\nResponse will equal `My wonderful string` without quotes",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4160/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4160/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4159",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4159/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4159/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4159/events",
    "html_url": "https://github.com/expressjs/express/issues/4159",
    "id": 550697825,
    "node_id": "MDU6SXNzdWU1NTA2OTc4MjU=",
    "number": 4159,
    "title": "Allow response cookie sameSite value \"Secure\"",
    "user": {
      "login": "jswiton",
      "id": 4461343,
      "node_id": "MDQ6VXNlcjQ0NjEzNDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4461343?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jswiton",
      "html_url": "https://github.com/jswiton",
      "followers_url": "https://api.github.com/users/jswiton/followers",
      "following_url": "https://api.github.com/users/jswiton/following{/other_user}",
      "gists_url": "https://api.github.com/users/jswiton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jswiton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jswiton/subscriptions",
      "organizations_url": "https://api.github.com/users/jswiton/orgs",
      "repos_url": "https://api.github.com/users/jswiton/repos",
      "events_url": "https://api.github.com/users/jswiton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jswiton/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-01-16T09:59:15Z",
    "updated_at": "2020-01-16T13:20:31Z",
    "closed_at": "2020-01-16T13:03:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "As you probably saw the chrome console warning that says as below:\r\n> A cookie associated with a cross-site resource at <URL> was set without the `SameSite` attribute. A future release of Chrome will only deliver cookies with cross-site requests if they are set with `SameSite=None` and `Secure`. You can review cookies in developer tools under Application>Storage>Cookies and see more details at <URL> and <URL>.\r\nThis console warning is not an error or an actual problem — Chrome is just spreading the word about this new standard to increase developer adoption.\r\n\r\nWhen I trying to set `sameSite: 'Secure',` for cookie as opt I get an error that says:\r\n> TypeError: option sameSite is invalid",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4159/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4159/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4158",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4158/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4158/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4158/events",
    "html_url": "https://github.com/expressjs/express/issues/4158",
    "id": 549348215,
    "node_id": "MDU6SXNzdWU1NDkzNDgyMTU=",
    "number": 4158,
    "title": "resp.json(obj) ==> how to determine how many bytes were sent ?",
    "user": {
      "login": "ralfhauser",
      "id": 1681677,
      "node_id": "MDQ6VXNlcjE2ODE2Nzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1681677?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ralfhauser",
      "html_url": "https://github.com/ralfhauser",
      "followers_url": "https://api.github.com/users/ralfhauser/followers",
      "following_url": "https://api.github.com/users/ralfhauser/following{/other_user}",
      "gists_url": "https://api.github.com/users/ralfhauser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ralfhauser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ralfhauser/subscriptions",
      "organizations_url": "https://api.github.com/users/ralfhauser/orgs",
      "repos_url": "https://api.github.com/users/ralfhauser/repos",
      "events_url": "https://api.github.com/users/ralfhauser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ralfhauser/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-01-14T05:49:51Z",
    "updated_at": "2020-01-14T06:19:06Z",
    "closed_at": "2020-01-14T05:58:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In my node server, I use the above command to send objects to the browser.\r\n\r\nI would like to log the size of data sent this way.\r\nUnfortunately, in response.js I see that the content-length header gets removed in some cases.\r\n\r\n==> would it be possible to return an attribute \"bytesSent\" or alike ?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4158/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4158/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4157",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4157/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4157/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4157/events",
    "html_url": "https://github.com/expressjs/express/issues/4157",
    "id": 548829657,
    "node_id": "MDU6SXNzdWU1NDg4Mjk2NTc=",
    "number": 4157,
    "title": "How to recover the modification of Middleware",
    "user": {
      "login": "wll8",
      "id": 28223260,
      "node_id": "MDQ6VXNlcjI4MjIzMjYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/28223260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wll8",
      "html_url": "https://github.com/wll8",
      "followers_url": "https://api.github.com/users/wll8/followers",
      "following_url": "https://api.github.com/users/wll8/following{/other_user}",
      "gists_url": "https://api.github.com/users/wll8/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wll8/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wll8/subscriptions",
      "organizations_url": "https://api.github.com/users/wll8/orgs",
      "repos_url": "https://api.github.com/users/wll8/repos",
      "events_url": "https://api.github.com/users/wll8/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wll8/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-01-13T10:17:14Z",
    "updated_at": "2020-01-18T14:04:20Z",
    "closed_at": "2020-01-18T14:04:19Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "# How to recover the modification of Middleware ?\r\nI'm using the proxy function, but before the proxy, I want to use middleware to get the content in the body easily\r\n\r\n``` js\r\nlet REQ_RAW = {}\r\nserver.use((req, res, next) => {\r\n  REQ_RAW = cloneDeep(req)\r\n  next()\r\n})\r\n\r\nserver.use(middlewares) // I want to get the parsed content here, e.g. bodyParser\r\nserver.use((req, res, next) => {\r\n  req = REQ_RAW\r\n  next()\r\n})\r\n\r\n// server.use(other)  \r\n// Then use the `original request` to continue execution, such as proxy\r\n// In fact, the req obtained here is the content processed by middlewares middleware\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4157/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4157/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4156",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4156/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4156/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4156/events",
    "html_url": "https://github.com/expressjs/express/pull/4156",
    "id": 548330141,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzYxNjU0MjUy",
    "number": 4156,
    "title": "docs: request for triager role for g-rath",
    "user": {
      "login": "G-Rath",
      "id": 3151613,
      "node_id": "MDQ6VXNlcjMxNTE2MTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3151613?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/G-Rath",
      "html_url": "https://github.com/G-Rath",
      "followers_url": "https://api.github.com/users/G-Rath/followers",
      "following_url": "https://api.github.com/users/G-Rath/following{/other_user}",
      "gists_url": "https://api.github.com/users/G-Rath/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/G-Rath/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/G-Rath/subscriptions",
      "organizations_url": "https://api.github.com/users/G-Rath/orgs",
      "repos_url": "https://api.github.com/users/G-Rath/repos",
      "events_url": "https://api.github.com/users/G-Rath/events{/privacy}",
      "received_events_url": "https://api.github.com/users/G-Rath/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2020-01-10T22:57:38Z",
    "updated_at": "2020-07-11T00:49:18Z",
    "closed_at": "2020-07-11T00:49:18Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4156",
      "html_url": "https://github.com/expressjs/express/pull/4156",
      "diff_url": "https://github.com/expressjs/express/pull/4156.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4156.patch",
      "merged_at": null
    },
    "body": "I have read and understood the project's Contributing guide.\r\nI also have read and understood the process and best practices around Express triaging.\r\n\r\nI request for a triager role for the below orgs:\r\n\r\njshttp\r\npillarjs\r\nexpress",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4156/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4156/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4155",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4155/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4155/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4155/events",
    "html_url": "https://github.com/expressjs/express/pull/4155",
    "id": 546645308,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzYwMjgyMTky",
    "number": 4155,
    "title": "fixed response jsonp deprecate, comment",
    "user": {
      "login": "khsiea",
      "id": 7071141,
      "node_id": "MDQ6VXNlcjcwNzExNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7071141?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/khsiea",
      "html_url": "https://github.com/khsiea",
      "followers_url": "https://api.github.com/users/khsiea/followers",
      "following_url": "https://api.github.com/users/khsiea/following{/other_user}",
      "gists_url": "https://api.github.com/users/khsiea/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/khsiea/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/khsiea/subscriptions",
      "organizations_url": "https://api.github.com/users/khsiea/orgs",
      "repos_url": "https://api.github.com/users/khsiea/repos",
      "events_url": "https://api.github.com/users/khsiea/events{/privacy}",
      "received_events_url": "https://api.github.com/users/khsiea/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/18",
      "html_url": "https://github.com/expressjs/express/milestone/18",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/18/labels",
      "id": 5234171,
      "node_id": "MDk6TWlsZXN0b25lNTIzNDE3MQ==",
      "number": 18,
      "title": "4.18",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 15,
      "state": "closed",
      "created_at": "2020-03-24T23:16:48Z",
      "updated_at": "2022-04-24T22:50:58Z",
      "due_on": null,
      "closed_at": "2022-04-24T22:50:58Z"
    },
    "comments": 1,
    "created_at": "2020-01-08T04:58:37Z",
    "updated_at": "2020-05-20T23:49:20Z",
    "closed_at": "2020-05-20T23:49:20Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4155",
      "html_url": "https://github.com/expressjs/express/pull/4155",
      "diff_url": "https://github.com/expressjs/express/pull/4155.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4155.patch",
      "merged_at": "2020-05-20T23:49:20Z"
    },
    "body": "fixed response jsonp deprecate and comment ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4155/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4155/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4154",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4154/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4154/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4154/events",
    "html_url": "https://github.com/expressjs/express/issues/4154",
    "id": 546230376,
    "node_id": "MDU6SXNzdWU1NDYyMzAzNzY=",
    "number": 4154,
    "title": "We found req information not match the err catch by error handle middleware",
    "user": {
      "login": "maweiyi",
      "id": 8455004,
      "node_id": "MDQ6VXNlcjg0NTUwMDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8455004?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maweiyi",
      "html_url": "https://github.com/maweiyi",
      "followers_url": "https://api.github.com/users/maweiyi/followers",
      "following_url": "https://api.github.com/users/maweiyi/following{/other_user}",
      "gists_url": "https://api.github.com/users/maweiyi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maweiyi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maweiyi/subscriptions",
      "organizations_url": "https://api.github.com/users/maweiyi/orgs",
      "repos_url": "https://api.github.com/users/maweiyi/repos",
      "events_url": "https://api.github.com/users/maweiyi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maweiyi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-01-07T11:24:06Z",
    "updated_at": "2020-03-24T05:21:52Z",
    "closed_at": "2020-03-24T05:21:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I use domain to catch the error\r\n\r\n```\r\nvar createDomain = require('domain').create\r\n function(req, res, next) {\r\n  var businessName = req.domain;\r\n  var domain = createDomain();\r\n  domain.id = req.id;\r\n  domain.add(req);\r\n  domain.add(res);\r\n  allModels.forEach(function(mongooseModel) {\r\n    if (typeof(mongooseModel) == 'function' && mongooseModel.length == 1) {\r\n      domain.add(mongooseModel(businessName));\r\n    } else {\r\n      domain.add(mongooseModel);\r\n    }    \r\n  })\r\n  domain.run(next);\r\n  domain.on('error', function(err) {\r\n    next(err);\r\n  });\r\n```\r\nand this function as a middleware for app.use before error handle\r\n\r\nbut in the error handle middleware the req don't match the error\r\n```\r\napp.use(function(err, req, res, next) {\r\n    errorHandler.handleUncaught(err, req, server);\r\n  });\r\n```\r\nThank you for any help.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4154/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4154/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4153",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4153/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4153/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4153/events",
    "html_url": "https://github.com/expressjs/express/issues/4153",
    "id": 545461020,
    "node_id": "MDU6SXNzdWU1NDU0NjEwMjA=",
    "number": 4153,
    "title": "Confusion when using \"url params\" and paths in \"src\" attributes on images.",
    "user": {
      "login": "LautaroJayat",
      "id": 48366106,
      "node_id": "MDQ6VXNlcjQ4MzY2MTA2",
      "avatar_url": "https://avatars.githubusercontent.com/u/48366106?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LautaroJayat",
      "html_url": "https://github.com/LautaroJayat",
      "followers_url": "https://api.github.com/users/LautaroJayat/followers",
      "following_url": "https://api.github.com/users/LautaroJayat/following{/other_user}",
      "gists_url": "https://api.github.com/users/LautaroJayat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LautaroJayat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LautaroJayat/subscriptions",
      "organizations_url": "https://api.github.com/users/LautaroJayat/orgs",
      "repos_url": "https://api.github.com/users/LautaroJayat/repos",
      "events_url": "https://api.github.com/users/LautaroJayat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LautaroJayat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-01-05T20:10:51Z",
    "updated_at": "2020-01-05T22:56:00Z",
    "closed_at": "2020-01-05T20:20:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "# EDIT:\r\n\r\nThis issue was created to comunicate a problem that I was having with express and had no clue of why it was happening. The answer from @dougwilson was quite satisfactory.\r\nAlthough, I decided to change a little the repo that I used as ilustration for what was happening and keep-it in Github just in case of anyone having the same confussion as me.\r\n\r\n* The answer from @dougwilson is the following: \r\n> Hello!\r\n> \r\n> This is not a bug, but a behavior of how web browsers interpret URLs on web pages. In your example, you are rendering a page at the URL of `/bug/on`. Then on that page, there are images with the relative URL of `bug1.jpeg`. The web browser needs to determine the absolute path to make a HTTP request. It does that by seeing that since you have to `/` before the jpeg path and no `/` after the on, then it makes it a sibling of the `on` file, resolving to `/bug/bug1.jpeg`. Since you defined the route of `/bug/:on`, that matches `/bug/bug1.jpeg` and calls that.\r\n> \r\n> When you use `/bug1.jpeg` in your image, that tells the web browser that you want it to resolve at the base of the server, so it resolves it to `/bug1.jpeg`, which does not match your `/bug/:on` route.\r\n> \r\n> If you have suggestions for what Express.js should specifically be doing (i.e. perhaps a code change in express), as far as I can tell, this is just perhaps confusion for how web browsers resolve URLs in order to load resources and not a bug in express. Please correct me if so and we can re-open this issue.\r\n----------------------------------\r\n# Original issue:\r\n\r\nI was having problems with some <img> tags that wasn't correctly written.\r\nAfter a little of experimentation I found that a handler function was looping for each image tag with the same problem, making the server do unnecessary work.\r\nI dont know if is a knwon problem, or if it isn't a problem at all, but I prefer to advice, [link a repo with the bug's proof of concept](https://github.com/LautaroJayat/express-handlebars-little-bug) and write it's readme to give aditional information.\r\n\r\n# Express-Handlebars Bug\r\n\r\n## Index \r\n\r\n* [Context](##Context)\r\n\r\n* [How Reproduce the Bug](##How)\r\n\r\n* [The Bug](##The)\r\n\r\n* [Operations that triggers the bug](##Operations)\r\n\r\n* [List of operations that don't trigger the bug](##List)\r\n\r\n\r\n\r\n## Context \r\n\r\n```\r\n* Node Version:....................10.17.0\r\n\r\n* NPM Version:.....................6.11.3\r\n\r\n* Express Version:.................4.17.1\r\n\r\n* Express-Handlebars Version:......3.1.0 \r\n```\r\n\r\nThis bug involves the ```res.render()``` function that express provides in order to render one special case of a Handlebars view.\r\n\r\nIn this proof of concept a function get triggered many times when someone hits and end-point that is handleded with: \r\n```\r\nrouter.get('/bug/:on', async (req, res) => {\r\n    console.log('Im a Bug!')\r\n    res.render('bug');\r\n\r\n});\r\n```\r\n\r\nwhere **```'/bug/:on```**  is written in order to tell **express** that we are using **params** that will be pared and stored in ```req.params``` object;\r\n\r\nThe problem occurs when you hit that kind of url and the function tries to render a view with an image coded like this:\r\n```\r\n<img src=\"bug1.jpeg\" alt=\"\">\r\n```\r\nTo be more specific: an ```<img>``` tag with its **src=\"\"** atribute written without the **\"/\"** behind the name of the surce file, having the image in the root directory of the statics files that we previously setted in Express with the following piece of code:\r\n`app.use(express.static(path.join(__dirname, 'images/')));`.\r\n\r\n## The Bug\r\n\r\nWhen you hit that specific route, NodeJS will run the controller of that end-point one time for each image without **\"/\"**.\r\n\r\nI found that this only happens when the browser tries to create and print the actual image.\r\n\r\n## How to reproduce this bug\r\n\r\n\r\n### 1. Get the files\r\nDownload this repo from https://github.com/LautaroJayat/express-img-path-little-problem.git .\r\n\r\n### 2. Build\r\nIf it's the first time, you can build and start the server by hitting `npm run install-bug` on your bash terminal.\r\n\r\n### 3. Run\r\nIf you allready has all dependencies installed and want only to run the server type `npm run bug`\r\n\r\n### 4. Sart the server\r\nAfter that, you will have this message in the terminal: `Server on port 3000`.\r\n\r\n### 5. Trigger the bug\r\n\r\n* Open your browser and go to `localhost:3000/bug/on` (or any other endpoint after \"`bug/`\"). \r\n\r\n* That will trigger the following piece of code:\r\n    ```\r\n    router.get('/bug/:on', async (req, res) => {\r\n      console.log('Im a Bug!')\r\n      res.render('bug');\r\n    });\r\n    ```\r\n* Go to the terminal where NodeJS is running the server and you will find not one, but 5 outputsof the `console.log('Im a Bug!)`. The terminal would look like this:\r\n    ```\r\n    > node src/index.js\r\n    Server on port 3000\r\n    Im a Bug!\r\n    Im a Bug!\r\n    Im a Bug!\r\n    Im a Bug!\r\n    Im a Bug!\r\n    ```\r\n\r\n### 7. Without params\r\nIf you hit the following end-points you won't trigger the bug\r\n\r\n* `localhost:3000/bug`\r\n* `localhost:300/bug2`\r\n\r\n\r\nThe only difference between this two is that lastone has the `<img>` tags with its source atribute startig with a **/** and the first doesn't.\r\nNotice that the output is the same:\r\n```\r\n> node src/index.js\r\n\r\nServer on port 3000\r\nIm Not a Bug!\r\n```\r\nAnd also the handlers are almost the same, they only differs in the view that they are rendering:\r\n\r\n```\r\nrouter.get('/bug', async (req, res) => {\r\n    console.log('Im Not a Bug!')\r\n    res.render('bug');\r\n\r\n});\r\n\r\nrouter.get('/bug2', async (req, res) => {\r\n    console.log('Im Not a Bug!')\r\n    res.render('noBug');\r\n\r\n});\r\n```\r\n\r\n\r\n### 8. With params but with correctly written tags\r\n Notice that the bug doesent appears when you call a simmilar route (that uses *params*) but has its *handlebars* file written correctly (with `<img src\"/....\">`);\r\n* Go to `localhost:3000/bug2/on`.\r\n\r\n* This will trigger the following function:\r\n    ```\r\n    router.get('/bug2/:on', async (req, res) => {\r\n        console.log('Im Not a Bug!')\r\n        res.render('noBug');    \r\n    });\r\n    ```\r\n    \r\n    with this output:\r\n\r\n    ```\r\n    > node src/index.js\r\n\r\n    Server on port 3000\r\n    Im Not a Bug!\r\n    ```\r\n\r\n### 9. Checking with the debugger\r\nI found that if you check with the debugger you can see how the same operation gets executed once per image that hasn't got the **src** atributte with the slash preceding the filename.\r\n\r\n## Operations that triggers the bug\r\n* Trying to acces `localhost:3000/bug/on` on Chrome 78.0.3904.108 (Build oficial) (64 bits)\r\n* Trying to acces `localhost:3000/bug/on` on Firefox 68.3.0esr (64-bit)\r\n* Trying to acces `localhost:3000/bug/on` on Brave 1.1.23 Chromium: 79.0.3945.88 (Official Build) (64-bit)\r\n\r\n## List of operations that doesent trigger the bugs\r\n* Hitting `curl localhost:3000/bug/on` with curl 7.52.1 (x86_64-pc-linux-gnu)\r\n* Hitting `wget localhost:3000/bug/on` on GNU Wget 1.18;",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4153/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4153/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4152",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4152/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4152/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4152/events",
    "html_url": "https://github.com/expressjs/express/pull/4152",
    "id": 545253000,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzU5MTkxMjI5",
    "number": 4152,
    "title": "Readme Changed Testing",
    "user": {
      "login": "SHAHLIPI58",
      "id": 25177724,
      "node_id": "MDQ6VXNlcjI1MTc3NzI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25177724?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SHAHLIPI58",
      "html_url": "https://github.com/SHAHLIPI58",
      "followers_url": "https://api.github.com/users/SHAHLIPI58/followers",
      "following_url": "https://api.github.com/users/SHAHLIPI58/following{/other_user}",
      "gists_url": "https://api.github.com/users/SHAHLIPI58/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SHAHLIPI58/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SHAHLIPI58/subscriptions",
      "organizations_url": "https://api.github.com/users/SHAHLIPI58/orgs",
      "repos_url": "https://api.github.com/users/SHAHLIPI58/repos",
      "events_url": "https://api.github.com/users/SHAHLIPI58/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SHAHLIPI58/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-01-04T07:23:25Z",
    "updated_at": "2020-01-04T17:00:56Z",
    "closed_at": "2020-01-04T07:30:02Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4152",
      "html_url": "https://github.com/expressjs/express/pull/4152",
      "diff_url": "https://github.com/expressjs/express/pull/4152.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4152.patch",
      "merged_at": null
    },
    "body": "Testing",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4152/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4152/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4151",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4151/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4151/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4151/events",
    "html_url": "https://github.com/expressjs/express/pull/4151",
    "id": 545213952,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzU5MTYyMzA3",
    "number": 4151,
    "title": "docs: Instruct user to ensure package.json exists",
    "user": {
      "login": "glennfaison",
      "id": 17485270,
      "node_id": "MDQ6VXNlcjE3NDg1Mjcw",
      "avatar_url": "https://avatars.githubusercontent.com/u/17485270?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glennfaison",
      "html_url": "https://github.com/glennfaison",
      "followers_url": "https://api.github.com/users/glennfaison/followers",
      "following_url": "https://api.github.com/users/glennfaison/following{/other_user}",
      "gists_url": "https://api.github.com/users/glennfaison/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glennfaison/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glennfaison/subscriptions",
      "organizations_url": "https://api.github.com/users/glennfaison/orgs",
      "repos_url": "https://api.github.com/users/glennfaison/repos",
      "events_url": "https://api.github.com/users/glennfaison/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glennfaison/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      },
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2020-01-04T00:14:58Z",
    "updated_at": "2020-03-25T21:07:46Z",
    "closed_at": "2020-03-25T21:07:40Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4151",
      "html_url": "https://github.com/expressjs/express/pull/4151",
      "diff_url": "https://github.com/expressjs/express/pull/4151.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4151.patch",
      "merged_at": null
    },
    "body": "This is done in reference to issue #4049",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4151/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4151/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4150",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4150/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4150/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4150/events",
    "html_url": "https://github.com/expressjs/express/issues/4150",
    "id": 545211999,
    "node_id": "MDU6SXNzdWU1NDUyMTE5OTk=",
    "number": 4150,
    "title": "[TypeError] Ionic React",
    "user": {
      "login": "lieblinger",
      "id": 10740088,
      "node_id": "MDQ6VXNlcjEwNzQwMDg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/10740088?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lieblinger",
      "html_url": "https://github.com/lieblinger",
      "followers_url": "https://api.github.com/users/lieblinger/followers",
      "following_url": "https://api.github.com/users/lieblinger/following{/other_user}",
      "gists_url": "https://api.github.com/users/lieblinger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lieblinger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lieblinger/subscriptions",
      "organizations_url": "https://api.github.com/users/lieblinger/orgs",
      "repos_url": "https://api.github.com/users/lieblinger/repos",
      "events_url": "https://api.github.com/users/lieblinger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lieblinger/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-01-04T00:03:59Z",
    "updated_at": "2020-01-04T00:39:06Z",
    "closed_at": "2020-01-04T00:38:43Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Working on an ionic react app and would like to use express with the following code:\r\n```\r\nconst express = require('express');\r\nconst cors = require('cors');\r\nconst app = express();\r\n\r\n  app.use(cors({\r\n    origin:['http://localhost:8080'],\r\n    methods:['GET','POST'],\r\n    credentials: true // enable set cookie\r\n}));\r\n```\r\n\r\nThe following error occurs when I'm accessing the project via chrome:\r\n```\r\nreact-dom.development.js:27756 Download the React DevTools for a better development experience: https://fb.me/react-devtools\r\nresponse.js:58 Uncaught TypeError: Cannot read property 'prototype' of undefined\r\n    at Object.<anonymous> (response.js:58)\r\n    at Object../node_modules/express/lib/response.js (response.js:1111)\r\n    at __webpack_require__ (bootstrap:790)\r\n    at fn (bootstrap:150)\r\n    at Object../node_modules/express/lib/express.js (express.js:27)\r\n    at __webpack_require__ (bootstrap:790)\r\n    at fn (bootstrap:150)\r\n    at Object../node_modules/express/index.js (index.js:10)\r\n    at __webpack_require__ (bootstrap:790)\r\n    at fn (bootstrap:150)\r\n    at Module../src/pages/Tab1.tsx (Tab1.tsx:21)\r\n    at __webpack_require__ (bootstrap:790)\r\n    at fn (bootstrap:150)\r\n    at Module../src/App.tsx ( groupOptions: {} namespace object:25)\r\n    at __webpack_require__ (bootstrap:790)\r\n    at fn (bootstrap:150)\r\n    at Module../src/index.tsx (App.tsx:68)\r\n    at __webpack_require__ (bootstrap:790)\r\n    at fn (bootstrap:150)\r\n    at Object.0 (variables.css?6ef5:37)\r\n    at __webpack_require__ (bootstrap:790)\r\n    at checkDeferredModules (bootstrap:45)\r\n    at Array.webpackJsonpCallback [as push] (bootstrap:32)\r\n    at main.chunk.js:1\r\n(anonymous) @ response.js:58\r\n./node_modules/express/lib/response.js @ response.js:1111\r\n__webpack_require__ @ bootstrap:790\r\nfn @ bootstrap:150\r\n./node_modules/express/lib/express.js @ express.js:27\r\n__webpack_require__ @ bootstrap:790\r\nfn @ bootstrap:150\r\n./node_modules/express/index.js @ index.js:10\r\n__webpack_require__ @ bootstrap:790\r\nfn @ bootstrap:150\r\n./src/pages/Tab1.tsx @ Tab1.tsx:21\r\n__webpack_require__ @ bootstrap:790\r\nfn @ bootstrap:150\r\n./src/App.tsx @  groupOptions: {} namespace object:25\r\n__webpack_require__ @ bootstrap:790\r\nfn @ bootstrap:150\r\n./src/index.tsx @ App.tsx:68\r\n__webpack_require__ @ bootstrap:790\r\nfn @ bootstrap:150\r\n0 @ variables.css?6ef5:37\r\n__webpack_require__ @ bootstrap:790\r\ncheckDeferredModules @ bootstrap:45\r\nwebpackJsonpCallback @ bootstrap:32\r\n(anonymous) @ main.chunk.js:1\r\nwebpackHotDevClient.js:120 ./node_modules/express/lib/view.js\r\nCritical dependency: the request of a dependency is an expression\r\nprintWarnings @ webpackHotDevClient.js:120\r\nhandleWarnings @ webpackHotDevClient.js:125\r\npush../node_modules/react-dev-utils/webpackHotDevClient.js.connection.onmessage @ webpackHotDevClient.js:190\r\npush../node_modules/sockjs-client/lib/event/eventtarget.js.EventTarget.dispatchEvent @ eventtarget.js:56\r\n(anonymous) @ main.js:283\r\npush../node_modules/sockjs-client/lib/main.js.SockJS._transportMessage @ main.js:281\r\npush../node_modules/sockjs-client/lib/event/emitter.js.EventEmitter.emit @ emitter.js:53\r\nWebSocketTransport.ws.onmessage @ websocket.js:36\r\nwebpackHotDevClient.js:65 The development server has disconnected.\r\nRefresh the page if necessary.\r\n```\r\n\r\nVersion of express is 4.17.1.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4150/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4150/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4149",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4149/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4149/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4149/events",
    "html_url": "https://github.com/expressjs/express/issues/4149",
    "id": 544852932,
    "node_id": "MDU6SXNzdWU1NDQ4NTI5MzI=",
    "number": 4149,
    "title": "Can't see template changes until server is restarted",
    "user": {
      "login": "byeze",
      "id": 7424138,
      "node_id": "MDQ6VXNlcjc0MjQxMzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7424138?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/byeze",
      "html_url": "https://github.com/byeze",
      "followers_url": "https://api.github.com/users/byeze/followers",
      "following_url": "https://api.github.com/users/byeze/following{/other_user}",
      "gists_url": "https://api.github.com/users/byeze/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/byeze/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/byeze/subscriptions",
      "organizations_url": "https://api.github.com/users/byeze/orgs",
      "repos_url": "https://api.github.com/users/byeze/repos",
      "events_url": "https://api.github.com/users/byeze/events{/privacy}",
      "received_events_url": "https://api.github.com/users/byeze/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-01-03T05:09:30Z",
    "updated_at": "2020-01-03T16:03:33Z",
    "closed_at": "2020-01-03T05:28:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello, I have create this website with express-generator, the thing is when I change a thing (no matter what) on a templatate, you can't see it reflected until you restart the server.\r\n\r\n**app.js**\r\n```\r\nvar createError = require('http-errors');\r\nvar express = require('express');\r\nvar path = require('path');\r\nvar cookieParser = require('cookie-parser');\r\nvar logger = require('morgan');\r\n\r\nvar indexRouter = require('./routes/index');\r\nvar usersRouter = require('./routes/users');\r\n\r\nvar app = express();\r\n\r\n// view engine setup\r\napp.set('views', path.join(__dirname, 'views'));\r\napp.set('view engine', 'twig');\r\n\r\napp.use(logger('dev'));\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\napp.use(express.static(path.join(__dirname, 'public')));\r\n\r\napp.use('/', indexRouter);\r\napp.use('/users', usersRouter);\r\n\r\n// catch 404 and forward to error handler\r\napp.use(function(req, res, next) {\r\n  next(createError(404));\r\n});\r\n\r\n// error handler\r\napp.use(function(err, req, res, next) {\r\n  // set locals, only providing error in development\r\n  res.locals.message = err.message;\r\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\r\n\r\n  // render the error page\r\n  res.status(err.status || 500);\r\n  res.render('error');\r\n});\r\n\r\nmodule.exports = app;\r\n```\r\n\r\n**index.twig**\r\n```\r\n{% extends 'layout.twig' %}\r\n\r\n{% block body %}\r\n\t<div class=\"container\">\r\n\t\t<h1>{{title}}</h1>\r\n\t\t<p>Welcome to {{title}}</p>\r\n\t\t<button class=\"btn btn-primary\">\r\n\t\t\tExample\r\n\t\t</button>\r\n\t</div>\r\n{% endblock %}\r\n```\r\n\r\n**routes/index.js**\r\n```\r\nvar express = require('express');\r\nvar router = express.Router();\r\n\r\n/* GET home page. */\r\nrouter.get('/', function(req, res, next) {\r\n  res.render('index', { title: 'Express' });\r\n});\r\n\r\nmodule.exports = router;\r\n```\r\n\r\nThank you.\r\n\r\n_Node v8.11.1_",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4149/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4149/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4148",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4148/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4148/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4148/events",
    "html_url": "https://github.com/expressjs/express/issues/4148",
    "id": 544845079,
    "node_id": "MDU6SXNzdWU1NDQ4NDUwNzk=",
    "number": 4148,
    "title": "Cannot use res in unhandled errors if produced error with resp.status()",
    "user": {
      "login": "DawnImpulse",
      "id": 10185615,
      "node_id": "MDQ6VXNlcjEwMTg1NjE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10185615?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DawnImpulse",
      "html_url": "https://github.com/DawnImpulse",
      "followers_url": "https://api.github.com/users/DawnImpulse/followers",
      "following_url": "https://api.github.com/users/DawnImpulse/following{/other_user}",
      "gists_url": "https://api.github.com/users/DawnImpulse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DawnImpulse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DawnImpulse/subscriptions",
      "organizations_url": "https://api.github.com/users/DawnImpulse/orgs",
      "repos_url": "https://api.github.com/users/DawnImpulse/repos",
      "events_url": "https://api.github.com/users/DawnImpulse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DawnImpulse/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2020-01-03T04:22:40Z",
    "updated_at": "2020-01-03T16:24:46Z",
    "closed_at": "2020-01-03T16:24:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Issue:\r\nI am using an [unhandled error handler](https://expressjs.com/en/guide/error-handling.html) in express. Now I am facing an issue when I try to send a response (somewhere in the code) and give an undefined status code, it fails as it should and throw an error which is then intercepted by the unhandled error handler.\r\n\r\nEverything is working the way it should except now the unhandled error handler cannot send a response back to user using **res** anymore. It is just skipping over it. \r\n\r\nThe issue only persist when using *undefined status code* in the **res** beforehand.  ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4148/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4148/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4147",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4147/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4147/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4147/events",
    "html_url": "https://github.com/expressjs/express/issues/4147",
    "id": 544644238,
    "node_id": "MDU6SXNzdWU1NDQ2NDQyMzg=",
    "number": 4147,
    "title": "check if express already listening to a port",
    "user": {
      "login": "its-dibo",
      "id": 57308531,
      "node_id": "MDQ6VXNlcjU3MzA4NTMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/57308531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/its-dibo",
      "html_url": "https://github.com/its-dibo",
      "followers_url": "https://api.github.com/users/its-dibo/followers",
      "following_url": "https://api.github.com/users/its-dibo/following{/other_user}",
      "gists_url": "https://api.github.com/users/its-dibo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/its-dibo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/its-dibo/subscriptions",
      "organizations_url": "https://api.github.com/users/its-dibo/orgs",
      "repos_url": "https://api.github.com/users/its-dibo/repos",
      "events_url": "https://api.github.com/users/its-dibo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/its-dibo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2020-01-02T16:16:28Z",
    "updated_at": "2020-01-02T18:48:58Z",
    "closed_at": "2020-01-02T16:19:01Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "```\r\nif(!app.listining()){\r\n  app.listen(..)\r\n}\r\n```\r\nwhat is the equivalent to app.listening() or maybe app.address()\r\n\r\nnote that both `app.listening()` and `app.address` don't actually exist in express.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4147/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4147/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4146",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4146/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4146/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4146/events",
    "html_url": "https://github.com/expressjs/express/issues/4146",
    "id": 544416369,
    "node_id": "MDU6SXNzdWU1NDQ0MTYzNjk=",
    "number": 4146,
    "title": "Resolve method in response.js doesn't seem to work with Windows",
    "user": {
      "login": "daintym0sh",
      "id": 7240424,
      "node_id": "MDQ6VXNlcjcyNDA0MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7240424?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/daintym0sh",
      "html_url": "https://github.com/daintym0sh",
      "followers_url": "https://api.github.com/users/daintym0sh/followers",
      "following_url": "https://api.github.com/users/daintym0sh/following{/other_user}",
      "gists_url": "https://api.github.com/users/daintym0sh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/daintym0sh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daintym0sh/subscriptions",
      "organizations_url": "https://api.github.com/users/daintym0sh/orgs",
      "repos_url": "https://api.github.com/users/daintym0sh/repos",
      "events_url": "https://api.github.com/users/daintym0sh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/daintym0sh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-01-02T00:38:11Z",
    "updated_at": "2020-01-02T00:51:36Z",
    "closed_at": "2020-01-02T00:43:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When running this program in a Windows environment, the /files/:names endpoint fails as a result of the file path being incorrect - though it works fine in a Linux environment. \r\nhttps://github.com/codebycaleb/express-files-example\r\n\r\nAfter debugging, I found that the resolve method in response.js was adding \"c:/\" as a prefix to the path string (~ line 570), which messed things up.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4146/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4146/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4145",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4145/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4145/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4145/events",
    "html_url": "https://github.com/expressjs/express/pull/4145",
    "id": 544351852,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzU4NDgzODQy",
    "number": 4145,
    "title": "docs: Instruct user to ensure package.json exists",
    "user": {
      "login": "glennfaison",
      "id": 17485270,
      "node_id": "MDQ6VXNlcjE3NDg1Mjcw",
      "avatar_url": "https://avatars.githubusercontent.com/u/17485270?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glennfaison",
      "html_url": "https://github.com/glennfaison",
      "followers_url": "https://api.github.com/users/glennfaison/followers",
      "following_url": "https://api.github.com/users/glennfaison/following{/other_user}",
      "gists_url": "https://api.github.com/users/glennfaison/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glennfaison/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glennfaison/subscriptions",
      "organizations_url": "https://api.github.com/users/glennfaison/orgs",
      "repos_url": "https://api.github.com/users/glennfaison/repos",
      "events_url": "https://api.github.com/users/glennfaison/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glennfaison/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-01-01T12:27:50Z",
    "updated_at": "2020-01-20T11:10:57Z",
    "closed_at": "2020-01-20T11:10:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4145",
      "html_url": "https://github.com/expressjs/express/pull/4145",
      "diff_url": "https://github.com/expressjs/express/pull/4145.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4145.patch",
      "merged_at": null
    },
    "body": "This commit is made in reference to issue #4049",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4145/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4145/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4144",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4144/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4144/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4144/events",
    "html_url": "https://github.com/expressjs/express/pull/4144",
    "id": 544289089,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzU4NDM1MDc5",
    "number": 4144,
    "title": "docs: added CHARTER.md",
    "user": {
      "login": "wesleytodd",
      "id": 1027776,
      "node_id": "MDQ6VXNlcjEwMjc3NzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1027776?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesleytodd",
      "html_url": "https://github.com/wesleytodd",
      "followers_url": "https://api.github.com/users/wesleytodd/followers",
      "following_url": "https://api.github.com/users/wesleytodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesleytodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesleytodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesleytodd/subscriptions",
      "organizations_url": "https://api.github.com/users/wesleytodd/orgs",
      "repos_url": "https://api.github.com/users/wesleytodd/repos",
      "events_url": "https://api.github.com/users/wesleytodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesleytodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2019-12-31T23:44:05Z",
    "updated_at": "2020-04-14T20:14:52Z",
    "closed_at": "2020-04-14T20:14:43Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4144",
      "html_url": "https://github.com/expressjs/express/pull/4144",
      "diff_url": "https://github.com/expressjs/express/pull/4144.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4144.patch",
      "merged_at": "2020-04-14T20:14:45Z"
    },
    "body": "As a member for the OpenJS foundation, we are required to have a well defined charter for the project.  I tried to pull it together based on the [template they provide](https://raw.githubusercontent.com/openjs-foundation/cross-project-council/master/PROJECT_CHARTER_TEMPLATE.md) and our existing docs. \r\n\r\nThis is part of the onboarding process: https://github.com/openjs-foundation/project-onboarding/issues/15",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4144/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4144/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4143",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4143/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4143/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4143/events",
    "html_url": "https://github.com/expressjs/express/pull/4143",
    "id": 544285732,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzU4NDMyNTYw",
    "number": 4143,
    "title": "docs: added CODE_OF_CONDUCT.md",
    "user": {
      "login": "wesleytodd",
      "id": 1027776,
      "node_id": "MDQ6VXNlcjEwMjc3NzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1027776?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesleytodd",
      "html_url": "https://github.com/wesleytodd",
      "followers_url": "https://api.github.com/users/wesleytodd/followers",
      "following_url": "https://api.github.com/users/wesleytodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesleytodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesleytodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesleytodd/subscriptions",
      "organizations_url": "https://api.github.com/users/wesleytodd/orgs",
      "repos_url": "https://api.github.com/users/wesleytodd/repos",
      "events_url": "https://api.github.com/users/wesleytodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesleytodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 17,
    "created_at": "2019-12-31T23:09:57Z",
    "updated_at": "2020-04-07T06:23:28Z",
    "closed_at": "2020-04-07T06:23:14Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4143",
      "html_url": "https://github.com/expressjs/express/pull/4143",
      "diff_url": "https://github.com/expressjs/express/pull/4143.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4143.patch",
      "merged_at": "2020-04-07T06:23:17Z"
    },
    "body": "As a member of the Open JS Foundation, we need to add the code of conduct to all project repos.  To get started I wanted to at least get it on the main repo, and then if we are good with this we can automate adding it to the rest.\r\n\r\nThis is part of the project onboarding: https://github.com/openjs-foundation/project-onboarding/issues/15",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4143/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4143/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4142",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4142/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4142/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4142/events",
    "html_url": "https://github.com/expressjs/express/pull/4142",
    "id": 543735759,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzU3OTkwNTI1",
    "number": 4142,
    "title": "refactor: shallow arr clone using fast path",
    "user": {
      "login": "galesky",
      "id": 22508577,
      "node_id": "MDQ6VXNlcjIyNTA4NTc3",
      "avatar_url": "https://avatars.githubusercontent.com/u/22508577?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/galesky",
      "html_url": "https://github.com/galesky",
      "followers_url": "https://api.github.com/users/galesky/followers",
      "following_url": "https://api.github.com/users/galesky/following{/other_user}",
      "gists_url": "https://api.github.com/users/galesky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/galesky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/galesky/subscriptions",
      "organizations_url": "https://api.github.com/users/galesky/orgs",
      "repos_url": "https://api.github.com/users/galesky/repos",
      "events_url": "https://api.github.com/users/galesky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/galesky/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2019-12-30T05:01:25Z",
    "updated_at": "2020-01-04T21:22:54Z",
    "closed_at": "2020-01-04T21:22:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4142",
      "html_url": "https://github.com/expressjs/express/pull/4142",
      "diff_url": "https://github.com/expressjs/express/pull/4142.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4142.patch",
      "merged_at": null
    },
    "body": "Hi, \r\n\r\nThis PR addresses the issue:\r\nhttps://github.com/expressjs/express/issues/4141\r\n\r\nI've opted for using the `Array.from` rather than the Spread operator for reasons such as:\r\n1. https://github.com/eslint/eslint/issues/10307#issuecomment-386453017\r\n2. Both have similar performance\r\n\r\n(poc) benchmark:\r\nhttp://jsben.ch/YCwrg\r\n\r\nReferences:\r\n[Speeding up spread elements](https://v8.dev/blog/spread-elements)\r\nPs. Notice how the current implementation is exactly like the one referenced on the blog post. [Here](https://v8.dev/blog/spread-elements#why-is-(or-were!)-spread-elements-slow%3F)",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4142/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4142/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4141",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4141/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4141/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4141/events",
    "html_url": "https://github.com/expressjs/express/issues/4141",
    "id": 543731656,
    "node_id": "MDU6SXNzdWU1NDM3MzE2NTY=",
    "number": 4141,
    "title": "Request.js implements slow clone array strat for req.is",
    "user": {
      "login": "galesky",
      "id": 22508577,
      "node_id": "MDQ6VXNlcjIyNTA4NTc3",
      "avatar_url": "https://avatars.githubusercontent.com/u/22508577?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/galesky",
      "html_url": "https://github.com/galesky",
      "followers_url": "https://api.github.com/users/galesky/followers",
      "following_url": "https://api.github.com/users/galesky/following{/other_user}",
      "gists_url": "https://api.github.com/users/galesky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/galesky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/galesky/subscriptions",
      "organizations_url": "https://api.github.com/users/galesky/orgs",
      "repos_url": "https://api.github.com/users/galesky/repos",
      "events_url": "https://api.github.com/users/galesky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/galesky/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 163600,
        "node_id": "MDU6TGFiZWwxNjM2MDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-12-30T04:47:48Z",
    "updated_at": "2019-12-30T05:15:27Z",
    "closed_at": "2019-12-30T04:49:25Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\r\n\r\nI was reading the code that implements the `req.is` function here: https://github.com/expressjs/express/blob/e1b45ebd050b6f06aa38cda5aaf0c21708b0c71e/lib/request.js#L284 and noticed it uses an ineficient strategy to _shallow-clone_ the `arguments` array;\r\n\r\nAs per V8 7.2, it is possible to use Spread or `Array.from` to the same intent, but with up to 18x the current performance;  [V8's Speeding up spread elements](https://v8.dev/blog/spread-elements);\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4141/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4141/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4140",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4140/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4140/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4140/events",
    "html_url": "https://github.com/expressjs/express/issues/4140",
    "id": 542382415,
    "node_id": "MDU6SXNzdWU1NDIzODI0MTU=",
    "number": 4140,
    "title": "4.18.0 release",
    "user": {
      "login": "DanielRuf",
      "id": 827205,
      "node_id": "MDQ6VXNlcjgyNzIwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/827205?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DanielRuf",
      "html_url": "https://github.com/DanielRuf",
      "followers_url": "https://api.github.com/users/DanielRuf/followers",
      "following_url": "https://api.github.com/users/DanielRuf/following{/other_user}",
      "gists_url": "https://api.github.com/users/DanielRuf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DanielRuf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DanielRuf/subscriptions",
      "organizations_url": "https://api.github.com/users/DanielRuf/orgs",
      "repos_url": "https://api.github.com/users/DanielRuf/repos",
      "events_url": "https://api.github.com/users/DanielRuf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DanielRuf/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 21,
    "created_at": "2019-12-25T20:25:17Z",
    "updated_at": "2019-12-28T09:27:59Z",
    "closed_at": "2019-12-25T20:41:25Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "It seems there was once 4.18.0 but it doesn't exist anymore.\r\n\r\nAt least we have an entry in our lockfile.\r\n\r\n\r\n```\r\nexpress@^4.16.3, express@^4.17.1:\r\n  version \"4.18.0\"\r\n  resolved \"https://registry.verdaccio.org/express/-/express-4.18.0.tgz#be2f777085cfe02c35a102f7c2ec0b0607488feb\"\r\n  integrity sha512-lRt69EvHaSDr9EkmDTGtcMROHo6M+2zy6yNusWD+1dbAgvte15N62ZYIcBy7BU14yS7msjwwpSQ9ssTCKkNqWg==\r\n```\r\n\r\nWhat happened there?\r\n\r\nhttps://github.com/verdaccio/verdaccio/issues/1484",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4140/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4140/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4139",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4139/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4139/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4139/events",
    "html_url": "https://github.com/expressjs/express/issues/4139",
    "id": 542242839,
    "node_id": "MDU6SXNzdWU1NDIyNDI4Mzk=",
    "number": 4139,
    "title": "Question: Can express run on TinyWeb?",
    "user": {
      "login": "johnyradio",
      "id": 6564280,
      "node_id": "MDQ6VXNlcjY1NjQyODA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6564280?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johnyradio",
      "html_url": "https://github.com/johnyradio",
      "followers_url": "https://api.github.com/users/johnyradio/followers",
      "following_url": "https://api.github.com/users/johnyradio/following{/other_user}",
      "gists_url": "https://api.github.com/users/johnyradio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johnyradio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johnyradio/subscriptions",
      "organizations_url": "https://api.github.com/users/johnyradio/orgs",
      "repos_url": "https://api.github.com/users/johnyradio/repos",
      "events_url": "https://api.github.com/users/johnyradio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johnyradio/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-12-25T03:15:10Z",
    "updated_at": "2019-12-25T03:19:09Z",
    "closed_at": "2019-12-25T03:19:04Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Can express run on TinyWeb?\r\n\r\nhttps://www.ritlabs.com/en/products/tinyweb/",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4139/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4139/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4138",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4138/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4138/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4138/events",
    "html_url": "https://github.com/expressjs/express/issues/4138",
    "id": 541339446,
    "node_id": "MDU6SXNzdWU1NDEzMzk0NDY=",
    "number": 4138,
    "title": "res.send(Buffer.from(someString)) overwriting Content-Type response header",
    "user": {
      "login": "dylan-hart",
      "id": 13597156,
      "node_id": "MDQ6VXNlcjEzNTk3MTU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/13597156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dylan-hart",
      "html_url": "https://github.com/dylan-hart",
      "followers_url": "https://api.github.com/users/dylan-hart/followers",
      "following_url": "https://api.github.com/users/dylan-hart/following{/other_user}",
      "gists_url": "https://api.github.com/users/dylan-hart/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dylan-hart/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dylan-hart/subscriptions",
      "organizations_url": "https://api.github.com/users/dylan-hart/orgs",
      "repos_url": "https://api.github.com/users/dylan-hart/repos",
      "events_url": "https://api.github.com/users/dylan-hart/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dylan-hart/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-12-21T15:37:07Z",
    "updated_at": "2019-12-21T15:59:51Z",
    "closed_at": "2019-12-21T15:59:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I've got this express (4.17.1) app running on Node.js (12.14.0):\r\n\r\n```javascript\r\nconst express = require('express')\r\nconst https = require('https')\r\nconst http = require('http')\r\n\r\nconst app = express()\r\n\r\nconst JSON_STRING = `{\r\n    \"associatedApplications\": [\r\n        {\r\n            \"applicationId\": \"abcdef\"\r\n        }\r\n    ]\r\n}`\r\n\r\n// Serve .json file.\r\napp.use('/my-json.json', (req, res, next) => {\r\n    res.set('Content-Type', 'application/json')\r\n    res.send(Buffer.from(JSON_STRING))\r\n})\r\n\r\n// Configure SSL.\r\nconst https_options = {\r\n  key: ...,\r\n  cert: ...,\r\n  ca: [\r\n     ...\r\n  ]\r\n}\r\n\r\n// Make https server.\r\nconst https_server = https.createServer(https_options, app)\r\nhttps_server.listen(443)\r\n\r\n// Make http server.\r\nconst http_server = http.createServer(app)\r\nhttp_server.listen(80)\r\n```\r\n\r\nIn serving the .json file, I am trying to set the `Content-Type` response header to `application/json`, but Express appears to be overwriting it with `application/json; charset=utf-8`.\r\n\r\nThis appears to be normal behavior usually, but the [docs](http://expressjs.com/en/api.html#res.send) and [this previous issue](https://github.com/expressjs/express/issues/2654) seem to say that Express shouldn't overwrite the `Content-Type` response header when `res.send()` is passed a `Buffer` object.\r\n\r\nAm I missing something, or is the documentation incorrect? If the documentation is incorrect and this is normal behavior, is there another way I can prevent Express from automatically overwriting the `Content-Type` response header?\r\n\r\nFor extra context: this is an issue related to [configuring an application's publisher domain in Azure](https://docs.microsoft.com/en-us/azure/active-directory/develop/howto-configure-publisher-domain#to-select-a-verified-domain).",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4138/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4138/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4137",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4137/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4137/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4137/events",
    "html_url": "https://github.com/expressjs/express/issues/4137",
    "id": 540789456,
    "node_id": "MDU6SXNzdWU1NDA3ODk0NTY=",
    "number": 4137,
    "title": "can't set headers after they send",
    "user": {
      "login": "jatinkumar03",
      "id": 56574299,
      "node_id": "MDQ6VXNlcjU2NTc0Mjk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/56574299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jatinkumar03",
      "html_url": "https://github.com/jatinkumar03",
      "followers_url": "https://api.github.com/users/jatinkumar03/followers",
      "following_url": "https://api.github.com/users/jatinkumar03/following{/other_user}",
      "gists_url": "https://api.github.com/users/jatinkumar03/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jatinkumar03/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jatinkumar03/subscriptions",
      "organizations_url": "https://api.github.com/users/jatinkumar03/orgs",
      "repos_url": "https://api.github.com/users/jatinkumar03/repos",
      "events_url": "https://api.github.com/users/jatinkumar03/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jatinkumar03/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-12-20T06:12:44Z",
    "updated_at": "2019-12-21T02:55:33Z",
    "closed_at": "2019-12-21T02:55:33Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client\r\n\r\n for(let i =0; i < result.length; i++){\r\n   var user = new User({\r\n\r\n    SNO: result[i].sno,\r\n    First_Name: result[i].first_name,\r\n    Last_Name: result[i].last_name,\r\n    Gender: result[i].gender,\r\n    Country: result[i].country,\r\n    Age: result[i].age,\r\n    Date: result[i].data,\r\n    Id: result[i].id\r\n\r\n})\r\n\r\n    user.save((err, doc) => {\r\n        if (!err)\r\n            res.send(doc);\r\n        else {\r\n            res.json({err});\r\n        }\r\n \r\n    });\r\n    }          ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4137/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 2,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4137/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4136",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4136/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4136/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4136/events",
    "html_url": "https://github.com/expressjs/express/issues/4136",
    "id": 540529991,
    "node_id": "MDU6SXNzdWU1NDA1Mjk5OTE=",
    "number": 4136,
    "title": "Incompatible with path-to-regex ≥ 6",
    "user": {
      "login": "guimard",
      "id": 47256,
      "node_id": "MDQ6VXNlcjQ3MjU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/47256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/guimard",
      "html_url": "https://github.com/guimard",
      "followers_url": "https://api.github.com/users/guimard/followers",
      "following_url": "https://api.github.com/users/guimard/following{/other_user}",
      "gists_url": "https://api.github.com/users/guimard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/guimard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/guimard/subscriptions",
      "organizations_url": "https://api.github.com/users/guimard/orgs",
      "repos_url": "https://api.github.com/users/guimard/repos",
      "events_url": "https://api.github.com/users/guimard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/guimard/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 13,
    "created_at": "2019-12-19T19:59:46Z",
    "updated_at": "2020-01-01T13:02:48Z",
    "closed_at": "2019-12-19T20:01:48Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\r\n\r\nexpress is not compatible with recent path-to-regex. The fix is simple but then test fail:\r\n\r\n```diff\r\ndiff --git a/lib/router/layer.js b/lib/router/layer.js\r\nindex 4dc8e86..cc96d56 100644\r\n--- a/lib/router/layer.js\r\n+++ b/lib/router/layer.js\r\n@@ -13,7 +13,7 @@\r\n  * @private\r\n  */\r\n\r\n-var pathRegexp = require('path-to-regexp');\r\n+const { pathToRegexp } = require('path-to-regexp');\r\n var debug = require('debug')('express:router:layer');\r\n\r\n /**\r\n@@ -42,7 +42,7 @@ function Layer(path, options, fn) {\r\n   this.name = fn.name || '<anonymous>';\r\n   this.params = undefined;\r\n   this.path = undefined;\r\n-  this.regexp = pathRegexp(path, this.keys = [], opts);\r\n+  this.regexp = pathToRegexp(path, this.keys = [], opts);\r\n\r\n   // set fast path flags\r\n   this.regexp.fast_star = path === '*'\r\n```\r\n\r\nCheers,\r\nXavier",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4136/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4136/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4135",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4135/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4135/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4135/events",
    "html_url": "https://github.com/expressjs/express/pull/4135",
    "id": 540466745,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzU1MjcxNDM0",
    "number": 4135,
    "title": "docs: request for triager role for Helio Frota",
    "user": {
      "login": "helio-frota",
      "id": 6443576,
      "node_id": "MDQ6VXNlcjY0NDM1NzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6443576?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/helio-frota",
      "html_url": "https://github.com/helio-frota",
      "followers_url": "https://api.github.com/users/helio-frota/followers",
      "following_url": "https://api.github.com/users/helio-frota/following{/other_user}",
      "gists_url": "https://api.github.com/users/helio-frota/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/helio-frota/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/helio-frota/subscriptions",
      "organizations_url": "https://api.github.com/users/helio-frota/orgs",
      "repos_url": "https://api.github.com/users/helio-frota/repos",
      "events_url": "https://api.github.com/users/helio-frota/events{/privacy}",
      "received_events_url": "https://api.github.com/users/helio-frota/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-12-19T17:58:27Z",
    "updated_at": "2020-01-02T11:37:44Z",
    "closed_at": "2019-12-31T19:17:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4135",
      "html_url": "https://github.com/expressjs/express/pull/4135",
      "diff_url": "https://github.com/expressjs/express/pull/4135.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4135.patch",
      "merged_at": null
    },
    "body": "I have read and understood the project's Contributing guide.\r\nI also have read and understood the process and best practices around Express triaging.\r\nI will help in any way and no particular preferred area of interest yet.\r\n\r\nI request for a triager role for the below orgs:\r\n\r\njshttp\r\npillarjs\r\nexpress\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4135/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4135/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4134",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4134/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4134/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4134/events",
    "html_url": "https://github.com/expressjs/express/issues/4134",
    "id": 539921779,
    "node_id": "MDU6SXNzdWU1Mzk5MjE3Nzk=",
    "number": 4134,
    "title": "add swagger generatior support for Router",
    "user": {
      "login": "dcassiani",
      "id": 16367775,
      "node_id": "MDQ6VXNlcjE2MzY3Nzc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/16367775?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dcassiani",
      "html_url": "https://github.com/dcassiani",
      "followers_url": "https://api.github.com/users/dcassiani/followers",
      "following_url": "https://api.github.com/users/dcassiani/following{/other_user}",
      "gists_url": "https://api.github.com/users/dcassiani/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dcassiani/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dcassiani/subscriptions",
      "organizations_url": "https://api.github.com/users/dcassiani/orgs",
      "repos_url": "https://api.github.com/users/dcassiani/repos",
      "events_url": "https://api.github.com/users/dcassiani/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dcassiani/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-12-18T21:01:17Z",
    "updated_at": "2019-12-19T15:09:29Z",
    "closed_at": "2019-12-18T23:35:30Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Is there a way to export a JSON or YML from my Router routes?\r\n\r\nThere are many swagger-ui around, but they won't scan express router or does need a swagger.json",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4134/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4134/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4133",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4133/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4133/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4133/events",
    "html_url": "https://github.com/expressjs/express/pull/4133",
    "id": 538616858,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzUzNzMxNzI5",
    "number": 4133,
    "title": "docs: request for triager role for mlrawlings",
    "user": {
      "login": "mlrawlings",
      "id": 1958812,
      "node_id": "MDQ6VXNlcjE5NTg4MTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1958812?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mlrawlings",
      "html_url": "https://github.com/mlrawlings",
      "followers_url": "https://api.github.com/users/mlrawlings/followers",
      "following_url": "https://api.github.com/users/mlrawlings/following{/other_user}",
      "gists_url": "https://api.github.com/users/mlrawlings/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mlrawlings/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mlrawlings/subscriptions",
      "organizations_url": "https://api.github.com/users/mlrawlings/orgs",
      "repos_url": "https://api.github.com/users/mlrawlings/repos",
      "events_url": "https://api.github.com/users/mlrawlings/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mlrawlings/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2019-12-16T19:50:01Z",
    "updated_at": "2019-12-31T19:08:28Z",
    "closed_at": "2019-12-31T19:08:27Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4133",
      "html_url": "https://github.com/expressjs/express/pull/4133",
      "diff_url": "https://github.com/expressjs/express/pull/4133.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4133.patch",
      "merged_at": null
    },
    "body": "I have read and understood the project's Contributing guide.\r\nI also have read and understood the process and best practices around Express triaging.\r\n\r\nI request for a triager role for the below orgs:\r\n\r\npillarjs\r\nexpress",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4133/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4133/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4132",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4132/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4132/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4132/events",
    "html_url": "https://github.com/expressjs/express/pull/4132",
    "id": 537932390,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzUzMTg4ODcz",
    "number": 4132,
    "title": "docs: add Jon Church as triager",
    "user": {
      "login": "jonchurch",
      "id": 12915163,
      "node_id": "MDQ6VXNlcjEyOTE1MTYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/12915163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonchurch",
      "html_url": "https://github.com/jonchurch",
      "followers_url": "https://api.github.com/users/jonchurch/followers",
      "following_url": "https://api.github.com/users/jonchurch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonchurch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonchurch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonchurch/subscriptions",
      "organizations_url": "https://api.github.com/users/jonchurch/orgs",
      "repos_url": "https://api.github.com/users/jonchurch/repos",
      "events_url": "https://api.github.com/users/jonchurch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonchurch/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-12-14T16:10:45Z",
    "updated_at": "2019-12-31T19:04:29Z",
    "closed_at": "2019-12-31T19:04:29Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4132",
      "html_url": "https://github.com/expressjs/express/pull/4132",
      "diff_url": "https://github.com/expressjs/express/pull/4132.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4132.patch",
      "merged_at": null
    },
    "body": "I have read and understood the project's Contributing guide.\r\nI also have read and understood the process and best practices around Express triaging.\r\n\r\nI request for a triager role for the below orgs:\r\n\r\njshttp\r\npillarjs\r\nexpress",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4132/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4132/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4131",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4131/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4131/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4131/events",
    "html_url": "https://github.com/expressjs/express/issues/4131",
    "id": 537590888,
    "node_id": "MDU6SXNzdWU1Mzc1OTA4ODg=",
    "number": 4131,
    "title": "[Question] How to set the accepted maximum header size?",
    "user": {
      "login": "rafaelvascc",
      "id": 2701532,
      "node_id": "MDQ6VXNlcjI3MDE1MzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2701532?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rafaelvascc",
      "html_url": "https://github.com/rafaelvascc",
      "followers_url": "https://api.github.com/users/rafaelvascc/followers",
      "following_url": "https://api.github.com/users/rafaelvascc/following{/other_user}",
      "gists_url": "https://api.github.com/users/rafaelvascc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rafaelvascc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rafaelvascc/subscriptions",
      "organizations_url": "https://api.github.com/users/rafaelvascc/orgs",
      "repos_url": "https://api.github.com/users/rafaelvascc/repos",
      "events_url": "https://api.github.com/users/rafaelvascc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rafaelvascc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-12-13T14:50:52Z",
    "updated_at": "2020-03-07T22:29:18Z",
    "closed_at": "2019-12-14T00:05:42Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "Hi, on our application we get JWT access tokens from an external authentication server. \r\nSome of our users have a lot of claims and roles, making the token really large. When we set it into the `Authorization` header and send the request to express we get a response saying the request header is too large.\r\nIs there a way to increase the maximum request header size on express or even make it unlimited?\r\nThanks.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4131/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4131/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4130",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4130/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4130/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4130/events",
    "html_url": "https://github.com/expressjs/express/pull/4130",
    "id": 537357673,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzUyNzI4NzU5",
    "number": 4130,
    "title": "docs: request for triager role for HarshithaKP",
    "user": {
      "login": "HarshithaKP",
      "id": 42645847,
      "node_id": "MDQ6VXNlcjQyNjQ1ODQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/42645847?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/HarshithaKP",
      "html_url": "https://github.com/HarshithaKP",
      "followers_url": "https://api.github.com/users/HarshithaKP/followers",
      "following_url": "https://api.github.com/users/HarshithaKP/following{/other_user}",
      "gists_url": "https://api.github.com/users/HarshithaKP/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/HarshithaKP/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HarshithaKP/subscriptions",
      "organizations_url": "https://api.github.com/users/HarshithaKP/orgs",
      "repos_url": "https://api.github.com/users/HarshithaKP/repos",
      "events_url": "https://api.github.com/users/HarshithaKP/events{/privacy}",
      "received_events_url": "https://api.github.com/users/HarshithaKP/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-12-13T05:34:46Z",
    "updated_at": "2019-12-31T19:00:13Z",
    "closed_at": "2019-12-31T19:00:12Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4130",
      "html_url": "https://github.com/expressjs/express/pull/4130",
      "diff_url": "https://github.com/expressjs/express/pull/4130.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4130.patch",
      "merged_at": null
    },
    "body": "I have read and understood the project's Contributing guide.\r\nI also have read and understood the process and best practices around Express triaging.\r\n\r\nI request for a triager role for the below orgs:\r\n\r\njshttp\r\npillarjs\r\nexpress\r\nRefs: #4055 ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4130/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4130/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4129",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4129/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4129/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4129/events",
    "html_url": "https://github.com/expressjs/express/pull/4129",
    "id": 537169316,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzUyNTczODI0",
    "number": 4129,
    "title": "docs: request for triager role for fed135",
    "user": {
      "login": "fed135",
      "id": 2380281,
      "node_id": "MDQ6VXNlcjIzODAyODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2380281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fed135",
      "html_url": "https://github.com/fed135",
      "followers_url": "https://api.github.com/users/fed135/followers",
      "following_url": "https://api.github.com/users/fed135/following{/other_user}",
      "gists_url": "https://api.github.com/users/fed135/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fed135/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fed135/subscriptions",
      "organizations_url": "https://api.github.com/users/fed135/orgs",
      "repos_url": "https://api.github.com/users/fed135/repos",
      "events_url": "https://api.github.com/users/fed135/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fed135/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-12-12T19:27:57Z",
    "updated_at": "2019-12-31T18:49:12Z",
    "closed_at": "2019-12-31T18:48:22Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4129",
      "html_url": "https://github.com/expressjs/express/pull/4129",
      "diff_url": "https://github.com/expressjs/express/pull/4129.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4129.patch",
      "merged_at": null
    },
    "body": "I have read and understood the project's Contributing guide.\r\nI also have read and understood the process and best practices around Express triaging.\r\n\r\nI request for a triager role for the below orgs:\r\n\r\njshttp\r\npillarjs\r\nexpress\r\nRefs: #4055",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4129/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4129/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4128",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4128/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4128/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4128/events",
    "html_url": "https://github.com/expressjs/express/pull/4128",
    "id": 537107453,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzUyNTIyMjk4",
    "number": 4128,
    "title": "docs: request for triager role for daprahamian",
    "user": {
      "login": "daprahamian",
      "id": 7957497,
      "node_id": "MDQ6VXNlcjc5NTc0OTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7957497?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/daprahamian",
      "html_url": "https://github.com/daprahamian",
      "followers_url": "https://api.github.com/users/daprahamian/followers",
      "following_url": "https://api.github.com/users/daprahamian/following{/other_user}",
      "gists_url": "https://api.github.com/users/daprahamian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/daprahamian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daprahamian/subscriptions",
      "organizations_url": "https://api.github.com/users/daprahamian/orgs",
      "repos_url": "https://api.github.com/users/daprahamian/repos",
      "events_url": "https://api.github.com/users/daprahamian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/daprahamian/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-12-12T17:11:05Z",
    "updated_at": "2019-12-31T18:42:38Z",
    "closed_at": "2019-12-31T18:42:38Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4128",
      "html_url": "https://github.com/expressjs/express/pull/4128",
      "diff_url": "https://github.com/expressjs/express/pull/4128.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4128.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4128/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4128/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4127",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4127/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4127/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4127/events",
    "html_url": "https://github.com/expressjs/express/pull/4127",
    "id": 537106989,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzUyNTIxOTEz",
    "number": 4127,
    "title": "* docs: request for triager role for ghinks",
    "user": {
      "login": "ghinks",
      "id": 5049078,
      "node_id": "MDQ6VXNlcjUwNDkwNzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5049078?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghinks",
      "html_url": "https://github.com/ghinks",
      "followers_url": "https://api.github.com/users/ghinks/followers",
      "following_url": "https://api.github.com/users/ghinks/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghinks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghinks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghinks/subscriptions",
      "organizations_url": "https://api.github.com/users/ghinks/orgs",
      "repos_url": "https://api.github.com/users/ghinks/repos",
      "events_url": "https://api.github.com/users/ghinks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghinks/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-12-12T17:10:07Z",
    "updated_at": "2019-12-31T18:39:12Z",
    "closed_at": "2019-12-31T18:39:12Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4127",
      "html_url": "https://github.com/expressjs/express/pull/4127",
      "diff_url": "https://github.com/expressjs/express/pull/4127.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4127.patch",
      "merged_at": null
    },
    "body": "docs: request for triager role for ghinks",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4127/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4127/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4126",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4126/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4126/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4126/events",
    "html_url": "https://github.com/expressjs/express/pull/4126",
    "id": 537093503,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzUyNTEwNzAy",
    "number": 4126,
    "title": "docs: request for triager role for jake32321",
    "user": {
      "login": "jake32321",
      "id": 7380109,
      "node_id": "MDQ6VXNlcjczODAxMDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7380109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jake32321",
      "html_url": "https://github.com/jake32321",
      "followers_url": "https://api.github.com/users/jake32321/followers",
      "following_url": "https://api.github.com/users/jake32321/following{/other_user}",
      "gists_url": "https://api.github.com/users/jake32321/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jake32321/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jake32321/subscriptions",
      "organizations_url": "https://api.github.com/users/jake32321/orgs",
      "repos_url": "https://api.github.com/users/jake32321/repos",
      "events_url": "https://api.github.com/users/jake32321/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jake32321/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-12-12T16:45:47Z",
    "updated_at": "2020-01-01T02:17:05Z",
    "closed_at": "2019-12-31T18:35:59Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4126",
      "html_url": "https://github.com/expressjs/express/pull/4126",
      "diff_url": "https://github.com/expressjs/express/pull/4126.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4126.patch",
      "merged_at": null
    },
    "body": "I have read and understood the project's Contributing guide.\r\nI also have read and understood the process and best practices around Express triaging.\r\n\r\nI request for a triager role for the below orgs:\r\n\r\njshttp\r\nexpress",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4126/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4126/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4125",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4125/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4125/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4125/events",
    "html_url": "https://github.com/expressjs/express/pull/4125",
    "id": 537089503,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzUyNTA3MzYz",
    "number": 4125,
    "title": "docs: request for triager role for AuggieH",
    "user": {
      "login": "AuggieH",
      "id": 10984794,
      "node_id": "MDQ6VXNlcjEwOTg0Nzk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/10984794?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AuggieH",
      "html_url": "https://github.com/AuggieH",
      "followers_url": "https://api.github.com/users/AuggieH/followers",
      "following_url": "https://api.github.com/users/AuggieH/following{/other_user}",
      "gists_url": "https://api.github.com/users/AuggieH/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AuggieH/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AuggieH/subscriptions",
      "organizations_url": "https://api.github.com/users/AuggieH/orgs",
      "repos_url": "https://api.github.com/users/AuggieH/repos",
      "events_url": "https://api.github.com/users/AuggieH/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AuggieH/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-12-12T16:39:00Z",
    "updated_at": "2019-12-31T18:32:21Z",
    "closed_at": "2019-12-31T18:28:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4125",
      "html_url": "https://github.com/expressjs/express/pull/4125",
      "diff_url": "https://github.com/expressjs/express/pull/4125.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4125.patch",
      "merged_at": null
    },
    "body": "I have read and understood the project's Contributing guide.\r\nI also have read and understood the process and best practices around Express triaging.\r\n\r\nI request for a triager role for the below orgs:\r\n\r\n\r\nexpress",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4125/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4125/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4124",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4124/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4124/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4124/events",
    "html_url": "https://github.com/expressjs/express/pull/4124",
    "id": 537084871,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzUyNTAzNTI0",
    "number": 4124,
    "title": "docs: request for triager role for Sushmeet",
    "user": {
      "login": "Sushmeet",
      "id": 15717984,
      "node_id": "MDQ6VXNlcjE1NzE3OTg0",
      "avatar_url": "https://avatars.githubusercontent.com/u/15717984?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sushmeet",
      "html_url": "https://github.com/Sushmeet",
      "followers_url": "https://api.github.com/users/Sushmeet/followers",
      "following_url": "https://api.github.com/users/Sushmeet/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sushmeet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sushmeet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sushmeet/subscriptions",
      "organizations_url": "https://api.github.com/users/Sushmeet/orgs",
      "repos_url": "https://api.github.com/users/Sushmeet/repos",
      "events_url": "https://api.github.com/users/Sushmeet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sushmeet/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-12-12T16:30:42Z",
    "updated_at": "2019-12-31T18:21:43Z",
    "closed_at": "2019-12-31T18:21:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4124",
      "html_url": "https://github.com/expressjs/express/pull/4124",
      "diff_url": "https://github.com/expressjs/express/pull/4124.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4124.patch",
      "merged_at": null
    },
    "body": "I have read and understood the project's Contributing guide.\r\nI also have read and understood the process and best practices around Express triaging.\r\n\r\nI request for a triager role for the below orgs:\r\n\r\njshttp\r\npillarjs\r\nexpress\r\nRefs: #4055",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4124/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4124/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4123",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4123/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4123/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4123/events",
    "html_url": "https://github.com/expressjs/express/pull/4123",
    "id": 537073910,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzUyNDk0MzU0",
    "number": 4123,
    "title": "Adding myself to contributing",
    "user": {
      "login": "digitaIfabric",
      "id": 14918962,
      "node_id": "MDQ6VXNlcjE0OTE4OTYy",
      "avatar_url": "https://avatars.githubusercontent.com/u/14918962?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/digitaIfabric",
      "html_url": "https://github.com/digitaIfabric",
      "followers_url": "https://api.github.com/users/digitaIfabric/followers",
      "following_url": "https://api.github.com/users/digitaIfabric/following{/other_user}",
      "gists_url": "https://api.github.com/users/digitaIfabric/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/digitaIfabric/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/digitaIfabric/subscriptions",
      "organizations_url": "https://api.github.com/users/digitaIfabric/orgs",
      "repos_url": "https://api.github.com/users/digitaIfabric/repos",
      "events_url": "https://api.github.com/users/digitaIfabric/events{/privacy}",
      "received_events_url": "https://api.github.com/users/digitaIfabric/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-12-12T16:11:30Z",
    "updated_at": "2019-12-31T18:14:51Z",
    "closed_at": "2019-12-31T18:14:51Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4123",
      "html_url": "https://github.com/expressjs/express/pull/4123",
      "diff_url": "https://github.com/expressjs/express/pull/4123.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4123.patch",
      "merged_at": null
    },
    "body": "I have read and understood the project's Contributing guide.\r\nI also have read and understood the process and best practices around Express triaging.\r\n\r\nI request for a triager role for the below orgs:\r\n\r\n- jshttp\r\n- pillarjs\r\n- express",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4123/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4123/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4122",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4122/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4122/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4122/events",
    "html_url": "https://github.com/expressjs/express/pull/4122",
    "id": 537070548,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzUyNDkxNjA3",
    "number": 4122,
    "title": "docs: request for triager role for maxakuru",
    "user": {
      "login": "maxakuru",
      "id": 17409558,
      "node_id": "MDQ6VXNlcjE3NDA5NTU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17409558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maxakuru",
      "html_url": "https://github.com/maxakuru",
      "followers_url": "https://api.github.com/users/maxakuru/followers",
      "following_url": "https://api.github.com/users/maxakuru/following{/other_user}",
      "gists_url": "https://api.github.com/users/maxakuru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maxakuru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maxakuru/subscriptions",
      "organizations_url": "https://api.github.com/users/maxakuru/orgs",
      "repos_url": "https://api.github.com/users/maxakuru/repos",
      "events_url": "https://api.github.com/users/maxakuru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maxakuru/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2019-12-12T16:05:42Z",
    "updated_at": "2019-12-31T18:07:36Z",
    "closed_at": "2019-12-31T18:07:36Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4122",
      "html_url": "https://github.com/expressjs/express/pull/4122",
      "diff_url": "https://github.com/expressjs/express/pull/4122.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4122.patch",
      "merged_at": null
    },
    "body": "I have read and understood the project's Contributing guide.\r\nI also have read and understood the process and best practices around Express triaging.\r\n\r\nI request for a triager role for the below orgs:\r\n\r\njshttp\r\npillarjs\r\nexpress\r\nRefs: #4055 ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4122/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4122/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4121",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4121/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4121/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4121/events",
    "html_url": "https://github.com/expressjs/express/pull/4121",
    "id": 536133375,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzUxNzE4MDMw",
    "number": 4121,
    "title": "Add \"run on replit\" badge",
    "user": {
      "login": "Scoder12",
      "id": 34356756,
      "node_id": "MDQ6VXNlcjM0MzU2NzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/34356756?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Scoder12",
      "html_url": "https://github.com/Scoder12",
      "followers_url": "https://api.github.com/users/Scoder12/followers",
      "following_url": "https://api.github.com/users/Scoder12/following{/other_user}",
      "gists_url": "https://api.github.com/users/Scoder12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Scoder12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Scoder12/subscriptions",
      "organizations_url": "https://api.github.com/users/Scoder12/orgs",
      "repos_url": "https://api.github.com/users/Scoder12/repos",
      "events_url": "https://api.github.com/users/Scoder12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Scoder12/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-12-11T04:18:03Z",
    "updated_at": "2019-12-11T04:24:33Z",
    "closed_at": "2019-12-11T04:24:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4121",
      "html_url": "https://github.com/expressjs/express/pull/4121",
      "diff_url": "https://github.com/expressjs/express/pull/4121.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4121.patch",
      "merged_at": null
    },
    "body": "I think this framework is really cool and I really appreciate the work put into it!\r\n\r\nI added a \"run on repl.it\" badge that allows users to view a demo of express with one click, in their browser on [repl.it](https://repl.it). \r\nThis is how it would look: \r\n![image](https://user-images.githubusercontent.com/34356756/70591113-db2f4880-1b89-11ea-9000-7cc0cd2f1d46.png)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4121/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4121/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4120",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4120/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4120/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4120/events",
    "html_url": "https://github.com/expressjs/express/pull/4120",
    "id": 535938691,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzUxNTU3NTI5",
    "number": 4120,
    "title": "examples: defend from privilege elevation",
    "user": {
      "login": "KoyamaSohei",
      "id": 17472875,
      "node_id": "MDQ6VXNlcjE3NDcyODc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17472875?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KoyamaSohei",
      "html_url": "https://github.com/KoyamaSohei",
      "followers_url": "https://api.github.com/users/KoyamaSohei/followers",
      "following_url": "https://api.github.com/users/KoyamaSohei/following{/other_user}",
      "gists_url": "https://api.github.com/users/KoyamaSohei/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KoyamaSohei/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KoyamaSohei/subscriptions",
      "organizations_url": "https://api.github.com/users/KoyamaSohei/orgs",
      "repos_url": "https://api.github.com/users/KoyamaSohei/repos",
      "events_url": "https://api.github.com/users/KoyamaSohei/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KoyamaSohei/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-12-10T19:22:27Z",
    "updated_at": "2022-02-08T22:54:08Z",
    "closed_at": "2022-02-08T22:54:06Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4120",
      "html_url": "https://github.com/expressjs/express/pull/4120",
      "diff_url": "https://github.com/expressjs/express/pull/4120.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4120.patch",
      "merged_at": "2022-02-08T22:54:07Z"
    },
    "body": "fix: https://github.com/expressjs/express/issues/3992#issuecomment-531290081",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4120/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4120/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4119",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4119/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4119/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4119/events",
    "html_url": "https://github.com/expressjs/express/pull/4119",
    "id": 535925048,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzUxNTQ1Nzk0",
    "number": 4119,
    "title": "examples: defend from xss",
    "user": {
      "login": "KoyamaSohei",
      "id": 17472875,
      "node_id": "MDQ6VXNlcjE3NDcyODc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17472875?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KoyamaSohei",
      "html_url": "https://github.com/KoyamaSohei",
      "followers_url": "https://api.github.com/users/KoyamaSohei/followers",
      "following_url": "https://api.github.com/users/KoyamaSohei/following{/other_user}",
      "gists_url": "https://api.github.com/users/KoyamaSohei/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KoyamaSohei/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KoyamaSohei/subscriptions",
      "organizations_url": "https://api.github.com/users/KoyamaSohei/orgs",
      "repos_url": "https://api.github.com/users/KoyamaSohei/repos",
      "events_url": "https://api.github.com/users/KoyamaSohei/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KoyamaSohei/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2019-12-10T19:04:18Z",
    "updated_at": "2020-03-25T21:59:57Z",
    "closed_at": "2020-03-25T21:59:55Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4119",
      "html_url": "https://github.com/expressjs/express/pull/4119",
      "diff_url": "https://github.com/expressjs/express/pull/4119.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4119.patch",
      "merged_at": "2020-03-25T21:59:57Z"
    },
    "body": "fix: https://github.com/expressjs/express/issues/3992\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4119/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4119/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4118",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4118/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4118/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4118/events",
    "html_url": "https://github.com/expressjs/express/issues/4118",
    "id": 534903733,
    "node_id": "MDU6SXNzdWU1MzQ5MDM3MzM=",
    "number": 4118,
    "title": "Is there a way for Response.json() to not escape certain string characters?",
    "user": {
      "login": "Geckulon",
      "id": 1622174,
      "node_id": "MDQ6VXNlcjE2MjIxNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1622174?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Geckulon",
      "html_url": "https://github.com/Geckulon",
      "followers_url": "https://api.github.com/users/Geckulon/followers",
      "following_url": "https://api.github.com/users/Geckulon/following{/other_user}",
      "gists_url": "https://api.github.com/users/Geckulon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Geckulon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Geckulon/subscriptions",
      "organizations_url": "https://api.github.com/users/Geckulon/orgs",
      "repos_url": "https://api.github.com/users/Geckulon/repos",
      "events_url": "https://api.github.com/users/Geckulon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Geckulon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-12-09T12:39:47Z",
    "updated_at": "2019-12-09T16:06:01Z",
    "closed_at": "2019-12-09T16:06:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I've come across a little annoying occurrence when trying to return a JSON featuring a string message which contains either a double quote or a backslash as literal characters.\r\n\r\nI stumbled onto this when trying to return a JSON error response for a special character password rule.\r\n`const errorMessage = 'Password must contain one special character: ! \" # $ % & \\' ( ) * + , - . / : ; < = > ? @ [ \\\\ ] ^ _ { | } ~';`\r\n`return res.status(400).json({ message: errorMessage });`\r\n\r\nSince I'm using single quotes for the message, I have to escape the single quote character as well as the backslash if I want them to show up as themselves in the string. And while debugging the errorMessage does indeed look as expected.\r\n\r\n`Password must contain one special character: ! \" # $ % & ' ( ) * + , - . / : ; < = > ? @ [ \\ ] ^ _ { | } ~`\r\n\r\nHowever once it goes back to the caller the JSON response looks like this:\r\n\r\n`{\r\n    \"message\": \"Password must contain one special character: ! \\\" # $ % & ' ( ) * + , - . / : ; < = > ? @ [ \\\\ ] ^ _ { | } ~ \"\r\n}`\r\n\r\nAs can be seen, the double quote has a backslash in front of it, and the backslash itself seems to have one for itself as well.\r\n\r\nThe message works as expected if I return it just as a string via send:\r\n`return res.status(400).json(errorMessage);`\r\n\r\nSo I'm guessing there's something going on with the Response.json() in particular which generates this kind of output. **Is there a way I can work around this?**",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4118/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4118/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4117",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4117/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4117/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4117/events",
    "html_url": "https://github.com/expressjs/express/issues/4117",
    "id": 534197294,
    "node_id": "MDU6SXNzdWU1MzQxOTcyOTQ=",
    "number": 4117,
    "title": "Found a security issue",
    "user": {
      "login": "ZeddYu",
      "id": 29536474,
      "node_id": "MDQ6VXNlcjI5NTM2NDc0",
      "avatar_url": "https://avatars.githubusercontent.com/u/29536474?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ZeddYu",
      "html_url": "https://github.com/ZeddYu",
      "followers_url": "https://api.github.com/users/ZeddYu/followers",
      "following_url": "https://api.github.com/users/ZeddYu/following{/other_user}",
      "gists_url": "https://api.github.com/users/ZeddYu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ZeddYu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ZeddYu/subscriptions",
      "organizations_url": "https://api.github.com/users/ZeddYu/orgs",
      "repos_url": "https://api.github.com/users/ZeddYu/repos",
      "events_url": "https://api.github.com/users/ZeddYu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ZeddYu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-12-06T18:37:35Z",
    "updated_at": "2022-07-14T08:13:28Z",
    "closed_at": "2019-12-06T18:38:14Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "Found a security issue. How can I report?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4117/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4117/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4116",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4116/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4116/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4116/events",
    "html_url": "https://github.com/expressjs/express/issues/4116",
    "id": 533400016,
    "node_id": "MDU6SXNzdWU1MzM0MDAwMTY=",
    "number": 4116,
    "title": "Undocumented request.headers show cookie property present, but request cookies and signedCookies are undefined",
    "user": {
      "login": "jeserkin",
      "id": 183512,
      "node_id": "MDQ6VXNlcjE4MzUxMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/183512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jeserkin",
      "html_url": "https://github.com/jeserkin",
      "followers_url": "https://api.github.com/users/jeserkin/followers",
      "following_url": "https://api.github.com/users/jeserkin/following{/other_user}",
      "gists_url": "https://api.github.com/users/jeserkin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jeserkin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jeserkin/subscriptions",
      "organizations_url": "https://api.github.com/users/jeserkin/orgs",
      "repos_url": "https://api.github.com/users/jeserkin/repos",
      "events_url": "https://api.github.com/users/jeserkin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jeserkin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-12-05T14:51:06Z",
    "updated_at": "2019-12-05T14:52:57Z",
    "closed_at": "2019-12-05T14:52:50Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Basically issue described in title",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4116/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4116/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4115",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4115/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4115/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4115/events",
    "html_url": "https://github.com/expressjs/express/pull/4115",
    "id": 533161380,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ5Mjg0ODgy",
    "number": 4115,
    "title": "Fix: escape the input on example",
    "user": {
      "login": "KoyamaSohei",
      "id": 17472875,
      "node_id": "MDQ6VXNlcjE3NDcyODc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17472875?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KoyamaSohei",
      "html_url": "https://github.com/KoyamaSohei",
      "followers_url": "https://api.github.com/users/KoyamaSohei/followers",
      "following_url": "https://api.github.com/users/KoyamaSohei/following{/other_user}",
      "gists_url": "https://api.github.com/users/KoyamaSohei/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KoyamaSohei/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KoyamaSohei/subscriptions",
      "organizations_url": "https://api.github.com/users/KoyamaSohei/orgs",
      "repos_url": "https://api.github.com/users/KoyamaSohei/repos",
      "events_url": "https://api.github.com/users/KoyamaSohei/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KoyamaSohei/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 55587817,
        "node_id": "MDU6TGFiZWw1NTU4NzgxNw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/needs%20tests",
        "name": "needs tests",
        "color": "e11d21",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 12,
    "created_at": "2019-12-05T06:54:00Z",
    "updated_at": "2019-12-10T19:02:29Z",
    "closed_at": "2019-12-10T19:02:29Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4115",
      "html_url": "https://github.com/expressjs/express/pull/4115",
      "diff_url": "https://github.com/expressjs/express/pull/4115.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4115.patch",
      "merged_at": null
    },
    "body": "fix: https://github.com/expressjs/express/issues/3992\r\n\r\nMost beginners implement with reference to examples, so I think it would be worthwhile to improve the examples in the future.\r\n\r\nThanks!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4115/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4115/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4114",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4114/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4114/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4114/events",
    "html_url": "https://github.com/expressjs/express/pull/4114",
    "id": 532477478,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ4NzE2Mjk1",
    "number": 4114,
    "title": "docs: request for triager role for gireeshpunathil",
    "user": {
      "login": "gireeshpunathil",
      "id": 6447530,
      "node_id": "MDQ6VXNlcjY0NDc1MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6447530?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gireeshpunathil",
      "html_url": "https://github.com/gireeshpunathil",
      "followers_url": "https://api.github.com/users/gireeshpunathil/followers",
      "following_url": "https://api.github.com/users/gireeshpunathil/following{/other_user}",
      "gists_url": "https://api.github.com/users/gireeshpunathil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gireeshpunathil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gireeshpunathil/subscriptions",
      "organizations_url": "https://api.github.com/users/gireeshpunathil/orgs",
      "repos_url": "https://api.github.com/users/gireeshpunathil/repos",
      "events_url": "https://api.github.com/users/gireeshpunathil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gireeshpunathil/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-12-04T06:26:50Z",
    "updated_at": "2019-12-31T21:32:19Z",
    "closed_at": "2019-12-12T16:28:46Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4114",
      "html_url": "https://github.com/expressjs/express/pull/4114",
      "diff_url": "https://github.com/expressjs/express/pull/4114.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4114.patch",
      "merged_at": "2019-12-12T16:28:46Z"
    },
    "body": "I have read and understood the project's Contributing guide.\r\nI also have read and understood the process and best practices around Express triaging.\r\n\r\nI request for a triager role for the below orgs:\r\n\r\n - jshttp\r\n - pillarjs\r\n - express",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4114/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4114/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4113",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4113/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4113/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4113/events",
    "html_url": "https://github.com/expressjs/express/issues/4113",
    "id": 531120890,
    "node_id": "MDU6SXNzdWU1MzExMjA4OTA=",
    "number": 4113,
    "title": "What issue can print GET / - - ms - - in NodeJS console ?",
    "user": {
      "login": "prince267",
      "id": 31069419,
      "node_id": "MDQ6VXNlcjMxMDY5NDE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/31069419?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prince267",
      "html_url": "https://github.com/prince267",
      "followers_url": "https://api.github.com/users/prince267/followers",
      "following_url": "https://api.github.com/users/prince267/following{/other_user}",
      "gists_url": "https://api.github.com/users/prince267/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prince267/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prince267/subscriptions",
      "organizations_url": "https://api.github.com/users/prince267/orgs",
      "repos_url": "https://api.github.com/users/prince267/repos",
      "events_url": "https://api.github.com/users/prince267/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prince267/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-12-02T13:16:15Z",
    "updated_at": "2019-12-03T17:34:37Z",
    "closed_at": "2019-12-03T17:34:37Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "i started my server for 2 hours it is working fine. after that it began sending empty responses . \r\n![Screenshot 2019-11-27 at 6 11 43 PM](https://user-images.githubusercontent.com/31069419/69962436-008dd800-1534-11ea-927e-3fbc2a919c94.png)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4113/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4113/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4112",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4112/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4112/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4112/events",
    "html_url": "https://github.com/expressjs/express/issues/4112",
    "id": 530881567,
    "node_id": "MDU6SXNzdWU1MzA4ODE1Njc=",
    "number": 4112,
    "title": "Http/2 Still not working?",
    "user": {
      "login": "GaryMatthews",
      "id": 18332743,
      "node_id": "MDQ6VXNlcjE4MzMyNzQz",
      "avatar_url": "https://avatars.githubusercontent.com/u/18332743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GaryMatthews",
      "html_url": "https://github.com/GaryMatthews",
      "followers_url": "https://api.github.com/users/GaryMatthews/followers",
      "following_url": "https://api.github.com/users/GaryMatthews/following{/other_user}",
      "gists_url": "https://api.github.com/users/GaryMatthews/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GaryMatthews/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GaryMatthews/subscriptions",
      "organizations_url": "https://api.github.com/users/GaryMatthews/orgs",
      "repos_url": "https://api.github.com/users/GaryMatthews/repos",
      "events_url": "https://api.github.com/users/GaryMatthews/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GaryMatthews/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2019-12-02T04:28:11Z",
    "updated_at": "2020-01-20T16:44:00Z",
    "closed_at": "2019-12-02T04:32:14Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "When are we going to see real progress on http2 support out of the box? we literally have thousands of scripts that depend on express and still not able to move to nodes http2 module. i've looked into the master, 5.0 and 5.x branches but there seams to be very few pushes into those repos to fix current backwards compatibility problems, firing up test server to check them and make incremental changes only to find ten other issues is getting frustrating. ALL these issues and errors go back a couple of years. due to the time and investment in express the only way forward at this time is to fork the stable branch and move on with a our own compatibility layer and then incrementally remove express from our workflow.\r\n\r\nNew issue created because it is frustrating reading through \"issues\" that date back years on this and see no real progress in the area of supporting the node built in http2 module.\r\n\r\n[log.txt](https://github.com/expressjs/express/files/3909426/log.txt)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4112/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4112/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4111",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4111/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4111/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4111/events",
    "html_url": "https://github.com/expressjs/express/issues/4111",
    "id": 530456080,
    "node_id": "MDU6SXNzdWU1MzA0NTYwODA=",
    "number": 4111,
    "title": "View resolver",
    "user": {
      "login": "evelo2",
      "id": 836577,
      "node_id": "MDQ6VXNlcjgzNjU3Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/836577?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/evelo2",
      "html_url": "https://github.com/evelo2",
      "followers_url": "https://api.github.com/users/evelo2/followers",
      "following_url": "https://api.github.com/users/evelo2/following{/other_user}",
      "gists_url": "https://api.github.com/users/evelo2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/evelo2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/evelo2/subscriptions",
      "organizations_url": "https://api.github.com/users/evelo2/orgs",
      "repos_url": "https://api.github.com/users/evelo2/repos",
      "events_url": "https://api.github.com/users/evelo2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/evelo2/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2019-11-29T18:23:49Z",
    "updated_at": "2020-04-10T22:36:57Z",
    "closed_at": "2020-04-10T22:36:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Are there any thoughts around adding the ability to provide a view/paritals resolver interface? \r\n\r\nI am wanting to add some basic CMS/Design section to our site and it would be ideal to store views and partials in a database. \r\n\r\nmaybe something like this: \r\n\r\n```\r\n   app.set('views', [myViewResolver, path.join(__dirname, 'views')]);\r\n   app.set('view engine', 'ejs');\r\n```\r\n`ViewResolver` would expose a method `ViewResolver.get(view)` returning the view.\r\n\r\nThanks for your time.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4111/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4111/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4110",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4110/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4110/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4110/events",
    "html_url": "https://github.com/expressjs/express/issues/4110",
    "id": 529848422,
    "node_id": "MDU6SXNzdWU1Mjk4NDg0MjI=",
    "number": 4110,
    "title": "acceptLanguages to return false when Accept-Language header is unspecified",
    "user": {
      "login": "am11",
      "id": 3840695,
      "node_id": "MDQ6VXNlcjM4NDA2OTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3840695?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/am11",
      "html_url": "https://github.com/am11",
      "followers_url": "https://api.github.com/users/am11/followers",
      "following_url": "https://api.github.com/users/am11/following{/other_user}",
      "gists_url": "https://api.github.com/users/am11/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/am11/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/am11/subscriptions",
      "organizations_url": "https://api.github.com/users/am11/orgs",
      "repos_url": "https://api.github.com/users/am11/repos",
      "events_url": "https://api.github.com/users/am11/events{/privacy}",
      "received_events_url": "https://api.github.com/users/am11/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2019-11-28T11:12:40Z",
    "updated_at": "2019-11-28T17:57:29Z",
    "closed_at": "2019-11-28T14:48:11Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The documentation of `acceptLanguages` say:\r\n\r\n> Returns the first accepted language of the specified languages, based on the request’s Accept-Language HTTP header field. If none of the specified languages is accepted, returns false.\r\n\r\nHowever, when we receive a request without `Accept-Language` header, `req.acceptLanguages(myLanguagesArray)` returns the first element of `myLanguagesArray`, which is unexpected. The expected behavior is this API returns false, and downstream consumer can make decisions, such as; either to fallback to default language or send error to the caller.\r\n\r\nEven without `Accept` and `Accept-Language` headers, first element of `myLanguagesArray` is returned.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4110/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4110/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4109",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4109/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4109/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4109/events",
    "html_url": "https://github.com/expressjs/express/issues/4109",
    "id": 529100209,
    "node_id": "MDU6SXNzdWU1MjkxMDAyMDk=",
    "number": 4109,
    "title": "could you add body-parser into the express framework",
    "user": {
      "login": "xiaohigh",
      "id": 4426490,
      "node_id": "MDQ6VXNlcjQ0MjY0OTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4426490?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xiaohigh",
      "html_url": "https://github.com/xiaohigh",
      "followers_url": "https://api.github.com/users/xiaohigh/followers",
      "following_url": "https://api.github.com/users/xiaohigh/following{/other_user}",
      "gists_url": "https://api.github.com/users/xiaohigh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xiaohigh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xiaohigh/subscriptions",
      "organizations_url": "https://api.github.com/users/xiaohigh/orgs",
      "repos_url": "https://api.github.com/users/xiaohigh/repos",
      "events_url": "https://api.github.com/users/xiaohigh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xiaohigh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-11-27T03:59:14Z",
    "updated_at": "2019-11-27T03:59:40Z",
    "closed_at": "2019-11-27T03:59:40Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4109/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4109/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4108",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4108/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4108/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4108/events",
    "html_url": "https://github.com/expressjs/express/issues/4108",
    "id": 528235700,
    "node_id": "MDU6SXNzdWU1MjgyMzU3MDA=",
    "number": 4108,
    "title": "Use distinct session settings based on req domain",
    "user": {
      "login": "ortizvinicius",
      "id": 1380574,
      "node_id": "MDQ6VXNlcjEzODA1NzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1380574?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ortizvinicius",
      "html_url": "https://github.com/ortizvinicius",
      "followers_url": "https://api.github.com/users/ortizvinicius/followers",
      "following_url": "https://api.github.com/users/ortizvinicius/following{/other_user}",
      "gists_url": "https://api.github.com/users/ortizvinicius/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ortizvinicius/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ortizvinicius/subscriptions",
      "organizations_url": "https://api.github.com/users/ortizvinicius/orgs",
      "repos_url": "https://api.github.com/users/ortizvinicius/repos",
      "events_url": "https://api.github.com/users/ortizvinicius/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ortizvinicius/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 15,
    "created_at": "2019-11-25T17:37:18Z",
    "updated_at": "2020-04-10T22:40:10Z",
    "closed_at": "2020-04-10T22:40:09Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello guys,\r\n\r\nI have a web application that runs on localhost serving data through the port :30 to an also local web interface accessed via IP. Then, i set up a ngrok tunnel to redirect the server data through ssh to an online address accessed via an online web interface.\r\n\r\nthe 2 interfaces are identical, the only difference is that if the user is outside the network, then he can access the system through the online interface. I need this to work that way, cause i can not be 100% dependant on internet connection for my app to work, so if the user doesn't have internet but are in the local network, he can access the local address.\r\n\r\nThis is working fine for a couple of years, but since some time I started to experience in iOS, where after the login, the page returned to the login page, as the session was not started. It only works fine on Opera for iOS. In Android and Windows it works well in any navigator, but now Google Chrome started to show this message for the online interface:\r\n\r\n> A cookie associated with a cross-site resource at http://***.ngrok.io/ was set without the `SameSite` attribute. A future release of Chrome will only deliver cookies with cross-site requests if they are set with `SameSite=None` and `Secure`. You can review cookies in developer tools under Application>Storage>Cookies and see more details at https://www.chromestatus.com/feature/5088147346030592 and https://www.chromestatus.com/feature/5633521622188032.\r\n\r\nCurrently my session setting is this:\r\n```\r\nexapp.use(session({ \r\n  name: 'session-name',\r\n  secret: 'session-secret',\r\n  resave: false,\r\n  saveUninitialized: false,\r\n  rolling: true,\r\n  cookie: {\r\n    secure: false,\r\n    httpOnly: false\r\n  }\r\n}));\r\n```\r\n\r\nI can solve the problem by setting it like this:\r\n```\r\nexapp.set('trust proxy', 1);\r\nexapp.use(session({\r\n  name: 'session-name',\r\n  secret: 'session-secret',\r\n  resave: false,\r\n  saveUninitialized: false,\r\n  rolling: true,\r\n  cookie: {\r\n    sameSite: 'none',\r\n    secure: true,\r\n    httpOnly: false\r\n  }\r\n}));\r\n```\r\n\r\nBut then i fall in another problem: the local interface. It doesn't work anymore because the local address is not HTTPS and even if i install a certificate i need to trust this in every navigator that will use the app.\r\n\r\nMy question is: Is there a way to use 2 types of settings for the express session? One for the remote interface which will be secure and cross-domain, and another for the local interface which will be on the same domain and insecure. If not, then a alternative suggestion will be welcome.\r\n\r\nThanks.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4108/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4108/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4107",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4107/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4107/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4107/events",
    "html_url": "https://github.com/expressjs/express/issues/4107",
    "id": 527381465,
    "node_id": "MDU6SXNzdWU1MjczODE0NjU=",
    "number": 4107,
    "title": "Regex negative matching for routes",
    "user": {
      "login": "RalphORama",
      "id": 6566104,
      "node_id": "MDQ6VXNlcjY1NjYxMDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6566104?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RalphORama",
      "html_url": "https://github.com/RalphORama",
      "followers_url": "https://api.github.com/users/RalphORama/followers",
      "following_url": "https://api.github.com/users/RalphORama/following{/other_user}",
      "gists_url": "https://api.github.com/users/RalphORama/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RalphORama/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RalphORama/subscriptions",
      "organizations_url": "https://api.github.com/users/RalphORama/orgs",
      "repos_url": "https://api.github.com/users/RalphORama/repos",
      "events_url": "https://api.github.com/users/RalphORama/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RalphORama/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-11-22T19:43:59Z",
    "updated_at": "2019-11-22T21:23:09Z",
    "closed_at": "2019-11-22T21:23:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "### Issue\r\n\r\nI'm trying to use webpack-dev-middleware and webpack-hot-middleware for a web app I'm building, but I don't want Express to load the middleware on any route that starts with `/admin`.  \r\n\r\nI wrote a regex expression that matches properly when I test it on [regextester](https://www.regextester.com/?fam=112648), but when I use it with Express, only the `/admin` routes load properly.  My `/` route loads my `index.html`, but when it tires to load `bundle.js`, it receives the content of my `index.html` file.\r\n\r\nAny suggestions for fixing this issue would be appreciated.\r\n\r\n### Code\r\n\r\n```js\r\nconst express = require('express');\r\nconst webpack = require('webpack');\r\nconst webpackDevMiddleware = require('webpack-dev-middleware');\r\nconst webpackHotMiddleware = require('webpack-hot-middleware');\r\nconst { keystone, apps } = require('./index.js');\r\nconst webpackConfig = require('./webpack.config');\r\n\r\nconst dev = process.env.NODE_ENV !== 'production';\r\nconst port = 3000;\r\nconst compiler = webpack(webpackConfig);\r\n\r\nconst pathRegex = /^((?!^\\/admin).)*$/;\r\n// const pathRegex = '/';\r\n\r\nkeystone\r\n  .prepare({ apps, dev })\r\n  .then(async ({ middlewares }) => {\r\n    await keystone.connect();\r\n    const app = express();\r\n\r\n    if (dev) {\r\n      console.log('> Setting up webpack-dev-middleware');\r\n      app.use(pathRegex, webpackDevMiddleware(compiler, {\r\n        logLevel: 'warn',\r\n        publicPath: webpackConfig.output.publicPath,\r\n      }));\r\n\r\n      console.log('> Setting up webpack-hot-middleware');\r\n      app.use(pathRegex, webpackHotMiddleware(compiler, {\r\n        log: console.log,\r\n        path: '/__webpack_hmr',\r\n        heartbeat: 10 * 1000,\r\n        reload: false,\r\n      }));\r\n    }\r\n\r\n    console.log('> Setting up other middleware');\r\n    app.use(middlewares);\r\n\r\n    app.listen(port, () => {\r\n      console.log(`> Listening on http://localhost:${port}`);\r\n    });\r\n  });\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4107/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4107/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4106",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4106/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4106/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4106/events",
    "html_url": "https://github.com/expressjs/express/pull/4106",
    "id": 526893209,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ0Mjc2NjI4",
    "number": 4106,
    "title": "Add deprecation warning to \"Referrer\" special-casing",
    "user": {
      "login": "rileyjshaw",
      "id": 1840854,
      "node_id": "MDQ6VXNlcjE4NDA4NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1840854?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rileyjshaw",
      "html_url": "https://github.com/rileyjshaw",
      "followers_url": "https://api.github.com/users/rileyjshaw/followers",
      "following_url": "https://api.github.com/users/rileyjshaw/following{/other_user}",
      "gists_url": "https://api.github.com/users/rileyjshaw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rileyjshaw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rileyjshaw/subscriptions",
      "organizations_url": "https://api.github.com/users/rileyjshaw/orgs",
      "repos_url": "https://api.github.com/users/rileyjshaw/repos",
      "events_url": "https://api.github.com/users/rileyjshaw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rileyjshaw/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-11-21T23:12:10Z",
    "updated_at": "2022-02-17T05:33:15Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4106",
      "html_url": "https://github.com/expressjs/express/pull/4106",
      "diff_url": "https://github.com/expressjs/express/pull/4106.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4106.patch",
      "merged_at": null
    },
    "body": "re: https://github.com/expressjs/express/issues/3951\r\n\r\nTest plan: `npm test`",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4106/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4106/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4105",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4105/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4105/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4105/events",
    "html_url": "https://github.com/expressjs/express/issues/4105",
    "id": 525761951,
    "node_id": "MDU6SXNzdWU1MjU3NjE5NTE=",
    "number": 4105,
    "title": "how should I send response multiple time.",
    "user": {
      "login": "shubh48",
      "id": 54486429,
      "node_id": "MDQ6VXNlcjU0NDg2NDI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/54486429?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shubh48",
      "html_url": "https://github.com/shubh48",
      "followers_url": "https://api.github.com/users/shubh48/followers",
      "following_url": "https://api.github.com/users/shubh48/following{/other_user}",
      "gists_url": "https://api.github.com/users/shubh48/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shubh48/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shubh48/subscriptions",
      "organizations_url": "https://api.github.com/users/shubh48/orgs",
      "repos_url": "https://api.github.com/users/shubh48/repos",
      "events_url": "https://api.github.com/users/shubh48/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shubh48/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-11-20T12:05:19Z",
    "updated_at": "2019-11-21T05:19:59Z",
    "closed_at": "2019-11-21T05:19:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4105/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4105/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4104",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4104/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4104/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4104/events",
    "html_url": "https://github.com/expressjs/express/issues/4104",
    "id": 525159776,
    "node_id": "MDU6SXNzdWU1MjUxNTk3NzY=",
    "number": 4104,
    "title": "res.sendFIle not working",
    "user": {
      "login": "TymanWasTaken",
      "id": 32660892,
      "node_id": "MDQ6VXNlcjMyNjYwODky",
      "avatar_url": "https://avatars.githubusercontent.com/u/32660892?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TymanWasTaken",
      "html_url": "https://github.com/TymanWasTaken",
      "followers_url": "https://api.github.com/users/TymanWasTaken/followers",
      "following_url": "https://api.github.com/users/TymanWasTaken/following{/other_user}",
      "gists_url": "https://api.github.com/users/TymanWasTaken/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TymanWasTaken/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TymanWasTaken/subscriptions",
      "organizations_url": "https://api.github.com/users/TymanWasTaken/orgs",
      "repos_url": "https://api.github.com/users/TymanWasTaken/repos",
      "events_url": "https://api.github.com/users/TymanWasTaken/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TymanWasTaken/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2019-11-19T17:37:32Z",
    "updated_at": "2019-11-20T04:52:37Z",
    "closed_at": "2019-11-20T04:52:37Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am trying to set up a simple web server with express and https.\r\nFor some reason, when I try to use res.sendFIle, I get this error.\r\n`Error: Request aborted\r\n    at onaborted (/home/pi/node/node_modules/express/lib/response.js:1025:15)\r\n    at Immediate._onImmediate (/home/pi/node/node_modules/express/lib/response.js:1067:9)\r\n    at processImmediate (internal/timers.js:439:21) {\r\n  code: 'ECONNABORTED'\r\n}`\r\nMy code is available at [https://github.com/AwesomeTy79/www](https://github.com/AwesomeTy79/www)",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4104/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4104/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4103",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4103/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4103/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4103/events",
    "html_url": "https://github.com/expressjs/express/issues/4103",
    "id": 525075750,
    "node_id": "MDU6SXNzdWU1MjUwNzU3NTA=",
    "number": 4103,
    "title": "Charset specified in JSON content-type while it shouldn't",
    "user": {
      "login": "thosil",
      "id": 1140574,
      "node_id": "MDQ6VXNlcjExNDA1NzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1140574?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thosil",
      "html_url": "https://github.com/thosil",
      "followers_url": "https://api.github.com/users/thosil/followers",
      "following_url": "https://api.github.com/users/thosil/following{/other_user}",
      "gists_url": "https://api.github.com/users/thosil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thosil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thosil/subscriptions",
      "organizations_url": "https://api.github.com/users/thosil/orgs",
      "repos_url": "https://api.github.com/users/thosil/repos",
      "events_url": "https://api.github.com/users/thosil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thosil/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-11-19T15:18:17Z",
    "updated_at": "2019-11-19T15:25:24Z",
    "closed_at": "2019-11-19T15:25:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I've read the previous closed issues, but in the meantime, the [CVE has been updated](https://github.com/advisories/GHSA-gpvr-g6gh-9mc2) :-) :\r\n\r\n> The Express web framework before 3.11 and 4.x before 4.5 for Node.js does not provide a charset field in HTTP Content-Type headers in 400 level responses, which might allow remote attackers to conduct cross-site scripting (XSS) attacks via characters in a non-standard encoding.\r\n\r\nNow they specify that it occurs in 400 level responses.\r\nCould we expect to fix?\r\n\r\nThank you\r\nThomas",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4103/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4103/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4102",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4102/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4102/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4102/events",
    "html_url": "https://github.com/expressjs/express/pull/4102",
    "id": 523647440,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQxNjA2MDM3",
    "number": 4102,
    "title": "add keyword 'http' to increase visibility",
    "user": {
      "login": "baslr",
      "id": 1494154,
      "node_id": "MDQ6VXNlcjE0OTQxNTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1494154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/baslr",
      "html_url": "https://github.com/baslr",
      "followers_url": "https://api.github.com/users/baslr/followers",
      "following_url": "https://api.github.com/users/baslr/following{/other_user}",
      "gists_url": "https://api.github.com/users/baslr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/baslr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/baslr/subscriptions",
      "organizations_url": "https://api.github.com/users/baslr/orgs",
      "repos_url": "https://api.github.com/users/baslr/repos",
      "events_url": "https://api.github.com/users/baslr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/baslr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-11-15T19:29:31Z",
    "updated_at": "2020-03-25T23:36:54Z",
    "closed_at": "2020-03-25T23:36:49Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4102",
      "html_url": "https://github.com/expressjs/express/pull/4102",
      "diff_url": "https://github.com/expressjs/express/pull/4102.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4102.patch",
      "merged_at": "2020-03-25T23:36:52Z"
    },
    "body": "Reason:\r\nif you search for http framework, express is not listed.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4102/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4102/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4101",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4101/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4101/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4101/events",
    "html_url": "https://github.com/expressjs/express/issues/4101",
    "id": 522610890,
    "node_id": "MDU6SXNzdWU1MjI2MTA4OTA=",
    "number": 4101,
    "title": "debug vs morgan",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-11-14T04:04:18Z",
    "updated_at": "2019-11-15T21:36:18Z",
    "closed_at": "2019-11-15T21:36:18Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "is there difference with this two?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4101/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4101/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4100",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4100/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4100/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4100/events",
    "html_url": "https://github.com/expressjs/express/issues/4100",
    "id": 522610429,
    "node_id": "MDU6SXNzdWU1MjI2MTA0Mjk=",
    "number": 4100,
    "title": "dumb question",
    "user": {
      "login": "artoodeeto",
      "id": 19770382,
      "node_id": "MDQ6VXNlcjE5NzcwMzgy",
      "avatar_url": "https://avatars.githubusercontent.com/u/19770382?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/artoodeeto",
      "html_url": "https://github.com/artoodeeto",
      "followers_url": "https://api.github.com/users/artoodeeto/followers",
      "following_url": "https://api.github.com/users/artoodeeto/following{/other_user}",
      "gists_url": "https://api.github.com/users/artoodeeto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/artoodeeto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/artoodeeto/subscriptions",
      "organizations_url": "https://api.github.com/users/artoodeeto/orgs",
      "repos_url": "https://api.github.com/users/artoodeeto/repos",
      "events_url": "https://api.github.com/users/artoodeeto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/artoodeeto/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-11-14T04:02:39Z",
    "updated_at": "2019-11-14T17:45:15Z",
    "closed_at": "2019-11-14T17:45:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "hello, I have a dumb question. and sorry if I wasted your time. can you use `npm install -g express-generator` for production? if not, can you recommend a link where I could read best practices on how to setup an express? please 🙏 and thank you so much ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4100/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4100/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4099",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4099/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4099/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4099/events",
    "html_url": "https://github.com/expressjs/express/issues/4099",
    "id": 521317123,
    "node_id": "MDU6SXNzdWU1MjEzMTcxMjM=",
    "number": 4099,
    "title": "Change the interface for setting application settings",
    "user": {
      "login": "hacksparrow",
      "id": 950112,
      "node_id": "MDQ6VXNlcjk1MDExMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/950112?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hacksparrow",
      "html_url": "https://github.com/hacksparrow",
      "followers_url": "https://api.github.com/users/hacksparrow/followers",
      "following_url": "https://api.github.com/users/hacksparrow/following{/other_user}",
      "gists_url": "https://api.github.com/users/hacksparrow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hacksparrow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hacksparrow/subscriptions",
      "organizations_url": "https://api.github.com/users/hacksparrow/orgs",
      "repos_url": "https://api.github.com/users/hacksparrow/repos",
      "events_url": "https://api.github.com/users/hacksparrow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hacksparrow/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2019-11-12T04:11:38Z",
    "updated_at": "2020-04-18T17:41:34Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "The interface `app.set(<name with space>, <value>)` feels a odd for setting values in a JavaScript framework. Also, its counterpart `app.get(<name>)` is a confusing twin of `app.get(path, callback [, callback ...])`, which is a router method.\r\n\r\nI am proposing to implement application settings using getter-setter interfaces.\r\n\r\n```\r\napp.settings.trustProxy = true;\r\n```\r\n\r\nAnd get rid of `app.get(<name>)`.\r\n\r\nSuper major change, I know, but the next major version is a good time to make these interface improvements.\r\n\r\n**Related issues**\r\n\r\n1. https://github.com/expressjs/express/issues/2216\r\n2. https://github.com/expressjs/express/issues/3997",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4099/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4099/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4098",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4098/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4098/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4098/events",
    "html_url": "https://github.com/expressjs/express/issues/4098",
    "id": 520569613,
    "node_id": "MDU6SXNzdWU1MjA1Njk2MTM=",
    "number": 4098,
    "title": "message: connect ECONNREFUSED 127.0.0.1:port",
    "user": {
      "login": "alfaben12",
      "id": 20008086,
      "node_id": "MDQ6VXNlcjIwMDA4MDg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/20008086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alfaben12",
      "html_url": "https://github.com/alfaben12",
      "followers_url": "https://api.github.com/users/alfaben12/followers",
      "following_url": "https://api.github.com/users/alfaben12/following{/other_user}",
      "gists_url": "https://api.github.com/users/alfaben12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alfaben12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alfaben12/subscriptions",
      "organizations_url": "https://api.github.com/users/alfaben12/orgs",
      "repos_url": "https://api.github.com/users/alfaben12/repos",
      "events_url": "https://api.github.com/users/alfaben12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alfaben12/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-11-10T08:19:07Z",
    "updated_at": "2019-11-12T03:47:29Z",
    "closed_at": "2019-11-12T03:47:29Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Request to localhost:port and get result\r\n\r\n> {\r\n    \"message\": \"connect ECONNREFUSED 127.0.0.1:5001\",\r\n    \"name\": \"Error\",\r\n    \"stack\": \"Error: connect ECONNREFUSED 127.0.0.1:5001\\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1104:14)\",\r\n    \"config\": {\r\n        \"url\": \"http://localhost:5001/api.php/mobile/\",\r\n        \"method\": \"get\",\r\n        \"headers\": {\r\n            \"Accept\": \"application/json, text/plain, */*\",\r\n            \"User-Agent\": \"axios/0.19.0\"\r\n        },\r\n        \"transformRequest\": [\r\n            null\r\n        ],\r\n        \"transformResponse\": [\r\n            null\r\n        ],\r\n        \"timeout\": 0,\r\n        \"xsrfCookieName\": \"XSRF-TOKEN\",\r\n        \"xsrfHeaderName\": \"X-XSRF-TOKEN\",\r\n        \"maxContentLength\": -1\r\n    },\r\n    \"code\": \"ECONNREFUSED\"\r\n}",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4098/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4098/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4097",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4097/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4097/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4097/events",
    "html_url": "https://github.com/expressjs/express/issues/4097",
    "id": 519493519,
    "node_id": "MDU6SXNzdWU1MTk0OTM1MTk=",
    "number": 4097,
    "title": "no warning when setting  'secure' option for cookies and not using HTTPS",
    "user": {
      "login": "raffomania",
      "id": 2369330,
      "node_id": "MDQ6VXNlcjIzNjkzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2369330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raffomania",
      "html_url": "https://github.com/raffomania",
      "followers_url": "https://api.github.com/users/raffomania/followers",
      "following_url": "https://api.github.com/users/raffomania/following{/other_user}",
      "gists_url": "https://api.github.com/users/raffomania/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raffomania/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raffomania/subscriptions",
      "organizations_url": "https://api.github.com/users/raffomania/orgs",
      "repos_url": "https://api.github.com/users/raffomania/repos",
      "events_url": "https://api.github.com/users/raffomania/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raffomania/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-11-07T20:26:38Z",
    "updated_at": "2019-11-13T23:36:24Z",
    "closed_at": "2019-11-07T20:38:05Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When setting the `secure` option for a cookie without being on a HTTPS connection, express seems to silently ignore the whole cookie and not set any header. \r\n\r\nI would expect at least a warning, if not an error, as when I set `secure: true` I am absolutely planning to make this cookie available over HTTPS only and will expect some kind of explicit failure when this is not the case.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4097/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4097/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4096",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4096/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4096/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4096/events",
    "html_url": "https://github.com/expressjs/express/issues/4096",
    "id": 519207993,
    "node_id": "MDU6SXNzdWU1MTkyMDc5OTM=",
    "number": 4096,
    "title": "I would like to use res.render multiple times in one page.",
    "user": {
      "login": "mtysszkl",
      "id": 57434422,
      "node_id": "MDQ6VXNlcjU3NDM0NDIy",
      "avatar_url": "https://avatars.githubusercontent.com/u/57434422?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mtysszkl",
      "html_url": "https://github.com/mtysszkl",
      "followers_url": "https://api.github.com/users/mtysszkl/followers",
      "following_url": "https://api.github.com/users/mtysszkl/following{/other_user}",
      "gists_url": "https://api.github.com/users/mtysszkl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mtysszkl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mtysszkl/subscriptions",
      "organizations_url": "https://api.github.com/users/mtysszkl/orgs",
      "repos_url": "https://api.github.com/users/mtysszkl/repos",
      "events_url": "https://api.github.com/users/mtysszkl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mtysszkl/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-11-07T11:27:32Z",
    "updated_at": "2019-12-21T03:31:27Z",
    "closed_at": "2019-12-21T03:31:27Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "So the problem is I have got a page with buttons, and when i press the button I would like to show the res in the page but I used 1 res.render to show the logged username. So is there any solution to this problem? Ty ^^.\r\n\r\nCode: \r\napp.get('/pizza',  function(req, res){\r\n        let sql = 'SELECT * FROM pizza';\r\n    let query = db.query(sql, (err, results) => {\r\n        if(err) throw err;\r\n        \r\n        let h='';\r\n        for(let entry in results){\r\n            h+=('id: '+results[entry].id+', name: '+ results[entry].name+', size: '+results[entry].size+', price: '+ results[entry].price+'<br>');}\r\n            res.render('profile',{ez:h});\r\n        \r\n    });\r\n       });\r\n\r\nSo that code runs when i press the button.\r\nAnd when I logged in that code:\r\nCode:\r\napp.get('/profile', isLoggedIn, function(req, res){\r\n     res.render('profile', {\r\n      user:req.user\r\n     });\r\n     \r\n    });",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4096/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4096/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4095",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4095/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4095/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4095/events",
    "html_url": "https://github.com/expressjs/express/issues/4095",
    "id": 517327691,
    "node_id": "MDU6SXNzdWU1MTczMjc2OTE=",
    "number": 4095,
    "title": "How to get app instance in any module to listen to some events without passing it as an arg",
    "user": {
      "login": "kumarrishav",
      "id": 4078325,
      "node_id": "MDQ6VXNlcjQwNzgzMjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4078325?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kumarrishav",
      "html_url": "https://github.com/kumarrishav",
      "followers_url": "https://api.github.com/users/kumarrishav/followers",
      "following_url": "https://api.github.com/users/kumarrishav/following{/other_user}",
      "gists_url": "https://api.github.com/users/kumarrishav/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kumarrishav/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kumarrishav/subscriptions",
      "organizations_url": "https://api.github.com/users/kumarrishav/orgs",
      "repos_url": "https://api.github.com/users/kumarrishav/repos",
      "events_url": "https://api.github.com/users/kumarrishav/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kumarrishav/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 11,
    "created_at": "2019-11-04T18:32:13Z",
    "updated_at": "2019-11-15T17:26:37Z",
    "closed_at": "2019-11-15T17:26:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi Express community, \r\n\r\nI want to use the app instance to listen to the event. each `app=express()` gives a new sup app but I want to listen to the event triggered from main (index.js) app instance.\r\n\r\nI don't want to pass app instance as an args everywhere. What will be the easiest and simple way to achieve it?\r\n\r\nIt will be a great help to have any input on this\r\nThanks. ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4095/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4095/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4094",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4094/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4094/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4094/events",
    "html_url": "https://github.com/expressjs/express/issues/4094",
    "id": 516836815,
    "node_id": "MDU6SXNzdWU1MTY4MzY4MTU=",
    "number": 4094,
    "title": "[Feature]dynamic set and delete route",
    "user": {
      "login": "kybetter",
      "id": 12093502,
      "node_id": "MDQ6VXNlcjEyMDkzNTAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/12093502?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kybetter",
      "html_url": "https://github.com/kybetter",
      "followers_url": "https://api.github.com/users/kybetter/followers",
      "following_url": "https://api.github.com/users/kybetter/following{/other_user}",
      "gists_url": "https://api.github.com/users/kybetter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kybetter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kybetter/subscriptions",
      "organizations_url": "https://api.github.com/users/kybetter/orgs",
      "repos_url": "https://api.github.com/users/kybetter/repos",
      "events_url": "https://api.github.com/users/kybetter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kybetter/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-11-03T14:36:24Z",
    "updated_at": "2022-01-07T03:03:34Z",
    "closed_at": "2019-11-05T23:16:25Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When running a application, I set some routes like this:\r\n```js\r\n[some arrays].forEach(route => {\r\n   app.post(route.path, (req, res) => {\r\n       //...\r\n   })\r\n})\r\n```\r\nwhen I change a route's path in that array, new route is available, \r\n**but old route is available too.**\r\n\r\nhow to let the old routes invalidate.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4094/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4094/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4093",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4093/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4093/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4093/events",
    "html_url": "https://github.com/expressjs/express/issues/4093",
    "id": 516660044,
    "node_id": "MDU6SXNzdWU1MTY2NjAwNDQ=",
    "number": 4093,
    "title": "TypeError: req.next is not a function",
    "user": {
      "login": "azakero",
      "id": 49979539,
      "node_id": "MDQ6VXNlcjQ5OTc5NTM5",
      "avatar_url": "https://avatars.githubusercontent.com/u/49979539?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/azakero",
      "html_url": "https://github.com/azakero",
      "followers_url": "https://api.github.com/users/azakero/followers",
      "following_url": "https://api.github.com/users/azakero/following{/other_user}",
      "gists_url": "https://api.github.com/users/azakero/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/azakero/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/azakero/subscriptions",
      "organizations_url": "https://api.github.com/users/azakero/orgs",
      "repos_url": "https://api.github.com/users/azakero/repos",
      "events_url": "https://api.github.com/users/azakero/events{/privacy}",
      "received_events_url": "https://api.github.com/users/azakero/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 15,
    "created_at": "2019-11-02T17:11:13Z",
    "updated_at": "2021-11-29T00:54:15Z",
    "closed_at": "2020-04-10T22:36:10Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The server stops right away throwing this error.  The layout of my template also breaks with no CSS. Please note that I'm not using any middleware, nor am I using next in my callback. I have been looking for a solution but found no concrete solution so far. \r\n\r\n```\r\n/workspace/course/ip/node_modules/express/lib/response.js:1007\r\n    if (err) return req.next(err);\r\n                        ^\r\nTypeError: req.next is not a function\r\n    at done (/workspace/course/ip/node_modules/express/lib/response.js:1007:25)\r\n    at tryRender (/workspace/course/ip/node_modules/express/lib/application.js:642:5)\r\n    at Function.render (/workspace/course/ip/node_modules/express/lib/application.js:592:3)\r\n    at ServerResponse.render (/workspace/course/ip/node_modules/express/lib/response.js:1012:7)\r\n    at /workspace/course/ip/routes/index.js:341:13\r\n    at Array.forEach (<anonymous>)\r\n    at QueryReqWrap.callback (/workspace/course/ip/routes/index.js:340:13)\r\n    at QueryReqWrap.onresolve [as oncomplete] (dns.js:198:10) \r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4093/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4093/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4092",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4092/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4092/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4092/events",
    "html_url": "https://github.com/expressjs/express/issues/4092",
    "id": 516171023,
    "node_id": "MDU6SXNzdWU1MTYxNzEwMjM=",
    "number": 4092,
    "title": "service-worker.js 404",
    "user": {
      "login": "KaivnD",
      "id": 37983330,
      "node_id": "MDQ6VXNlcjM3OTgzMzMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/37983330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KaivnD",
      "html_url": "https://github.com/KaivnD",
      "followers_url": "https://api.github.com/users/KaivnD/followers",
      "following_url": "https://api.github.com/users/KaivnD/following{/other_user}",
      "gists_url": "https://api.github.com/users/KaivnD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KaivnD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KaivnD/subscriptions",
      "organizations_url": "https://api.github.com/users/KaivnD/orgs",
      "repos_url": "https://api.github.com/users/KaivnD/repos",
      "events_url": "https://api.github.com/users/KaivnD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KaivnD/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-11-01T15:08:31Z",
    "updated_at": "2019-11-05T23:12:07Z",
    "closed_at": "2019-11-03T00:20:12Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "# What is the missing service-worker.js ?\r\nHi everyone ! I'm new here, I created a express.js app few minute ago, it's on 4.17.1.\r\nMy question is in this screenshot:\r\n\r\n<img width=\"360\" alt=\"WX20191101-230648@2x\" src=\"https://user-images.githubusercontent.com/37983330/68034285-5fc1b800-fcfc-11e9-8e24-b56857e99afb.png\">\r\n\r\n\r\nAnd, here is my simple code:\r\n```js\r\nconst express = require('express')\r\nconst app = express()\r\n \r\napp.get('/', function (req, res) {\r\n  res.send('Hello World')\r\n})\r\n \r\napp.listen(3000)\r\n```\r\n\r\nWhat am I missing ?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4092/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4092/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4091",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4091/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4091/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4091/events",
    "html_url": "https://github.com/expressjs/express/issues/4091",
    "id": 515175598,
    "node_id": "MDU6SXNzdWU1MTUxNzU1OTg=",
    "number": 4091,
    "title": "vulnerability detected in express 4.17.1",
    "user": {
      "login": "prashantLio",
      "id": 55281821,
      "node_id": "MDQ6VXNlcjU1MjgxODIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/55281821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prashantLio",
      "html_url": "https://github.com/prashantLio",
      "followers_url": "https://api.github.com/users/prashantLio/followers",
      "following_url": "https://api.github.com/users/prashantLio/following{/other_user}",
      "gists_url": "https://api.github.com/users/prashantLio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prashantLio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prashantLio/subscriptions",
      "organizations_url": "https://api.github.com/users/prashantLio/orgs",
      "repos_url": "https://api.github.com/users/prashantLio/repos",
      "events_url": "https://api.github.com/users/prashantLio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prashantLio/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-10-31T05:28:51Z",
    "updated_at": "2022-07-14T08:14:37Z",
    "closed_at": "2019-11-01T11:10:38Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "Hi,\r\nwe are getting sonatype-2013-0159 vulnerability in express 4.17.1\r\nIs there any non vulnerable version (non-beta) available or about to be released.\r\nOr is there any recommendation on how we can avoid this issue.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4091/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 1,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4091/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4090",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4090/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4090/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4090/events",
    "html_url": "https://github.com/expressjs/express/issues/4090",
    "id": 514649598,
    "node_id": "MDU6SXNzdWU1MTQ2NDk1OTg=",
    "number": 4090,
    "title": "Just a simple question I have.",
    "user": {
      "login": "yesIamFaded",
      "id": 48751859,
      "node_id": "MDQ6VXNlcjQ4NzUxODU5",
      "avatar_url": "https://avatars.githubusercontent.com/u/48751859?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yesIamFaded",
      "html_url": "https://github.com/yesIamFaded",
      "followers_url": "https://api.github.com/users/yesIamFaded/followers",
      "following_url": "https://api.github.com/users/yesIamFaded/following{/other_user}",
      "gists_url": "https://api.github.com/users/yesIamFaded/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yesIamFaded/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yesIamFaded/subscriptions",
      "organizations_url": "https://api.github.com/users/yesIamFaded/orgs",
      "repos_url": "https://api.github.com/users/yesIamFaded/repos",
      "events_url": "https://api.github.com/users/yesIamFaded/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yesIamFaded/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-10-30T12:59:20Z",
    "updated_at": "2019-10-30T18:34:53Z",
    "closed_at": "2019-10-30T18:34:43Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi there this is not really an issue it is just a question for how to interact with React Native ExpressJS API and postgreSQL DB.\r\n\r\nI guess there is many many ppl here that are pros at writing their own API and communicating with a DB, so pls help me with this simple Q.\r\n\r\nI have a loginScreen in my App where the user enters his username and his password.\r\nThe passwords are stored in a hashed way inside the db.\r\nFirst Question: Do I need to know in wich way they are hashed? Because obviouslly if I want to log a user in I need both the username and the hashed pw but in the App users enter the password normaly - so I guess I need to hash it from my RN App and send the hashed value to my db an there I can compare it? \r\n\r\nHow would a fitting Query look like? \r\n\r\nthis is my query to get the userid by checking if the user is inside my db:\r\n```\r\n`  static getUserId(username, callback) {\r\n    db.query(\r\n      `SELECT userid FROM employee WHERE username = '${username}'`,\r\n      (err, res) => {\r\n        if (err.error) {\r\n          return callback(err);\r\n        } \r\n        callback(res);\r\n      }\r\n    );\r\n  }` \r\n```\r\n\r\nhow can I have multiple where clauses? because this query gives me postgres errors. \r\n```\r\n`SELECT userid FROM employee WHERE username = '${username}' AND WHERE password = '${password}'`\r\n```\r\n\r\nagain sorry for asking it here but I think that many ppl in here actually can give me a hint or even a proper solution.\r\nBest regards Faded.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4090/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4090/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4089",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4089/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4089/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4089/events",
    "html_url": "https://github.com/expressjs/express/issues/4089",
    "id": 513504954,
    "node_id": "MDU6SXNzdWU1MTM1MDQ5NTQ=",
    "number": 4089,
    "title": "Are all route \"handler functions\" considered middleware functions?",
    "user": {
      "login": "markhaslam",
      "id": 6936232,
      "node_id": "MDQ6VXNlcjY5MzYyMzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6936232?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markhaslam",
      "html_url": "https://github.com/markhaslam",
      "followers_url": "https://api.github.com/users/markhaslam/followers",
      "following_url": "https://api.github.com/users/markhaslam/following{/other_user}",
      "gists_url": "https://api.github.com/users/markhaslam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markhaslam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markhaslam/subscriptions",
      "organizations_url": "https://api.github.com/users/markhaslam/orgs",
      "repos_url": "https://api.github.com/users/markhaslam/repos",
      "events_url": "https://api.github.com/users/markhaslam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markhaslam/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2019-10-28T19:16:59Z",
    "updated_at": "2019-10-28T21:52:46Z",
    "closed_at": "2019-10-28T21:52:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In the docs it states :\r\n\r\n> Middleware functions are functions that have access to the request object (req), the response object (res), and the next middleware function in the application’s request-response cycle.\r\n\r\nHowever in a route callback function, or \"handler function\", we often don't add the `next` parameter when it's not needed, such as in this simple example from the docs:\r\n`app.get('/', (req, res) => res.send('Hello World!'))`.\r\n\r\nIs the function `(req, res) => res.send('Hello World!')` in the example above still considered a middleware function even though it doesn't have access to the next middleware function (since `next` wasn't declared as a parameter)?\r\n\r\nI apologize if this is not a good place to ask this question. I just noticed quite a a lot of differences in how people define or understand exactly what a middleware function is in Express, when looking online at various websites. I wanted to go to the source 😄.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4089/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4089/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4088",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4088/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4088/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4088/events",
    "html_url": "https://github.com/expressjs/express/issues/4088",
    "id": 513190955,
    "node_id": "MDU6SXNzdWU1MTMxOTA5NTU=",
    "number": 4088,
    "title": "Unable to send data in res.json?",
    "user": {
      "login": "dileep524",
      "id": 53084291,
      "node_id": "MDQ6VXNlcjUzMDg0Mjkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/53084291?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dileep524",
      "html_url": "https://github.com/dileep524",
      "followers_url": "https://api.github.com/users/dileep524/followers",
      "following_url": "https://api.github.com/users/dileep524/following{/other_user}",
      "gists_url": "https://api.github.com/users/dileep524/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dileep524/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dileep524/subscriptions",
      "organizations_url": "https://api.github.com/users/dileep524/orgs",
      "repos_url": "https://api.github.com/users/dileep524/repos",
      "events_url": "https://api.github.com/users/dileep524/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dileep524/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-10-28T09:32:02Z",
    "updated_at": "2019-10-28T23:25:16Z",
    "closed_at": "2019-10-28T23:25:09Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "my data.js has following\r\n```\r\nconst date = {\r\n  lastDate: '27-1-2019',\r\n};\r\nexport {\r\n  date,\r\n};\r\n```\r\ni just want to import the above file in my mock.js file and send the object in res.json()\r\n\r\nmy mock.js has\r\n```\r\nconst mock = require('../mocks/data.js');\r\nconst projectedDate=mock.date;\r\nmodule.exports = (app) => {\r\napp.post('/test', (req, res) => {\r\n    res.json( projectedDate );\r\n  });\r\n}\r\n```\r\ni was getting following error\r\n```\r\n{\"error\":{},\"level\":\"error\",\"message\":\"uncaughtException: Unexpected token export\\n\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4088/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4088/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4087",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4087/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4087/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4087/events",
    "html_url": "https://github.com/expressjs/express/pull/4087",
    "id": 512748114,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzMyNzAzMzMz",
    "number": 4087,
    "title": "Add yarn examples to Readme",
    "user": {
      "login": "ondrej-merkun",
      "id": 19146450,
      "node_id": "MDQ6VXNlcjE5MTQ2NDUw",
      "avatar_url": "https://avatars.githubusercontent.com/u/19146450?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ondrej-merkun",
      "html_url": "https://github.com/ondrej-merkun",
      "followers_url": "https://api.github.com/users/ondrej-merkun/followers",
      "following_url": "https://api.github.com/users/ondrej-merkun/following{/other_user}",
      "gists_url": "https://api.github.com/users/ondrej-merkun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ondrej-merkun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ondrej-merkun/subscriptions",
      "organizations_url": "https://api.github.com/users/ondrej-merkun/orgs",
      "repos_url": "https://api.github.com/users/ondrej-merkun/repos",
      "events_url": "https://api.github.com/users/ondrej-merkun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ondrej-merkun/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2019-10-25T22:42:31Z",
    "updated_at": "2020-03-25T20:58:13Z",
    "closed_at": "2020-03-25T20:58:13Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4087",
      "html_url": "https://github.com/expressjs/express/pull/4087",
      "diff_url": "https://github.com/expressjs/express/pull/4087.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4087.patch",
      "merged_at": null
    },
    "body": "Yarn is used by a lot of developers so I don't see any reason not to include it in the readme to both make the installation/usage of express easier for them and make sure nobody feels discriminated/left out.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4087/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4087/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4086",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4086/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4086/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4086/events",
    "html_url": "https://github.com/expressjs/express/issues/4086",
    "id": 512593969,
    "node_id": "MDU6SXNzdWU1MTI1OTM5Njk=",
    "number": 4086,
    "title": "req.params is an object when route is defined with regexp",
    "user": {
      "login": "nleclerc",
      "id": 311197,
      "node_id": "MDQ6VXNlcjMxMTE5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/311197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nleclerc",
      "html_url": "https://github.com/nleclerc",
      "followers_url": "https://api.github.com/users/nleclerc/followers",
      "following_url": "https://api.github.com/users/nleclerc/following{/other_user}",
      "gists_url": "https://api.github.com/users/nleclerc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nleclerc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nleclerc/subscriptions",
      "organizations_url": "https://api.github.com/users/nleclerc/orgs",
      "repos_url": "https://api.github.com/users/nleclerc/repos",
      "events_url": "https://api.github.com/users/nleclerc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nleclerc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2019-10-25T15:56:49Z",
    "updated_at": "2019-10-25T16:24:04Z",
    "closed_at": "2019-10-25T16:01:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "[The doc states](https://expressjs.com/en/4x/api.html#req.params) that req.params is an array when the route is defined with a regexp but it is still in fact an object.\r\n\r\nI made an example project : https://github.com/nleclerc/expressbugtest",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4086/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4086/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4085",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4085/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4085/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4085/events",
    "html_url": "https://github.com/expressjs/express/pull/4085",
    "id": 512314942,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzMyMzQ5MzMz",
    "number": 4085,
    "title": "bump thy dependencies / node >= 6 or go home",
    "user": {
      "login": "knoxcard2",
      "id": 56282341,
      "node_id": "MDQ6VXNlcjU2MjgyMzQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/56282341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/knoxcard2",
      "html_url": "https://github.com/knoxcard2",
      "followers_url": "https://api.github.com/users/knoxcard2/followers",
      "following_url": "https://api.github.com/users/knoxcard2/following{/other_user}",
      "gists_url": "https://api.github.com/users/knoxcard2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/knoxcard2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/knoxcard2/subscriptions",
      "organizations_url": "https://api.github.com/users/knoxcard2/orgs",
      "repos_url": "https://api.github.com/users/knoxcard2/repos",
      "events_url": "https://api.github.com/users/knoxcard2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/knoxcard2/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-10-25T05:43:35Z",
    "updated_at": "2019-10-25T18:59:40Z",
    "closed_at": "2019-10-25T18:15:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4085",
      "html_url": "https://github.com/expressjs/express/pull/4085",
      "diff_url": "https://github.com/expressjs/express/pull/4085.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4085.patch",
      "merged_at": null
    },
    "body": "bump thy dependencies",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4085/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4085/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4084",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4084/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4084/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4084/events",
    "html_url": "https://github.com/expressjs/express/issues/4084",
    "id": 511667077,
    "node_id": "MDU6SXNzdWU1MTE2NjcwNzc=",
    "number": 4084,
    "title": "need orginal path to generate api docs",
    "user": {
      "login": "MichelLiu",
      "id": 9865198,
      "node_id": "MDQ6VXNlcjk4NjUxOTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9865198?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MichelLiu",
      "html_url": "https://github.com/MichelLiu",
      "followers_url": "https://api.github.com/users/MichelLiu/followers",
      "following_url": "https://api.github.com/users/MichelLiu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MichelLiu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MichelLiu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MichelLiu/subscriptions",
      "organizations_url": "https://api.github.com/users/MichelLiu/orgs",
      "repos_url": "https://api.github.com/users/MichelLiu/repos",
      "events_url": "https://api.github.com/users/MichelLiu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MichelLiu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 16,
    "created_at": "2019-10-24T02:34:48Z",
    "updated_at": "2019-11-04T10:49:12Z",
    "closed_at": "2019-11-01T16:47:31Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I want to get all the router routing information by traversing app._route.stack and automatically generate the swagger json document in combination with joi. However, Layer Contructor directly parses the path into regexp, and I can't get the original path.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4084/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4084/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4083",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4083/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4083/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4083/events",
    "html_url": "https://github.com/expressjs/express/pull/4083",
    "id": 511663807,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzMxODE5ODAx",
    "number": 4083,
    "title": "add originalPath to layer",
    "user": {
      "login": "MichelLiu",
      "id": 9865198,
      "node_id": "MDQ6VXNlcjk4NjUxOTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9865198?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MichelLiu",
      "html_url": "https://github.com/MichelLiu",
      "followers_url": "https://api.github.com/users/MichelLiu/followers",
      "following_url": "https://api.github.com/users/MichelLiu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MichelLiu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MichelLiu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MichelLiu/subscriptions",
      "organizations_url": "https://api.github.com/users/MichelLiu/orgs",
      "repos_url": "https://api.github.com/users/MichelLiu/repos",
      "events_url": "https://api.github.com/users/MichelLiu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MichelLiu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 163600,
        "node_id": "MDU6TGFiZWwxNjM2MDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false,
        "description": null
      },
      {
        "id": 55587817,
        "node_id": "MDU6TGFiZWw1NTU4NzgxNw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/needs%20tests",
        "name": "needs tests",
        "color": "e11d21",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-10-24T02:21:13Z",
    "updated_at": "2019-10-28T21:55:00Z",
    "closed_at": "2019-10-24T02:24:31Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4083",
      "html_url": "https://github.com/expressjs/express/pull/4083",
      "diff_url": "https://github.com/expressjs/express/pull/4083.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4083.patch",
      "merged_at": null
    },
    "body": "To make easy validation and automatic API documentation npm pkg.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4083/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4083/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4082",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4082/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4082/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4082/events",
    "html_url": "https://github.com/expressjs/express/issues/4082",
    "id": 511109878,
    "node_id": "MDU6SXNzdWU1MTExMDk4Nzg=",
    "number": 4082,
    "title": "Can't connect my App with my Node.js server",
    "user": {
      "login": "yesIamFaded",
      "id": 48751859,
      "node_id": "MDQ6VXNlcjQ4NzUxODU5",
      "avatar_url": "https://avatars.githubusercontent.com/u/48751859?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yesIamFaded",
      "html_url": "https://github.com/yesIamFaded",
      "followers_url": "https://api.github.com/users/yesIamFaded/followers",
      "following_url": "https://api.github.com/users/yesIamFaded/following{/other_user}",
      "gists_url": "https://api.github.com/users/yesIamFaded/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yesIamFaded/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yesIamFaded/subscriptions",
      "organizations_url": "https://api.github.com/users/yesIamFaded/orgs",
      "repos_url": "https://api.github.com/users/yesIamFaded/repos",
      "events_url": "https://api.github.com/users/yesIamFaded/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yesIamFaded/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-10-23T06:41:38Z",
    "updated_at": "2019-10-28T07:53:49Z",
    "closed_at": "2019-10-28T07:53:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi there express team,\r\nI somehow can't connect my React Native App correctly with my postgresql DB with the help of Express.js.\r\n\r\nI have created an App for my workplace and I created a NodeJS(ExpressJS) connection that I want to work with inside the App. I am also using node-postgres package.\r\n\r\nI have my RN Frontend and my Backend in the same file and when I run the test queries that just loggs names out of the db it works if I run my server.js file with node server.js or nodemon server.js.\r\n=> however if I want to call the same query inside the app just on a Button press I get errors.\r\n\r\nExample query: \r\n```js\r\nexports.getUsername = client.query(\"SELECT username FROM employee\",(err,res)=> {\r\n    if(err){\r\n        console.log(err)\r\n    }\r\n    res.rows.map(item => console.log(item.username))\r\n})\r\n```\r\n\r\nthe route is;\r\n`app.get(\"/auth/user\", db.getUsername);`\r\n\r\nmy fetchcall: \r\n```js\r\n  fetch(\"http://myIPaddress:3000/auth/user\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\" : \"application/json\"\r\n      }\r\n    })\r\n    .then((response)=> {\r\n      console.log(\"jRes: \",response)\r\n      console.log(\"status: \", response.status, \"statusText: \", response.statusText)\r\n      return response.text() })\r\n      .then((resJson) => {\r\n        console.log(\"status: \", resJson.status, \"statusText: \", resJson.statusText)\r\n        console.log(\"Json response: \", resJson)\r\n      return resJson\r\n    })\r\n    .catch(err => {\r\n      console.log(\"fetchERR:\", err)\r\n      throw err;\r\n    })\r\n```\r\n\r\nalso tried this fetchcall: \r\n```js\r\n  fetch(\"http://myIPaddress:3000/auth/user\")\r\n    .then(res => {\r\n      console.log(res)\r\n      return res.text()})\r\n    .then(data => {\r\n      console.log(\"loginFetchCall: \", data)\r\n    })\r\n    .catch(err=> console.log(err))\r\n```\r\n\r\nmy response looks like this: \r\n```\r\njRes:  Response {\r\n  \"_bodyBlob\": Blob {\r\n    \"_data\": Object {\r\n      \"blobId\": \"ede22872-4877-4ee0-b702-6b7a465ade94\",\r\n      \"offset\": 0,\r\n      \"size\": 148,\r\n    },\r\n  },\r\n  \"_bodyInit\": Blob {\r\n    \"_data\": Object {\r\n      \"blobId\": \"ede22872-4877-4ee0-b702-6b7a465ade94\",\r\n      \"offset\": 0,\r\n      \"size\": 148,\r\n    },\r\n  },\r\n  \"headers\": Headers {\r\n    \"map\": Object {\r\n      \"access-control-allow-headers\": \"Origin, X-Requested-With, Content-Type, Accept\",\r\n      \"access-control-allow-methods\": \"*\",\r\n      \"access-control-allow-origin\": \"*\",\r\n      \"cache-control\": \"public, max-age=0\",\r\n      \"connection\": \"keep-alive\",\r\n      \"content-length\": \"148\",\r\n      \"content-security-policy\": \"default-src 'none'\",\r\n      \"content-type\": \"text/html; charset=utf-8\",\r\n      \"date\": \"Wed, 23 Oct 2019 06:20:04 GMT\",\r\n      \"x-content-type-options\": \"nosniff\",\r\n      \"x-powered-by\": \"Express\",\r\n    },\r\n  },\r\n  \"ok\": false,\r\n  \"status\": 404,\r\n  \"statusText\": undefined,\r\n  \"type\": \"default\",\r\n  \"url\": \"http://myIPaddress:3000/auth/user\",\r\n}\r\nstatus:  404 statusText:  undefined\r\nstatus:  undefined statusText:  undefined\r\nJson response:  <!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n<meta charset=\"utf-8\">\r\n<title>Error</title>\r\n</head>\r\n<body>\r\n<pre>Cannot GET /auth/user</pre>\r\n</body>\r\n</html>\r\n```\r\n\r\nHelp is appreciated - Thanks!\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4082/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4082/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  }
]