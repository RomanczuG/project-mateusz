[
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3064",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3064/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3064/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3064/events",
    "html_url": "https://github.com/expressjs/express/issues/3064",
    "id": 172737429,
    "node_id": "MDU6SXNzdWUxNzI3Mzc0Mjk=",
    "number": 3064,
    "title": "api documentation document",
    "user": {
      "login": "jonhp",
      "id": 2311501,
      "node_id": "MDQ6VXNlcjIzMTE1MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2311501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonhp",
      "html_url": "https://github.com/jonhp",
      "followers_url": "https://api.github.com/users/jonhp/followers",
      "following_url": "https://api.github.com/users/jonhp/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonhp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonhp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonhp/subscriptions",
      "organizations_url": "https://api.github.com/users/jonhp/orgs",
      "repos_url": "https://api.github.com/users/jonhp/repos",
      "events_url": "https://api.github.com/users/jonhp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonhp/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2016-08-23T15:53:10Z",
    "updated_at": "2016-08-24T22:43:13Z",
    "closed_at": "2016-08-24T18:52:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "i tried to print, http://expressjs.com/en/4x/api.html , on two browsers; but it doesn't format very well. could there be a downloadable .pdf version of the api page added to the \"resources/books and blogs\" page? \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3064/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3064/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3063",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3063/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3063/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3063/events",
    "html_url": "https://github.com/expressjs/express/issues/3063",
    "id": 172672079,
    "node_id": "MDU6SXNzdWUxNzI2NzIwNzk=",
    "number": 3063,
    "title": "bash: cd: myApp: No such file or directory",
    "user": {
      "login": "wuddywuddy",
      "id": 21184974,
      "node_id": "MDQ6VXNlcjIxMTg0OTc0",
      "avatar_url": "https://avatars.githubusercontent.com/u/21184974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wuddywuddy",
      "html_url": "https://github.com/wuddywuddy",
      "followers_url": "https://api.github.com/users/wuddywuddy/followers",
      "following_url": "https://api.github.com/users/wuddywuddy/following{/other_user}",
      "gists_url": "https://api.github.com/users/wuddywuddy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wuddywuddy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wuddywuddy/subscriptions",
      "organizations_url": "https://api.github.com/users/wuddywuddy/orgs",
      "repos_url": "https://api.github.com/users/wuddywuddy/repos",
      "events_url": "https://api.github.com/users/wuddywuddy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wuddywuddy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2016-08-23T11:10:56Z",
    "updated_at": "2016-08-24T23:24:20Z",
    "closed_at": "2016-08-24T18:29:40Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "```\n$ npm install -g express-generator@4\nnpm ERR! Windows_NT 6.3.9600\nnpm ERR! argv \"C:\\\\Program Files\\\\nodejs\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"-g\" \"express-generator@4\"\nnpm ERR! node v4.4.7\nnpm ERR! npm  v2.15.8\nnpm ERR! code ETIMEDOUT\nnpm ERR! errno ETIMEDOUT\nnpm ERR! syscall connect\n\nnpm ERR! network connect ETIMEDOUT 151.101.60.162:443\nnpm ERR! network This is most likely not a problem with npm itself\nnpm ERR! network and is related to network connectivity.\nnpm ERR! network In most cases you are behind a proxy or have bad network settings.\nnpm ERR! network\nnpm ERR! network If you are behind a proxy, please make sure that the\nnpm ERR! network 'proxy' config is set properly.  See: 'npm help config'\n\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     C:\\Users\\Anita\\npm-debug.log\n\nAnita@Nkem MINGW64 ~\n$ npm install -g express-generator@4\nC:\\Users\\Anita\\AppData\\Roaming\\npm\\express -> C:\\Users\\Anita\\AppData\\Roaming\\npm\\node_modules\\express-generator\\bin\\express\nexpress-generator@4.13.4 C:\\Users\\Anita\\AppData\\Roaming\\npm\\node_modules\\express-generator\n├── sorted-object@2.0.0\n├── commander@2.7.1 (graceful-readlink@1.0.1)\n└── mkdirp@0.5.1 (minimist@0.0.8)\n\nAnita@Nkem MINGW64 ~\n$ express\ndestination is not empty, continue? [y/N]\naborting\n\nAnita@Nkem MINGW64 ~\n$ express myApp\n\n   create : myApp\n   create : myApp/package.json\n   create : myApp/app.js\n   create : myApp/public\n   create : myApp/routes\n   create : myApp/routes/index.js\n   create : myApp/routes/users.js\n   create : myApp/public/images\n   create : myApp/views\n   create : myApp/views/index.jade\n   create : myApp/views/layout.jade\n   create : myApp/views/error.jade\n   create : myApp/public/javascripts\n   create : myApp/public/stylesheets\n   create : myApp/public/stylesheets/style.css\n   create : myApp/bin\n   create : myApp/bin/www\n\n   install dependencies:\n     $ cd myApp && npm install\n\n   run the app:\n     $ DEBUG=myApp:* npm start\n\n\nAnita@Nkem MINGW64 ~\n$ cd myApp && npm install\nnpm ERR! fetch failed https://registry.npmjs.org/express/-/express-4.13.4.tgz\nnpm WARN retry will retry, error on last attempt: Error: getaddrinfo ENOENT registry.npmjs.org:443\n$ cd myApp && npm install\nnpm ERR! fetch failed https://registry.npmjs.org/express/-/express-4.13.4.tgz\nnpm WARN retry will retry, error on last attempt: Error: connect ETIMEDOUT 151.101.16.162:443\nnpm ERR! Windows_NT 6.3.9600\nnpm ERR! argv \"C:\\\\Program Files\\\\nodejs\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\"\nnpm ERR! node v4.4.7\nnpm ERR! npm  v2.15.8\nnpm ERR! code ENOENT\nnpm ERR! errno ENOENT\nnpm ERR! syscall getaddrinfo\n\nnpm ERR! enoent getaddrinfo ENOENT registry.npmjs.org:443\nnpm ERR! enoent This is most likely not a problem with npm itself\nnpm ERR! enoent and is related to npm not being able to find a file.\nnpm ERR! enoent\n\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     C:\\Users\\Anita\\myApp\\npm-debug.log\n\nAnita@Nkem MINGW64 ~/myApp\n$ $ cd myApp && npm install\nbash: $: command not found\n\nAnita@Nkem MINGW64 ~/myApp\n$ cd myApp && npm install\nbash: cd: myApp: No such file or directory\n\nAnita@Nkem MINGW64 ~/myApp\n$ cd ang-app && npm install\nbash: cd: ang-app: No such file or directory\n```\n\nPlease help\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3063/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3063/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3062",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3062/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3062/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3062/events",
    "html_url": "https://github.com/expressjs/express/issues/3062",
    "id": 172649335,
    "node_id": "MDU6SXNzdWUxNzI2NDkzMzU=",
    "number": 3062,
    "title": "Debug namespace is not microservices (SOA) oriented",
    "user": {
      "login": "rafis",
      "id": 3502395,
      "node_id": "MDQ6VXNlcjM1MDIzOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3502395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rafis",
      "html_url": "https://github.com/rafis",
      "followers_url": "https://api.github.com/users/rafis/followers",
      "following_url": "https://api.github.com/users/rafis/following{/other_user}",
      "gists_url": "https://api.github.com/users/rafis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rafis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rafis/subscriptions",
      "organizations_url": "https://api.github.com/users/rafis/orgs",
      "repos_url": "https://api.github.com/users/rafis/repos",
      "events_url": "https://api.github.com/users/rafis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rafis/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2016-08-23T09:14:56Z",
    "updated_at": "2016-08-25T10:57:14Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Express uses hardcoded values for debug namespace, for example:\nhttps://github.com/expressjs/express/blob/b69b7605b07b41273acc931d25ab585377bcd107/lib/router/index.js#L20\n\nand it is extremly hard to determine in output where things are happening while doing TDD on microservices architecture. It would be nice to allow to specify prefix for namespace, i.e. per microservice which is an express app.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3062/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3062/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3061",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3061/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3061/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3061/events",
    "html_url": "https://github.com/expressjs/express/pull/3061",
    "id": 172572786,
    "node_id": "MDExOlB1bGxSZXF1ZXN0ODIyNzYzNzA=",
    "number": 3061,
    "title": "Add test coverage for res.sendFile's \"cacheControl\" option and for various examples",
    "user": {
      "login": "ZLester",
      "id": 2387793,
      "node_id": "MDQ6VXNlcjIzODc3OTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2387793?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ZLester",
      "html_url": "https://github.com/ZLester",
      "followers_url": "https://api.github.com/users/ZLester/followers",
      "following_url": "https://api.github.com/users/ZLester/following{/other_user}",
      "gists_url": "https://api.github.com/users/ZLester/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ZLester/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ZLester/subscriptions",
      "organizations_url": "https://api.github.com/users/ZLester/orgs",
      "repos_url": "https://api.github.com/users/ZLester/repos",
      "events_url": "https://api.github.com/users/ZLester/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ZLester/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 133578714,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/tests",
        "name": "tests",
        "color": "944008",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-08-22T22:45:10Z",
    "updated_at": "2017-01-21T05:34:21Z",
    "closed_at": "2017-01-21T05:34:21Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3061",
      "html_url": "https://github.com/expressjs/express/pull/3061",
      "diff_url": "https://github.com/expressjs/express/pull/3061.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3061.patch",
      "merged_at": null
    },
    "body": "This also required that I export both examples' `app` object and make the jade's examples use of morgan dependent on `env`.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3061/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3061/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3060",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3060/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3060/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3060/events",
    "html_url": "https://github.com/expressjs/express/issues/3060",
    "id": 172518267,
    "node_id": "MDU6SXNzdWUxNzI1MTgyNjc=",
    "number": 3060,
    "title": "res.json() doesn't always return the response to the client",
    "user": {
      "login": "essentialskills",
      "id": 8137013,
      "node_id": "MDQ6VXNlcjgxMzcwMTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8137013?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/essentialskills",
      "html_url": "https://github.com/essentialskills",
      "followers_url": "https://api.github.com/users/essentialskills/followers",
      "following_url": "https://api.github.com/users/essentialskills/following{/other_user}",
      "gists_url": "https://api.github.com/users/essentialskills/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/essentialskills/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/essentialskills/subscriptions",
      "organizations_url": "https://api.github.com/users/essentialskills/orgs",
      "repos_url": "https://api.github.com/users/essentialskills/repos",
      "events_url": "https://api.github.com/users/essentialskills/events{/privacy}",
      "received_events_url": "https://api.github.com/users/essentialskills/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2016-08-22T18:13:54Z",
    "updated_at": "2018-11-02T17:12:13Z",
    "closed_at": "2016-08-23T21:50:50Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "I am using angular to talk to express and sometimes the route doesn't return the response.\n\nHere is what I have \n\nExpress code\n\n``` js\nrouter\n    .route('/usage/:id/:query/:type')\n        .get(function (req, res) {\n\n            // count all records from customer by customer ID\n            var sqlQuery = \"select count(*) from Tracking where CustID='\"+req.params.id+\"'\";\n\n           // filter count by column name. Example where: Browser = Chrome.\n            if (req.params.query != 'undefined')\n                sqlQuery += \"and \"+req.params.query+\" Like '%\"+req.params.type+\"%'\";\n\n            sdb.select(sqlQuery,function( error, result, meta ){\n                    res.json(result); // sometimes doesn't return back to client? But the code always reaches here\n            });\n    });\n```\n\nAngular controller code\n\n``` js\n    .controller('CustomerUsageController', function ($scope, $rootScope, $location, Customer, $routeParams, $http) {\n        function getUsage(itemName, custID, query, type){\n            $http.get(\"/api/usage/\"+custID+\"/\"+query+\"/\"+type)\n            .then(function(res) {\n\n               var usage = res.data;\n                if (typeof usage[0] != 'undefined') {){\n                    $scope.usage[itemName] = usage[0].Count;\n                }\n                else{ // database failed so try again\n                    getUsage(itemName, custID, query, type); // Problem: This will call getUsage correctly  except it will never get back inside the .then function of $http.get() above.\n                }\n            },\n            function(err) {\n               // no errors\n            });\n        }\n\n        getUsage(\"Chrome\",$routeParams.id, \"Browser\", \"Chrome\");\n        getUsage(\"Safari\",$routeParams.id, \"Browser\", \"Safari\");\n        getUsage(\"Netscape\",$routeParams.id, \"Browser\", \"Netscape\");\n        getUsage(\"Firefox\",$routeParams.id, \"Browser\", \"Firefox\");\n        getUsage(\"Windows\",$routeParams.id, \"OS\", \"Win\");\n        getUsage(\"Mac\",$routeParams.id, \"OS\", \"Mac\");\n        getUsage(\"Chromebook\",$routeParams.id, \"OS\", \"CrOS\");\n        getUsage(\"iPad\",$routeParams.id, \"OS\", \"iPad\");\n        getUsage(\"Surface\",$routeParams.id, \"OS\", \"Platform\");\n        getUsage(\"Total\",$routeParams.id);\n}\n```\n\nThe bottom getUsages in CustomerUsageController code all work.  But it appears querying the database that many times this fast causes the database to fail sometimes.  The failed query(s) return back to Angular a NextToken.   My solution is to recursively call getUsage again inside the http.get().then.  This will tell Express to run the same query again.  And that works but the response is never returned back to the client.\n\nDebugging express it does call .route('/usage/:id/:query/:type') and all the code inside will work.  But nothing will ever get passed back to angular.  Other things to note: error = null inside sdb.select(sqlQuery,function( error, result, meta ){ and result variable is correctly populated with the data I want passed back.   It just never is.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3060/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3060/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3059",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3059/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3059/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3059/events",
    "html_url": "https://github.com/expressjs/express/issues/3059",
    "id": 171826066,
    "node_id": "MDU6SXNzdWUxNzE4MjYwNjY=",
    "number": 3059,
    "title": "Access to req.header in the 'before save' callbacks",
    "user": {
      "login": "abhay8nitt",
      "id": 8450003,
      "node_id": "MDQ6VXNlcjg0NTAwMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8450003?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abhay8nitt",
      "html_url": "https://github.com/abhay8nitt",
      "followers_url": "https://api.github.com/users/abhay8nitt/followers",
      "following_url": "https://api.github.com/users/abhay8nitt/following{/other_user}",
      "gists_url": "https://api.github.com/users/abhay8nitt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abhay8nitt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abhay8nitt/subscriptions",
      "organizations_url": "https://api.github.com/users/abhay8nitt/orgs",
      "repos_url": "https://api.github.com/users/abhay8nitt/repos",
      "events_url": "https://api.github.com/users/abhay8nitt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abhay8nitt/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-08-18T06:19:52Z",
    "updated_at": "2016-08-31T06:26:39Z",
    "closed_at": "2016-08-31T05:53:50Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "How can get access to req.header in the 'before save' callbacks?\n\nCode\n\nCofeeShop.observe('before save', function(ctx,next){\nctx.req.headers['key'] ; // I want to do something like this.. this works in express but not in strongloop\n//\n//\n});\n\nIn case this is not possible how can I override the \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3059/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3059/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3058",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3058/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3058/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3058/events",
    "html_url": "https://github.com/expressjs/express/issues/3058",
    "id": 171585774,
    "node_id": "MDU6SXNzdWUxNzE1ODU3NzQ=",
    "number": 3058,
    "title": "express.Router()",
    "user": {
      "login": "cuni0716",
      "id": 9133999,
      "node_id": "MDQ6VXNlcjkxMzM5OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9133999?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cuni0716",
      "html_url": "https://github.com/cuni0716",
      "followers_url": "https://api.github.com/users/cuni0716/followers",
      "following_url": "https://api.github.com/users/cuni0716/following{/other_user}",
      "gists_url": "https://api.github.com/users/cuni0716/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cuni0716/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cuni0716/subscriptions",
      "organizations_url": "https://api.github.com/users/cuni0716/orgs",
      "repos_url": "https://api.github.com/users/cuni0716/repos",
      "events_url": "https://api.github.com/users/cuni0716/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cuni0716/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-08-17T06:43:11Z",
    "updated_at": "2022-07-01T15:58:56Z",
    "closed_at": "2016-08-17T06:53:26Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "A function with a name starting with an uppercase letter should only be used as a constructor.\n\nThe sentence `const router = express.Router();` issues with AirBnb eslint.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3058/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3058/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3057",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3057/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3057/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3057/events",
    "html_url": "https://github.com/expressjs/express/issues/3057",
    "id": 171395998,
    "node_id": "MDU6SXNzdWUxNzEzOTU5OTg=",
    "number": 3057,
    "title": "app.locals not passed down to a subapp",
    "user": {
      "login": "antpaw",
      "id": 108543,
      "node_id": "MDQ6VXNlcjEwODU0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/108543?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/antpaw",
      "html_url": "https://github.com/antpaw",
      "followers_url": "https://api.github.com/users/antpaw/followers",
      "following_url": "https://api.github.com/users/antpaw/following{/other_user}",
      "gists_url": "https://api.github.com/users/antpaw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/antpaw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/antpaw/subscriptions",
      "organizations_url": "https://api.github.com/users/antpaw/orgs",
      "repos_url": "https://api.github.com/users/antpaw/repos",
      "events_url": "https://api.github.com/users/antpaw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/antpaw/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-08-16T12:30:52Z",
    "updated_at": "2016-09-06T07:51:21Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In this example I would expect that `appTitle` will be available to me, because this is what is says in [docs](http://expressjs.com/en/4x/api.html#app.locals). \n\n> The app.locals object has properties that are local variables within the application.\n\nThe same way I don't have to set the `'view engine'`, it just uses the one from the parent. But it's not the case, `appTitle` becomes `undefined`.\n\n``` javascript\nvar express = require('express');\n\nvar app = module.exports = express();\n\napp.set('view engine', 'pug');\napp.locals.appTitle = 'yay';\n\nvar subapp = express();\n\nsubapp.get('/', function (req, res) {\n  res.render('index', {myVar: 'global var'});\n});\n\napp.use(subapp);\n\nvar port = 5000;\napp.listen(port, () => console.log('running on ' + port));\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3057/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3057/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3056",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3056/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3056/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3056/events",
    "html_url": "https://github.com/expressjs/express/issues/3056",
    "id": 171213389,
    "node_id": "MDU6SXNzdWUxNzEyMTMzODk=",
    "number": 3056,
    "title": "Can't install express",
    "user": {
      "login": "meanlittlechimp",
      "id": 17816869,
      "node_id": "MDQ6VXNlcjE3ODE2ODY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/17816869?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meanlittlechimp",
      "html_url": "https://github.com/meanlittlechimp",
      "followers_url": "https://api.github.com/users/meanlittlechimp/followers",
      "following_url": "https://api.github.com/users/meanlittlechimp/following{/other_user}",
      "gists_url": "https://api.github.com/users/meanlittlechimp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meanlittlechimp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meanlittlechimp/subscriptions",
      "organizations_url": "https://api.github.com/users/meanlittlechimp/orgs",
      "repos_url": "https://api.github.com/users/meanlittlechimp/repos",
      "events_url": "https://api.github.com/users/meanlittlechimp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meanlittlechimp/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-08-15T17:00:22Z",
    "updated_at": "2016-08-15T17:35:32Z",
    "closed_at": "2016-08-15T17:35:32Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I've tried to install both recommended versions of express (4.4.7 and 6.3.1) and I keep getting errors saying these are the only valid install targets:  \n\nAm I doing something wrong?  I've attached my debug log.  It seems most of the responses to this error are not having the most recent npm version which i can't be it because i have the most recent version (3.10.6)\n\nThanks for any help!  Been at this for 4 hours.  I guess I could just install one of the other versions, but I just wanted to figure out what the rookie mistake I must be making.  : ( \n\n```\nmy echo $PATH \n/usr/local/bin:/Users/cdixon/local/nodejs/bin:/Library/Frameworks/Python.framework/Versions/2.7/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin\n```\n\nHere is my debug log:\n\n```\n0 info it worked if it ends with ok\n1 verbose cli [ '/usr/local/Cellar/node/6.3.1/bin/node',\n1 verbose cli   '/usr/local/bin/npm',\n1 verbose cli   'install',\n1 verbose cli   'express' ]\n2 info using npm@3.10.6\n3 info using node@v6.3.1\n4 silly loadCurrentTree Starting\n5 silly install loadCurrentTree\n6 silly install readLocalPackageData\n7 silly fetchPackageMetaData express@4.4.7\n8 silly fetchNamedPackageData express\n9 silly mapToRegistry name express\n10 silly mapToRegistry using default registry\n11 silly mapToRegistry registry https://registry.npmjs.org/\n12 silly mapToRegistry data Result {\n12 silly mapToRegistry   raw: 'express',\n12 silly mapToRegistry   scope: null,\n12 silly mapToRegistry   escapedName: 'express',\n12 silly mapToRegistry   name: 'express',\n12 silly mapToRegistry   rawSpec: '',\n12 silly mapToRegistry   spec: 'latest',\n12 silly mapToRegistry   type: 'tag' }\n13 silly mapToRegistry uri https://registry.npmjs.org/express\n14 verbose get https://registry.npmjs.org/express not expired, no request\n15 silly fetchNamedPackageData No valid target from cache, forcing network\n16 verbose request uri https://registry.npmjs.org/express\n17 verbose request no auth needed\n18 info attempt registry request try #1 at 11:58:36 AM\n19 verbose request id f9fc9701f99c5541\n20 http request GET https://registry.npmjs.org/express\n21 http 200 https://registry.npmjs.org/express\n22 verbose headers { server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',\n22 verbose headers   etag: '\"EZ5LR5NXZWKZG9YS144R6HOO0\"',\n22 verbose headers   'content-type': 'application/json',\n22 verbose headers   'content-encoding': 'gzip',\n22 verbose headers   'cache-control': 'max-age=300',\n22 verbose headers   'content-length': '55897',\n22 verbose headers   'accept-ranges': 'bytes',\n22 verbose headers   date: 'Mon, 15 Aug 2016 15:58:36 GMT',\n22 verbose headers   via: '1.1 varnish',\n22 verbose headers   age: '253',\n22 verbose headers   connection: 'keep-alive',\n22 verbose headers   'x-served-by': 'cache-atl6234-ATL',\n22 verbose headers   'x-cache': 'HIT',\n22 verbose headers   'x-cache-hits': '6',\n22 verbose headers   'x-timer': 'S1471276716.229334,VS0,VE0',\n22 verbose headers   vary: 'Accept-Encoding' }\n23 silly get cb [ 200,\n23 silly get   { server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',\n23 silly get     etag: '\"EZ5LR5NXZWKZG9YS144R6HOO0\"',\n23 silly get     'content-type': 'application/json',\n23 silly get     'content-encoding': 'gzip',\n23 silly get     'cache-control': 'max-age=300',\n23 silly get     'content-length': '55897',\n23 silly get     'accept-ranges': 'bytes',\n23 silly get     date: 'Mon, 15 Aug 2016 15:58:36 GMT',\n23 silly get     via: '1.1 varnish',\n23 silly get     age: '253',\n23 silly get     connection: 'keep-alive',\n23 silly get     'x-served-by': 'cache-atl6234-ATL',\n23 silly get     'x-cache': 'HIT',\n23 silly get     'x-cache-hits': '6',\n23 silly get     'x-timer': 'S1471276716.229334,VS0,VE0',\n23 silly get     vary: 'Accept-Encoding' } ]\n24 verbose get saving express to /Users/cdixon/.npm/registry.npmjs.org/express/.cache.json\n25 verbose correctMkdir /Users/cdixon/.npm correctMkdir not in flight; initializing\n26 silly fetchPackageMetaData Error: No compatible version found: express@4.4.7\n26 silly fetchPackageMetaData Valid install targets:\n26 silly fetchPackageMetaData 5.0.0-alpha.2, 5.0.0-alpha.1, 4.14.0, 4.13.4, 4.13.3, 4.13.2, 4.13.1, 4.13.0, 4.12.4, 4.12.3, 4.12.2, 4.12.1, 4.12.0, 4.11.2, 4.11.1, 4.11.0, 4.10.8, 4.10.7, 4.10.6, 4.10.5, 4.10.4, 4.10.3, 4.10.2, 4.10.1, 4.10.0, 4.9.8, 4.9.7, 4.9.6, 4.9.5, 4.9.4, 4.9.3, 4.9.2, 4.9.1, 4.9.0, 4.8.8, 4.8.7, 4.8.6, 4.8.5, 4.8.4, 4.8.3, 4.8.2, 4.8.1, 4.8.0, 4.7.4, 4.7.3, 4.7.2, 4.7.1, 4.7.0, 4.6.1, 4.6.0, 4.5.1, 4.5.0, 4.4.5, 4.4.4, 4.4.3, 4.4.2, 4.4.1, 4.4.0, 4.3.2, 4.3.1, 4.3.0, 4.2.0, 4.1.2, 4.1.1, 4.1.0, 4.0.0, 4.0.0-rc4, 4.0.0-rc3, 4.0.0-rc2, 4.0.0-rc1, 3.21.2, 3.21.1, 3.21.0, 3.20.3, 3.20.2, 3.20.1, 3.20.0, 3.19.2, 3.19.1, 3.19.0, 3.18.6, 3.18.5, 3.18.4, 3.18.3, 3.18.2, 3.18.1, 3.18.0, 3.17.8, 3.17.7, 3.17.6, 3.17.5, 3.17.4, 3.17.3, 3.17.2, 3.17.1, 3.17.0, 3.16.10, 3.16.9, 3.16.8, 3.16.7, 3.16.6, 3.16.5, 3.16.4, 3.16.3, 3.16.2, 3.16.1, 3.16.0, 3.15.3, 3.15.2, 3.15.1, 3.15.0, 3.14.0, 3.13.0, 3.12.1, 3.12.0, 3.11.0, 3.10.5, 3.10.4, 3.10.3, 3.10.2, 3.10.1, 3.10.0, 3.9.0, 3.8.1, 3.8.0, 3.7.0, 3.6.0, 3.5.3, 3.5.2, 3.5.1, 3.5.0, 3.4.8, 3.4.7, 3.4.6, 3.4.5, 3.4.4, 3.4.3, 3.4.2, 3.4.1, 3.4.0, 3.3.8, 3.3.7, 3.3.6, 3.3.5, 3.3.4, 3.3.3, 3.3.2, 3.3.1, 3.3.0, 3.2.6, 3.2.5, 3.2.4, 3.2.3, 3.2.2, 3.2.1, 3.2.0, 3.1.2, 3.1.1, 3.1.0, 3.0.6, 3.0.5, 3.0.4, 3.0.3, 3.0.2, 3.0.1, 3.0.0, 3.0.0-rc5, 3.0.0-rc4, 3.0.0-rc3, 3.0.0-rc2, 3.0.0-rc1, 3.0.0-beta7, 3.0.0-beta6, 3.0.0-beta4, 3.0.0-beta3, 3.0.0-beta2, 3.0.0-beta1, 3.0.0-alpha5, 3.0.0-alpha4, 3.0.0-alpha3, 3.0.0-alpha2, 3.0.0-alpha1, 2.5.11, 2.5.10, 2.5.9, 2.5.8, 2.5.7, 2.5.6, 2.5.5, 2.5.4, 2.5.3, 2.5.2, 2.5.1, 2.5.0, 2.4.7, 2.4.6, 2.4.5, 2.4.4, 2.4.3, 2.4.2, 2.4.1, 2.4.0, 2.3.12, 2.3.11, 2.3.10, 2.3.9, 2.3.8, 2.3.7, 2.3.6, 2.3.5, 2.3.4, 2.3.3, 2.3.2, 2.3.1, 2.3.0, 2.2.2, 2.2.1, 2.2.0, 2.1.1, 2.1.0, 2.0.0, 2.0.0-rc3, 2.0.0-rc2, 2.0.0-rc, 2.0.0-beta3, 2.0.0-beta2, 2.0.0-beta, 1.0.8, 1.0.7, 1.0.6, 1.0.5, 1.0.4, 1.0.3, 1.0.2, 1.0.1, 1.0.0, 1.0.0-rc4, 1.0.0-rc3, 1.0.0-rc2, 1.0.0-rc, 1.0.0-beta2, 1.0.0-beta, 0.14.1, 0.14.0\n26 silly fetchPackageMetaData\n26 silly fetchPackageMetaData     at pickVersionFromRegistryDocument (/usr/local/lib/node_modules/npm/lib/fetch-package-metadata.js:178:16)\n26 silly fetchPackageMetaData     at /usr/local/lib/node_modules/npm/node_modules/iferr/index.js:13:50\n26 silly fetchPackageMetaData     at /usr/local/lib/node_modules/npm/lib/utils/pulse-till-done.js:20:8\n26 silly fetchPackageMetaData     at saved (/usr/local/lib/node_modules/npm/lib/cache/caching-client.js:174:7)\n26 silly fetchPackageMetaData     at /usr/local/lib/node_modules/npm/node_modules/graceful-fs/polyfills.js:210:7\n26 silly fetchPackageMetaData     at FSReqWrap.oncomplete (fs.js:123:15)\n26 silly fetchPackageMetaData  error for express@4.4.7 Error: No compatible version found: express@4.4.7\n26 silly fetchPackageMetaData Valid install targets:\n26 silly fetchPackageMetaData 5.0.0-alpha.2, 5.0.0-alpha.1, 4.14.0, 4.13.4, 4.13.3, 4.13.2, 4.13.1, 4.13.0, 4.12.4, 4.12.3, 4.12.2, 4.12.1, 4.12.0, 4.11.2, 4.11.1, 4.11.0, 4.10.8, 4.10.7, 4.10.6, 4.10.5, 4.10.4, 4.10.3, 4.10.2, 4.10.1, 4.10.0, 4.9.8, 4.9.7, 4.9.6, 4.9.5, 4.9.4, 4.9.3, 4.9.2, 4.9.1, 4.9.0, 4.8.8, 4.8.7, 4.8.6, 4.8.5, 4.8.4, 4.8.3, 4.8.2, 4.8.1, 4.8.0, 4.7.4, 4.7.3, 4.7.2, 4.7.1, 4.7.0, 4.6.1, 4.6.0, 4.5.1, 4.5.0, 4.4.5, 4.4.4, 4.4.3, 4.4.2, 4.4.1, 4.4.0, 4.3.2, 4.3.1, 4.3.0, 4.2.0, 4.1.2, 4.1.1, 4.1.0, 4.0.0, 4.0.0-rc4, 4.0.0-rc3, 4.0.0-rc2, 4.0.0-rc1, 3.21.2, 3.21.1, 3.21.0, 3.20.3, 3.20.2, 3.20.1, 3.20.0, 3.19.2, 3.19.1, 3.19.0, 3.18.6, 3.18.5, 3.18.4, 3.18.3, 3.18.2, 3.18.1, 3.18.0, 3.17.8, 3.17.7, 3.17.6, 3.17.5, 3.17.4, 3.17.3, 3.17.2, 3.17.1, 3.17.0, 3.16.10, 3.16.9, 3.16.8, 3.16.7, 3.16.6, 3.16.5, 3.16.4, 3.16.3, 3.16.2, 3.16.1, 3.16.0, 3.15.3, 3.15.2, 3.15.1, 3.15.0, 3.14.0, 3.13.0, 3.12.1, 3.12.0, 3.11.0, 3.10.5, 3.10.4, 3.10.3, 3.10.2, 3.10.1, 3.10.0, 3.9.0, 3.8.1, 3.8.0, 3.7.0, 3.6.0, 3.5.3, 3.5.2, 3.5.1, 3.5.0, 3.4.8, 3.4.7, 3.4.6, 3.4.5, 3.4.4, 3.4.3, 3.4.2, 3.4.1, 3.4.0, 3.3.8, 3.3.7, 3.3.6, 3.3.5, 3.3.4, 3.3.3, 3.3.2, 3.3.1, 3.3.0, 3.2.6, 3.2.5, 3.2.4, 3.2.3, 3.2.2, 3.2.1, 3.2.0, 3.1.2, 3.1.1, 3.1.0, 3.0.6, 3.0.5, 3.0.4, 3.0.3, 3.0.2, 3.0.1, 3.0.0, 3.0.0-rc5, 3.0.0-rc4, 3.0.0-rc3, 3.0.0-rc2, 3.0.0-rc1, 3.0.0-beta7, 3.0.0-beta6, 3.0.0-beta4, 3.0.0-beta3, 3.0.0-beta2, 3.0.0-beta1, 3.0.0-alpha5, 3.0.0-alpha4, 3.0.0-alpha3, 3.0.0-alpha2, 3.0.0-alpha1, 2.5.11, 2.5.10, 2.5.9, 2.5.8, 2.5.7, 2.5.6, 2.5.5, 2.5.4, 2.5.3, 2.5.2, 2.5.1, 2.5.0, 2.4.7, 2.4.6, 2.4.5, 2.4.4, 2.4.3, 2.4.2, 2.4.1, 2.4.0, 2.3.12, 2.3.11, 2.3.10, 2.3.9, 2.3.8, 2.3.7, 2.3.6, 2.3.5, 2.3.4, 2.3.3, 2.3.2, 2.3.1, 2.3.0, 2.2.2, 2.2.1, 2.2.0, 2.1.1, 2.1.0, 2.0.0, 2.0.0-rc3, 2.0.0-rc2, 2.0.0-rc, 2.0.0-beta3, 2.0.0-beta2, 2.0.0-beta, 1.0.8, 1.0.7, 1.0.6, 1.0.5, 1.0.4, 1.0.3, 1.0.2, 1.0.1, 1.0.0, 1.0.0-rc4, 1.0.0-rc3, 1.0.0-rc2, 1.0.0-rc, 1.0.0-beta2, 1.0.0-beta, 0.14.1, 0.14.0\n26 silly fetchPackageMetaData\n26 silly fetchPackageMetaData     at pickVersionFromRegistryDocument (/usr/local/lib/node_modules/npm/lib/fetch-package-metadata.js:178:16)\n26 silly fetchPackageMetaData     at /usr/local/lib/node_modules/npm/node_modules/iferr/index.js:13:50\n26 silly fetchPackageMetaData     at /usr/local/lib/node_modules/npm/lib/utils/pulse-till-done.js:20:8\n26 silly fetchPackageMetaData     at saved (/usr/local/lib/node_modules/npm/lib/cache/caching-client.js:174:7)\n26 silly fetchPackageMetaData     at /usr/local/lib/node_modules/npm/node_modules/graceful-fs/polyfills.js:210:7\n26 silly fetchPackageMetaData     at FSReqWrap.oncomplete (fs.js:123:15)\n27 silly rollbackFailedOptional Starting\n28 silly rollbackFailedOptional Finishing\n29 silly runTopLevelLifecycles Starting\n30 silly runTopLevelLifecycles Finishing\n31 silly install printInstalled\n32 verbose stack Error: No compatible version found: express@4.4.7\n32 verbose stack Valid install targets:\n32 verbose stack 5.0.0-alpha.2, 5.0.0-alpha.1, 4.14.0, 4.13.4, 4.13.3, 4.13.2, 4.13.1, 4.13.0, 4.12.4, 4.12.3, 4.12.2, 4.12.1, 4.12.0, 4.11.2, 4.11.1, 4.11.0, 4.10.8, 4.10.7, 4.10.6, 4.10.5, 4.10.4, 4.10.3, 4.10.2, 4.10.1, 4.10.0, 4.9.8, 4.9.7, 4.9.6, 4.9.5, 4.9.4, 4.9.3, 4.9.2, 4.9.1, 4.9.0, 4.8.8, 4.8.7, 4.8.6, 4.8.5, 4.8.4, 4.8.3, 4.8.2, 4.8.1, 4.8.0, 4.7.4, 4.7.3, 4.7.2, 4.7.1, 4.7.0, 4.6.1, 4.6.0, 4.5.1, 4.5.0, 4.4.5, 4.4.4, 4.4.3, 4.4.2, 4.4.1, 4.4.0, 4.3.2, 4.3.1, 4.3.0, 4.2.0, 4.1.2, 4.1.1, 4.1.0, 4.0.0, 4.0.0-rc4, 4.0.0-rc3, 4.0.0-rc2, 4.0.0-rc1, 3.21.2, 3.21.1, 3.21.0, 3.20.3, 3.20.2, 3.20.1, 3.20.0, 3.19.2, 3.19.1, 3.19.0, 3.18.6, 3.18.5, 3.18.4, 3.18.3, 3.18.2, 3.18.1, 3.18.0, 3.17.8, 3.17.7, 3.17.6, 3.17.5, 3.17.4, 3.17.3, 3.17.2, 3.17.1, 3.17.0, 3.16.10, 3.16.9, 3.16.8, 3.16.7, 3.16.6, 3.16.5, 3.16.4, 3.16.3, 3.16.2, 3.16.1, 3.16.0, 3.15.3, 3.15.2, 3.15.1, 3.15.0, 3.14.0, 3.13.0, 3.12.1, 3.12.0, 3.11.0, 3.10.5, 3.10.4, 3.10.3, 3.10.2, 3.10.1, 3.10.0, 3.9.0, 3.8.1, 3.8.0, 3.7.0, 3.6.0, 3.5.3, 3.5.2, 3.5.1, 3.5.0, 3.4.8, 3.4.7, 3.4.6, 3.4.5, 3.4.4, 3.4.3, 3.4.2, 3.4.1, 3.4.0, 3.3.8, 3.3.7, 3.3.6, 3.3.5, 3.3.4, 3.3.3, 3.3.2, 3.3.1, 3.3.0, 3.2.6, 3.2.5, 3.2.4, 3.2.3, 3.2.2, 3.2.1, 3.2.0, 3.1.2, 3.1.1, 3.1.0, 3.0.6, 3.0.5, 3.0.4, 3.0.3, 3.0.2, 3.0.1, 3.0.0, 3.0.0-rc5, 3.0.0-rc4, 3.0.0-rc3, 3.0.0-rc2, 3.0.0-rc1, 3.0.0-beta7, 3.0.0-beta6, 3.0.0-beta4, 3.0.0-beta3, 3.0.0-beta2, 3.0.0-beta1, 3.0.0-alpha5, 3.0.0-alpha4, 3.0.0-alpha3, 3.0.0-alpha2, 3.0.0-alpha1, 2.5.11, 2.5.10, 2.5.9, 2.5.8, 2.5.7, 2.5.6, 2.5.5, 2.5.4, 2.5.3, 2.5.2, 2.5.1, 2.5.0, 2.4.7, 2.4.6, 2.4.5, 2.4.4, 2.4.3, 2.4.2, 2.4.1, 2.4.0, 2.3.12, 2.3.11, 2.3.10, 2.3.9, 2.3.8, 2.3.7, 2.3.6, 2.3.5, 2.3.4, 2.3.3, 2.3.2, 2.3.1, 2.3.0, 2.2.2, 2.2.1, 2.2.0, 2.1.1, 2.1.0, 2.0.0, 2.0.0-rc3, 2.0.0-rc2, 2.0.0-rc, 2.0.0-beta3, 2.0.0-beta2, 2.0.0-beta, 1.0.8, 1.0.7, 1.0.6, 1.0.5, 1.0.4, 1.0.3, 1.0.2, 1.0.1, 1.0.0, 1.0.0-rc4, 1.0.0-rc3, 1.0.0-rc2, 1.0.0-rc, 1.0.0-beta2, 1.0.0-beta, 0.14.1, 0.14.0\n32 verbose stack\n32 verbose stack     at pickVersionFromRegistryDocument (/usr/local/lib/node_modules/npm/lib/fetch-package-metadata.js:178:16)\n32 verbose stack     at /usr/local/lib/node_modules/npm/node_modules/iferr/index.js:13:50\n32 verbose stack     at /usr/local/lib/node_modules/npm/lib/utils/pulse-till-done.js:20:8\n32 verbose stack     at saved (/usr/local/lib/node_modules/npm/lib/cache/caching-client.js:174:7)\n32 verbose stack     at /usr/local/lib/node_modules/npm/node_modules/graceful-fs/polyfills.js:210:7\n32 verbose stack     at FSReqWrap.oncomplete (fs.js:123:15)\n33 verbose cwd /Users/cdixon/Desktop/NodeProjects/feedbot\n34 error Darwin 15.3.0\n35 error argv \"/usr/local/Cellar/node/6.3.1/bin/node\" \"/usr/local/bin/npm\" \"install\" \"express\"\n36 error node v6.3.1\n37 error npm  v3.10.6\n38 error No compatible version found: express@4.4.7\n38 error Valid install targets:\n38 error 5.0.0-alpha.2, 5.0.0-alpha.1, 4.14.0, 4.13.4, 4.13.3, 4.13.2, 4.13.1, 4.13.0, 4.12.4, 4.12.3, 4.12.2, 4.12.1, 4.12.0, 4.11.2, 4.11.1, 4.11.0, 4.10.8, 4.10.7, 4.10.6, 4.10.5, 4.10.4, 4.10.3, 4.10.2, 4.10.1, 4.10.0, 4.9.8, 4.9.7, 4.9.6, 4.9.5, 4.9.4, 4.9.3, 4.9.2, 4.9.1, 4.9.0, 4.8.8, 4.8.7, 4.8.6, 4.8.5, 4.8.4, 4.8.3, 4.8.2, 4.8.1, 4.8.0, 4.7.4, 4.7.3, 4.7.2, 4.7.1, 4.7.0, 4.6.1, 4.6.0, 4.5.1, 4.5.0, 4.4.5, 4.4.4, 4.4.3, 4.4.2, 4.4.1, 4.4.0, 4.3.2, 4.3.1, 4.3.0, 4.2.0, 4.1.2, 4.1.1, 4.1.0, 4.0.0, 4.0.0-rc4, 4.0.0-rc3, 4.0.0-rc2, 4.0.0-rc1, 3.21.2, 3.21.1, 3.21.0, 3.20.3, 3.20.2, 3.20.1, 3.20.0, 3.19.2, 3.19.1, 3.19.0, 3.18.6, 3.18.5, 3.18.4, 3.18.3, 3.18.2, 3.18.1, 3.18.0, 3.17.8, 3.17.7, 3.17.6, 3.17.5, 3.17.4, 3.17.3, 3.17.2, 3.17.1, 3.17.0, 3.16.10, 3.16.9, 3.16.8, 3.16.7, 3.16.6, 3.16.5, 3.16.4, 3.16.3, 3.16.2, 3.16.1, 3.16.0, 3.15.3, 3.15.2, 3.15.1, 3.15.0, 3.14.0, 3.13.0, 3.12.1, 3.12.0, 3.11.0, 3.10.5, 3.10.4, 3.10.3, 3.10.2, 3.10.1, 3.10.0, 3.9.0, 3.8.1, 3.8.0, 3.7.0, 3.6.0, 3.5.3, 3.5.2, 3.5.1, 3.5.0, 3.4.8, 3.4.7, 3.4.6, 3.4.5, 3.4.4, 3.4.3, 3.4.2, 3.4.1, 3.4.0, 3.3.8, 3.3.7, 3.3.6, 3.3.5, 3.3.4, 3.3.3, 3.3.2, 3.3.1, 3.3.0, 3.2.6, 3.2.5, 3.2.4, 3.2.3, 3.2.2, 3.2.1, 3.2.0, 3.1.2, 3.1.1, 3.1.0, 3.0.6, 3.0.5, 3.0.4, 3.0.3, 3.0.2, 3.0.1, 3.0.0, 3.0.0-rc5, 3.0.0-rc4, 3.0.0-rc3, 3.0.0-rc2, 3.0.0-rc1, 3.0.0-beta7, 3.0.0-beta6, 3.0.0-beta4, 3.0.0-beta3, 3.0.0-beta2, 3.0.0-beta1, 3.0.0-alpha5, 3.0.0-alpha4, 3.0.0-alpha3, 3.0.0-alpha2, 3.0.0-alpha1, 2.5.11, 2.5.10, 2.5.9, 2.5.8, 2.5.7, 2.5.6, 2.5.5, 2.5.4, 2.5.3, 2.5.2, 2.5.1, 2.5.0, 2.4.7, 2.4.6, 2.4.5, 2.4.4, 2.4.3, 2.4.2, 2.4.1, 2.4.0, 2.3.12, 2.3.11, 2.3.10, 2.3.9, 2.3.8, 2.3.7, 2.3.6, 2.3.5, 2.3.4, 2.3.3, 2.3.2, 2.3.1, 2.3.0, 2.2.2, 2.2.1, 2.2.0, 2.1.1, 2.1.0, 2.0.0, 2.0.0-rc3, 2.0.0-rc2, 2.0.0-rc, 2.0.0-beta3, 2.0.0-beta2, 2.0.0-beta, 1.0.8, 1.0.7, 1.0.6, 1.0.5, 1.0.4, 1.0.3, 1.0.2, 1.0.1, 1.0.0, 1.0.0-rc4, 1.0.0-rc3, 1.0.0-rc2, 1.0.0-rc, 1.0.0-beta2, 1.0.0-beta, 0.14.1, 0.14.0\n39 error If you need help, you may report this error at:\n39 error     <https://github.com/npm/npm/issues>\n40 verbose exit [ 1, true ]\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3056/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3056/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3055",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3055/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3055/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3055/events",
    "html_url": "https://github.com/expressjs/express/pull/3055",
    "id": 171145019,
    "node_id": "MDExOlB1bGxSZXF1ZXN0ODEyOTQzMjM=",
    "number": 3055,
    "title": "Fix Issue #2652 concerning V8 decodeURIComponent().",
    "user": {
      "login": "mykiimike",
      "id": 7666506,
      "node_id": "MDQ6VXNlcjc2NjY1MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7666506?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mykiimike",
      "html_url": "https://github.com/mykiimike",
      "followers_url": "https://api.github.com/users/mykiimike/followers",
      "following_url": "https://api.github.com/users/mykiimike/following{/other_user}",
      "gists_url": "https://api.github.com/users/mykiimike/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mykiimike/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mykiimike/subscriptions",
      "organizations_url": "https://api.github.com/users/mykiimike/orgs",
      "repos_url": "https://api.github.com/users/mykiimike/repos",
      "events_url": "https://api.github.com/users/mykiimike/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mykiimike/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-08-15T10:22:01Z",
    "updated_at": "2016-08-15T23:20:29Z",
    "closed_at": "2016-08-15T11:35:51Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3055",
      "html_url": "https://github.com/expressjs/express/pull/3055",
      "diff_url": "https://github.com/expressjs/express/pull/3055.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3055.patch",
      "merged_at": null
    },
    "body": "Hi,\n\nThis Error throwed by V8 Engine using decodeURIComponent() Was Very Disturbing To Me. \nIt is easy to reproduce. Just send an URI with gt/lt like (/un/known/route/<%= this what i used %>) in an unknown route and you will get the issue.\nThis Could also lead to a DoS issue because I was not able to catch the throwed error then the process goes down and that why i made the modification. \nI Replaced the decoding by the Native Nodejs URL Parser.\n\nCheers\nMichael\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3055/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3055/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3054",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3054/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3054/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3054/events",
    "html_url": "https://github.com/expressjs/express/issues/3054",
    "id": 171057778,
    "node_id": "MDU6SXNzdWUxNzEwNTc3Nzg=",
    "number": 3054,
    "title": "Error in the 'Error Message' on starting an app.",
    "user": {
      "login": "codeuniquely",
      "id": 1037719,
      "node_id": "MDQ6VXNlcjEwMzc3MTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1037719?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codeuniquely",
      "html_url": "https://github.com/codeuniquely",
      "followers_url": "https://api.github.com/users/codeuniquely/followers",
      "following_url": "https://api.github.com/users/codeuniquely/following{/other_user}",
      "gists_url": "https://api.github.com/users/codeuniquely/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codeuniquely/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codeuniquely/subscriptions",
      "organizations_url": "https://api.github.com/users/codeuniquely/orgs",
      "repos_url": "https://api.github.com/users/codeuniquely/repos",
      "events_url": "https://api.github.com/users/codeuniquely/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codeuniquely/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-08-14T13:08:40Z",
    "updated_at": "2018-01-24T16:39:47Z",
    "closed_at": "2016-08-31T05:52:12Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "```\nthrow new Error('Most middleware (like ' + name + ') is no longer bundled with Express and must be installed separately. Please see https://github.com/senchalabs/connect#middleware.');\n\nError: Most middleware (like compress) is no longer bundled with Express and must be installed separately. Please see https://github.com/senchalabs/connect#middleware.\n    at Function.Object.defineProperty.get (/Project/node_modules/express/lib/express.js:99:13)\n    at Object.<anonymous> (/Project/server.js:41:16)\n    at Module._compile (module.js:541:32)\n    at Object.Module._extensions..js (module.js:550:10)\n    at Module.load (module.js:458:32)\n    at tryModuleLoad (module.js:417:12)\n    at Function.Module._load (module.js:409:3)\n    at Module.runMain (module.js:575:10)\n    at run (bootstrap_node.js:352:7)\n    at startup (bootstrap_node.js:144:9)\n    at bootstrap_node.js:467:3\n```\n\nThe name property of the error message is not being populated ....\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3054/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3054/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3053",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3053/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3053/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3053/events",
    "html_url": "https://github.com/expressjs/express/pull/3053",
    "id": 171033262,
    "node_id": "MDExOlB1bGxSZXF1ZXN0ODEyMjk3ODQ=",
    "number": 3053,
    "title": "Catches errors from Promises / Async functions",
    "user": {
      "login": "leebyron",
      "id": 50130,
      "node_id": "MDQ6VXNlcjUwMTMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/50130?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leebyron",
      "html_url": "https://github.com/leebyron",
      "followers_url": "https://api.github.com/users/leebyron/followers",
      "following_url": "https://api.github.com/users/leebyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/leebyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leebyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leebyron/subscriptions",
      "organizations_url": "https://api.github.com/users/leebyron/orgs",
      "repos_url": "https://api.github.com/users/leebyron/repos",
      "events_url": "https://api.github.com/users/leebyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leebyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 19,
    "created_at": "2016-08-13T23:41:07Z",
    "updated_at": "2016-09-05T01:55:01Z",
    "closed_at": "2016-08-14T00:19:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3053",
      "html_url": "https://github.com/expressjs/express/pull/3053",
      "diff_url": "https://github.com/expressjs/express/pull/3053.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3053.patch",
      "merged_at": null
    },
    "body": "This PR adds support for catching errors from rejected promises (perhaps in the form of an async function) that matches the existing try/catch behavior for synchronous returning functions.\n\n[Promises](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise) have now been part of the JavaScript specification for over a year and are popularly used for modeling asynchronous behavior (such as rendering a webpage). They're even mentioned in an express [article about best practices](https://expressjs.com/en/advanced/best-practice-performance.html#use-promises).\n\nHowever one of the pitfalls of using Promises is being aware of error behavior and not forgetting to call `.catch()`. This is a prominent note in that same article. However a common behavior is to \"chain\" Promises and allow for the top-most Promise to handle the error. For libraries where error-handling is critical, like webservers or test harnesses, being Promise-aware and allowing functions to return Promises can help isolate error behavior from the library user. Mocha is a [great example of this done well](http://paulsalaets.com/testing-with-promises-in-mocha). Users of Express may inadvertently expect this behavior, return a Promise from their routing functions, and then be surprised when errors are swallowed during debugging.\n\nSupport for Promises will become more critical as [Async functions](https://tc39.github.io/ecmascript-asyncawait/) enters the language, giving first-class language syntax for creating and operating on promises. This proposal is expected to be ratified soon, is already implemented in Chakra-node, is implemented behind a flag in Chrome, is expected to arrive in node v7, and is already used by many via transpilers like Babel. This makes proper error handling for Promises imminent as this use case is about to become far more common. It would be great for Express to get ahead of this sooner rather than later.\n\nExample of code where Express error handling will work just fine:\n\n``` js\napp.get('/', (req, res) => {\n  throw new Error('Oh crap!')\n})\n```\n\nAnd a minor syntax modification leads to swallowed errors:\n\n``` js\napp.get('/', async (req, res) => {\n  throw new Error('Oh crap!')\n})\n```\n\nThis PR approaches a solution to the problem as minimally-invasive as possible. It does not presume anything about the host environment, and it detects and supports the [Promise A](http://wiki.commonjs.org/wiki/Promises/A) subset of the Promise specification, which many older Promise libraries only support.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3053/reactions",
      "total_count": 5,
      "+1": 5,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3053/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3052",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3052/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3052/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3052/events",
    "html_url": "https://github.com/expressjs/express/pull/3052",
    "id": 171017039,
    "node_id": "MDExOlB1bGxSZXF1ZXN0ODEyMjA0MDg=",
    "number": 3052,
    "title": "Fixing current benchmark script errors",
    "user": {
      "login": "palanik",
      "id": 1656913,
      "node_id": "MDQ6VXNlcjE2NTY5MTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1656913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/palanik",
      "html_url": "https://github.com/palanik",
      "followers_url": "https://api.github.com/users/palanik/followers",
      "following_url": "https://api.github.com/users/palanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/palanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/palanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/palanik/subscriptions",
      "organizations_url": "https://api.github.com/users/palanik/orgs",
      "repos_url": "https://api.github.com/users/palanik/repos",
      "events_url": "https://api.github.com/users/palanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/palanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-08-13T16:52:21Z",
    "updated_at": "2017-02-05T02:40:12Z",
    "closed_at": "2017-02-05T02:40:12Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3052",
      "html_url": "https://github.com/expressjs/express/pull/3052",
      "diff_url": "https://github.com/expressjs/express/pull/3052.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3052.patch",
      "merged_at": null
    },
    "body": "This PR is in response to #2108. I agree with @dougwilson on `benchmarks that do not use non-Node.js dependencies`. \n\nThe current benchmarking script was not touched for 3 years and has a dependency on [wrk](https://github.com/wg/wrk). No reference of this in the docs. If you run the script, you'll get errors.\n\nI submit this PR as a first step in fixing the current script and then moving towards using alternative/better benchmarking tools.\n(Prefer to keep the Master branch clean without errors).\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3052/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3052/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3051",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3051/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3051/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3051/events",
    "html_url": "https://github.com/expressjs/express/issues/3051",
    "id": 169828285,
    "node_id": "MDU6SXNzdWUxNjk4MjgyODU=",
    "number": 3051,
    "title": "next('route') not working !",
    "user": {
      "login": "linqFR",
      "id": 18004866,
      "node_id": "MDQ6VXNlcjE4MDA0ODY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/18004866?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/linqFR",
      "html_url": "https://github.com/linqFR",
      "followers_url": "https://api.github.com/users/linqFR/followers",
      "following_url": "https://api.github.com/users/linqFR/following{/other_user}",
      "gists_url": "https://api.github.com/users/linqFR/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/linqFR/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/linqFR/subscriptions",
      "organizations_url": "https://api.github.com/users/linqFR/orgs",
      "repos_url": "https://api.github.com/users/linqFR/repos",
      "events_url": "https://api.github.com/users/linqFR/events{/privacy}",
      "received_events_url": "https://api.github.com/users/linqFR/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-08-08T01:31:29Z",
    "updated_at": "2016-08-08T21:10:08Z",
    "closed_at": "2016-08-08T09:36:25Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am using a router (express.Router - called testrouter in the code here) added to main app (express) and i add subrouter (express.Router) to this router/testrouter with a function just before it to test if request is from specific referer, but the subrouter is never skipped!\n\n``` js\nconst express = require('express');\nconst http = require('http');\nconst httpport = process.env.PORT || 80; //http\n\napp = express();\n\nvar testrouter = express.Router();\napp.use(testrouter);\n\nvar subrouter = express.Router();\n\nvar subrouterRoute = '/blabla'\ntestrouter.use(subrouterRoute, \n    function(req, res, next){\n        console.log('trying to go into subrouter');\n        if (req.headers.referer) {console.log('going', typeof req.headers.referer), next();}\n        else {console.log('not going', typeof req.headers.referer); next('route');}\n    },\n    subrouter,\n    function(req,res,next){\n        console.log('gone out of subrouter');\n        next();\n    }\n);\n\nsubrouter.use(function(req,res,next){\n    console.log('IN SUBROUTER');\n    next();\n})\nhttp\n.createServer(app)\n.listen(httpport, function(){\n    console.log(\"server http listened @ : \", this.address());\n});\n```\n\nif i request /blabla directly, there is no referer so it is undefined... but though, the console logs the following:\n\n```\ntrying to go into subrouter\nnot going undefined (this is the referer)\nIN SUBROUTER\ngone out of subrouter\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3051/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3051/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3050",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3050/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3050/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3050/events",
    "html_url": "https://github.com/expressjs/express/issues/3050",
    "id": 169657536,
    "node_id": "MDU6SXNzdWUxNjk2NTc1MzY=",
    "number": 3050,
    "title": "Is it possible to share error handler middleware between express instances?",
    "user": {
      "login": "jshawl",
      "id": 3824954,
      "node_id": "MDQ6VXNlcjM4MjQ5NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3824954?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jshawl",
      "html_url": "https://github.com/jshawl",
      "followers_url": "https://api.github.com/users/jshawl/followers",
      "following_url": "https://api.github.com/users/jshawl/following{/other_user}",
      "gists_url": "https://api.github.com/users/jshawl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jshawl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jshawl/subscriptions",
      "organizations_url": "https://api.github.com/users/jshawl/orgs",
      "repos_url": "https://api.github.com/users/jshawl/repos",
      "events_url": "https://api.github.com/users/jshawl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jshawl/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-08-05T17:32:28Z",
    "updated_at": "2020-06-03T07:16:54Z",
    "closed_at": "2020-06-03T07:16:48Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When using another express instance as middleware, the second instance's .use works fine, except as an error handler, with err as first argument\n\n``` js\nvar app = require(\"express\")()\nvar app2 = require(\"express\")()\napp.get(\"/\", function(req, res){\n  res.send(\"normal response\")\n})\napp.get(\"/err\", function(req, res){\n  throw new Error()\n})\napp2.use(function(req, res, next){\n  res.send(\"404\") // this function is called when visiting non-existent route\n})\napp2.use(function(err, req, res, next){\n  res.send(\"error\") // this function is never invoked\n})\napp.use(app2)\napp.listen(3000)\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3050/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3050/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3049",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3049/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3049/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3049/events",
    "html_url": "https://github.com/expressjs/express/issues/3049",
    "id": 169382846,
    "node_id": "MDU6SXNzdWUxNjkzODI4NDY=",
    "number": 3049,
    "title": "Discrepancy between code and docs when `app.get('views')` is an array",
    "user": {
      "login": "lennym",
      "id": 117398,
      "node_id": "MDQ6VXNlcjExNzM5OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/117398?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lennym",
      "html_url": "https://github.com/lennym",
      "followers_url": "https://api.github.com/users/lennym/followers",
      "following_url": "https://api.github.com/users/lennym/following{/other_user}",
      "gists_url": "https://api.github.com/users/lennym/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lennym/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lennym/subscriptions",
      "organizations_url": "https://api.github.com/users/lennym/orgs",
      "repos_url": "https://api.github.com/users/lennym/repos",
      "events_url": "https://api.github.com/users/lennym/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lennym/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-08-04T14:06:15Z",
    "updated_at": "2016-08-04T14:11:27Z",
    "closed_at": "2016-08-04T14:11:27Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "It seems that there is a possible issue with the way that `View#lookup` operates when it is passed an array of directories to search in.\n\nLooking at the code at https://github.com/expressjs/express/blob/master/lib/view.js#L95-L114 it seems that what will occur is that `View#lookup` will always return the resolved path for the last directory listed in `opts.root` because the `path` variable is set in each iteration of the loop, and not returned until after the loop has completed.\n\nThis is contradictory to the docs around `app.set('views')` at http://expressjs.com/en/4x/api.html#app.set, which suggest that the first matching directory will be used.\n\n> A directory or an array of directories for the application's views. If an array, the views are looked up in the order they occur in the array.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3049/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3049/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3048",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3048/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3048/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3048/events",
    "html_url": "https://github.com/expressjs/express/issues/3048",
    "id": 168902378,
    "node_id": "MDU6SXNzdWUxNjg5MDIzNzg=",
    "number": 3048,
    "title": "View lookup is not called anymore",
    "user": {
      "login": "sielay",
      "id": 133139,
      "node_id": "MDQ6VXNlcjEzMzEzOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/133139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sielay",
      "html_url": "https://github.com/sielay",
      "followers_url": "https://api.github.com/users/sielay/followers",
      "following_url": "https://api.github.com/users/sielay/following{/other_user}",
      "gists_url": "https://api.github.com/users/sielay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sielay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sielay/subscriptions",
      "organizations_url": "https://api.github.com/users/sielay/orgs",
      "repos_url": "https://api.github.com/users/sielay/repos",
      "events_url": "https://api.github.com/users/sielay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sielay/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2016-08-02T14:39:12Z",
    "updated_at": "2016-08-15T07:41:35Z",
    "closed_at": "2016-08-15T07:41:35Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Please see diff comment for details \nhttps://github.com/expressjs/express/commit/a8a8564459688bdc0b2653da2f28a4fefde7dfdb#commitcomment-18488645\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3048/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3048/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3047",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3047/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3047/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3047/events",
    "html_url": "https://github.com/expressjs/express/issues/3047",
    "id": 168695797,
    "node_id": "MDU6SXNzdWUxNjg2OTU3OTc=",
    "number": 3047,
    "title": "req.host / hostname confusion makes vhost behave incorrectly!",
    "user": {
      "login": "gaurav21r",
      "id": 1716462,
      "node_id": "MDQ6VXNlcjE3MTY0NjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1716462?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gaurav21r",
      "html_url": "https://github.com/gaurav21r",
      "followers_url": "https://api.github.com/users/gaurav21r/followers",
      "following_url": "https://api.github.com/users/gaurav21r/following{/other_user}",
      "gists_url": "https://api.github.com/users/gaurav21r/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gaurav21r/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gaurav21r/subscriptions",
      "organizations_url": "https://api.github.com/users/gaurav21r/orgs",
      "repos_url": "https://api.github.com/users/gaurav21r/repos",
      "events_url": "https://api.github.com/users/gaurav21r/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gaurav21r/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2016-08-01T17:13:23Z",
    "updated_at": "2019-12-01T21:57:19Z",
    "closed_at": "2016-08-01T17:43:18Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "Although this has already been dealt with in #2179 , the conversation has been limited to collaborators AND it is slated for a 5.0 release. I think this may warrant a more immediate fix in the 4.x branch?\n\nFor a server setup where multiple products (domains) are going to run from the same express server, my use case is this:\n## In a local machine\n\nIn a local machine, we have 2 environments, dev that is a developer environment and staging, that replicates a staging environment. Since there can only be one **localhost** hostname in a dev environment, we run 2 different `server.js`s. Either use the `vhost` module to correctly pickup the correct route.\n## In a production machine\n\nThis won't matter as we'll use different hostnames anyway!\n\nDue to the way `req.host` is structured, I get:\n\n``` js\napp.use(vhost(localhost:8000), routes1)\napp.use(vhost(localhost:3000), routes2)\n\nwindow.fetch('http://localhost:8000/api/hello')\n// Does not hit either!\n// Because req.host is just localhost\n```\n\nSo in Express 4.x I can **never** get the desired functionality!\n\nRight now I can see Express has both `req.host` and `req.hostname` and **they both strip the port**.\n1. Can we change either to the desired behaviour of stripping the ports?\n2. I understand this would be a \"breaking change\".\n   - a. Can we bump up the Middle version number for this?\n   - b. If not, can we add some sort of configuration (say using `app.set`) which would enable this behaviour while keeping it default for 5.x ?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3047/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3047/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3046",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3046/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3046/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3046/events",
    "html_url": "https://github.com/expressjs/express/pull/3046",
    "id": 168484366,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Nzk0NjY0ODY=",
    "number": 3046,
    "title": "Add Node's path module",
    "user": {
      "login": "hamzaOp",
      "id": 17226097,
      "node_id": "MDQ6VXNlcjE3MjI2MDk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/17226097?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hamzaOp",
      "html_url": "https://github.com/hamzaOp",
      "followers_url": "https://api.github.com/users/hamzaOp/followers",
      "following_url": "https://api.github.com/users/hamzaOp/following{/other_user}",
      "gists_url": "https://api.github.com/users/hamzaOp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hamzaOp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hamzaOp/subscriptions",
      "organizations_url": "https://api.github.com/users/hamzaOp/orgs",
      "repos_url": "https://api.github.com/users/hamzaOp/repos",
      "events_url": "https://api.github.com/users/hamzaOp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hamzaOp/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "blakeembrey",
      "id": 1088987,
      "node_id": "MDQ6VXNlcjEwODg5ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1088987?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blakeembrey",
      "html_url": "https://github.com/blakeembrey",
      "followers_url": "https://api.github.com/users/blakeembrey/followers",
      "following_url": "https://api.github.com/users/blakeembrey/following{/other_user}",
      "gists_url": "https://api.github.com/users/blakeembrey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blakeembrey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blakeembrey/subscriptions",
      "organizations_url": "https://api.github.com/users/blakeembrey/orgs",
      "repos_url": "https://api.github.com/users/blakeembrey/repos",
      "events_url": "https://api.github.com/users/blakeembrey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blakeembrey/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "blakeembrey",
        "id": 1088987,
        "node_id": "MDQ6VXNlcjEwODg5ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1088987?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/blakeembrey",
        "html_url": "https://github.com/blakeembrey",
        "followers_url": "https://api.github.com/users/blakeembrey/followers",
        "following_url": "https://api.github.com/users/blakeembrey/following{/other_user}",
        "gists_url": "https://api.github.com/users/blakeembrey/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/blakeembrey/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/blakeembrey/subscriptions",
        "organizations_url": "https://api.github.com/users/blakeembrey/orgs",
        "repos_url": "https://api.github.com/users/blakeembrey/repos",
        "events_url": "https://api.github.com/users/blakeembrey/events{/privacy}",
        "received_events_url": "https://api.github.com/users/blakeembrey/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2016-07-30T19:59:07Z",
    "updated_at": "2016-10-27T01:10:33Z",
    "closed_at": "2016-07-31T12:14:05Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3046",
      "html_url": "https://github.com/expressjs/express/pull/3046",
      "diff_url": "https://github.com/expressjs/express/pull/3046.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3046.patch",
      "merged_at": "2016-07-31T12:14:05Z"
    },
    "body": "Add Node's path module to the static-files example.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3046/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3046/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3045",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3045/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3045/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3045/events",
    "html_url": "https://github.com/expressjs/express/issues/3045",
    "id": 168215489,
    "node_id": "MDU6SXNzdWUxNjgyMTU0ODk=",
    "number": 3045,
    "title": "Bootstrapping express v4 on start up",
    "user": {
      "login": "andrewoh531",
      "id": 4927570,
      "node_id": "MDQ6VXNlcjQ5Mjc1NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4927570?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewoh531",
      "html_url": "https://github.com/andrewoh531",
      "followers_url": "https://api.github.com/users/andrewoh531/followers",
      "following_url": "https://api.github.com/users/andrewoh531/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewoh531/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewoh531/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewoh531/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewoh531/orgs",
      "repos_url": "https://api.github.com/users/andrewoh531/repos",
      "events_url": "https://api.github.com/users/andrewoh531/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewoh531/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2016-07-28T22:54:59Z",
    "updated_at": "2016-07-29T22:21:42Z",
    "closed_at": "2016-07-29T13:07:03Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "What is the recommended way to bootstrap an Express application so that on start up it will call out to AWS S3 to retrieve some secrets before starting up? Having used Sails.js it allowed you to specify a `bootstrap.js` file that would allow the server to configure itself before bringing the server up. \n\nHow could I do this in Express?\n\nThanks!\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3045/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3045/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3044",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3044/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3044/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3044/events",
    "html_url": "https://github.com/expressjs/express/issues/3044",
    "id": 168143459,
    "node_id": "MDU6SXNzdWUxNjgxNDM0NTk=",
    "number": 3044,
    "title": "express@5.0.0-alpha.2 vulnerability - adding automated vulnerability checks ",
    "user": {
      "login": "YasharF",
      "id": 6448697,
      "node_id": "MDQ6VXNlcjY0NDg2OTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6448697?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YasharF",
      "html_url": "https://github.com/YasharF",
      "followers_url": "https://api.github.com/users/YasharF/followers",
      "following_url": "https://api.github.com/users/YasharF/following{/other_user}",
      "gists_url": "https://api.github.com/users/YasharF/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YasharF/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YasharF/subscriptions",
      "organizations_url": "https://api.github.com/users/YasharF/orgs",
      "repos_url": "https://api.github.com/users/YasharF/repos",
      "events_url": "https://api.github.com/users/YasharF/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YasharF/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 98481977,
        "node_id": "MDU6TGFiZWw5ODQ4MTk3Nw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578717,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTc=",
        "url": "https://api.github.com/repos/expressjs/express/labels/low%20priority",
        "name": "low priority",
        "color": "cfd8dc",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 12,
    "created_at": "2016-07-28T16:49:32Z",
    "updated_at": "2017-01-29T03:33:24Z",
    "closed_at": "2017-01-29T03:33:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I just saw on https://snyk.io/test/npm/express that express@5.0.0-alpha.2 depends on a npm module with a hi sev security vulnerability. \n1. Can the expressjs/express repo get integration to be monitor for new disclosures and check pull requests that introduce vulnerabilities?\n   https://snyk.io/docs/github/#how-to-integrate-github-to-test-and-monitor-your-repositories\n2. Does anyone have an objection if we add a vulnerability badge to readme.md ?\n# \n\n**Regular Expression Denial of Service**\n\nHigh severity\nVulnerable module: negotiator\nIntroduced through: accepts@1.2.13\nDetailed paths and remediation\n\nIntroduced through: express@5.0.0-alpha.2 › accepts@1.2.13 › negotiator@0.5.3\nRemediation: Upgrade to accepts@1.3.3.\nOverview\n\nnegotiator is an HTTP content negotiator for Node.js. Versions prior to 0.6.1 are vulnerable to Regular expression Denial of Service (ReDoS) attack when parsing \"Accept-Language\" http header.\n\nAn attacker can provide a long value in the Accept-Language header, which nearly matches the pattern being matched. This will cause the regular expression matching to take a long time, all the while occupying the thread and preventing it from processing other requests. By repeatedly sending multiple such requests, the attacker can make the server unavailable (a Denial of Service attack).\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3044/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3044/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3043",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3043/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3043/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3043/events",
    "html_url": "https://github.com/expressjs/express/issues/3043",
    "id": 167274911,
    "node_id": "MDU6SXNzdWUxNjcyNzQ5MTE=",
    "number": 3043,
    "title": "Express and nginx best practices",
    "user": {
      "login": "titoesteves",
      "id": 8153364,
      "node_id": "MDQ6VXNlcjgxNTMzNjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8153364?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/titoesteves",
      "html_url": "https://github.com/titoesteves",
      "followers_url": "https://api.github.com/users/titoesteves/followers",
      "following_url": "https://api.github.com/users/titoesteves/following{/other_user}",
      "gists_url": "https://api.github.com/users/titoesteves/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/titoesteves/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/titoesteves/subscriptions",
      "organizations_url": "https://api.github.com/users/titoesteves/orgs",
      "repos_url": "https://api.github.com/users/titoesteves/repos",
      "events_url": "https://api.github.com/users/titoesteves/events{/privacy}",
      "received_events_url": "https://api.github.com/users/titoesteves/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-07-25T03:24:54Z",
    "updated_at": "2016-07-25T17:44:31Z",
    "closed_at": "2016-07-25T17:44:31Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I currently have an node express app behind an nginx load balancer.\n\nI am curious to know what is the best practice when it comes to setting security policies such as CSP, CSRF, and HSTS? Should they be configured within my express.js application? Or is it best practice to configure them in nginx?\n\nDoes the express team recommend setting security within nginx or within the express application?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3043/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3043/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3042",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3042/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3042/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3042/events",
    "html_url": "https://github.com/expressjs/express/issues/3042",
    "id": 166827803,
    "node_id": "MDU6SXNzdWUxNjY4Mjc4MDM=",
    "number": 3042,
    "title": "Bug with 1 in URL",
    "user": {
      "login": "ShaneHudson",
      "id": 487005,
      "node_id": "MDQ6VXNlcjQ4NzAwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/487005?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ShaneHudson",
      "html_url": "https://github.com/ShaneHudson",
      "followers_url": "https://api.github.com/users/ShaneHudson/followers",
      "following_url": "https://api.github.com/users/ShaneHudson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ShaneHudson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ShaneHudson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ShaneHudson/subscriptions",
      "organizations_url": "https://api.github.com/users/ShaneHudson/orgs",
      "repos_url": "https://api.github.com/users/ShaneHudson/repos",
      "events_url": "https://api.github.com/users/ShaneHudson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ShaneHudson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-07-21T14:06:02Z",
    "updated_at": "2016-08-12T15:37:18Z",
    "closed_at": "2016-07-21T14:20:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This is a really weird one, hope it is the right place to ask but I think I need a hand.\n\nI have an app which I have cut down as much as possible to find the root of this bug.\n\n```\n'use strict';\nmodule.exports = {\n    register: function(app) {\n        app.get('/:id', function(req, res, next) {\n            res.send(req.params);\n        });\n    }\n};\n```\n\nThis route works fine most of the time. But we have noticed a bug (since reaching ID 1000) that any URL with 1 in the :id, is broken. The _originalUrl is correct but the _parsedUrl is always wrong.\n\nFor instance:\n- /2 will work fine but /1 will 404. \n- /722 will work fine but /712 will have a req.params.id of 2.\n\nThis appears to be a bug in express but I have no idea what is causing it. It is as if 1 is being used for parsing the url. Any ideas?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3042/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3042/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3041",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3041/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3041/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3041/events",
    "html_url": "https://github.com/expressjs/express/issues/3041",
    "id": 166813372,
    "node_id": "MDU6SXNzdWUxNjY4MTMzNzI=",
    "number": 3041,
    "title": "new tag for 5.0 alpha?",
    "user": {
      "login": "zackarychapple",
      "id": 2133184,
      "node_id": "MDQ6VXNlcjIxMzMxODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2133184?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zackarychapple",
      "html_url": "https://github.com/zackarychapple",
      "followers_url": "https://api.github.com/users/zackarychapple/followers",
      "following_url": "https://api.github.com/users/zackarychapple/following{/other_user}",
      "gists_url": "https://api.github.com/users/zackarychapple/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zackarychapple/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zackarychapple/subscriptions",
      "organizations_url": "https://api.github.com/users/zackarychapple/orgs",
      "repos_url": "https://api.github.com/users/zackarychapple/repos",
      "events_url": "https://api.github.com/users/zackarychapple/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zackarychapple/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 98481977,
        "node_id": "MDU6TGFiZWw5ODQ4MTk3Nw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-07-21T13:02:14Z",
    "updated_at": "2017-01-30T13:26:32Z",
    "closed_at": "2017-01-29T03:33:38Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "5.0-alpha.2 is the latest tag and it seems quite a ways behind the 5.0 branch. Any chance we can get a new tag cut?  \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3041/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3041/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3040",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3040/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3040/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3040/events",
    "html_url": "https://github.com/expressjs/express/issues/3040",
    "id": 166495150,
    "node_id": "MDU6SXNzdWUxNjY0OTUxNTA=",
    "number": 3040,
    "title": "Is there a way to set the request header limitation?",
    "user": {
      "login": "zhyinjun",
      "id": 1996673,
      "node_id": "MDQ6VXNlcjE5OTY2NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1996673?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zhyinjun",
      "html_url": "https://github.com/zhyinjun",
      "followers_url": "https://api.github.com/users/zhyinjun/followers",
      "following_url": "https://api.github.com/users/zhyinjun/following{/other_user}",
      "gists_url": "https://api.github.com/users/zhyinjun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zhyinjun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zhyinjun/subscriptions",
      "organizations_url": "https://api.github.com/users/zhyinjun/orgs",
      "repos_url": "https://api.github.com/users/zhyinjun/repos",
      "events_url": "https://api.github.com/users/zhyinjun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zhyinjun/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-07-20T04:48:49Z",
    "updated_at": "2017-02-23T21:53:02Z",
    "closed_at": "2016-07-20T07:16:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I lunched the node express on my localhost:3000..\n\nhttp://localhost:3000\n\ncurl -H 'samlresponse:12323' -v http://localhost:3000 , this command line works fine.\n\nbut if I tried following...\n\ncurl -H 'samlresponse:**{here is the entire samlresponse, it's very long..}**' -v http://localhost:3000 , the server always return \"Empty reply from server\", is there a way to passby or fix this issue?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3040/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3040/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3039",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3039/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3039/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3039/events",
    "html_url": "https://github.com/expressjs/express/issues/3039",
    "id": 165913512,
    "node_id": "MDU6SXNzdWUxNjU5MTM1MTI=",
    "number": 3039,
    "title": "Make it possible to configure the querystring parser *options*",
    "user": {
      "login": "wearhere",
      "id": 110000,
      "node_id": "MDQ6VXNlcjExMDAwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/110000?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wearhere",
      "html_url": "https://github.com/wearhere",
      "followers_url": "https://api.github.com/users/wearhere/followers",
      "following_url": "https://api.github.com/users/wearhere/following{/other_user}",
      "gists_url": "https://api.github.com/users/wearhere/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wearhere/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wearhere/subscriptions",
      "organizations_url": "https://api.github.com/users/wearhere/orgs",
      "repos_url": "https://api.github.com/users/wearhere/repos",
      "events_url": "https://api.github.com/users/wearhere/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wearhere/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 15,
    "created_at": "2016-07-16T06:31:05Z",
    "updated_at": "2017-10-21T06:04:08Z",
    "closed_at": "2017-10-18T17:57:20Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "[Over on `qs`' repository](https://github.com/ljharb/qs/issues/107) I and some others have identified an ambiguity in query string parsing that can be resolved by setting `arrayLimit: 0`. How may I do this? Ideally I would not have to set a custom string parsing _function_ on my application, which I see you support with the `'query parser'` setting [here](http://expressjs.com/en/api.html#app.set), but rather just pass some options to your default invocation of `qs.parse`.\n\nI see that you expose your `query` middleware, which [uses `qs.parse` by default](https://github.com/expressjs/express/blob/f3d99a4fdbe1531ea609e92c4d4ae6c269d78c7a/lib/middleware/query.js#L26), but unfortunately doing\n\n``` js\nvar express = require('express');\nvar app = express();\n\napp.set('query parser', false);\napp.use(express.query({\n  arrayLimit: 0\n}));\n```\n\ndoes not suffice because with query parsing disabled, `req.query` is set to `{}` by the time that `express.query` runs, which causes it to [skip parsing](https://github.com/expressjs/express/blob/f3d99a4fdbe1531ea609e92c4d4ae6c269d78c7a/lib/middleware/query.js#L44).\n\n(Note: it would suffice for my purposes if you would add `arrayLimit: 0` to your default `qs.parse` options [here](https://github.com/expressjs/express/blob/f3d99a4fdbe1531ea609e92c4d4ae6c269d78c7a/lib/utils.js#L287) (and I suppose [here](https://github.com/expressjs/express/blob/f3d99a4fdbe1531ea609e92c4d4ae6c269d78c7a/lib/middleware/query.js#L40) even though that's not used by the framework) and perhaps you will consider doing so given that this ambiguity is problematic and `arrayLimit: 0` [may become the default](https://github.com/ljharb/qs/issues/107#issuecomment-233110210) in the next version of `qs`.)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3039/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3039/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3038",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3038/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3038/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3038/events",
    "html_url": "https://github.com/expressjs/express/issues/3038",
    "id": 165349492,
    "node_id": "MDU6SXNzdWUxNjUzNDk0OTI=",
    "number": 3038,
    "title": "Server error when query string cantain werid characters",
    "user": {
      "login": "wangshijun",
      "id": 719985,
      "node_id": "MDQ6VXNlcjcxOTk4NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/719985?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wangshijun",
      "html_url": "https://github.com/wangshijun",
      "followers_url": "https://api.github.com/users/wangshijun/followers",
      "following_url": "https://api.github.com/users/wangshijun/following{/other_user}",
      "gists_url": "https://api.github.com/users/wangshijun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wangshijun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wangshijun/subscriptions",
      "organizations_url": "https://api.github.com/users/wangshijun/orgs",
      "repos_url": "https://api.github.com/users/wangshijun/repos",
      "events_url": "https://api.github.com/users/wangshijun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wangshijun/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-07-13T15:25:13Z",
    "updated_at": "2016-07-13T16:32:07Z",
    "closed_at": "2016-07-13T16:32:07Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Here is the minimal express server\n\n```\nconst express = require('express');\nconst app = express();\n\napp.get('/', function (req, res, next) {\n    res.status(200).send('I am alive');\n});\n\napp.listen(3000, function () {\n    console.log('server started at port 3000');\n});\n```\n\nAfter server started, the following two requests were made:\n\n```\ncurl -S 'http://localhost:3000'\n```\n\nrespond with expected content. but when some weird characters exist in query string, server fails silently.\n\n```\ncurl -S 'http://localhost:3000?plog_id=1516daa51f5f3f49df763f4bde4a147910010???????A4L 2016? 45 TFSI quattro?????_?????A4L0.6??-???'\n```\n\nThe response becomes:\n\n```\ncurl: (52) Empty reply from server\n```\n\nwhich is unexprected behavior!\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3038/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3038/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3037",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3037/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3037/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3037/events",
    "html_url": "https://github.com/expressjs/express/issues/3037",
    "id": 165267547,
    "node_id": "MDU6SXNzdWUxNjUyNjc1NDc=",
    "number": 3037,
    "title": "TypeError: res.set is not a function",
    "user": {
      "login": "noopole",
      "id": 11869690,
      "node_id": "MDQ6VXNlcjExODY5Njkw",
      "avatar_url": "https://avatars.githubusercontent.com/u/11869690?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/noopole",
      "html_url": "https://github.com/noopole",
      "followers_url": "https://api.github.com/users/noopole/followers",
      "following_url": "https://api.github.com/users/noopole/following{/other_user}",
      "gists_url": "https://api.github.com/users/noopole/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/noopole/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/noopole/subscriptions",
      "organizations_url": "https://api.github.com/users/noopole/orgs",
      "repos_url": "https://api.github.com/users/noopole/repos",
      "events_url": "https://api.github.com/users/noopole/events{/privacy}",
      "received_events_url": "https://api.github.com/users/noopole/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 8497,
        "node_id": "MDU6TGFiZWw4NDk3",
        "url": "https://api.github.com/repos/expressjs/express/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true,
        "description": null
      },
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/15",
      "html_url": "https://github.com/expressjs/express/milestone/15",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/15/labels",
      "id": 2284432,
      "node_id": "MDk6TWlsZXN0b25lMjI4NDQzMg==",
      "number": 15,
      "title": "4.15",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 8,
      "state": "closed",
      "created_at": "2017-01-29T03:36:44Z",
      "updated_at": "2017-03-01T22:20:15Z",
      "due_on": null,
      "closed_at": "2017-03-01T22:20:15Z"
    },
    "comments": 10,
    "created_at": "2016-07-13T08:41:52Z",
    "updated_at": "2017-03-01T22:14:09Z",
    "closed_at": "2017-03-01T22:14:09Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "My server is scanned by the security team of my company to detect secutity flaws, and I've got a strange error in my  console:\n\nHere is the logged stack:\n\n> GET /mainui/ 404 2.194 ms - 9\n> TypeError: res.set is not a function\n>     at sendOptionsResponse (c:\\git\\WebSite\\node_modules\\express\\lib\\router\\index.js:626:9)\n>     at c:\\git\\WebSite\\node_modules\\express\\lib\\router\\index.js:168:7\n>     at proxy (c:\\git\\WebSite\\node_modules\\express\\lib\\router\\index.js:643:8)\n>     at next (c:\\git\\WebSite\\node_modules\\express\\lib\\router\\index.js:256:14)\n>     at trim_prefix (c:\\git\\WebSite\\node_modules\\express\\lib\\router\\index.js:286:45)\n>     at c:\\git\\WebSite\\node_modules\\express\\lib\\router\\index.js:280:7\n>     at Function.process_params (c:\\git\\WebSite\\node_modules\\express\\lib\\router\\index.js:330:12)\n>     at next (c:\\git\\WebSite\\node_modules\\express\\lib\\router\\index.js:271:10)\n>     at trim_prefix (c:\\git\\WebSite\\node_modules\\express\\lib\\router\\index.js:286:45)\n>     at c:\\git\\WebSite\\node_modules\\express\\lib\\router\\index.js:280:7\n> GET / 200 2.574 ms - 21440\n\nI'm using express 4.14.0\n\nIs it normal that such a function is not defined?\n\nCode around line 626 is:\n\n```\n// send an OPTIONS response\nfunction sendOptionsResponse(res, options, next) {\n  try {\n    var body = options.join(',');\n    res.set('Allow', body);\n    res.send(body);\n  } catch (err) {\n    next(err);\n  }\n}\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3037/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3037/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3036",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3036/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3036/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3036/events",
    "html_url": "https://github.com/expressjs/express/pull/3036",
    "id": 165231150,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NzcyMjYxNjA=",
    "number": 3036,
    "title": "Add vuln dep",
    "user": {
      "login": "steve-ng",
      "id": 4995336,
      "node_id": "MDQ6VXNlcjQ5OTUzMzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4995336?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/steve-ng",
      "html_url": "https://github.com/steve-ng",
      "followers_url": "https://api.github.com/users/steve-ng/followers",
      "following_url": "https://api.github.com/users/steve-ng/following{/other_user}",
      "gists_url": "https://api.github.com/users/steve-ng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/steve-ng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/steve-ng/subscriptions",
      "organizations_url": "https://api.github.com/users/steve-ng/orgs",
      "repos_url": "https://api.github.com/users/steve-ng/repos",
      "events_url": "https://api.github.com/users/steve-ng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/steve-ng/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-07-13T03:43:58Z",
    "updated_at": "2016-07-13T03:45:15Z",
    "closed_at": "2016-07-13T03:45:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3036",
      "html_url": "https://github.com/expressjs/express/pull/3036",
      "diff_url": "https://github.com/expressjs/express/pull/3036.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3036.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3036/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3036/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3035",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3035/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3035/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3035/events",
    "html_url": "https://github.com/expressjs/express/issues/3035",
    "id": 164999828,
    "node_id": "MDU6SXNzdWUxNjQ5OTk4Mjg=",
    "number": 3035,
    "title": "pushState setting in express4.",
    "user": {
      "login": "exotfboy",
      "id": 16457917,
      "node_id": "MDQ6VXNlcjE2NDU3OTE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/16457917?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/exotfboy",
      "html_url": "https://github.com/exotfboy",
      "followers_url": "https://api.github.com/users/exotfboy/followers",
      "following_url": "https://api.github.com/users/exotfboy/following{/other_user}",
      "gists_url": "https://api.github.com/users/exotfboy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/exotfboy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/exotfboy/subscriptions",
      "organizations_url": "https://api.github.com/users/exotfboy/orgs",
      "repos_url": "https://api.github.com/users/exotfboy/repos",
      "events_url": "https://api.github.com/users/exotfboy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/exotfboy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-07-12T05:55:14Z",
    "updated_at": "2016-07-12T13:38:26Z",
    "closed_at": "2016-07-12T10:24:33Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have two pages in my application and each of them is kind of SPA,  `/` and `/company`\n\nAll the data are filled through ajax. And I use the front router to transfer from different features, now I use the traditional `#1` in the page:\n\n```\n/#!/user/abc\n/#!/info/xyz\n/company#!/abc\n/company#!/tree/xxx\n```\n\nWhile I want to use the `pushState` feature and make the url work like this:\n\n```\n/user/abd\n/info/xyz\n/company/abc\n/company/tree/xxx\n```\n\nI have searched this from google, and someone provide solution like this:\n\n```\napp.get(\"*\",(req,res)=>{\n  res.render(\"index\");\n});\n```\n\nHowever I have other routers in the application:\n\n```\napp.use(passport.initialize());\n\n//routers public to everyone\napp.get('/', function (req, res, next) {\n    res.render('index');\n});\napp.use(\"/company\", function (req, res) {\n    res.render('company');\n});\napp.use(\"/api/session\", require(\"./controller/Session\"));\napp.use(\"/api/company\", require(\"./controller/Company\"));\n//routers which need user login\napp.use(require('./middleware/Auth'));\napp.use('/api/account', require(\"./controller/Account\"));\napp.use(\"/api/attachment\", require(\"./controller/Attachment\"));\n//routers for error\napp.use(require('./controller/error'));\n```\n\nOnce I change to:\n\n```\napp.get('*', function (req, res, next) {\n    res.render('index');\n});\n```\n\nAll the routers after this will not work.  Since the routers afterward are authentication required so I can not move the `page` router to the last.\n\nHow to fix that?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3035/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3035/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3034",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3034/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3034/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3034/events",
    "html_url": "https://github.com/expressjs/express/issues/3034",
    "id": 163802935,
    "node_id": "MDU6SXNzdWUxNjM4MDI5MzU=",
    "number": 3034,
    "title": "Unexpected net::ERR_EMPTY_RESPONSE",
    "user": {
      "login": "ronag",
      "id": 3065230,
      "node_id": "MDQ6VXNlcjMwNjUyMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3065230?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ronag",
      "html_url": "https://github.com/ronag",
      "followers_url": "https://api.github.com/users/ronag/followers",
      "following_url": "https://api.github.com/users/ronag/following{/other_user}",
      "gists_url": "https://api.github.com/users/ronag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ronag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ronag/subscriptions",
      "organizations_url": "https://api.github.com/users/ronag/orgs",
      "repos_url": "https://api.github.com/users/ronag/repos",
      "events_url": "https://api.github.com/users/ronag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ronag/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2016-07-05T09:01:45Z",
    "updated_at": "2017-02-18T04:45:22Z",
    "closed_at": "2017-02-18T04:17:02Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Given the following in express 4.14.0:\n\n``` javascript\n   res.on('close', () => console.log('CLOSED', req.url))\n\n   console.log('WRITING', req.url)\n\n   const aborted = await new Promise((resolve, reject) => {\n     stream\n        .on('error', reject)\n        .on('end', () => resolve(false))\n        .pipe(res, { end: false })\n        .on('error', reject)\n        // 'close' is emitted if client prematurely disconnects.\n        .on('close', () => resolve(true))\n    })\n\n    if (aborted) {\n      console.log('ABORTED', req.url)\n      return\n    }\n\n    console.log('WRITTEN', req.url)\n\n    res.end()\n    console.log('END', req.url)\n```\n\nI get the following logs:\n\n```\nWRITING /v2/media/ciq8gm35600003k5g6c2rbqhs?profile[extends]=poster&dummy=284\nWRITTEN /v2/media/ciq8gm35600003k5g6c2rbqhs?profile[extends]=poster&dummy=284\nEND /v2/media/ciq8gm35600003k5g6c2rbqhs?profile[extends]=poster&dummy=284\n```\n\nBut Chrome (51.0.2704.106 (64-bit)) shows this:\n\n![screen shot 2016-07-04 at 22 11 14](https://cloud.githubusercontent.com/assets/3065230/16579369/b4eb964a-429f-11e6-8bcd-1f5fcbd019fe.png)\n\n![screen shot 2016-07-04 at 22 10 40](https://cloud.githubusercontent.com/assets/3065230/16579367/b10792f4-429f-11e6-8f9d-313ddf86749b.png)\n\nEven if there is something wrong with `stream` I would expect Chrome to receive the headers since `res.end()` is in fact called.\n\nThis happens intermittently and I'm unsure how to go about debugging this issue? Any ideas or suggestions?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3034/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3034/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3033",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3033/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3033/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3033/events",
    "html_url": "https://github.com/expressjs/express/issues/3033",
    "id": 163252033,
    "node_id": "MDU6SXNzdWUxNjMyNTIwMzM=",
    "number": 3033,
    "title": "express not respond across 20-40 min after deploy.",
    "user": {
      "login": "komarevtsevdn",
      "id": 15971328,
      "node_id": "MDQ6VXNlcjE1OTcxMzI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/15971328?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/komarevtsevdn",
      "html_url": "https://github.com/komarevtsevdn",
      "followers_url": "https://api.github.com/users/komarevtsevdn/followers",
      "following_url": "https://api.github.com/users/komarevtsevdn/following{/other_user}",
      "gists_url": "https://api.github.com/users/komarevtsevdn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/komarevtsevdn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/komarevtsevdn/subscriptions",
      "organizations_url": "https://api.github.com/users/komarevtsevdn/orgs",
      "repos_url": "https://api.github.com/users/komarevtsevdn/repos",
      "events_url": "https://api.github.com/users/komarevtsevdn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/komarevtsevdn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-06-30T19:49:12Z",
    "updated_at": "2016-07-02T02:13:41Z",
    "closed_at": "2016-07-01T04:54:06Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "i am using express 4 for my app\nmy app - consist of 25 middleware.\nI readed, that this error can be, if i will not to close steam res. \nFor example i can to miss res.send() on something middleware\nIt's really and how i can fix it?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3033/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3033/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3032",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3032/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3032/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3032/events",
    "html_url": "https://github.com/expressjs/express/pull/3032",
    "id": 162749410,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NzU1MjMzMzg=",
    "number": 3032,
    "title": "docs: add vulnerabilities badge in readme",
    "user": {
      "login": "a0viedo",
      "id": 2440935,
      "node_id": "MDQ6VXNlcjI0NDA5MzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2440935?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/a0viedo",
      "html_url": "https://github.com/a0viedo",
      "followers_url": "https://api.github.com/users/a0viedo/followers",
      "following_url": "https://api.github.com/users/a0viedo/following{/other_user}",
      "gists_url": "https://api.github.com/users/a0viedo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/a0viedo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/a0viedo/subscriptions",
      "organizations_url": "https://api.github.com/users/a0viedo/orgs",
      "repos_url": "https://api.github.com/users/a0viedo/repos",
      "events_url": "https://api.github.com/users/a0viedo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/a0viedo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-06-28T18:06:47Z",
    "updated_at": "2016-06-30T02:14:22Z",
    "closed_at": "2016-06-28T18:07:29Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3032",
      "html_url": "https://github.com/expressjs/express/pull/3032",
      "diff_url": "https://github.com/expressjs/express/pull/3032.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3032.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3032/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3032/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3031",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3031/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3031/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3031/events",
    "html_url": "https://github.com/expressjs/express/issues/3031",
    "id": 162739364,
    "node_id": "MDU6SXNzdWUxNjI3MzkzNjQ=",
    "number": 3031,
    "title": "Catch errors in promise if promise returned and forward them to error handling middleware",
    "user": {
      "login": "meghprkh",
      "id": 5979605,
      "node_id": "MDQ6VXNlcjU5Nzk2MDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5979605?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meghprkh",
      "html_url": "https://github.com/meghprkh",
      "followers_url": "https://api.github.com/users/meghprkh/followers",
      "following_url": "https://api.github.com/users/meghprkh/following{/other_user}",
      "gists_url": "https://api.github.com/users/meghprkh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meghprkh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meghprkh/subscriptions",
      "organizations_url": "https://api.github.com/users/meghprkh/orgs",
      "repos_url": "https://api.github.com/users/meghprkh/repos",
      "events_url": "https://api.github.com/users/meghprkh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meghprkh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-06-28T17:17:39Z",
    "updated_at": "2016-06-28T18:19:29Z",
    "closed_at": "2016-06-28T18:19:13Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Currently, Express forwards errors thrown in a route using `throw` and forwards them to error handling middleware. But it doesnot do something similar if a promise is returned. I have to manually append `.catch(next)` to the promise to get it forwarded to error handling middleware. For example the following is my code:\n\n``` js\n// errorHandlers.js\nfunction sequelizeValidationError (err, req, res, next) {\n  if (err.name && err.name == 'SequelizeValidationError')\n    res.status(400).send(err.errors)\n  else next(err)\n}\n\n// auth.js\nrouter.post ('/register',  middleware.isNotAuthenticated, (req, res, next) => {\n  const { email, password, name } = req.body;\n\n  return models.User.find({where : { email }}).then(user => {\n    if (user) {\n      if (user.password == password) sendToken(user.id, res);\n      else res.sendStatus(401);\n    } else {\n      return models.User.create({\n        email, password, name\n      }).then(user => {\n        sendToken(user.id, res);\n      })\n    }\n  }).catch(next)\n})\n\n// index.js\nrouter.use('/auth', require('./auth'))\n\nrouter.use(errorHandlers.sequelizeValidationError)\n```\n\nIt currently fails if I had to forgot to write the catch, instead of automatically calling the error handling middleware. This can result to errors if I somewhere fail to write `catch` andd IMHO it is inconsistent too.\n\nAlso a small question, can I make a middleware to handle this case temporarily? (sorry I know I shouldnt ask this but please)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3031/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3031/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3030",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3030/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3030/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3030/events",
    "html_url": "https://github.com/expressjs/express/issues/3030",
    "id": 162609172,
    "node_id": "MDU6SXNzdWUxNjI2MDkxNzI=",
    "number": 3030,
    "title": "How to get ipv6 address of client from req object",
    "user": {
      "login": "ksushilmaurya",
      "id": 11771883,
      "node_id": "MDQ6VXNlcjExNzcxODgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/11771883?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ksushilmaurya",
      "html_url": "https://github.com/ksushilmaurya",
      "followers_url": "https://api.github.com/users/ksushilmaurya/followers",
      "following_url": "https://api.github.com/users/ksushilmaurya/following{/other_user}",
      "gists_url": "https://api.github.com/users/ksushilmaurya/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ksushilmaurya/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ksushilmaurya/subscriptions",
      "organizations_url": "https://api.github.com/users/ksushilmaurya/orgs",
      "repos_url": "https://api.github.com/users/ksushilmaurya/repos",
      "events_url": "https://api.github.com/users/ksushilmaurya/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ksushilmaurya/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-06-28T06:04:46Z",
    "updated_at": "2016-06-28T06:09:01Z",
    "closed_at": "2016-06-28T06:08:55Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am using req.ip to get the client ip address and it is returning ::ffff:192.168.2.110 but i think this is ipv4 address. I wanted to retrieve the ipv6 address of a client. Is it possible get it from req object?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3030/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3030/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3029",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3029/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3029/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3029/events",
    "html_url": "https://github.com/expressjs/express/issues/3029",
    "id": 162263540,
    "node_id": "MDU6SXNzdWUxNjIyNjM1NDA=",
    "number": 3029,
    "title": "Any progress in supporting promise/async handler? Please!",
    "user": {
      "login": "frogcjn",
      "id": 1777562,
      "node_id": "MDQ6VXNlcjE3Nzc1NjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1777562?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frogcjn",
      "html_url": "https://github.com/frogcjn",
      "followers_url": "https://api.github.com/users/frogcjn/followers",
      "following_url": "https://api.github.com/users/frogcjn/following{/other_user}",
      "gists_url": "https://api.github.com/users/frogcjn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frogcjn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frogcjn/subscriptions",
      "organizations_url": "https://api.github.com/users/frogcjn/orgs",
      "repos_url": "https://api.github.com/users/frogcjn/repos",
      "events_url": "https://api.github.com/users/frogcjn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frogcjn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-06-25T04:41:30Z",
    "updated_at": "2017-07-25T21:24:14Z",
    "closed_at": "2016-06-28T18:25:07Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Any progress in supporting promise/async handler? Please!\nI've viewed many post, PR related to this topic, but what is the progress?\nhttps://github.com/pillarjs/router/pull/32\nhttps://github.com/pillarjs/router/pull/26\nhttps://github.com/pillarjs/router/pull/25\nhttps://github.com/expressjs/express/pull/2763\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3029/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3029/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3028",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3028/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3028/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3028/events",
    "html_url": "https://github.com/expressjs/express/issues/3028",
    "id": 161827941,
    "node_id": "MDU6SXNzdWUxNjE4Mjc5NDE=",
    "number": 3028,
    "title": "Obsolete content-type being sent with jsonp",
    "user": {
      "login": "BHare1985",
      "id": 2180284,
      "node_id": "MDQ6VXNlcjIxODAyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2180284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BHare1985",
      "html_url": "https://github.com/BHare1985",
      "followers_url": "https://api.github.com/users/BHare1985/followers",
      "following_url": "https://api.github.com/users/BHare1985/following{/other_user}",
      "gists_url": "https://api.github.com/users/BHare1985/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BHare1985/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BHare1985/subscriptions",
      "organizations_url": "https://api.github.com/users/BHare1985/orgs",
      "repos_url": "https://api.github.com/users/BHare1985/repos",
      "events_url": "https://api.github.com/users/BHare1985/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BHare1985/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-06-23T02:36:20Z",
    "updated_at": "2016-09-01T20:17:32Z",
    "closed_at": "2016-06-23T02:46:30Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "https://github.com/expressjs/express/blob/9375a9afa9d7baa814b454c7a6818a7471aaef00/lib/response.js#L303\n\nAccording to [rfc4329](http://www.rfc-editor.org/rfc/rfc4329.txt) `text/javascript` is obsolete in favor of `application/javascript`\n\nProbably not a big deal but figured I'd draw attention to it. `application/javascript` may not be universally standard and might break things that expect the older `text/javascript` such as conditional http gzip compression\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3028/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3028/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3027",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3027/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3027/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3027/events",
    "html_url": "https://github.com/expressjs/express/issues/3027",
    "id": 161754985,
    "node_id": "MDU6SXNzdWUxNjE3NTQ5ODU=",
    "number": 3027,
    "title": "Issue TravisCI on Node V4",
    "user": {
      "login": "jaumard",
      "id": 2970449,
      "node_id": "MDQ6VXNlcjI5NzA0NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2970449?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jaumard",
      "html_url": "https://github.com/jaumard",
      "followers_url": "https://api.github.com/users/jaumard/followers",
      "following_url": "https://api.github.com/users/jaumard/following{/other_user}",
      "gists_url": "https://api.github.com/users/jaumard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jaumard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jaumard/subscriptions",
      "organizations_url": "https://api.github.com/users/jaumard/orgs",
      "repos_url": "https://api.github.com/users/jaumard/repos",
      "events_url": "https://api.github.com/users/jaumard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jaumard/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2016-06-22T18:36:17Z",
    "updated_at": "2016-06-24T13:42:57Z",
    "closed_at": "2016-06-22T21:23:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Is there any problem with express on Node v4 because I relaunch a build on TravisCI and now it fail https://travis-ci.org/trailsjs/trailpack-express/jobs/139553865\n\n```\nError: Cannot find module './lib/mediaType'\n    at Function.Module._resolveFilename (module.js:325:15)\n    at Function.Module._load (module.js:276:25)\n    at Module.require (module.js:353:17)\n    at require (internal/module.js:12:17)\n    at loadModule (/home/travis/build/trailsjs/trailpack-express/node_modules/express/node_modules/accepts/node_modules/negotiator/index.js:114:16)\n    at Negotiator.mediaTypes (/home/travis/build/trailsjs/trailpack-express/node_modules/express/node_modules/accepts/node_modules/negotiator/index.js:76:29)\n    at Accepts.type.Accepts.types (/home/travis/build/trailsjs/trailpack-express/node_modules/express/node_modules/accepts/index.js:100:33)\n    at IncomingMessage.req.accepts (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/request.js:128:23)\n    at module.exports.middlewares.404.500.res.render.res.render (/home/travis/build/trailsjs/trailpack-express/config/web.js:88:17)\n    at Layer.handle_error (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/layer.js:71:5)\n    at trim_prefix (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:310:13)\n    at /home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:280:7\n    at Function.process_params (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:330:12)\n    at next (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:271:10)\n    at Layer.handle_error (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/layer.js:67:12)\n    at trim_prefix (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:310:13)\n    at /home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:280:7\n    at Function.process_params (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:330:12)\n    at next (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:271:10)\n    at Layer.handle_error (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/layer.js:67:12)\n    at trim_prefix (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:310:13)\n    at /home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:280:7\n    at Function.process_params (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:330:12)\n    at next (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:271:10)\n    at Layer.handle_error (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/layer.js:67:12)\n    at trim_prefix (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:310:13)\n    at /home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:280:7\n    at Function.process_params (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:330:12)\n    at next (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:271:10)\n    at Layer.handle_error (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/layer.js:67:12)\n    at trim_prefix (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:310:13)\n    at /home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:280:7\n    at Function.process_params (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:330:12)\n    at next (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:271:10)\n    at Layer.handle_error (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/layer.js:67:12)\n    at trim_prefix (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:310:13)\n    at /home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:280:7\n    at Function.process_params (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:330:12)\n    at next (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:271:10)\n    at Layer.handle_error (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/layer.js:67:12)\n    at trim_prefix (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:310:13)\n    at /home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:280:7\n    at Function.process_params (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:330:12)\n    at next (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:271:10)\n    at Layer.handle [as handle_request] (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/layer.js:97:5)\n    at trim_prefix (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:312:13)\n    at /home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:280:7\n    at Function.process_params (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:330:12)\n    at next (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:271:10)\n    at cors (/home/travis/build/trailsjs/trailpack-express/node_modules/cors/lib/index.js:178:7)\n    at /home/travis/build/trailsjs/trailpack-express/node_modules/cors/lib/index.js:228:17\n    at originCallback (/home/travis/build/trailsjs/trailpack-express/node_modules/cors/lib/index.js:217:15)\n    at /home/travis/build/trailsjs/trailpack-express/node_modules/cors/lib/index.js:222:13\n    at optionsCallback (/home/travis/build/trailsjs/trailpack-express/node_modules/cors/lib/index.js:203:9)\n    at /home/travis/build/trailsjs/trailpack-express/node_modules/cors/lib/index.js:208:7\n    at Layer.handle [as handle_request] (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:312:13)\n    at /home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:280:7\n    at Function.process_params (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:330:12)\n    at next (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:271:10)\n    at /home/travis/build/trailsjs/trailpack-express/node_modules/express-boom/index.js:19:5\n    at Layer.handle [as handle_request] (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:312:13)\n    at /home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:280:7\n    at Function.process_params (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:330:12)\n    at next (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:271:10)\n    at expressInit (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/middleware/init.js:33:5)\n    at Layer.handle [as handle_request] (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:312:13)\n    at /home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:280:7\n    at Function.process_params (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:330:12)\n    at next (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:271:10)\n    at query (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/middleware/query.js:44:5)\n    at Layer.handle [as handle_request] (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:312:13)\n    at /home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:280:7\n    at Function.process_params (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:330:12)\n    at next (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:271:10)\n    at Function.handle (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/router/index.js:176:3)\n    at EventEmitter.handle (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/application.js:173:10)\n    at Server.app (/home/travis/build/trailsjs/trailpack-express/node_modules/express/lib/express.js:38:9)\n    at emitTwo (events.js:87:13)\n    at Server.emit (events.js:172:7)\n    at HTTPParser.parserOnIncoming [as onIncoming] (_http_server.js:533:12)\n    at HTTPParser.parserOnHeadersComplete (_http_common.js:103:23)\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3027/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3027/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3026",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3026/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3026/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3026/events",
    "html_url": "https://github.com/expressjs/express/issues/3026",
    "id": 161621595,
    "node_id": "MDU6SXNzdWUxNjE2MjE1OTU=",
    "number": 3026,
    "title": "ES6 async Router is not capturing the catch properly",
    "user": {
      "login": "natarajanmca11",
      "id": 9244766,
      "node_id": "MDQ6VXNlcjkyNDQ3NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9244766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/natarajanmca11",
      "html_url": "https://github.com/natarajanmca11",
      "followers_url": "https://api.github.com/users/natarajanmca11/followers",
      "following_url": "https://api.github.com/users/natarajanmca11/following{/other_user}",
      "gists_url": "https://api.github.com/users/natarajanmca11/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/natarajanmca11/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/natarajanmca11/subscriptions",
      "organizations_url": "https://api.github.com/users/natarajanmca11/orgs",
      "repos_url": "https://api.github.com/users/natarajanmca11/repos",
      "events_url": "https://api.github.com/users/natarajanmca11/events{/privacy}",
      "received_events_url": "https://api.github.com/users/natarajanmca11/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-06-22T08:27:54Z",
    "updated_at": "2016-06-29T01:12:13Z",
    "closed_at": "2016-06-28T18:23:11Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am using the following code. Global error handler not getting call If any error happens in service.\n\n```\nclass UserRoute {\n    public static async AddNewUser(req: Request, res: Response, next: NextFunction): Promise<void> {\n        const service = ServiceFactory.CreateService(UserService, req);\n        let v = await service.AddUser(req.body)\n        res.send(v);\n    }\n}\n\nlet router: Router = express.Router();\nrouter.post('/' + UserRoute.AddNewUser.name, UserRoute.AddNewUser);\nexport default router;\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3026/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3026/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3024",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3024/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3024/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3024/events",
    "html_url": "https://github.com/expressjs/express/issues/3024",
    "id": 161001771,
    "node_id": "MDU6SXNzdWUxNjEwMDE3NzE=",
    "number": 3024,
    "title": "Default error handler is used even though last error handler in stack doesn't call `next`",
    "user": {
      "login": "adamreisnz",
      "id": 490562,
      "node_id": "MDQ6VXNlcjQ5MDU2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/490562?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamreisnz",
      "html_url": "https://github.com/adamreisnz",
      "followers_url": "https://api.github.com/users/adamreisnz/followers",
      "following_url": "https://api.github.com/users/adamreisnz/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamreisnz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamreisnz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamreisnz/subscriptions",
      "organizations_url": "https://api.github.com/users/adamreisnz/orgs",
      "repos_url": "https://api.github.com/users/adamreisnz/repos",
      "events_url": "https://api.github.com/users/adamreisnz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamreisnz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2016-06-18T02:05:49Z",
    "updated_at": "2019-03-07T17:30:23Z",
    "closed_at": "2016-06-18T02:12:13Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "I stumbled upon this peculiar scenario in my app which I haven't been able to reproduce in an isolated case yet.\n\nThe situation is as follows:\n\nI have a stack of error handling middleware, with the last one in the stack sending an error response to the client and ending the response. This last middleware does _not_ call `next`.\n\nHowever, despite this, I see the error being logged in my console _after_ the error respones has been sent. So for some reason, Express decided that I haven't handled my error and is using the default error handler instead.\n\nWhile debugging this, I placed _another_ empty error handler after my existing stack which only logs to console. With this error handler in place, the default error handler was no longer being called.\n\nThinking it was an issue with my middleware stack, I disabled all of them, and only left this test handler in my code. This caused the problem to reapper, and Express started using the default handler again:\n\n``` js\napp.use(function(err, req, res, next) {\n  console.log('last handler');\n});\n//after this error handler, express logged the error to console with the default handler\n```\n\nOnly after adding a _second_ empty handler did the default behaviour stop again:\n\n``` js\napp.use(function(err, req, res, next) {\n  console.log('one before last handler');\n});\napp.use(function(err, req, res, next) {\n  console.log('last handler');\n});\n//now express was quiet\n```\n\nThis seems really dodgy to me. I didn't dive into Express' source code yet, but I'll go have a look if there something about my error format or something else in my app that could be triggering this.\n\nHowever, I do think it might be an Express issue with the default error handler being called inappropriately under some circumstances. Will report back if I find out more.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3024/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3024/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3022",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3022/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3022/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3022/events",
    "html_url": "https://github.com/expressjs/express/issues/3022",
    "id": 160788197,
    "node_id": "MDU6SXNzdWUxNjA3ODgxOTc=",
    "number": 3022,
    "title": "Security nsp check failing on negotiator module",
    "user": {
      "login": "sgajavada",
      "id": 7784691,
      "node_id": "MDQ6VXNlcjc3ODQ2OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7784691?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sgajavada",
      "html_url": "https://github.com/sgajavada",
      "followers_url": "https://api.github.com/users/sgajavada/followers",
      "following_url": "https://api.github.com/users/sgajavada/following{/other_user}",
      "gists_url": "https://api.github.com/users/sgajavada/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sgajavada/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sgajavada/subscriptions",
      "organizations_url": "https://api.github.com/users/sgajavada/orgs",
      "repos_url": "https://api.github.com/users/sgajavada/repos",
      "events_url": "https://api.github.com/users/sgajavada/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sgajavada/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-06-17T00:11:51Z",
    "updated_at": "2016-06-17T00:47:57Z",
    "closed_at": "2016-06-17T00:47:52Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "We use https://github.com/nodesecurity/nsp for node module security.  Currently it is failing on the negotiator node module bundled with express.  Can you upgrade to the latest negotiator module?\n\n**Vulnerability**       :   Regular Expression Denial of Service\n**Module**               :   negotiator\n**Path**                    :   express@4.13.4 > accepts@1.2.13 > negotiator@0.5.3**\n**Installed Version** :   0.5.3\n**Vulnerable**          :   <= 0.6.0 \n**Patched**              :   >= 0.6.1\n**More Info**            :   https://nodesecurity.io/advisories/106\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3022/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3022/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3021",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3021/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3021/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3021/events",
    "html_url": "https://github.com/expressjs/express/issues/3021",
    "id": 158747126,
    "node_id": "MDU6SXNzdWUxNTg3NDcxMjY=",
    "number": 3021,
    "title": "FireFox not loading sendFile",
    "user": {
      "login": "JperF",
      "id": 4474118,
      "node_id": "MDQ6VXNlcjQ0NzQxMTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4474118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JperF",
      "html_url": "https://github.com/JperF",
      "followers_url": "https://api.github.com/users/JperF/followers",
      "following_url": "https://api.github.com/users/JperF/following{/other_user}",
      "gists_url": "https://api.github.com/users/JperF/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JperF/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JperF/subscriptions",
      "organizations_url": "https://api.github.com/users/JperF/orgs",
      "repos_url": "https://api.github.com/users/JperF/repos",
      "events_url": "https://api.github.com/users/JperF/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JperF/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-06-06T18:48:33Z",
    "updated_at": "2016-06-06T20:47:49Z",
    "closed_at": "2016-06-06T20:47:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have a basic check on the backend to display a maintenance page base on a process variable. \n\n``` javascript\napp.use('/', function ( req, res, next ) {\n    if (process.env.MAINTENANCE_MODE) {\n        res.sendFile('/error/maintenanceWindow.html', {\n            root    : __dirname,\n            dotfiles: 'deny',\n            headers : {\n                'x-timestamp': Date.now(),\n                'x-sent'     : true\n            }\n        }, function ( err ) {\n            if (err) {\n                logger.error(err);\n                res.status(err.status).end();\n            }\n            else {\n                logger.info('Sent maintenance page');\n            }\n        });\n    }\n    else {\n        next()\n    }\n}\n```\n\nWhen viewing the page on `chrome` and `safari` the page display properly but in `firefox` it doesn't properly load the right page. Is this an issue with the send file function or something I am doing incorrectly? \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3021/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3021/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3020",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3020/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3020/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3020/events",
    "html_url": "https://github.com/expressjs/express/issues/3020",
    "id": 158691656,
    "node_id": "MDU6SXNzdWUxNTg2OTE2NTY=",
    "number": 3020,
    "title": "Sockets are not working with CloudFlare",
    "user": {
      "login": "salmanaligeek",
      "id": 5575504,
      "node_id": "MDQ6VXNlcjU1NzU1MDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5575504?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/salmanaligeek",
      "html_url": "https://github.com/salmanaligeek",
      "followers_url": "https://api.github.com/users/salmanaligeek/followers",
      "following_url": "https://api.github.com/users/salmanaligeek/following{/other_user}",
      "gists_url": "https://api.github.com/users/salmanaligeek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/salmanaligeek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/salmanaligeek/subscriptions",
      "organizations_url": "https://api.github.com/users/salmanaligeek/orgs",
      "repos_url": "https://api.github.com/users/salmanaligeek/repos",
      "events_url": "https://api.github.com/users/salmanaligeek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/salmanaligeek/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2016-06-06T14:28:52Z",
    "updated_at": "2016-06-06T15:56:12Z",
    "closed_at": "2016-06-06T14:33:58Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have nodejs web socket server running on port 3000 on my Debian based VPS. I am currently using free plan of cloudflare.\n\nsocket.mydomain.com is gray record in CloudFlare and sockets are working with this URL but I don't want to work this way because I don't want to expose my server's IP address. Main problem is that sockets are not working on main orange record in cloudflare. Cloudflare have sockets support in free plan too but why these are not working? What I am doing wrong?\n\nI have Laravel application and it was not working with Cloudflare initially and I had to install https://github.com/fideloper/TrustedProxy to work with cloudflare.\n\nI tried to follow this guide but no luck:\nhttp://expressjs.com/en/guide/behind-proxies.html\n\nI have been trying to solve this issue for weeks.\n\nHere is the nodejs socket server codes:\n\n```\nvar express = require('express');\nvar https = require('https');\nvar http = require('http');\nvar app = express();\nvar port = '3000';\n\n//app.enable('trust proxy fn');\n//app.set('trust proxy fn', 'loopback, linklocal, uniquelocal');\napp.set('trust proxy fn', [\n    // Ipv4\n    '103.21.244.0/22',\n    '103.22.200.0/22',\n    '103.31.4.0/22',\n    '104.16.0.0/12',\n    '108.162.192.0/18',\n    '131.0.72.0/22',\n    '141.101.64.0/18',\n    '162.158.0.0/15',\n    '172.64.0.0/13',\n    '173.245.48.0/20',\n    '188.114.96.0/20',\n    '190.93.240.0/20',\n    '197.234.240.0/22',\n    '198.41.128.0/17',\n    '199.27.128.0/21',\n    // Ipv6\n    '2400:cb00::/32',\n    '2405:8100::/32',\n    '2405:b500::/32',\n    '2606:4700::/32',\n    '2803:f800::/32',\n]);\n\n\nvar server = http.createServer(app);\n\nvar io = require('socket.io')(server);\nvar Redis = require('ioredis');\nvar redis = new Redis({password: \"myredispassword\"});\n\n\nserver.listen(port, function () {\n    var addr = server.address();\n//  console.log(addr);\n    console.log('   server listening on ' + addr.address + ':' + addr.port);\n});\n\n//function handler(req, res) {\n//  console.log(req);\n//  res.writeHead(200);\n//  res.end('');\n//}\n\nio.on('connection', function (socket, req) {\n//  console.log(socket);\n//  console.log(req);\n});\n\nredis.psubscribe('*', function (err, count) {\n    //\n});\n\nredis.on('pmessage', function (subscribed, channel, message) {\n    message = JSON.parse(message);\n    io.emit(channel + ':' + message.event, message.data);\n});\n```\n\nClient-side code:\n\n```\n<script src=\"{{ asset('assets/js/socket.io.js') }}\"></script>\n//  var socket = io('<?php echo url('/'); ?>:3000', {secure: false, port: 3000}); // does not work\nvar socket = io('socket.mydomain.com:3000', {secure: false, port: 3000}); // works but prone to DDoS\n\nsocket.on('test-event:App\\\\Events\\\\TestEvent', notifyUser_mine);\n</script>\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3020/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 1,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3020/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3019",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3019/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3019/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3019/events",
    "html_url": "https://github.com/expressjs/express/issues/3019",
    "id": 158546967,
    "node_id": "MDU6SXNzdWUxNTg1NDY5Njc=",
    "number": 3019,
    "title": "In Node.js v4.3.2 and later, expressjs throws the error immediately it is instantiated",
    "user": {
      "login": "kn9ts",
      "id": 1999708,
      "node_id": "MDQ6VXNlcjE5OTk3MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1999708?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kn9ts",
      "html_url": "https://github.com/kn9ts",
      "followers_url": "https://api.github.com/users/kn9ts/followers",
      "following_url": "https://api.github.com/users/kn9ts/following{/other_user}",
      "gists_url": "https://api.github.com/users/kn9ts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kn9ts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kn9ts/subscriptions",
      "organizations_url": "https://api.github.com/users/kn9ts/orgs",
      "repos_url": "https://api.github.com/users/kn9ts/repos",
      "events_url": "https://api.github.com/users/kn9ts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kn9ts/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2016-06-05T09:59:46Z",
    "updated_at": "2016-06-05T20:23:37Z",
    "closed_at": "2016-06-05T12:53:12Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "For example, below, is the code bit am using to catch 404s and create a JSON error response that I'll later send out with the error stack merged with a few other details:\n\n``` js\n// catch 404 and forward to error handle\napp.use((req, res, next) => {\n  const err = new Error('Not Found');\n  err.request = req.originalUrl;\n  err.status = 404;\n  next(err);\n});\n\n// error handlers\napp.use((err, req, res) => {\n  console.log('ERROR PASSING THROUGH', err.message);\n  // get the error stack\n  const stack = err.stack.split(/\\n/)\n    .map(stackTrace => stackTrace.replace(/\\s{2,}/g, ' ').trim());\n\n  // send out the error as json\n  res.status(err.status || 500).json({\n    api: err,\n    url: req.originalUrl,\n    error: err.message,\n    stack,\n  });\n});\n```\n\nWhen the error is instantiated `const err = new Error('Not Found');` it immediately throw this error and `err.request = req.originalUrl;` is never reached.\n\nThis is not the case with the prior version of node I was using `v4.2.5`\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3019/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3019/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3018",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3018/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3018/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3018/events",
    "html_url": "https://github.com/expressjs/express/pull/3018",
    "id": 158093317,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NzIzMTIzMzg=",
    "number": 3018,
    "title": "Improve performace of response.json and jsonp.",
    "user": {
      "login": "na-ka-na",
      "id": 262532,
      "node_id": "MDQ6VXNlcjI2MjUzMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/262532?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/na-ka-na",
      "html_url": "https://github.com/na-ka-na",
      "followers_url": "https://api.github.com/users/na-ka-na/followers",
      "following_url": "https://api.github.com/users/na-ka-na/following{/other_user}",
      "gists_url": "https://api.github.com/users/na-ka-na/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/na-ka-na/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/na-ka-na/subscriptions",
      "organizations_url": "https://api.github.com/users/na-ka-na/orgs",
      "repos_url": "https://api.github.com/users/na-ka-na/repos",
      "events_url": "https://api.github.com/users/na-ka-na/events{/privacy}",
      "received_events_url": "https://api.github.com/users/na-ka-na/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-06-02T09:10:55Z",
    "updated_at": "2016-06-03T02:01:34Z",
    "closed_at": "2016-06-02T09:27:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3018",
      "html_url": "https://github.com/expressjs/express/pull/3018",
      "diff_url": "https://github.com/expressjs/express/pull/3018.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3018.patch",
      "merged_at": null
    },
    "body": "Use single arity overload of JSON.stringify in the default case for response.json(). Faster by 20x-30x for my workload.\n\nNot sure why it works.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3018/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3018/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3017",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3017/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3017/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3017/events",
    "html_url": "https://github.com/expressjs/express/pull/3017",
    "id": 157824044,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NzIxMjMyMzU=",
    "number": 3017,
    "title": "on windows, c:/ is alos absolute path, as c:\\\\",
    "user": {
      "login": "huaoguo",
      "id": 263117,
      "node_id": "MDQ6VXNlcjI2MzExNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/263117?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/huaoguo",
      "html_url": "https://github.com/huaoguo",
      "followers_url": "https://api.github.com/users/huaoguo/followers",
      "following_url": "https://api.github.com/users/huaoguo/following{/other_user}",
      "gists_url": "https://api.github.com/users/huaoguo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/huaoguo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/huaoguo/subscriptions",
      "organizations_url": "https://api.github.com/users/huaoguo/orgs",
      "repos_url": "https://api.github.com/users/huaoguo/repos",
      "events_url": "https://api.github.com/users/huaoguo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/huaoguo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 8497,
        "node_id": "MDU6TGFiZWw4NDk3",
        "url": "https://api.github.com/repos/expressjs/express/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true,
        "description": null
      },
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/14",
      "html_url": "https://github.com/expressjs/express/milestone/14",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/14/labels",
      "id": 1597498,
      "node_id": "MDk6TWlsZXN0b25lMTU5NzQ5OA==",
      "number": 14,
      "title": "4.14",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 6,
      "state": "closed",
      "created_at": "2016-02-22T16:27:45Z",
      "updated_at": "2016-06-16T15:07:35Z",
      "due_on": "2016-06-16T07:00:00Z",
      "closed_at": "2016-06-16T15:07:35Z"
    },
    "comments": 5,
    "created_at": "2016-06-01T05:04:39Z",
    "updated_at": "2016-06-16T15:06:34Z",
    "closed_at": "2016-06-16T15:06:34Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3017",
      "html_url": "https://github.com/expressjs/express/pull/3017",
      "diff_url": "https://github.com/expressjs/express/pull/3017.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3017.patch",
      "merged_at": null
    },
    "body": "http://stackoverflow.com/a/37543704/4771854\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3017/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3017/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3016",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3016/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3016/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3016/events",
    "html_url": "https://github.com/expressjs/express/issues/3016",
    "id": 157556034,
    "node_id": "MDU6SXNzdWUxNTc1NTYwMzQ=",
    "number": 3016,
    "title": "Passing array of views to template engines?",
    "user": {
      "login": "jamespegg",
      "id": 894505,
      "node_id": "MDQ6VXNlcjg5NDUwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/894505?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamespegg",
      "html_url": "https://github.com/jamespegg",
      "followers_url": "https://api.github.com/users/jamespegg/followers",
      "following_url": "https://api.github.com/users/jamespegg/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamespegg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamespegg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamespegg/subscriptions",
      "organizations_url": "https://api.github.com/users/jamespegg/orgs",
      "repos_url": "https://api.github.com/users/jamespegg/repos",
      "events_url": "https://api.github.com/users/jamespegg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamespegg/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2016-05-30T21:00:49Z",
    "updated_at": "2016-05-31T22:56:28Z",
    "closed_at": "2016-05-30T21:18:16Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "As far as I understand it at the moment, when Express has an array of view directories it does the lookup initially and passes whichever file it finds to the template rendering engine.\n\nI've got a use case where I'd like the template engine to include / extend templates from the same set of view directories defined in Express. That way I could mix and match files across multiple locations and allow for more granular template overwriting.\n\nWould passing that array to the template engine be considered at all? As far as I can see it would only need one change (see below) but I'm not sure what the wider impact of that would be;\n\n```\nView.prototype.render = function render(options, callback) {\n  debug('render \"%s\"', this.path);\n\n  var roots = [].concat(this.root);\n\n  this.engine(this.path, options, callback, roots);\n};\n```\n\nI'm happy to get a pull request together.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3016/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3016/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3015",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3015/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3015/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3015/events",
    "html_url": "https://github.com/expressjs/express/issues/3015",
    "id": 157388222,
    "node_id": "MDU6SXNzdWUxNTczODgyMjI=",
    "number": 3015,
    "title": "Last router's next() does not immediately invoke parent's router middleware",
    "user": {
      "login": "urugator",
      "id": 11457665,
      "node_id": "MDQ6VXNlcjExNDU3NjY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/11457665?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/urugator",
      "html_url": "https://github.com/urugator",
      "followers_url": "https://api.github.com/users/urugator/followers",
      "following_url": "https://api.github.com/users/urugator/following{/other_user}",
      "gists_url": "https://api.github.com/users/urugator/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/urugator/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/urugator/subscriptions",
      "organizations_url": "https://api.github.com/users/urugator/orgs",
      "repos_url": "https://api.github.com/users/urugator/repos",
      "events_url": "https://api.github.com/users/urugator/events{/privacy}",
      "received_events_url": "https://api.github.com/users/urugator/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-05-29T14:15:04Z",
    "updated_at": "2016-05-29T15:46:14Z",
    "closed_at": "2016-05-29T15:46:14Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi, I quess it's intended bahavior, however I would like to know why is that.\nThe next() in a context of a single router immidiately invokes next middleware registered on that router.\nSo if there is a code placed after next(), it's invoked after the next middleware is finished:\n\n``` javascript\nrouter.use(function(req, res, next) {\n    console.log(\"1\");\n    next(); // immidiately invokes next middleware\n    console.log(\"3\");\n}).use(function(req, res, next) {\n    console.log(\"2\");\n    next();\n});\n// outputs: 1 2 3\n```\n\nHowever when middleware is wrapped into another router this behavior will change.\nThe next() will instruct the router to call next() on it's parent's stack, but only after the current middleware is completely finished:\n\n``` javascript\nrouter.use(express.Router().use(function(req, res, next) {\n    console.log(\"1\");\n    next(); // the parent's next middleware is called after this one is finished\n    console.log(\"3\");\n})).use(function(req, res, next) {\n    console.log(\"2\");\n    next();\n});\n// outputs: 1 3 2\n```\n\nMaybe it's because the request object is changed inside the router, so if the next() would immediately invoke parent's middleware, the request object would change again, so it wouldn't correspond with the request intially passed to router?\nIn that case, can't the router have own copy of the request object?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3015/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3015/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3014",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3014/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3014/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3014/events",
    "html_url": "https://github.com/expressjs/express/issues/3014",
    "id": 157333650,
    "node_id": "MDU6SXNzdWUxNTczMzM2NTA=",
    "number": 3014,
    "title": "Use Proxy With Express middelware in NodeJS",
    "user": {
      "login": "adanba",
      "id": 10264934,
      "node_id": "MDQ6VXNlcjEwMjY0OTM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/10264934?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adanba",
      "html_url": "https://github.com/adanba",
      "followers_url": "https://api.github.com/users/adanba/followers",
      "following_url": "https://api.github.com/users/adanba/following{/other_user}",
      "gists_url": "https://api.github.com/users/adanba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adanba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adanba/subscriptions",
      "organizations_url": "https://api.github.com/users/adanba/orgs",
      "repos_url": "https://api.github.com/users/adanba/repos",
      "events_url": "https://api.github.com/users/adanba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adanba/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-05-28T11:08:30Z",
    "updated_at": "2016-05-30T19:46:00Z",
    "closed_at": "2016-05-29T05:03:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\n\nI have in my private network different services, these services are not accessible from the out side (externe).\n\nI'd like that my services be accessible to some users, and this after an authentication process (for this part I use express).\n\n![Schema](http://i.stack.imgur.com/KWhX2.jpg)\n\nOnce the user is authentificared it will be proxiate to the right service, I tried for this the http-proxy module.\n- **Problem:**\n  \n  I failed to use correctly http-proxy with express module, and resolve this enigma as wished.\n- **Information:**\n  \n  Almost services use web-socket protocol.\n- **Code:**\n  \n  I began by doing this\n\n```\n    // Create app with Express\n    var express  = require('express');\n    var app      = express();\n\n    // Create a proxy server with http-proxy\n    var httpProxy = require('http-proxy');\n    var proxy = httpProxy.createProxyServer();\n\n    // Create target params (in the local network)\n    var serverOne = {target:'ws://172.17.0.3:80',ws:true};\n\n    // The use of proxy to expose the service\n    app.all(\"/app/\", function(req, res) {\n        console.log('redirecting to Server1');\n        proxy.web(req, res, serverOne);\n    })\n\n    // The login part\n    .get('/login', function(req, res) {\n        res.render('login.ejs');\n        console.log('Cherche Login');\n    })\n\n    app.listen(8080);\n```\n- **Result:**\n\n![Result](http://i.stack.imgur.com/Kgukt.jpg)\n\n**Orginal request :** \n[Here](http://stackoverflow.com/questions/37493676/use-proxy-with-express-middelware-in-nodejs)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3014/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3014/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3013",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3013/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3013/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3013/events",
    "html_url": "https://github.com/expressjs/express/issues/3013",
    "id": 157231168,
    "node_id": "MDU6SXNzdWUxNTcyMzExNjg=",
    "number": 3013,
    "title": "I want to rewrite res, what should I do",
    "user": {
      "login": "weiqingting",
      "id": 6859424,
      "node_id": "MDQ6VXNlcjY4NTk0MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6859424?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/weiqingting",
      "html_url": "https://github.com/weiqingting",
      "followers_url": "https://api.github.com/users/weiqingting/followers",
      "following_url": "https://api.github.com/users/weiqingting/following{/other_user}",
      "gists_url": "https://api.github.com/users/weiqingting/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/weiqingting/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/weiqingting/subscriptions",
      "organizations_url": "https://api.github.com/users/weiqingting/orgs",
      "repos_url": "https://api.github.com/users/weiqingting/repos",
      "events_url": "https://api.github.com/users/weiqingting/events{/privacy}",
      "received_events_url": "https://api.github.com/users/weiqingting/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-05-27T15:24:06Z",
    "updated_at": "2016-05-27T15:44:39Z",
    "closed_at": "2016-05-27T15:44:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "i want to rewrite res in express,but i try a lot of ways, are not successful;\n\n for example\n\n``` js\napp.get(\"/hello\",function(req,res){\n     res.end();\n});\n```\n\noutput:\"66666\"\n\n``` js\nvar res=http.ServerResponse.prototype;\n\nres.end=function(){\n     console.log(\"66666\");\n     var args=[].slice.call(arguments);\n     res.end.call(args);\n }\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3013/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3013/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3012",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3012/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3012/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3012/events",
    "html_url": "https://github.com/expressjs/express/issues/3012",
    "id": 157046941,
    "node_id": "MDU6SXNzdWUxNTcwNDY5NDE=",
    "number": 3012,
    "title": "Express 5.x to be expected?",
    "user": {
      "login": "rubenstolk",
      "id": 692644,
      "node_id": "MDQ6VXNlcjY5MjY0NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/692644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rubenstolk",
      "html_url": "https://github.com/rubenstolk",
      "followers_url": "https://api.github.com/users/rubenstolk/followers",
      "following_url": "https://api.github.com/users/rubenstolk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rubenstolk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rubenstolk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rubenstolk/subscriptions",
      "organizations_url": "https://api.github.com/users/rubenstolk/orgs",
      "repos_url": "https://api.github.com/users/rubenstolk/repos",
      "events_url": "https://api.github.com/users/rubenstolk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rubenstolk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 98481977,
        "node_id": "MDU6TGFiZWw5ODQ4MTk3Nw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-05-26T18:20:58Z",
    "updated_at": "2016-05-26T18:34:14Z",
    "closed_at": "2016-05-26T18:34:04Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Is there a plan/roadmap?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3012/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3012/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3011",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3011/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3011/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3011/events",
    "html_url": "https://github.com/expressjs/express/issues/3011",
    "id": 157021200,
    "node_id": "MDU6SXNzdWUxNTcwMjEyMDA=",
    "number": 3011,
    "title": "next callback swallows falsy values",
    "user": {
      "login": "despairblue",
      "id": 927609,
      "node_id": "MDQ6VXNlcjkyNzYwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/927609?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/despairblue",
      "html_url": "https://github.com/despairblue",
      "followers_url": "https://api.github.com/users/despairblue/followers",
      "following_url": "https://api.github.com/users/despairblue/following{/other_user}",
      "gists_url": "https://api.github.com/users/despairblue/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/despairblue/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/despairblue/subscriptions",
      "organizations_url": "https://api.github.com/users/despairblue/orgs",
      "repos_url": "https://api.github.com/users/despairblue/repos",
      "events_url": "https://api.github.com/users/despairblue/events{/privacy}",
      "received_events_url": "https://api.github.com/users/despairblue/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-05-26T16:09:58Z",
    "updated_at": "2016-05-26T19:31:17Z",
    "closed_at": "2016-05-26T16:23:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The [`next()`](https://github.com/expressjs/express/blob/master/lib/router/route.js#L128) callback does not call the error handler for any falsy value.\n\n[See this example.](https://gist.github.com/despairblue/ee45362d86a7106997111e1e6806354a)\n\nIn the case of `next(undefined)` and `throw undefined` I see that this is cumbersome (in the former case even impossible, but in the latter case a flag could be set [where the exception is caught](https://github.com/expressjs/express/blob/f3d99a4fdbe1531ea609e92c4d4ae6c269d78c7a/lib/router/layer.js#L96)).\n\nThe other cases could be handled by explicitly comparing to `undefined`.\n\nThe reason I'd like to see this is that passing something to `next()` that is not `undefined` is almost always something one wants to handle. If it comes from a third party library the developer might not even know that it could return something falsy. Or a third party library could throw something falsy and that is something one wants to know. At the moment express swallows this and responds with a 404. Stumbling onto this issue could take some time to debug. \n\nI know that throwing 0, '', false etc. is something that should not be done, but the fact is that everyone who relies on third party code (without completely reviewing it) will eventually hit this case.\n\nI'm also aware that this would be a breaking change, I just wanted to raise the issue and start a discussion.\n\nCheers\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3011/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3011/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3010",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3010/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3010/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3010/events",
    "html_url": "https://github.com/expressjs/express/issues/3010",
    "id": 156665262,
    "node_id": "MDU6SXNzdWUxNTY2NjUyNjI=",
    "number": 3010,
    "title": "Expressjs Generator still use Jade instead of pug",
    "user": {
      "login": "imam",
      "id": 8213031,
      "node_id": "MDQ6VXNlcjgyMTMwMzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8213031?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/imam",
      "html_url": "https://github.com/imam",
      "followers_url": "https://api.github.com/users/imam/followers",
      "following_url": "https://api.github.com/users/imam/following{/other_user}",
      "gists_url": "https://api.github.com/users/imam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/imam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/imam/subscriptions",
      "organizations_url": "https://api.github.com/users/imam/orgs",
      "repos_url": "https://api.github.com/users/imam/repos",
      "events_url": "https://api.github.com/users/imam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/imam/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 382080129,
        "node_id": "MDU6TGFiZWwzODIwODAxMjk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:express-generator",
        "name": "module:express-generator",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-05-25T05:18:49Z",
    "updated_at": "2020-03-27T10:27:41Z",
    "closed_at": "2016-05-25T05:24:06Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hey, I'm newbie here and I realized that Expressjs still use Jade instead their new name which is pug. Am I doing anything wrong? Or Expressjs still not updated?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3010/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3010/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3009",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3009/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3009/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3009/events",
    "html_url": "https://github.com/expressjs/express/issues/3009",
    "id": 156596571,
    "node_id": "MDU6SXNzdWUxNTY1OTY1NzE=",
    "number": 3009,
    "title": "Node.js http server hangs while processing request body",
    "user": {
      "login": "khadrin",
      "id": 153242,
      "node_id": "MDQ6VXNlcjE1MzI0Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/153242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/khadrin",
      "html_url": "https://github.com/khadrin",
      "followers_url": "https://api.github.com/users/khadrin/followers",
      "following_url": "https://api.github.com/users/khadrin/following{/other_user}",
      "gists_url": "https://api.github.com/users/khadrin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/khadrin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/khadrin/subscriptions",
      "organizations_url": "https://api.github.com/users/khadrin/orgs",
      "repos_url": "https://api.github.com/users/khadrin/repos",
      "events_url": "https://api.github.com/users/khadrin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/khadrin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-05-24T20:03:23Z",
    "updated_at": "2016-05-24T22:12:50Z",
    "closed_at": "2016-05-24T22:12:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**EDIT** Deleted by @dougwilson since this looks like an irresponsibility-disclosed DoS attack. I am trying to gather more information from @khadrin to understand the issue before the content will be added back.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3009/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3009/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3008",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3008/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3008/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3008/events",
    "html_url": "https://github.com/expressjs/express/issues/3008",
    "id": 156416730,
    "node_id": "MDU6SXNzdWUxNTY0MTY3MzA=",
    "number": 3008,
    "title": "API or documentation missing for removal of routes",
    "user": {
      "login": "doug65536",
      "id": 3521553,
      "node_id": "MDQ6VXNlcjM1MjE1NTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3521553?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/doug65536",
      "html_url": "https://github.com/doug65536",
      "followers_url": "https://api.github.com/users/doug65536/followers",
      "following_url": "https://api.github.com/users/doug65536/following{/other_user}",
      "gists_url": "https://api.github.com/users/doug65536/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/doug65536/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/doug65536/subscriptions",
      "organizations_url": "https://api.github.com/users/doug65536/orgs",
      "repos_url": "https://api.github.com/users/doug65536/repos",
      "events_url": "https://api.github.com/users/doug65536/events{/privacy}",
      "received_events_url": "https://api.github.com/users/doug65536/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-05-24T04:18:07Z",
    "updated_at": "2016-05-24T20:56:50Z",
    "closed_at": "2016-05-24T04:26:50Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I can't find any way to remove routes cleanly. The closest thing I can find is a [stackoverflow answer](http://stackoverflow.com/questions/10378690/remove-route-mappings-in-nodejs-express#28369539) that proposes digging into private members and ripping out routes. Is this legitimate? It doesn't seem so.\n\nIsn't there an API to cleanly remove a route, such as something added with `.get('/myendpoint', function...)`?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3008/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3008/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3007",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3007/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3007/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3007/events",
    "html_url": "https://github.com/expressjs/express/pull/3007",
    "id": 156411479,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NzExNTIyNDk=",
    "number": 3007,
    "title": "Update license year",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-05-24T03:15:11Z",
    "updated_at": "2016-05-29T19:08:53Z",
    "closed_at": "2016-05-29T19:08:53Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3007",
      "html_url": "https://github.com/expressjs/express/pull/3007",
      "diff_url": "https://github.com/expressjs/express/pull/3007.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3007.patch",
      "merged_at": null
    },
    "body": "Just updated the year from 2015 to 2016, am guessing the license is still with Douglas.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3007/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3007/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3006",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3006/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3006/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3006/events",
    "html_url": "https://github.com/expressjs/express/pull/3006",
    "id": 156408462,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NzExNTAyODI=",
    "number": 3006,
    "title": "Release 4.14",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 113897193,
        "node_id": "MDU6TGFiZWwxMTM4OTcxOTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/release",
        "name": "release",
        "color": "000000",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/14",
      "html_url": "https://github.com/expressjs/express/milestone/14",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/14/labels",
      "id": 1597498,
      "node_id": "MDk6TWlsZXN0b25lMTU5NzQ5OA==",
      "number": 14,
      "title": "4.14",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 6,
      "state": "closed",
      "created_at": "2016-02-22T16:27:45Z",
      "updated_at": "2016-06-16T15:07:35Z",
      "due_on": "2016-06-16T07:00:00Z",
      "closed_at": "2016-06-16T15:07:35Z"
    },
    "comments": 2,
    "created_at": "2016-05-24T02:43:59Z",
    "updated_at": "2016-06-16T15:06:34Z",
    "closed_at": "2016-06-16T15:06:33Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3006",
      "html_url": "https://github.com/expressjs/express/pull/3006",
      "diff_url": "https://github.com/expressjs/express/pull/3006.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3006.patch",
      "merged_at": "2016-06-16T15:06:33Z"
    },
    "body": "This is a tracking issue for release 4.14.\n\n**Please keep feature requests in their own issues**\n\nIf you want to make a comment on a particular change, please make the comment in the \"Files changed\" tab so comments are not lost during a rebase.\n\nList of changes for release:\n- [x] Encode URL in `res.location`/`res.redirect` if not already encoded #2897 #3003\n- [x] Fix Windows absolute path check using forward slashes #3017\n- [x] Improve `res.json`/`res.jsonp` performance in Node.js < 6 #2900\n- [x] Improve error when given non-string to `res.header` #2993\n- [x] Use strict compares #2722\n- [x] Upgrade `accepts` module to 1.3.3 which brings in lots of `negotiator` improvements\n- [x] Upgrade `content-type` module to 1.0.2\n- [x] Upgrade `cookie` module to 0.3.1 which brings new `sameSite` option\n- [x] Upgrade `finalhandler` module to 0.5.0 which brings `err.headers` support\n- [x] Upgrade `proxy-addr` module to 1.1.2\n- [x] Upgrade `qs` module to 6.2.0 which brings the `encode` option to `query` middleware\n- [x] Upgrade `range-parser` module to 1.2.0 which brings options like `combine`\n- [x] Upgrade `send` module to 0.14.1 which brings `Range` & redirect fixes and new options\n- [x] Upgrade `serve-static` module to 1.11.1 which brings `Range` & redirect fixes and new options\n- [x] Upgrade `type-is` module to 1.6.13\n- [x] Upgrade `vary` module to 1.1.0 which brings field name validation\n\n**Testing this release**\n\nIf you want to try out this release, you can install it with the following commands:\n\n``` bash\n$ npm cache clean express\n$ npm install strongloop/express#4.14\n```\n\nOwners/collaborators: please do not merge this PR :)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3006/reactions",
      "total_count": 18,
      "+1": 9,
      "-1": 0,
      "laugh": 0,
      "hooray": 4,
      "confused": 0,
      "heart": 5,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3006/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3005",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3005/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3005/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3005/events",
    "html_url": "https://github.com/expressjs/express/issues/3005",
    "id": 156179292,
    "node_id": "MDU6SXNzdWUxNTYxNzkyOTI=",
    "number": 3005,
    "title": "How to faster render in express?",
    "user": {
      "login": "extensionsapp",
      "id": 8192379,
      "node_id": "MDQ6VXNlcjgxOTIzNzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8192379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/extensionsapp",
      "html_url": "https://github.com/extensionsapp",
      "followers_url": "https://api.github.com/users/extensionsapp/followers",
      "following_url": "https://api.github.com/users/extensionsapp/following{/other_user}",
      "gists_url": "https://api.github.com/users/extensionsapp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/extensionsapp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/extensionsapp/subscriptions",
      "organizations_url": "https://api.github.com/users/extensionsapp/orgs",
      "repos_url": "https://api.github.com/users/extensionsapp/repos",
      "events_url": "https://api.github.com/users/extensionsapp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/extensionsapp/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-05-22T23:22:33Z",
    "updated_at": "2016-05-22T23:26:44Z",
    "closed_at": "2016-05-22T23:26:37Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello.\n\nI'm testing site speed - https://developers.google.com/speed/pagespeed/insights/\n\n```\nconsole.time('TimeRender');\nres.render('page', render, function(err, html) {\n    if (err) return console.log('Render Error:', err);\n    res.send(html);\n    console.timeEnd('TimeRender');\n});\n```\n\nAnd I see disappointing results:\n**TimeRender: 2325.884ms**\n\nIs it possible to create a page in 2 steps:\n1. Display the page \"Please wait ...\";\n2. Display page after render.\n\nThus the server's response will be very quick.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3005/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3005/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3004",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3004/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3004/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3004/events",
    "html_url": "https://github.com/expressjs/express/issues/3004",
    "id": 156107818,
    "node_id": "MDU6SXNzdWUxNTYxMDc4MTg=",
    "number": 3004,
    "title": "Potential bug with `req.app.locals` being a reference to actual `app.locals` object.",
    "user": {
      "login": "craigkj",
      "id": 3908577,
      "node_id": "MDQ6VXNlcjM5MDg1Nzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3908577?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/craigkj",
      "html_url": "https://github.com/craigkj",
      "followers_url": "https://api.github.com/users/craigkj/followers",
      "following_url": "https://api.github.com/users/craigkj/following{/other_user}",
      "gists_url": "https://api.github.com/users/craigkj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/craigkj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/craigkj/subscriptions",
      "organizations_url": "https://api.github.com/users/craigkj/orgs",
      "repos_url": "https://api.github.com/users/craigkj/repos",
      "events_url": "https://api.github.com/users/craigkj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/craigkj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2016-05-21T15:38:55Z",
    "updated_at": "2016-05-22T21:48:24Z",
    "closed_at": "2016-05-21T15:44:43Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\n\nI think I may have come across a potential bug with then express request object.\n\nThe [request](http://expressjs.com/en/api.html#req) object has a value at [`req.app.locals`](http://expressjs.com/en/api.html#req.app) which contains the values of `app.locals`. Values \nthat are typically used for app wide config and is set up when the server is started. \n\nIt seems that this value is in fact a `reference` to app.locals rather than a clone, and given that most people are likely to use an object to house this data it means that changes to `req.app.locals.x` will change that value at source and thus for the entire application, rather than just for the request in question as you might expect.\n\nFor instance, if you imagine:\n\n``` javascript\napp.locals = {\n    name: 'World'\n};\n\nfunction getGreeting() {\n    return 'Hello ' + req.app.locals.name;\n}\n\napp.get('/', function (req, res) {\n    res.send(getGreeting());\n});\n\napp.get('/break', function(req, res) {\n    req.app.locals.name = 'Everyone';\n    res.send(getGreeting());\n});\n```\n\nworking example here:\nhttps://github.com/craigkj/express-app-locals-bug\n\nAfter one request to `/break` is made, all requests to `/` return `Hello Everyone` which probably not what was intended. Is this expected behaviour? I can imagine that this is intentional and might we required to express to function, however if that is the case then it may be a good idea to update the docs to reflect this (if so I can update via PR)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3004/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3004/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3003",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3003/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3003/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3003/events",
    "html_url": "https://github.com/expressjs/express/issues/3003",
    "id": 156096915,
    "node_id": "MDU6SXNzdWUxNTYwOTY5MTU=",
    "number": 3003,
    "title": "The header content contains invalid characters TypeError: The header content contains invalid characters at ServerResponse.",
    "user": {
      "login": "kimown",
      "id": 7932380,
      "node_id": "MDQ6VXNlcjc5MzIzODA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7932380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kimown",
      "html_url": "https://github.com/kimown",
      "followers_url": "https://api.github.com/users/kimown/followers",
      "following_url": "https://api.github.com/users/kimown/following{/other_user}",
      "gists_url": "https://api.github.com/users/kimown/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kimown/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kimown/subscriptions",
      "organizations_url": "https://api.github.com/users/kimown/orgs",
      "repos_url": "https://api.github.com/users/kimown/repos",
      "events_url": "https://api.github.com/users/kimown/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kimown/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/14",
      "html_url": "https://github.com/expressjs/express/milestone/14",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/14/labels",
      "id": 1597498,
      "node_id": "MDk6TWlsZXN0b25lMTU5NzQ5OA==",
      "number": 14,
      "title": "4.14",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 6,
      "state": "closed",
      "created_at": "2016-02-22T16:27:45Z",
      "updated_at": "2016-06-16T15:07:35Z",
      "due_on": "2016-06-16T07:00:00Z",
      "closed_at": "2016-06-16T15:07:35Z"
    },
    "comments": 2,
    "created_at": "2016-05-21T11:21:43Z",
    "updated_at": "2016-06-16T15:06:34Z",
    "closed_at": "2016-06-16T15:06:34Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "hi , today i upgrade my node version to 4.4.4 LTS, and i found something wrong in  my old project.\nthe method i am using in my project\n\n```\n res.redirect(`app.html?md=${url}`);\n```\n\nthe url contains some chinese characters。\ni find same error in github, https://github.com/nodejitsu/node-http-proxy/issues/964, \nin  https://github.com/nodejs/node/commit/7bef1b790727430cb82bf8be80cfe058480de100#diff-286202fdbdd74ede6f5f5334b6176b5cR298,\nthe commit add a method called  _checkInvalidHeaderChar ,it will check the parameter.\nwhen i am using  res.redirect  , \n![image](https://cloud.githubusercontent.com/assets/7932380/15448034/3352422c-1f87-11e6-90f7-87bbaae80cef.png) ，then the error occurs and my program exit.\n\ni think setHeader should add  try catch in  https://github.com/expressjs/express/blob/master/lib/response.js#L1046  and\nhttps://github.com/expressjs/express/blob/master/lib/response.js#L718\n\nor using encodeURIComponent because i want to show title of the article in search bar.\n\n```\nres.redirect(`app.html?md=${encodeURIComponent(url)}`)\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3003/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3003/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3002",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3002/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3002/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3002/events",
    "html_url": "https://github.com/expressjs/express/issues/3002",
    "id": 155815314,
    "node_id": "MDU6SXNzdWUxNTU4MTUzMTQ=",
    "number": 3002,
    "title": "[PATCH] The `req.subdomains` always returns `[]` on Google Chrome",
    "user": {
      "login": "silvioprog",
      "id": 1456829,
      "node_id": "MDQ6VXNlcjE0NTY4Mjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1456829?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/silvioprog",
      "html_url": "https://github.com/silvioprog",
      "followers_url": "https://api.github.com/users/silvioprog/followers",
      "following_url": "https://api.github.com/users/silvioprog/following{/other_user}",
      "gists_url": "https://api.github.com/users/silvioprog/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/silvioprog/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/silvioprog/subscriptions",
      "organizations_url": "https://api.github.com/users/silvioprog/orgs",
      "repos_url": "https://api.github.com/users/silvioprog/repos",
      "events_url": "https://api.github.com/users/silvioprog/events{/privacy}",
      "received_events_url": "https://api.github.com/users/silvioprog/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2016-05-19T19:25:31Z",
    "updated_at": "2016-05-20T20:59:59Z",
    "closed_at": "2016-05-19T19:31:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello,\n\nSteps to reproduce the problem:\n\n**1. Create a small Express app a file `server.js`:**\n\n``` js\nvar express = require('express');\nvar app = express();\napp.get('/', function (req, res) {\n  res.send(req.subdomains);\n}).listen(8080);\n```\n\n**2. Run it:**\n\n```\nnode serverj.s\n```\n\n**3. Open the follwing URL on your Google Chrome:**\n\n```\nhttp://docs.localhost:8080/\n```\n\nIt will return:\n\n``` js\n[]\n```\n\n**Now, apply the attached patch and repeat the step 3, it will return:**\n\n``` js\nlocalhost,docs\n```\n\n_My environment:_\n\n```\nWindows 7 64 bits / Google Chrome v 50.0.2661.102 m\n```\n\nThank you!\n[0001-Fix-req.subdomains-always-returning.patch.txt](https://github.com/expressjs/express/files/273285/0001-Fix-req.subdomains-always-returning.patch.txt)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3002/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3002/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3001",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3001/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3001/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3001/events",
    "html_url": "https://github.com/expressjs/express/issues/3001",
    "id": 155581823,
    "node_id": "MDU6SXNzdWUxNTU1ODE4MjM=",
    "number": 3001,
    "title": "The route /:path(abc|xyz)* doesn't work.",
    "user": {
      "login": "marvinklein",
      "id": 3330666,
      "node_id": "MDQ6VXNlcjMzMzA2NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3330666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marvinklein",
      "html_url": "https://github.com/marvinklein",
      "followers_url": "https://api.github.com/users/marvinklein/followers",
      "following_url": "https://api.github.com/users/marvinklein/following{/other_user}",
      "gists_url": "https://api.github.com/users/marvinklein/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marvinklein/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marvinklein/subscriptions",
      "organizations_url": "https://api.github.com/users/marvinklein/orgs",
      "repos_url": "https://api.github.com/users/marvinklein/repos",
      "events_url": "https://api.github.com/users/marvinklein/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marvinklein/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2016-05-18T19:26:08Z",
    "updated_at": "2016-05-18T20:34:36Z",
    "closed_at": "2016-05-18T20:34:31Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "`/:path*` works as expected and matches zero or more paths, such as `/a/b/c`\n`/:path(abc|xyz)` works and matches `/abc` and `/xyz`\n\nbut combining the two expressions into `/:path(abc|xyz)*` doesn't work.\n\nI'm trying to match paths which consist of arbitrary combinations of `/abc` and `/xyz`, such as `/abc/abc/xyz/abc`. While the documentation has details on all of the route expression operators in isolation, there isn't any indication of how to combine them, or whether that's even possible. Is there a way to match the /abc/abc/xyz/abc route without just writing this as a regex?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3001/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3001/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3000",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3000/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3000/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3000/events",
    "html_url": "https://github.com/expressjs/express/issues/3000",
    "id": 155456662,
    "node_id": "MDU6SXNzdWUxNTU0NTY2NjI=",
    "number": 3000,
    "title": "app.param handler is called before error handler",
    "user": {
      "login": "razvanz",
      "id": 3844203,
      "node_id": "MDQ6VXNlcjM4NDQyMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3844203?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/razvanz",
      "html_url": "https://github.com/razvanz",
      "followers_url": "https://api.github.com/users/razvanz/followers",
      "following_url": "https://api.github.com/users/razvanz/following{/other_user}",
      "gists_url": "https://api.github.com/users/razvanz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/razvanz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/razvanz/subscriptions",
      "organizations_url": "https://api.github.com/users/razvanz/orgs",
      "repos_url": "https://api.github.com/users/razvanz/repos",
      "events_url": "https://api.github.com/users/razvanz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/razvanz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-05-18T09:35:28Z",
    "updated_at": "2016-05-26T07:05:23Z",
    "closed_at": "2016-05-26T03:53:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Not sure if it's an bug or not, but it seemed weird behavior.\n\n I noticed the problem when DB was down and an authentication middleware (defined with `app.use`) was returning an error. I would have expected that the next thing called would be the error handler middleware, but instead the `app.param` was called (which relied on some auth data) resulting in crash due to uncaught exception.\n\nHere's the code to reproduce:\n\n``` js\n'use strict';\n\nconst express = require('express');\nconst app = express();\n\napp.use((req, res, next) => {\n  console.log('Auth middleware');\n  setTimeout(() => {\n    return next(new Error('Auth went wrong'));\n  }, 500);\n});\n\napp.param('key', (req, res, next) => {\n  console.log('param handler');\n  // EG: accessing a req.user property crashes the server\n  return next();\n});\n\napp.use('/:key/', (req, res, next) => {\n  console.log('route middleware');\n  return next();\n});\n\napp.route('/:key/child')\n  .get((req, res, next) => {\n    console.log('child route handler');\n    return res.send('child success');\n  });\n\napp.use((err, req, res, next) => {\n  console.log('Error middleware');\n  console.log('ERROR %s', err);\n  return res.status(500).send(err.message);\n});\n\napp.listen(9000);\n```\n\nLog:\n\n```\n# Calling child route \n% curl \"http://localhost:9000/12/child\"\n\n# Server Log\nAuth middleware\nparam handler\nError middleware\nERROR Error: Auth went wrong\n```\n\nTo narrow it down, if `app.use('/:key/', ( ...` middleware is removed, the param handler is not being called any more.\n\nPS\n\n```\n% npm view express version\n4.13.4\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3000/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3000/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2999",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2999/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2999/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2999/events",
    "html_url": "https://github.com/expressjs/express/issues/2999",
    "id": 155355590,
    "node_id": "MDU6SXNzdWUxNTUzNTU1OTA=",
    "number": 2999,
    "title": "Get variable setted with middleware",
    "user": {
      "login": "CoericK",
      "id": 897586,
      "node_id": "MDQ6VXNlcjg5NzU4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/897586?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CoericK",
      "html_url": "https://github.com/CoericK",
      "followers_url": "https://api.github.com/users/CoericK/followers",
      "following_url": "https://api.github.com/users/CoericK/following{/other_user}",
      "gists_url": "https://api.github.com/users/CoericK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CoericK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CoericK/subscriptions",
      "organizations_url": "https://api.github.com/users/CoericK/orgs",
      "repos_url": "https://api.github.com/users/CoericK/repos",
      "events_url": "https://api.github.com/users/CoericK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CoericK/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-05-17T20:36:37Z",
    "updated_at": "2016-05-18T19:14:50Z",
    "closed_at": "2016-05-18T19:06:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Before in Express 3 we could define a middleware that allow us to save variable in the req:\n\n``` js\nfunction(req, res, next){\n     req.test = \"test\";\n    next();\n}\n```\n\nAnd then we could get it with :\n\n``` js\nfunction(req,res){\n   console.log(req.test) // test\n}\n```\n\nBut now in Express 4 I managed to store it in the request but i cant get the value, when i print the object req, i can see that its stored there but i cant access to it.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2999/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2999/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2998",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2998/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2998/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2998/events",
    "html_url": "https://github.com/expressjs/express/issues/2998",
    "id": 154974339,
    "node_id": "MDU6SXNzdWUxNTQ5NzQzMzk=",
    "number": 2998,
    "title": "node index.js  出错",
    "user": {
      "login": "tgy3300",
      "id": 11471847,
      "node_id": "MDQ6VXNlcjExNDcxODQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/11471847?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tgy3300",
      "html_url": "https://github.com/tgy3300",
      "followers_url": "https://api.github.com/users/tgy3300/followers",
      "following_url": "https://api.github.com/users/tgy3300/following{/other_user}",
      "gists_url": "https://api.github.com/users/tgy3300/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tgy3300/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tgy3300/subscriptions",
      "organizations_url": "https://api.github.com/users/tgy3300/orgs",
      "repos_url": "https://api.github.com/users/tgy3300/repos",
      "events_url": "https://api.github.com/users/tgy3300/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tgy3300/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-05-16T07:16:14Z",
    "updated_at": "2016-05-26T03:54:45Z",
    "closed_at": "2016-05-26T03:54:45Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "错误提示：\n\n```\nmodule.js:327\n    throw err;\n    ^\n\nError: Cannot find module 'express'\n    at Function.Module._resolveFilename (module.js:325:15)\n    at Function.Module._load (module.js:276:25)\n    at Module.require (module.js:353:17)\n    at require (internal/module.js:12:17)\n    at Object.<anonymous> (/mnt/hgfs/cuugu/websocket.cuugu.com/index.js:1:77)\n    at Module._compile (module.js:409:26)\n    at Object.Module._extensions..js (module.js:416:10)\n    at Module.load (module.js:343:32)\n    at Function.Module._load (module.js:300:12)\n    at Function.Module.runMain (module.js:441:10)\n```\n\n我直接用   express  命令，又是可以的\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2998/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2998/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2997",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2997/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2997/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2997/events",
    "html_url": "https://github.com/expressjs/express/issues/2997",
    "id": 154793795,
    "node_id": "MDU6SXNzdWUxNTQ3OTM3OTU=",
    "number": 2997,
    "title": "Possible memory leak in v4 on node v6",
    "user": {
      "login": "lykkin",
      "id": 1342804,
      "node_id": "MDQ6VXNlcjEzNDI4MDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1342804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lykkin",
      "html_url": "https://github.com/lykkin",
      "followers_url": "https://api.github.com/users/lykkin/followers",
      "following_url": "https://api.github.com/users/lykkin/following{/other_user}",
      "gists_url": "https://api.github.com/users/lykkin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lykkin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lykkin/subscriptions",
      "organizations_url": "https://api.github.com/users/lykkin/orgs",
      "repos_url": "https://api.github.com/users/lykkin/repos",
      "events_url": "https://api.github.com/users/lykkin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lykkin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578718,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTg=",
        "url": "https://api.github.com/repos/expressjs/express/labels/investigate",
        "name": "investigate",
        "color": "bfdadc",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 20,
    "created_at": "2016-05-13T20:28:06Z",
    "updated_at": "2016-05-23T21:06:03Z",
    "closed_at": "2016-05-23T21:06:03Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Using the example code below on express v4.x and node v6.x causes the process to OOM when put under load.  The server was put under ~30 requests/sec.\n\n```\nvar express = require('express');\nvar app = express();\napp.get('/', function (req, res) { \n  throw new Error('hello')\n});\napp.listen(3000, function () {console.log('done')});\n```\n\n```\n<--- Last few GCs --->\n\n  120821 ms: Mark-sweep 1206.8 (1435.0) -> 1197.9 (1435.0) MB, 142.4 / 0 ms [allocation failure] [GC in old space requested].\n  120990 ms: Mark-sweep 1197.9 (1435.0) -> 1197.9 (1435.0) MB, 169.1 / 0 ms [allocation failure] [GC in old space requested].\n  121157 ms: Mark-sweep 1197.9 (1435.0) -> 1197.9 (1435.0) MB, 166.3 / 0 ms [last resort gc].\n  121326 ms: Mark-sweep 1197.9 (1435.0) -> 1197.8 (1435.0) MB, 168.9 / 0 ms [last resort gc].\n\n\n<--- JS stacktrace --->\n\n==== JS stack trace =========================================\n\nSecurity context: 0x18640e7c9fa9 <JS Object>\n    1: isToplevel(aka CallSiteIsToplevel) [native messages.js:~369] [pc=0x3553d6016245] (this=0x27b340215d89 <a CallSite with map 0x1f2a45e2b2f9>)\n    2: toString(aka CallSiteToString) [native messages.js:~403] [pc=0x3553d601cf09] (this=0x27b340215d89 <a CallSite with map 0x1f2a45e2b2f9>)\n    3: FormatStackTrace [native messages.js:561] [pc=0x3553d5f6ca41] (this=0x18640e7e81c1 <JS Global Object...\n\nFATAAbort trap: 6\n```\n\nThis doesn't occur in node v4.x.\n\nI wrote something similar using the http module, which doesn't exhibit this behavior:\n\n```\nvar http = require('http')\n\nprocess.on('uncaughtException', function (e) {console.log(e)})\n\nvar server = http.createServer(function (req, res) {\n  throw new Error('test')\n})\n\nserver.listen(3000, function () {\n  console.log('listening on port 3000')\n})\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2997/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2997/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2996",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2996/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2996/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2996/events",
    "html_url": "https://github.com/expressjs/express/pull/2996",
    "id": 154687540,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Njk5Nzg5MDU=",
    "number": 2996,
    "title": "Add Travis CI and AppVeyor coverage for Node 5.11 and Node 6.1",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2016-05-13T11:06:10Z",
    "updated_at": "2016-05-14T09:02:58Z",
    "closed_at": "2016-05-14T09:02:58Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2996",
      "html_url": "https://github.com/expressjs/express/pull/2996",
      "diff_url": "https://github.com/expressjs/express/pull/2996.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2996.patch",
      "merged_at": null
    },
    "body": "Let me know if there are any issues.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2996/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2996/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2995",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2995/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2995/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2995/events",
    "html_url": "https://github.com/expressjs/express/pull/2995",
    "id": 154584002,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Njk5MDg3NDc=",
    "number": 2995,
    "title": "Change \"strongloop\" to \"expressjs\" in repo URLs",
    "user": {
      "login": "crandmck",
      "id": 2925364,
      "node_id": "MDQ6VXNlcjI5MjUzNjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2925364?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/crandmck",
      "html_url": "https://github.com/crandmck",
      "followers_url": "https://api.github.com/users/crandmck/followers",
      "following_url": "https://api.github.com/users/crandmck/following{/other_user}",
      "gists_url": "https://api.github.com/users/crandmck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/crandmck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/crandmck/subscriptions",
      "organizations_url": "https://api.github.com/users/crandmck/orgs",
      "repos_url": "https://api.github.com/users/crandmck/repos",
      "events_url": "https://api.github.com/users/crandmck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/crandmck/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-05-12T21:19:19Z",
    "updated_at": "2016-05-13T00:24:21Z",
    "closed_at": "2016-05-13T00:24:21Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2995",
      "html_url": "https://github.com/expressjs/express/pull/2995",
      "diff_url": "https://github.com/expressjs/express/pull/2995.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2995.patch",
      "merged_at": null
    },
    "body": "And minor rewording...Just clean-up.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2995/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2995/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2994",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2994/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2994/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2994/events",
    "html_url": "https://github.com/expressjs/express/issues/2994",
    "id": 154416130,
    "node_id": "MDU6SXNzdWUxNTQ0MTYxMzA=",
    "number": 2994,
    "title": "Cannot read property 'encrypted' of undefined",
    "user": {
      "login": "cressie176",
      "id": 229672,
      "node_id": "MDQ6VXNlcjIyOTY3Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/229672?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cressie176",
      "html_url": "https://github.com/cressie176",
      "followers_url": "https://api.github.com/users/cressie176/followers",
      "following_url": "https://api.github.com/users/cressie176/following{/other_user}",
      "gists_url": "https://api.github.com/users/cressie176/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cressie176/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cressie176/subscriptions",
      "organizations_url": "https://api.github.com/users/cressie176/orgs",
      "repos_url": "https://api.github.com/users/cressie176/repos",
      "events_url": "https://api.github.com/users/cressie176/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cressie176/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2016-05-12T07:35:48Z",
    "updated_at": "2016-05-15T14:23:30Z",
    "closed_at": "2016-05-13T09:12:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Simply requiring express then attempting to safe stringify process causes an exception.\n\n``` js\nvar stringify = require('json-stringify-safe')\nvar express = require('express')\nstringify(process)\n```\n\nResult\n\n```\nTypeError: Cannot read property 'encrypted' of undefined\n    at IncomingMessage.protocol (/Users/steve/Development/guidesmiths/express-bug/node_modules/express/lib/request.js:288:30)\n    at Object.stringify (native)\n    at stringify (/Users/steve/Development/guidesmiths/express-bug/node_modules/json-stringify-safe/stringify.js:5:15)\n    at Object.<anonymous> (/Users/steve/Development/guidesmiths/express-bug/index.js:3:1)\n    at Module._compile (module.js:409:26)\n    at Object.Module._extensions..js (module.js:416:10)\n    at Module.load (module.js:343:32)\n    at Function.Module._load (module.js:300:12)\n    at Function.Module.runMain (module.js:441:10)\n    at startup (node.js:139:18)\n```\n\n```\n\"express\": \"^4.13.4\",\n\"json-stringify-safe\": \"^5.0.1\"\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2994/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2994/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2993",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2993/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2993/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2993/events",
    "html_url": "https://github.com/expressjs/express/pull/2993",
    "id": 154069519,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Njk1NTA3MjI=",
    "number": 2993,
    "title": "BugFixed: prevent toLowerCase crash the App.",
    "user": {
      "login": "alvaropaco",
      "id": 3423410,
      "node_id": "MDQ6VXNlcjM0MjM0MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3423410?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alvaropaco",
      "html_url": "https://github.com/alvaropaco",
      "followers_url": "https://api.github.com/users/alvaropaco/followers",
      "following_url": "https://api.github.com/users/alvaropaco/following{/other_user}",
      "gists_url": "https://api.github.com/users/alvaropaco/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alvaropaco/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alvaropaco/subscriptions",
      "organizations_url": "https://api.github.com/users/alvaropaco/orgs",
      "repos_url": "https://api.github.com/users/alvaropaco/repos",
      "events_url": "https://api.github.com/users/alvaropaco/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alvaropaco/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/14",
      "html_url": "https://github.com/expressjs/express/milestone/14",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/14/labels",
      "id": 1597498,
      "node_id": "MDk6TWlsZXN0b25lMTU5NzQ5OA==",
      "number": 14,
      "title": "4.14",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 6,
      "state": "closed",
      "created_at": "2016-02-22T16:27:45Z",
      "updated_at": "2016-06-16T15:07:35Z",
      "due_on": "2016-06-16T07:00:00Z",
      "closed_at": "2016-06-16T15:07:35Z"
    },
    "comments": 4,
    "created_at": "2016-05-10T18:02:51Z",
    "updated_at": "2016-06-16T15:06:34Z",
    "closed_at": "2016-06-16T15:06:34Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2993",
      "html_url": "https://github.com/expressjs/express/pull/2993",
      "diff_url": "https://github.com/expressjs/express/pull/2993.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2993.patch",
      "merged_at": null
    },
    "body": "I caught this bug in development. When a user accidentaly ran a non string parameter to get on request, the App crashes.\nI fixed this.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2993/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2993/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2992",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2992/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2992/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2992/events",
    "html_url": "https://github.com/expressjs/express/pull/2992",
    "id": 154051872,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Njk1Mzc4NzY=",
    "number": 2992,
    "title": "tests: use supertest to check response header values",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578714,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/tests",
        "name": "tests",
        "color": "944008",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-05-10T16:37:08Z",
    "updated_at": "2016-05-11T15:26:46Z",
    "closed_at": "2016-05-11T15:26:46Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2992",
      "html_url": "https://github.com/expressjs/express/pull/2992",
      "diff_url": "https://github.com/expressjs/express/pull/2992.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2992.patch",
      "merged_at": null
    },
    "body": "This is an alternative pull request for #2983 converting the usages to use `supertest` rather than continuing to use `supertest`. This helps align with goals like removing the `should` module from tests eventually, since there are no less `should` usages (plus, `supertest` provides these features).\n\nThe cause for these two pull requests is that there is discussion going on currently to change the prototype of the `headers` object from `Object` to `null`, which would remove global extension properties like `.should`.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2992/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2992/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2991",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2991/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2991/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2991/events",
    "html_url": "https://github.com/expressjs/express/issues/2991",
    "id": 153993610,
    "node_id": "MDU6SXNzdWUxNTM5OTM2MTA=",
    "number": 2991,
    "title": "Middlewares in different Routers",
    "user": {
      "login": "XEuRoMAN",
      "id": 3613663,
      "node_id": "MDQ6VXNlcjM2MTM2NjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3613663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/XEuRoMAN",
      "html_url": "https://github.com/XEuRoMAN",
      "followers_url": "https://api.github.com/users/XEuRoMAN/followers",
      "following_url": "https://api.github.com/users/XEuRoMAN/following{/other_user}",
      "gists_url": "https://api.github.com/users/XEuRoMAN/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/XEuRoMAN/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/XEuRoMAN/subscriptions",
      "organizations_url": "https://api.github.com/users/XEuRoMAN/orgs",
      "repos_url": "https://api.github.com/users/XEuRoMAN/repos",
      "events_url": "https://api.github.com/users/XEuRoMAN/events{/privacy}",
      "received_events_url": "https://api.github.com/users/XEuRoMAN/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-05-10T12:25:25Z",
    "updated_at": "2016-05-10T12:47:57Z",
    "closed_at": "2016-05-10T12:47:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi guys,\n\nI'm facing a problem which may be a serious bug by this framework.\n\nQuoting express guide:\n\n> ## Router-level middleware\n> \n> Router-level middleware works in the same way as application-level middleware, **except it is bound to an instance of express.Router()**.\n\nSo, as I understand, middleware mounted to the one router **must not** be inherited by all following routers. Unlike app-level middleware.\n\nBut let's see at my code:\n\n``` js\nvar express = require('express');\nvar app = express();\n\n(function () {\n    var express = require('express');\n    var router = express.Router();\n\n    router.use(function (req, res, next) {\n        console.log('Time:', Date.now());\n\n        next();\n    });\n\n    router.get('/test1', function (req, res, next) {\n        res.json({test: 1});\n    });\n\n    app.use('/', router);\n})();\n\n\n(function () {\n    var express = require('express');\n    var router = express.Router();\n\n    router.use(function (req, res, next) {\n        console.log('Time 2:', Date.now());\n\n        next();\n    });\n\n    router.get('/test2', function (req, res, next) {\n        res.json({test: 2});\n    });\n\n    app.use('/', router);\n})();\n\nmodule.exports = app;\n```\n\nWhen I'm opening `/test1` console.log says:\n\n> Time: 1462882901201\n\nthat's what we expecting here but `/test2` says:\n\n> Time: 1462882906827\n> Time 2: 1462882906827\n\nWhy that happening? Maybe I'm doing something wrong?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2991/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2991/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2990",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2990/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2990/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2990/events",
    "html_url": "https://github.com/expressjs/express/issues/2990",
    "id": 153865495,
    "node_id": "MDU6SXNzdWUxNTM4NjU0OTU=",
    "number": 2990,
    "title": "api: Changing arguments based on arity is unclear",
    "user": {
      "login": "kevinburkeshyp",
      "id": 10735057,
      "node_id": "MDQ6VXNlcjEwNzM1MDU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10735057?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinburkeshyp",
      "html_url": "https://github.com/kevinburkeshyp",
      "followers_url": "https://api.github.com/users/kevinburkeshyp/followers",
      "following_url": "https://api.github.com/users/kevinburkeshyp/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinburkeshyp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinburkeshyp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinburkeshyp/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinburkeshyp/orgs",
      "repos_url": "https://api.github.com/users/kevinburkeshyp/repos",
      "events_url": "https://api.github.com/users/kevinburkeshyp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinburkeshyp/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2016-05-09T20:44:41Z",
    "updated_at": "2016-05-09T21:03:26Z",
    "closed_at": "2016-05-09T20:50:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Calling `app.use` with a function that takes 4 arguments makes Express treat the first argument as a `err` parameter:\n\n``` javascript\n    app.use(function (err, req, res, next) {\n      Logging.error(err, 'Response handler threw exception');\n    });\n```\n\nCalling it with 3 arguments means the first argument is now a `req` and not an `err`: \n\n``` javascript\n    app.use(function (err, req, res, next) {\n      Logging.error(err, 'Response handler threw exception');\n    });\n```\n\nThis is misleading - at least it was to me. I can imagine a scenario where someone deletes unused variables from the end of a router (\"oh, next/res is unused here, we can delete it\"), and accidentally changes the meaning of the other function parameters.\n\nThe 4-argument form is also undocumented in `app.use`.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2990/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2990/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2989",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2989/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2989/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2989/events",
    "html_url": "https://github.com/expressjs/express/issues/2989",
    "id": 153820601,
    "node_id": "MDU6SXNzdWUxNTM4MjA2MDE=",
    "number": 2989,
    "title": "Expose lookup function to template engines?",
    "user": {
      "login": "agalazis",
      "id": 2021709,
      "node_id": "MDQ6VXNlcjIwMjE3MDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2021709?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/agalazis",
      "html_url": "https://github.com/agalazis",
      "followers_url": "https://api.github.com/users/agalazis/followers",
      "following_url": "https://api.github.com/users/agalazis/following{/other_user}",
      "gists_url": "https://api.github.com/users/agalazis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/agalazis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agalazis/subscriptions",
      "organizations_url": "https://api.github.com/users/agalazis/orgs",
      "repos_url": "https://api.github.com/users/agalazis/repos",
      "events_url": "https://api.github.com/users/agalazis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/agalazis/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-05-09T16:51:04Z",
    "updated_at": "2016-05-21T23:22:58Z",
    "closed_at": "2016-05-09T17:52:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello,\nAs I realised(from js docs and implementation )  you intend to keep lookup function private. I do believe that it could be useful if they get exposed to template engines, so that they can have the same behaviour with multiple view folders rather than reinventing the wheel in each of them.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2989/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2989/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2988",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2988/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2988/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2988/events",
    "html_url": "https://github.com/expressjs/express/issues/2988",
    "id": 153786201,
    "node_id": "MDU6SXNzdWUxNTM3ODYyMDE=",
    "number": 2988,
    "title": "2 request within 1",
    "user": {
      "login": "komarevtsevdn",
      "id": 15971328,
      "node_id": "MDQ6VXNlcjE1OTcxMzI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/15971328?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/komarevtsevdn",
      "html_url": "https://github.com/komarevtsevdn",
      "followers_url": "https://api.github.com/users/komarevtsevdn/followers",
      "following_url": "https://api.github.com/users/komarevtsevdn/following{/other_user}",
      "gists_url": "https://api.github.com/users/komarevtsevdn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/komarevtsevdn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/komarevtsevdn/subscriptions",
      "organizations_url": "https://api.github.com/users/komarevtsevdn/orgs",
      "repos_url": "https://api.github.com/users/komarevtsevdn/repos",
      "events_url": "https://api.github.com/users/komarevtsevdn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/komarevtsevdn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-05-09T14:14:42Z",
    "updated_at": "2016-05-09T17:29:58Z",
    "closed_at": "2016-05-09T14:20:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am using express 4. for example we have without `res.send`:\n\n``` js\napp.get(\"/\", function(req, res) {\n    console.log('test');\n})\n```\n\nif i make request to / i see in console test and after ~2 min yet one test.\nhow i can to solve this problem?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2988/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2988/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2987",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2987/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2987/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2987/events",
    "html_url": "https://github.com/expressjs/express/issues/2987",
    "id": 153754251,
    "node_id": "MDU6SXNzdWUxNTM3NTQyNTE=",
    "number": 2987,
    "title": "Dollar sign not recognized in URL",
    "user": {
      "login": "jukkasi",
      "id": 8554087,
      "node_id": "MDQ6VXNlcjg1NTQwODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8554087?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jukkasi",
      "html_url": "https://github.com/jukkasi",
      "followers_url": "https://api.github.com/users/jukkasi/followers",
      "following_url": "https://api.github.com/users/jukkasi/following{/other_user}",
      "gists_url": "https://api.github.com/users/jukkasi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jukkasi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jukkasi/subscriptions",
      "organizations_url": "https://api.github.com/users/jukkasi/orgs",
      "repos_url": "https://api.github.com/users/jukkasi/repos",
      "events_url": "https://api.github.com/users/jukkasi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jukkasi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "hacksparrow",
        "id": 950112,
        "node_id": "MDQ6VXNlcjk1MDExMg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/950112?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hacksparrow",
        "html_url": "https://github.com/hacksparrow",
        "followers_url": "https://api.github.com/users/hacksparrow/followers",
        "following_url": "https://api.github.com/users/hacksparrow/following{/other_user}",
        "gists_url": "https://api.github.com/users/hacksparrow/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/hacksparrow/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/hacksparrow/subscriptions",
        "organizations_url": "https://api.github.com/users/hacksparrow/orgs",
        "repos_url": "https://api.github.com/users/hacksparrow/repos",
        "events_url": "https://api.github.com/users/hacksparrow/events{/privacy}",
        "received_events_url": "https://api.github.com/users/hacksparrow/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2016-05-09T11:15:30Z",
    "updated_at": "2017-02-26T08:33:21Z",
    "closed_at": "2017-02-26T08:33:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Using ExpressJS 4 I'm not able to get a dollar sign to work in URL e.g.\n\n``` js\napp.post('/foo/$bar', handler);\n```\n\n```\nCannot POST /foo/$bar\n```\n\nAccording to RFC dollar sign should be safe character, is it something I'm missing here?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2987/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2987/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2986",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2986/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2986/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2986/events",
    "html_url": "https://github.com/expressjs/express/pull/2986",
    "id": 153190682,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Njg5Nzk1Mzk=",
    "number": 2986,
    "title": "tests: cover signed cookie without secret",
    "user": {
      "login": "LinusU",
      "id": 189580,
      "node_id": "MDQ6VXNlcjE4OTU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/189580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LinusU",
      "html_url": "https://github.com/LinusU",
      "followers_url": "https://api.github.com/users/LinusU/followers",
      "following_url": "https://api.github.com/users/LinusU/following{/other_user}",
      "gists_url": "https://api.github.com/users/LinusU/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LinusU/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LinusU/subscriptions",
      "organizations_url": "https://api.github.com/users/LinusU/orgs",
      "repos_url": "https://api.github.com/users/LinusU/repos",
      "events_url": "https://api.github.com/users/LinusU/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LinusU/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 133578714,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/tests",
        "name": "tests",
        "color": "944008",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-05-05T08:35:10Z",
    "updated_at": "2016-05-10T15:58:30Z",
    "closed_at": "2016-05-10T15:58:02Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2986",
      "html_url": "https://github.com/expressjs/express/pull/2986",
      "diff_url": "https://github.com/expressjs/express/pull/2986.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2986.patch",
      "merged_at": null
    },
    "body": "Adds coverage for the line discussed in #2939 \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2986/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2986/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2985",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2985/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2985/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2985/events",
    "html_url": "https://github.com/expressjs/express/issues/2985",
    "id": 152984885,
    "node_id": "MDU6SXNzdWUxNTI5ODQ4ODU=",
    "number": 2985,
    "title": "Using next() in regex based GET handler calls POST handler with same endpoint",
    "user": {
      "login": "psych0der",
      "id": 928501,
      "node_id": "MDQ6VXNlcjkyODUwMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/928501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/psych0der",
      "html_url": "https://github.com/psych0der",
      "followers_url": "https://api.github.com/users/psych0der/followers",
      "following_url": "https://api.github.com/users/psych0der/following{/other_user}",
      "gists_url": "https://api.github.com/users/psych0der/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/psych0der/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/psych0der/subscriptions",
      "organizations_url": "https://api.github.com/users/psych0der/orgs",
      "repos_url": "https://api.github.com/users/psych0der/repos",
      "events_url": "https://api.github.com/users/psych0der/events{/privacy}",
      "received_events_url": "https://api.github.com/users/psych0der/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2016-05-04T11:01:33Z",
    "updated_at": "2016-05-04T14:21:44Z",
    "closed_at": "2016-05-04T12:27:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Example:\n\nMiddleware for some get requests\n\n``` js\napp.get('/init/*', function (req, res, next) {\n // do something\n console.log('GET middleware called');\n next();\n})\n```\n\nwhich is followed by:\n\n``` js\napp.post('/init/*', function (req, res, next) {\n // do something else\n console.log('POST middleware called');\n next();\n})\n```\n\nand\n\n``` js\napp.get('/init/', function (req, res) {\n console.log('GET handler called');\n return res.json({'status':'success'})\n})\n```\n\nWhen the user hits the server using GET  at `/` , both the middlewares get called.\n\nIdeally calling next() from GET handlers should only call other GET handler in the chain, rather than any other handler with the same mounting point.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2985/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2985/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2984",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2984/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2984/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2984/events",
    "html_url": "https://github.com/expressjs/express/issues/2984",
    "id": 152929016,
    "node_id": "MDU6SXNzdWUxNTI5MjkwMTY=",
    "number": 2984,
    "title": "How does express work?",
    "user": {
      "login": "ChrisVent",
      "id": 14955224,
      "node_id": "MDQ6VXNlcjE0OTU1MjI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/14955224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ChrisVent",
      "html_url": "https://github.com/ChrisVent",
      "followers_url": "https://api.github.com/users/ChrisVent/followers",
      "following_url": "https://api.github.com/users/ChrisVent/following{/other_user}",
      "gists_url": "https://api.github.com/users/ChrisVent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ChrisVent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ChrisVent/subscriptions",
      "organizations_url": "https://api.github.com/users/ChrisVent/orgs",
      "repos_url": "https://api.github.com/users/ChrisVent/repos",
      "events_url": "https://api.github.com/users/ChrisVent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ChrisVent/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-05-04T04:48:08Z",
    "updated_at": "2016-05-04T04:58:34Z",
    "closed_at": "2016-05-04T04:58:34Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I began to see the source code of 'express ' to see how everything works , but I emerged a concern . I know the objects ' request' and ' response' are altered (http.ClientResponse and httpIncomingMessage prototypes ).\n\nMy question is : at what point the parameters (req and res) of http.createServer( ) become altered objects. This mean (lib/request.js and response.js) new methods.\n\napologize for the inconvenience and thank you very much .\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2984/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2984/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2983",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2983/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2983/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2983/events",
    "html_url": "https://github.com/expressjs/express/pull/2983",
    "id": 152464329,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Njg1MTI1MzE=",
    "number": 2983,
    "title": "test: update `should` usage",
    "user": {
      "login": "mscdex",
      "id": 54666,
      "node_id": "MDQ6VXNlcjU0NjY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/54666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mscdex",
      "html_url": "https://github.com/mscdex",
      "followers_url": "https://api.github.com/users/mscdex/followers",
      "following_url": "https://api.github.com/users/mscdex/following{/other_user}",
      "gists_url": "https://api.github.com/users/mscdex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mscdex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mscdex/subscriptions",
      "organizations_url": "https://api.github.com/users/mscdex/orgs",
      "repos_url": "https://api.github.com/users/mscdex/repos",
      "events_url": "https://api.github.com/users/mscdex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mscdex/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578714,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/tests",
        "name": "tests",
        "color": "944008",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-05-02T00:13:23Z",
    "updated_at": "2016-05-11T15:27:38Z",
    "closed_at": "2016-05-11T15:26:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2983",
      "html_url": "https://github.com/expressjs/express/pull/2983",
      "diff_url": "https://github.com/expressjs/express/pull/2983.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2983.patch",
      "merged_at": null
    },
    "body": "These changes are in anticipation of upcoming changes in node v7.0.0.\nSee: https://github.com/nodejs/node/pull/6102\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2983/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2983/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2982",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2982/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2982/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2982/events",
    "html_url": "https://github.com/expressjs/express/issues/2982",
    "id": 152005627,
    "node_id": "MDU6SXNzdWUxNTIwMDU2Mjc=",
    "number": 2982,
    "title": "Rendering engine without view files",
    "user": {
      "login": "davidmerfield",
      "id": 747928,
      "node_id": "MDQ6VXNlcjc0NzkyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/747928?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidmerfield",
      "html_url": "https://github.com/davidmerfield",
      "followers_url": "https://api.github.com/users/davidmerfield/followers",
      "following_url": "https://api.github.com/users/davidmerfield/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidmerfield/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidmerfield/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidmerfield/subscriptions",
      "organizations_url": "https://api.github.com/users/davidmerfield/orgs",
      "repos_url": "https://api.github.com/users/davidmerfield/repos",
      "events_url": "https://api.github.com/users/davidmerfield/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidmerfield/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 163600,
        "node_id": "MDU6TGFiZWwxNjM2MDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 14,
    "created_at": "2016-04-30T03:52:39Z",
    "updated_at": "2016-09-08T04:53:51Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello! I want to write an express rendering engine which uses views retrieved from a database, not the file system. I've checked this repo's issue history and done a lot of googling but I've found nothing...\n\nIt seems express _requires_ a view file to exist on disk before passing the req/res to a rendering engine. Is there a way to prevent this behaviour?\n\nIdeally, when I invoke `res.render(name)`my rendering engine is called with `(name, options, callback)` without `/[name].html` necessarily existing on disk.\n\nI could overwrite express' `res.render` with my own renderer. However in order to handle errors properly it seems I'd have to pass in `next` each time I called `res.render`. That seems repetitive.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2982/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2982/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2981",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2981/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2981/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2981/events",
    "html_url": "https://github.com/expressjs/express/pull/2981",
    "id": 151942397,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Njg0MTU4MjI=",
    "number": 2981,
    "title": "updated MIT license",
    "user": {
      "login": "grp06",
      "id": 1573959,
      "node_id": "MDQ6VXNlcjE1NzM5NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1573959?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grp06",
      "html_url": "https://github.com/grp06",
      "followers_url": "https://api.github.com/users/grp06/followers",
      "following_url": "https://api.github.com/users/grp06/following{/other_user}",
      "gists_url": "https://api.github.com/users/grp06/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grp06/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grp06/subscriptions",
      "organizations_url": "https://api.github.com/users/grp06/orgs",
      "repos_url": "https://api.github.com/users/grp06/repos",
      "events_url": "https://api.github.com/users/grp06/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grp06/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-04-29T18:43:20Z",
    "updated_at": "2016-05-10T16:38:28Z",
    "closed_at": "2016-05-10T16:38:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2981",
      "html_url": "https://github.com/expressjs/express/pull/2981",
      "diff_url": "https://github.com/expressjs/express/pull/2981.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2981.patch",
      "merged_at": null
    },
    "body": "Updated MIT license wording\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2981/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2981/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2980",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2980/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2980/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2980/events",
    "html_url": "https://github.com/expressjs/express/issues/2980",
    "id": 151492594,
    "node_id": "MDU6SXNzdWUxNTE0OTI1OTQ=",
    "number": 2980,
    "title": "Setting cookie expiry with moment().toDate()",
    "user": {
      "login": "silverlight513",
      "id": 4225358,
      "node_id": "MDQ6VXNlcjQyMjUzNTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4225358?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/silverlight513",
      "html_url": "https://github.com/silverlight513",
      "followers_url": "https://api.github.com/users/silverlight513/followers",
      "following_url": "https://api.github.com/users/silverlight513/following{/other_user}",
      "gists_url": "https://api.github.com/users/silverlight513/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/silverlight513/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/silverlight513/subscriptions",
      "organizations_url": "https://api.github.com/users/silverlight513/orgs",
      "repos_url": "https://api.github.com/users/silverlight513/repos",
      "events_url": "https://api.github.com/users/silverlight513/events{/privacy}",
      "received_events_url": "https://api.github.com/users/silverlight513/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-04-27T21:13:19Z",
    "updated_at": "2016-05-03T14:47:51Z",
    "closed_at": "2016-05-03T14:47:51Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I recently tried setting a cookie with an expiry of a particular date using the moment().toDate() function. The Express docs state that the value for the expires option has to be a date which moment returns, sounds good but the cookies expiry date just wasn't being set properly when I checked in the browser.\n\n```\nvar cookieDate = moment().add(6, 'months').toDate();\nres.cookie('foo', 'bar', { expires: cookieDate });\n```\n\nAfter some messing about I found out that I had to wrap the toDate object in a new Date like below to get it to work.\n\n```\nvar cookieDate = new Date(moment().add(6, 'months').toDate());\nres.cookie('foo', 'bar', { expires: cookieDate });\n```\n\nIs there a reason why the date object returned by moment isn't valid?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2980/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2980/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2979",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2979/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2979/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2979/events",
    "html_url": "https://github.com/expressjs/express/issues/2979",
    "id": 151343865,
    "node_id": "MDU6SXNzdWUxNTEzNDM4NjU=",
    "number": 2979,
    "title": "post method callback invoked twice on piping stream",
    "user": {
      "login": "petrbazout",
      "id": 11569908,
      "node_id": "MDQ6VXNlcjExNTY5OTA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11569908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petrbazout",
      "html_url": "https://github.com/petrbazout",
      "followers_url": "https://api.github.com/users/petrbazout/followers",
      "following_url": "https://api.github.com/users/petrbazout/following{/other_user}",
      "gists_url": "https://api.github.com/users/petrbazout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petrbazout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petrbazout/subscriptions",
      "organizations_url": "https://api.github.com/users/petrbazout/orgs",
      "repos_url": "https://api.github.com/users/petrbazout/repos",
      "events_url": "https://api.github.com/users/petrbazout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petrbazout/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-04-27T09:45:48Z",
    "updated_at": "2016-04-28T08:29:03Z",
    "closed_at": "2016-04-27T10:04:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When piping stream the `post`(or `get` for that matter) method callback is invoked twice. It's not a problem in this code snippet but is if you have additional logic in the callback. If I use `res.sendFile(path)` or `res.download(path)` it's called twice too. Is there anything wrong with the code or is there any other way to send PDF file and have the callback invoked only once?\n\nI have node version 4.2.1 and express version 4.13.4.\n\n``` javascript\nvar express = require('express');\nvar fs = require('fs');\nvar path = require('path');\nvar app = express();\n\napp.post('/pdf/download', function (req, res) {\n\n  var stream = fs.createReadStream(path.join(__dirname, 'test-pdf.pdf'));\n  var filename = 'test-pdf.pdf';\n  res.setHeader('Content-disposition', 'attachment; filename=\"' + filename + '\"');\n  res.setHeader('Content-type', 'application/pdf');\n\n  stream.pipe(res);\n});\n\napp.listen(3000, function () {\n  console.log('App listening on port 3000!');\n});\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2979/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2979/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2978",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2978/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2978/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2978/events",
    "html_url": "https://github.com/expressjs/express/issues/2978",
    "id": 151114821,
    "node_id": "MDU6SXNzdWUxNTExMTQ4MjE=",
    "number": 2978,
    "title": "Route path array signature isn't documented",
    "user": {
      "login": "shakvaal",
      "id": 4275080,
      "node_id": "MDQ6VXNlcjQyNzUwODA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4275080?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shakvaal",
      "html_url": "https://github.com/shakvaal",
      "followers_url": "https://api.github.com/users/shakvaal/followers",
      "following_url": "https://api.github.com/users/shakvaal/following{/other_user}",
      "gists_url": "https://api.github.com/users/shakvaal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shakvaal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shakvaal/subscriptions",
      "organizations_url": "https://api.github.com/users/shakvaal/orgs",
      "repos_url": "https://api.github.com/users/shakvaal/repos",
      "events_url": "https://api.github.com/users/shakvaal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shakvaal/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-04-26T11:59:32Z",
    "updated_at": "2016-04-27T20:53:33Z",
    "closed_at": "2016-04-27T20:36:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "`app.METHOD(path_array, callback [, callback ...])` signature is _extremely_ convenient and it doesn't cause deprecated messages when used, so why isn't it documented?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2978/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2978/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2977",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2977/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2977/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2977/events",
    "html_url": "https://github.com/expressjs/express/pull/2977",
    "id": 150407035,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Njc1MzM3MDc=",
    "number": 2977,
    "title": "res.send(new String(\"test\")) sends JSON",
    "user": {
      "login": "DracoBlue",
      "id": 35926,
      "node_id": "MDQ6VXNlcjM1OTI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/35926?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DracoBlue",
      "html_url": "https://github.com/DracoBlue",
      "followers_url": "https://api.github.com/users/DracoBlue/followers",
      "following_url": "https://api.github.com/users/DracoBlue/following{/other_user}",
      "gists_url": "https://api.github.com/users/DracoBlue/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DracoBlue/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DracoBlue/subscriptions",
      "organizations_url": "https://api.github.com/users/DracoBlue/orgs",
      "repos_url": "https://api.github.com/users/DracoBlue/repos",
      "events_url": "https://api.github.com/users/DracoBlue/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DracoBlue/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-04-22T15:54:08Z",
    "updated_at": "2016-04-22T17:35:03Z",
    "closed_at": "2016-04-22T15:56:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2977",
      "html_url": "https://github.com/expressjs/express/pull/2977",
      "diff_url": "https://github.com/expressjs/express/pull/2977.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2977.patch",
      "merged_at": null
    },
    "body": "If you do `res.send(new String(\"test\"))` the expected behaviour is: `test`, but you get `\"test\"`, since typeof String is \"object\".\n\nI am working on a PR to fix this,\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2977/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2977/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2976",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2976/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2976/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2976/events",
    "html_url": "https://github.com/expressjs/express/issues/2976",
    "id": 150164646,
    "node_id": "MDU6SXNzdWUxNTAxNjQ2NDY=",
    "number": 2976,
    "title": "404 custom page from middleware",
    "user": {
      "login": "chesstrian",
      "id": 3923412,
      "node_id": "MDQ6VXNlcjM5MjM0MTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3923412?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chesstrian",
      "html_url": "https://github.com/chesstrian",
      "followers_url": "https://api.github.com/users/chesstrian/followers",
      "following_url": "https://api.github.com/users/chesstrian/following{/other_user}",
      "gists_url": "https://api.github.com/users/chesstrian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chesstrian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chesstrian/subscriptions",
      "organizations_url": "https://api.github.com/users/chesstrian/orgs",
      "repos_url": "https://api.github.com/users/chesstrian/repos",
      "events_url": "https://api.github.com/users/chesstrian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chesstrian/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-04-21T19:08:55Z",
    "updated_at": "2016-04-21T19:20:40Z",
    "closed_at": "2016-04-21T19:13:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi everybody,\n\nI'd like to show my custom 404 page when a condition does not match within a middleware, by redirecting to the 404 middleware. How is this possible?\n\nThanks in advance.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2976/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2976/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2975",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2975/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2975/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2975/events",
    "html_url": "https://github.com/expressjs/express/issues/2975",
    "id": 149693577,
    "node_id": "MDU6SXNzdWUxNDk2OTM1Nzc=",
    "number": 2975,
    "title": "not used multiple param",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-04-20T08:10:19Z",
    "updated_at": "2016-04-27T20:38:14Z",
    "closed_at": "2016-04-26T11:44:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "``` js\nrouter.param(['type', 'id'], function(req, res, next, value) {\n  console.log(value);//  there is not in\n  next();\n});\nrouter.get('/tradeclient/:type/:id', function(req, res) {\n  res.render('tradeclient');\n});\n```\n\nthe param is not in\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2975/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2975/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2974",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2974/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2974/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2974/events",
    "html_url": "https://github.com/expressjs/express/issues/2974",
    "id": 149218803,
    "node_id": "MDU6SXNzdWUxNDkyMTg4MDM=",
    "number": 2974,
    "title": "version reporting confusion",
    "user": {
      "login": "mccart",
      "id": 13645616,
      "node_id": "MDQ6VXNlcjEzNjQ1NjE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/13645616?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mccart",
      "html_url": "https://github.com/mccart",
      "followers_url": "https://api.github.com/users/mccart/followers",
      "following_url": "https://api.github.com/users/mccart/following{/other_user}",
      "gists_url": "https://api.github.com/users/mccart/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mccart/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mccart/subscriptions",
      "organizations_url": "https://api.github.com/users/mccart/orgs",
      "repos_url": "https://api.github.com/users/mccart/repos",
      "events_url": "https://api.github.com/users/mccart/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mccart/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-04-18T17:32:47Z",
    "updated_at": "2016-04-18T18:37:13Z",
    "closed_at": "2016-04-18T17:38:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "question:  does `express --version` really work?\nThis is probably a minor issue but caused me confusion on which version of express I had installed.\n\n```\n$ sudo npm install -g express\n    /opt/nodejs/lib\n    └─┬ express@4.13.4 \n\n$ express --version\n    4.13.1\n\n$ npm view express version\n    4.13.4\n\n$ npm list -g express\n    /opt/nodejs/lib\n    └── express@4.13.4 \n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2974/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2974/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2973",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2973/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2973/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2973/events",
    "html_url": "https://github.com/expressjs/express/issues/2973",
    "id": 149098697,
    "node_id": "MDU6SXNzdWUxNDkwOTg2OTc=",
    "number": 2973,
    "title": "Error handler in sub app",
    "user": {
      "login": "piuccio",
      "id": 680284,
      "node_id": "MDQ6VXNlcjY4MDI4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/680284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/piuccio",
      "html_url": "https://github.com/piuccio",
      "followers_url": "https://api.github.com/users/piuccio/followers",
      "following_url": "https://api.github.com/users/piuccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/piuccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/piuccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/piuccio/subscriptions",
      "organizations_url": "https://api.github.com/users/piuccio/orgs",
      "repos_url": "https://api.github.com/users/piuccio/repos",
      "events_url": "https://api.github.com/users/piuccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/piuccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2016-04-18T09:39:07Z",
    "updated_at": "2016-04-19T15:15:24Z",
    "closed_at": "2016-04-18T14:46:04Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Using the code below, you'd expect `Error in sub app` to be logged, but only the parent app handler gets called.\n\n``` js\nvar express = require('express');\nvar app = express();\n\napp.use('/', function (req, res) {\n    throw new Error('something');\n});\n\nvar subApp = express();\nsubApp.use(function (err, req, res, next) {\n    console.log('Error in sub app');\n    next(err);\n});\napp.use(subApp);\n\napp.use(function (err, req, res, next) {\n    console.log('Error in parent app');\n    res.status(500).send('Error: ' + err.message);\n});\n\napp.listen(4000);\n```\n\nOther handlers work just fine.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2973/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2973/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2972",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2972/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2972/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2972/events",
    "html_url": "https://github.com/expressjs/express/pull/2972",
    "id": 148606892,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjY2MTMyNzU=",
    "number": 2972,
    "title": "Make router.use warn about probably unintended usage",
    "user": {
      "login": "dasilvacontin",
      "id": 1260830,
      "node_id": "MDQ6VXNlcjEyNjA4MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1260830?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dasilvacontin",
      "html_url": "https://github.com/dasilvacontin",
      "followers_url": "https://api.github.com/users/dasilvacontin/followers",
      "following_url": "https://api.github.com/users/dasilvacontin/following{/other_user}",
      "gists_url": "https://api.github.com/users/dasilvacontin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dasilvacontin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dasilvacontin/subscriptions",
      "organizations_url": "https://api.github.com/users/dasilvacontin/orgs",
      "repos_url": "https://api.github.com/users/dasilvacontin/repos",
      "events_url": "https://api.github.com/users/dasilvacontin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dasilvacontin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 18291,
        "node_id": "MDU6TGFiZWwxODI5MQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1",
        "default": false,
        "description": null
      },
      {
        "id": 163600,
        "node_id": "MDU6TGFiZWwxNjM2MDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false,
        "description": null
      },
      {
        "id": 55587817,
        "node_id": "MDU6TGFiZWw1NTU4NzgxNw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/needs%20tests",
        "name": "needs tests",
        "color": "e11d21",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 12,
    "created_at": "2016-04-15T09:23:01Z",
    "updated_at": "2016-08-16T04:35:26Z",
    "closed_at": "2016-08-14T23:32:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2972",
      "html_url": "https://github.com/expressjs/express/pull/2972",
      "diff_url": "https://github.com/expressjs/express/pull/2972.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2972.patch",
      "merged_at": null
    },
    "body": "This will help people avoid wasting some hours debugging.\n\nWhen using `router#use`, you most likely always want to pass in a valid middleware function – with `(req, res [, next])` signature – or a router to mount on top of the path.\n\nI've seen people waste hours because their code had bugs and they weren't passing in a random function (that didn't look like middleware, it had no arguments) and express didn't complain.\n\nHaving some kind of check / warning for this most common use of `router#use` would make the library more user friendly, and potentially save up wasted hours, frustration, and demotivation – specially for beginners and first time users.\n\nCode is just a proof-of-concept to get a feel of the new warning behaviour. Using the following example:\n\n``` js\nvar express = require('express')\nvar app = express()\nvar userRouter = express()\n\napp.use('/hi', function (req, res, next) {})\napp.use('/hi', function (req, res) {})\napp.use('/hi', function () {}) // <-- random function passed in\napp.get('/hi', function (req, res) {\n  res.send('Hello World!')\n})\napp.use('/users', userRouter)\n\napp.listen(3000, function () {\n  console.log('up and running!')\n})\n```\n\nThe output would be:\n\n```\n➜  temp node app.js\nTrace: A non-middleware-like function was passed to `.use()` – this is probably unintended.\n    at Function.use (/Users/dasilvacontin/GitHub/expressjs/express/lib/router/index.js:464:15)\n    at EventEmitter.<anonymous> (/Users/dasilvacontin/GitHub/expressjs/express/lib/application.js:219:21)\n    at Array.forEach (native)\n    at EventEmitter.use (/Users/dasilvacontin/GitHub/expressjs/express/lib/application.js:216:7)\n    at Object.<anonymous> (/Users/dasilvacontin/temp/app.js:7:5)\n    at Module._compile (module.js:413:34)\n    at Object.Module._extensions..js (module.js:422:10)\n    at Module.load (module.js:357:32)\n    at Function.Module._load (module.js:314:12)\n    at Function.Module.runMain (module.js:447:10)\nup and running!\n```\n\n(feel free to edit my example, I don't know conventions for using express)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2972/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2972/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2971",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2971/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2971/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2971/events",
    "html_url": "https://github.com/expressjs/express/issues/2971",
    "id": 148565216,
    "node_id": "MDU6SXNzdWUxNDg1NjUyMTY=",
    "number": 2971,
    "title": "express/lib/router/index.js:392 : req.params is undefined",
    "user": {
      "login": "pmaoui",
      "id": 318256,
      "node_id": "MDQ6VXNlcjMxODI1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/318256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pmaoui",
      "html_url": "https://github.com/pmaoui",
      "followers_url": "https://api.github.com/users/pmaoui/followers",
      "following_url": "https://api.github.com/users/pmaoui/following{/other_user}",
      "gists_url": "https://api.github.com/users/pmaoui/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pmaoui/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pmaoui/subscriptions",
      "organizations_url": "https://api.github.com/users/pmaoui/orgs",
      "repos_url": "https://api.github.com/users/pmaoui/repos",
      "events_url": "https://api.github.com/users/pmaoui/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pmaoui/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2016-04-15T06:23:33Z",
    "updated_at": "2016-06-08T18:33:26Z",
    "closed_at": "2016-04-26T11:30:55Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\nI see more and more this error that causes a crash, I use express 4.13.4. It seems to come from an impossible case, req.params does not exist in the router middleware.\n\n>  /app/node_modules/express/lib/router/index.js:392\n> paramCalled.value = req.params[key.name];\n> TypeError: Cannot read property 'lang' of undefined\n>   at paramCallback (/app/node_modules/express/lib/router/index.js:392:35) \n\nI parse the lang parameter in the URL in a very basic way :\n`app.post('/:lang/something', callback)`\n\n99.9% of the time, it is working fine and occasionally, this unpredictable error arrives. \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2971/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2971/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2970",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2970/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2970/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2970/events",
    "html_url": "https://github.com/expressjs/express/issues/2970",
    "id": 148251994,
    "node_id": "MDU6SXNzdWUxNDgyNTE5OTQ=",
    "number": 2970,
    "title": "Express without template engine?",
    "user": {
      "login": "THCloud",
      "id": 13058247,
      "node_id": "MDQ6VXNlcjEzMDU4MjQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/13058247?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/THCloud",
      "html_url": "https://github.com/THCloud",
      "followers_url": "https://api.github.com/users/THCloud/followers",
      "following_url": "https://api.github.com/users/THCloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/THCloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/THCloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/THCloud/subscriptions",
      "organizations_url": "https://api.github.com/users/THCloud/orgs",
      "repos_url": "https://api.github.com/users/THCloud/repos",
      "events_url": "https://api.github.com/users/THCloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/THCloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 23,
    "created_at": "2016-04-14T04:52:04Z",
    "updated_at": "2019-01-14T20:30:52Z",
    "closed_at": "2016-04-26T11:38:22Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\nI'm trying to do something with Express and angular, and a problem confused me for several days..\n\nHow to use Express without template engine? I mean , I just wanna use HTML files, as I wanna angular's route.js to control the HTML files sended to browser, not express render the HTMLs, like this:\n\nroute.js   (angular)\n`$routeProvider.when( '/' , { templateUrl: '../../***.html',  .... })`\n\nThen I needn't to write \n`res.render(...)`\nin express.route.\n\nI found a solution like this on stackoverflow:\n`app.engine('html', require('ejs').renderFile)`\n`app.set('view engine', 'ejs')`\n\nThat's not what I want. I still need to write\n`res.render(' ***.html')`\nin my express.route.\n\nAnd I don't wanna put these HTML files in express.static(), either. I don't think that's a good idea for angular.\n\nSo, How to use Express without template engine? Just use HTML files without set template engine?\n\nReally hope your replies soon.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2970/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2970/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2969",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2969/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2969/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2969/events",
    "html_url": "https://github.com/expressjs/express/issues/2969",
    "id": 148117035,
    "node_id": "MDU6SXNzdWUxNDgxMTcwMzU=",
    "number": 2969,
    "title": "Parse Json Strings",
    "user": {
      "login": "ybrodsky",
      "id": 8831993,
      "node_id": "MDQ6VXNlcjg4MzE5OTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8831993?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ybrodsky",
      "html_url": "https://github.com/ybrodsky",
      "followers_url": "https://api.github.com/users/ybrodsky/followers",
      "following_url": "https://api.github.com/users/ybrodsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ybrodsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ybrodsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ybrodsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ybrodsky/orgs",
      "repos_url": "https://api.github.com/users/ybrodsky/repos",
      "events_url": "https://api.github.com/users/ybrodsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ybrodsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-04-13T16:42:02Z",
    "updated_at": "2016-04-13T17:27:18Z",
    "closed_at": "2016-04-13T17:05:43Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The solution provided in #2460 does not work. Returns \n`URIError: URI malformed`\n\nIn my case for example, my queries should be something of the sort:\n\n`where={%22name%22:%20{%22$like%22:%20%22%bari%22}}`\n\nWhich translates to: \n\n`\n\"where\": {\n  \"name\": {\n    \"$like\": \"%bar\"\n  }\n}\n`\n\nAny help would be appreciated. #2460 is the most similar problem I could find but did not work for me.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2969/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2969/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2968",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2968/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2968/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2968/events",
    "html_url": "https://github.com/expressjs/express/pull/2968",
    "id": 148047480,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjYzMTQxODk=",
    "number": 2968,
    "title": "Don't reply with Content-Length when Transfer-Encoding === 'chunked'",
    "user": {
      "login": "yvg",
      "id": 387558,
      "node_id": "MDQ6VXNlcjM4NzU1OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/387558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yvg",
      "html_url": "https://github.com/yvg",
      "followers_url": "https://api.github.com/users/yvg/followers",
      "following_url": "https://api.github.com/users/yvg/following{/other_user}",
      "gists_url": "https://api.github.com/users/yvg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yvg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yvg/subscriptions",
      "organizations_url": "https://api.github.com/users/yvg/orgs",
      "repos_url": "https://api.github.com/users/yvg/repos",
      "events_url": "https://api.github.com/users/yvg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yvg/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-04-13T12:41:24Z",
    "updated_at": "2016-04-13T12:45:20Z",
    "closed_at": "2016-04-13T12:45:18Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2968",
      "html_url": "https://github.com/expressjs/express/pull/2968",
      "diff_url": "https://github.com/expressjs/express/pull/2968.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2968.patch",
      "merged_at": null
    },
    "body": "According to latest changes in Node (v0.10.42, 0.12.10, 4.3.0 and 5.6.0) to comply more with HTTP 1.1, it's prohibited to apply a `Content-Length` when `Transfer-Encoding` is set to `chunked`.\n\nSee discussions such as the following about this issue: https://github.com/request/request/issues/2091\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2968/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2968/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2967",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2967/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2967/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2967/events",
    "html_url": "https://github.com/expressjs/express/issues/2967",
    "id": 147649970,
    "node_id": "MDU6SXNzdWUxNDc2NDk5NzA=",
    "number": 2967,
    "title": "Jade problem with Express+Angular",
    "user": {
      "login": "THCloud",
      "id": 13058247,
      "node_id": "MDQ6VXNlcjEzMDU4MjQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/13058247?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/THCloud",
      "html_url": "https://github.com/THCloud",
      "followers_url": "https://api.github.com/users/THCloud/followers",
      "following_url": "https://api.github.com/users/THCloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/THCloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/THCloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/THCloud/subscriptions",
      "organizations_url": "https://api.github.com/users/THCloud/orgs",
      "repos_url": "https://api.github.com/users/THCloud/repos",
      "events_url": "https://api.github.com/users/THCloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/THCloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-04-12T06:51:13Z",
    "updated_at": "2016-06-19T22:04:48Z",
    "closed_at": "2016-04-12T09:09:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\nI'm a new learner, and recently I'm trying to do something with MEAN(mongodb, express, angular, node)\nFor the template, I used Jade. And I found a problem with angular+express+jade:\nAs I can't send jade to browser, I write like this in Angular's route.js\n`angular.module('myApp')`\n`.config([$routeProvider, $locationProvider,function($routeProvider, $locationProvider){`\n`$routeProvider.when('/', {templateUrl: '/', controller: 'indexCtrl'})`\n`.when('/errror', {templateUrl: '/error', controller: 'errorCtrl'})`\n`...`\n\nwell, templateUrl in angular's route.js is matched with express router.\n\nand I write an ajax method in errorpage, I just wanna try the ajax communication with angular and express.\nI write like this in express' route.js\n\n`var express = require('express');`\n`var router = express.Router();`\n`...`\n`router.get('/error', function(req, res, next) {`\n`res.render('error.jade');`\n`});`\n`router.post('/error', function(req, res, next){`\n`console.log('I have recieved ajax request.');`\n`res.json({ state: 'success' });`\n`});`\n`...`\n\nAnd I just found that , when i jump to error page, the ajax request send automaticlly although I haven't call the ajax method !!!\n\nI really wanna know what problems in it.\n\nAnd I don't think my angular route.js is a good design. But I haven't found another solution when using jade. \n\nSo, 2 questions:\n1. how to solve that problem?   (ajax req  send auto)\n2. Any better solution when using jade in angular?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2967/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2967/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2966",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2966/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2966/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2966/events",
    "html_url": "https://github.com/expressjs/express/issues/2966",
    "id": 146992003,
    "node_id": "MDU6SXNzdWUxNDY5OTIwMDM=",
    "number": 2966,
    "title": "Method connect not implemented",
    "user": {
      "login": "pravdomil",
      "id": 2387356,
      "node_id": "MDQ6VXNlcjIzODczNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2387356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pravdomil",
      "html_url": "https://github.com/pravdomil",
      "followers_url": "https://api.github.com/users/pravdomil/followers",
      "following_url": "https://api.github.com/users/pravdomil/following{/other_user}",
      "gists_url": "https://api.github.com/users/pravdomil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pravdomil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pravdomil/subscriptions",
      "organizations_url": "https://api.github.com/users/pravdomil/orgs",
      "repos_url": "https://api.github.com/users/pravdomil/repos",
      "events_url": "https://api.github.com/users/pravdomil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pravdomil/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 88345,
        "node_id": "MDU6TGFiZWw4ODM0NQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/3.x",
        "name": "3.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2016-04-08T17:40:24Z",
    "updated_at": "2016-04-27T20:33:28Z",
    "closed_at": "2016-04-26T12:13:14Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Function app.METHOD supports connect, but my simple example didn't work.\n\n``` js\n'use strict'\n\nvar app = require('express')()\n\napp.connect((res, req, next) => {\n  console.log('connect method!')\n  req.end()\n})\n\napp.listen(1234, () => {\n  console.log('listening')\n\n  var req = http.get({ port: 1234, 'method': 'connect' })\n\n  req.on('socket', socket => {\n    console.log(JSON.stringify(socket._pendingData))\n    socket.on('data', d => console.log('socket data: ' + d))\n  })\n\n  req.on('connect', (res, socket, head) => {\n    console.log('connected')\n    socket.destory()\n  })\n})\n```\n\nTry run that and connection is hang-up immediately.\n\nFrom docs: https://nodejs.org/api/http.html#http_event_connect_1\n\nEvent connect is emitted each time a client requests a http CONNECT method. **If this event isn't listened for, then clients requesting a CONNECT method will have their connections closed**. Well express should care about this?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2966/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2966/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2965",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2965/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2965/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2965/events",
    "html_url": "https://github.com/expressjs/express/issues/2965",
    "id": 146318486,
    "node_id": "MDU6SXNzdWUxNDYzMTg0ODY=",
    "number": 2965,
    "title": "Files changes ",
    "user": {
      "login": "eduarddotgg",
      "id": 4650029,
      "node_id": "MDQ6VXNlcjQ2NTAwMjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4650029?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eduarddotgg",
      "html_url": "https://github.com/eduarddotgg",
      "followers_url": "https://api.github.com/users/eduarddotgg/followers",
      "following_url": "https://api.github.com/users/eduarddotgg/following{/other_user}",
      "gists_url": "https://api.github.com/users/eduarddotgg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eduarddotgg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eduarddotgg/subscriptions",
      "organizations_url": "https://api.github.com/users/eduarddotgg/orgs",
      "repos_url": "https://api.github.com/users/eduarddotgg/repos",
      "events_url": "https://api.github.com/users/eduarddotgg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eduarddotgg/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-04-06T13:44:07Z",
    "updated_at": "2016-04-06T14:45:07Z",
    "closed_at": "2016-04-06T14:45:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Is there any way to watch changes made to html or any other template engine file so there was no need t restart server to see changes?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2965/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2965/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2964",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2964/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2964/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2964/events",
    "html_url": "https://github.com/expressjs/express/issues/2964",
    "id": 145557611,
    "node_id": "MDU6SXNzdWUxNDU1NTc2MTE=",
    "number": 2964,
    "title": "is developmented halted?",
    "user": {
      "login": "bonesoul",
      "id": 73215,
      "node_id": "MDQ6VXNlcjczMjE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/73215?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bonesoul",
      "html_url": "https://github.com/bonesoul",
      "followers_url": "https://api.github.com/users/bonesoul/followers",
      "following_url": "https://api.github.com/users/bonesoul/following{/other_user}",
      "gists_url": "https://api.github.com/users/bonesoul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bonesoul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bonesoul/subscriptions",
      "organizations_url": "https://api.github.com/users/bonesoul/orgs",
      "repos_url": "https://api.github.com/users/bonesoul/repos",
      "events_url": "https://api.github.com/users/bonesoul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bonesoul/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-04-04T00:44:55Z",
    "updated_at": "2016-04-04T01:08:11Z",
    "closed_at": "2016-04-04T01:07:04Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "i don't see any updates on 5.x tree for a long while, is the development of project halted?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2964/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2964/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2963",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2963/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2963/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2963/events",
    "html_url": "https://github.com/expressjs/express/issues/2963",
    "id": 144747110,
    "node_id": "MDU6SXNzdWUxNDQ3NDcxMTA=",
    "number": 2963,
    "title": "Undefined this when routing using ES2015 class",
    "user": {
      "login": "wagoid",
      "id": 7467450,
      "node_id": "MDQ6VXNlcjc0Njc0NTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7467450?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wagoid",
      "html_url": "https://github.com/wagoid",
      "followers_url": "https://api.github.com/users/wagoid/followers",
      "following_url": "https://api.github.com/users/wagoid/following{/other_user}",
      "gists_url": "https://api.github.com/users/wagoid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wagoid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wagoid/subscriptions",
      "organizations_url": "https://api.github.com/users/wagoid/orgs",
      "repos_url": "https://api.github.com/users/wagoid/repos",
      "events_url": "https://api.github.com/users/wagoid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wagoid/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-03-30T23:24:38Z",
    "updated_at": "2016-03-30T23:41:38Z",
    "closed_at": "2016-03-30T23:41:38Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hey there!\nI got an error calling router.get when the handler function is from an ES2015 object.\nHere are the useful parts of my code to explain the problem:\n\ncontroller:\n\n``` javascript\nclass MyController {\n  all (req, res, next) {\n    MyModel.find()\n      .then((items) => {\n        res.json({ data: items });\n      })\n      .catch(this.handleError(res));\n  }\n}\n```\n\nroute:\n\n``` javascript\nvar controller = new MyController();\nvar router = new express.Router();\n\nrouter.get('/all', controller.all);\n```\n\nWhen the the function is called inside the router handle function, I get this error:\n\nTypeError: Cannot read property 'handleError' of undefined\n\nTo work around this, I made a wrapper to call my controller.all function instead of just using \"router.get('/all', controller.all)\", but my question is: should express support ES2015 classes when routing? Or am I just doing something terribly wrong?\n\nBy the way, I am using express 4.13.4 and node 5.8.0.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2963/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2963/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  }
]