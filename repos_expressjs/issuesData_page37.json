[
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1347",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1347/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1347/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1347/events",
    "html_url": "https://github.com/expressjs/express/issues/1347",
    "id": 7124314,
    "node_id": "MDU6SXNzdWU3MTI0MzE0",
    "number": 1347,
    "title": "Re write res.format()",
    "user": {
      "login": "jamlfy",
      "id": 1652887,
      "node_id": "MDQ6VXNlcjE2NTI4ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1652887?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamlfy",
      "html_url": "https://github.com/jamlfy",
      "followers_url": "https://api.github.com/users/jamlfy/followers",
      "following_url": "https://api.github.com/users/jamlfy/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamlfy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamlfy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamlfy/subscriptions",
      "organizations_url": "https://api.github.com/users/jamlfy/orgs",
      "repos_url": "https://api.github.com/users/jamlfy/repos",
      "events_url": "https://api.github.com/users/jamlfy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamlfy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2012-09-25T15:04:23Z",
    "updated_at": "2012-09-25T15:31:24Z",
    "closed_at": "2012-09-25T15:29:06Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In those days it was, using the `res.format()`. And I realized I have a small, you problems when used. It says in the help.\n\n``` javascript\nres.format({\n  text: function(){\n    res.send('hey');\n  },\n\n  html: function(){\n    res.send('hey'); // res.send ? and the render?\n    //res.render('my_index', myObject); Send error 500\n  },\n\n  json: function(){\n    res.send({ message: 'hey' });\n  }\n});\n```\n\nThere is a problem that is not used `app.engine(...)` in the `html`. Therefore, should not be so used directly from `res.format()`. I propose would be something like\n\n``` javascript\nres.format({\n  text: \"my string\",\n\n  html: {\n    render : true, // Use de engine\n    templete : 'my_index', // The template\n    data : myObject, // Object to render\n  },\n\n  json: myObject // The object\n});\n```\n\nSo using the `app.engine(...);` And quality improvement framework, saying???\n\nNote: Sorry for my english :s\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1347/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1347/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1346",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1346/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1346/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1346/events",
    "html_url": "https://github.com/expressjs/express/issues/1346",
    "id": 7118748,
    "node_id": "MDU6SXNzdWU3MTE4NzQ4",
    "number": 1346,
    "title": "problem with $.ajax POST",
    "user": {
      "login": "jeroenbourgois",
      "id": 202312,
      "node_id": "MDQ6VXNlcjIwMjMxMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/202312?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jeroenbourgois",
      "html_url": "https://github.com/jeroenbourgois",
      "followers_url": "https://api.github.com/users/jeroenbourgois/followers",
      "following_url": "https://api.github.com/users/jeroenbourgois/following{/other_user}",
      "gists_url": "https://api.github.com/users/jeroenbourgois/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jeroenbourgois/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jeroenbourgois/subscriptions",
      "organizations_url": "https://api.github.com/users/jeroenbourgois/orgs",
      "repos_url": "https://api.github.com/users/jeroenbourgois/repos",
      "events_url": "https://api.github.com/users/jeroenbourgois/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jeroenbourgois/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2012-09-25T11:18:19Z",
    "updated_at": "2012-09-25T15:33:29Z",
    "closed_at": "2012-09-25T15:33:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi\n\nI have the following route:\n\n``` coffeescript\napp.options '/poll/vote', (req, res) ->\n  # cross domain policies\n  # tried that too\n  # res.header \"Access-Control-Allow-Origin\", \"*\"\n  # res.header \"Access-Control-Allow-Headers\", \"X-Requested-With\"\n\n  console.log req.body\n  console.log req.params\n```\n\nBoth logs give me undefined. My ajax call:\n\n``` javascript\n        data = { 'answer': answer };\n        $.ajax({\n          \"url\": socket_url + '/poll/vote',\n          \"type\": \"POST\",\n          \"data\": JSON.stringify(data),\n          \"contentType\": \"application/json; charset=utf-8\",\n          \"dataType\": \"json\",\n          \"success\": function(data) {\n            return alert('Success!');\n          },\n          \"error\": function(jqXHR, textStatus, err) {\n            return alert('text status ' + textStatus + ', err ' + err);\n          }\n        });\n\n```\n\nI tried a plethora of combinations and possibilities, but nothing seems to work. I just can't get my POST data properly :(\n\nAny clue on what I am doing wrong? I am using Express 3.0.0rc4\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1346/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1346/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1345",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1345/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1345/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1345/events",
    "html_url": "https://github.com/expressjs/express/issues/1345",
    "id": 7110544,
    "node_id": "MDU6SXNzdWU3MTEwNTQ0",
    "number": 1345,
    "title": "New expressjs.com site design lacks body background-color style",
    "user": {
      "login": "maupin",
      "id": 2416324,
      "node_id": "MDQ6VXNlcjI0MTYzMjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2416324?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maupin",
      "html_url": "https://github.com/maupin",
      "followers_url": "https://api.github.com/users/maupin/followers",
      "following_url": "https://api.github.com/users/maupin/following{/other_user}",
      "gists_url": "https://api.github.com/users/maupin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maupin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maupin/subscriptions",
      "organizations_url": "https://api.github.com/users/maupin/orgs",
      "repos_url": "https://api.github.com/users/maupin/repos",
      "events_url": "https://api.github.com/users/maupin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maupin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2012-09-25T01:22:09Z",
    "updated_at": "2012-09-27T17:41:07Z",
    "closed_at": "2012-09-27T17:41:07Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The CSS of the new expressjs.com design omits an apparently necessary background-color style on the body tag.  This causes the browser to display the body background as transparent, and it will be rendered using whatever the browser default is.\n\nSince some users change their default browser background color (for example, to light gray to make reading text files more easy on the eyes) if a specific background-color is desired or necessary for legibility the web site should always declare one.\n\nAdding \n\n   background-color: #FFF;\n\nto the body's styles will fix this issue in the new Express site design.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1345/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1345/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1344",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1344/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1344/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1344/events",
    "html_url": "https://github.com/expressjs/express/issues/1344",
    "id": 7104489,
    "node_id": "MDU6SXNzdWU3MTA0NDg5",
    "number": 1344,
    "title": "Expected routing behavior?",
    "user": {
      "login": "wavded",
      "id": 26638,
      "node_id": "MDQ6VXNlcjI2NjM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/26638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wavded",
      "html_url": "https://github.com/wavded",
      "followers_url": "https://api.github.com/users/wavded/followers",
      "following_url": "https://api.github.com/users/wavded/following{/other_user}",
      "gists_url": "https://api.github.com/users/wavded/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wavded/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wavded/subscriptions",
      "organizations_url": "https://api.github.com/users/wavded/orgs",
      "repos_url": "https://api.github.com/users/wavded/repos",
      "events_url": "https://api.github.com/users/wavded/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wavded/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2012-09-24T20:25:16Z",
    "updated_at": "2012-09-24T20:41:23Z",
    "closed_at": "2012-09-24T20:41:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In express 3.x, if I have the following route:\n\n```\n/resources/photo/:id\n```\n\nAnd a user visits:\n\n```\n/resources/photo\n```\n\n`req.params.id` is populate with `photo` which to me seems like a bug.  I would expect either the route to not work at all or `req.params.id` to be empty.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1344/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1344/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1343",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1343/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1343/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1343/events",
    "html_url": "https://github.com/expressjs/express/issues/1343",
    "id": 7075736,
    "node_id": "MDU6SXNzdWU3MDc1NzM2",
    "number": 1343,
    "title": "500 Error: Failed to lookup view \"index\"",
    "user": {
      "login": "umarashfaq",
      "id": 1681120,
      "node_id": "MDQ6VXNlcjE2ODExMjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1681120?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/umarashfaq",
      "html_url": "https://github.com/umarashfaq",
      "followers_url": "https://api.github.com/users/umarashfaq/followers",
      "following_url": "https://api.github.com/users/umarashfaq/following{/other_user}",
      "gists_url": "https://api.github.com/users/umarashfaq/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/umarashfaq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/umarashfaq/subscriptions",
      "organizations_url": "https://api.github.com/users/umarashfaq/orgs",
      "repos_url": "https://api.github.com/users/umarashfaq/repos",
      "events_url": "https://api.github.com/users/umarashfaq/events{/privacy}",
      "received_events_url": "https://api.github.com/users/umarashfaq/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2012-09-23T22:55:13Z",
    "updated_at": "2012-09-24T20:08:56Z",
    "closed_at": "2012-09-24T20:08:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I was trying to create a basic hello world app with express v3.0.0rc and was consistently getting the error: Failed to lookup view \"index\". Then I found about the command line tool \"express\" that created a basic application. When I tried to run it, I got the same issue.\n\nI might have done some mistakes in my hello world code, but I guess the code generated by \"express\" should be free of them. So either the generated code or the framework build seems to be broken. (Or have I missed to configure something that could have prevented it?)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1343/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1343/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1342",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1342/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1342/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1342/events",
    "html_url": "https://github.com/expressjs/express/pull/1342",
    "id": 7063060,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjQyMjI2MQ==",
    "number": 1342,
    "title": "improves generator to autoload routes",
    "user": {
      "login": "regality",
      "id": 678338,
      "node_id": "MDQ6VXNlcjY3ODMzOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/678338?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/regality",
      "html_url": "https://github.com/regality",
      "followers_url": "https://api.github.com/users/regality/followers",
      "following_url": "https://api.github.com/users/regality/following{/other_user}",
      "gists_url": "https://api.github.com/users/regality/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/regality/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/regality/subscriptions",
      "organizations_url": "https://api.github.com/users/regality/orgs",
      "repos_url": "https://api.github.com/users/regality/repos",
      "events_url": "https://api.github.com/users/regality/events{/privacy}",
      "received_events_url": "https://api.github.com/users/regality/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-09-22T20:09:34Z",
    "updated_at": "2012-09-24T16:10:11Z",
    "closed_at": "2012-09-24T16:10:11Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1342",
      "html_url": "https://github.com/expressjs/express/pull/1342",
      "diff_url": "https://github.com/expressjs/express/pull/1342.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1342.patch",
      "merged_at": null
    },
    "body": "The app that express generates isn't sooper helpful with the way it loads routes. This pull changes routes/index.js to recursively load all files from the routes directory.\n\nFor anything other than trivial apps I end up writing this every time, it would be good if express did it by default.\n\nEach file just creates `exports.init`, which accepts and express app. This also shows the pattern of separating route definitions from controller logic.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1342/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1342/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1341",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1341/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1341/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1341/events",
    "html_url": "https://github.com/expressjs/express/issues/1341",
    "id": 7060677,
    "node_id": "MDU6SXNzdWU3MDYwNjc3",
    "number": 1341,
    "title": "Route: leading * screws named params",
    "user": {
      "login": "mgurov",
      "id": 339544,
      "node_id": "MDQ6VXNlcjMzOTU0NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/339544?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mgurov",
      "html_url": "https://github.com/mgurov",
      "followers_url": "https://api.github.com/users/mgurov/followers",
      "following_url": "https://api.github.com/users/mgurov/following{/other_user}",
      "gists_url": "https://api.github.com/users/mgurov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mgurov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mgurov/subscriptions",
      "organizations_url": "https://api.github.com/users/mgurov/orgs",
      "repos_url": "https://api.github.com/users/mgurov/repos",
      "events_url": "https://api.github.com/users/mgurov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mgurov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2012-09-22T14:44:37Z",
    "updated_at": "2013-09-10T05:29:11Z",
    "closed_at": "2013-09-10T05:29:11Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Mixing plain wildcards with named parameters in routes produces inconsistent results.\n\nworks more or less ok when the \\* is after named parameters: \n\n``` javascript\napp.get('/file/:name/*', function(req, res){\n    console.log('tailing *', req.params);\n    res.end(req.params.name);\n});\n\n...\nrequest(app).get('/file/name/blah/fooe').expect('name', done); //succeeds\n> tailing * [ 'blah/fooe', name: 'name' ]\n```\n\nwhile same exercise fails with leading asterisk: \n\n``` javascript\napp.get('*/file/:name/', function(req, res){\n    console.log('leading *', req.params);\n    res.end(req.params.name);\n});\n\n...\nrequest(app).get('/context/subcontext/file/name').expect('name', done); //fails\n> leading * [ 'name', name: '/context/subcontext' ]\n```\n###### Technical notes\n\nThe reason for this behaviour is that the keys parameter is not touched for the plain wildcards in utils.pathRegexp function and  captures later are assigned incorrectly at Route.prototype.match (route.js). \nFixing this might be tricky, unless managed to inject `.replace(/\\*/g, '(.*)')` into the main replace statement (utile.pathRegexp). At the very least, detecting such mixture would not be too difficult and issuing warning / error could be an option.\n###### Workaround\n\nHand-crafted regexp works of course, but at a price of less readability and index-based param referencing: \n\n``` javascript\napp.get(/.*\\/file\\/(.*)/, function(req, res){\n    res.end(req.params[0]);\n});\n...\nrequest(app).get('/context/subcontext/file/name').expect('name', done); //works\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1341/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1341/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1340",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1340/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1340/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1340/events",
    "html_url": "https://github.com/expressjs/express/issues/1340",
    "id": 7053007,
    "node_id": "MDU6SXNzdWU3MDUzMDA3",
    "number": 1340,
    "title": "Not able to add paren group after route variable",
    "user": {
      "login": "benekastah",
      "id": 740268,
      "node_id": "MDQ6VXNlcjc0MDI2OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/740268?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benekastah",
      "html_url": "https://github.com/benekastah",
      "followers_url": "https://api.github.com/users/benekastah/followers",
      "following_url": "https://api.github.com/users/benekastah/following{/other_user}",
      "gists_url": "https://api.github.com/users/benekastah/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benekastah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benekastah/subscriptions",
      "organizations_url": "https://api.github.com/users/benekastah/orgs",
      "repos_url": "https://api.github.com/users/benekastah/repos",
      "events_url": "https://api.github.com/users/benekastah/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benekastah/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2012-09-21T21:04:45Z",
    "updated_at": "2012-09-21T21:27:59Z",
    "closed_at": "2012-09-21T21:14:58Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This works:\n\n```\napp.get(\"/test(.:format)?\", test_fn);\n```\n\nThis works:\n\n```\napp.get(\"/:id.:format\", test_fn);\n```\n\nThis does not:\n\n```\napp.get(\"/:id(.:format)?\", test_fn);\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1340/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1340/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1339",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1339/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1339/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1339/events",
    "html_url": "https://github.com/expressjs/express/issues/1339",
    "id": 6974113,
    "node_id": "MDU6SXNzdWU2OTc0MTEz",
    "number": 1339,
    "title": "template example using dustjs-linkedin",
    "user": {
      "login": "ralyodio",
      "id": 27381,
      "node_id": "MDQ6VXNlcjI3Mzgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/27381?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ralyodio",
      "html_url": "https://github.com/ralyodio",
      "followers_url": "https://api.github.com/users/ralyodio/followers",
      "following_url": "https://api.github.com/users/ralyodio/following{/other_user}",
      "gists_url": "https://api.github.com/users/ralyodio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ralyodio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ralyodio/subscriptions",
      "organizations_url": "https://api.github.com/users/ralyodio/orgs",
      "repos_url": "https://api.github.com/users/ralyodio/repos",
      "events_url": "https://api.github.com/users/ralyodio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ralyodio/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2012-09-19T06:54:04Z",
    "updated_at": "2012-09-27T18:40:32Z",
    "closed_at": "2012-09-27T17:41:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Can you add a template example using dustjs-linkedin module?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1339/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1339/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1338",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1338/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1338/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1338/events",
    "html_url": "https://github.com/expressjs/express/issues/1338",
    "id": 6951180,
    "node_id": "MDU6SXNzdWU2OTUxMTgw",
    "number": 1338,
    "title": "app.use() and case-insensitive URLs broken",
    "user": {
      "login": "msiebuhr",
      "id": 330611,
      "node_id": "MDQ6VXNlcjMzMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/330611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/msiebuhr",
      "html_url": "https://github.com/msiebuhr",
      "followers_url": "https://api.github.com/users/msiebuhr/followers",
      "following_url": "https://api.github.com/users/msiebuhr/following{/other_user}",
      "gists_url": "https://api.github.com/users/msiebuhr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/msiebuhr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msiebuhr/subscriptions",
      "organizations_url": "https://api.github.com/users/msiebuhr/orgs",
      "repos_url": "https://api.github.com/users/msiebuhr/repos",
      "events_url": "https://api.github.com/users/msiebuhr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/msiebuhr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2012-09-18T12:39:20Z",
    "updated_at": "2012-09-30T19:03:43Z",
    "closed_at": "2012-09-27T17:42:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I've been playing around with case-insensitive URLs, and found that `app.use()` does seem to respect case no matter what;\n\n```\nvar express = require('express');\n\nfunction ret(str) {\n    return function (req, res, next) { res.send(200, req.url); };\n}\n\n// Build a handler\nfunction getFooHandler() {\n    var app = express();\n    app.get('/Foo', ret('foo'));\n    return app;\n}\n\napp = require('express')();\n\n// ✓ GET /Foo/Foo\n// ✓ GET /Foo/foo\n// ✗ GET /foo/Foo\n// ✗ GET /foo/foo\napp.use('/Foo', getFooHandler());\n\n// ✓ GET Bar/Bar\n// ✗ GET Bar/bar\n// ✗ GET bar/Bar\n// ✗ GET bar/bar\napp.use('/Bar/Bar', function (req, res, next) {\n    console.log(\"Middleware\", req.url);\n    next();\n});\n\n// ✓ GET Bar/Bar\n// ✓ GET Bar/bar\n// ✓ GET bar/Bar\n// ✓ GET bar/bar\napp.get('/Bar/Bar', ret('bar'));\n\n// Doesn't write out the '/Foo'-route, even though it (sort of) works.\nconsole.log(app.routes);\n\napp.listen(3000); \n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1338/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1338/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1337",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1337/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1337/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1337/events",
    "html_url": "https://github.com/expressjs/express/pull/1337",
    "id": 6944860,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM3MDY0Nw==",
    "number": 1337,
    "title": "Trim static dirs, add support for handlebars, jquery (server and client) and forever",
    "user": {
      "login": "nyteshade",
      "id": 225558,
      "node_id": "MDQ6VXNlcjIyNTU1OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/225558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nyteshade",
      "html_url": "https://github.com/nyteshade",
      "followers_url": "https://api.github.com/users/nyteshade/followers",
      "following_url": "https://api.github.com/users/nyteshade/following{/other_user}",
      "gists_url": "https://api.github.com/users/nyteshade/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nyteshade/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nyteshade/subscriptions",
      "organizations_url": "https://api.github.com/users/nyteshade/orgs",
      "repos_url": "https://api.github.com/users/nyteshade/repos",
      "events_url": "https://api.github.com/users/nyteshade/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nyteshade/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2012-09-18T08:34:37Z",
    "updated_at": "2014-08-07T19:22:09Z",
    "closed_at": "2012-09-18T23:47:20Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1337",
      "html_url": "https://github.com/expressjs/express/pull/1337",
      "diff_url": "https://github.com/expressjs/express/pull/1337.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1337.patch",
      "merged_at": null
    },
    "body": "This is a culmination of fixes for things I always find myself fixing after every invocation of express. One major peeve I have is the long static directory names (I can make this an option as well). It changes stylesheets to css, javascripts to js, and images to imgs. \n\nAdding -F will add forever as a requirement\nAdding -q will add jQuery (for the server) as a requirement\nAdding -Q will download the latest version of jQuery for the client into public/js\nAdding -b will configure the engine to use handlebars\n\nClient side jQuery will only appear if fibers has been installed globally and curl exists on the OS in question. If either of these conditions are not met, the option is silently unavailable.\n\nHandlebars has several advantages over hjs. The most obvious being working partials support and layout support. But handlebars also has several other advantages and is 100% compatible with hjs.\n\nThis fix also corrects the css, less and stylus definitions to be more useful. The example views all have a span.title element containing that is styled instead of generating a style for anchors (i.e. a tags) that are never supplied in any of the examples.\n\nFinally, to make editors more friendly for generated projects, wherever possible view templates use the .html extension and the engines are configured to use that extension instead of the engine desgination (i.e. .ejs, .jade, .hbs, etc...). The only one that is misbehaving is jshtml. It seems broken even in the unaltered download.  \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1337/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1337/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1336",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1336/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1336/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1336/events",
    "html_url": "https://github.com/expressjs/express/issues/1336",
    "id": 6934183,
    "node_id": "MDU6SXNzdWU2OTM0MTgz",
    "number": 1336,
    "title": "res.redirect() backwards compat",
    "user": {
      "login": "tj",
      "id": 25254,
      "node_id": "MDQ6VXNlcjI1MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tj",
      "html_url": "https://github.com/tj",
      "followers_url": "https://api.github.com/users/tj/followers",
      "following_url": "https://api.github.com/users/tj/following{/other_user}",
      "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
      "organizations_url": "https://api.github.com/users/tj/orgs",
      "repos_url": "https://api.github.com/users/tj/repos",
      "events_url": "https://api.github.com/users/tj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 88345,
        "node_id": "MDU6TGFiZWw4ODM0NQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/3.x",
        "name": "3.x",
        "color": "ededed",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2012-09-17T21:50:19Z",
    "updated_at": "2012-09-26T16:07:28Z",
    "closed_at": "2012-09-26T16:07:28Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "for status code\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1336/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1336/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1335",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1335/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1335/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1335/events",
    "html_url": "https://github.com/expressjs/express/issues/1335",
    "id": 6934069,
    "node_id": "MDU6SXNzdWU2OTM0MDY5",
    "number": 1335,
    "title": "Connect res.redirect doesn't work with status code?",
    "user": {
      "login": "trnc-ck",
      "id": 435783,
      "node_id": "MDQ6VXNlcjQzNTc4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/435783?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/trnc-ck",
      "html_url": "https://github.com/trnc-ck",
      "followers_url": "https://api.github.com/users/trnc-ck/followers",
      "following_url": "https://api.github.com/users/trnc-ck/following{/other_user}",
      "gists_url": "https://api.github.com/users/trnc-ck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/trnc-ck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/trnc-ck/subscriptions",
      "organizations_url": "https://api.github.com/users/trnc-ck/orgs",
      "repos_url": "https://api.github.com/users/trnc-ck/repos",
      "events_url": "https://api.github.com/users/trnc-ck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/trnc-ck/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2012-09-17T21:45:13Z",
    "updated_at": "2012-09-17T22:09:57Z",
    "closed_at": "2012-09-17T21:50:06Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "hi,\n\nwhen using\n\n```\napp.get \"/de/home\", (req, res) ->\n    res.redirect \"/\", 301\n```\n\ni get the following error:\n\n500 TypeError: Object 301 has no method 'indexOf'.\n\ni'm using express 3!\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1335/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1335/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1334",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1334/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1334/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1334/events",
    "html_url": "https://github.com/expressjs/express/issues/1334",
    "id": 6902287,
    "node_id": "MDU6SXNzdWU2OTAyMjg3",
    "number": 1334,
    "title": "Add a way to detect if render has been called",
    "user": {
      "login": "dominykas",
      "id": 505619,
      "node_id": "MDQ6VXNlcjUwNTYxOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/505619?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dominykas",
      "html_url": "https://github.com/dominykas",
      "followers_url": "https://api.github.com/users/dominykas/followers",
      "following_url": "https://api.github.com/users/dominykas/following{/other_user}",
      "gists_url": "https://api.github.com/users/dominykas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dominykas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dominykas/subscriptions",
      "organizations_url": "https://api.github.com/users/dominykas/orgs",
      "repos_url": "https://api.github.com/users/dominykas/repos",
      "events_url": "https://api.github.com/users/dominykas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dominykas/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2012-09-16T11:01:02Z",
    "updated_at": "2013-09-11T09:30:57Z",
    "closed_at": "2013-09-11T09:30:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Practical use case: a 404 handler inside a wildcard route should only render the 404 if there was no response set earlier (i.e. res.headerSent is empty). In case of redirect()/send() - this works fine. In case of render(), depending on the templating system, the actual send() may happen in the next tick. This means that if (by accident) next() is called after render() - the wildcard handler will be called, however it will not have a way to detect if the request was actually handled (because the template might be read from the file system asynchronously).\n\nSample code:\n\n```\nvar app = express();\napp.set(\"view engine\", \"hbs\");\napp.set(\"views\", __dirname);\n\napp.get(\"/\", function(req, res, next){\n    console.log(\"/ handler called\")\n    res.render(\"core/content\", {layout:\"\",content:\"Content\"});\n    next();\n});\napp.get(\"/*\", function(req, res){\n    console.log(\"Wildcard handler called\");\n    assert(typeof(res.headerSent) === \"undefined\");\n});\n\nsupertest(app)\n    .get(\"/\")\n    .expect(200)\n    .expect(\"Content\")\n    .end(function(e, res){\n        console.log(\"Request completed\");\n        assert(e === null);\n    });\n```\n\nFor the time being I'm overriding the render() method and set a renderCalled = true inside, but it'd be nice to have this built in.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1334/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1334/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1333",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1333/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1333/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1333/events",
    "html_url": "https://github.com/expressjs/express/pull/1333",
    "id": 6901927,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM1NDM2NA==",
    "number": 1333,
    "title": "Improved app.set to handle object parameter",
    "user": {
      "login": "yhpark",
      "id": 1078489,
      "node_id": "MDQ6VXNlcjEwNzg0ODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1078489?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yhpark",
      "html_url": "https://github.com/yhpark",
      "followers_url": "https://api.github.com/users/yhpark/followers",
      "following_url": "https://api.github.com/users/yhpark/following{/other_user}",
      "gists_url": "https://api.github.com/users/yhpark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yhpark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yhpark/subscriptions",
      "organizations_url": "https://api.github.com/users/yhpark/orgs",
      "repos_url": "https://api.github.com/users/yhpark/repos",
      "events_url": "https://api.github.com/users/yhpark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yhpark/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2012-09-16T09:33:58Z",
    "updated_at": "2014-06-14T11:20:29Z",
    "closed_at": "2013-09-09T06:39:22Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1333",
      "html_url": "https://github.com/expressjs/express/pull/1333",
      "diff_url": "https://github.com/expressjs/express/pull/1333.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1333.patch",
      "merged_at": null
    },
    "body": "Many `app.set`s look a bit ugly.\nIt can be cleaner if app.set handles object parameter.\n\nFor example,\n\n``` javascript\napp.set(\"db_one\", \"123.123.123.121\");\napp.set(\"db_two\", \"123.123.123.122\");\napp.set(\"db_three\", \"123.123.123.123\");\napp.set(\"db_four\", \"123.123.123.124\");\n```\n\nabove can be rewritten as below\n\n``` javascript\napp.set({\n  db_one: \"123.123.123.121\",\n  db_two: \"123.123.123.122\",\n  db_three: \"123.123.123.123\",\n  db_four: \"123.123.123.124\",\n  ...\n});\n```\n\nIn addition, this also enables below use case.\n\n``` javascript\n// conf.js\nmodule.exports = {\n  db_one: \"123.123.123.121\",\n  db_two: \"123.123.123.122\",\n  db_three: \"123.123.123.123\",\n  db_four: \"123.123.123.124\",\n};\n```\n\n``` javascript\n// during app configuration\napp.set(require('./conf'));\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1333/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1333/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1332",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1332/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1332/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1332/events",
    "html_url": "https://github.com/expressjs/express/pull/1332",
    "id": 6901811,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM1NDMzNg==",
    "number": 1332,
    "title": "Fix cjk filename issue",
    "user": {
      "login": "leeight",
      "id": 104052,
      "node_id": "MDQ6VXNlcjEwNDA1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/104052?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leeight",
      "html_url": "https://github.com/leeight",
      "followers_url": "https://api.github.com/users/leeight/followers",
      "following_url": "https://api.github.com/users/leeight/following{/other_user}",
      "gists_url": "https://api.github.com/users/leeight/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leeight/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leeight/subscriptions",
      "organizations_url": "https://api.github.com/users/leeight/orgs",
      "repos_url": "https://api.github.com/users/leeight/repos",
      "events_url": "https://api.github.com/users/leeight/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leeight/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55587817,
        "node_id": "MDU6TGFiZWw1NTU4NzgxNw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/needs%20tests",
        "name": "needs tests",
        "color": "e11d21",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2012-09-16T09:07:41Z",
    "updated_at": "2014-06-29T13:07:22Z",
    "closed_at": "2013-11-28T02:10:06Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1332",
      "html_url": "https://github.com/expressjs/express/pull/1332",
      "diff_url": "https://github.com/expressjs/express/pull/1332.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1332.patch",
      "merged_at": null
    },
    "body": "@see http://php.net/manual/en/rar.examples.php\n@see http://greenbytes.de/tech/tc2231/#attwithfnrawpctenclong\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1332/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1332/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1331",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1331/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1331/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1331/events",
    "html_url": "https://github.com/expressjs/express/issues/1331",
    "id": 6898622,
    "node_id": "MDU6SXNzdWU2ODk4NjIy",
    "number": 1331,
    "title": "URIError: URI Malformed",
    "user": {
      "login": "eknkc",
      "id": 1248453,
      "node_id": "MDQ6VXNlcjEyNDg0NTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1248453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eknkc",
      "html_url": "https://github.com/eknkc",
      "followers_url": "https://api.github.com/users/eknkc/followers",
      "following_url": "https://api.github.com/users/eknkc/following{/other_user}",
      "gists_url": "https://api.github.com/users/eknkc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eknkc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eknkc/subscriptions",
      "organizations_url": "https://api.github.com/users/eknkc/orgs",
      "repos_url": "https://api.github.com/users/eknkc/repos",
      "events_url": "https://api.github.com/users/eknkc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eknkc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2012-09-15T22:00:25Z",
    "updated_at": "2013-01-01T19:47:44Z",
    "closed_at": "2013-01-01T19:47:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Lately, we have a lot of errors logged, like this;\n\n```\nURIError: URI malformed\n    at decodeURIComponent (native)\n    at parse (/srv/node/stable/node_modules/express/node_modules/cookie/index.js:46:24)\n    at Array.forEach (native)\n    at Object.parse (/srv/node/stable/node_modules/express/node_modules/cookie/index.js:34:11)\n```\n\nThis is related to a malformed cookie, being fed into decodeURIComponent of cookie middleware. I don't know the reason of the malformed cookie, nor argue that cookie middleware is broken. \n\nHowever, Express should just ignore such a problem and go with it, ignoring that cookie alltogether. For what it's worth, an included javascript (say, google analytics), a custom cookie, or a browser in mental meltdown (ie..) could trigger such an issue.\n\nI could replicate it by sending this header;\n\n```\nCookie: a=%\n```\n\nThanks.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1331/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1331/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1330",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1330/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1330/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1330/events",
    "html_url": "https://github.com/expressjs/express/pull/1330",
    "id": 6895537,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM1MjQ0Mg==",
    "number": 1330,
    "title": "FIX cjk-filename-issue in res.attachment",
    "user": {
      "login": "leeight",
      "id": 104052,
      "node_id": "MDQ6VXNlcjEwNDA1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/104052?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leeight",
      "html_url": "https://github.com/leeight",
      "followers_url": "https://api.github.com/users/leeight/followers",
      "following_url": "https://api.github.com/users/leeight/following{/other_user}",
      "gists_url": "https://api.github.com/users/leeight/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leeight/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leeight/subscriptions",
      "organizations_url": "https://api.github.com/users/leeight/orgs",
      "repos_url": "https://api.github.com/users/leeight/repos",
      "events_url": "https://api.github.com/users/leeight/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leeight/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-09-15T14:12:29Z",
    "updated_at": "2012-09-16T09:06:59Z",
    "closed_at": "2012-09-16T09:06:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1330",
      "html_url": "https://github.com/expressjs/express/pull/1330",
      "diff_url": "https://github.com/expressjs/express/pull/1330.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1330.patch",
      "merged_at": null
    },
    "body": "the `res.attachment` function didn't set the correct response header, and this is only an minor fix.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1330/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1330/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1329",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1329/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1329/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1329/events",
    "html_url": "https://github.com/expressjs/express/issues/1329",
    "id": 6887617,
    "node_id": "MDU6SXNzdWU2ODg3NjE3",
    "number": 1329,
    "title": "No viable replacement for dynamic helpers in 3.x (Sometimes middleware don't cut it)",
    "user": {
      "login": "cozmo",
      "id": 696340,
      "node_id": "MDQ6VXNlcjY5NjM0MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/696340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozmo",
      "html_url": "https://github.com/cozmo",
      "followers_url": "https://api.github.com/users/cozmo/followers",
      "following_url": "https://api.github.com/users/cozmo/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozmo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozmo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozmo/subscriptions",
      "organizations_url": "https://api.github.com/users/cozmo/orgs",
      "repos_url": "https://api.github.com/users/cozmo/repos",
      "events_url": "https://api.github.com/users/cozmo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozmo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-09-14T21:23:58Z",
    "updated_at": "2012-09-27T17:44:08Z",
    "closed_at": "2012-09-27T17:44:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The middleware + res.locals paradigm in 3.x is much cleaner than the spread of functionality in 2.x. Unfortunately there is a major difference between middleware + res.locals and dynamic helpers. Dynamic helpers were only called during a render, where as middleware is called on every request. \n\nThe flow I have currently in our 2.x app is\n\n```\n1. Form is submitted. \n2. Form handler takes the form, writes errors, and other information concerning the data to the session. \n3. Redirected once to twice to other pages \n4. Redirected to the \"Submitted\" page\n5. Dynamic helper gets called, reads the session data, and clears it. The data is used to display the   page.\n6. If the user refreshes, they don't see the data anymore, because it has been cleared. This is as   planned. \n```\n\nThe problem with using middleware + res.locals for this is that res.locals are confined to the current request, so they get lost at steps 2 and 3. \n\nIs there anyway to invoke a function only when render is called? This is missed functionality. \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1329/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1329/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1328",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1328/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1328/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1328/events",
    "html_url": "https://github.com/expressjs/express/issues/1328",
    "id": 6878797,
    "node_id": "MDU6SXNzdWU2ODc4Nzk3",
    "number": 1328,
    "title": "responseTime() appears broken in Express 3",
    "user": {
      "login": "chadlung",
      "id": 338981,
      "node_id": "MDQ6VXNlcjMzODk4MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/338981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chadlung",
      "html_url": "https://github.com/chadlung",
      "followers_url": "https://api.github.com/users/chadlung/followers",
      "following_url": "https://api.github.com/users/chadlung/following{/other_user}",
      "gists_url": "https://api.github.com/users/chadlung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chadlung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chadlung/subscriptions",
      "organizations_url": "https://api.github.com/users/chadlung/orgs",
      "repos_url": "https://api.github.com/users/chadlung/repos",
      "events_url": "https://api.github.com/users/chadlung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chadlung/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2012-09-14T15:27:17Z",
    "updated_at": "2012-09-14T15:49:46Z",
    "closed_at": "2012-09-14T15:34:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm using Connect's responseTime() in an Express project.  Works fine under the Express 2.x versions but under the 3.x branch it never sets the response time in the headers like it used to.  The Connect logger (as an example) works, responseTime doesn't.\n\nSample Code to Repro:\n\nvar express = require('express');\nvar app = express();\n\napp.get('/', function(request, response) {\n    response.send('Hello World');\n});\n\napp.configure(function(){\n    app.use(express.responseTime());\n    app.use(express.logger());\n});\n\nconsole.log('Starting server...')\napp.listen(8080);\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1328/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1328/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1327",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1327/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1327/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1327/events",
    "html_url": "https://github.com/expressjs/express/issues/1327",
    "id": 6869764,
    "node_id": "MDU6SXNzdWU2ODY5NzY0",
    "number": 1327,
    "title": "Improve efficiency of route look up algorithm",
    "user": {
      "login": "alvinsw",
      "id": 2344573,
      "node_id": "MDQ6VXNlcjIzNDQ1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2344573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alvinsw",
      "html_url": "https://github.com/alvinsw",
      "followers_url": "https://api.github.com/users/alvinsw/followers",
      "following_url": "https://api.github.com/users/alvinsw/following{/other_user}",
      "gists_url": "https://api.github.com/users/alvinsw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alvinsw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alvinsw/subscriptions",
      "organizations_url": "https://api.github.com/users/alvinsw/orgs",
      "repos_url": "https://api.github.com/users/alvinsw/repos",
      "events_url": "https://api.github.com/users/alvinsw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alvinsw/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-09-14T08:00:48Z",
    "updated_at": "2012-09-14T15:36:35Z",
    "closed_at": "2012-09-14T15:36:35Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Currently, the route look up process is linear:\n\n```\n// routes for this method\nif (routes = routes[method]) {\n  // matching routes\n  for (var len = routes.length; i < len; ++i) {\n    route = routes[i];\n    if (route.match(path)) {\n      req._route_index = i;\n      return route;\n    }\n  }\n}\n```\n\nDoes anyone ever consider a more efficient look up method?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1327/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1327/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1326",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1326/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1326/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1326/events",
    "html_url": "https://github.com/expressjs/express/issues/1326",
    "id": 6782695,
    "node_id": "MDU6SXNzdWU2NzgyNjk1",
    "number": 1326,
    "title": "express.compress Streaming",
    "user": {
      "login": "ZacS803",
      "id": 1908251,
      "node_id": "MDQ6VXNlcjE5MDgyNTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1908251?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ZacS803",
      "html_url": "https://github.com/ZacS803",
      "followers_url": "https://api.github.com/users/ZacS803/followers",
      "following_url": "https://api.github.com/users/ZacS803/following{/other_user}",
      "gists_url": "https://api.github.com/users/ZacS803/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ZacS803/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ZacS803/subscriptions",
      "organizations_url": "https://api.github.com/users/ZacS803/orgs",
      "repos_url": "https://api.github.com/users/ZacS803/repos",
      "events_url": "https://api.github.com/users/ZacS803/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ZacS803/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-09-11T07:04:02Z",
    "updated_at": "2013-08-12T12:05:49Z",
    "closed_at": "2012-09-27T17:44:36Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am using express v 3.0.0rc4\n\nI am using the express.compress middleware:\napp.configure(function() {\n    //Gzip Compression\n    app.use(express.compress());\n......\n});\n\nI am having issues when I attempt to use it for a Comet Streaming connection, The connection opens and the response headers are set (including Content-Encoding : gzip) but no content is sent down the connection.\n\nI set my response headers with:\nresponse.set({\n        'Content-Type': 'application/json',\n        'Cache-Control': 'no-cache',\n        'Connection': 'keep-alive'\n    });\n\nIt appears that on a response.end data is sent, but nothing on a response.write.\n\nIs there anything that I am doing wrong here, or is this a bug?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1326/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1326/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1325",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1325/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1325/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1325/events",
    "html_url": "https://github.com/expressjs/express/pull/1325",
    "id": 6769115,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjI5NjUxOQ==",
    "number": 1325,
    "title": "Database Support for New Projects",
    "user": {
      "login": "yagudaev",
      "id": 1386966,
      "node_id": "MDQ6VXNlcjEzODY5NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1386966?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yagudaev",
      "html_url": "https://github.com/yagudaev",
      "followers_url": "https://api.github.com/users/yagudaev/followers",
      "following_url": "https://api.github.com/users/yagudaev/following{/other_user}",
      "gists_url": "https://api.github.com/users/yagudaev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yagudaev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yagudaev/subscriptions",
      "organizations_url": "https://api.github.com/users/yagudaev/orgs",
      "repos_url": "https://api.github.com/users/yagudaev/repos",
      "events_url": "https://api.github.com/users/yagudaev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yagudaev/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 24,
    "created_at": "2012-09-10T18:06:01Z",
    "updated_at": "2014-07-08T07:38:07Z",
    "closed_at": "2012-09-12T17:04:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1325",
      "html_url": "https://github.com/expressjs/express/pull/1325",
      "diff_url": "https://github.com/expressjs/express/pull/1325.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1325.patch",
      "merged_at": null
    },
    "body": "Added support for database using the Command Line Interface. It was inspired by the way rails allows you to change the default database from SQLite to anything else. At the moment it only supports mongoDB, but in the future it may have support for any number of database systems.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1325/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1325/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1324",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1324/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1324/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1324/events",
    "html_url": "https://github.com/expressjs/express/issues/1324",
    "id": 6728634,
    "node_id": "MDU6SXNzdWU2NzI4NjM0",
    "number": 1324,
    "title": "the second argument of res.render cannot be a Function type",
    "user": {
      "login": "thynson",
      "id": 895964,
      "node_id": "MDQ6VXNlcjg5NTk2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/895964?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thynson",
      "html_url": "https://github.com/thynson",
      "followers_url": "https://api.github.com/users/thynson/followers",
      "following_url": "https://api.github.com/users/thynson/following{/other_user}",
      "gists_url": "https://api.github.com/users/thynson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thynson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thynson/subscriptions",
      "organizations_url": "https://api.github.com/users/thynson/orgs",
      "repos_url": "https://api.github.com/users/thynson/repos",
      "events_url": "https://api.github.com/users/thynson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thynson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-09-08T03:22:14Z",
    "updated_at": "2012-09-11T16:54:34Z",
    "closed_at": "2012-09-11T16:54:34Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When I call `res.render('index', x)` where `x` is a function with properties attached, template engine cannot recognize it.\n\nThe dumps of `x`:\n\n```\n{ [Function]\n  count: 1,\n  maxPage: 1,\n  posts: \n   [ { source: 'This is a *test* post.',\n       body: '<p>This is a <em>test</em> post.</p>\\n',\n       title: 'Hello world',\n       _id: 50437c3f2a06eead5a000001,\n       __v: 0,\n       comments: [],\n       modifiedDate: Sun Sep 02 2012 23:33:10 GMT+0800 (CST),\n       createdDate: Sun Sep 02 2012 23:33:10 GMT+0800 (CST) } ],\n  title: 'Hello world',\n  page: 1,\n  startPage: 1,\n  endPage: 1 }\n```\n\nEnds up with exception raised.\n\n```\nException in GET /:  { [ReferenceError: /home/thynson/workspace/myapp/views/index.jade:3\n    1| extends page\n    2| block append head\n  > 3|     title= title\n    4| block body\n    5|     each post in posts\n    6|         div.post\n```\n\nCurrently I can pass another normal object which copy all the property of `x` for `res.render` as a work around. But that's just not convinient.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1324/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1324/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1323",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1323/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1323/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1323/events",
    "html_url": "https://github.com/expressjs/express/issues/1323",
    "id": 6724313,
    "node_id": "MDU6SXNzdWU2NzI0MzEz",
    "number": 1323,
    "title": "remove ./routes from generator...",
    "user": {
      "login": "tj",
      "id": 25254,
      "node_id": "MDQ6VXNlcjI1MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tj",
      "html_url": "https://github.com/tj",
      "followers_url": "https://api.github.com/users/tj/followers",
      "following_url": "https://api.github.com/users/tj/following{/other_user}",
      "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
      "organizations_url": "https://api.github.com/users/tj/orgs",
      "repos_url": "https://api.github.com/users/tj/repos",
      "events_url": "https://api.github.com/users/tj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 88345,
        "node_id": "MDU6TGFiZWw4ODM0NQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/3.x",
        "name": "3.x",
        "color": "ededed",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 12,
    "created_at": "2012-09-07T21:03:39Z",
    "updated_at": "2013-11-20T05:29:34Z",
    "closed_at": "2013-11-20T05:29:34Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "too confusing for people\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1323/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1323/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1322",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1322/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1322/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1322/events",
    "html_url": "https://github.com/expressjs/express/issues/1322",
    "id": 6701363,
    "node_id": "MDU6SXNzdWU2NzAxMzYz",
    "number": 1322,
    "title": "sessions with reverse proxy not working",
    "user": {
      "login": "engram-design",
      "id": 1221575,
      "node_id": "MDQ6VXNlcjEyMjE1NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1221575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/engram-design",
      "html_url": "https://github.com/engram-design",
      "followers_url": "https://api.github.com/users/engram-design/followers",
      "following_url": "https://api.github.com/users/engram-design/following{/other_user}",
      "gists_url": "https://api.github.com/users/engram-design/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/engram-design/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/engram-design/subscriptions",
      "organizations_url": "https://api.github.com/users/engram-design/orgs",
      "repos_url": "https://api.github.com/users/engram-design/repos",
      "events_url": "https://api.github.com/users/engram-design/events{/privacy}",
      "received_events_url": "https://api.github.com/users/engram-design/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2012-09-06T22:17:25Z",
    "updated_at": "2012-09-27T17:48:13Z",
    "closed_at": "2012-09-27T17:48:13Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": " I've setup a reverse proxy using Apache to forward api.mydomain.com to localhost:2000 which works just fine.\n\nHowever, the real issue i'm having is in regard to sessions - it seems that the req.session's aren't being stored when querying via api.mydomain.com. Sessions will work just fine visiting from localhost:2000.\n\nI assume this has something to do with the proxied domain...\n\n**server.js**\n\n```\nvar express = require('express'),\n    app = express();\n\napp.enable('trust proxy');\n\napp.configure(function() {\n    app.use(express.bodyParser());\n    app.use(express.methodOverride());\n    app.use(express.cookieParser());\n    app.use(express.session({ secret: 'supersecret'});\n    app.use(function (req, res) {\n        res.send('<h2>Hello, your session id is ' + req.sessionID + '</h2>');\n    });\n\n    app.use(app.router);\n});\n\napp.get('/session', function(req, res, next){ \n    console.log(req.session.username)\n    // this will be undefined when called from  api.mydomain.com...\n});\n\n\napp.post('/session', function(req, res, next){ \n    req.session.username = 'my username';\n});\n```\n\n**apache config**\n\n```\n<VirtualHost *:80>\n    ServerName api.mydomain.com   \n    ProxyPass / http://localhost:2000/\n    ProxyPassReverse / http://localhost:2000/\n</VirtualHost>\n```\n\nSo, after sending a POST request to /session to set the session cookie first, then sending a GET to /session, the output is as below (after 3 consecutive requests).\n\n**localhost:2000**\n\n```\nHello, your session id is sHkkESxJgzOyDhDwyTjwpNzq\nHello, your session id is sHkkESxJgzOyDhDwyTjwpNzq\nHello, your session id is sHkkESxJgzOyDhDwyTjwpNzq\n```\n\n**api.mydomain.com**\n\n```\nHello, your session id is uuo4U5ierZAG8LSH1BdwTlVf\nHello, your session id is 8BxL97Bo35SDt4uliuPgnbia\nHello, your session id is 0xkqZZpzQNvTsQpbJtUlXgkR\n```\n\nObviously the session id isn't being preserved when accessed from api.mydomain.com - am I missing something in my configuration (either Apache or Express?)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1322/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1322/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1321",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1321/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1321/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1321/events",
    "html_url": "https://github.com/expressjs/express/issues/1321",
    "id": 6675653,
    "node_id": "MDU6SXNzdWU2Njc1NjUz",
    "number": 1321,
    "title": "Routing - mixing regex and parameters",
    "user": {
      "login": "jonathanong",
      "id": 643505,
      "node_id": "MDQ6VXNlcjY0MzUwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/643505?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanong",
      "html_url": "https://github.com/jonathanong",
      "followers_url": "https://api.github.com/users/jonathanong/followers",
      "following_url": "https://api.github.com/users/jonathanong/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanong/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanong/orgs",
      "repos_url": "https://api.github.com/users/jonathanong/repos",
      "events_url": "https://api.github.com/users/jonathanong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanong/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2012-09-05T23:15:18Z",
    "updated_at": "2012-09-07T04:47:22Z",
    "closed_at": "2012-09-07T04:47:22Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "I have an app with routes like this:\n\n```\napp.get('/page/:slug/comments/:tab?.:format?', getPage, getComments)\napp.get('/post/:slug/comments/:tab?.:format?', getPost, getComments)\n```\n\nHowever, I don't like repeating this for both `page` and `post` (since in my app, there's about 8 root paths that share middlewares). Preferably, I can match `(page|post)`, ie:\n\n```\napp.use('/page', getPage)\napp.use('/post', getPost)\napp.use(app.router)\n\napp.get('/(page|post)/:slug/comments/:tab?.:format?', getComments)\n```\n\nI'd prefer if I can retrieve these params as `req.params.tab` and `req.params.format`. Right now I'm just looping through `['page', 'post']` and defining each route specifically. Before I tried using a parameter as a root path, but that screwed up my routing:\n\n```\napp.get('/:identity/:slug', middleware) // screws up any route afterwards with a variable root path\n```\n\nSuggestions?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1321/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1321/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1320",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1320/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1320/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1320/events",
    "html_url": "https://github.com/expressjs/express/issues/1320",
    "id": 6651728,
    "node_id": "MDU6SXNzdWU2NjUxNzI4",
    "number": 1320,
    "title": "Routing - using an asterisk with a question mark",
    "user": {
      "login": "jonathanong",
      "id": 643505,
      "node_id": "MDQ6VXNlcjY0MzUwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/643505?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanong",
      "html_url": "https://github.com/jonathanong",
      "followers_url": "https://api.github.com/users/jonathanong/followers",
      "following_url": "https://api.github.com/users/jonathanong/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanong/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanong/orgs",
      "repos_url": "https://api.github.com/users/jonathanong/repos",
      "events_url": "https://api.github.com/users/jonathanong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanong/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2012-09-05T03:06:41Z",
    "updated_at": "2012-09-05T04:05:39Z",
    "closed_at": "2012-09-05T03:45:33Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Is there a way to make an asterisk optional? For example:\n\n```\napp.get('/post/123123/*?', middleware)\n```\n\nSo that it matches both `/post/123123/` and well as `/post/123123/comments`. Right now I'm resorting to calling two routes, which kind fo sucks.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1320/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1320/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1319",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1319/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1319/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1319/events",
    "html_url": "https://github.com/expressjs/express/pull/1319",
    "id": 6643673,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjI0MzU5Mw==",
    "number": 1319,
    "title": "typo",
    "user": {
      "login": "pyrotechnick",
      "id": 13998,
      "node_id": "MDQ6VXNlcjEzOTk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/13998?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pyrotechnick",
      "html_url": "https://github.com/pyrotechnick",
      "followers_url": "https://api.github.com/users/pyrotechnick/followers",
      "following_url": "https://api.github.com/users/pyrotechnick/following{/other_user}",
      "gists_url": "https://api.github.com/users/pyrotechnick/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pyrotechnick/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pyrotechnick/subscriptions",
      "organizations_url": "https://api.github.com/users/pyrotechnick/orgs",
      "repos_url": "https://api.github.com/users/pyrotechnick/repos",
      "events_url": "https://api.github.com/users/pyrotechnick/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pyrotechnick/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-09-04T19:20:54Z",
    "updated_at": "2014-06-26T19:52:05Z",
    "closed_at": "2012-09-04T19:50:46Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1319",
      "html_url": "https://github.com/expressjs/express/pull/1319",
      "diff_url": "https://github.com/expressjs/express/pull/1319.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1319.patch",
      "merged_at": "2012-09-04T19:50:46Z"
    },
    "body": "http -> https\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1319/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1319/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1318",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1318/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1318/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1318/events",
    "html_url": "https://github.com/expressjs/express/issues/1318",
    "id": 6632712,
    "node_id": "MDU6SXNzdWU2NjMyNzEy",
    "number": 1318,
    "title": "decodeURIComponent breaks app for \"Malformed URLs\"",
    "user": {
      "login": "marcelklehr",
      "id": 986878,
      "node_id": "MDQ6VXNlcjk4Njg3OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/986878?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcelklehr",
      "html_url": "https://github.com/marcelklehr",
      "followers_url": "https://api.github.com/users/marcelklehr/followers",
      "following_url": "https://api.github.com/users/marcelklehr/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcelklehr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcelklehr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcelklehr/subscriptions",
      "organizations_url": "https://api.github.com/users/marcelklehr/orgs",
      "repos_url": "https://api.github.com/users/marcelklehr/repos",
      "events_url": "https://api.github.com/users/marcelklehr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcelklehr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 14,
    "created_at": "2012-09-04T11:59:25Z",
    "updated_at": "2014-02-11T14:38:01Z",
    "closed_at": "2012-10-02T18:05:20Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Pita/etherpad-lite#964:\n\n> If I use a encoded URL, which includes a character from the ISO/IEC 8859-1 Table that is above 7F, Etherpad lite will crash.\n\n(cropped) stack trace:\n\n```\n[2012-08-30 08:31:36.129] [ERROR] console - URIError: URI malformed\nat decodeURIComponent (native)\nat Router._match (/usr/local/etherpad-lite/src/node_modules/express/lib/router/index.js:354:17)\nat pass (/usr/local/etherpad-lite/src/node_modules/express/lib/router/index.js:213:30)\nat Router._dispatch (/usr/local/etherpad-lite/src/node_modules/express/lib/router/index.js:280:5)\n```\n\nI know this is node.js' built-in method throwing, but I don't want my app to crash when this happens!\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1318/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1318/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1317",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1317/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1317/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1317/events",
    "html_url": "https://github.com/expressjs/express/issues/1317",
    "id": 6623416,
    "node_id": "MDU6SXNzdWU2NjIzNDE2",
    "number": 1317,
    "title": "Error on redirects with Accept: application/octet-stream ",
    "user": {
      "login": "eknkc",
      "id": 1248453,
      "node_id": "MDQ6VXNlcjEyNDg0NTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1248453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eknkc",
      "html_url": "https://github.com/eknkc",
      "followers_url": "https://api.github.com/users/eknkc/followers",
      "following_url": "https://api.github.com/users/eknkc/following{/other_user}",
      "gists_url": "https://api.github.com/users/eknkc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eknkc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eknkc/subscriptions",
      "organizations_url": "https://api.github.com/users/eknkc/orgs",
      "repos_url": "https://api.github.com/users/eknkc/repos",
      "events_url": "https://api.github.com/users/eknkc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eknkc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2012-09-03T22:42:39Z",
    "updated_at": "2012-09-03T23:18:14Z",
    "closed_at": "2012-09-03T23:17:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\n\nI stumbled upon this bug on rc4, with a clean express installation and this server:\n\n``` js\nvar express = require(\"express\");\nvar app = express();\n\napp.get(\"/test\", function(req, res) {\n        res.redirect(\"http://www.google.com\");\n});\n\napp.listen(3000);\n```\n\nIt sends the `Location` header to google in normal operation.\n\nHowever, when I request `/test` with `Accept: application/octet-stream` header, this is printed on the stdout:\n\n```\nTypeError: Object #<Object> has no method 'default'\n    at ServerResponse.res.format (/Users/imac/Documents/Projects/Temp/node_modules/express/lib/response.js:467:13)\n    at ServerResponse.res.redirect (/Users/imac/Documents/Projects/Temp/node_modules/express/lib/response.js:659:8)\n    at /Users/imac/Documents/Projects/Temp/express/app.js:5:6\n    at callbacks (/Users/imac/Documents/Projects/Temp/node_modules/express/lib/router/index.js:162:11)\n    at param (/Users/imac/Documents/Projects/Temp/node_modules/express/lib/router/index.js:136:11)\n    at pass (/Users/imac/Documents/Projects/Temp/node_modules/express/lib/router/index.js:143:5)\n    at Router._dispatch (/Users/imac/Documents/Projects/Temp/node_modules/express/lib/router/index.js:170:5)\n    at Object.router (/Users/imac/Documents/Projects/Temp/node_modules/express/lib/router/index.js:33:10)\n    at next (/Users/imac/Documents/Projects/Temp/node_modules/express/node_modules/connect/lib/proto.js:190:15)\n    at Object.expressInit [as handle] (/Users/imac/Documents/Projects/Temp/node_modules/express/lib/middleware.js:31:5)\n```\n\nAnd I receive an HTTP 500 error.\n\nI believe this has something to do woth the `response.format` method, handling \"default\" as `application/octet-stream` somehow.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1317/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1317/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1316",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1316/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1316/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1316/events",
    "html_url": "https://github.com/expressjs/express/issues/1316",
    "id": 6621511,
    "node_id": "MDU6SXNzdWU2NjIxNTEx",
    "number": 1316,
    "title": "\"Invalid JSON\" on get with application/json content-type",
    "user": {
      "login": "jhouchard",
      "id": 2272643,
      "node_id": "MDQ6VXNlcjIyNzI2NDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2272643?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jhouchard",
      "html_url": "https://github.com/jhouchard",
      "followers_url": "https://api.github.com/users/jhouchard/followers",
      "following_url": "https://api.github.com/users/jhouchard/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhouchard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jhouchard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhouchard/subscriptions",
      "organizations_url": "https://api.github.com/users/jhouchard/orgs",
      "repos_url": "https://api.github.com/users/jhouchard/repos",
      "events_url": "https://api.github.com/users/jhouchard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jhouchard/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2012-09-03T19:40:37Z",
    "updated_at": "2013-12-21T05:37:49Z",
    "closed_at": "2012-09-03T21:18:12Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Installed latest stable node (v0.8.8) and express (3.0.0rc4) on Unbutu.  Followed example to auto-create basic \"app\" using express (i.e. express myApp).\n\nSetting Content-Type:application/json in header  breaks http get service.   Error below.   I am using the google advanced rest client to test services.  This worked correctly on earlier versions of express reporting 200 or 404 as appropriate to http get invocation.   Setting Content-Type:text/plan or apparently anything else besides application/json,  makes get work correctly.   Similar error for any undefined URL whereas in prior versions express correctly returned 404 and reported back the unknown URL when application/json used.\n\nRealize this may be a non-standard header on a get request but since the outgoing body is empty, this should not be an error (400 bad request)-- believe it should be ignored like the other Content-Types are apparently on get. \n\n-----Error OUTPUT attempting get on /users (from example app).  Content-Type:application/json----\n\nError: invalid json\n    at Object.exports.error (/home/jhou/NODE/BUG_TEST/bugApp/node_modules/express/node_modules/connect/lib/utils.js:44:13)\n    at IncomingMessage.module.exports (/home/jhou/NODE/BUG_TEST/bugApp/node_modules/express/node_modules/connect/lib/middleware/json.js:68:73)\n    at IncomingMessage.EventEmitter.emit (events.js:85:17)\n    at IncomingMessage._emitEnd (http.js:366:10)\n    at HTTPParser.parserOnMessageComplete [as onMessageComplete](http.js:149:23)\n    at Socket.socket.ondata (http.js:1690:22)\n    at TCP.onread (net.js:402:27)\nGET /users 400 2ms\n\n----OUTPUT setting Content-Type:text/plain\n200 (ok)\nrespond with a resource\n----AS example intended\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1316/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1316/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1315",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1315/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1315/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1315/events",
    "html_url": "https://github.com/expressjs/express/issues/1315",
    "id": 6618952,
    "node_id": "MDU6SXNzdWU2NjE4OTUy",
    "number": 1315,
    "title": "remove router array middleware support",
    "user": {
      "login": "tj",
      "id": 25254,
      "node_id": "MDQ6VXNlcjI1MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tj",
      "html_url": "https://github.com/tj",
      "followers_url": "https://api.github.com/users/tj/followers",
      "following_url": "https://api.github.com/users/tj/following{/other_user}",
      "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
      "organizations_url": "https://api.github.com/users/tj/orgs",
      "repos_url": "https://api.github.com/users/tj/repos",
      "events_url": "https://api.github.com/users/tj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2012-09-03T16:09:44Z",
    "updated_at": "2013-02-11T18:48:40Z",
    "closed_at": "2013-02-11T18:48:40Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "currently we support stuff like:\n\n``` js\nvar common = [foo, bar, baz];\napp.get('/something', common, fn);\napp.get('/else', common, fn);\n```\n\nthough personally I don't use this much, let me know if you do\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1315/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1315/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1314",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1314/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1314/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1314/events",
    "html_url": "https://github.com/expressjs/express/issues/1314",
    "id": 6618179,
    "node_id": "MDU6SXNzdWU2NjE4MTc5",
    "number": 1314,
    "title": "session's maxAge dose not work(Express 3.0.0RC4, node.js 0.8.8)",
    "user": {
      "login": "chamsae",
      "id": 2271545,
      "node_id": "MDQ6VXNlcjIyNzE1NDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2271545?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chamsae",
      "html_url": "https://github.com/chamsae",
      "followers_url": "https://api.github.com/users/chamsae/followers",
      "following_url": "https://api.github.com/users/chamsae/following{/other_user}",
      "gists_url": "https://api.github.com/users/chamsae/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chamsae/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chamsae/subscriptions",
      "organizations_url": "https://api.github.com/users/chamsae/orgs",
      "repos_url": "https://api.github.com/users/chamsae/repos",
      "events_url": "https://api.github.com/users/chamsae/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chamsae/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2012-09-03T15:27:12Z",
    "updated_at": "2012-09-03T16:04:28Z",
    "closed_at": "2012-09-03T16:04:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I know English is difficult lang.\nTo get the answer for this problem, but I swear leaves.\n\nThe problem is this.\nCookie's in the session set to the value of 10 \\* 1000 maxAge put 10 seconds are aware that you can access the value stored in the session. Think that the values ​​specific to the session store. And within 10 seconds, I re-request to server by refreshing page. then, In normal situation, I would be get more session maintenance time as 10 seconds.\n\nBut in my case. \nIt does not Increase the time!!!\nEnded after 10 seconds after it is initially stored. I request every second, even.\n\nEnglish has been exposed gained with the help of Google Translator.\nPlease, I hope you understand my situation.\nthis is source link.\nhttps://www.dropbox.com/s/jy4t9f0osblv3c6/SessionTestTimo.zip\n\nwin7 / OSX moutainLion from both tests did in many times.\nExpress project was created by webStrom4.\n\nI will wait answer enthusiastically!\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1314/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1314/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1313",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1313/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1313/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1313/events",
    "html_url": "https://github.com/expressjs/express/issues/1313",
    "id": 6587964,
    "node_id": "MDU6SXNzdWU2NTg3OTY0",
    "number": 1313,
    "title": "req.route.params.VAR not the same as req.param(VAR)",
    "user": {
      "login": "akumpf",
      "id": 243480,
      "node_id": "MDQ6VXNlcjI0MzQ4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/243480?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akumpf",
      "html_url": "https://github.com/akumpf",
      "followers_url": "https://api.github.com/users/akumpf/followers",
      "following_url": "https://api.github.com/users/akumpf/following{/other_user}",
      "gists_url": "https://api.github.com/users/akumpf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akumpf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akumpf/subscriptions",
      "organizations_url": "https://api.github.com/users/akumpf/orgs",
      "repos_url": "https://api.github.com/users/akumpf/repos",
      "events_url": "https://api.github.com/users/akumpf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akumpf/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-08-31T20:12:08Z",
    "updated_at": "2012-09-03T16:10:06Z",
    "closed_at": "2012-09-03T16:10:06Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I had two incoming connections from a client with different urls (essentially, on page refresh, the browser requested two different assets on the server). A param was passed in via the URL path `( http://www.server.com/:objid )`. The requests were for different assets, yet `req.route.params.objid` would always show just the second connection's value (even for the first request!).\n\nUsing `req.param(\"objid\")` solved this. Wondering why `req.route.params` was being clobbered; perhaps legacy code that needs to be pruned.\n\nJust spent far too long debugging this one and wanted to pass it along. May be a bug (at least conceptually).\n\nCheers,\nAdam\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1313/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1313/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1312",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1312/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1312/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1312/events",
    "html_url": "https://github.com/expressjs/express/issues/1312",
    "id": 6571974,
    "node_id": "MDU6SXNzdWU2NTcxOTc0",
    "number": 1312,
    "title": "Nested Routers giving a Range Error",
    "user": {
      "login": "RGBboy",
      "id": 1566539,
      "node_id": "MDQ6VXNlcjE1NjY1Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1566539?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RGBboy",
      "html_url": "https://github.com/RGBboy",
      "followers_url": "https://api.github.com/users/RGBboy/followers",
      "following_url": "https://api.github.com/users/RGBboy/following{/other_user}",
      "gists_url": "https://api.github.com/users/RGBboy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RGBboy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RGBboy/subscriptions",
      "organizations_url": "https://api.github.com/users/RGBboy/orgs",
      "repos_url": "https://api.github.com/users/RGBboy/repos",
      "events_url": "https://api.github.com/users/RGBboy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RGBboy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2012-08-31T06:21:40Z",
    "updated_at": "2012-09-27T17:46:57Z",
    "closed_at": "2012-09-27T17:46:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am trying to nest multiple express apps within each other by pointing an application route to another applications router. It seems to work except I came across some bizzarre behavior that I don't understand. Basically if I nest one application in this way it works as expected. However, if I nest two applications in this way I get a Range Error for the second when navigating outside of its defined routes. This doesn't happen for the first though. From some investigation the router of component2 creates an infinite loop which causes the Range Error).\n\nThe reason I am not mounting the applications with app.use is so that I can make use of the url params (so I can nest an application at /resource/:param\\* etc).\n\nIf anyone knows of a better way to accomplish nested applications with url params please let me know.\n\nHere is the code that produces the phenomenon:\n\n```\nvar app = express();\n\nvar component1 = express();\n\ncomponent1.get('/test1*', function (req, res, next) {\n  console.log('/test1*')\n  next();\n});\n\ncomponent1.get('/test1', function (req, res, next) {\n  console.log('/test1')\n  next();\n})\n\ncomponent1.get('/test1/test', function (req, res, next) {\n  console.log('/test1/test');\n  next();\n})\n\napp.get('*', component1.router);\n\nvar component2 = express();\n\n// Produces an infinite loop to itself if you navigate to /test2/something\ncomponent2.get('/test2*', function (req, res, next) {\n  console.log('/test2*')\n  next();\n});\n\ncomponent2.get('/test2', function (req, res, next) {\n  console.log('/test2')\n  next();\n})\n\ncomponent2.get('/test2/test', function (req, res, next) {\n  console.log('/test2/test');\n  next();\n})\n\napp.get('*', component2.router);\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1312/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1312/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1311",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1311/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1311/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1311/events",
    "html_url": "https://github.com/expressjs/express/issues/1311",
    "id": 6560159,
    "node_id": "MDU6SXNzdWU2NTYwMTU5",
    "number": 1311,
    "title": "Console.log and logger",
    "user": {
      "login": "Freyskeyd",
      "id": 1394604,
      "node_id": "MDQ6VXNlcjEzOTQ2MDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1394604?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Freyskeyd",
      "html_url": "https://github.com/Freyskeyd",
      "followers_url": "https://api.github.com/users/Freyskeyd/followers",
      "following_url": "https://api.github.com/users/Freyskeyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/Freyskeyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Freyskeyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Freyskeyd/subscriptions",
      "organizations_url": "https://api.github.com/users/Freyskeyd/orgs",
      "repos_url": "https://api.github.com/users/Freyskeyd/repos",
      "events_url": "https://api.github.com/users/Freyskeyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Freyskeyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2012-08-30T17:51:20Z",
    "updated_at": "2012-08-30T21:20:59Z",
    "closed_at": "2012-08-30T21:20:36Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi!\n\ni've just a little question about logger.\n\ni've made a log file with logger just with that  :\n\n``` javascript\nvar fs = require('fs');\n\nfs.createWriteStream('./logfile.log',{flags:'a'});\n\napp.configure(...,{\napp.use(express.logger({format:'default',stream:logFile});\n```\n\nbut all my console.log is missed from the log file.\nHow can i put them in?\n\nThank's :)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1311/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1311/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1310",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1310/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1310/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1310/events",
    "html_url": "https://github.com/expressjs/express/issues/1310",
    "id": 6555707,
    "node_id": "MDU6SXNzdWU2NTU1NzA3",
    "number": 1310,
    "title": "Invalid ETAG by default",
    "user": {
      "login": "AndrewForth",
      "id": 2249147,
      "node_id": "MDQ6VXNlcjIyNDkxNDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2249147?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AndrewForth",
      "html_url": "https://github.com/AndrewForth",
      "followers_url": "https://api.github.com/users/AndrewForth/followers",
      "following_url": "https://api.github.com/users/AndrewForth/following{/other_user}",
      "gists_url": "https://api.github.com/users/AndrewForth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AndrewForth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AndrewForth/subscriptions",
      "organizations_url": "https://api.github.com/users/AndrewForth/orgs",
      "repos_url": "https://api.github.com/users/AndrewForth/repos",
      "events_url": "https://api.github.com/users/AndrewForth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AndrewForth/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-08-30T15:04:24Z",
    "updated_at": "2012-08-30T15:49:56Z",
    "closed_at": "2012-08-30T15:49:55Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The ETAG headers that are generated by default in Express (i.e. I am not explicitly setting the ETAG header in my code) is resulting in a warning in Fiddler Web Debugging Proxy that \"The ETAG header value MUST be a quoted-string\". The ETAG that is being returned in the response is an integer, and apparently unquoted. I would explicitly set the ETAG header with a quoted string except that I don't want my code to be responsible for generating the ETAG. Basically, I just want the value that's generated by Express to be quoted instead of an unquoted integer.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1310/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1310/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1309",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1309/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1309/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1309/events",
    "html_url": "https://github.com/expressjs/express/pull/1309",
    "id": 6533203,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjE5NTY3Mg==",
    "number": 1309,
    "title": "fix error-pages 404 status",
    "user": {
      "login": "nickjj",
      "id": 813219,
      "node_id": "MDQ6VXNlcjgxMzIxOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/813219?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nickjj",
      "html_url": "https://github.com/nickjj",
      "followers_url": "https://api.github.com/users/nickjj/followers",
      "following_url": "https://api.github.com/users/nickjj/following{/other_user}",
      "gists_url": "https://api.github.com/users/nickjj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nickjj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nickjj/subscriptions",
      "organizations_url": "https://api.github.com/users/nickjj/orgs",
      "repos_url": "https://api.github.com/users/nickjj/repos",
      "events_url": "https://api.github.com/users/nickjj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nickjj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-08-29T17:32:17Z",
    "updated_at": "2014-08-04T21:50:20Z",
    "closed_at": "2012-08-29T17:42:42Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1309",
      "html_url": "https://github.com/expressjs/express/pull/1309",
      "diff_url": "https://github.com/expressjs/express/pull/1309.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1309.patch",
      "merged_at": "2012-08-29T17:42:42Z"
    },
    "body": "Moved the res.status(404) above the if statement so it gets applied to every accept header.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1309/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1309/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1308",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1308/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1308/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1308/events",
    "html_url": "https://github.com/expressjs/express/issues/1308",
    "id": 6508458,
    "node_id": "MDU6SXNzdWU2NTA4NDU4",
    "number": 1308,
    "title": "update --ejs",
    "user": {
      "login": "tj",
      "id": 25254,
      "node_id": "MDQ6VXNlcjI1MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tj",
      "html_url": "https://github.com/tj",
      "followers_url": "https://api.github.com/users/tj/followers",
      "following_url": "https://api.github.com/users/tj/following{/other_user}",
      "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
      "organizations_url": "https://api.github.com/users/tj/orgs",
      "repos_url": "https://api.github.com/users/tj/repos",
      "events_url": "https://api.github.com/users/tj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-08-28T19:43:54Z",
    "updated_at": "2012-08-28T19:45:45Z",
    "closed_at": "2012-08-28T19:45:45Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "no longer use `body`\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1308/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1308/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1307",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1307/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1307/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1307/events",
    "html_url": "https://github.com/expressjs/express/issues/1307",
    "id": 6503220,
    "node_id": "MDU6SXNzdWU2NTAzMjIw",
    "number": 1307,
    "title": "res.json to opt-in to jsonp callbacks",
    "user": {
      "login": "tj",
      "id": 25254,
      "node_id": "MDQ6VXNlcjI1MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tj",
      "html_url": "https://github.com/tj",
      "followers_url": "https://api.github.com/users/tj/followers",
      "following_url": "https://api.github.com/users/tj/following{/other_user}",
      "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
      "organizations_url": "https://api.github.com/users/tj/orgs",
      "repos_url": "https://api.github.com/users/tj/repos",
      "events_url": "https://api.github.com/users/tj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 88345,
        "node_id": "MDU6TGFiZWw4ODM0NQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/3.x",
        "name": "3.x",
        "color": "ededed",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 13,
    "created_at": "2012-08-28T16:14:30Z",
    "updated_at": "2012-08-30T16:31:29Z",
    "closed_at": "2012-08-30T16:30:13Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "contemplating this but I almost feel like jsonp is pretty useless now with cors, at least it will be soon, I'll leave this as a thought for now, or explicitly via some `res.jsonp()` variant. not to self: update site / examples / migration guide\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1307/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1307/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1306",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1306/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1306/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1306/events",
    "html_url": "https://github.com/expressjs/express/issues/1306",
    "id": 6502900,
    "node_id": "MDU6SXNzdWU2NTAyOTAw",
    "number": 1306,
    "title": "Errors in example of res.status()",
    "user": {
      "login": "evanp",
      "id": 6770,
      "node_id": "MDQ6VXNlcjY3NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6770?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/evanp",
      "html_url": "https://github.com/evanp",
      "followers_url": "https://api.github.com/users/evanp/followers",
      "following_url": "https://api.github.com/users/evanp/following{/other_user}",
      "gists_url": "https://api.github.com/users/evanp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/evanp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/evanp/subscriptions",
      "organizations_url": "https://api.github.com/users/evanp/orgs",
      "repos_url": "https://api.github.com/users/evanp/repos",
      "events_url": "https://api.github.com/users/evanp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/evanp/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2012-08-28T16:01:30Z",
    "updated_at": "2012-08-28T16:43:25Z",
    "closed_at": "2012-08-28T16:15:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The example for res.status() at http://expressjs.com/api.html#res.status is this:\n\n req.status(204).sendfile('path/to/404.png');\n\nIt uses \"req\" as the example object, which is technically possible (no reason you _couldn't_ call a response \"req\") but insanely confusing.\n\nAlso, it shows setting the status to 204 No Content, and then sending content. Not only that, but the content seems to be \"404.png\", which suggests another kind of status code altogether.\n\nUnless there's really a reason to fuck with implementers' heads, I recommend this simpler example instead:\n\n res.status(404).sendfile('path/to/404.png');\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1306/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1306/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1305",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1305/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1305/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1305/events",
    "html_url": "https://github.com/expressjs/express/issues/1305",
    "id": 6455626,
    "node_id": "MDU6SXNzdWU2NDU1NjI2",
    "number": 1305,
    "title": "Nodebootstrap",
    "user": {
      "login": "inadarei",
      "id": 30158,
      "node_id": "MDQ6VXNlcjMwMTU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/30158?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/inadarei",
      "html_url": "https://github.com/inadarei",
      "followers_url": "https://api.github.com/users/inadarei/followers",
      "following_url": "https://api.github.com/users/inadarei/following{/other_user}",
      "gists_url": "https://api.github.com/users/inadarei/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/inadarei/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/inadarei/subscriptions",
      "organizations_url": "https://api.github.com/users/inadarei/orgs",
      "repos_url": "https://api.github.com/users/inadarei/repos",
      "events_url": "https://api.github.com/users/inadarei/events{/privacy}",
      "received_events_url": "https://api.github.com/users/inadarei/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2012-08-26T00:31:18Z",
    "updated_at": "2012-08-27T23:58:30Z",
    "closed_at": "2012-08-27T22:11:05Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "A while ago i started https://github.com/inadarei/nodebootstrap to capture some of the common best practices (at least as far as I understand them) of laying out an Express project + startup scripts, example usage of hot reloading, clustering etc.\n\nIn the latest Express, a command-line tool takes similar responsibility. You can bootstrap Express project with, say:\n\n``` bash\n$ express --sessions --css stylus --ejs myapp\n```\n\nwhich is a much more convenient way of bootstrapping.\n\nNodeBootstrap may be doing some of the things that are too much for the built-in app generator (e.g. inclusion of Twitter Bootstrap?) but it does some other things that sound relevant:\n- Clustering support\n- Hot reloading support\n- Configuration management with config.js\n- A bunch of additional configuration management options and startup scripts for Unix systems\n\nIs there any interest in bringing some of those into Express app generator?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1305/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1305/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1304",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1304/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1304/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1304/events",
    "html_url": "https://github.com/expressjs/express/issues/1304",
    "id": 6455431,
    "node_id": "MDU6SXNzdWU2NDU1NDMx",
    "number": 1304,
    "title": "JSONP enabled by default",
    "user": {
      "login": "71104",
      "id": 1778989,
      "node_id": "MDQ6VXNlcjE3Nzg5ODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1778989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/71104",
      "html_url": "https://github.com/71104",
      "followers_url": "https://api.github.com/users/71104/followers",
      "following_url": "https://api.github.com/users/71104/following{/other_user}",
      "gists_url": "https://api.github.com/users/71104/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/71104/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/71104/subscriptions",
      "organizations_url": "https://api.github.com/users/71104/orgs",
      "repos_url": "https://api.github.com/users/71104/repos",
      "events_url": "https://api.github.com/users/71104/events{/privacy}",
      "received_events_url": "https://api.github.com/users/71104/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 37,
    "created_at": "2012-08-25T23:43:18Z",
    "updated_at": "2012-08-30T16:01:38Z",
    "closed_at": "2012-08-28T16:08:52Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "why the hell is JSONP enabled by default??\n\nthat's VERY unsecure if a developer doesn't know about it and leaves it open: JSONP enables cross-origin requests, meaning your server is giving your content away to any other server! this can even lead to sensitive user data disclosure to third parties when used in conjunction with XSS.\n\nplease, set the default JSONP setting to disabled as soon as possible: default Express servers must NOT accept any callback parameter by default, callback parameters must be explicitly examined by the developer on a per-request basis.\n\nthank you.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1304/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1304/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1303",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1303/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1303/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1303/events",
    "html_url": "https://github.com/expressjs/express/pull/1303",
    "id": 6446828,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjE1OTgxNA==",
    "number": 1303,
    "title": "Using latest version of connect",
    "user": {
      "login": "robby",
      "id": 88970,
      "node_id": "MDQ6VXNlcjg4OTcw",
      "avatar_url": "https://avatars.githubusercontent.com/u/88970?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/robby",
      "html_url": "https://github.com/robby",
      "followers_url": "https://api.github.com/users/robby/followers",
      "following_url": "https://api.github.com/users/robby/following{/other_user}",
      "gists_url": "https://api.github.com/users/robby/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/robby/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/robby/subscriptions",
      "organizations_url": "https://api.github.com/users/robby/orgs",
      "repos_url": "https://api.github.com/users/robby/repos",
      "events_url": "https://api.github.com/users/robby/events{/privacy}",
      "received_events_url": "https://api.github.com/users/robby/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-08-24T23:47:03Z",
    "updated_at": "2012-08-28T16:02:41Z",
    "closed_at": "2012-08-28T16:02:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1303",
      "html_url": "https://github.com/expressjs/express/pull/1303",
      "diff_url": "https://github.com/expressjs/express/pull/1303.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1303.patch",
      "merged_at": "2012-08-28T16:02:41Z"
    },
    "body": "Setting explicit version of connect (1.9.2) so npm will pull latest version.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1303/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1303/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1302",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1302/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1302/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1302/events",
    "html_url": "https://github.com/expressjs/express/issues/1302",
    "id": 6444748,
    "node_id": "MDU6SXNzdWU2NDQ0NzQ4",
    "number": 1302,
    "title": "Expressjs.com: web API documentation: no app.use() description",
    "user": {
      "login": "EhevuTov",
      "id": 1071470,
      "node_id": "MDQ6VXNlcjEwNzE0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1071470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EhevuTov",
      "html_url": "https://github.com/EhevuTov",
      "followers_url": "https://api.github.com/users/EhevuTov/followers",
      "following_url": "https://api.github.com/users/EhevuTov/following{/other_user}",
      "gists_url": "https://api.github.com/users/EhevuTov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EhevuTov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EhevuTov/subscriptions",
      "organizations_url": "https://api.github.com/users/EhevuTov/orgs",
      "repos_url": "https://api.github.com/users/EhevuTov/repos",
      "events_url": "https://api.github.com/users/EhevuTov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EhevuTov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-08-24T21:29:39Z",
    "updated_at": "2012-08-24T21:35:34Z",
    "closed_at": "2012-08-24T21:35:34Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "There is no description for app.use() in the API portion of the online docs:\n\nhttp://expressjs.com/api.html#express\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1302/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1302/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1301",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1301/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1301/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1301/events",
    "html_url": "https://github.com/expressjs/express/issues/1301",
    "id": 6405643,
    "node_id": "MDU6SXNzdWU2NDA1NjQz",
    "number": 1301,
    "title": "Strange error handling behavior in v3",
    "user": {
      "login": "al6x",
      "id": 94196,
      "node_id": "MDQ6VXNlcjk0MTk2",
      "avatar_url": "https://avatars.githubusercontent.com/u/94196?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/al6x",
      "html_url": "https://github.com/al6x",
      "followers_url": "https://api.github.com/users/al6x/followers",
      "following_url": "https://api.github.com/users/al6x/following{/other_user}",
      "gists_url": "https://api.github.com/users/al6x/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/al6x/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/al6x/subscriptions",
      "organizations_url": "https://api.github.com/users/al6x/orgs",
      "repos_url": "https://api.github.com/users/al6x/repos",
      "events_url": "https://api.github.com/users/al6x/events{/privacy}",
      "received_events_url": "https://api.github.com/users/al6x/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2012-08-23T11:49:18Z",
    "updated_at": "2012-08-24T22:41:07Z",
    "closed_at": "2012-08-24T22:41:07Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "If you type `/` in browser it will show `hello world` and prints error message to console.\nSo it seems that first called route for `/` and middleware called only after (it prints `3 2` instead of `2 3`). If You remove `/something` route - it will work ok.\nIs it desired behavior or bug?\n\n``` JavaScript\nvar express = require('express');\nvar app = express();\n\napp.get('/something', function(req, res){\n  console.log(1)\n  res.send('something');\n});\n\napp.use(function(req, res, next){  \n  console.log(2)\n  next(new Error('something bad'))\n});\n\napp.get('/', function(req, res){\n  console.log(3)\n  res.send('hello world');\n});\n\napp.listen(3000);\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1301/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1301/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1300",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1300/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1300/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1300/events",
    "html_url": "https://github.com/expressjs/express/issues/1300",
    "id": 6403860,
    "node_id": "MDU6SXNzdWU2NDAzODYw",
    "number": 1300,
    "title": "CRC32 does not exist on crc",
    "user": {
      "login": "npenin",
      "id": 1405160,
      "node_id": "MDQ6VXNlcjE0MDUxNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1405160?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/npenin",
      "html_url": "https://github.com/npenin",
      "followers_url": "https://api.github.com/users/npenin/followers",
      "following_url": "https://api.github.com/users/npenin/following{/other_user}",
      "gists_url": "https://api.github.com/users/npenin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/npenin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/npenin/subscriptions",
      "organizations_url": "https://api.github.com/users/npenin/orgs",
      "repos_url": "https://api.github.com/users/npenin/repos",
      "events_url": "https://api.github.com/users/npenin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/npenin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2012-08-23T10:31:11Z",
    "updated_at": "2012-08-23T18:34:31Z",
    "closed_at": "2012-08-23T15:13:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "if I send a response (with more than 1024B) and I did not set ETag, it tries to call crc32 on an object and crashes (line 138 in response.js). \n\n```\nTypeError: Object #<Object> has no method 'crc32'\n    at ServerResponse.res.send (/home/pi/node/node_modules/express/lib/response.                                                                                        js:138:13)\n    at ServerResponse.res.json (/home/pi/node/node_modules/express/lib/response.                                                                                        js:202:15)\n    at ServerResponse.res.send (/home/pi/node/node_modules/express/lib/response.                                                                                        js:121:21)\n    at list (/home/pi/node/domojs/shopping.jnode:34:8)\n    at TableService.queryEntities.finalCallback (/home/pi/node/node_modules/azur                                                                                        e/lib/services/table/tableservice.js:485:7)\n    at ServiceClient._initDefaultFilter.filter (/home/pi/node/node_modules/azure                                                                                        /lib/services/core/serviceclient.js:496:11)\n    at TableService.queryEntities.processResponseCallback (/home/pi/node/node_mo                                                                                        dules/azure/lib/services/table/tableservice.js:488:5)\n    at Request.ServiceClient._performRequest.self._buildRequestOptions.processRe                                                                                        sponseCallback [as _callback] (/home/pi/node/node_modules/azure/lib/services/cor                                                                                        e/serviceclient.js:195:9)\n    at Request.init.self.callback (/home/pi/node/node_modules/azure/node_modules                                                                                        /request/main.js:120:22)\n    at Request.EventEmitter.emit (events.js:91:17)\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1300/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1300/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1299",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1299/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1299/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1299/events",
    "html_url": "https://github.com/expressjs/express/issues/1299",
    "id": 6391197,
    "node_id": "MDU6SXNzdWU2MzkxMTk3",
    "number": 1299,
    "title": "The \"sockets.io\" not fully functional, has problems",
    "user": {
      "login": "jamlfy",
      "id": 1652887,
      "node_id": "MDQ6VXNlcjE2NTI4ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1652887?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamlfy",
      "html_url": "https://github.com/jamlfy",
      "followers_url": "https://api.github.com/users/jamlfy/followers",
      "following_url": "https://api.github.com/users/jamlfy/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamlfy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamlfy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamlfy/subscriptions",
      "organizations_url": "https://api.github.com/users/jamlfy/orgs",
      "repos_url": "https://api.github.com/users/jamlfy/repos",
      "events_url": "https://api.github.com/users/jamlfy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamlfy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2012-08-22T21:23:25Z",
    "updated_at": "2012-09-09T11:27:44Z",
    "closed_at": "2012-08-22T21:40:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm trying to build a system of sockets ... so\n\n``` javascript\nvar express = require('express'), \n    routes = require('./routes'), \n    http = require('http'), \n    path = require('path'), \n    data = require(path.join(__dirname, 'package.json'));\nvar app = express();\napp.configure(function() {\n    app.set('port', data.port || process.env.PORT);\n    ... my config\n});\nserver = http.createServer(app);\nio = require('socket.io').listen(server); //As says the migration 2.x to 3.x\nio.sockets('connection', routes.connect);\nserver.listen(app.get('port'), function() {\n    console.log(\"Express server listening on port \" + app.get('port'));\n}); \n```\n\nBut fails\n\n``` console\n$ node app.js \n   info  - socket.io started\n\n/var/node/app.js:36\nio.sockets('connection', routes.connect);\n   ^\nTypeError: Property 'sockets' of object #<Manager> is not a function\n    at Object.<anonymous> (/var/node/app.js:36:4)\n    at Module._compile (module.js:449:26)\n    at Object.Module._extensions..js (module.js:467:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Module.runMain (module.js:492:10)\n    at process.startup.processNextTick.process._tickCallback (node.js:244:9)\n```\n\nNot that bad ... however it should work as migration\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1299/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1299/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1298",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1298/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1298/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1298/events",
    "html_url": "https://github.com/expressjs/express/issues/1298",
    "id": 6354031,
    "node_id": "MDU6SXNzdWU2MzU0MDMx",
    "number": 1298,
    "title": "Best Practice for Reusing Templates Now That Partials Are Gone",
    "user": {
      "login": "joemccann",
      "id": 48234,
      "node_id": "MDQ6VXNlcjQ4MjM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/48234?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joemccann",
      "html_url": "https://github.com/joemccann",
      "followers_url": "https://api.github.com/users/joemccann/followers",
      "following_url": "https://api.github.com/users/joemccann/following{/other_user}",
      "gists_url": "https://api.github.com/users/joemccann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joemccann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joemccann/subscriptions",
      "organizations_url": "https://api.github.com/users/joemccann/orgs",
      "repos_url": "https://api.github.com/users/joemccann/repos",
      "events_url": "https://api.github.com/users/joemccann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joemccann/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2012-08-21T15:44:03Z",
    "updated_at": "2012-08-21T15:58:11Z",
    "closed_at": "2012-08-21T15:58:11Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "So I've been trying hack around with `app.locals` to be the conduit for partial templates that were available in Express < 3.0, but it is becoming much too complex.\n\nIf I have a say a `head.ejs` and a `'footer.ejs` that I want to be the `<head>` section and `<footer>` section of every page, but can have dynamic content, such as the `<title>` in the `<head>` section based on the page being rendered.\n\nJust stumped as to the best way of doing this in Express 3.0.x and don't see anything in the examples or tests.\n\nThanks in advance.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1298/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1298/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1297",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1297/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1297/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1297/events",
    "html_url": "https://github.com/expressjs/express/issues/1297",
    "id": 6329610,
    "node_id": "MDU6SXNzdWU2MzI5NjEw",
    "number": 1297,
    "title": "Match accept type exactly",
    "user": {
      "login": "mstade",
      "id": 605731,
      "node_id": "MDQ6VXNlcjYwNTczMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/605731?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mstade",
      "html_url": "https://github.com/mstade",
      "followers_url": "https://api.github.com/users/mstade/followers",
      "following_url": "https://api.github.com/users/mstade/following{/other_user}",
      "gists_url": "https://api.github.com/users/mstade/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mstade/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mstade/subscriptions",
      "organizations_url": "https://api.github.com/users/mstade/orgs",
      "repos_url": "https://api.github.com/users/mstade/repos",
      "events_url": "https://api.github.com/users/mstade/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mstade/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 22,
    "created_at": "2012-08-20T16:24:39Z",
    "updated_at": "2014-03-01T03:22:03Z",
    "closed_at": "2013-09-10T04:54:48Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm probably not quite understanding how to use `request.accepts()` so any input here would be awesome. Basically, I'm trying to write some middleware that only deals with requests where the accept type matches something exactly. Looking at the docs, it seems `request.accepts()` isn't quite useful for this purpose, and I end up having to do this:\n\n```\nvar acceptsType = (req.accepted || []).some(function(type) {\n    return type.value === \"my/type\"\n})\n```\n\nIt's not a huge deal, but if I don't do that, things like `*/*` seems to match, and browsers likes sending that it seems.\n\nIf `request.accepts()` already does this somehow, I'd love to know. If not, I suggest changing the logic of `request.accepts()` so that it returns the actual best match, meaning for a request that has `Accept: */*` it'd actually return `*/*` if that is indeed the best match, rather than the input mime type. Thus, if you then want to do an exact match, the code would look something like:\n\n```\nif (req.accepts(\"application/json\") == \"application/json\") {\n    // Exact match\n}\n```\n\nFor cases when you just want to know if the client accepts the mime type, but isn't necessarily an exact match, just drop the quality check:\n\n```\nif (req.accepts(\"application/json\")) {\n    // Returns */* or whatever the match is, but truthy value anyhow\n}\n```\n\nI'm probably not understanding the `accepts` function correctly, but it seems to me it's pretty much useless whenever a client sends `Accept: */*` and you have to resort to looking through the accepts array. Please do correct me if I'm wrong!\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1297/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1297/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1296",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1296/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1296/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1296/events",
    "html_url": "https://github.com/expressjs/express/issues/1296",
    "id": 6320361,
    "node_id": "MDU6SXNzdWU2MzIwMzYx",
    "number": 1296,
    "title": "sessions prefix - still problem - v3.0.0.rc3",
    "user": {
      "login": "xmen4u",
      "id": 1030439,
      "node_id": "MDQ6VXNlcjEwMzA0Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1030439?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xmen4u",
      "html_url": "https://github.com/xmen4u",
      "followers_url": "https://api.github.com/users/xmen4u/followers",
      "following_url": "https://api.github.com/users/xmen4u/following{/other_user}",
      "gists_url": "https://api.github.com/users/xmen4u/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xmen4u/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xmen4u/subscriptions",
      "organizations_url": "https://api.github.com/users/xmen4u/orgs",
      "repos_url": "https://api.github.com/users/xmen4u/repos",
      "events_url": "https://api.github.com/users/xmen4u/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xmen4u/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2012-08-20T08:23:37Z",
    "updated_at": "2012-09-27T17:46:26Z",
    "closed_at": "2012-09-27T17:46:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm sorry if it's a dupliacate to my last comment @ https://github.com/visionmedia/express/pull/1286 , but i saw that issue is closed. Yet i seem to have that issue using the latest version, despite it's supposed to be fixed.\n\nI've updated express (both for the local project and globaly), \nI'm still having the prefix bug: my code https://gist.github.com/3397357\n\nexpress v: 3.0.0rc3\nnode 0.8.7\n\nsome more info, with DEBUG=connect:redis\nconnect:redis SETEX \"sess:IdsW2EYeX0AZIowXELobsZeT\" ttl:{\"cookie\":{\"originalMaxAge\":null,\"expires\":null,\"httpOnly\":true,\"path\":\"/\"}} %s +0ms\n\nconnect:redis SETEX complete +4ms\n\nprinting the handshake data (console.log(handshakeData.headers);) \ngives: { host: 'local .... ' \n....\n\"cookie\":\"connect.sid=s%3AIdsW2EYeX0AZIowXELobsZeT.ZgA%2FNixR6ZRMnHS8gga2kSYS%2FYhOAupTtQKUAxXP%2BbM\"}\n\nand then when a get from redis happends (it looks for \"sess:s:.... instead of sess:Id...\")\nconnect:redis GET \"sess:s:IdsW2EYeX0AZIowXELobsZeT.ZgA/NixR6ZRMnHS8gga2kSYS/YhOAupTtQKUAxXP+bM\" +5s\n\nkeys in redis:\n1) \"sess:IdsW2EYeX0AZIowXELobsZeT\"\n\nThank you and sorry for duplicating post.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1296/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1296/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1295",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1295/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1295/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1295/events",
    "html_url": "https://github.com/expressjs/express/pull/1295",
    "id": 6318394,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjA5OTA1MQ==",
    "number": 1295,
    "title": "workaround for Object.prototype pollution.",
    "user": {
      "login": "tokuhirom",
      "id": 21084,
      "node_id": "MDQ6VXNlcjIxMDg0",
      "avatar_url": "https://avatars.githubusercontent.com/u/21084?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tokuhirom",
      "html_url": "https://github.com/tokuhirom",
      "followers_url": "https://api.github.com/users/tokuhirom/followers",
      "following_url": "https://api.github.com/users/tokuhirom/following{/other_user}",
      "gists_url": "https://api.github.com/users/tokuhirom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tokuhirom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tokuhirom/subscriptions",
      "organizations_url": "https://api.github.com/users/tokuhirom/orgs",
      "repos_url": "https://api.github.com/users/tokuhirom/repos",
      "events_url": "https://api.github.com/users/tokuhirom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tokuhirom/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-08-20T05:17:54Z",
    "updated_at": "2014-07-30T21:23:58Z",
    "closed_at": "2012-08-20T05:31:05Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1295",
      "html_url": "https://github.com/expressjs/express/pull/1295",
      "diff_url": "https://github.com/expressjs/express/pull/1295.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1295.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1295/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1295/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1294",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1294/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1294/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1294/events",
    "html_url": "https://github.com/expressjs/express/issues/1294",
    "id": 6304941,
    "node_id": "MDU6SXNzdWU2MzA0OTQx",
    "number": 1294,
    "title": "express doesn't handle CORS OPTIONS request",
    "user": {
      "login": "bodokaiser",
      "id": 1780466,
      "node_id": "MDQ6VXNlcjE3ODA0NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1780466?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bodokaiser",
      "html_url": "https://github.com/bodokaiser",
      "followers_url": "https://api.github.com/users/bodokaiser/followers",
      "following_url": "https://api.github.com/users/bodokaiser/following{/other_user}",
      "gists_url": "https://api.github.com/users/bodokaiser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bodokaiser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bodokaiser/subscriptions",
      "organizations_url": "https://api.github.com/users/bodokaiser/orgs",
      "repos_url": "https://api.github.com/users/bodokaiser/repos",
      "events_url": "https://api.github.com/users/bodokaiser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bodokaiser/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2012-08-18T12:03:30Z",
    "updated_at": "2012-08-18T17:09:12Z",
    "closed_at": "2012-08-18T17:03:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\n\nI am trying to do a DELETE request from one domain to another one (both in a express vhost array).\n\nUnfortunately this doesn't work (GET and POST do).\nI checked where the problem can be and found out that the browser (chrome 21) tries to do a OPTIONS request to check the cors policy. This request is somehow getting canceled and doesn't contains the cors settings I defined in app.js\n\nHere are the three ways I tried to set the headers:\n1. using with app.use\n2. using app.all\n3. using app.options\n\n```\nvar express = require('express')\n   , path = require('path');\n\n// initiating app\nvar app = express();\n\n// cors settings\nvar cors = function(req, res, next) {\n    res.header('Access-Control-Allow-Origin', 'http://node.example.com:3000');\n    res.header('Access-Control-Allow-Methods', 'HEAD, GET, POST, PUT, DELETE, OPTIONS');\n    res.header('Access-Control-Allow-Headers', 'Content-Type, X-Requested-With');\n    next();\n};\n\n// app configuration\napp.configure(function() {\n    app.set('views', __dirname + '/views');\n    app.set('view engine', 'jade');\n    //app.use(cors);\n    app.use(express.static(path.join(__dirname, 'public')));\n});\n\napp.all('*', cors);\n// app.options('*', cors);\n\n// loading routes\nrequire('./routes')(app);\n\n// exporting module\nmodule.exports = app;\n```\n\nCan somebody  confirm this?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1294/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1294/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1293",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1293/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1293/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1293/events",
    "html_url": "https://github.com/expressjs/express/issues/1293",
    "id": 6303161,
    "node_id": "MDU6SXNzdWU2MzAzMTYx",
    "number": 1293,
    "title": "subdomains array getting domain name",
    "user": {
      "login": "madcampos",
      "id": 609904,
      "node_id": "MDQ6VXNlcjYwOTkwNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/609904?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/madcampos",
      "html_url": "https://github.com/madcampos",
      "followers_url": "https://api.github.com/users/madcampos/followers",
      "following_url": "https://api.github.com/users/madcampos/following{/other_user}",
      "gists_url": "https://api.github.com/users/madcampos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/madcampos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/madcampos/subscriptions",
      "organizations_url": "https://api.github.com/users/madcampos/orgs",
      "repos_url": "https://api.github.com/users/madcampos/repos",
      "events_url": "https://api.github.com/users/madcampos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/madcampos/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2012-08-18T05:17:53Z",
    "updated_at": "2012-08-18T18:46:43Z",
    "closed_at": "2012-08-18T18:46:43Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "testing on localhost got this results:\n\n> req.host: foo.bar.localhost\n> req.subdomains: [ 'foo' ]\n> \n> req.host: foo.bar.localhost.com\n> req.subdomains: [ 'bar', 'foo' ]\n> \n> req.host: foo.bar.localhost.com.br\n> req.subdomains: [ 'localhost', 'bar', 'foo' ]\n\nsome domains have a second level domain name, so my proposal to the subdomain function is:\n\n``` javascript\nreq.__defineGetter__('subdomains', function(){\n  return this.get('Host')\n    //tests: '.abc', '.ab', '.abc.de' top level domains\n    .replace(/\\.\\w{3}\\.\\w{2}$|\\.\\w{3}$|\\.\\w{2}$/, '')\n    //remove if exists, begining 'www.'\n    .replace(/^www\\./, '')\n    .split('.')\n    .slice(0,-1)\n    .reverse();\n});\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1293/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1293/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1292",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1292/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1292/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1292/events",
    "html_url": "https://github.com/expressjs/express/issues/1292",
    "id": 6297613,
    "node_id": "MDU6SXNzdWU2Mjk3NjEz",
    "number": 1292,
    "title": "expressjs.com is not avaliable",
    "user": {
      "login": "MikeTatsky",
      "id": 1744857,
      "node_id": "MDQ6VXNlcjE3NDQ4NTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1744857?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MikeTatsky",
      "html_url": "https://github.com/MikeTatsky",
      "followers_url": "https://api.github.com/users/MikeTatsky/followers",
      "following_url": "https://api.github.com/users/MikeTatsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/MikeTatsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MikeTatsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MikeTatsky/subscriptions",
      "organizations_url": "https://api.github.com/users/MikeTatsky/orgs",
      "repos_url": "https://api.github.com/users/MikeTatsky/repos",
      "events_url": "https://api.github.com/users/MikeTatsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MikeTatsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2012-08-17T19:56:03Z",
    "updated_at": "2012-08-18T18:53:16Z",
    "closed_at": "2012-08-17T19:57:31Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": " Why http://expressjs.com is not avaliable?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1292/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1292/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1291",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1291/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1291/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1291/events",
    "html_url": "https://github.com/expressjs/express/issues/1291",
    "id": 6293163,
    "node_id": "MDU6SXNzdWU2MjkzMTYz",
    "number": 1291,
    "title": "Handling async errors/exceptions using node's new feature - domain ",
    "user": {
      "login": "jayyvis",
      "id": 1243391,
      "node_id": "MDQ6VXNlcjEyNDMzOTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1243391?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jayyvis",
      "html_url": "https://github.com/jayyvis",
      "followers_url": "https://api.github.com/users/jayyvis/followers",
      "following_url": "https://api.github.com/users/jayyvis/following{/other_user}",
      "gists_url": "https://api.github.com/users/jayyvis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jayyvis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jayyvis/subscriptions",
      "organizations_url": "https://api.github.com/users/jayyvis/orgs",
      "repos_url": "https://api.github.com/users/jayyvis/repos",
      "events_url": "https://api.github.com/users/jayyvis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jayyvis/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2012-08-17T16:18:38Z",
    "updated_at": "2013-12-15T22:55:47Z",
    "closed_at": "2012-08-28T16:16:30Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "If any of the middleware throws an error, express catches and forwards it to error handling middlewares. It works well with synchronous code but once it goes async and an error is thrown, express will not be able to catch it.\n\nI can understand that it's due to the limitation with node where you can't catch an thrown from an async callbacks. Only option is to use process.on('uncaughtException') but that will not have any context and hence useless.\n\nWith the introduction of node's domain objects, I think now we can handle errors thrown from an async callback and route it to error handling middleware's.\n\nhttp://nodejs.org/api/domain.html\n\nHow about making express to execute every request under a domain and handle both sync & async errors thrown ?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1291/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1291/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1290",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1290/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1290/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1290/events",
    "html_url": "https://github.com/expressjs/express/pull/1290",
    "id": 6274735,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjA4MTAzNw==",
    "number": 1290,
    "title": "Added support for coffeescript in the express generator",
    "user": {
      "login": "doboy",
      "id": 1144344,
      "node_id": "MDQ6VXNlcjExNDQzNDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1144344?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/doboy",
      "html_url": "https://github.com/doboy",
      "followers_url": "https://api.github.com/users/doboy/followers",
      "following_url": "https://api.github.com/users/doboy/following{/other_user}",
      "gists_url": "https://api.github.com/users/doboy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/doboy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/doboy/subscriptions",
      "organizations_url": "https://api.github.com/users/doboy/orgs",
      "repos_url": "https://api.github.com/users/doboy/repos",
      "events_url": "https://api.github.com/users/doboy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/doboy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 11,
    "created_at": "2012-08-16T20:43:59Z",
    "updated_at": "2014-06-16T03:10:53Z",
    "closed_at": "2012-08-16T22:37:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1290",
      "html_url": "https://github.com/expressjs/express/pull/1290",
      "diff_url": "https://github.com/expressjs/express/pull/1290.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1290.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1290/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1290/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1289",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1289/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1289/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1289/events",
    "html_url": "https://github.com/expressjs/express/issues/1289",
    "id": 6257173,
    "node_id": "MDU6SXNzdWU2MjU3MTcz",
    "number": 1289,
    "title": "how to serve web page?",
    "user": {
      "login": "craigcosmo",
      "id": 538657,
      "node_id": "MDQ6VXNlcjUzODY1Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/538657?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/craigcosmo",
      "html_url": "https://github.com/craigcosmo",
      "followers_url": "https://api.github.com/users/craigcosmo/followers",
      "following_url": "https://api.github.com/users/craigcosmo/following{/other_user}",
      "gists_url": "https://api.github.com/users/craigcosmo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/craigcosmo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/craigcosmo/subscriptions",
      "organizations_url": "https://api.github.com/users/craigcosmo/orgs",
      "repos_url": "https://api.github.com/users/craigcosmo/repos",
      "events_url": "https://api.github.com/users/craigcosmo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/craigcosmo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2012-08-16T04:55:29Z",
    "updated_at": "2012-08-17T13:29:57Z",
    "closed_at": "2012-08-16T14:54:20Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This little app serves a simple webpage and probably pass some information to it.\n\nMy file structure is as follow\n\nmyapp\n- js\n- css\n- server.js\n- view\n  - home.html\n\n``` javascript\n\nvar app = express();\nvar server = http.createServer(app);\nvar socket = io.listen(server);\n\nsocket.sockets.on('connection', function (socket) {\n  socket.emit('news', { hello: 'world' });\n  socket.on('my other event', function (data) {\n    console.log(data);\n  });\n});\n\napp.set('view', __dirname);\napp.get('/', function(req, res){\n    res.render('home',function(err,html){});\n});\n\napp.listen(4000);\n\n```\n\nWhat happen is I keep getting error \"can not find modules\". I believe my syntax is wrong somewhere. Maybe you can point out for me.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1289/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1289/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1288",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1288/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1288/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1288/events",
    "html_url": "https://github.com/expressjs/express/issues/1288",
    "id": 6240281,
    "node_id": "MDU6SXNzdWU2MjQwMjgx",
    "number": 1288,
    "title": "error in view causes unhelpful error message",
    "user": {
      "login": "ForbesLindesay",
      "id": 1260646,
      "node_id": "MDQ6VXNlcjEyNjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1260646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ForbesLindesay",
      "html_url": "https://github.com/ForbesLindesay",
      "followers_url": "https://api.github.com/users/ForbesLindesay/followers",
      "following_url": "https://api.github.com/users/ForbesLindesay/following{/other_user}",
      "gists_url": "https://api.github.com/users/ForbesLindesay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ForbesLindesay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ForbesLindesay/subscriptions",
      "organizations_url": "https://api.github.com/users/ForbesLindesay/orgs",
      "repos_url": "https://api.github.com/users/ForbesLindesay/repos",
      "events_url": "https://api.github.com/users/ForbesLindesay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ForbesLindesay/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2012-08-15T13:29:32Z",
    "updated_at": "2012-08-15T17:42:08Z",
    "closed_at": "2012-08-15T17:42:08Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "An error in the view leads to the error:\n\n```\nTypeError: undefined is not a function\n    at Function.app.render (C:\\node\\highlight-choice\\node_modules\\express\\lib\\application.js:506:5)\n    at C:\\node\\highlight-choice\\index.js:14:9\n    at callbacks (C:\\node\\highlight-choice\\node_modules\\express\\lib\\router\\index.js:165:11)\n    at param (C:\\node\\highlight-choice\\node_modules\\express\\lib\\router\\index.js:139:11)\n    at pass (C:\\node\\highlight-choice\\node_modules\\express\\lib\\router\\index.js:146:5)\n    at Router._dispatch (C:\\node\\highlight-choice\\node_modules\\express\\lib\\router\\index.js:173:5)\n    at Object.router (C:\\node\\highlight-choice\\node_modules\\express\\lib\\router\\index.js:33:10)\n    at next (C:\\node\\highlight-choice\\node_modules\\express\\node_modules\\connect\\lib\\proto.js:190:15)\n    at SendStream.error (C:\\node\\highlight-choice\\node_modules\\express\\node_modules\\connect\\lib\\middleware\\static.js:67:37)\n    at SendStream.EventEmitter.emit (events.js:115:20)\n```\n\nAlso, not passing an options value causes another nasty exception.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1288/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1288/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1287",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1287/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1287/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1287/events",
    "html_url": "https://github.com/expressjs/express/issues/1287",
    "id": 6239846,
    "node_id": "MDU6SXNzdWU2MjM5ODQ2",
    "number": 1287,
    "title": "setting the open/close template wrapper doesn't seem to work",
    "user": {
      "login": "RobKohr",
      "id": 26756,
      "node_id": "MDQ6VXNlcjI2NzU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/26756?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RobKohr",
      "html_url": "https://github.com/RobKohr",
      "followers_url": "https://api.github.com/users/RobKohr/followers",
      "following_url": "https://api.github.com/users/RobKohr/following{/other_user}",
      "gists_url": "https://api.github.com/users/RobKohr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RobKohr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RobKohr/subscriptions",
      "organizations_url": "https://api.github.com/users/RobKohr/orgs",
      "repos_url": "https://api.github.com/users/RobKohr/repos",
      "events_url": "https://api.github.com/users/RobKohr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RobKohr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2012-08-15T13:04:05Z",
    "updated_at": "2016-03-01T10:49:40Z",
    "closed_at": "2012-08-16T00:42:05Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This was working before the 3.0 release. I use [% %] to wrap my ejs code in templates, and set it with view options like so:\n\n``` javascript\napp.set('views', __dirname + '/views');\napp.set('view engine', 'ejs');\nejs.open = '{{';\nejs.close = '}}';\napp.set('view options', {\n    open: '[%',\n    close: '%]'\n});\napp.engine('.html', require('ejs').renderFile);\n```\n\nbut now it seems to ignore the [% %] tags.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1287/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1287/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1286",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1286/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1286/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1286/events",
    "html_url": "https://github.com/expressjs/express/pull/1286",
    "id": 6207514,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjA0OTE1NA==",
    "number": 1286,
    "title": "Fix signed cookie prefix",
    "user": {
      "login": "tnydwrds",
      "id": 753869,
      "node_id": "MDQ6VXNlcjc1Mzg2OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/753869?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tnydwrds",
      "html_url": "https://github.com/tnydwrds",
      "followers_url": "https://api.github.com/users/tnydwrds/followers",
      "following_url": "https://api.github.com/users/tnydwrds/following{/other_user}",
      "gists_url": "https://api.github.com/users/tnydwrds/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tnydwrds/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tnydwrds/subscriptions",
      "organizations_url": "https://api.github.com/users/tnydwrds/orgs",
      "repos_url": "https://api.github.com/users/tnydwrds/repos",
      "events_url": "https://api.github.com/users/tnydwrds/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tnydwrds/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2012-08-14T03:07:51Z",
    "updated_at": "2014-06-15T07:00:46Z",
    "closed_at": "2012-08-14T03:21:37Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1286",
      "html_url": "https://github.com/expressjs/express/pull/1286",
      "diff_url": "https://github.com/expressjs/express/pull/1286.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1286.patch",
      "merged_at": "2012-08-14T03:21:37Z"
    },
    "body": "Updated res.cookie to prefix signed cookies with 's:' so that req.signedCookies would populate properly.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1286/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1286/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1285",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1285/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1285/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1285/events",
    "html_url": "https://github.com/expressjs/express/issues/1285",
    "id": 6201349,
    "node_id": "MDU6SXNzdWU2MjAxMzQ5",
    "number": 1285,
    "title": "Session ID differs in store",
    "user": {
      "login": "Tivoli",
      "id": 40634,
      "node_id": "MDQ6VXNlcjQwNjM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/40634?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Tivoli",
      "html_url": "https://github.com/Tivoli",
      "followers_url": "https://api.github.com/users/Tivoli/followers",
      "following_url": "https://api.github.com/users/Tivoli/following{/other_user}",
      "gists_url": "https://api.github.com/users/Tivoli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Tivoli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Tivoli/subscriptions",
      "organizations_url": "https://api.github.com/users/Tivoli/orgs",
      "repos_url": "https://api.github.com/users/Tivoli/repos",
      "events_url": "https://api.github.com/users/Tivoli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Tivoli/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2012-08-13T20:29:57Z",
    "updated_at": "2012-08-14T15:31:38Z",
    "closed_at": "2012-08-14T15:31:38Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "connect.sid in the cookie is s:<string> but for example in connect-redis it's stored as sess:<string>.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1285/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1285/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1284",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1284/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1284/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1284/events",
    "html_url": "https://github.com/expressjs/express/issues/1284",
    "id": 6198120,
    "node_id": "MDU6SXNzdWU2MTk4MTIw",
    "number": 1284,
    "title": "Session Id is escaping html encode character",
    "user": {
      "login": "sofianhn",
      "id": 2146228,
      "node_id": "MDQ6VXNlcjIxNDYyMjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2146228?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sofianhn",
      "html_url": "https://github.com/sofianhn",
      "followers_url": "https://api.github.com/users/sofianhn/followers",
      "following_url": "https://api.github.com/users/sofianhn/following{/other_user}",
      "gists_url": "https://api.github.com/users/sofianhn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sofianhn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sofianhn/subscriptions",
      "organizations_url": "https://api.github.com/users/sofianhn/orgs",
      "repos_url": "https://api.github.com/users/sofianhn/repos",
      "events_url": "https://api.github.com/users/sofianhn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sofianhn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2012-08-13T18:32:19Z",
    "updated_at": "2012-09-27T17:46:15Z",
    "closed_at": "2012-09-27T17:46:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Say you have the following cookie:\nCookie: connect.sid=KOBkSF0IGGKT1VVCmAR1VoeX.4NzrfbOuW%2BXOxMI7sZSGyq3N2s0OqGC%2B0DgU8rngvcc\n\nWhen accessing this cookie from req.session.id, I get the following: \n\nconnect.sid=KOBkSF0IGGKT1VVCmAR1VoeX.4NzrfbOuW+XOxMI7sZSGyq3N2s0OqGC+0DgU8rngvcc\n\nNote that %2B is transferred to +, which causes the cookie to be invalid. \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1284/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1284/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1283",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1283/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1283/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1283/events",
    "html_url": "https://github.com/expressjs/express/issues/1283",
    "id": 6187588,
    "node_id": "MDU6SXNzdWU2MTg3NTg4",
    "number": 1283,
    "title": "Session not working using expressjs",
    "user": {
      "login": "sridhar480",
      "id": 1335982,
      "node_id": "MDQ6VXNlcjEzMzU5ODI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1335982?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sridhar480",
      "html_url": "https://github.com/sridhar480",
      "followers_url": "https://api.github.com/users/sridhar480/followers",
      "following_url": "https://api.github.com/users/sridhar480/following{/other_user}",
      "gists_url": "https://api.github.com/users/sridhar480/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sridhar480/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sridhar480/subscriptions",
      "organizations_url": "https://api.github.com/users/sridhar480/orgs",
      "repos_url": "https://api.github.com/users/sridhar480/repos",
      "events_url": "https://api.github.com/users/sridhar480/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sridhar480/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2012-08-13T11:03:38Z",
    "updated_at": "2014-09-28T19:43:38Z",
    "closed_at": "2012-08-28T16:16:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Iam developed Web application using Nodejs with express and socket.io ,mongodb.\nHere problem iam facing login problem i mean session not working when i redirect other page .Only specific systems(PC&laptops) login problem occur.\n\nCode url: https://gist.github.com/e4e42db128c9bd046d7f\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1283/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1283/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1282",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1282/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1282/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1282/events",
    "html_url": "https://github.com/expressjs/express/issues/1282",
    "id": 6187555,
    "node_id": "MDU6SXNzdWU2MTg3NTU1",
    "number": 1282,
    "title": "Login problem using expressjs",
    "user": {
      "login": "sridhar480",
      "id": 1335982,
      "node_id": "MDQ6VXNlcjEzMzU5ODI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1335982?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sridhar480",
      "html_url": "https://github.com/sridhar480",
      "followers_url": "https://api.github.com/users/sridhar480/followers",
      "following_url": "https://api.github.com/users/sridhar480/following{/other_user}",
      "gists_url": "https://api.github.com/users/sridhar480/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sridhar480/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sridhar480/subscriptions",
      "organizations_url": "https://api.github.com/users/sridhar480/orgs",
      "repos_url": "https://api.github.com/users/sridhar480/repos",
      "events_url": "https://api.github.com/users/sridhar480/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sridhar480/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-08-13T11:01:53Z",
    "updated_at": "2012-08-14T00:21:14Z",
    "closed_at": "2012-08-14T00:21:14Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Iam developed  Web application using Nodejs with express and socket.io ,mongodb.\nHere problem iam facing login problem i mean session not working  when i redirect other page .Only specific systems(PC&laptops) login problem occur.\n\nCode url: https://gist.github.com/e4e42db128c9bd046d7f\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1282/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1282/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1281",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1281/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1281/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1281/events",
    "html_url": "https://github.com/expressjs/express/issues/1281",
    "id": 6179437,
    "node_id": "MDU6SXNzdWU2MTc5NDM3",
    "number": 1281,
    "title": "Single use routes",
    "user": {
      "login": "stagas",
      "id": 283907,
      "node_id": "MDQ6VXNlcjI4MzkwNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/283907?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stagas",
      "html_url": "https://github.com/stagas",
      "followers_url": "https://api.github.com/users/stagas/followers",
      "following_url": "https://api.github.com/users/stagas/following{/other_user}",
      "gists_url": "https://api.github.com/users/stagas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stagas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stagas/subscriptions",
      "organizations_url": "https://api.github.com/users/stagas/orgs",
      "repos_url": "https://api.github.com/users/stagas/repos",
      "events_url": "https://api.github.com/users/stagas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stagas/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2012-08-12T19:43:06Z",
    "updated_at": "2012-08-12T20:11:32Z",
    "closed_at": "2012-08-12T20:11:32Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "For one-off routes like password-resetting and other uses. Something like `app.get.once('/foo', fn)`.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1281/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1281/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1280",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1280/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1280/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1280/events",
    "html_url": "https://github.com/expressjs/express/issues/1280",
    "id": 6175890,
    "node_id": "MDU6SXNzdWU2MTc1ODkw",
    "number": 1280,
    "title": "installing: 404 not found",
    "user": {
      "login": "gagginaspinnata",
      "id": 1044368,
      "node_id": "MDQ6VXNlcjEwNDQzNjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1044368?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gagginaspinnata",
      "html_url": "https://github.com/gagginaspinnata",
      "followers_url": "https://api.github.com/users/gagginaspinnata/followers",
      "following_url": "https://api.github.com/users/gagginaspinnata/following{/other_user}",
      "gists_url": "https://api.github.com/users/gagginaspinnata/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gagginaspinnata/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gagginaspinnata/subscriptions",
      "organizations_url": "https://api.github.com/users/gagginaspinnata/orgs",
      "repos_url": "https://api.github.com/users/gagginaspinnata/repos",
      "events_url": "https://api.github.com/users/gagginaspinnata/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gagginaspinnata/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-08-12T09:14:13Z",
    "updated_at": "2012-08-12T17:57:58Z",
    "closed_at": "2012-08-12T17:57:58Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When I try to install it I get the following error:\n\n```\nsudo npm install -g express\nnpm http GET https://registry.npmjs.org/express\nnpm http 304 https://registry.npmjs.org/express\nnpm http GET https://registry.npmjs.org/-/express-3.0.0rc2.tgz\nnpm http 404 https://registry.npmjs.org/-/express-3.0.0rc2.tgz\nnpm ERR! fetch failed https://registry.npmjs.org/-/express-3.0.0rc2.tgz\nnpm ERR! Error: 404 Not Found\nnpm ERR!     at null.<anonymous> (/usr/local/lib/node_modules/npm/lib/utils/fetch.js:47:16)\nnpm ERR!     at EventEmitter.emit (events.js:115:20)\nnpm ERR!     at WriteStream.flush (fs.js:1514:12)\nnpm ERR!     at fs.close (/usr/local/lib/node_modules/npm/node_modules/graceful-fs/graceful-fs.js:92:5)\nnpm ERR!     at Object.oncomplete (fs.js:297:15)\nnpm ERR! If you need help, you may report this log at:\nnpm ERR!     <http://github.com/isaacs/npm/issues>\nnpm ERR! or email it to:\nnpm ERR!     <npm-@googlegroups.com>\n\nnpm ERR! System Darwin 12.0.0\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"install\" \"-g\" \"express\"\nnpm ERR! cwd /Users/gaggina\nnpm ERR! node -v v0.8.6\nnpm ERR! npm -v 1.1.48\nnpm ERR! \nnpm ERR! Additional logging details can be found in:\nnpm ERR!     /Users/gaggina/npm-debug.log\nnpm ERR! not ok code 0\n```\n\nHow to fix it?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1280/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1280/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1279",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1279/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1279/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1279/events",
    "html_url": "https://github.com/expressjs/express/pull/1279",
    "id": 6172812,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjAzNTA2OQ==",
    "number": 1279,
    "title": "locals in views don't have the app.locals properties.",
    "user": {
      "login": "Enome",
      "id": 144792,
      "node_id": "MDQ6VXNlcjE0NDc5Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/144792?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Enome",
      "html_url": "https://github.com/Enome",
      "followers_url": "https://api.github.com/users/Enome/followers",
      "following_url": "https://api.github.com/users/Enome/following{/other_user}",
      "gists_url": "https://api.github.com/users/Enome/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Enome/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Enome/subscriptions",
      "organizations_url": "https://api.github.com/users/Enome/orgs",
      "repos_url": "https://api.github.com/users/Enome/repos",
      "events_url": "https://api.github.com/users/Enome/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Enome/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2012-08-11T20:58:34Z",
    "updated_at": "2014-06-13T13:53:41Z",
    "closed_at": "2012-08-28T16:17:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1279",
      "html_url": "https://github.com/expressjs/express/pull/1279",
      "diff_url": "https://github.com/expressjs/express/pull/1279.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1279.patch",
      "merged_at": null
    },
    "body": "Talked about this in IRC but wasn't sure if this was expected behavior or not. Second time I do a pull request hope everything goes well.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1279/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1279/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1277",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1277/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1277/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1277/events",
    "html_url": "https://github.com/expressjs/express/issues/1277",
    "id": 6169950,
    "node_id": "MDU6SXNzdWU2MTY5OTUw",
    "number": 1277,
    "title": "jade templating with express.vhost",
    "user": {
      "login": "bodokaiser",
      "id": 1780466,
      "node_id": "MDQ6VXNlcjE3ODA0NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1780466?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bodokaiser",
      "html_url": "https://github.com/bodokaiser",
      "followers_url": "https://api.github.com/users/bodokaiser/followers",
      "following_url": "https://api.github.com/users/bodokaiser/following{/other_user}",
      "gists_url": "https://api.github.com/users/bodokaiser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bodokaiser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bodokaiser/subscriptions",
      "organizations_url": "https://api.github.com/users/bodokaiser/orgs",
      "repos_url": "https://api.github.com/users/bodokaiser/repos",
      "events_url": "https://api.github.com/users/bodokaiser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bodokaiser/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 11,
    "created_at": "2012-08-11T12:36:50Z",
    "updated_at": "2012-12-28T20:25:52Z",
    "closed_at": "2012-09-27T17:46:01Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\n\nI got following directory structure:\n\n```\n/\n    /main - contains the main app\n        /routes\n        /public\n        /app.js\n    /security - contains security related stuff\n        /routes\n        /public\n        /app.js\n    /views\n        /index.js\n        /layout.js\n    /app.js - node bootstrap\n```\n\nBecause my content is completely client rendered I would like to share the views across the subdomains.\n\nBut I now noticed that when I define the view options in the main application file (/app.js):\n\n```\napp.set('views', __dirname + '/views');\napp.set('view engine', 'jade');\n```\n\ninstead of in the subapplication files (/main/app.js, /security/app.js)\nI get follwoing error by calling \"res.render('index');\n\n```\nError: Cannot find module 'undefined'\n    at Function.Module._resolveFilename (module.js:338:15)\n    at Function.Module._load (module.js:280:25)\n    at Module.require (module.js:362:17)\n    at require (module.js:378:17)\n    at new View (/Users/bodo/Repositories/Node/node_modules/express/lib/view.js:42:49)\n    at Function.app.render (/Users/bodo/Repositories/Node/node_modules/express/lib/application.js:486:12)\n    at ServerResponse.res.render (/Users/bodo/Repositories/Node/node_modules/express/lib/response.js:677:7)\n    at /Users/bodo/Repositories/Node/security/routes/index.js:5:12\n    at callbacks (/Users/bodo/Repositories/Node/node_modules/express/lib/router/index.js:165:11)\n    at param (/Users/bodo/Repositories/Node/node_modules/express/lib/router/index.js:139:11)\n```\n\nCould this be a bug?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1277/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1277/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1276",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1276/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1276/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1276/events",
    "html_url": "https://github.com/expressjs/express/issues/1276",
    "id": 6146645,
    "node_id": "MDU6SXNzdWU2MTQ2NjQ1",
    "number": 1276,
    "title": "API documentation missing the \"signed\" option",
    "user": {
      "login": "mercmobily",
      "id": 2128734,
      "node_id": "MDQ6VXNlcjIxMjg3MzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2128734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mercmobily",
      "html_url": "https://github.com/mercmobily",
      "followers_url": "https://api.github.com/users/mercmobily/followers",
      "following_url": "https://api.github.com/users/mercmobily/following{/other_user}",
      "gists_url": "https://api.github.com/users/mercmobily/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mercmobily/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mercmobily/subscriptions",
      "organizations_url": "https://api.github.com/users/mercmobily/orgs",
      "repos_url": "https://api.github.com/users/mercmobily/repos",
      "events_url": "https://api.github.com/users/mercmobily/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mercmobily/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-08-10T09:12:50Z",
    "updated_at": "2012-08-10T16:32:53Z",
    "closed_at": "2012-08-10T16:32:53Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\n\nTo send a signed cookie to the client, you need to write:\n\nres.cookie(name, value, { signed: true })\n\nThe API at the moment doesn't say that much. The old call to send signed cookies was taken out, but this option needs to be in the API (I just wasted time looking for it)\n\nBye,\n\nMerc.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1276/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1276/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1275",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1275/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1275/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1275/events",
    "html_url": "https://github.com/expressjs/express/issues/1275",
    "id": 6131666,
    "node_id": "MDU6SXNzdWU2MTMxNjY2",
    "number": 1275,
    "title": "route loader example broken: require is not defined",
    "user": {
      "login": "bodokaiser",
      "id": 1780466,
      "node_id": "MDQ6VXNlcjE3ODA0NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1780466?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bodokaiser",
      "html_url": "https://github.com/bodokaiser",
      "followers_url": "https://api.github.com/users/bodokaiser/followers",
      "following_url": "https://api.github.com/users/bodokaiser/following{/other_user}",
      "gists_url": "https://api.github.com/users/bodokaiser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bodokaiser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bodokaiser/subscriptions",
      "organizations_url": "https://api.github.com/users/bodokaiser/orgs",
      "repos_url": "https://api.github.com/users/bodokaiser/repos",
      "events_url": "https://api.github.com/users/bodokaiser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bodokaiser/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2012-08-09T16:50:58Z",
    "updated_at": "2012-08-10T05:15:29Z",
    "closed_at": "2012-08-10T05:15:29Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\n\nI tried to implement a route loader like shown in the example: https://github.com/visionmedia/express/tree/master/examples/route-loading\n\n```\nnode app.js\n\n/Users/bodo/Repositories/Node/New/security/routes/loader.js:20\n    vm.runInNewContext(str, context, file);\n       ^\nReferenceError: require is not defined\n    at loader.js:1:10\n    at module.exports (/Users/bodo/Repositories/Node/New/security/routes/loader.js:20:8)\n    at Array.forEach (native)\n    at module.exports (/Users/bodo/Repositories/Node/New/security/routes/loader.js:8:23)\n    at Object.<anonymous> (/Users/bodo/Repositories/Node/New/security/app.js:7:27)\n    at Module._compile (module.js:449:26)\n    at Object.Module._extensions..js (module.js:467:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Module.require (module.js:362:17)\n```\n\nI saw that the last update was made before four months.\nCan it be that there where some api changes?\n\nI usually used this technique:\n\n```\nvar vm = require('vm')\n  , fs = require('fs')\n  , mw = require('./middleware');\n\n\n// import routing files\nmodule.exports = function(app, mw) {\n    fs.readdirSync(__dirname).forEach(function(file) {\n        if (file == \"index.js\") return;\n        var name = file.substr(0, file.indexOf('.'));\n        require('./' + name)(app, mw);\n    });\n};\n```\n\nbut this causes a much more cryptic error:\n\n```\nnode app.js\n\nmodule.js:169\n  var cacheKey = JSON.stringify({request: request, paths: paths});\n                      ^\nRangeError: Maximum call stack size exceeded\n```\n\nbefore updating to 3.0 and/or using vhosts this worked\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1275/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1275/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1274",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1274/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1274/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1274/events",
    "html_url": "https://github.com/expressjs/express/issues/1274",
    "id": 6120991,
    "node_id": "MDU6SXNzdWU2MTIwOTkx",
    "number": 1274,
    "title": "where is express api?",
    "user": {
      "login": "KlonD90",
      "id": 790299,
      "node_id": "MDQ6VXNlcjc5MDI5OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/790299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KlonD90",
      "html_url": "https://github.com/KlonD90",
      "followers_url": "https://api.github.com/users/KlonD90/followers",
      "following_url": "https://api.github.com/users/KlonD90/following{/other_user}",
      "gists_url": "https://api.github.com/users/KlonD90/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KlonD90/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KlonD90/subscriptions",
      "organizations_url": "https://api.github.com/users/KlonD90/orgs",
      "repos_url": "https://api.github.com/users/KlonD90/repos",
      "events_url": "https://api.github.com/users/KlonD90/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KlonD90/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2012-08-09T07:23:32Z",
    "updated_at": "2012-08-09T15:46:54Z",
    "closed_at": "2012-08-09T15:46:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "http://expressjs.com/api.html\nat this page i cannot find something about express.use express.createServer. where is it?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1274/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1274/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1273",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1273/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1273/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1273/events",
    "html_url": "https://github.com/expressjs/express/pull/1273",
    "id": 6117282,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjAxMTE2MA==",
    "number": 1273,
    "title": "Removed extraneous require('http')",
    "user": {
      "login": "ritch",
      "id": 462228,
      "node_id": "MDQ6VXNlcjQ2MjIyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/462228?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ritch",
      "html_url": "https://github.com/ritch",
      "followers_url": "https://api.github.com/users/ritch/followers",
      "following_url": "https://api.github.com/users/ritch/following{/other_user}",
      "gists_url": "https://api.github.com/users/ritch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ritch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ritch/subscriptions",
      "organizations_url": "https://api.github.com/users/ritch/orgs",
      "repos_url": "https://api.github.com/users/ritch/repos",
      "events_url": "https://api.github.com/users/ritch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ritch/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2012-08-09T00:52:15Z",
    "updated_at": "2012-08-09T15:46:24Z",
    "closed_at": "2012-08-09T15:46:23Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1273",
      "html_url": "https://github.com/expressjs/express/pull/1273",
      "diff_url": "https://github.com/expressjs/express/pull/1273.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1273.patch",
      "merged_at": "2012-08-09T15:46:23Z"
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1273/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1273/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1272",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1272/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1272/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1272/events",
    "html_url": "https://github.com/expressjs/express/issues/1272",
    "id": 6115792,
    "node_id": "MDU6SXNzdWU2MTE1Nzky",
    "number": 1272,
    "title": "include not working ",
    "user": {
      "login": "adamsch1",
      "id": 333530,
      "node_id": "MDQ6VXNlcjMzMzUzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/333530?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamsch1",
      "html_url": "https://github.com/adamsch1",
      "followers_url": "https://api.github.com/users/adamsch1/followers",
      "following_url": "https://api.github.com/users/adamsch1/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamsch1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamsch1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamsch1/subscriptions",
      "organizations_url": "https://api.github.com/users/adamsch1/orgs",
      "repos_url": "https://api.github.com/users/adamsch1/repos",
      "events_url": "https://api.github.com/users/adamsch1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamsch1/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2012-08-08T23:09:28Z",
    "updated_at": "2012-08-09T00:49:47Z",
    "closed_at": "2012-08-08T23:12:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I cannot make an include work.\n\nsignup.jade\n\nextends layout\n\ninclude account\n\nWill successfully pull in the layout.jade file but not the account.  Likewise if I remove the extends layout statement the include account works but I cannot get both to work in conjunction which leads me to believe I am mis-understanding something??\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1272/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1272/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1271",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1271/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1271/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1271/events",
    "html_url": "https://github.com/expressjs/express/pull/1271",
    "id": 6073384,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTk5MDkzNQ==",
    "number": 1271,
    "title": "Bugfix in Route.match",
    "user": {
      "login": "simov",
      "id": 1694112,
      "node_id": "MDQ6VXNlcjE2OTQxMTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1694112?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simov",
      "html_url": "https://github.com/simov",
      "followers_url": "https://api.github.com/users/simov/followers",
      "following_url": "https://api.github.com/users/simov/following{/other_user}",
      "gists_url": "https://api.github.com/users/simov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simov/subscriptions",
      "organizations_url": "https://api.github.com/users/simov/orgs",
      "repos_url": "https://api.github.com/users/simov/repos",
      "events_url": "https://api.github.com/users/simov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2012-08-07T10:57:13Z",
    "updated_at": "2012-08-07T11:34:04Z",
    "closed_at": "2012-08-07T11:28:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1271",
      "html_url": "https://github.com/expressjs/express/pull/1271",
      "diff_url": "https://github.com/expressjs/express/pull/1271.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1271.patch",
      "merged_at": null
    },
    "body": "After every call to RegExp.exec you must reset the match index\notherwise on subsequent call it won't match.\nYou can test it with curl -I address\nit keeps returning 200, 404, 200, 404...\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1271/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1271/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1270",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1270/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1270/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1270/events",
    "html_url": "https://github.com/expressjs/express/issues/1270",
    "id": 6071961,
    "node_id": "MDU6SXNzdWU2MDcxOTYx",
    "number": 1270,
    "title": "Docs too weak on app.use() and middleware concepts",
    "user": {
      "login": "rdrey",
      "id": 347977,
      "node_id": "MDQ6VXNlcjM0Nzk3Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/347977?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rdrey",
      "html_url": "https://github.com/rdrey",
      "followers_url": "https://api.github.com/users/rdrey/followers",
      "following_url": "https://api.github.com/users/rdrey/following{/other_user}",
      "gists_url": "https://api.github.com/users/rdrey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rdrey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rdrey/subscriptions",
      "organizations_url": "https://api.github.com/users/rdrey/orgs",
      "repos_url": "https://api.github.com/users/rdrey/repos",
      "events_url": "https://api.github.com/users/rdrey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rdrey/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-08-07T09:30:16Z",
    "updated_at": "2012-08-07T10:33:45Z",
    "closed_at": "2012-08-07T10:33:45Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The current docs don't mention `app.use()` in the API docs and do too little to explain\n- middleware as a concept\n- the relationship with connect's default middleware\n- app routing through a stack of middleware and `next()`\n\nI think this is creating way more confused questions on StackOverflow than there used to be ;)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1270/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1270/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1269",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1269/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1269/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1269/events",
    "html_url": "https://github.com/expressjs/express/issues/1269",
    "id": 6063209,
    "node_id": "MDU6SXNzdWU2MDYzMjA5",
    "number": 1269,
    "title": "mounting subapps",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-08-06T21:40:34Z",
    "updated_at": "2012-08-06T21:51:00Z",
    "closed_at": "2012-08-06T21:51:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\n\nI have a rather weird (for me at least) problem when mounting a subapp.\n\nhttps://gist.github.com/3278577\n\nwhen navigating to `0.0.0.0:8000/subapp` I get the subapp's `index.jade` but I am not getting its `style.css`— all relative links are also pointing to `/` and not to `/subapp`.\nTo get the `style.css` of the subapp and correct relative links I have to navigate to `0.0.0.0:8000/subapp/`. \n\nIs this intended behaviour?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1269/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1269/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1268",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1268/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1268/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1268/events",
    "html_url": "https://github.com/expressjs/express/issues/1268",
    "id": 6045966,
    "node_id": "MDU6SXNzdWU2MDQ1OTY2",
    "number": 1268,
    "title": "Minor: expressjs homepage on a large monitor",
    "user": {
      "login": "Prakt",
      "id": 1902134,
      "node_id": "MDQ6VXNlcjE5MDIxMzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1902134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Prakt",
      "html_url": "https://github.com/Prakt",
      "followers_url": "https://api.github.com/users/Prakt/followers",
      "following_url": "https://api.github.com/users/Prakt/following{/other_user}",
      "gists_url": "https://api.github.com/users/Prakt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Prakt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Prakt/subscriptions",
      "organizations_url": "https://api.github.com/users/Prakt/orgs",
      "repos_url": "https://api.github.com/users/Prakt/repos",
      "events_url": "https://api.github.com/users/Prakt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Prakt/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 13,
    "created_at": "2012-08-06T09:23:54Z",
    "updated_at": "2012-08-06T21:50:34Z",
    "closed_at": "2012-08-06T16:18:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have two huge monitors at work here. Both have a screen resolution of 2560x1440px. The new official homepage looks a bit odd on these. The content is aligned at the left edge of my monitor, whereas the menu is at the far right. Easy to miss the menu when its there and with such small fonts ;)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1268/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1268/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1267",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1267/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1267/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1267/events",
    "html_url": "https://github.com/expressjs/express/issues/1267",
    "id": 6045837,
    "node_id": "MDU6SXNzdWU2MDQ1ODM3",
    "number": 1267,
    "title": "can not serve the google web fonts files with the extend 'woff' correctly",
    "user": {
      "login": "dreamflywang",
      "id": 866068,
      "node_id": "MDQ6VXNlcjg2NjA2OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/866068?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dreamflywang",
      "html_url": "https://github.com/dreamflywang",
      "followers_url": "https://api.github.com/users/dreamflywang/followers",
      "following_url": "https://api.github.com/users/dreamflywang/following{/other_user}",
      "gists_url": "https://api.github.com/users/dreamflywang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dreamflywang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dreamflywang/subscriptions",
      "organizations_url": "https://api.github.com/users/dreamflywang/orgs",
      "repos_url": "https://api.github.com/users/dreamflywang/repos",
      "events_url": "https://api.github.com/users/dreamflywang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dreamflywang/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-08-06T09:15:57Z",
    "updated_at": "2012-08-06T16:24:52Z",
    "closed_at": "2012-08-06T16:24:52Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1267/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1267/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1266",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1266/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1266/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1266/events",
    "html_url": "https://github.com/expressjs/express/issues/1266",
    "id": 6039274,
    "node_id": "MDU6SXNzdWU2MDM5Mjc0",
    "number": 1266,
    "title": "Unable to add mongoose-auth middleware in express 3 ",
    "user": {
      "login": "sinistersig",
      "id": 1987997,
      "node_id": "MDQ6VXNlcjE5ODc5OTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1987997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinistersig",
      "html_url": "https://github.com/sinistersig",
      "followers_url": "https://api.github.com/users/sinistersig/followers",
      "following_url": "https://api.github.com/users/sinistersig/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinistersig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinistersig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinistersig/subscriptions",
      "organizations_url": "https://api.github.com/users/sinistersig/orgs",
      "repos_url": "https://api.github.com/users/sinistersig/repos",
      "events_url": "https://api.github.com/users/sinistersig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinistersig/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2012-08-05T19:49:57Z",
    "updated_at": "2013-01-06T03:01:17Z",
    "closed_at": "2012-08-05T21:57:13Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hey,\n\nIn previous versions of express the code below was used to add the mongoose-auth middleware to express:\n\nvar app = express.createServer(\n    express.bodyParser()\n  , express.static(__dirname + \"/public\")\n  , express.cookieParser()\n  , express.session({ secret: 'esoognom'})\n  , mongooseAuth.middleware()\n);\n\nIn the new version of express I understand that the createServer method has been depreciated. Whenever I try using this code:\n\napp.configure(function(){\n  app.set('port', process.env.PORT || 3000);\n  app.set('views', __dirname + '/views');\n  app.set('view engine', 'jade');\n  app.use(express.favicon());\n  app.use(express.logger('dev'));\n  app.use(express.bodyParser());\n  app.use(express.methodOverride());\n  app.use(mongooseAuth.middleware());\n  app.use(express.static(path.join(__dirname, 'public')));\n});\n\nI cannot access any of the mongoose-auth routes such as /login and /register any assistance would be appreciated. Also I am wondering what is the difference between using the createServer method and app.configure? Thanks!\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1266/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1266/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1265",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1265/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1265/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1265/events",
    "html_url": "https://github.com/expressjs/express/issues/1265",
    "id": 6025893,
    "node_id": "MDU6SXNzdWU2MDI1ODkz",
    "number": 1265,
    "title": "http.js:644 - Can't set headers after they are sent.",
    "user": {
      "login": "artalat",
      "id": 295630,
      "node_id": "MDQ6VXNlcjI5NTYzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/295630?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/artalat",
      "html_url": "https://github.com/artalat",
      "followers_url": "https://api.github.com/users/artalat/followers",
      "following_url": "https://api.github.com/users/artalat/following{/other_user}",
      "gists_url": "https://api.github.com/users/artalat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/artalat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/artalat/subscriptions",
      "organizations_url": "https://api.github.com/users/artalat/orgs",
      "repos_url": "https://api.github.com/users/artalat/repos",
      "events_url": "https://api.github.com/users/artalat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/artalat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 11,
    "created_at": "2012-08-03T23:08:15Z",
    "updated_at": "2014-01-09T17:49:41Z",
    "closed_at": "2012-09-01T17:10:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi, I'm new to node.js and express so please bear with me. I've just started off with my first project and seems to have hit a road block with a way nowhere to be found.\n\nThe code works fine on local host but gives the following error on production server: \n\n```\nhttp.js:644\n    throw new Error('Can\\'t set headers after they are sent.');\n          ^\nError: Can't set headers after they are sent.\n    at ServerResponse.OutgoingMessage.setHeader (http.js:644:11)\n    at ServerResponse.res.setHeader (/home1/artalatc/public_html/cloud1/node_modules/express/node_modules/connect/lib/patch.js:59:22)\n    at next (/home1/artalatc/public_html/cloud1/node_modules/express/node_modules/connect/lib/proto.js:153:13)\n    at Function.app.handle (/home1/artalatc/public_html/cloud1/node_modules/express/node_modules/connect/lib/proto.js:198:3)\n    at Server.app (/home1/artalatc/public_html/cloud1/node_modules/express/node_modules/connect/lib/connect.js:66:31)\n    at Manager.handleRequest (/home1/artalatc/public_html/cloud1/node_modules/socket.io/lib/manager.js:564:28)\n    at Server.<anonymous> (/home1/artalatc/public_html/cloud1/node_modules/socket.io/lib/manager.js:118:10)\n    at Server.EventEmitter.emit (events.js:115:20)\n    at HTTPParser.parser.onIncoming (http.js:1793:12)\n    at HTTPParser.parserOnHeadersComplete [as onHeadersComplete] (http.js:111:23)\n```\n\nHere is my app.js and rest of the project files are auto generated.\n\n``` javascript\nvar express = require('express')\n  , routes = require('./routes')\n  , http = require('http')\n  , path = require('path');\n\nvar app = express();\n\napp.configure(function(){\n  app.set('port', process.env.PORT || 8000);\n  app.set('views', __dirname + '/views');\n  app.set('view engine', 'jade');\n  app.use(express.favicon());\n  app.use(express.logger('dev'));\n  app.use(express.bodyParser());\n  app.use(express.methodOverride());\n  app.use(app.router);\n  app.use(express.static(path.join(__dirname, 'public')));\n});\n\napp.configure('development', function(){\n  app.use(express.errorHandler());\n});\n\napp.get('/', routes.index);\n\nvar server = app.listen(8000);\nvar io = require('socket.io').listen(server);\n\nserver.listen(app.get('port'), function(){\n  console.log(\"Express server listening on port \" + app.get('port'));\n});\n```\n\nAlso, the problem seems to be with the socket.io as commenting out the line `var io = require('socket.io').listen(server);` removes the error.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1265/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1265/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1264",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1264/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1264/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1264/events",
    "html_url": "https://github.com/expressjs/express/issues/1264",
    "id": 6024640,
    "node_id": "MDU6SXNzdWU2MDI0NjQw",
    "number": 1264,
    "title": "Any 2.5.x documentation online?",
    "user": {
      "login": "remoe",
      "id": 804941,
      "node_id": "MDQ6VXNlcjgwNDk0MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/804941?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/remoe",
      "html_url": "https://github.com/remoe",
      "followers_url": "https://api.github.com/users/remoe/followers",
      "following_url": "https://api.github.com/users/remoe/following{/other_user}",
      "gists_url": "https://api.github.com/users/remoe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/remoe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/remoe/subscriptions",
      "organizations_url": "https://api.github.com/users/remoe/orgs",
      "repos_url": "https://api.github.com/users/remoe/repos",
      "events_url": "https://api.github.com/users/remoe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/remoe/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-08-03T21:40:44Z",
    "updated_at": "2012-08-04T00:30:24Z",
    "closed_at": "2012-08-04T00:30:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi\n\nWhere can i found the 2.5.x documentation online? I mean the old expressjs.com site.\n\nThanks\nRemo\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1264/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1264/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1263",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1263/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1263/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1263/events",
    "html_url": "https://github.com/expressjs/express/issues/1263",
    "id": 6008606,
    "node_id": "MDU6SXNzdWU2MDA4NjA2",
    "number": 1263,
    "title": "app.param() Error when trying to validate parameters.",
    "user": {
      "login": "reggi",
      "id": 296798,
      "node_id": "MDQ6VXNlcjI5Njc5OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/296798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reggi",
      "html_url": "https://github.com/reggi",
      "followers_url": "https://api.github.com/users/reggi/followers",
      "following_url": "https://api.github.com/users/reggi/following{/other_user}",
      "gists_url": "https://api.github.com/users/reggi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reggi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reggi/subscriptions",
      "organizations_url": "https://api.github.com/users/reggi/orgs",
      "repos_url": "https://api.github.com/users/reggi/repos",
      "events_url": "https://api.github.com/users/reggi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reggi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2012-08-03T06:12:37Z",
    "updated_at": "2012-12-06T00:38:54Z",
    "closed_at": "2012-12-06T00:38:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I was reading up in the API Reference under [app.param()](http://expressjs.com/api.html#app.param) and I was interested in using it \"…to effectively validate parameters, or also parse them to provide capture groups…\". When I copy and paste the code example in it logs an error. I'm running express _3.0.0beta7_\n#### Code:\n\n```\n    app.param('range', /^(\\w+)\\.\\.(\\w+)?$/);\n\n    app.get('/range/:range', function(req, res){\n      var range = req.params.range;\n      res.send('from ' + range[1] + ' to ' + range[2]);\n    });\n```\n#### Error:\n\n```\n/Users/thomas/Desktop/node/platform/node_modules/express/lib/router/index.js:67\n    throw new Error('invalid param() call for ' + name + ', got ' + fn);\n          ^\nError: invalid param() call for range, got /^(\\w+)\\.\\.(\\w+)?$/\n    at Router.param (/Users/thomas/Desktop/node/platform/node_modules/express/lib/router/index.js:67:11)\n    at app.param (/Users/thomas/Desktop/node/platform/node_modules/express/lib/application.js:232:20)\n    at Array.forEach (native)\n    at Function.app.param (/Users/thomas/Desktop/node/platform/node_modules/express/lib/application.js:231:9)\n    at Object.<anonymous> (/Users/thomas/Desktop/node/platform/app.js:47:5)\n    at Module._compile (module.js:449:26)\n    at Object.Module._extensions..js (module.js:467:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Module.runMain (module.js:492:10)\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1263/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1263/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1262",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1262/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1262/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1262/events",
    "html_url": "https://github.com/expressjs/express/issues/1262",
    "id": 5983220,
    "node_id": "MDU6SXNzdWU1OTgzMjIw",
    "number": 1262,
    "title": "node started.. and crash, express error?",
    "user": {
      "login": "constantx",
      "id": 113969,
      "node_id": "MDQ6VXNlcjExMzk2OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/113969?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/constantx",
      "html_url": "https://github.com/constantx",
      "followers_url": "https://api.github.com/users/constantx/followers",
      "following_url": "https://api.github.com/users/constantx/following{/other_user}",
      "gists_url": "https://api.github.com/users/constantx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/constantx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/constantx/subscriptions",
      "organizations_url": "https://api.github.com/users/constantx/orgs",
      "repos_url": "https://api.github.com/users/constantx/repos",
      "events_url": "https://api.github.com/users/constantx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/constantx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2012-08-02T01:45:38Z",
    "updated_at": "2012-08-02T05:01:39Z",
    "closed_at": "2012-08-02T05:01:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "node version 0.8.4\nexpress@3.0.0rc1\n\ngot this error\n\n``` javascript\nnode_modules/express/node_modules/connect/lib/proto.js:104\n    , fqdn = ~req.url.indexOf('://')\n                 ^\nTypeError: Cannot read property 'url' of undefined\n```\n\nanybody has the same issue?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1262/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1262/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1261",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1261/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1261/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1261/events",
    "html_url": "https://github.com/expressjs/express/issues/1261",
    "id": 5979102,
    "node_id": "MDU6SXNzdWU1OTc5MTAy",
    "number": 1261,
    "title": "res.type nukes the default charset",
    "user": {
      "login": "glenjamin",
      "id": 151272,
      "node_id": "MDQ6VXNlcjE1MTI3Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glenjamin",
      "html_url": "https://github.com/glenjamin",
      "followers_url": "https://api.github.com/users/glenjamin/followers",
      "following_url": "https://api.github.com/users/glenjamin/following{/other_user}",
      "gists_url": "https://api.github.com/users/glenjamin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glenjamin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glenjamin/subscriptions",
      "organizations_url": "https://api.github.com/users/glenjamin/orgs",
      "repos_url": "https://api.github.com/users/glenjamin/repos",
      "events_url": "https://api.github.com/users/glenjamin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glenjamin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/7",
      "html_url": "https://github.com/expressjs/express/milestone/7",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/7/labels",
      "id": 504672,
      "node_id": "MDk6TWlsZXN0b25lNTA0Njcy",
      "number": 7,
      "title": "4.0.0",
      "description": "",
      "creator": {
        "login": "jonathanong",
        "id": 643505,
        "node_id": "MDQ6VXNlcjY0MzUwNQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/643505?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonathanong",
        "html_url": "https://github.com/jonathanong",
        "followers_url": "https://api.github.com/users/jonathanong/followers",
        "following_url": "https://api.github.com/users/jonathanong/following{/other_user}",
        "gists_url": "https://api.github.com/users/jonathanong/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jonathanong/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jonathanong/subscriptions",
        "organizations_url": "https://api.github.com/users/jonathanong/orgs",
        "repos_url": "https://api.github.com/users/jonathanong/repos",
        "events_url": "https://api.github.com/users/jonathanong/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jonathanong/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 13,
      "state": "closed",
      "created_at": "2013-12-04T11:26:37Z",
      "updated_at": "2014-04-24T22:01:50Z",
      "due_on": null,
      "closed_at": "2014-04-24T22:01:50Z"
    },
    "comments": 6,
    "created_at": "2012-08-01T21:34:43Z",
    "updated_at": "2014-07-29T04:18:19Z",
    "closed_at": "2014-02-22T15:35:34Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "eg.\n\n```\nres.type('text');\nres.send(\"Some text\");\n```\n\nProduces `Content-Type: text/plain` with no charset\n\nIt feels like it'd be more helpful for the shorthand version of type() to use the value of `res.charset`\n\n```\nres.type('text');\nres.send(\"Some text\");\n// Content-Type => text/plain; charset=utf-8\n```\n\nI _think_ this just means moving the default setting higher up in send?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1261/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1261/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1260",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1260/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1260/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1260/events",
    "html_url": "https://github.com/expressjs/express/issues/1260",
    "id": 5968814,
    "node_id": "MDU6SXNzdWU1OTY4ODE0",
    "number": 1260,
    "title": "Broken link on expressjs.com/applications",
    "user": {
      "login": "iatek",
      "id": 1154528,
      "node_id": "MDQ6VXNlcjExNTQ1Mjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1154528?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iatek",
      "html_url": "https://github.com/iatek",
      "followers_url": "https://api.github.com/users/iatek/followers",
      "following_url": "https://api.github.com/users/iatek/following{/other_user}",
      "gists_url": "https://api.github.com/users/iatek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iatek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iatek/subscriptions",
      "organizations_url": "https://api.github.com/users/iatek/orgs",
      "repos_url": "https://api.github.com/users/iatek/repos",
      "events_url": "https://api.github.com/users/iatek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iatek/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-08-01T14:15:01Z",
    "updated_at": "2012-08-01T21:54:35Z",
    "closed_at": "2012-08-01T21:54:35Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "There is a \"github repo\" link at the bottom of the http://expressjs.com/applications.html page that is intended to link to the issues section of this repo. Looks like a relative link issue. The link is:\n\nhttp://expressjs.com/github.com/visionmedia/expressjs.com/issues\n\n, and should be:\n\nhttps://github.com/visionmedia/expressjs.com/issues\n\nAlso, how do I go about getting the in1.com site (http://beta.in1.com) added to the list of ExpressJS apps on the same page?\n\nThanks\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1260/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1260/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1259",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1259/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1259/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1259/events",
    "html_url": "https://github.com/expressjs/express/issues/1259",
    "id": 5964150,
    "node_id": "MDU6SXNzdWU1OTY0MTUw",
    "number": 1259,
    "title": "Change the font color of the new website to make it a little darker. ",
    "user": {
      "login": "sreekumar-kr",
      "id": 1733074,
      "node_id": "MDQ6VXNlcjE3MzMwNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1733074?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sreekumar-kr",
      "html_url": "https://github.com/sreekumar-kr",
      "followers_url": "https://api.github.com/users/sreekumar-kr/followers",
      "following_url": "https://api.github.com/users/sreekumar-kr/following{/other_user}",
      "gists_url": "https://api.github.com/users/sreekumar-kr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sreekumar-kr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sreekumar-kr/subscriptions",
      "organizations_url": "https://api.github.com/users/sreekumar-kr/orgs",
      "repos_url": "https://api.github.com/users/sreekumar-kr/repos",
      "events_url": "https://api.github.com/users/sreekumar-kr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sreekumar-kr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2012-08-01T09:43:53Z",
    "updated_at": "2012-08-02T11:45:32Z",
    "closed_at": "2012-08-01T21:53:11Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "font color of the current (updated version ) website is vey light .. can you modify that to a little bit dark... now its very difficult to read.\n`color:#222` or `color:#111` will be okay.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1259/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1259/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1258",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1258/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1258/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1258/events",
    "html_url": "https://github.com/expressjs/express/issues/1258",
    "id": 5962785,
    "node_id": "MDU6SXNzdWU1OTYyNzg1",
    "number": 1258,
    "title": "node v0.8 res.send does not work",
    "user": {
      "login": "Raigen",
      "id": 894799,
      "node_id": "MDQ6VXNlcjg5NDc5OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/894799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Raigen",
      "html_url": "https://github.com/Raigen",
      "followers_url": "https://api.github.com/users/Raigen/followers",
      "following_url": "https://api.github.com/users/Raigen/following{/other_user}",
      "gists_url": "https://api.github.com/users/Raigen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Raigen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Raigen/subscriptions",
      "organizations_url": "https://api.github.com/users/Raigen/orgs",
      "repos_url": "https://api.github.com/users/Raigen/repos",
      "events_url": "https://api.github.com/users/Raigen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Raigen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2012-08-01T08:48:28Z",
    "updated_at": "2012-08-21T15:49:09Z",
    "closed_at": "2012-08-21T15:49:09Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "With node v0.8 res.send(body) does not work correct. The client only receives an empty response with correct header but no data.\nWith node v0.6 everything works fine without any changes.\nbody is a string.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1258/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1258/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1257",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1257/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1257/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1257/events",
    "html_url": "https://github.com/expressjs/express/issues/1257",
    "id": 5962499,
    "node_id": "MDU6SXNzdWU1OTYyNDk5",
    "number": 1257,
    "title": "res.send( text, headers, code ) - headers are ignored",
    "user": {
      "login": "dioteos",
      "id": 248150,
      "node_id": "MDQ6VXNlcjI0ODE1MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/248150?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dioteos",
      "html_url": "https://github.com/dioteos",
      "followers_url": "https://api.github.com/users/dioteos/followers",
      "following_url": "https://api.github.com/users/dioteos/following{/other_user}",
      "gists_url": "https://api.github.com/users/dioteos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dioteos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dioteos/subscriptions",
      "organizations_url": "https://api.github.com/users/dioteos/orgs",
      "repos_url": "https://api.github.com/users/dioteos/repos",
      "events_url": "https://api.github.com/users/dioteos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dioteos/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-08-01T08:31:27Z",
    "updated_at": "2012-08-01T15:53:39Z",
    "closed_at": "2012-08-01T15:53:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Consider the following code, that tries to implement a JSONP service:\n\n```\napp.(\"my_jsonp_page\", function(req,res,next) {\n    var callback = req.param(\"callback\");\n\n    res.send( callback + \"(\" + body + \");\"\n    ,  { \"Content-Type\"   : \"text/javascript\"\n       , \"Content-Length\" : body.length\n    }\n    , 200\n    );\n});\n\n```\n\nThat follows the pre-last example from the docs: http://expressjs.com/guide.html#res.send() \n\n```\n res.send(); // 204\n res.send(new Buffer('wahoo'));\n res.send({ some: 'json' });\n res.send('<p>some html</p>');\n res.send('Sorry, cant find that', 404);\n res.send('text', { 'Content-Type': 'text/plain' }, 201);\n res.send(404);\n```\n\nunfortunately, the headers are ignored.\n\nWe could detect the bug in the implementation of the dependency `response-send` module, but could not find it's GITHUB repo to submit a fix pull-request....\n\nHow do we do that?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1257/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1257/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1256",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1256/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1256/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1256/events",
    "html_url": "https://github.com/expressjs/express/issues/1256",
    "id": 5960706,
    "node_id": "MDU6SXNzdWU1OTYwNzA2",
    "number": 1256,
    "title": "Documentation - FAQ > Error Handling has a broken link",
    "user": {
      "login": "calvinfo",
      "id": 487539,
      "node_id": "MDQ6VXNlcjQ4NzUzOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/487539?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/calvinfo",
      "html_url": "https://github.com/calvinfo",
      "followers_url": "https://api.github.com/users/calvinfo/followers",
      "following_url": "https://api.github.com/users/calvinfo/following{/other_user}",
      "gists_url": "https://api.github.com/users/calvinfo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/calvinfo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/calvinfo/subscriptions",
      "organizations_url": "https://api.github.com/users/calvinfo/orgs",
      "repos_url": "https://api.github.com/users/calvinfo/repos",
      "events_url": "https://api.github.com/users/calvinfo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/calvinfo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-08-01T06:35:17Z",
    "updated_at": "2012-08-01T15:53:59Z",
    "closed_at": "2012-08-01T15:53:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "\"View error-handling information.\" links to http://localhost:3000/guide.html#error-handling\n\nOverall, very nicely done on the v3 documentation - it looks great!\n\n[edit] Didn't realize expressjs.com was its own repo now. I can move the issue if you'd like.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1256/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1256/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1255",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1255/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1255/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1255/events",
    "html_url": "https://github.com/expressjs/express/issues/1255",
    "id": 5960601,
    "node_id": "MDU6SXNzdWU1OTYwNjAx",
    "number": 1255,
    "title": "api reference - clicking Request selects the last item in Application",
    "user": {
      "login": "aeosynth",
      "id": 75317,
      "node_id": "MDQ6VXNlcjc1MzE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/75317?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aeosynth",
      "html_url": "https://github.com/aeosynth",
      "followers_url": "https://api.github.com/users/aeosynth/followers",
      "following_url": "https://api.github.com/users/aeosynth/following{/other_user}",
      "gists_url": "https://api.github.com/users/aeosynth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aeosynth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aeosynth/subscriptions",
      "organizations_url": "https://api.github.com/users/aeosynth/orgs",
      "repos_url": "https://api.github.com/users/aeosynth/repos",
      "events_url": "https://api.github.com/users/aeosynth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aeosynth/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-08-01T06:27:03Z",
    "updated_at": "2012-08-01T15:54:13Z",
    "closed_at": "2012-08-01T15:54:13Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "app.listen instead of req.params. same for clicking **Response**\n\ntested on osx, chrome / firefox\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1255/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1255/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1254",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1254/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1254/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1254/events",
    "html_url": "https://github.com/expressjs/express/issues/1254",
    "id": 5959998,
    "node_id": "MDU6SXNzdWU1OTU5OTk4",
    "number": 1254,
    "title": "expressjs.com nuked",
    "user": {
      "login": "aeosynth",
      "id": 75317,
      "node_id": "MDQ6VXNlcjc1MzE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/75317?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aeosynth",
      "html_url": "https://github.com/aeosynth",
      "followers_url": "https://api.github.com/users/aeosynth/followers",
      "following_url": "https://api.github.com/users/aeosynth/following{/other_user}",
      "gists_url": "https://api.github.com/users/aeosynth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aeosynth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aeosynth/subscriptions",
      "organizations_url": "https://api.github.com/users/aeosynth/orgs",
      "repos_url": "https://api.github.com/users/aeosynth/repos",
      "events_url": "https://api.github.com/users/aeosynth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aeosynth/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-08-01T05:15:25Z",
    "updated_at": "2012-08-01T09:39:15Z",
    "closed_at": "2012-08-01T05:40:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "http://expressjs.com/\n\n> There isn't a GitHub Page hosted here, sorry.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1254/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1254/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1253",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1253/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1253/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1253/events",
    "html_url": "https://github.com/expressjs/express/issues/1253",
    "id": 5959356,
    "node_id": "MDU6SXNzdWU1OTU5MzU2",
    "number": 1253,
    "title": "app.get() first parameter variable available in callback",
    "user": {
      "login": "reggi",
      "id": 296798,
      "node_id": "MDQ6VXNlcjI5Njc5OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/296798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reggi",
      "html_url": "https://github.com/reggi",
      "followers_url": "https://api.github.com/users/reggi/followers",
      "following_url": "https://api.github.com/users/reggi/following{/other_user}",
      "gists_url": "https://api.github.com/users/reggi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reggi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reggi/subscriptions",
      "organizations_url": "https://api.github.com/users/reggi/orgs",
      "repos_url": "https://api.github.com/users/reggi/repos",
      "events_url": "https://api.github.com/users/reggi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reggi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2012-08-01T03:52:03Z",
    "updated_at": "2012-08-01T04:31:01Z",
    "closed_at": "2012-08-01T04:03:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I posted this on [stackoverflow](http://stackoverflow.com/questions/11752124/value-of-request-parameters-from-with-callback) and it recieved no responses. Don't know if this belongs here if there is a better `express.js` resource for questions like this please let me know.\n\nI am trying to get the value of the first string argument from `app.get()` from within the callback.\n\n```\napp.get('/example/code', function(req,res){\n console.log(firstParam); // \"/example/code\"\n});\n\napp.get('/example/:id', function(req,res){\n console.log(firstParam); // \"/example/:id\"\n});\n\napp.get('/example(s?)', function(req,res){\n console.log(firstParam); // \"/example(s?)\"\n});\n```\n\nAny way to do this? As you can see I don't want the url exactly, I want what the factor for the route was. For the second example I DO NOT WANT to return `/example/2`.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1253/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1253/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1252",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1252/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1252/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1252/events",
    "html_url": "https://github.com/expressjs/express/issues/1252",
    "id": 5892074,
    "node_id": "MDU6SXNzdWU1ODkyMDc0",
    "number": 1252,
    "title": "helpers deprecated",
    "user": {
      "login": "vkrishnasatya",
      "id": 1715901,
      "node_id": "MDQ6VXNlcjE3MTU5MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1715901?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vkrishnasatya",
      "html_url": "https://github.com/vkrishnasatya",
      "followers_url": "https://api.github.com/users/vkrishnasatya/followers",
      "following_url": "https://api.github.com/users/vkrishnasatya/following{/other_user}",
      "gists_url": "https://api.github.com/users/vkrishnasatya/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vkrishnasatya/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vkrishnasatya/subscriptions",
      "organizations_url": "https://api.github.com/users/vkrishnasatya/orgs",
      "repos_url": "https://api.github.com/users/vkrishnasatya/repos",
      "events_url": "https://api.github.com/users/vkrishnasatya/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vkrishnasatya/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2012-07-28T09:39:04Z",
    "updated_at": "2012-07-29T16:26:58Z",
    "closed_at": "2012-07-29T12:45:58Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "<blockquote>\neveryauth.helpExpress is being deprecated. helpExpress is now automatically invoked when it detects express. So remove e\nveryauth.helpExpress from your code\n</blockquote>\n\n\ni am using express 2.5.8\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1252/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1252/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1251",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1251/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1251/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1251/events",
    "html_url": "https://github.com/expressjs/express/issues/1251",
    "id": 5873139,
    "node_id": "MDU6SXNzdWU1ODczMTM5",
    "number": 1251,
    "title": "Express 3.0.0rc1 - 500 RangeError: Maximum call stack size exceeded",
    "user": {
      "login": "ychun2k",
      "id": 1485450,
      "node_id": "MDQ6VXNlcjE0ODU0NTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1485450?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ychun2k",
      "html_url": "https://github.com/ychun2k",
      "followers_url": "https://api.github.com/users/ychun2k/followers",
      "following_url": "https://api.github.com/users/ychun2k/following{/other_user}",
      "gists_url": "https://api.github.com/users/ychun2k/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ychun2k/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ychun2k/subscriptions",
      "organizations_url": "https://api.github.com/users/ychun2k/orgs",
      "repos_url": "https://api.github.com/users/ychun2k/repos",
      "events_url": "https://api.github.com/users/ychun2k/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ychun2k/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2012-07-27T09:57:29Z",
    "updated_at": "2012-08-01T04:05:08Z",
    "closed_at": "2012-08-01T04:05:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Express 2.5 was working fine, but  3.0.0rc1 is not working on my FreeBSD Server. I tried it on another FreeBSD as well, still not working..  there was only the error message that \"500 RangeError: Maximum call stack size exceeded\" \nOtherwise, should I increase the the Maxmum call stack size?\nplease help..\n- I tried with only just generated code by Express (no added code)\n  - Mac OS X Lion + node.js 0.6.19 + express3.0.0rc1 = working fine\n  - FreeBSD + node.js 0.6.19 + express2.5 = working fine\n  - FreeBSD + node.js 0.6.19 + express3.0.0rc1 = not working\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1251/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1251/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1250",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1250/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1250/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1250/events",
    "html_url": "https://github.com/expressjs/express/pull/1250",
    "id": 5862545,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTkwMTMyNg==",
    "number": 1250,
    "title": "Fixed double inclusion of methods in mvc example",
    "user": {
      "login": "buschtoens",
      "id": 834636,
      "node_id": "MDQ6VXNlcjgzNDYzNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/834636?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/buschtoens",
      "html_url": "https://github.com/buschtoens",
      "followers_url": "https://api.github.com/users/buschtoens/followers",
      "following_url": "https://api.github.com/users/buschtoens/following{/other_user}",
      "gists_url": "https://api.github.com/users/buschtoens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/buschtoens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/buschtoens/subscriptions",
      "organizations_url": "https://api.github.com/users/buschtoens/orgs",
      "repos_url": "https://api.github.com/users/buschtoens/repos",
      "events_url": "https://api.github.com/users/buschtoens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/buschtoens/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-07-26T19:51:36Z",
    "updated_at": "2014-08-17T00:13:42Z",
    "closed_at": "2012-07-26T19:53:06Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1250",
      "html_url": "https://github.com/expressjs/express/pull/1250",
      "diff_url": "https://github.com/expressjs/express/pull/1250.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1250.patch",
      "merged_at": "2012-07-26T19:53:06Z"
    },
    "body": "#1249\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1250/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1250/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1249",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1249/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1249/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1249/events",
    "html_url": "https://github.com/expressjs/express/issues/1249",
    "id": 5862286,
    "node_id": "MDU6SXNzdWU1ODYyMjg2",
    "number": 1249,
    "title": "[minor] Double inclusion in boot.js MVC example",
    "user": {
      "login": "buschtoens",
      "id": 834636,
      "node_id": "MDQ6VXNlcjgzNDYzNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/834636?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/buschtoens",
      "html_url": "https://github.com/buschtoens",
      "followers_url": "https://api.github.com/users/buschtoens/followers",
      "following_url": "https://api.github.com/users/buschtoens/following{/other_user}",
      "gists_url": "https://api.github.com/users/buschtoens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/buschtoens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/buschtoens/subscriptions",
      "organizations_url": "https://api.github.com/users/buschtoens/orgs",
      "repos_url": "https://api.github.com/users/buschtoens/repos",
      "events_url": "https://api.github.com/users/buschtoens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/buschtoens/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-07-26T19:39:29Z",
    "updated_at": "2012-07-26T19:53:13Z",
    "closed_at": "2012-07-26T19:53:13Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "If the exported method is `show` the method gets included twice.\n[L40 (in `switch`-statement: `app[method](path, obj[key]);`](https://github.com/visionmedia/express/blob/master/examples/mvc/lib/boot.js#L40)\n[L67 (after `switch`-statement): `app[method](path, obj[key]);`](https://github.com/visionmedia/express/blob/master/examples/mvc/lib/boot.js#L67)\n\nFix: Remove Line 40.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1249/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1249/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1248",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1248/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1248/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1248/events",
    "html_url": "https://github.com/expressjs/express/issues/1248",
    "id": 5859424,
    "node_id": "MDU6SXNzdWU1ODU5NDI0",
    "number": 1248,
    "title": "Should be a way to turn off MD parsing on req.flash",
    "user": {
      "login": "blakevanlan",
      "id": 987656,
      "node_id": "MDQ6VXNlcjk4NzY1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/987656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blakevanlan",
      "html_url": "https://github.com/blakevanlan",
      "followers_url": "https://api.github.com/users/blakevanlan/followers",
      "following_url": "https://api.github.com/users/blakevanlan/following{/other_user}",
      "gists_url": "https://api.github.com/users/blakevanlan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blakevanlan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blakevanlan/subscriptions",
      "organizations_url": "https://api.github.com/users/blakevanlan/orgs",
      "repos_url": "https://api.github.com/users/blakevanlan/repos",
      "events_url": "https://api.github.com/users/blakevanlan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blakevanlan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2012-07-26T17:35:05Z",
    "updated_at": "2012-07-26T19:31:08Z",
    "closed_at": "2012-07-26T19:31:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm stringifying an object and storing it in req.flash but I'm having issues with the string being modified by `utils.miniMarkdown` ([#L231](https://github.com/visionmedia/express/blob/2.5.11/lib/request.js#L231)) when retrieving the stringified object. This is because one of the keys in the object has multiple underscores.\n\nI am doing all this to store the values from input fields so that when a server-side validation error occurs all the inputs on the form are not reset. It works pretty well and I believe this to be a valid use case.\n\nI think a way to turn off the Markdown parsing or a better way of storing objects in req.flash should be implemented.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1248/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1248/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1247",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1247/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1247/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1247/events",
    "html_url": "https://github.com/expressjs/express/issues/1247",
    "id": 5843861,
    "node_id": "MDU6SXNzdWU1ODQzODYx",
    "number": 1247,
    "title": "Extend a layout from a parent directory in 3.0.x",
    "user": {
      "login": "samccone",
      "id": 883126,
      "node_id": "MDQ6VXNlcjg4MzEyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/883126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/samccone",
      "html_url": "https://github.com/samccone",
      "followers_url": "https://api.github.com/users/samccone/followers",
      "following_url": "https://api.github.com/users/samccone/following{/other_user}",
      "gists_url": "https://api.github.com/users/samccone/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/samccone/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/samccone/subscriptions",
      "organizations_url": "https://api.github.com/users/samccone/orgs",
      "repos_url": "https://api.github.com/users/samccone/repos",
      "events_url": "https://api.github.com/users/samccone/events{/privacy}",
      "received_events_url": "https://api.github.com/users/samccone/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 11,
    "created_at": "2012-07-26T00:11:49Z",
    "updated_at": "2017-02-24T14:14:28Z",
    "closed_at": "2012-07-26T00:13:40Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "so my folder structure is like\n\nviews\n -layout.jade\n -foo\n   -zap.jade\n\nif i try and extend layout from within the zap file.. it can not locate it ..\n\ni tried extend 'layout' ... '../layout'\n\nno luck.. and ideas?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1247/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1247/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  }
]