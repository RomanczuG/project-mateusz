[
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3873",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3873/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3873/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3873/events",
    "html_url": "https://github.com/expressjs/express/pull/3873",
    "id": 406697759,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjUwMzM1MDky",
    "number": 3873,
    "title": "readme: document default port",
    "user": {
      "login": "cirosantilli",
      "id": 1429315,
      "node_id": "MDQ6VXNlcjE0MjkzMTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429315?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cirosantilli",
      "html_url": "https://github.com/cirosantilli",
      "followers_url": "https://api.github.com/users/cirosantilli/followers",
      "following_url": "https://api.github.com/users/cirosantilli/following{/other_user}",
      "gists_url": "https://api.github.com/users/cirosantilli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cirosantilli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cirosantilli/subscriptions",
      "organizations_url": "https://api.github.com/users/cirosantilli/orgs",
      "repos_url": "https://api.github.com/users/cirosantilli/repos",
      "events_url": "https://api.github.com/users/cirosantilli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cirosantilli/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-02-05T09:40:02Z",
    "updated_at": "2019-04-16T05:20:41Z",
    "closed_at": "2019-04-16T05:20:41Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3873",
      "html_url": "https://github.com/expressjs/express/pull/3873",
      "diff_url": "https://github.com/expressjs/express/pull/3873.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3873.patch",
      "merged_at": "2019-04-16T05:20:41Z"
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3873/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3873/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3872",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3872/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3872/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3872/events",
    "html_url": "https://github.com/expressjs/express/issues/3872",
    "id": 406312988,
    "node_id": "MDU6SXNzdWU0MDYzMTI5ODg=",
    "number": 3872,
    "title": "How to detect \"view not found error\"",
    "user": {
      "login": "shimataro",
      "id": 3448502,
      "node_id": "MDQ6VXNlcjM0NDg1MDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3448502?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shimataro",
      "html_url": "https://github.com/shimataro",
      "followers_url": "https://api.github.com/users/shimataro/followers",
      "following_url": "https://api.github.com/users/shimataro/following{/other_user}",
      "gists_url": "https://api.github.com/users/shimataro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shimataro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shimataro/subscriptions",
      "organizations_url": "https://api.github.com/users/shimataro/orgs",
      "repos_url": "https://api.github.com/users/shimataro/repos",
      "events_url": "https://api.github.com/users/shimataro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shimataro/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-02-04T12:43:58Z",
    "updated_at": "2019-12-21T18:55:02Z",
    "closed_at": "2019-12-21T18:55:02Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi there!\r\nI want to detect \"view not found error\". Now I'm coding like below:\r\n\r\n```javascript\r\napp\r\n  .get('/help/:article_title(\\\\w+)', (req, res, next) => {\r\n    // show help page (many articles!)\r\n    res.render(`help/${req.params.article_title}`);\r\n  })\r\n  .use((err, req, res, next) => {\r\n    // catch errors\r\n    if(err instanceof Error && err.hasOwnProperty('view')) {\r\n      // view not found!\r\n      res.sendStatus(404);\r\n      return;\r\n    }\r\n\r\n    // other error\r\n    next(err);\r\n  });\r\n```\r\n\r\n`view` property is here:\r\n<https://github.com/expressjs/express/blob/3ed5090ca91f6a387e66370d57ead94d886275e1/lib/application.js#L580-L582>\r\n\r\nBut it seems not to be an official specification because there are no description about this property in [API reference](http://expressjs.com/en/4x/api.html#res.render).\r\n\r\nIs it an official specification? If not, is there any solutions based on official specification?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3872/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3872/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3871",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3871/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3871/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3871/events",
    "html_url": "https://github.com/expressjs/express/issues/3871",
    "id": 406136738,
    "node_id": "MDU6SXNzdWU0MDYxMzY3Mzg=",
    "number": 3871,
    "title": "Memory growth with Node 10",
    "user": {
      "login": "daveisfera",
      "id": 1686193,
      "node_id": "MDQ6VXNlcjE2ODYxOTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1686193?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/daveisfera",
      "html_url": "https://github.com/daveisfera",
      "followers_url": "https://api.github.com/users/daveisfera/followers",
      "following_url": "https://api.github.com/users/daveisfera/following{/other_user}",
      "gists_url": "https://api.github.com/users/daveisfera/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/daveisfera/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daveisfera/subscriptions",
      "organizations_url": "https://api.github.com/users/daveisfera/orgs",
      "repos_url": "https://api.github.com/users/daveisfera/repos",
      "events_url": "https://api.github.com/users/daveisfera/events{/privacy}",
      "received_events_url": "https://api.github.com/users/daveisfera/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2019-02-03T22:04:26Z",
    "updated_at": "2019-02-06T06:52:44Z",
    "closed_at": "2019-02-05T14:36:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "We updated to Node 10 at the beginning of January and since then there has been a steady growth in memory usage on all of our Node processes. It appears that this is something in Node or express itself and here's a minimal code snippet to demonstrate:\r\n\r\n```js\r\n'use strict';\r\n\r\nconst express = require('express');\r\nconst memwatch = require('node-memwatch');\r\n\r\nlet hd;\r\nlet count = 0;\r\n\r\n(() => {\r\n    const server = express();\r\n\r\n    server.get('/', (req, res) => {\r\n        if (hd) {\r\n            const diff = hd.end();\r\n            count += 1;\r\n            diff.change.details.forEach(detail => {\r\n                const delta = detail['+'] - detail['-'];\r\n                console.log(`${count},${detail.what},${detail['+']},${delta}`);\r\n            });\r\n            hd = undefined;\r\n        } else {\r\n            hd = new memwatch.HeapDiff();\r\n        }\r\n\r\n        res.send('Memory Test');\r\n    });\r\n\r\n    const port = process.env.SERVER_PORT || 3001;\r\n    const listener = server.listen(port);\r\n    console.log(`Memory test listening on port ${port}.`);\r\n\r\n    return listener;\r\n})();\r\n```\r\n\r\nIf you start the above script with `node server.js` and then do a request using `curl -s localhost:3001`, then it will output the change in the heap every other time. The output of the difference in added and cleaned items should average out to 0 (calculated as `delta` in the script and output as the 4th column). For most of the values it is 0, but for `Native`, `Timer` and `TimersList` it's usually 1. I believe that this is the cause of the memory growth that we are observing in our system and ideally it would be resolved to restore the Node 8 behavior of steady memory usage without growth.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3871/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3871/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3870",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3870/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3870/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3870/events",
    "html_url": "https://github.com/expressjs/express/pull/3870",
    "id": 405212860,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjQ5MjIwNzY3",
    "number": 3870,
    "title": "Fix #3869: Add support for custom view cache key",
    "user": {
      "login": "mkalygin",
      "id": 1662910,
      "node_id": "MDQ6VXNlcjE2NjI5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1662910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkalygin",
      "html_url": "https://github.com/mkalygin",
      "followers_url": "https://api.github.com/users/mkalygin/followers",
      "following_url": "https://api.github.com/users/mkalygin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkalygin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkalygin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkalygin/subscriptions",
      "organizations_url": "https://api.github.com/users/mkalygin/orgs",
      "repos_url": "https://api.github.com/users/mkalygin/repos",
      "events_url": "https://api.github.com/users/mkalygin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkalygin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-01-31T11:59:27Z",
    "updated_at": "2019-01-31T17:44:48Z",
    "closed_at": "2019-01-31T17:44:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3870",
      "html_url": "https://github.com/expressjs/express/pull/3870",
      "diff_url": "https://github.com/expressjs/express/pull/3870.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3870.patch",
      "merged_at": null
    },
    "body": "See description of the issue in https://github.com/expressjs/express/issues/3869.\r\n\r\n*What this PR includes:*\r\n- Add new option `cacheKey` to `renderOptions` of `render` method.\r\n- Slightly refactor cache tests in `app.render.js`, add new ones for new `cacheKey` option.\r\n\r\nFor a better context, here is how it may be used in an engine https://github.com/pugjs/pug/pull/3099.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3870/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3870/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3869",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3869/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3869/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3869/events",
    "html_url": "https://github.com/expressjs/express/issues/3869",
    "id": 405211514,
    "node_id": "MDU6SXNzdWU0MDUyMTE1MTQ=",
    "number": 3869,
    "title": "Views: custom cache key support",
    "user": {
      "login": "mkalygin",
      "id": 1662910,
      "node_id": "MDQ6VXNlcjE2NjI5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1662910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkalygin",
      "html_url": "https://github.com/mkalygin",
      "followers_url": "https://api.github.com/users/mkalygin/followers",
      "following_url": "https://api.github.com/users/mkalygin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkalygin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkalygin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkalygin/subscriptions",
      "organizations_url": "https://api.github.com/users/mkalygin/orgs",
      "repos_url": "https://api.github.com/users/mkalygin/repos",
      "events_url": "https://api.github.com/users/mkalygin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkalygin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2019-01-31T11:55:54Z",
    "updated_at": "2019-01-31T17:44:08Z",
    "closed_at": "2019-01-31T17:44:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This is probably not related directly to Express itself, but I think it's a nice feature to have and may cover some use cases. I refer specifically to Pug, but it may apply to any view engine.\r\n\r\n# Use Case\r\n\r\nA Pug user may want to use [filters](https://pugjs.org/language/filters.html) with dynamic content. But Pug compiles filters only once, they can't contain dynamic content. Express and Pug caches prevent to cache templates with a dynamic cache key, they use filename as a cache key instead. Most of the cache implementations support this, but Express and Pug don't, so you are unable to control how to cache templates.\r\n\r\n*Some related discussions:*\r\nhttps://github.com/pugjs/pug/issues/2603\r\nhttps://github.com/pugjs/pug/issues/1782\r\n\r\n# Suggested Solution\r\n\r\nWe can add the new option `cacheKey` to `render` method. And we can use it in `render` method to identify cached views. This is quite a small fix.\r\n\r\n*Pros:*\r\n- It's easy to implement and it won't be a breaking change.\r\n\r\n*Cons:*\r\n- It may complicate the API of the `render` method.\r\n- It may require view engines to implement support for it. E.g. Pug has its own cache under the hood. But this should be very easy, just one line of code.\r\n\r\nI'm going to submit PR for this one. Let me know your thoughts.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3869/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3869/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3868",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3868/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3868/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3868/events",
    "html_url": "https://github.com/expressjs/express/pull/3868",
    "id": 405002286,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjQ5MDU4NzU4",
    "number": 3868,
    "title": "#3867 docs: update the example in the readme so that it uses const instead of var",
    "user": {
      "login": "mwanago",
      "id": 15181215,
      "node_id": "MDQ6VXNlcjE1MTgxMjE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/15181215?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mwanago",
      "html_url": "https://github.com/mwanago",
      "followers_url": "https://api.github.com/users/mwanago/followers",
      "following_url": "https://api.github.com/users/mwanago/following{/other_user}",
      "gists_url": "https://api.github.com/users/mwanago/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mwanago/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mwanago/subscriptions",
      "organizations_url": "https://api.github.com/users/mwanago/orgs",
      "repos_url": "https://api.github.com/users/mwanago/repos",
      "events_url": "https://api.github.com/users/mwanago/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mwanago/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-01-30T22:55:07Z",
    "updated_at": "2019-04-16T23:48:22Z",
    "closed_at": "2019-04-16T23:48:22Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3868",
      "html_url": "https://github.com/expressjs/express/pull/3868",
      "diff_url": "https://github.com/expressjs/express/pull/3868.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3868.patch",
      "merged_at": "2019-04-16T23:48:22Z"
    },
    "body": "Closes #3867",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3868/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3868/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3867",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3867/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3867/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3867/events",
    "html_url": "https://github.com/expressjs/express/issues/3867",
    "id": 404998622,
    "node_id": "MDU6SXNzdWU0MDQ5OTg2MjI=",
    "number": 3867,
    "title": "Update the example in the readme so that it uses const instead of var",
    "user": {
      "login": "mwanago",
      "id": 15181215,
      "node_id": "MDQ6VXNlcjE1MTgxMjE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/15181215?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mwanago",
      "html_url": "https://github.com/mwanago",
      "followers_url": "https://api.github.com/users/mwanago/followers",
      "following_url": "https://api.github.com/users/mwanago/following{/other_user}",
      "gists_url": "https://api.github.com/users/mwanago/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mwanago/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mwanago/subscriptions",
      "organizations_url": "https://api.github.com/users/mwanago/orgs",
      "repos_url": "https://api.github.com/users/mwanago/repos",
      "events_url": "https://api.github.com/users/mwanago/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mwanago/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2019-01-30T22:43:12Z",
    "updated_at": "2019-04-16T23:48:54Z",
    "closed_at": "2019-04-16T23:48:54Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3867/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3867/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3866",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3866/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3866/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3866/events",
    "html_url": "https://github.com/expressjs/express/issues/3866",
    "id": 403520964,
    "node_id": "MDU6SXNzdWU0MDM1MjA5NjQ=",
    "number": 3866,
    "title": "'express.use' inconsistency in calling sequence",
    "user": {
      "login": "wenxinleong",
      "id": 16436505,
      "node_id": "MDQ6VXNlcjE2NDM2NTA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/16436505?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wenxinleong",
      "html_url": "https://github.com/wenxinleong",
      "followers_url": "https://api.github.com/users/wenxinleong/followers",
      "following_url": "https://api.github.com/users/wenxinleong/following{/other_user}",
      "gists_url": "https://api.github.com/users/wenxinleong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wenxinleong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wenxinleong/subscriptions",
      "organizations_url": "https://api.github.com/users/wenxinleong/orgs",
      "repos_url": "https://api.github.com/users/wenxinleong/repos",
      "events_url": "https://api.github.com/users/wenxinleong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wenxinleong/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-01-27T06:56:46Z",
    "updated_at": "2019-01-29T02:09:09Z",
    "closed_at": "2019-01-29T02:09:09Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Version: express@4.16.4 , body-parser@1.18.3\r\n\r\nTested with nodejs setup on AWS EC2, and a html webpage run directly on local machine. I notice that there is an inconsistent behavior in the calling sequence of middleware/router. In following html, the GET request is ok returning json `{from:'nodejs'}` . However, POST request jumps directly to method `Invalid URL`. \r\n\r\nMore test scenarios:\r\n\r\n1. Entirely remove the method `Invalid URL`, both GET and POST requests are ok returning json `{from:'nodejs'}` , and POST request `req.body` output the correct data `{from:'html'}`\r\n2. Removing `xhr.setRequestHeader(\"Content-Type\", \"application/json\");` both GET and POST requests are ok returning json `{from:'nodejs'}` , but `req.body` is blank which is expected\r\n\r\nhtml code:\r\n\r\n```\r\n<!DOCTYPE html>\r\n<html>\r\n<body>\r\n\r\n<button type=\"button\" onclick=\"get()\">GET</button>\r\n<button type=\"button\" onclick=\"post()\">POST</button>\r\n<p id=\"output\"></p>\r\n\r\n<script>\r\nfunction get() {\r\n    \r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\"GET\", 'http://x.x.x.x:8000/get', true);\r\n\r\n    xhr.onreadystatechange = function () {\r\n        if (xhr.readyState === 4 && xhr.status === 200) {\r\n            var json = JSON.parse(xhr.responseText);\r\n            console.log(\"Server Responded:\" + JSON.stringify(json));\r\n            document.getElementById(\"output\").innerHTML = JSON.stringify(json);\r\n        }\r\n    };\r\n    xhr.send();\r\n}\r\n\r\nfunction post() {\r\n    \r\n    var json = '{\"from\":\"html\"}';\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\"POST\", 'http://x.x.x.x:8000/post', true);\r\n\r\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n    xhr.onreadystatechange = function () {\r\n        if (xhr.readyState === 4 && xhr.status === 200) {\r\n            var json = JSON.parse(xhr.responseText);\r\n            console.log(\"Server Responded:\" + JSON.stringify(json));\r\n            document.getElementById(\"output\").innerHTML = JSON.stringify(json);\r\n        }\r\n    };\r\n    xhr.send(json);\r\n}\r\n</script> \r\n\r\n</body>\r\n</html> \r\n```\r\n\r\nServer code:\r\n\r\n```\r\nvar express = require('express');\r\nvar bodyParser = require('body-parser');\r\nvar app = express();\r\n\r\napp.use(bodyParser.urlencoded({\r\n  extended: true\r\n}));\r\napp.use(bodyParser.json());\r\n\r\napp.use(function(req, res, next) {\r\n    console.log( 'global pre-process middleware invoked' );\r\n    res.setHeader('Access-Control-Allow-Origin', '*');\r\n    res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS, PUT, PATCH, DELETE');\r\n    res.setHeader('Access-Control-Allow-Headers', 'content-type');\r\n    next();\r\n});\r\n\r\napp.get('/get', function (req, res, next) {\r\n    try {\r\n        var json = {from:'nodejs'};\r\n        console.log( JSON.stringify(json,null,'    ') );\r\n        res.end( JSON.stringify(json,null,'    ') );\r\n    } catch (e) {\r\n        next(e);\r\n    }\r\n});\r\n\r\napp.post('/post', function (req, res, next) {\r\n    try {\r\n        console.log(JSON.stringify(req.body));\r\n\r\n        var json = {from:'nodejs'};\r\n        console.log( JSON.stringify(json,null,'    ') );\r\n        res.end( JSON.stringify(json,null,'    ') );\r\n    } catch (e) {\r\n        next(e);\r\n    }\r\n});\r\n\r\napp.use(function(req, res, next) {\r\n    console.log('Invalid URL');\r\n});\r\n\r\nvar server = app.listen(8000, function () {\r\n    var host = server.address().address;\r\n    var port = server.address().port;\r\n    console.log('Listening at http://%s:%s', host, port);\r\n});\r\n\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3866/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3866/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3865",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3865/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3865/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3865/events",
    "html_url": "https://github.com/expressjs/express/issues/3865",
    "id": 403273570,
    "node_id": "MDU6SXNzdWU0MDMyNzM1NzA=",
    "number": 3865,
    "title": "Problem in installing express-generator",
    "user": {
      "login": "skdeepak",
      "id": 15711039,
      "node_id": "MDQ6VXNlcjE1NzExMDM5",
      "avatar_url": "https://avatars.githubusercontent.com/u/15711039?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/skdeepak",
      "html_url": "https://github.com/skdeepak",
      "followers_url": "https://api.github.com/users/skdeepak/followers",
      "following_url": "https://api.github.com/users/skdeepak/following{/other_user}",
      "gists_url": "https://api.github.com/users/skdeepak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/skdeepak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/skdeepak/subscriptions",
      "organizations_url": "https://api.github.com/users/skdeepak/orgs",
      "repos_url": "https://api.github.com/users/skdeepak/repos",
      "events_url": "https://api.github.com/users/skdeepak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/skdeepak/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-01-25T18:21:17Z",
    "updated_at": "2019-01-25T23:00:44Z",
    "closed_at": "2019-01-25T23:00:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "0 info it worked if it ends with ok\r\n1 verbose cli [ '/usr/bin/node', '/usr/bin/npm', 'install' ]\r\n2 info using npm@5.8.0\r\n3 info using node@v8.11.2\r\n4 verbose stack TypeError: Class constructor LRUCache cannot be invoked without 'new'\r\n4 verbose stack     at Object.<anonymous> (/usr/share/npm/lib/fetch-package-metadata.js:29:35)\r\n4 verbose stack     at Module._compile (module.js:652:30)\r\n4 verbose stack     at Object.Module._extensions..js (module.js:663:10)\r\n4 verbose stack     at Module.load (module.js:565:32)\r\n4 verbose stack     at tryModuleLoad (module.js:505:12)\r\n4 verbose stack     at Function.Module._load (module.js:497:3)\r\n4 verbose stack     at Module.require (module.js:596:17)\r\n4 verbose stack     at require (internal/module.js:11:18)\r\n4 verbose stack     at Object.<anonymous> (/usr/share/npm/lib/install/deps.js:15:28)\r\n4 verbose stack     at Module._compile (module.js:652:30)\r\n4 verbose stack     at Object.Module._extensions..js (module.js:663:10)\r\n4 verbose stack     at Module.load (module.js:565:32)\r\n4 verbose stack     at tryModuleLoad (module.js:505:12)\r\n4 verbose stack     at Function.Module._load (module.js:497:3)\r\n4 verbose stack     at Module.require (module.js:596:17)\r\n4 verbose stack     at require (internal/module.js:11:18)\r\n5 verbose cwd /root/MyWorkspace/code\r\n6 verbose Linux 4.19.0-kali1-amd64\r\n7 verbose argv \"/usr/bin/node\" \"/usr/bin/npm\" \"install\"\r\n8 verbose node v8.11.2\r\n9 verbose npm  v5.8.0\r\n10 error Class constructor LRUCache cannot be invoked without 'new'",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3865/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3865/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3864",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3864/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3864/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3864/events",
    "html_url": "https://github.com/expressjs/express/pull/3864",
    "id": 402869743,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjQ3NDU2MjM3",
    "number": 3864,
    "title": "Add Semi-Colon",
    "user": {
      "login": "SanyamPunia",
      "id": 35108041,
      "node_id": "MDQ6VXNlcjM1MTA4MDQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35108041?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SanyamPunia",
      "html_url": "https://github.com/SanyamPunia",
      "followers_url": "https://api.github.com/users/SanyamPunia/followers",
      "following_url": "https://api.github.com/users/SanyamPunia/following{/other_user}",
      "gists_url": "https://api.github.com/users/SanyamPunia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SanyamPunia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SanyamPunia/subscriptions",
      "organizations_url": "https://api.github.com/users/SanyamPunia/orgs",
      "repos_url": "https://api.github.com/users/SanyamPunia/repos",
      "events_url": "https://api.github.com/users/SanyamPunia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SanyamPunia/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-01-24T19:53:02Z",
    "updated_at": "2019-01-24T19:59:19Z",
    "closed_at": "2019-01-24T19:59:19Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3864",
      "html_url": "https://github.com/expressjs/express/pull/3864",
      "diff_url": "https://github.com/expressjs/express/pull/3864.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3864.patch",
      "merged_at": null
    },
    "body": "Added the missing semi-colon at the end of the 1st line.\r\nIt's not that big issue but its good to add one :)",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3864/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3864/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3863",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3863/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3863/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3863/events",
    "html_url": "https://github.com/expressjs/express/issues/3863",
    "id": 402368694,
    "node_id": "MDU6SXNzdWU0MDIzNjg2OTQ=",
    "number": 3863,
    "title": "Concurrent .get requests are handled sequentially per URL...",
    "user": {
      "login": "benbenbenbenbenben",
      "id": 443171,
      "node_id": "MDQ6VXNlcjQ0MzE3MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/443171?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benbenbenbenbenben",
      "html_url": "https://github.com/benbenbenbenbenben",
      "followers_url": "https://api.github.com/users/benbenbenbenbenben/followers",
      "following_url": "https://api.github.com/users/benbenbenbenbenben/following{/other_user}",
      "gists_url": "https://api.github.com/users/benbenbenbenbenben/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benbenbenbenbenben/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benbenbenbenbenben/subscriptions",
      "organizations_url": "https://api.github.com/users/benbenbenbenbenben/orgs",
      "repos_url": "https://api.github.com/users/benbenbenbenbenben/repos",
      "events_url": "https://api.github.com/users/benbenbenbenbenben/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benbenbenbenbenben/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2019-01-23T18:18:16Z",
    "updated_at": "2019-01-24T10:52:13Z",
    "closed_at": "2019-01-24T10:46:01Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I discovered this inconsistency using node-red and traced it back to express. It appears that when more than one request comes in for any particular URL, they are handled sequentially and synchronously.\r\n\r\nIf redundant query parameters are appended to the URL, so as to make them \"distinct\", then they're handled simultaneously.\r\n\r\nThe code at the bottom is enough to reproduce the issue.\r\n\r\nOnce the application is running, try loading `http://localhost:777/foo` in more than one tab at once. Now try the same with a random query string that differs in each e.g. `http://localhost:777/foo?123` and `http://localhost:777/foo?456`.\r\n\r\nThese requests both resolve the same route in code, so it doesn't make sense that in one case they are sequentially executed and in the other concurrently.\r\n\r\nReproduce with the following code:\r\n\r\n```javascript\r\nvar express = require('express')\r\nvar app = express()\r\nvar port = 777\r\n\r\n// respond with \"hello world\" when a GET request is made to the homepage\r\napp.get('/foo', function (req, res) {\r\n    setTimeout(function() {\r\n        res.send('hello world')\r\n    }, 10000)\r\n})\r\n\r\napp.listen(port, () => console.log(`Example app listening on port ${port}!`))```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3863/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3863/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3862",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3862/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3862/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3862/events",
    "html_url": "https://github.com/expressjs/express/issues/3862",
    "id": 401893500,
    "node_id": "MDU6SXNzdWU0MDE4OTM1MDA=",
    "number": 3862,
    "title": "Express 4.x cannot send status and body at the same time",
    "user": {
      "login": "corciumihai",
      "id": 18243843,
      "node_id": "MDQ6VXNlcjE4MjQzODQz",
      "avatar_url": "https://avatars.githubusercontent.com/u/18243843?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/corciumihai",
      "html_url": "https://github.com/corciumihai",
      "followers_url": "https://api.github.com/users/corciumihai/followers",
      "following_url": "https://api.github.com/users/corciumihai/following{/other_user}",
      "gists_url": "https://api.github.com/users/corciumihai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/corciumihai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/corciumihai/subscriptions",
      "organizations_url": "https://api.github.com/users/corciumihai/orgs",
      "repos_url": "https://api.github.com/users/corciumihai/repos",
      "events_url": "https://api.github.com/users/corciumihai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/corciumihai/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2019-01-22T18:22:57Z",
    "updated_at": "2019-01-22T18:48:16Z",
    "closed_at": "2019-01-22T18:48:16Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When using Express 4.16.4, I cannot send to the client the response in the form of \r\n`response.status(404).send('Resource not found');`,\r\nbut it works using \r\n`response.sendStatus(404)` or \r\n`response.send('Resource not found');`\r\nThis is the rough code that I use\r\n`app.post('/route', (request, response) => {\r\n    database.query('SELECT * FROM table WHERE id= ?', request.body.id, (error, result, fields) => {\r\n        if(error){\r\n            response.status(500).send('Internal error');\r\n        }\r\n        else{\r\n            if(!result[0]){\r\n                response.send('Resource not found');\r\n            }\r\n        }\r\n    })\r\n})`",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3862/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3862/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3861",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3861/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3861/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3861/events",
    "html_url": "https://github.com/expressjs/express/issues/3861",
    "id": 401798963,
    "node_id": "MDU6SXNzdWU0MDE3OTg5NjM=",
    "number": 3861,
    "title": "Async middleware doesn't catch errors",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2019-01-22T14:47:29Z",
    "updated_at": "2019-01-22T17:26:22Z",
    "closed_at": "2019-01-22T14:49:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Express doesn't automatically catch errors from asynchronous middleware.\r\n\r\nThis works fine:\r\n```javascript\r\napp.get(\"/\", function (req, res) {\r\n  throw new Error(\"BROKEN\"); // Express will catch this on its own and it works fine\r\n});\r\n```\r\n\r\nThis doesn't work:\r\n```javascript\r\napp.get(\"/\", async function (req, res) {\r\n  throw new Error(\"BROKEN\"); // Express will catch this on its own and it doesn't work\r\n});\r\n```\r\n\r\nIs there any possibility for support asynchronous methods in middleware and catching errors from asynchronous methods?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3861/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3861/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3860",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3860/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3860/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3860/events",
    "html_url": "https://github.com/expressjs/express/pull/3860",
    "id": 401737589,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjQ2NTgzNTcw",
    "number": 3860,
    "title": "Added some meta tags in examples",
    "user": {
      "login": "adisrivas",
      "id": 39951910,
      "node_id": "MDQ6VXNlcjM5OTUxOTEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/39951910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adisrivas",
      "html_url": "https://github.com/adisrivas",
      "followers_url": "https://api.github.com/users/adisrivas/followers",
      "following_url": "https://api.github.com/users/adisrivas/following{/other_user}",
      "gists_url": "https://api.github.com/users/adisrivas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adisrivas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adisrivas/subscriptions",
      "organizations_url": "https://api.github.com/users/adisrivas/orgs",
      "repos_url": "https://api.github.com/users/adisrivas/repos",
      "events_url": "https://api.github.com/users/adisrivas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adisrivas/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2019-01-22T12:16:43Z",
    "updated_at": "2020-03-25T21:29:12Z",
    "closed_at": "2020-03-25T21:29:08Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3860",
      "html_url": "https://github.com/expressjs/express/pull/3860",
      "diff_url": "https://github.com/expressjs/express/pull/3860.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3860.patch",
      "merged_at": "2020-03-25T21:29:12Z"
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3860/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3860/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3859",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3859/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3859/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3859/events",
    "html_url": "https://github.com/expressjs/express/pull/3859",
    "id": 400386004,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjQ1NTg1NjUw",
    "number": 3859,
    "title": "Typo fix",
    "user": {
      "login": "artonge",
      "id": 6653109,
      "node_id": "MDQ6VXNlcjY2NTMxMDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6653109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/artonge",
      "html_url": "https://github.com/artonge",
      "followers_url": "https://api.github.com/users/artonge/followers",
      "following_url": "https://api.github.com/users/artonge/following{/other_user}",
      "gists_url": "https://api.github.com/users/artonge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/artonge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/artonge/subscriptions",
      "organizations_url": "https://api.github.com/users/artonge/orgs",
      "repos_url": "https://api.github.com/users/artonge/repos",
      "events_url": "https://api.github.com/users/artonge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/artonge/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-01-17T17:33:15Z",
    "updated_at": "2019-04-16T15:35:36Z",
    "closed_at": "2019-04-16T15:35:20Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3859",
      "html_url": "https://github.com/expressjs/express/pull/3859",
      "diff_url": "https://github.com/expressjs/express/pull/3859.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3859.patch",
      "merged_at": "2019-04-16T15:35:20Z"
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3859/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3859/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3858",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3858/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3858/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3858/events",
    "html_url": "https://github.com/expressjs/express/issues/3858",
    "id": 399987041,
    "node_id": "MDU6SXNzdWUzOTk5ODcwNDE=",
    "number": 3858,
    "title": "pass data to partial view and use it in every view/page",
    "user": {
      "login": "SunilParashar",
      "id": 29592846,
      "node_id": "MDQ6VXNlcjI5NTkyODQ2",
      "avatar_url": "https://avatars.githubusercontent.com/u/29592846?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SunilParashar",
      "html_url": "https://github.com/SunilParashar",
      "followers_url": "https://api.github.com/users/SunilParashar/followers",
      "following_url": "https://api.github.com/users/SunilParashar/following{/other_user}",
      "gists_url": "https://api.github.com/users/SunilParashar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SunilParashar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SunilParashar/subscriptions",
      "organizations_url": "https://api.github.com/users/SunilParashar/orgs",
      "repos_url": "https://api.github.com/users/SunilParashar/repos",
      "events_url": "https://api.github.com/users/SunilParashar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SunilParashar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-01-16T20:40:21Z",
    "updated_at": "2019-04-17T22:48:08Z",
    "closed_at": "2019-04-17T22:48:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\r\nI am very new to nodejs-express. I am using ejs as engine. My problem is I have to use a partial view containing dynamic data in every page/view. I don't want to pass data from every router to render it. is it possible that I pass the data once and use it anywhere independent of the router. For example, in a navigation bar I am displaying user info with some notifications and I have to use this navbar allover my site. How can I achieve it without repassing the data.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3858/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3858/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3857",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3857/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3857/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3857/events",
    "html_url": "https://github.com/expressjs/express/issues/3857",
    "id": 399693214,
    "node_id": "MDU6SXNzdWUzOTk2OTMyMTQ=",
    "number": 3857,
    "title": "How to use colon as normal character instead of route param",
    "user": {
      "login": "isayme",
      "id": 1747852,
      "node_id": "MDQ6VXNlcjE3NDc4NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1747852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/isayme",
      "html_url": "https://github.com/isayme",
      "followers_url": "https://api.github.com/users/isayme/followers",
      "following_url": "https://api.github.com/users/isayme/following{/other_user}",
      "gists_url": "https://api.github.com/users/isayme/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/isayme/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/isayme/subscriptions",
      "organizations_url": "https://api.github.com/users/isayme/orgs",
      "repos_url": "https://api.github.com/users/isayme/repos",
      "events_url": "https://api.github.com/users/isayme/events{/privacy}",
      "received_events_url": "https://api.github.com/users/isayme/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2019-01-16T08:16:28Z",
    "updated_at": "2022-10-02T03:23:28Z",
    "closed_at": "2019-01-17T02:13:14Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Colon(:) used to define route param in Express/Koa.\r\n\r\n```\r\napp.get('/users/:userId/books/:bookId', function (req, res) {\r\n  res.send(req.params)\r\n})\r\n```\r\n\r\nGoogle API design use colon as custom verb\r\n![image](https://user-images.githubusercontent.com/1747852/51235171-ca8e4680-19a9-11e9-9397-dcfb7c083aba.png)\r\n\r\n### Question: Is there a way to define a route in which I want use colon as normal character ?\r\nTarget: define a route that match `PUT /tasks/1234:undelete`, and define with string instead of regexp.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3857/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3857/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3856",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3856/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3856/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3856/events",
    "html_url": "https://github.com/expressjs/express/issues/3856",
    "id": 399525062,
    "node_id": "MDU6SXNzdWUzOTk1MjUwNjI=",
    "number": 3856,
    "title": "clearCookie should set maxAge not expires",
    "user": {
      "login": "chrsmith",
      "id": 4029847,
      "node_id": "MDQ6VXNlcjQwMjk4NDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4029847?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chrsmith",
      "html_url": "https://github.com/chrsmith",
      "followers_url": "https://api.github.com/users/chrsmith/followers",
      "following_url": "https://api.github.com/users/chrsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/chrsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chrsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chrsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/chrsmith/orgs",
      "repos_url": "https://api.github.com/users/chrsmith/repos",
      "events_url": "https://api.github.com/users/chrsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chrsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-01-15T20:37:46Z",
    "updated_at": "2019-06-15T20:34:19Z",
    "closed_at": "2019-01-15T21:39:04Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Calling `res.clearCookie` will fail to delete a cookie if a `maxAge` value is passed in the cookie's options. This is because of a specific detail in how the `Set-Cookie` header works and what I believe to be a bug in the Express implementation. (This may be the root cause for some users who came across #691.)\r\n\r\n**Repro**\r\n\r\n```typescript\r\nconst cookieSettings = {\r\n    httpOnly: false,\r\n    maxAge: 1000 * 60 * 60 * 24 * 14,  // 14 days.\r\n    secure: false,\r\n};\r\n\r\n// Testing cookie issues. In a browser make the following requests:\r\n//\r\n// /cookie-test?add=foo\r\n// /cookie-test?delete=foo\r\n// /cookie-test\r\n//\r\n// Expected: Don't see \"foo\" in the list of cookies.\r\n// Observed: \"foo\" is in the list of cookies.\r\napp.get(\"/cookie-test\", (req, res) => {\r\n    let body = \"<html><pre>\";\r\n    if (req.query[\"add\"]) {\r\n        body += `Adding cookie: ${req.query[\"add\"]}\\n`;\r\n        res.cookie(req.query[\"add\"], (new Date()).toString(), cookieSettings);\r\n    }\r\n\r\n    if (req.query[\"delete\"]) {\r\n        body += `Deleting cookie: ${req.query[\"delete\"]}\\n`;\r\n        res.clearCookie(req.query[\"delete\"], cookieSettings);\r\n    }\r\n\r\n    body += `Cookies:${JSON.stringify(req.cookies, null, 2)}`;\r\n    body += \"</pre>\";\r\n\r\n    console.log(`=============\\n${body}\\n\\n`);\r\n    res.status(200).send(body);\r\n});\r\n```\r\n\r\n**Cause**\r\nThe problem is rooted in the implementation of `clearCookie`:\r\n\r\n```\r\nres.clearCookie = function clearCookie(name, options) {\r\n  var opts = merge({ expires: new Date(1), path: '/' }, options);\r\n\r\n  return this.cookie(name, '', opts);\r\n};\r\n```\r\n\r\nThe `expires` field is set, which if that timestamp has passed, the cookie will be deleted. However, there is a separate cookie setting `maxAge` which can be used as well. And from the [RFC](https://tools.ietf.org/html/rfc6265#section-4.1), the `maxAge` setting takes precedence.\r\n\r\nhttps://tools.ietf.org/html/rfc6265#section-4.1\r\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie\r\n\r\nSo if you call `clearCookie` with the cookie settings that contains a `maxAge`, the result will be both the `expires` and `maxAge` properties will be set. And since the `maxAge` property will take precedence, the cookie will not be deleted. (It's value will be cleared out, however.)\r\n\r\nI believe the right fix would just to be explicitly set `maxAge` on the merged cookie options, intentionally overwriting whatever settings were passed by the user. Since obviously the intent is to clear the cookie and not persist it. e.g.\r\n\r\n```diff\r\nres.clearCookie = function clearCookie(name, options) {\r\n-  var opts = merge({ expires: new Date(1), path: '/' }, options);\r\n+  var opts = merge({ path: '/' }, options);\r\n+  opts.maxAge = 0;\r\n  return this.cookie(name, '', opts);\r\n};\r\n```\r\n\r\nAssuming this all sounds right, I'm happy to submit a PR to fix it.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3856/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3856/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3855",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3855/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3855/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3855/events",
    "html_url": "https://github.com/expressjs/express/issues/3855",
    "id": 399136720,
    "node_id": "MDU6SXNzdWUzOTkxMzY3MjA=",
    "number": 3855,
    "title": "'lazyrouter' undefined",
    "user": {
      "login": "ThatTonybo",
      "id": 28176227,
      "node_id": "MDQ6VXNlcjI4MTc2MjI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/28176227?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ThatTonybo",
      "html_url": "https://github.com/ThatTonybo",
      "followers_url": "https://api.github.com/users/ThatTonybo/followers",
      "following_url": "https://api.github.com/users/ThatTonybo/following{/other_user}",
      "gists_url": "https://api.github.com/users/ThatTonybo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ThatTonybo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ThatTonybo/subscriptions",
      "organizations_url": "https://api.github.com/users/ThatTonybo/orgs",
      "repos_url": "https://api.github.com/users/ThatTonybo/repos",
      "events_url": "https://api.github.com/users/ThatTonybo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ThatTonybo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2019-01-15T00:32:07Z",
    "updated_at": "2023-03-07T04:08:38Z",
    "closed_at": "2019-01-30T23:02:40Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I started a fresh project today, installing all my usual modules (`express`, `body-parser` and such). After setting everything up, as usual, I ran into this new error on node server.js`:\r\n```\r\nC:\\Users\\ThatTonybo\\Desktop\\discussion\\node_modules\\express\\lib\\application.js:214\r\n  this.lazyrouter();\r\n       ^\r\n\r\nTypeError: Cannot read property 'lazyrouter' of undefined\r\n    at use (C:\\Users\\ThatTonybo\\Desktop\\discussion\\node_modules\\express\\lib\\application.js:214:8)\r\n    at module.exports (C:\\Users\\ThatTonybo\\Desktop\\discussion\\router.js:3:5)\r\n    at Object.<anonymous> (C:\\Users\\ThatTonybo\\Desktop\\discussion\\server.js:25:20)\r\n    at Module._compile (internal/modules/cjs/loader.js:689:30)\r\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:700:10)\r\n    at Module.load (internal/modules/cjs/loader.js:599:32)\r\n    at tryModuleLoad (internal/modules/cjs/loader.js:538:12)\r\n    at Function.Module._load (internal/modules/cjs/loader.js:530:3)\r\n    at Function.Module.runMain (internal/modules/cjs/loader.js:742:12)\r\n    at startup (internal/bootstrap/node.js:279:19)\r\n```\r\nI've done a little investigating and searching, and it seems to occur at ln 214. `  this.lazyrouter();` in `express/lib/application.js`.\r\n\r\nIs there a quick fix to this?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3855/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3855/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3854",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3854/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3854/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3854/events",
    "html_url": "https://github.com/expressjs/express/issues/3854",
    "id": 399060451,
    "node_id": "MDU6SXNzdWUzOTkwNjA0NTE=",
    "number": 3854,
    "title": "No default engine was specified nodejs",
    "user": {
      "login": "AhsanNissar",
      "id": 14846851,
      "node_id": "MDQ6VXNlcjE0ODQ2ODUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/14846851?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AhsanNissar",
      "html_url": "https://github.com/AhsanNissar",
      "followers_url": "https://api.github.com/users/AhsanNissar/followers",
      "following_url": "https://api.github.com/users/AhsanNissar/following{/other_user}",
      "gists_url": "https://api.github.com/users/AhsanNissar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AhsanNissar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AhsanNissar/subscriptions",
      "organizations_url": "https://api.github.com/users/AhsanNissar/orgs",
      "repos_url": "https://api.github.com/users/AhsanNissar/repos",
      "events_url": "https://api.github.com/users/AhsanNissar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AhsanNissar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-01-14T20:28:47Z",
    "updated_at": "2019-01-15T05:46:27Z",
    "closed_at": "2019-01-15T05:46:27Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "My backend is in nodejs and frontend in angular so that's why i do not want to use any templating engine in node and i need to find a way around this. i took code of using passport authentication from another directory and i need to remove res.render call from it ensuring the smooth working of the api. how can i do this and also stop node to give me the abouve specified error.\r\n\r\n    app.post('/register', (req, res) => {\r\n    console.log(req.body);\r\n    const { firstname, lastname, email, password } = req.body;\r\n    let errors = [];\r\n  \r\n    if (errors.length > 0) {\r\n      res.render('register', {\r\n        errors,\r\n        name,\r\n        email,\r\n        password,\r\n        password2\r\n      });\r\n    } else {\r\n      User.findOne({ email: email }).then(user => {\r\n        if (user) {\r\n          errors.push({ msg: 'Email already exists' });\r\n          res.render('register', {\r\n            errors,\r\n            firstname,\r\n            lastname,\r\n            email,\r\n            password\r\n          });\r\n        } else {\r\n          const newUser = new User({\r\n            firstname,\r\n            lastname,\r\n            email,\r\n            password\r\n          });\r\n  \r\n          bcrypt.genSalt(10, (err, salt) => {\r\n            bcrypt.hash(newUser.password, salt, (err, hash) => {\r\n              if (err) throw err;\r\n              newUser.password = hash;\r\n              newUser\r\n                .save()\r\n                .then(user => {\r\n                  req.flash(\r\n                    'success_msg',\r\n                    'You are now registered and can log in'\r\n                  );\r\n                  res.redirect('/login');\r\n                })\r\n                .catch(err => console.log(err));\r\n            });\r\n          });\r\n        }\r\n      })\r\n      .catch(err => console.log(err))\r\n      }\r\n     });\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3854/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3854/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3853",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3853/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3853/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3853/events",
    "html_url": "https://github.com/expressjs/express/issues/3853",
    "id": 398837339,
    "node_id": "MDU6SXNzdWUzOTg4MzczMzk=",
    "number": 3853,
    "title": "Problem with res.write fucntion",
    "user": {
      "login": "nairihar",
      "id": 15065065,
      "node_id": "MDQ6VXNlcjE1MDY1MDY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/15065065?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nairihar",
      "html_url": "https://github.com/nairihar",
      "followers_url": "https://api.github.com/users/nairihar/followers",
      "following_url": "https://api.github.com/users/nairihar/following{/other_user}",
      "gists_url": "https://api.github.com/users/nairihar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nairihar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nairihar/subscriptions",
      "organizations_url": "https://api.github.com/users/nairihar/orgs",
      "repos_url": "https://api.github.com/users/nairihar/repos",
      "events_url": "https://api.github.com/users/nairihar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nairihar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-01-14T10:57:33Z",
    "updated_at": "2019-01-14T11:08:20Z",
    "closed_at": "2019-01-14T11:08:20Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi, I have a question related to `res.write` function.\r\nPlease help me to understand this issue, why there is error.\r\n\r\n`stringifyAsync` function returns Promise with stringified json data(by JSON.stringify).\r\n\r\nVersion: \"express\": \"^4.16.3\"\r\n\r\n**Working version**\r\n```js\r\nstringifyAsync(data) // returns stringified json by JSON.stringify function\r\n            .then(str_data => res.write(str_data)) // works\r\n```\r\n\r\n**Not working version**\r\n```js\r\nstringifyAsync(data) // returns stringified json by JSON.stringify function\r\n            .then(res.write) // error\r\n```\r\n\r\n**Error**\r\n```\r\nTypeError: Cannot read property 'finished' of undefined\r\n    at write_ (_http_outgoing.js:621:11)\r\n    at write (_http_outgoing.js:617:10)\r\n    at <anonymous>\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3853/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3853/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3852",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3852/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3852/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3852/events",
    "html_url": "https://github.com/expressjs/express/issues/3852",
    "id": 398581559,
    "node_id": "MDU6SXNzdWUzOTg1ODE1NTk=",
    "number": 3852,
    "title": "express.json([options]) documentation needs example",
    "user": {
      "login": "toymachiner62",
      "id": 485782,
      "node_id": "MDQ6VXNlcjQ4NTc4Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/485782?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toymachiner62",
      "html_url": "https://github.com/toymachiner62",
      "followers_url": "https://api.github.com/users/toymachiner62/followers",
      "following_url": "https://api.github.com/users/toymachiner62/following{/other_user}",
      "gists_url": "https://api.github.com/users/toymachiner62/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toymachiner62/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toymachiner62/subscriptions",
      "organizations_url": "https://api.github.com/users/toymachiner62/orgs",
      "repos_url": "https://api.github.com/users/toymachiner62/repos",
      "events_url": "https://api.github.com/users/toymachiner62/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toymachiner62/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-01-12T18:54:19Z",
    "updated_at": "2019-01-12T18:56:02Z",
    "closed_at": "2019-01-12T18:56:01Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I was looking at the express docs again the other day and noticed `express.json([options])` on this page https://expressjs.com/en/4x/api.html and I see it says that this is based on `body-parser`. I've used `body-parser` many times before, but curious if `express.json()` is a built in replacement for an external dependency?\r\n\r\nIn either case there is no example on how to use it. Can you please add one? Is it used the exact same way as `body-parser`?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3852/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3852/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3851",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3851/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3851/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3851/events",
    "html_url": "https://github.com/expressjs/express/pull/3851",
    "id": 398174990,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjQzOTM5ODAy",
    "number": 3851,
    "title": "Add limit for split",
    "user": {
      "login": "Connormiha",
      "id": 4091305,
      "node_id": "MDQ6VXNlcjQwOTEzMDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4091305?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Connormiha",
      "html_url": "https://github.com/Connormiha",
      "followers_url": "https://api.github.com/users/Connormiha/followers",
      "following_url": "https://api.github.com/users/Connormiha/following{/other_user}",
      "gists_url": "https://api.github.com/users/Connormiha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Connormiha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Connormiha/subscriptions",
      "organizations_url": "https://api.github.com/users/Connormiha/orgs",
      "repos_url": "https://api.github.com/users/Connormiha/repos",
      "events_url": "https://api.github.com/users/Connormiha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Connormiha/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-01-11T08:08:23Z",
    "updated_at": "2019-01-11T22:26:17Z",
    "closed_at": "2019-01-11T22:26:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3851",
      "html_url": "https://github.com/expressjs/express/pull/3851",
      "diff_url": "https://github.com/expressjs/express/pull/3851.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3851.patch",
      "merged_at": null
    },
    "body": "I added limit for split method for performance reason.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3851/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3851/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3850",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3850/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3850/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3850/events",
    "html_url": "https://github.com/expressjs/express/issues/3850",
    "id": 397178270,
    "node_id": "MDU6SXNzdWUzOTcxNzgyNzA=",
    "number": 3850,
    "title": "Promise error handlers listening on all routers",
    "user": {
      "login": "MichaelOdumosu57",
      "id": 21322737,
      "node_id": "MDQ6VXNlcjIxMzIyNzM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/21322737?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MichaelOdumosu57",
      "html_url": "https://github.com/MichaelOdumosu57",
      "followers_url": "https://api.github.com/users/MichaelOdumosu57/followers",
      "following_url": "https://api.github.com/users/MichaelOdumosu57/following{/other_user}",
      "gists_url": "https://api.github.com/users/MichaelOdumosu57/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MichaelOdumosu57/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MichaelOdumosu57/subscriptions",
      "organizations_url": "https://api.github.com/users/MichaelOdumosu57/orgs",
      "repos_url": "https://api.github.com/users/MichaelOdumosu57/repos",
      "events_url": "https://api.github.com/users/MichaelOdumosu57/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MichaelOdumosu57/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-01-09T01:57:24Z",
    "updated_at": "2019-01-09T01:59:46Z",
    "closed_at": "2019-01-09T01:59:40Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Removed",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3850/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3850/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3849",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3849/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3849/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3849/events",
    "html_url": "https://github.com/expressjs/express/issues/3849",
    "id": 397106641,
    "node_id": "MDU6SXNzdWUzOTcxMDY2NDE=",
    "number": 3849,
    "title": "View render error from Routes",
    "user": {
      "login": "haliloncen",
      "id": 5833429,
      "node_id": "MDQ6VXNlcjU4MzM0Mjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5833429?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haliloncen",
      "html_url": "https://github.com/haliloncen",
      "followers_url": "https://api.github.com/users/haliloncen/followers",
      "following_url": "https://api.github.com/users/haliloncen/following{/other_user}",
      "gists_url": "https://api.github.com/users/haliloncen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haliloncen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haliloncen/subscriptions",
      "organizations_url": "https://api.github.com/users/haliloncen/orgs",
      "repos_url": "https://api.github.com/users/haliloncen/repos",
      "events_url": "https://api.github.com/users/haliloncen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haliloncen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-01-08T22:05:35Z",
    "updated_at": "2019-01-09T20:59:00Z",
    "closed_at": "2019-01-09T20:59:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm writing my codes with es6 standarts and transpile with babel cli. But i got an error when res.render() method use from routes middlewares.\r\nMy server codes : \r\n![ekran resmi 2019-01-09 00 53 31](https://user-images.githubusercontent.com/5833429/50861225-1426d200-13a9-11e9-9f1a-e8349eafe79a.png)\r\n\r\nAnd my route middleware codes : \r\n![ekran resmi 2019-01-09 00 55 28](https://user-images.githubusercontent.com/5833429/50861307-4a645180-13a9-11e9-9b13-9a73a068a80f.png)\r\n\r\nError : \r\n![ekran resmi 2019-01-09 01 01 00](https://user-images.githubusercontent.com/5833429/50861558-1b021480-13aa-11e9-9945-acec468ca0f5.png)\r\nAlthough I was setting path but it looking in PROJECT_ROOT/views directory\r\n\r\n-----------\r\nThe interesting thing is:\r\nIf i don't use route middleware, it works! For example: \r\n![ekran resmi 2019-01-09 00 59 59](https://user-images.githubusercontent.com/5833429/50861490-ed1cd000-13a9-11e9-8fe8-846f73e69fe0.png)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3849/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3849/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3848",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3848/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3848/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3848/events",
    "html_url": "https://github.com/expressjs/express/pull/3848",
    "id": 396731270,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjQyODQzNTA4",
    "number": 3848,
    "title": "路由观察器",
    "user": {
      "login": "spiritwindy",
      "id": 18753430,
      "node_id": "MDQ6VXNlcjE4NzUzNDMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/18753430?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/spiritwindy",
      "html_url": "https://github.com/spiritwindy",
      "followers_url": "https://api.github.com/users/spiritwindy/followers",
      "following_url": "https://api.github.com/users/spiritwindy/following{/other_user}",
      "gists_url": "https://api.github.com/users/spiritwindy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/spiritwindy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/spiritwindy/subscriptions",
      "organizations_url": "https://api.github.com/users/spiritwindy/orgs",
      "repos_url": "https://api.github.com/users/spiritwindy/repos",
      "events_url": "https://api.github.com/users/spiritwindy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/spiritwindy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-01-08T02:59:01Z",
    "updated_at": "2019-05-09T22:05:17Z",
    "closed_at": "2019-05-09T22:05:05Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3848",
      "html_url": "https://github.com/expressjs/express/pull/3848",
      "diff_url": "https://github.com/expressjs/express/pull/3848.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3848.patch",
      "merged_at": null
    },
    "body": "show router  register  and router   method , stack",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3848/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3848/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3847",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3847/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3847/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3847/events",
    "html_url": "https://github.com/expressjs/express/issues/3847",
    "id": 396147205,
    "node_id": "MDU6SXNzdWUzOTYxNDcyMDU=",
    "number": 3847,
    "title": "Node crashes when I send a lot of the request in the same time",
    "user": {
      "login": "OscarCode9",
      "id": 26398466,
      "node_id": "MDQ6VXNlcjI2Mzk4NDY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/26398466?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/OscarCode9",
      "html_url": "https://github.com/OscarCode9",
      "followers_url": "https://api.github.com/users/OscarCode9/followers",
      "following_url": "https://api.github.com/users/OscarCode9/following{/other_user}",
      "gists_url": "https://api.github.com/users/OscarCode9/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/OscarCode9/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/OscarCode9/subscriptions",
      "organizations_url": "https://api.github.com/users/OscarCode9/orgs",
      "repos_url": "https://api.github.com/users/OscarCode9/repos",
      "events_url": "https://api.github.com/users/OscarCode9/events{/privacy}",
      "received_events_url": "https://api.github.com/users/OscarCode9/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-01-05T08:46:42Z",
    "updated_at": "2019-04-17T22:49:01Z",
    "closed_at": "2019-04-17T22:48:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When I send a request one by one, all work good but I want to run a loop of the request to the same root and  it  show me a message.\r\n```\r\node:12333) UnhandledPromiseRejectionWarning: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client\r\n    at ServerResponse.setHeader (_http_outgoing.js:470:11)\r\n    at ServerResponse.header (/home/oscarcode/Documents/oventsApi/node_modules/express/lib/response.js:767:10)\r\n    at ServerResponse.send (/home/oscarcode/Documents/oventsApi/node_modules/express/lib/response.js:170:12)\r\n    at ServerResponse.json (/home/oscarcode/Documents/oventsApi/node_modules/express/lib/response.js:267:15)\r\n    at ServerResponse.send (/home/oscarcode/Documents/oventsApi/node_modules/express/lib/response.js:158:21)\r\n    at getAllValuationsByUserName (/home/oscarcode/Documents/oventsApi/Controles/userPhoto/valuations/getAllValuationsByUserName.js:43:32)\r\n    at process.internalTickCallback (internal/process/next_tick.js:77:7)\r\n(node:12333) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 19)\r\n```\r\nthis is all my code. \r\n\r\n```\r\nasync function isAuth(req, res, next) {\r\n    if (!req.headers.authorization) {\r\n        return res.status(403).send({\r\n            message: 'No tienes autorizacion'\r\n        });\r\n    }\r\n    const token = req.headers.authorization.split(' ')[1];\r\n    try {\r\n        await jwt.verifyToken(token, config.SECRET_TOKEN, {});\r\n        next();\r\n\r\n    } catch (e) {\r\n        return res.status(500).send({\r\n            toke: 'Token no valido'\r\n        })\r\n    }\r\n\r\n}\r\nrouter.get('/getAllUsers', isAuth, async function getAllUsers(req, res, next){\r\n  try {\r\n    const users =  await User.find({})\r\n    if (!users) {\r\n      error.message = \"Users not found\";\r\n      return res.status(404).json({ error });\r\n    }else{\r\n      return res.send({\r\n        users,\r\n        error: false\r\n      });\r\n    }\r\n\r\n  } catch (error) {\r\n    res.status(400).send({\r\n      users:[],\r\n      error: error\r\n    })\r\n  }\r\n}); \r\n```\r\n\r\nand this is my script with that i'm testing. \r\n\r\n```\r\nvar request = require(\"request\");\r\n\r\nlet num = 0\r\nwhile (num < 20) {\r\n    var options = {\r\n        method: 'GET',\r\n        url: 'http://localhost:3003/api/getAllValuationsByUserName/alo?skip=0&limit=10',\r\n        headers:\r\n        {\r\n            'Postman-Token': '681e1613-3021-4d2a-8950-c481a2300f37',\r\n            'cache-control': 'no-cache',\r\n            Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1YmExYjVjZDBiMjM5MDM3YmNmYjliOTMiLCJuYW1lIjoiZ2RhMTMiLCJkYXRlIjoiMjAxOC0wOS0xOVQwMjozNDo1My45NjJaIiwic2VzaW9uIjp0cnVlLCJpYXQiOjE1MzczMjQ0OTR9.cWXLDBSVjEBMpcXOPojJWehvcu0eLtX_ecJN1C0Sp4o'\r\n        }\r\n    };\r\n\r\n    request(options, function (error, response, body) {\r\n        if (error) throw new Error(error);\r\n        console.log(body);\r\n    });\r\n    console.log(num)\r\n    num++\r\n}\r\n```\r\n\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3847/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3847/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3846",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3846/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3846/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3846/events",
    "html_url": "https://github.com/expressjs/express/pull/3846",
    "id": 396143094,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjQyNDI2NTcz",
    "number": 3846,
    "title": "docs: add contributing guidelines ",
    "user": {
      "login": "jamesgeorge007",
      "id": 25279263,
      "node_id": "MDQ6VXNlcjI1Mjc5MjYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/25279263?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesgeorge007",
      "html_url": "https://github.com/jamesgeorge007",
      "followers_url": "https://api.github.com/users/jamesgeorge007/followers",
      "following_url": "https://api.github.com/users/jamesgeorge007/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesgeorge007/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesgeorge007/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesgeorge007/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesgeorge007/orgs",
      "repos_url": "https://api.github.com/users/jamesgeorge007/repos",
      "events_url": "https://api.github.com/users/jamesgeorge007/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesgeorge007/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-01-05T07:41:49Z",
    "updated_at": "2019-04-17T21:47:02Z",
    "closed_at": "2019-04-17T21:47:02Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3846",
      "html_url": "https://github.com/expressjs/express/pull/3846",
      "diff_url": "https://github.com/expressjs/express/pull/3846.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3846.patch",
      "merged_at": "2019-04-17T21:47:02Z"
    },
    "body": "Added contributing guidelines as part of the docs.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3846/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3846/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3845",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3845/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3845/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3845/events",
    "html_url": "https://github.com/expressjs/express/issues/3845",
    "id": 395848510,
    "node_id": "MDU6SXNzdWUzOTU4NDg1MTA=",
    "number": 3845,
    "title": "Add support for a view engine with a different extension name than the module name",
    "user": {
      "login": "hdodov",
      "id": 5570098,
      "node_id": "MDQ6VXNlcjU1NzAwOTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5570098?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hdodov",
      "html_url": "https://github.com/hdodov",
      "followers_url": "https://api.github.com/users/hdodov/followers",
      "following_url": "https://api.github.com/users/hdodov/following{/other_user}",
      "gists_url": "https://api.github.com/users/hdodov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hdodov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hdodov/subscriptions",
      "organizations_url": "https://api.github.com/users/hdodov/orgs",
      "repos_url": "https://api.github.com/users/hdodov/repos",
      "events_url": "https://api.github.com/users/hdodov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hdodov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-01-04T08:40:31Z",
    "updated_at": "2019-01-04T16:52:04Z",
    "closed_at": "2019-01-04T16:02:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello!\r\n\r\nI've developed a template engine with support for Express, called [NHP](https://nhpjs.com/). However, the `nhp` name was taken in the npm registry and I was forced to publish my package as `nhpjs`. The problem is - my engine works with `.nhp` files, not `.nhpjs` files. I dug in the source code of Express and it seems like I can't set it up so that the module name differs from the extension name.\r\n\r\nI can see how this might be a problem in other scenarios - if you publish an engine with its full name but use only it initials for the extension. For example, [coffeescript](https://coffeescript.org/#introduction) uses `.coffee` files, not `.coffeescript` files.\r\n\r\nAnother issue could be scoped package names. If I publish my package as `@myorg/nhp`, my files would have to use the extension `index.@myorg/nhp`? That doesn't seem very user friendly.\r\n\r\nSuggestion:\r\n```js\r\napp.set('view engine', {\r\n    module: 'nhpjs',\r\n    extension: 'nhp'\r\n});\r\n```\r\nwhere\r\n```js\r\napp.set('view engine', 'pug');\r\n```\r\nis the same as\r\n```js\r\napp.set('view engine', {\r\n    module: 'pug',\r\n    extension: 'pug'\r\n});\r\n```\r\n\r\nIs there a chance this could be implemented?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3845/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3845/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3844",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3844/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3844/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3844/events",
    "html_url": "https://github.com/expressjs/express/issues/3844",
    "id": 395685017,
    "node_id": "MDU6SXNzdWUzOTU2ODUwMTc=",
    "number": 3844,
    "title": "Bug in rendering",
    "user": {
      "login": "Paultje52",
      "id": 31313717,
      "node_id": "MDQ6VXNlcjMxMzEzNzE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/31313717?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Paultje52",
      "html_url": "https://github.com/Paultje52",
      "followers_url": "https://api.github.com/users/Paultje52/followers",
      "following_url": "https://api.github.com/users/Paultje52/following{/other_user}",
      "gists_url": "https://api.github.com/users/Paultje52/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Paultje52/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Paultje52/subscriptions",
      "organizations_url": "https://api.github.com/users/Paultje52/orgs",
      "repos_url": "https://api.github.com/users/Paultje52/repos",
      "events_url": "https://api.github.com/users/Paultje52/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Paultje52/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2019-01-03T18:51:32Z",
    "updated_at": "2019-01-04T10:13:38Z",
    "closed_at": "2019-01-03T21:57:33Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I don't know if this is an ejs or express issue, so sorry if i'm in the wrong place. But, here is my bug:\r\n\r\nI'm making an wiki for my game with blocks. I want to document every block and I do it like this: \r\n```js\r\nrouter.get(\"/blocks/:block\", (req, res) => {\r\n  let block = req.params.block.toLowerCase();\r\n  if (![\"grass\", \"dirt\", \"stone\", \"water\", \"log\", \"leaf\"].includes(block)) return res.render(\"wiki/notFound.ejs\", {\r\n    user: req.user,\r\n    session: req.session,\r\n    title: \"Wiki: Block not found\",\r\n    type: \"specialBlock\",\r\n    block: block\r\n  });\r\n  res.render(`wiki/blocks/${block}`, {\r\n    user: req.user,\r\n    session: req.session,\r\n    title: `Wiki: ${block}`\r\n  });\r\n});\r\n```\r\nIt will send the user an error page when the block isn't one of the blocks in the array.\r\n\r\nThen, I use the variable `type` in my ejs like this:\r\n```html\r\n        <% if (!type) { %>\r\n          <p>Sorry, that page is not found. Here are some reasons why:</p>\r\n        <% } else if (type === \"block\") { %>\r\n          <p>Sorry, you are on the wrong page.</p>\r\n        <% } %>\r\n```\r\nWhen I go to the page while trying cross side scripting: <http://localhost/wiki/blocks/%3Cscript%3Ealert(1);%3C/script%3E> (with after blocks/ `<script>alert(1);</script>`)\r\n\r\nI get the error that `type` isn't defined:\r\n```\r\n  ReferenceError: C:\\Users\\Paul_New\\Desktop\\nodejs\\Websites\\BlockGame-2D\\views\\wiki\\notFound.ejs:13\r\n      11|       <div class=\"w3-rest\">\r\n      12|         <h1>Wiki</h1>\r\n   >> 13|         <% if (!type) { %>\r\n      14|           <p>Sorry, that page is not found. Here are some reasons why:</p>\r\n      15|         <% } else if (type === \"block\") { %>\r\n      16|           <p>Sorry, you are on the wrong page.</p>\r\n  type is not defined\r\n```\r\n\r\nFor questions, ask them. I think it has something todo with rendering html. But I don't know.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3844/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3844/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3843",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3843/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3843/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3843/events",
    "html_url": "https://github.com/expressjs/express/issues/3843",
    "id": 395402908,
    "node_id": "MDU6SXNzdWUzOTU0MDI5MDg=",
    "number": 3843,
    "title": "Why is there no Polish translation of this framework?",
    "user": {
      "login": "jessaleks",
      "id": 45589978,
      "node_id": "MDQ6VXNlcjQ1NTg5OTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/45589978?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jessaleks",
      "html_url": "https://github.com/jessaleks",
      "followers_url": "https://api.github.com/users/jessaleks/followers",
      "following_url": "https://api.github.com/users/jessaleks/following{/other_user}",
      "gists_url": "https://api.github.com/users/jessaleks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jessaleks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jessaleks/subscriptions",
      "organizations_url": "https://api.github.com/users/jessaleks/orgs",
      "repos_url": "https://api.github.com/users/jessaleks/repos",
      "events_url": "https://api.github.com/users/jessaleks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jessaleks/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-01-02T22:33:49Z",
    "updated_at": "2019-01-03T16:09:12Z",
    "closed_at": "2019-01-02T22:52:52Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Poland is a country with 38mln people with 60mln people if you count those who live abroad as well. ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3843/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3843/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3842",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3842/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3842/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3842/events",
    "html_url": "https://github.com/expressjs/express/issues/3842",
    "id": 395269119,
    "node_id": "MDU6SXNzdWUzOTUyNjkxMTk=",
    "number": 3842,
    "title": "Doesn't load style from public folder",
    "user": {
      "login": "Paultje52",
      "id": 31313717,
      "node_id": "MDQ6VXNlcjMxMzEzNzE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/31313717?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Paultje52",
      "html_url": "https://github.com/Paultje52",
      "followers_url": "https://api.github.com/users/Paultje52/followers",
      "following_url": "https://api.github.com/users/Paultje52/following{/other_user}",
      "gists_url": "https://api.github.com/users/Paultje52/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Paultje52/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Paultje52/subscriptions",
      "organizations_url": "https://api.github.com/users/Paultje52/orgs",
      "repos_url": "https://api.github.com/users/Paultje52/repos",
      "events_url": "https://api.github.com/users/Paultje52/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Paultje52/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-01-02T14:43:46Z",
    "updated_at": "2019-01-02T19:35:59Z",
    "closed_at": "2019-01-02T19:35:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello, I have a stylesheet in the folder \"public\" named \"style.css\". I set the public page with this line of code:\r\n```js\r\napp.use(express.static(__dirname + \"/public\"));\r\n```\r\nAnd it's working fine, except for one file: `views\\wiki\\how_to_play.ejs`. I just copy pasted the file and tried, but the style won't load. I used this code in the head:\r\n```html\r\n<link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\r\n```\r\nIn the same folder I have another file called `index.ejs` with the same code, and here the loading of the stylesheet works just fine.\r\n\r\nAnyone knowing why? If you need to know enything, just ask. Sorry for my bad English.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3842/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3842/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3841",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3841/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3841/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3841/events",
    "html_url": "https://github.com/expressjs/express/issues/3841",
    "id": 395224755,
    "node_id": "MDU6SXNzdWUzOTUyMjQ3NTU=",
    "number": 3841,
    "title": "Notice: False Security Vulnerability for 4.16.4",
    "user": {
      "login": "sdeshpande10",
      "id": 26160326,
      "node_id": "MDQ6VXNlcjI2MTYwMzI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/26160326?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdeshpande10",
      "html_url": "https://github.com/sdeshpande10",
      "followers_url": "https://api.github.com/users/sdeshpande10/followers",
      "following_url": "https://api.github.com/users/sdeshpande10/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdeshpande10/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdeshpande10/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdeshpande10/subscriptions",
      "organizations_url": "https://api.github.com/users/sdeshpande10/orgs",
      "repos_url": "https://api.github.com/users/sdeshpande10/repos",
      "events_url": "https://api.github.com/users/sdeshpande10/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdeshpande10/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2019-01-02T11:50:46Z",
    "updated_at": "2019-01-30T23:02:28Z",
    "closed_at": "2019-01-30T23:02:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "\"express\": \"4.16.4\",\r\nSecurity vulnerability warning for following dependency is blocking us from using this library - mime 1.4.1.tgz\r\nThe mime module is vulnerable to regular expression denial of service when a mime lookup is performed on untrusted user input.\r\n\r\nDetails : \r\nCVE-2017-16138 : https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-16138 \r\n\r\n![image](https://user-images.githubusercontent.com/26160326/50590789-58e6d080-0eb2-11e9-902e-476c67beb712.png)\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3841/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3841/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3840",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3840/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3840/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3840/events",
    "html_url": "https://github.com/expressjs/express/pull/3840",
    "id": 394662327,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjQxMzUyOTQ1",
    "number": 3840,
    "title": "Nicolas B - Humind School Paris",
    "user": {
      "login": "nicobul",
      "id": 46161509,
      "node_id": "MDQ6VXNlcjQ2MTYxNTA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/46161509?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nicobul",
      "html_url": "https://github.com/nicobul",
      "followers_url": "https://api.github.com/users/nicobul/followers",
      "following_url": "https://api.github.com/users/nicobul/following{/other_user}",
      "gists_url": "https://api.github.com/users/nicobul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nicobul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nicobul/subscriptions",
      "organizations_url": "https://api.github.com/users/nicobul/orgs",
      "repos_url": "https://api.github.com/users/nicobul/repos",
      "events_url": "https://api.github.com/users/nicobul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nicobul/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-12-28T15:36:54Z",
    "updated_at": "2018-12-28T18:19:02Z",
    "closed_at": "2018-12-28T15:46:35Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3840",
      "html_url": "https://github.com/expressjs/express/pull/3840",
      "diff_url": "https://github.com/expressjs/express/pull/3840.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3840.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3840/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3840/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3839",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3839/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3839/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3839/events",
    "html_url": "https://github.com/expressjs/express/pull/3839",
    "id": 394625576,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjQxMzI0MzUy",
    "number": 3839,
    "title": "Tom E - Humind School Paris",
    "user": {
      "login": "tomescapa",
      "id": 46109981,
      "node_id": "MDQ6VXNlcjQ2MTA5OTgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/46109981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tomescapa",
      "html_url": "https://github.com/tomescapa",
      "followers_url": "https://api.github.com/users/tomescapa/followers",
      "following_url": "https://api.github.com/users/tomescapa/following{/other_user}",
      "gists_url": "https://api.github.com/users/tomescapa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tomescapa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tomescapa/subscriptions",
      "organizations_url": "https://api.github.com/users/tomescapa/orgs",
      "repos_url": "https://api.github.com/users/tomescapa/repos",
      "events_url": "https://api.github.com/users/tomescapa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tomescapa/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-12-28T12:23:59Z",
    "updated_at": "2018-12-28T18:18:23Z",
    "closed_at": "2018-12-28T15:45:09Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3839",
      "html_url": "https://github.com/expressjs/express/pull/3839",
      "diff_url": "https://github.com/expressjs/express/pull/3839.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3839.patch",
      "merged_at": null
    },
    "body": "I'm a student. It's a try to discover the features of GitHub: I've change index.js and add a new let.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3839/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3839/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3838",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3838/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3838/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3838/events",
    "html_url": "https://github.com/expressjs/express/issues/3838",
    "id": 394489612,
    "node_id": "MDU6SXNzdWUzOTQ0ODk2MTI=",
    "number": 3838,
    "title": "TypeError('Router.use() requires a middleware function but got a ' + gettype(fn))",
    "user": {
      "login": "tolumide-ng",
      "id": 35481645,
      "node_id": "MDQ6VXNlcjM1NDgxNjQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/35481645?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tolumide-ng",
      "html_url": "https://github.com/tolumide-ng",
      "followers_url": "https://api.github.com/users/tolumide-ng/followers",
      "following_url": "https://api.github.com/users/tolumide-ng/following{/other_user}",
      "gists_url": "https://api.github.com/users/tolumide-ng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tolumide-ng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tolumide-ng/subscriptions",
      "organizations_url": "https://api.github.com/users/tolumide-ng/orgs",
      "repos_url": "https://api.github.com/users/tolumide-ng/repos",
      "events_url": "https://api.github.com/users/tolumide-ng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tolumide-ng/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-12-27T21:15:37Z",
    "updated_at": "2018-12-27T21:24:45Z",
    "closed_at": "2018-12-27T21:24:38Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello, I keep getting the above(title) as error message when I try to run this code. I have doubled checked but can't see what is wrong here\r\n\r\n`const express = require('express');\r\n\r\nconst app = express();\r\n\r\nconst meetupRoutes = require('./api/v1/routes/meetups');\r\nconst questionRoutes = require('./api/v1/routes/questions');\r\n\r\napp.use('/meetups', meetupRoutes);\r\napp.use('/questions', questionRoutes);\r\n\r\napp.use((req, res, next) => {\r\n  const error = new Error('Router not found');\r\n  error.status = 404;\r\n  next(error);\r\n});\r\n\r\napp.use((error, req, res) => {\r\n  res.status(error.status || 500);\r\n  res.json({\r\n    error: {\r\n      message: error.message,\r\n    },\r\n  });\r\n});\r\n\r\nmodule.exports = app;`",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3838/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3838/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3837",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3837/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3837/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3837/events",
    "html_url": "https://github.com/expressjs/express/issues/3837",
    "id": 394425998,
    "node_id": "MDU6SXNzdWUzOTQ0MjU5OTg=",
    "number": 3837,
    "title": "Is it a bad practise to wrap an express app by a user defined object?",
    "user": {
      "login": "softlore",
      "id": 19410041,
      "node_id": "MDQ6VXNlcjE5NDEwMDQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/19410041?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/softlore",
      "html_url": "https://github.com/softlore",
      "followers_url": "https://api.github.com/users/softlore/followers",
      "following_url": "https://api.github.com/users/softlore/following{/other_user}",
      "gists_url": "https://api.github.com/users/softlore/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/softlore/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/softlore/subscriptions",
      "organizations_url": "https://api.github.com/users/softlore/orgs",
      "repos_url": "https://api.github.com/users/softlore/repos",
      "events_url": "https://api.github.com/users/softlore/events{/privacy}",
      "received_events_url": "https://api.github.com/users/softlore/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-12-27T15:43:14Z",
    "updated_at": "2019-01-03T14:53:52Z",
    "closed_at": "2019-01-03T14:53:52Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi guys. \r\n\r\nI am implementing a middleware which will check whether the given request contains all the required params/body. \r\n\r\n```javascript\r\napp.use(checkRequestData);\r\n\r\napp.post(\"/user\", controller.addUser);\r\napp.get(\"/user/:id\", controller.getUser);\r\n```\r\n\r\nNow in **checkRequestData**, I can get **req.body** but **req.params.id** is returning *undefined*. To get the req.params.id, I have written the following function\r\n```javascript\r\n\r\nexports.checkRequestData = (req, res, next) => {\r\n    /**\r\n     * check whether request carries required data\r\n     */\r\n    next();\r\n};\r\n\r\nexports.applyMiddleware = (app) => (...middleware) => {\r\n    return new class {\r\n\r\n        middeware(req, res, next){            \r\n            middlewares.forEach((mw) => {\r\n                mw(req, res, next);\r\n            });\r\n        }\r\n\r\n        get(route, controller){\r\n            return app.get(route, this.middeware, controller);\r\n        }\r\n\r\n        post(route, controller){\r\n            return app.post(route, this.middeware, controller);\r\n        }\r\n    }\r\n}; \r\n```\r\n\r\nAnd the server file is modified as follows:\r\n\r\n```javascript\r\nconst _app = applyMiddleware(app)(checkRequestData);\r\n\r\n_app.post(\"/user\", controller.addUser);\r\n_app.get(\"/user/:id\", controller.getUser);\r\n```\r\n\r\nUsing this method I am able to get the request data. \r\n\r\nIs this the right approach of using express middlewares? Will this cause any issues to the in-built express methods?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3837/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3837/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3836",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3836/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3836/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3836/events",
    "html_url": "https://github.com/expressjs/express/pull/3836",
    "id": 394318613,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjQxMDkzMjU1",
    "number": 3836,
    "title": "Update docs",
    "user": {
      "login": "jamesgeorge007",
      "id": 25279263,
      "node_id": "MDQ6VXNlcjI1Mjc5MjYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/25279263?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesgeorge007",
      "html_url": "https://github.com/jamesgeorge007",
      "followers_url": "https://api.github.com/users/jamesgeorge007/followers",
      "following_url": "https://api.github.com/users/jamesgeorge007/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesgeorge007/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesgeorge007/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesgeorge007/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesgeorge007/orgs",
      "repos_url": "https://api.github.com/users/jamesgeorge007/repos",
      "events_url": "https://api.github.com/users/jamesgeorge007/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesgeorge007/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2018-12-27T07:30:40Z",
    "updated_at": "2019-01-11T04:58:35Z",
    "closed_at": "2019-01-05T07:38:43Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3836",
      "html_url": "https://github.com/expressjs/express/pull/3836",
      "diff_url": "https://github.com/expressjs/express/pull/3836.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3836.patch",
      "merged_at": null
    },
    "body": "I think it is a good idea to have a badge welcoming pull requests pointing to the `contributing.md` file 🤔 ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3836/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3836/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3835",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3835/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3835/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3835/events",
    "html_url": "https://github.com/expressjs/express/issues/3835",
    "id": 393065970,
    "node_id": "MDU6SXNzdWUzOTMwNjU5NzA=",
    "number": 3835,
    "title": "Unix Socket / NGINX / PM2 Cluster Mode",
    "user": {
      "login": "knoxcard",
      "id": 7561190,
      "node_id": "MDQ6VXNlcjc1NjExOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7561190?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/knoxcard",
      "html_url": "https://github.com/knoxcard",
      "followers_url": "https://api.github.com/users/knoxcard/followers",
      "following_url": "https://api.github.com/users/knoxcard/following{/other_user}",
      "gists_url": "https://api.github.com/users/knoxcard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/knoxcard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/knoxcard/subscriptions",
      "organizations_url": "https://api.github.com/users/knoxcard/orgs",
      "repos_url": "https://api.github.com/users/knoxcard/repos",
      "events_url": "https://api.github.com/users/knoxcard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/knoxcard/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-12-20T14:19:07Z",
    "updated_at": "2018-12-22T14:05:12Z",
    "closed_at": "2018-12-22T14:04:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am trying to make Express connect to NGINX via Unix Sockets instead of TCP.\r\nRunning this code in cluster mode under pm2, causes each process to state that the process is already LISTENING and everything crashes.\r\n\r\nUnix Socket Creation (app.js)\r\n```\r\n  var app_sock_dir = '/var/run/express/'\r\n  app.server.listen(app_sock_dir + 'app.sock', ret => {\r\n     require('fs').chmod(app_sock_dir + 'app.sock', 0777)\r\n  })\r\n```\r\n\r\npm2 cluster command, spawn 10 processes\r\n`\r\npm2 start app.js -i 10\r\n`",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3835/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3835/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3834",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3834/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3834/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3834/events",
    "html_url": "https://github.com/expressjs/express/issues/3834",
    "id": 392080950,
    "node_id": "MDU6SXNzdWUzOTIwODA5NTA=",
    "number": 3834,
    "title": "Upgrade content-disposition to 0.5.3",
    "user": {
      "login": "zoe-mcelderry",
      "id": 25527958,
      "node_id": "MDQ6VXNlcjI1NTI3OTU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/25527958?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zoe-mcelderry",
      "html_url": "https://github.com/zoe-mcelderry",
      "followers_url": "https://api.github.com/users/zoe-mcelderry/followers",
      "following_url": "https://api.github.com/users/zoe-mcelderry/following{/other_user}",
      "gists_url": "https://api.github.com/users/zoe-mcelderry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zoe-mcelderry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zoe-mcelderry/subscriptions",
      "organizations_url": "https://api.github.com/users/zoe-mcelderry/orgs",
      "repos_url": "https://api.github.com/users/zoe-mcelderry/repos",
      "events_url": "https://api.github.com/users/zoe-mcelderry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zoe-mcelderry/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2018-12-18T10:06:17Z",
    "updated_at": "2018-12-18T15:01:24Z",
    "closed_at": "2018-12-18T14:05:25Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "A new release of content-disposition has just been made that addresses the deprecated warning:\r\n\r\n`(node:19) [DEP0005] DeprecationWarning: Buffer() is deprecated due to security and usability issues. Please use the Buffer.alloc(), Buffer.allocUnsafe(), or Buffer.from() methods instead.`\r\n\r\nCan express be upgraded to use this new release please?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3834/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3834/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3833",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3833/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3833/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3833/events",
    "html_url": "https://github.com/expressjs/express/issues/3833",
    "id": 391687383,
    "node_id": "MDU6SXNzdWUzOTE2ODczODM=",
    "number": 3833,
    "title": "How to detect if the redirection is complete?",
    "user": {
      "login": "ganapativs",
      "id": 4010960,
      "node_id": "MDQ6VXNlcjQwMTA5NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4010960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ganapativs",
      "html_url": "https://github.com/ganapativs",
      "followers_url": "https://api.github.com/users/ganapativs/followers",
      "following_url": "https://api.github.com/users/ganapativs/following{/other_user}",
      "gists_url": "https://api.github.com/users/ganapativs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ganapativs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ganapativs/subscriptions",
      "organizations_url": "https://api.github.com/users/ganapativs/orgs",
      "repos_url": "https://api.github.com/users/ganapativs/repos",
      "events_url": "https://api.github.com/users/ganapativs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ganapativs/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-12-17T12:20:04Z",
    "updated_at": "2018-12-18T04:47:58Z",
    "closed_at": "2018-12-18T04:47:58Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "How to detect if the redirection is complete(similar to `finish` or `close` event on `res.redirect(...)` on normal requests)?\r\n\r\n```\r\n// Triggered for normal request, but not for res.redirect\r\nres.on('close', () => {\r\n   ...\r\n});\r\n\r\n// Triggered for normal request, but not for res.redirect\r\nres.on('finish', () => {\r\n   ...\r\n});\r\n```\r\n\r\nIs it possible or am I missing something? Any help would be greatly appreciated 👍",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3833/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3833/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3832",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3832/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3832/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3832/events",
    "html_url": "https://github.com/expressjs/express/issues/3832",
    "id": 391489830,
    "node_id": "MDU6SXNzdWUzOTE0ODk4MzA=",
    "number": 3832,
    "title": "Documentation: router vs middleware",
    "user": {
      "login": "thernstig",
      "id": 30827238,
      "node_id": "MDQ6VXNlcjMwODI3MjM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/30827238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thernstig",
      "html_url": "https://github.com/thernstig",
      "followers_url": "https://api.github.com/users/thernstig/followers",
      "following_url": "https://api.github.com/users/thernstig/following{/other_user}",
      "gists_url": "https://api.github.com/users/thernstig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thernstig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thernstig/subscriptions",
      "organizations_url": "https://api.github.com/users/thernstig/orgs",
      "repos_url": "https://api.github.com/users/thernstig/repos",
      "events_url": "https://api.github.com/users/thernstig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thernstig/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2018-12-16T17:52:51Z",
    "updated_at": "2019-01-05T15:24:15Z",
    "closed_at": "2019-01-05T15:24:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Having recently read all the documentation under \"Getting started\" and \"Guide\" I've found that the concept of routing and middleware is somewhat ambigous.\r\n\r\nThe [Getting started -> Basic routing](https://expressjs.com/en/starter/basic-routing.html) page describes:\r\n\r\n> Route definition takes the following structure:  \r\n`app.METHOD(PATH, HANDLER)`\r\n\r\nThe [Guide -> Writing middleware](https://expressjs.com/en/guide/writing-middleware.html) guide explains exactly the same thing but now mentions it as:\r\n\r\n> The following figure shows the **elements of a middleware function call**:\r\n\r\nOne gets the _feeling_ that a middleware is actually used with app.use() or router.use(). I am unsure how to improve the documentation as I, by reading this guides, did not get a clear definition of these concepts.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3832/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3832/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3831",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3831/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3831/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3831/events",
    "html_url": "https://github.com/expressjs/express/issues/3831",
    "id": 391379700,
    "node_id": "MDU6SXNzdWUzOTEzNzk3MDA=",
    "number": 3831,
    "title": "Error during installlation!",
    "user": {
      "login": "nikoskon2003",
      "id": 29357627,
      "node_id": "MDQ6VXNlcjI5MzU3NjI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/29357627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nikoskon2003",
      "html_url": "https://github.com/nikoskon2003",
      "followers_url": "https://api.github.com/users/nikoskon2003/followers",
      "following_url": "https://api.github.com/users/nikoskon2003/following{/other_user}",
      "gists_url": "https://api.github.com/users/nikoskon2003/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nikoskon2003/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nikoskon2003/subscriptions",
      "organizations_url": "https://api.github.com/users/nikoskon2003/orgs",
      "repos_url": "https://api.github.com/users/nikoskon2003/repos",
      "events_url": "https://api.github.com/users/nikoskon2003/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nikoskon2003/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-12-15T13:40:36Z",
    "updated_at": "2018-12-15T13:51:17Z",
    "closed_at": "2018-12-15T13:51:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "npm ERR! code Z_BUF_ERROR\r\nnpm ERR! errno -5\r\nnpm ERR! zlib: unexpected end of file\r\n\r\nnpm ERR! A complete log of this run can be found in:\r\nnpm ERR!     C:\\Users\\nikoskon\\AppData\\Roaming\\npm-cache\\_logs\\2018-12-15T13_39_54_638Z-debug.log",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3831/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3831/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3830",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3830/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3830/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3830/events",
    "html_url": "https://github.com/expressjs/express/issues/3830",
    "id": 391346335,
    "node_id": "MDU6SXNzdWUzOTEzNDYzMzU=",
    "number": 3830,
    "title": "404 for static files",
    "user": {
      "login": "NoBrainer",
      "id": 1538386,
      "node_id": "MDQ6VXNlcjE1MzgzODY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1538386?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NoBrainer",
      "html_url": "https://github.com/NoBrainer",
      "followers_url": "https://api.github.com/users/NoBrainer/followers",
      "following_url": "https://api.github.com/users/NoBrainer/following{/other_user}",
      "gists_url": "https://api.github.com/users/NoBrainer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NoBrainer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NoBrainer/subscriptions",
      "organizations_url": "https://api.github.com/users/NoBrainer/orgs",
      "repos_url": "https://api.github.com/users/NoBrainer/repos",
      "events_url": "https://api.github.com/users/NoBrainer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NoBrainer/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-12-15T05:27:33Z",
    "updated_at": "2018-12-16T02:48:13Z",
    "closed_at": "2018-12-16T02:48:13Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm fairly certain that I'm using express.static() properly, but I'm getting a 404 for files included there:\r\n`app.use(express.static(path.join(__dirname, 'build', 'public')));`\r\n\r\nI've included links to my Git repository and deployed app for\r\n\r\n**app.js:**\r\n```\r\n/* ... requires ... */\r\n\r\nvar app = express();\r\n\r\n// view engine setup\r\napp.set('views', path.join(__dirname, 'views'));\r\napp.set('view engine', 'jade');\r\n\r\napp.use(favicon(path.join(__dirname, 'build', 'public', 'resources', 'icons', 'favicon.png'))); //loads\r\napp.use(logger('dev'));\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\napp.use(express.static(path.join(__dirname, 'build', 'public'))); //does NOT load\r\n\r\napp.use('/api', index);\r\napp.use('/api/download', download);\r\napp.use('/api/yaml', yaml);\r\n\r\n// catch 404 and forward to error handler\r\napp.use(function(req, res, next) {\r\n    var err = new Error('Not Found');\r\n    err.status = 404;\r\n    next(err);\r\n});\r\n\r\n// error handler\r\napp.use(function(err, req, res, next) {\r\n    // set locals, only providing error in development\r\n    res.locals.message = err.message;\r\n    res.locals.error = req.app.get('env') === 'dev' ? err : {};\r\n\r\n    // render the error page\r\n    res.status(err.status || 500);\r\n    res.render('error');\r\n});\r\n\r\nmodule.exports = app;\r\n```\r\n\r\n**Installed Versions:**\r\nnodejs v10.14.2\r\nnpm 6.4.1\r\n\r\n**Useful Links:**\r\n* [GitHub Repo](https://github.com/NoBrainer/ScrollRole/) (My setup and deployment strategy is included in the README.)\r\n* [My Deployed App](http://scrollrole.com/) (index.html)\r\n* [My Deployed App - Debug Mode](http://scrollrole.com/debug.html) (debug.html - has same issues)",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3830/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3830/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3829",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3829/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3829/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3829/events",
    "html_url": "https://github.com/expressjs/express/pull/3829",
    "id": 391065785,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM4Njg1NTk1",
    "number": 3829,
    "title": "Fix: lack of semicolon",
    "user": {
      "login": "polunzh",
      "id": 4244426,
      "node_id": "MDQ6VXNlcjQyNDQ0MjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4244426?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/polunzh",
      "html_url": "https://github.com/polunzh",
      "followers_url": "https://api.github.com/users/polunzh/followers",
      "following_url": "https://api.github.com/users/polunzh/following{/other_user}",
      "gists_url": "https://api.github.com/users/polunzh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/polunzh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/polunzh/subscriptions",
      "organizations_url": "https://api.github.com/users/polunzh/orgs",
      "repos_url": "https://api.github.com/users/polunzh/repos",
      "events_url": "https://api.github.com/users/polunzh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/polunzh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-12-14T11:04:27Z",
    "updated_at": "2018-12-21T17:48:16Z",
    "closed_at": "2018-12-14T11:11:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3829",
      "html_url": "https://github.com/expressjs/express/pull/3829",
      "diff_url": "https://github.com/expressjs/express/pull/3829.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3829.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3829/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3829/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3828",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3828/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3828/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3828/events",
    "html_url": "https://github.com/expressjs/express/issues/3828",
    "id": 390905677,
    "node_id": "MDU6SXNzdWUzOTA5MDU2Nzc=",
    "number": 3828,
    "title": "Error middleware defaults status code to 200?",
    "user": {
      "login": "john-goldsmith",
      "id": 865588,
      "node_id": "MDQ6VXNlcjg2NTU4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/865588?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/john-goldsmith",
      "html_url": "https://github.com/john-goldsmith",
      "followers_url": "https://api.github.com/users/john-goldsmith/followers",
      "following_url": "https://api.github.com/users/john-goldsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/john-goldsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/john-goldsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/john-goldsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/john-goldsmith/orgs",
      "repos_url": "https://api.github.com/users/john-goldsmith/repos",
      "events_url": "https://api.github.com/users/john-goldsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/john-goldsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2018-12-13T23:33:40Z",
    "updated_at": "2018-12-14T01:13:55Z",
    "closed_at": "2018-12-14T01:13:55Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I noticed that when invoking error-handling middleware (via `next(err)`) and haven't explicitly set the response status code, it defaults to `200 OK`.  This strikes me as strange given it's purpose is to handle errors, so I was just curious if this is intentional and, if so, why?  Perhaps this should default to `5xx` instead?  Thanks for any insight!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3828/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3828/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3827",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3827/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3827/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3827/events",
    "html_url": "https://github.com/expressjs/express/pull/3827",
    "id": 390546372,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM4Mjg2MTY4",
    "number": 3827,
    "title": "Fixed a typo in Contributing.md",
    "user": {
      "login": "HubCodes",
      "id": 23609351,
      "node_id": "MDQ6VXNlcjIzNjA5MzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/23609351?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/HubCodes",
      "html_url": "https://github.com/HubCodes",
      "followers_url": "https://api.github.com/users/HubCodes/followers",
      "following_url": "https://api.github.com/users/HubCodes/following{/other_user}",
      "gists_url": "https://api.github.com/users/HubCodes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/HubCodes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HubCodes/subscriptions",
      "organizations_url": "https://api.github.com/users/HubCodes/orgs",
      "repos_url": "https://api.github.com/users/HubCodes/repos",
      "events_url": "https://api.github.com/users/HubCodes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/HubCodes/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-12-13T07:10:57Z",
    "updated_at": "2020-02-24T04:10:22Z",
    "closed_at": "2018-12-18T00:45:36Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3827",
      "html_url": "https://github.com/expressjs/express/pull/3827",
      "diff_url": "https://github.com/expressjs/express/pull/3827.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3827.patch",
      "merged_at": "2018-12-18T00:45:36Z"
    },
    "body": "Hello!\r\nI found word 'dislosure', but I think it's not. So I fixed it with 'disclosure'.\r\n\r\nThank you!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3827/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3827/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3826",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3826/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3826/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3826/events",
    "html_url": "https://github.com/expressjs/express/issues/3826",
    "id": 390151568,
    "node_id": "MDU6SXNzdWUzOTAxNTE1Njg=",
    "number": 3826,
    "title": "Undocumented router workaround.",
    "user": {
      "login": "boxsnake",
      "id": 3257783,
      "node_id": "MDQ6VXNlcjMyNTc3ODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3257783?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/boxsnake",
      "html_url": "https://github.com/boxsnake",
      "followers_url": "https://api.github.com/users/boxsnake/followers",
      "following_url": "https://api.github.com/users/boxsnake/following{/other_user}",
      "gists_url": "https://api.github.com/users/boxsnake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/boxsnake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/boxsnake/subscriptions",
      "organizations_url": "https://api.github.com/users/boxsnake/orgs",
      "repos_url": "https://api.github.com/users/boxsnake/repos",
      "events_url": "https://api.github.com/users/boxsnake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/boxsnake/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-12-12T10:07:36Z",
    "updated_at": "2018-12-13T01:02:03Z",
    "closed_at": "2018-12-13T01:01:58Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Besides replacing `*` as `{0,}` in Express,\r\nthere is one more workaround should do with regex in router (in Express 4.x):\r\n\r\n`.` (dot, period, which matches almost anything) should be replaced to `[\\s\\S]` in regex pattern, because dot in regex pattern will also be escaped.\r\n\r\nHope this can also be fixed in Express 5.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3826/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3826/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3825",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3825/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3825/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3825/events",
    "html_url": "https://github.com/expressjs/express/issues/3825",
    "id": 389886089,
    "node_id": "MDU6SXNzdWUzODk4ODYwODk=",
    "number": 3825,
    "title": "Can I use promises in my custom view engine?",
    "user": {
      "login": "petermorlion",
      "id": 3483719,
      "node_id": "MDQ6VXNlcjM0ODM3MTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3483719?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petermorlion",
      "html_url": "https://github.com/petermorlion",
      "followers_url": "https://api.github.com/users/petermorlion/followers",
      "following_url": "https://api.github.com/users/petermorlion/following{/other_user}",
      "gists_url": "https://api.github.com/users/petermorlion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petermorlion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petermorlion/subscriptions",
      "organizations_url": "https://api.github.com/users/petermorlion/orgs",
      "repos_url": "https://api.github.com/users/petermorlion/repos",
      "events_url": "https://api.github.com/users/petermorlion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petermorlion/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-12-11T18:02:50Z",
    "updated_at": "2018-12-12T13:43:05Z",
    "closed_at": "2018-12-12T13:43:04Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have a custom view engine that I have programmed with Promises. I notice that this causes Express to continue, send info back to the client, and then error because my custom view engine also calls the callback. This of course causes the error `Can't set headers after they are sent.`\r\n\r\nThis is a mock view engine that can reproduce the issue:\r\n\r\n```js\r\nexpressApp.engine(\"foo\", (filePath: any, options: any, callback: any) => {\r\n    return Promise.resolve(\"foo\")\r\n        .then((result) => {\r\n            console.log(\"Step 1\");\r\n            return new Promise((resolve, reject) => {\r\n                setTimeout(resolve, 1000, result);\r\n            });\r\n        })\r\n        .then((result) => {\r\n            console.log(\"Step 2\");\r\n            return new Promise((resolve, reject) => {\r\n                setTimeout(resolve, 1000, result);\r\n            });\r\n        })\r\n        .then((result) => {\r\n            console.log(\"Step 3\");\r\n            callback(null, result);\r\n        });\r\n});\r\n\r\nexpressApp.set('view engine', 'foo');\r\n```\r\n\r\nI can see in the logs, that this is the order of execution:\r\n\r\n- step 1\r\n- send response\r\n- step 2\r\n- step 3 --> error because we've already sent a response\r\n\r\nAm I doing something wrong here, or does Express not support Promises in the view engine? Mind you, there's more going on in my application, but I can't find any reference to Promises in Express view engines, that's why I'm asking here.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3825/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3825/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3824",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3824/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3824/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3824/events",
    "html_url": "https://github.com/expressjs/express/issues/3824",
    "id": 389884062,
    "node_id": "MDU6SXNzdWUzODk4ODQwNjI=",
    "number": 3824,
    "title": "What's the best way to pass information from one route to another?",
    "user": {
      "login": "marbuser",
      "id": 34422459,
      "node_id": "MDQ6VXNlcjM0NDIyNDU5",
      "avatar_url": "https://avatars.githubusercontent.com/u/34422459?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marbuser",
      "html_url": "https://github.com/marbuser",
      "followers_url": "https://api.github.com/users/marbuser/followers",
      "following_url": "https://api.github.com/users/marbuser/following{/other_user}",
      "gists_url": "https://api.github.com/users/marbuser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marbuser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marbuser/subscriptions",
      "organizations_url": "https://api.github.com/users/marbuser/orgs",
      "repos_url": "https://api.github.com/users/marbuser/repos",
      "events_url": "https://api.github.com/users/marbuser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marbuser/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-12-11T17:57:48Z",
    "updated_at": "2018-12-11T18:22:21Z",
    "closed_at": "2018-12-11T18:22:14Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hey there,\r\n\r\nBasically, I'm using express in a REST API, and have been implementing a payment processor. The basic flow is something like this;\r\nROUTE: /payment\r\n1. Client submits some data like the product information. Server receives and validates it against database. The server then calls the Payment Processor API and initialises the session with information like price, order number, etc... and then gets a \"paymentSession\". We then return this session to the client.\r\n2. The client then do the payment, which then gets an encrypted payload from the payment processor. We then send this payload to another route on our server, `/payment/verify`, and here we can check if the payment was successful. If it was, we then want to grant the user permission to whatever it is they bought.\r\n\r\nHere is where the problem comes in. The information I need in order to \"grant the user permission\" in the 2nd route, was created in the first route. Stuff like Order #, product information, etc...\r\n\r\nWhat would be the best way for me to pass some data from the first endpoint to the second despite them being separate routes?\r\n\r\nThanks! Any help is appreciated. Let me know if more information is required!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3824/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3824/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3823",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3823/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3823/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3823/events",
    "html_url": "https://github.com/expressjs/express/issues/3823",
    "id": 389633033,
    "node_id": "MDU6SXNzdWUzODk2MzMwMzM=",
    "number": 3823,
    "title": "Making remote request to Google Places API via Express fetches duplicate results everytime",
    "user": {
      "login": "tenacious-joy",
      "id": 31606968,
      "node_id": "MDQ6VXNlcjMxNjA2OTY4",
      "avatar_url": "https://avatars.githubusercontent.com/u/31606968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tenacious-joy",
      "html_url": "https://github.com/tenacious-joy",
      "followers_url": "https://api.github.com/users/tenacious-joy/followers",
      "following_url": "https://api.github.com/users/tenacious-joy/following{/other_user}",
      "gists_url": "https://api.github.com/users/tenacious-joy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tenacious-joy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tenacious-joy/subscriptions",
      "organizations_url": "https://api.github.com/users/tenacious-joy/orgs",
      "repos_url": "https://api.github.com/users/tenacious-joy/repos",
      "events_url": "https://api.github.com/users/tenacious-joy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tenacious-joy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-12-11T07:42:56Z",
    "updated_at": "2018-12-11T16:22:14Z",
    "closed_at": "2018-12-11T10:44:18Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have been trying to fetch search results via text query using Google places API.\r\n\r\nThis search also fetches results related to dlf.\r\n\r\nBut, when I tried to do the same via express server, it gives me the same search results for different queries.\r\n\r\nPlease find more details at \r\n[https://stackoverflow.com/questions/53699427/making-remote-request-to-google-places-api-via-express-fetches-duplicate-results]",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3823/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3823/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3822",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3822/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3822/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3822/events",
    "html_url": "https://github.com/expressjs/express/issues/3822",
    "id": 389253244,
    "node_id": "MDU6SXNzdWUzODkyNTMyNDQ=",
    "number": 3822,
    "title": "NodeJS `domain` not behaving properly with `express.json` middleware ",
    "user": {
      "login": "m0uneer",
      "id": 9986145,
      "node_id": "MDQ6VXNlcjk5ODYxNDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9986145?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/m0uneer",
      "html_url": "https://github.com/m0uneer",
      "followers_url": "https://api.github.com/users/m0uneer/followers",
      "following_url": "https://api.github.com/users/m0uneer/following{/other_user}",
      "gists_url": "https://api.github.com/users/m0uneer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/m0uneer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/m0uneer/subscriptions",
      "organizations_url": "https://api.github.com/users/m0uneer/orgs",
      "repos_url": "https://api.github.com/users/m0uneer/repos",
      "events_url": "https://api.github.com/users/m0uneer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/m0uneer/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 11,
    "created_at": "2018-12-10T11:14:29Z",
    "updated_at": "2018-12-12T12:47:23Z",
    "closed_at": "2018-12-10T23:42:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Context:**\r\n- Node version 6.14.3\r\n- Express version 4.16.4\r\n\r\n**Steps (Generating a simple Express app):**\r\n\r\n- `$ npm install express-generator -g`\r\n- `$ express --view=pug myapp`\r\n- `$ npm i`\r\n- Edit `./myapp/routes/users.js` changing `router.get('/', ...)` to `router.post('/', ...)`\r\n- Edit `./myapp/app.js` to include two more middleware with some `domain` implementations.\r\n\r\n```js\r\nvar createError = require('http-errors');\r\nvar express = require('express');\r\nvar path = require('path');\r\nvar cookieParser = require('cookie-parser');\r\nvar logger = require('morgan');\r\nvar domain = require('domain');\r\n\r\nvar indexRouter = require('./routes/index');\r\nvar usersRouter = require('./routes/users');\r\n\r\nvar app = express();\r\n\r\n// view engine setup\r\napp.set('views', path.join(__dirname, 'views'));\r\napp.set('view engine', 'pug');\r\n\r\n// Add this middleware as the first one\r\napp.use(function(req, res, next) {\r\n    let activeDomain = domain.active ? domain.active : domain.create();\r\n    activeDomain.run(() => {\r\n        next();\r\n    });\r\n});\r\n\r\napp.use(logger('dev'));\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\napp.use(express.static(path.join(__dirname, 'public')));\r\n\r\n// And add this middleware here\r\napp.use((req, res, next) => {\r\n    if (!domain.active.trapArr) {\r\n        domain.active.trapArr = [];\r\n    } else {\r\n        // This is the trap\r\n        domain.active.trapArr.push({});\r\n    }\r\n\r\n    next();\r\n});\r\n\r\napp.use('/', indexRouter);\r\napp.use('/users', usersRouter);\r\n\r\n// catch 404 and forward to error handler\r\napp.use(function(req, res, next) {\r\n  next(createError(404));\r\n});\r\n\r\n// error handler\r\napp.use(function(err, req, res, next) {\r\n  // set locals, only providing error in development\r\n  res.locals.message = err.message;\r\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\r\n\r\n  // render the error page\r\n  res.status(err.status || 500);\r\n  res.render('error');\r\n});\r\n\r\nmodule.exports = app;\r\n```\r\n- `$ npm start`\r\n- Send a POST request to the `/users` with header `\"Content-Type\" :\"application/json\"` and any object inside the request body.\r\n\r\n**Expected:**\r\n200 response.\r\n\r\n**Actual:** \r\n500 response with error `TypeError: Cannot read property 'trapArr' of undefined`\r\n\r\n**But** when I comment the `app.use(express.json());` line, the response become 200 normally.\r\n\r\n**A link to a repo to reproduce**:\r\nhttps://github.com/m0uneer/domain-body-parser-problem",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3822/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3822/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3821",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3821/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3821/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3821/events",
    "html_url": "https://github.com/expressjs/express/pull/3821",
    "id": 389169244,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM3MjE5Mjkz",
    "number": 3821,
    "title": "Update response.js",
    "user": {
      "login": "vipulbhj",
      "id": 33618798,
      "node_id": "MDQ6VXNlcjMzNjE4Nzk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/33618798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vipulbhj",
      "html_url": "https://github.com/vipulbhj",
      "followers_url": "https://api.github.com/users/vipulbhj/followers",
      "following_url": "https://api.github.com/users/vipulbhj/following{/other_user}",
      "gists_url": "https://api.github.com/users/vipulbhj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vipulbhj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vipulbhj/subscriptions",
      "organizations_url": "https://api.github.com/users/vipulbhj/orgs",
      "repos_url": "https://api.github.com/users/vipulbhj/repos",
      "events_url": "https://api.github.com/users/vipulbhj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vipulbhj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2018-12-10T07:16:49Z",
    "updated_at": "2018-12-11T18:32:13Z",
    "closed_at": "2018-12-10T17:57:50Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3821",
      "html_url": "https://github.com/expressjs/express/pull/3821",
      "diff_url": "https://github.com/expressjs/express/pull/3821.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3821.patch",
      "merged_at": null
    },
    "body": "Remove redundant function name, in case of res.status. Using anonymous instead",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3821/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3821/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3820",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3820/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3820/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3820/events",
    "html_url": "https://github.com/expressjs/express/issues/3820",
    "id": 388761588,
    "node_id": "MDU6SXNzdWUzODg3NjE1ODg=",
    "number": 3820,
    "title": "Routing: slash character is captured as query string",
    "user": {
      "login": "MaxenceMaire",
      "id": 14932990,
      "node_id": "MDQ6VXNlcjE0OTMyOTkw",
      "avatar_url": "https://avatars.githubusercontent.com/u/14932990?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MaxenceMaire",
      "html_url": "https://github.com/MaxenceMaire",
      "followers_url": "https://api.github.com/users/MaxenceMaire/followers",
      "following_url": "https://api.github.com/users/MaxenceMaire/following{/other_user}",
      "gists_url": "https://api.github.com/users/MaxenceMaire/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MaxenceMaire/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MaxenceMaire/subscriptions",
      "organizations_url": "https://api.github.com/users/MaxenceMaire/orgs",
      "repos_url": "https://api.github.com/users/MaxenceMaire/repos",
      "events_url": "https://api.github.com/users/MaxenceMaire/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MaxenceMaire/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-12-07T18:17:09Z",
    "updated_at": "2018-12-07T18:31:40Z",
    "closed_at": "2018-12-07T18:31:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This follows an issue I had trying to reject some unwanted URLs of my routing: https://stackoverflow.com/questions/53663028/express-routing-matching-extra-url-tokens/53674664#53674664\r\n\r\nTL;DR, it appears that the slash character is being processed by router.get() as belonging to the query string.\r\n\r\nExample: with the regex /^\\/(\\d{1,})(?:$|\\/([^\\/]{0,})\\/?$)/, for the path /1234/ForumTitle?page=2/test, we get req.query = {\"page\":\"2/test\"}.\r\n\r\nIsn't it supposed to be a reserved character?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3820/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3820/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3819",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3819/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3819/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3819/events",
    "html_url": "https://github.com/expressjs/express/issues/3819",
    "id": 388713533,
    "node_id": "MDU6SXNzdWUzODg3MTM1MzM=",
    "number": 3819,
    "title": "Middleware of one router gets called while accessing path of another router",
    "user": {
      "login": "vksid",
      "id": 6849897,
      "node_id": "MDQ6VXNlcjY4NDk4OTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6849897?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vksid",
      "html_url": "https://github.com/vksid",
      "followers_url": "https://api.github.com/users/vksid/followers",
      "following_url": "https://api.github.com/users/vksid/following{/other_user}",
      "gists_url": "https://api.github.com/users/vksid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vksid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vksid/subscriptions",
      "organizations_url": "https://api.github.com/users/vksid/orgs",
      "repos_url": "https://api.github.com/users/vksid/repos",
      "events_url": "https://api.github.com/users/vksid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vksid/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-12-07T16:00:53Z",
    "updated_at": "2018-12-07T16:22:26Z",
    "closed_at": "2018-12-07T16:22:07Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "```\r\nconst app = express();\r\n\r\nexport const root = Router();\r\nroot.get('/', (req, res) => {\r\n     res.send(\"Hello World\");\r\n})\r\n// middleware 1\r\nroot.use(accountAuth);\r\nroot.post('/product', product);\r\nroot.post('/dashboard', operator, dashboard);\r\n\r\nexport const account = Router();\r\naccount.post('/login', login);\r\naccount.post('/forgot', forgot);\r\naccount.post('/reset-password', reset_password);\r\n\r\n//middleware 2\r\naccount.use(accountAuth);\r\naccount.patch('/', update_info);\r\naccount.post('/logout', logout);\r\naccount.patch('/password', update_password);\r\n\r\napp.use('/', root);\r\napp.use('/account', account);\r\n```\r\n\r\nIn the above code, when I'm sending post request to path /account/login. middleware 1 is getting called. ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3819/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3819/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3818",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3818/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3818/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3818/events",
    "html_url": "https://github.com/expressjs/express/issues/3818",
    "id": 388112487,
    "node_id": "MDU6SXNzdWUzODgxMTI0ODc=",
    "number": 3818,
    "title": "ERR_EMPTY_RESPONSE while downloading excel",
    "user": {
      "login": "bilal68",
      "id": 9419008,
      "node_id": "MDQ6VXNlcjk0MTkwMDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9419008?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bilal68",
      "html_url": "https://github.com/bilal68",
      "followers_url": "https://api.github.com/users/bilal68/followers",
      "following_url": "https://api.github.com/users/bilal68/following{/other_user}",
      "gists_url": "https://api.github.com/users/bilal68/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bilal68/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bilal68/subscriptions",
      "organizations_url": "https://api.github.com/users/bilal68/orgs",
      "repos_url": "https://api.github.com/users/bilal68/repos",
      "events_url": "https://api.github.com/users/bilal68/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bilal68/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-12-06T08:51:10Z",
    "updated_at": "2018-12-07T06:13:15Z",
    "closed_at": "2018-12-06T22:23:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am trying to download an excel file for very large data.I am having this issue.Data comes after wards but the \"This page isn’t working localhost didn’t send any data.\r\nERR_EMPTY_RESPONSE\" shows first..kindly help me",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3818/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3818/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3817",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3817/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3817/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3817/events",
    "html_url": "https://github.com/expressjs/express/issues/3817",
    "id": 387379029,
    "node_id": "MDU6SXNzdWUzODczNzkwMjk=",
    "number": 3817,
    "title": "Possible memory leak",
    "user": {
      "login": "HRK44",
      "id": 7391040,
      "node_id": "MDQ6VXNlcjczOTEwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7391040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/HRK44",
      "html_url": "https://github.com/HRK44",
      "followers_url": "https://api.github.com/users/HRK44/followers",
      "following_url": "https://api.github.com/users/HRK44/following{/other_user}",
      "gists_url": "https://api.github.com/users/HRK44/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/HRK44/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HRK44/subscriptions",
      "organizations_url": "https://api.github.com/users/HRK44/orgs",
      "repos_url": "https://api.github.com/users/HRK44/repos",
      "events_url": "https://api.github.com/users/HRK44/events{/privacy}",
      "received_events_url": "https://api.github.com/users/HRK44/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 14,
    "created_at": "2018-12-04T16:45:12Z",
    "updated_at": "2019-01-30T23:03:17Z",
    "closed_at": "2019-01-30T23:03:16Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "For more detail please check : https://stackoverflow.com/questions/53615479/express-memory-leak\r\n\r\nI have a simple Express API set up like this :\r\n\r\n```javascript\r\n    api.post('/data', (req, res) => {\r\n        let data = req.body.data;\r\n\r\n        if (data)\r\n            res.status(201).send('hey');\r\n        else\r\n            res.status(400).end();\r\n    });\r\n```\r\n\r\nThen I have a script that calls this API with about 1mb of json data in the body, I make about 10 requests per second. When I see the memory consumption, it just goes up and never seem to go down.\r\n\r\n- Node v10.14\r\n- Express v4.16.4",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3817/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3817/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3816",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3816/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3816/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3816/events",
    "html_url": "https://github.com/expressjs/express/issues/3816",
    "id": 387185871,
    "node_id": "MDU6SXNzdWUzODcxODU4NzE=",
    "number": 3816,
    "title": "Report Security Bug",
    "user": {
      "login": "0x09AL",
      "id": 25826294,
      "node_id": "MDQ6VXNlcjI1ODI2Mjk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25826294?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0x09AL",
      "html_url": "https://github.com/0x09AL",
      "followers_url": "https://api.github.com/users/0x09AL/followers",
      "following_url": "https://api.github.com/users/0x09AL/following{/other_user}",
      "gists_url": "https://api.github.com/users/0x09AL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0x09AL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0x09AL/subscriptions",
      "organizations_url": "https://api.github.com/users/0x09AL/orgs",
      "repos_url": "https://api.github.com/users/0x09AL/repos",
      "events_url": "https://api.github.com/users/0x09AL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0x09AL/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-12-04T09:11:34Z",
    "updated_at": "2018-12-04T13:06:37Z",
    "closed_at": "2018-12-04T13:06:29Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi Team,\r\nI wanted to report a security bug on expressjs. I read the Security Policies and Procedures\r\n but the lead maintainer doesn't have a public e-mail address.\r\nCan you please share his e-mail or foward me to some other place to report it ?\r\n\r\nThanks",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3816/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3816/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3815",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3815/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3815/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3815/events",
    "html_url": "https://github.com/expressjs/express/issues/3815",
    "id": 387127065,
    "node_id": "MDU6SXNzdWUzODcxMjcwNjU=",
    "number": 3815,
    "title": "How could I use `return 'ok'` instead `res.send('ok')`",
    "user": {
      "login": "wxs77577",
      "id": 1990059,
      "node_id": "MDQ6VXNlcjE5OTAwNTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1990059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wxs77577",
      "html_url": "https://github.com/wxs77577",
      "followers_url": "https://api.github.com/users/wxs77577/followers",
      "following_url": "https://api.github.com/users/wxs77577/following{/other_user}",
      "gists_url": "https://api.github.com/users/wxs77577/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wxs77577/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wxs77577/subscriptions",
      "organizations_url": "https://api.github.com/users/wxs77577/orgs",
      "repos_url": "https://api.github.com/users/wxs77577/repos",
      "events_url": "https://api.github.com/users/wxs77577/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wxs77577/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-12-04T05:31:38Z",
    "updated_at": "2018-12-04T09:51:52Z",
    "closed_at": "2018-12-04T05:58:09Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "If there are some conditional breaks, I have to use `return res.send('ok')`, I wanna just use `return 'ok'` in every route handlers.\r\n\r\nJust like this:\r\n```\r\napp.get('/', () => 'ok')\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3815/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3815/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3814",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3814/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3814/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3814/events",
    "html_url": "https://github.com/expressjs/express/issues/3814",
    "id": 387126148,
    "node_id": "MDU6SXNzdWUzODcxMjYxNDg=",
    "number": 3814,
    "title": "add `res.assert()` function",
    "user": {
      "login": "wxs77577",
      "id": 1990059,
      "node_id": "MDQ6VXNlcjE5OTAwNTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1990059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wxs77577",
      "html_url": "https://github.com/wxs77577",
      "followers_url": "https://api.github.com/users/wxs77577/followers",
      "following_url": "https://api.github.com/users/wxs77577/following{/other_user}",
      "gists_url": "https://api.github.com/users/wxs77577/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wxs77577/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wxs77577/subscriptions",
      "organizations_url": "https://api.github.com/users/wxs77577/orgs",
      "repos_url": "https://api.github.com/users/wxs77577/repos",
      "events_url": "https://api.github.com/users/wxs77577/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wxs77577/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-12-04T05:26:43Z",
    "updated_at": "2019-12-21T18:56:45Z",
    "closed_at": "2019-12-21T18:56:45Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I can use single-line to ensure if a variable is true like this in Koa: \r\n```\r\nctx.assert(ctx.state.user, 401, 'User not found. Please login!');\r\n```\r\n\r\nSo I wonder that if we could add same method to `res`?\r\n```\r\nres.assert(ctx.state.user, 401, 'User not found. Please login!');\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3814/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3814/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3813",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3813/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3813/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3813/events",
    "html_url": "https://github.com/expressjs/express/issues/3813",
    "id": 386215660,
    "node_id": "MDU6SXNzdWUzODYyMTU2NjA=",
    "number": 3813,
    "title": "meta: express.js internals do not support Node.js 10+",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 324166296,
        "node_id": "MDU6TGFiZWwzMjQxNjYyOTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/meta",
        "name": "meta",
        "color": "fef2c0",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2018-11-30T14:44:26Z",
    "updated_at": "2018-12-12T15:27:16Z",
    "closed_at": "2018-12-12T15:27:15Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "It seems that, when trying to get everything working in 10+, I found some Node.js behavior changes that have no work-arounds. I reported to Node.js core in https://github.com/nodejs/node/issues/24585 and https://github.com/nodejs/node/issues/24586 but there is no interest in fixing them. Until there is a fix, I would not recommend using Express.js on Node.js 10+\r\n\r\n/cc @addaleax from Node.js core who was interested in seeing http/2 in Express, but now http/1 doesn't even work right 🤣",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3813/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3813/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3812",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3812/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3812/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3812/events",
    "html_url": "https://github.com/expressjs/express/pull/3812",
    "id": 385614402,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM0NTQyNjQz",
    "number": 3812,
    "title": "fix: expression minor bugs",
    "user": {
      "login": "A1vinSmith",
      "id": 24937594,
      "node_id": "MDQ6VXNlcjI0OTM3NTk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/24937594?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/A1vinSmith",
      "html_url": "https://github.com/A1vinSmith",
      "followers_url": "https://api.github.com/users/A1vinSmith/followers",
      "following_url": "https://api.github.com/users/A1vinSmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/A1vinSmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/A1vinSmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/A1vinSmith/subscriptions",
      "organizations_url": "https://api.github.com/users/A1vinSmith/orgs",
      "repos_url": "https://api.github.com/users/A1vinSmith/repos",
      "events_url": "https://api.github.com/users/A1vinSmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/A1vinSmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-11-29T08:07:17Z",
    "updated_at": "2018-12-18T04:34:56Z",
    "closed_at": "2018-12-18T04:34:56Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3812",
      "html_url": "https://github.com/expressjs/express/pull/3812",
      "diff_url": "https://github.com/expressjs/express/pull/3812.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3812.patch",
      "merged_at": "2018-12-18T04:34:56Z"
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3812/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3812/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3811",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3811/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3811/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3811/events",
    "html_url": "https://github.com/expressjs/express/pull/3811",
    "id": 385176514,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM0MjA0NjI4",
    "number": 3811,
    "title": "Update cookie-signature package",
    "user": {
      "login": "komtcho",
      "id": 12757671,
      "node_id": "MDQ6VXNlcjEyNzU3Njcx",
      "avatar_url": "https://avatars.githubusercontent.com/u/12757671?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/komtcho",
      "html_url": "https://github.com/komtcho",
      "followers_url": "https://api.github.com/users/komtcho/followers",
      "following_url": "https://api.github.com/users/komtcho/following{/other_user}",
      "gists_url": "https://api.github.com/users/komtcho/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/komtcho/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/komtcho/subscriptions",
      "organizations_url": "https://api.github.com/users/komtcho/orgs",
      "repos_url": "https://api.github.com/users/komtcho/repos",
      "events_url": "https://api.github.com/users/komtcho/events{/privacy}",
      "received_events_url": "https://api.github.com/users/komtcho/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-11-28T09:31:50Z",
    "updated_at": "2018-11-28T12:37:48Z",
    "closed_at": "2018-11-28T12:37:10Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3811",
      "html_url": "https://github.com/expressjs/express/pull/3811",
      "diff_url": "https://github.com/expressjs/express/pull/3811.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3811.patch",
      "merged_at": null
    },
    "body": "A security bug was detected by the Shieldfy in the \"cookie-signature\" package.\r\n\r\nInfected version: 1.0.6\r\ndescription:-\r\nAffected versions of `cookie-signature` are vulnerable to timing attacks as a result of using a fail-early comparison instead of a constant-time comparison. Timing attacks remove the exponential increase in entropy gained from increased secret length, by providing per-character feedback on the correctness of a guess via miniscule timing differences. Under favorable network conditions, an attacker can exploit this to guess the secret in no more than `charset*length` guesses, instead of `charset^length` guesses required were the timing attack not present.  \r\n\r\ndetected by Shieldfy Team \r\nshieldfy.io",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3811/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3811/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3810",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3810/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3810/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3810/events",
    "html_url": "https://github.com/expressjs/express/pull/3810",
    "id": 384599268,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjMzNzY0Mjg1",
    "number": 3810,
    "title": "Fixed typos in History.md",
    "user": {
      "login": "AScriver",
      "id": 34779562,
      "node_id": "MDQ6VXNlcjM0Nzc5NTYy",
      "avatar_url": "https://avatars.githubusercontent.com/u/34779562?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AScriver",
      "html_url": "https://github.com/AScriver",
      "followers_url": "https://api.github.com/users/AScriver/followers",
      "following_url": "https://api.github.com/users/AScriver/following{/other_user}",
      "gists_url": "https://api.github.com/users/AScriver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AScriver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AScriver/subscriptions",
      "organizations_url": "https://api.github.com/users/AScriver/orgs",
      "repos_url": "https://api.github.com/users/AScriver/repos",
      "events_url": "https://api.github.com/users/AScriver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AScriver/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-11-27T03:02:20Z",
    "updated_at": "2018-12-18T02:30:21Z",
    "closed_at": "2018-12-18T02:30:21Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3810",
      "html_url": "https://github.com/expressjs/express/pull/3810",
      "diff_url": "https://github.com/expressjs/express/pull/3810.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3810.patch",
      "merged_at": "2018-12-18T02:30:21Z"
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3810/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3810/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3809",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3809/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3809/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3809/events",
    "html_url": "https://github.com/expressjs/express/issues/3809",
    "id": 384271388,
    "node_id": "MDU6SXNzdWUzODQyNzEzODg=",
    "number": 3809,
    "title": "After been nginx reverse proxy, configured to  /XXX",
    "user": {
      "login": "SCWR",
      "id": 8925282,
      "node_id": "MDQ6VXNlcjg5MjUyODI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8925282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SCWR",
      "html_url": "https://github.com/SCWR",
      "followers_url": "https://api.github.com/users/SCWR/followers",
      "following_url": "https://api.github.com/users/SCWR/following{/other_user}",
      "gists_url": "https://api.github.com/users/SCWR/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SCWR/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SCWR/subscriptions",
      "organizations_url": "https://api.github.com/users/SCWR/orgs",
      "repos_url": "https://api.github.com/users/SCWR/repos",
      "events_url": "https://api.github.com/users/SCWR/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SCWR/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-11-26T10:43:56Z",
    "updated_at": "2018-11-27T01:14:23Z",
    "closed_at": "2018-11-26T23:34:58Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm sorry I asked a simple question.\r\n\r\nnginx setting:\r\nserver {\r\n        listen 9999;\r\n        server_name  localhost;\r\n        location /ex {\r\n            proxy_pass http://localhost:8888;\r\n            proxy_set_header X-real-ip $remote_addr;\r\n            proxy_set_header Host $http_host;\r\n        }\r\n    }\r\nWhen I visit localhost: 9000/ex/home\r\nNo result\r\nAnd localhost: 8888/home is OK\r\n\r\nDo I need to add / ex to all requests?\r\nOr subagent /ex/home requests to  home\r\n\r\nIs there a simple way?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3809/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3809/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3808",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3808/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3808/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3808/events",
    "html_url": "https://github.com/expressjs/express/issues/3808",
    "id": 384069668,
    "node_id": "MDU6SXNzdWUzODQwNjk2Njg=",
    "number": 3808,
    "title": "Strange behaviour between next('route') , next('router') and next('someString')",
    "user": {
      "login": "norayr93",
      "id": 36794263,
      "node_id": "MDQ6VXNlcjM2Nzk0MjYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/36794263?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/norayr93",
      "html_url": "https://github.com/norayr93",
      "followers_url": "https://api.github.com/users/norayr93/followers",
      "following_url": "https://api.github.com/users/norayr93/following{/other_user}",
      "gists_url": "https://api.github.com/users/norayr93/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/norayr93/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/norayr93/subscriptions",
      "organizations_url": "https://api.github.com/users/norayr93/orgs",
      "repos_url": "https://api.github.com/users/norayr93/repos",
      "events_url": "https://api.github.com/users/norayr93/events{/privacy}",
      "received_events_url": "https://api.github.com/users/norayr93/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-11-25T11:18:30Z",
    "updated_at": "2019-03-16T16:58:13Z",
    "closed_at": "2018-11-25T16:29:40Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "```js\r\nconst express = require(\"express\");\r\nconst app = express();\r\nconst PORT = process.env.PORT || 3000;\r\n\r\n\r\nconst router = express.Router()\r\n\r\n// predicate the router with a check and bail out when needed\r\nrouter.use(function (req, res, next) {\r\n  if (true) return next('router')\r\n  next()\r\n}\r\n)\r\n\r\nrouter.get('/', function (req, res) {\r\n  console.log('next router')\r\n  res.send('hello, user!')\r\n})\r\n\r\n// use the router and 401 anything falling through\r\napp.use('/admin', router, function (req, res) {\r\n  console.log('next app')\r\n  res.sendStatus(401)\r\n})\r\n\r\napp.listen(3000, () => {\r\n  console.log(`Server is runing on port ${3000}`)\r\n})\r\n```\r\n\r\n### Consider this cases\r\n\r\n1. next('route') -  It jumps to `router.get` , logs the **next router** and send 'hello user!'\r\n\r\n2. next('router') - it behaves right as said in the docs . It logs **next app** and send status **401** \r\n\r\n3. next('someString')  -  It logs **someString** , throws an **500 Internal server error** nad send 'someString' as response.\r\n\r\nSo whats the problem here ?Isnt it strange ? or maybe i understand something wrong . And also what is the difference between **next('route')** and **next('router')** ? ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3808/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3808/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3807",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3807/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3807/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3807/events",
    "html_url": "https://github.com/expressjs/express/issues/3807",
    "id": 383219158,
    "node_id": "MDU6SXNzdWUzODMyMTkxNTg=",
    "number": 3807,
    "title": "I cannot set cookie with domain localhost",
    "user": {
      "login": "annibuliful",
      "id": 5283709,
      "node_id": "MDQ6VXNlcjUyODM3MDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5283709?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/annibuliful",
      "html_url": "https://github.com/annibuliful",
      "followers_url": "https://api.github.com/users/annibuliful/followers",
      "following_url": "https://api.github.com/users/annibuliful/following{/other_user}",
      "gists_url": "https://api.github.com/users/annibuliful/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/annibuliful/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/annibuliful/subscriptions",
      "organizations_url": "https://api.github.com/users/annibuliful/orgs",
      "repos_url": "https://api.github.com/users/annibuliful/repos",
      "events_url": "https://api.github.com/users/annibuliful/events{/privacy}",
      "received_events_url": "https://api.github.com/users/annibuliful/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-11-21T17:16:06Z",
    "updated_at": "2018-11-22T07:06:41Z",
    "closed_at": "2018-11-21T18:01:29Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "<img width=\"689\" alt=\"screen shot 2561-11-22 at 00 15 14\" src=\"https://user-images.githubusercontent.com/5283709/48857573-c69bd900-edeb-11e8-9028-132ea29934fc.png\">\r\n<img width=\"840\" alt=\"screen shot 2561-11-22 at 00 15 32\" src=\"https://user-images.githubusercontent.com/5283709/48857574-c69bd900-edeb-11e8-98fa-2854b9d33911.png\">\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3807/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3807/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3806",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3806/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3806/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3806/events",
    "html_url": "https://github.com/expressjs/express/issues/3806",
    "id": 382842431,
    "node_id": "MDU6SXNzdWUzODI4NDI0MzE=",
    "number": 3806,
    "title": "Possible garbage collection issue on Node 10",
    "user": {
      "login": "MattMorgis",
      "id": 4664374,
      "node_id": "MDQ6VXNlcjQ2NjQzNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4664374?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MattMorgis",
      "html_url": "https://github.com/MattMorgis",
      "followers_url": "https://api.github.com/users/MattMorgis/followers",
      "following_url": "https://api.github.com/users/MattMorgis/following{/other_user}",
      "gists_url": "https://api.github.com/users/MattMorgis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MattMorgis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MattMorgis/subscriptions",
      "organizations_url": "https://api.github.com/users/MattMorgis/orgs",
      "repos_url": "https://api.github.com/users/MattMorgis/repos",
      "events_url": "https://api.github.com/users/MattMorgis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MattMorgis/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2018-11-20T20:48:32Z",
    "updated_at": "2018-11-24T18:19:46Z",
    "closed_at": "2018-11-24T18:19:45Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I may have discovered a memory leak within Express. I created a demo project [here](https://github.com/MattMorgis/express-memory-leak).\r\n\r\nI created one end point that returns an empty JavaScript object. When monitoring with [clinic](https://github.com/nearform/node-clinic) it reports an \"Event Loop Delay\"/Garbage Collection issue. \r\n\r\nCreating a similar server using only the Node.js `http` module detected no issues.\r\n\r\n### Express version:\r\n\r\n```javascript\r\nconst express = require(\"express\");\r\nconst app = express();\r\n\r\napp.get(\"/\", (request, response) => {\r\n  response.json({});\r\n});\r\n\r\napp.listen(3000);\r\n```\r\n\r\n### Results:\r\n  \r\n![express-results](https://user-images.githubusercontent.com/4664374/48801888-8ea57080-ecdb-11e8-8567-fb6ae853c2de.png)\r\n\r\n### Node.js `http` version:\r\n```javascript\r\nconst http = require(\"http\");\r\n\r\nconst server = http.createServer((request, response) => {\r\n  response.setHeader(\"Content-Type\", \"application/json\");\r\n  response.statusCode = 200;\r\n  response.end(\"{}\");\r\n});\r\n\r\nserver.listen(3000);\r\n\r\n```\r\n\r\n### Results:  \r\n\r\n![server-results](https://user-images.githubusercontent.com/4664374/48801906-949b5180-ecdb-11e8-9687-e5e8978e7cd5.png)",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3806/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3806/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3804",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3804/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3804/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3804/events",
    "html_url": "https://github.com/expressjs/express/issues/3804",
    "id": 381376429,
    "node_id": "MDU6SXNzdWUzODEzNzY0Mjk=",
    "number": 3804,
    "title": "default no-cache headers",
    "user": {
      "login": "dlants",
      "id": 1186977,
      "node_id": "MDQ6VXNlcjExODY5Nzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1186977?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dlants",
      "html_url": "https://github.com/dlants",
      "followers_url": "https://api.github.com/users/dlants/followers",
      "following_url": "https://api.github.com/users/dlants/following{/other_user}",
      "gists_url": "https://api.github.com/users/dlants/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dlants/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dlants/subscriptions",
      "organizations_url": "https://api.github.com/users/dlants/orgs",
      "repos_url": "https://api.github.com/users/dlants/repos",
      "events_url": "https://api.github.com/users/dlants/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dlants/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 163600,
        "node_id": "MDU6TGFiZWwxNjM2MDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false,
        "description": null
      },
      {
        "id": 8636393,
        "node_id": "MDU6TGFiZWw4NjM2Mzkz",
        "url": "https://api.github.com/repos/expressjs/express/labels/wontfix",
        "name": "wontfix",
        "color": "ffffff",
        "default": true,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-11-15T23:01:28Z",
    "updated_at": "2020-06-12T15:08:35Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi there!\r\n\r\nBy default, express does not serve no-cache headers on routes, so for instance:\r\n\r\n```\r\nimport * as express from 'express'\r\n\r\nconst app = express()\r\napp.get('/', (_req, res) => {\r\n  res.send('Hello')\r\n})\r\n\r\napp.listen(3000)\r\n```\r\n\r\nResults in the following:\r\n\r\n```\r\ncurl -I localhost:3000\r\nHTTP/1.1 200 OK\r\nX-Powered-By: Express\r\nContent-Type: text/html; charset=utf-8\r\nContent-Length: 5\r\nETag: W/\"5-9/+ei3uy4Jtwk1pdeF4MxdnQq/A\"\r\nDate: Thu, 15 Nov 2018 22:53:08 GMT\r\nConnection: keep-alive\r\n```\r\n\r\nThis is missing `Cache-Control: no-cache`, `Pragma: no-cahe` or `Expires: 0` headers that would inform the browser that the result of the request should not be cached.\r\n\r\nMy suggestion is to serve these files with no-cache headers by default, like [serve-static](https://expressjs.com/en/resources/middleware/serve-static.html). This will reduce the chance that folks will forget to configure it, and end up potentially having clients hang on to stale code.\r\n\r\n(this is an issue I've recently run into on my project -- it seems that sometimes browsers do cache such responses when no cache headers are provided)\r\n\r\nThanks for your hard work!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3804/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3804/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3803",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3803/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3803/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3803/events",
    "html_url": "https://github.com/expressjs/express/issues/3803",
    "id": 381072172,
    "node_id": "MDU6SXNzdWUzODEwNzIxNzI=",
    "number": 3803,
    "title": "can't install express generator.",
    "user": {
      "login": "htethtetwin",
      "id": 5858862,
      "node_id": "MDQ6VXNlcjU4NTg4NjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5858862?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/htethtetwin",
      "html_url": "https://github.com/htethtetwin",
      "followers_url": "https://api.github.com/users/htethtetwin/followers",
      "following_url": "https://api.github.com/users/htethtetwin/following{/other_user}",
      "gists_url": "https://api.github.com/users/htethtetwin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/htethtetwin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/htethtetwin/subscriptions",
      "organizations_url": "https://api.github.com/users/htethtetwin/orgs",
      "repos_url": "https://api.github.com/users/htethtetwin/repos",
      "events_url": "https://api.github.com/users/htethtetwin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/htethtetwin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-11-15T09:30:05Z",
    "updated_at": "2018-11-16T03:24:11Z",
    "closed_at": "2018-11-16T03:24:11Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello,\r\nI am child in expressjs and try to install on my mac followed instruction from express website.\r\nI have installed node via homebrew. Currently, node version on my mac is v11.1.0. After that i used $ npm install express-generator -g to install express generator and got error like permission denied on node_module folder. Therefore i have used $ sudo npm install -g express-generator - command to run as root . then i saw \r\n/Users/htwin/.npm-packages/bin/express -> /Users/htwin/.npm-packages/lib/node_modules/express-generator/bin/express-cli.js\r\n+ express-generator@4.16.0\r\nupdated 1 package in 0.819s\r\n\r\nseems like installed is it and i tried to test express command $ express -h and i got command not found msg.\r\nWKMSG2074265:myapp htwin$ express -h\r\n-bash: express: command not found\r\n\r\nHow to install express command on mac ?\r\nPlease help.\r\nThank you.\r\nHtet\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3803/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3803/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3802",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3802/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3802/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3802/events",
    "html_url": "https://github.com/expressjs/express/issues/3802",
    "id": 381011927,
    "node_id": "MDU6SXNzdWUzODEwMTE5Mjc=",
    "number": 3802,
    "title": "unexpected end of JSON input while parsing near '...otiator/-/negotiator-' during installing express",
    "user": {
      "login": "rahulchamoli916",
      "id": 42431526,
      "node_id": "MDQ6VXNlcjQyNDMxNTI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/42431526?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rahulchamoli916",
      "html_url": "https://github.com/rahulchamoli916",
      "followers_url": "https://api.github.com/users/rahulchamoli916/followers",
      "following_url": "https://api.github.com/users/rahulchamoli916/following{/other_user}",
      "gists_url": "https://api.github.com/users/rahulchamoli916/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rahulchamoli916/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rahulchamoli916/subscriptions",
      "organizations_url": "https://api.github.com/users/rahulchamoli916/orgs",
      "repos_url": "https://api.github.com/users/rahulchamoli916/repos",
      "events_url": "https://api.github.com/users/rahulchamoli916/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rahulchamoli916/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-11-15T05:58:45Z",
    "updated_at": "2018-11-17T11:45:51Z",
    "closed_at": "2018-11-15T19:24:13Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\r\nI'm trying to install express, but the prompt respond with this (screenshot):\r\n![capture3](https://user-images.githubusercontent.com/42431526/48533211-83aca380-e8c9-11e8-93d7-912123a9fbb5.JPG)\r\nAny suggestions would be gently appreciated.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3802/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3802/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3801",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3801/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3801/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3801/events",
    "html_url": "https://github.com/expressjs/express/issues/3801",
    "id": 380851225,
    "node_id": "MDU6SXNzdWUzODA4NTEyMjU=",
    "number": 3801,
    "title": "code",
    "user": {
      "login": "Pavek",
      "id": 1817081,
      "node_id": "MDQ6VXNlcjE4MTcwODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1817081?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Pavek",
      "html_url": "https://github.com/Pavek",
      "followers_url": "https://api.github.com/users/Pavek/followers",
      "following_url": "https://api.github.com/users/Pavek/following{/other_user}",
      "gists_url": "https://api.github.com/users/Pavek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Pavek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Pavek/subscriptions",
      "organizations_url": "https://api.github.com/users/Pavek/orgs",
      "repos_url": "https://api.github.com/users/Pavek/repos",
      "events_url": "https://api.github.com/users/Pavek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Pavek/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-11-14T19:27:48Z",
    "updated_at": "2018-11-14T19:30:43Z",
    "closed_at": "2018-11-14T19:30:43Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3801/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3801/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3800",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3800/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3800/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3800/events",
    "html_url": "https://github.com/expressjs/express/issues/3800",
    "id": 380415005,
    "node_id": "MDU6SXNzdWUzODA0MTUwMDU=",
    "number": 3800,
    "title": "How to rewrite url when using routers",
    "user": {
      "login": "barisusakli",
      "id": 2583394,
      "node_id": "MDQ6VXNlcjI1ODMzOTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2583394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/barisusakli",
      "html_url": "https://github.com/barisusakli",
      "followers_url": "https://api.github.com/users/barisusakli/followers",
      "following_url": "https://api.github.com/users/barisusakli/following{/other_user}",
      "gists_url": "https://api.github.com/users/barisusakli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/barisusakli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/barisusakli/subscriptions",
      "organizations_url": "https://api.github.com/users/barisusakli/orgs",
      "repos_url": "https://api.github.com/users/barisusakli/repos",
      "events_url": "https://api.github.com/users/barisusakli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/barisusakli/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-11-13T20:43:24Z",
    "updated_at": "2018-11-14T22:39:58Z",
    "closed_at": "2018-11-14T05:55:36Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello, trying to rewrite the url to redirect requests but having some problems when the url doesn't have a trailing slash. Here is a minimal app to demonstrate.\r\n\r\n```js\r\nconst express = require('express')\r\nconst app = express()\r\nconst port = 3000\r\nconst router = express.Router()\r\n\r\nconst subFolder = '/forum'\r\n\r\napp.use(subFolder, rewrite);\r\n\r\nfunction rewrite(req, res, next) {\r\n    console.log(req.path)\r\n    if (req.path !== '/') {\r\n        return next()\r\n    }\r\n    req.url = '/categories'\r\n    app.handle(req, res, next);\r\n}\r\n\r\nrouter.get('/regular-page', (req, res) => res.send('Hello World!'))\r\nrouter.get('/categories', (req, res) => res.send('Categories'));\r\napp.use(subFolder, router);\r\n\r\napp.listen(port, () => console.log(`Example app listening on port ${port}!`))\r\n```\r\n\r\nThe goal is to redirect `localhost:3000/forum` and `localhost:3000/forum/` to `localhost:3000:/forum/categories`. Right now only `localhost:3000/forum/` works. The other just 404s.\r\n\r\nThanks.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3800/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3800/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3799",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3799/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3799/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3799/events",
    "html_url": "https://github.com/expressjs/express/issues/3799",
    "id": 380277657,
    "node_id": "MDU6SXNzdWUzODAyNzc2NTc=",
    "number": 3799,
    "title": "Route.use with * ignore the last middleware",
    "user": {
      "login": "ShaharMynd",
      "id": 42337023,
      "node_id": "MDQ6VXNlcjQyMzM3MDIz",
      "avatar_url": "https://avatars.githubusercontent.com/u/42337023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ShaharMynd",
      "html_url": "https://github.com/ShaharMynd",
      "followers_url": "https://api.github.com/users/ShaharMynd/followers",
      "following_url": "https://api.github.com/users/ShaharMynd/following{/other_user}",
      "gists_url": "https://api.github.com/users/ShaharMynd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ShaharMynd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ShaharMynd/subscriptions",
      "organizations_url": "https://api.github.com/users/ShaharMynd/orgs",
      "repos_url": "https://api.github.com/users/ShaharMynd/repos",
      "events_url": "https://api.github.com/users/ShaharMynd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ShaharMynd/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-11-13T15:23:23Z",
    "updated_at": "2018-11-13T16:27:28Z",
    "closed_at": "2018-11-13T16:27:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The Problem:\r\nLets assume we have route '/A/:idOfA/B/:idOfB/C/:idOfC'\r\nI want to add a route that handles every route that ends with `/someRoute`\r\n\r\nI also added:\r\n```javascript\r\nrouter.param('idOfA', populateAParam);\r\nrouter.param('idOfB', populateBParam);\r\nrouter.param('idOfC', populateCParam);\r\n```\r\nTo capture `/someRoute` for every possible route I added this:\r\n`router.use(/.*\\/someRoute/, someRouteHandler);`\r\n\r\nThe Expected Result:\r\nThe following functions should run in order:\r\npopulateAParam, populateBParam, populateCParam, someRouteHandler\r\n\r\nThe Actual Result:\r\nThe following functions are executed:\r\npopulateAParam, populateBParam, someRouteHandler\r\n\r\ni.e. `populateCParam` was not executed\r\n\r\nAny idea why is this happening? any better suggestion to accomplish this task?\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3799/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3799/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3798",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3798/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3798/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3798/events",
    "html_url": "https://github.com/expressjs/express/issues/3798",
    "id": 379001853,
    "node_id": "MDU6SXNzdWUzNzkwMDE4NTM=",
    "number": 3798,
    "title": "Strict Routing",
    "user": {
      "login": "sabrehagen",
      "id": 1094600,
      "node_id": "MDQ6VXNlcjEwOTQ2MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1094600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sabrehagen",
      "html_url": "https://github.com/sabrehagen",
      "followers_url": "https://api.github.com/users/sabrehagen/followers",
      "following_url": "https://api.github.com/users/sabrehagen/following{/other_user}",
      "gists_url": "https://api.github.com/users/sabrehagen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sabrehagen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sabrehagen/subscriptions",
      "organizations_url": "https://api.github.com/users/sabrehagen/orgs",
      "repos_url": "https://api.github.com/users/sabrehagen/repos",
      "events_url": "https://api.github.com/users/sabrehagen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sabrehagen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2018-11-09T02:49:23Z",
    "updated_at": "2021-02-01T12:38:35Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I've been experimenting with strict routing using `express@latest` and have found that the following the requests all route to the same path when supplying `strict: true` to express. This doesn't seem to uphold the docs explanation of `Disabled by default, “/foo” and “/foo/” are treated the same by the router.`.\r\n\r\n```js\r\nconst express = require('express')\r\nconst app = express({ strict: true })\r\nconst port = 3022\r\n\r\napp.get('/:param?/', (req, res) => res.json(req.params.param));\r\n\r\napp.listen(port);\r\n```\r\n\r\n```\r\n> curl -I http://localhost:3022/\r\nHTTP/1.1 200 OK\r\n\r\n> curl -I http://localhost:3022/abc\r\nHTTP/1.1 200 OK\r\n\r\n> curl -I http://localhost:3022/abc/\r\nHTTP/1.1 200 OK\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3798/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3798/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3797",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3797/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3797/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3797/events",
    "html_url": "https://github.com/expressjs/express/issues/3797",
    "id": 378912388,
    "node_id": "MDU6SXNzdWUzNzg5MTIzODg=",
    "number": 3797,
    "title": "Error: Can't set headers after they are sent.",
    "user": {
      "login": "RossComputerGuy",
      "id": 19699320,
      "node_id": "MDQ6VXNlcjE5Njk5MzIw",
      "avatar_url": "https://avatars.githubusercontent.com/u/19699320?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RossComputerGuy",
      "html_url": "https://github.com/RossComputerGuy",
      "followers_url": "https://api.github.com/users/RossComputerGuy/followers",
      "following_url": "https://api.github.com/users/RossComputerGuy/following{/other_user}",
      "gists_url": "https://api.github.com/users/RossComputerGuy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RossComputerGuy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RossComputerGuy/subscriptions",
      "organizations_url": "https://api.github.com/users/RossComputerGuy/orgs",
      "repos_url": "https://api.github.com/users/RossComputerGuy/repos",
      "events_url": "https://api.github.com/users/RossComputerGuy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RossComputerGuy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2018-11-08T20:54:01Z",
    "updated_at": "2018-11-27T03:50:10Z",
    "closed_at": "2018-11-27T03:50:10Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Exception:\r\n```\r\nError: Can't set headers after they are sent.\r\n    at validateHeader (_http_outgoing.js:504:11)\r\n    at ServerResponse.setHeader (_http_outgoing.js:511:3)\r\n    at ServerResponse.header (/home/spaceboyross/websites/rosstechnologies/node_modules/express/lib/response.js:767:10)\r\n    at ServerResponse.send (/home/spaceboyross/websites/rosstechnologies/node_modules/express/lib/response.js:170:12)\r\n    at ServerResponse.json (/home/spaceboyross/websites/rosstechnologies/node_modules/express/lib/response.js:267:15)\r\n    at ServerResponse.send (/home/spaceboyross/websites/rosstechnologies/node_modules/express/lib/response.js:158:21)\r\n    at chat.getUser (/home/spaceboyross/websites/rosstechnologies/private/api.js:48:15)\r\n    at admin.database.ref.on.snapshot (/home/spaceboyross/websites/rosstechnologies/private/minichat/index.js:10:12)\r\n    at /home/spaceboyross/websites/rosstechnologies/node_modules/@firebase/database/dist/index.node.cjs.js:4465:22\r\n    at exceptionGuard (/home/spaceboyross/websites/rosstechnologies/node_modules/@firebase/database/dist/index.node.cjs.js:691:9)\r\n```\r\nCode:\r\n```js\r\nchat.getUser(uid,(err,user) => {\r\n\tif(err) return res.send(err2json(err));\r\n\tuser.status = \"ONLINE\";\r\n\tres.send(user.toJSON()); // This is line 48 of api.js\r\n});\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3797/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3797/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3796",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3796/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3796/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3796/events",
    "html_url": "https://github.com/expressjs/express/issues/3796",
    "id": 378733462,
    "node_id": "MDU6SXNzdWUzNzg3MzM0NjI=",
    "number": 3796,
    "title": "remove express version from Hello Word example documentation",
    "user": {
      "login": "geocodinglife",
      "id": 5788817,
      "node_id": "MDQ6VXNlcjU3ODg4MTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5788817?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/geocodinglife",
      "html_url": "https://github.com/geocodinglife",
      "followers_url": "https://api.github.com/users/geocodinglife/followers",
      "following_url": "https://api.github.com/users/geocodinglife/following{/other_user}",
      "gists_url": "https://api.github.com/users/geocodinglife/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/geocodinglife/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/geocodinglife/subscriptions",
      "organizations_url": "https://api.github.com/users/geocodinglife/orgs",
      "repos_url": "https://api.github.com/users/geocodinglife/repos",
      "events_url": "https://api.github.com/users/geocodinglife/events{/privacy}",
      "received_events_url": "https://api.github.com/users/geocodinglife/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-11-08T13:34:31Z",
    "updated_at": "2018-11-08T15:27:06Z",
    "closed_at": "2018-11-08T15:27:06Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "const express = require('express'  4.16.4)\r\n\r\nthe number after 'express' shows in the guide documentation and gives a error\r\ncan you please remove from documentation\r\n\r\nThanks.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3796/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3796/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3795",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3795/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3795/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3795/events",
    "html_url": "https://github.com/expressjs/express/issues/3795",
    "id": 378258135,
    "node_id": "MDU6SXNzdWUzNzgyNTgxMzU=",
    "number": 3795,
    "title": " How to run two app / project within just one?",
    "user": {
      "login": "martinmurciego",
      "id": 7759127,
      "node_id": "MDQ6VXNlcjc3NTkxMjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7759127?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinmurciego",
      "html_url": "https://github.com/martinmurciego",
      "followers_url": "https://api.github.com/users/martinmurciego/followers",
      "following_url": "https://api.github.com/users/martinmurciego/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinmurciego/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinmurciego/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinmurciego/subscriptions",
      "organizations_url": "https://api.github.com/users/martinmurciego/orgs",
      "repos_url": "https://api.github.com/users/martinmurciego/repos",
      "events_url": "https://api.github.com/users/martinmurciego/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinmurciego/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-11-07T11:58:45Z",
    "updated_at": "2018-11-13T03:38:09Z",
    "closed_at": "2018-11-07T20:45:07Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "\r\nWhat are the steps to run two app that are in two different directories within the same server (project). So that in this way two different server / hosting are not required. Cases like in which a static site / site is mounted with CMS and inside it is routed to an application also made in Node js / Express. Being able to run an app inside the other and route to each even though they are in different directories maybe but in the same project directory of the app that is running. If someone knows how to run two app in one to not use additional resources tell me how please.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3795/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3795/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3794",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3794/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3794/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3794/events",
    "html_url": "https://github.com/expressjs/express/issues/3794",
    "id": 377920562,
    "node_id": "MDU6SXNzdWUzNzc5MjA1NjI=",
    "number": 3794,
    "title": "express js",
    "user": {
      "login": "aminkarimi2015",
      "id": 44812318,
      "node_id": "MDQ6VXNlcjQ0ODEyMzE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/44812318?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aminkarimi2015",
      "html_url": "https://github.com/aminkarimi2015",
      "followers_url": "https://api.github.com/users/aminkarimi2015/followers",
      "following_url": "https://api.github.com/users/aminkarimi2015/following{/other_user}",
      "gists_url": "https://api.github.com/users/aminkarimi2015/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aminkarimi2015/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aminkarimi2015/subscriptions",
      "organizations_url": "https://api.github.com/users/aminkarimi2015/orgs",
      "repos_url": "https://api.github.com/users/aminkarimi2015/repos",
      "events_url": "https://api.github.com/users/aminkarimi2015/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aminkarimi2015/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2018-11-06T16:13:03Z",
    "updated_at": "2018-11-07T20:16:55Z",
    "closed_at": "2018-11-07T17:28:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hey Guys, whats up with this message in CMD during installation experss.js? I cant install express js with the npm install express command in CMD, is there another way to install that?\r\n\r\n\r\n[.......] - rollbackfailedoptional: verb npm-session 855446733a4f61d",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3794/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3794/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3793",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3793/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3793/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3793/events",
    "html_url": "https://github.com/expressjs/express/pull/3793",
    "id": 377180360,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjI4MTkzODEx",
    "number": 3793,
    "title": "remove utils merge",
    "user": {
      "login": "phapdinh",
      "id": 5825929,
      "node_id": "MDQ6VXNlcjU4MjU5Mjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5825929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phapdinh",
      "html_url": "https://github.com/phapdinh",
      "followers_url": "https://api.github.com/users/phapdinh/followers",
      "following_url": "https://api.github.com/users/phapdinh/following{/other_user}",
      "gists_url": "https://api.github.com/users/phapdinh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phapdinh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phapdinh/subscriptions",
      "organizations_url": "https://api.github.com/users/phapdinh/orgs",
      "repos_url": "https://api.github.com/users/phapdinh/repos",
      "events_url": "https://api.github.com/users/phapdinh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phapdinh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 13,
    "created_at": "2018-11-04T18:27:38Z",
    "updated_at": "2019-05-25T22:13:28Z",
    "closed_at": "2019-05-25T22:13:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3793",
      "html_url": "https://github.com/expressjs/express/pull/3793",
      "diff_url": "https://github.com/expressjs/express/pull/3793.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3793.patch",
      "merged_at": null
    },
    "body": "This removes the use of utils-merge and replaces it with merge-descriptors. Merge descriptors is already used as a dependency in other files and performs the same task as utils-merge. Merge descriptors has an additional parameter to allow for adding a field if it doesn't exist on the target object. Merge descriptors method of creating fields also is more robust. This reduces the need for the utils-merge dependency.\r\n\r\nI have run npm test and everything passed.\r\n\r\n@dougwilson ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3793/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3793/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3792",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3792/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3792/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3792/events",
    "html_url": "https://github.com/expressjs/express/issues/3792",
    "id": 377170726,
    "node_id": "MDU6SXNzdWUzNzcxNzA3MjY=",
    "number": 3792,
    "title": "Require parameter if a second parameter is included inside of a given array",
    "user": {
      "login": "Newbie012",
      "id": 10504365,
      "node_id": "MDQ6VXNlcjEwNTA0MzY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10504365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Newbie012",
      "html_url": "https://github.com/Newbie012",
      "followers_url": "https://api.github.com/users/Newbie012/followers",
      "following_url": "https://api.github.com/users/Newbie012/following{/other_user}",
      "gists_url": "https://api.github.com/users/Newbie012/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Newbie012/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Newbie012/subscriptions",
      "organizations_url": "https://api.github.com/users/Newbie012/orgs",
      "repos_url": "https://api.github.com/users/Newbie012/repos",
      "events_url": "https://api.github.com/users/Newbie012/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Newbie012/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-11-04T16:43:36Z",
    "updated_at": "2018-11-04T17:32:08Z",
    "closed_at": "2018-11-04T16:53:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I was looking for a validator that requires a specific parameter if there's a parameter that equals to a specific value. Maybe something like this:\r\n\r\n    const allowedsMethods = ['A', 'B'];\r\n\r\n    ...\r\n\r\n    check('method').custom(method => allowedMethods.includes(method))\r\n    check('paramA').requireIfContains('method', ['A'])\r\n    check('paramB').requireIfContains('method', ['A'])\r\n    check('paramAorB').requireIfContains('method', ['A', 'B'])\r\n\r\n- If `method` is contained inside `['A']`, then the property `paramA` will be required.\r\n- If `method` is contained inside `['B']`, then the property `paramA` will be required.\r\n- If `method` is contained inside `['A', 'B']`, then the property `paramA` will be required.\r\n\r\nI was looking at the [currently available validators][1] and I didn't find something that would fit my needs. I tried to figure out how can I achieve this by using a custom validator, but I couldn't find any solution.\r\n\r\n\r\n  [1]: https://github.com/chriso/validator.js\r\n  [2]: https://express-validator.github.io/docs/custom-validators-sanitizers.html",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3792/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3792/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3791",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3791/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3791/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3791/events",
    "html_url": "https://github.com/expressjs/express/issues/3791",
    "id": 377141125,
    "node_id": "MDU6SXNzdWUzNzcxNDExMjU=",
    "number": 3791,
    "title": "Deployment to Production in centOS server",
    "user": {
      "login": "kishoreaoe",
      "id": 6896519,
      "node_id": "MDQ6VXNlcjY4OTY1MTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6896519?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kishoreaoe",
      "html_url": "https://github.com/kishoreaoe",
      "followers_url": "https://api.github.com/users/kishoreaoe/followers",
      "following_url": "https://api.github.com/users/kishoreaoe/following{/other_user}",
      "gists_url": "https://api.github.com/users/kishoreaoe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kishoreaoe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kishoreaoe/subscriptions",
      "organizations_url": "https://api.github.com/users/kishoreaoe/orgs",
      "repos_url": "https://api.github.com/users/kishoreaoe/repos",
      "events_url": "https://api.github.com/users/kishoreaoe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kishoreaoe/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-11-04T10:53:03Z",
    "updated_at": "2018-11-07T07:56:46Z",
    "closed_at": "2018-11-07T07:56:45Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\r\n\r\nWe are trying to deploy the expressjs app to the linux server. We have copied the project folder to the OS.We have installed node and npm also.\r\nWe have copied the node_modules(created by running npm i --production with in our local system and then copied the corresponding folder to the linux environment).\r\n\r\nwhen we try to run node index.js command, we are getting below error:\r\n```\r\nError: Cannot find module 'express'\r\n    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:580:15)\r\n    at Function.Module._load (internal/modules/cjs/loader.js:506:25)\r\n    at Module.require (internal/modules/cjs/loader.js:636:17)\r\n    at require (internal/modules/cjs/helpers.js:20:18)\r\n    at Object.<anonymous> (/ctiapp/whistle/wbbe/index.js:1:77)\r\n    at Module._compile (internal/modules/cjs/loader.js:688:30)\r\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:699:10)\r\n    at Module.load (internal/modules/cjs/loader.js:598:32)\r\n    at tryModuleLoad (internal/modules/cjs/loader.js:537:12)\r\n    at Function.Module._load (internal/modules/cjs/loader.js:529:3)\r\n```\r\nSomeone please help us in deployment of expressjs app within linux server please.!\r\n\r\nThanks and Regards,\r\nKishore Kumar. K",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3791/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3791/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3790",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3790/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3790/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3790/events",
    "html_url": "https://github.com/expressjs/express/issues/3790",
    "id": 377100784,
    "node_id": "MDU6SXNzdWUzNzcxMDA3ODQ=",
    "number": 3790,
    "title": "support 405 not allowed in express 5.x",
    "user": {
      "login": "mregydev",
      "id": 28675823,
      "node_id": "MDQ6VXNlcjI4Njc1ODIz",
      "avatar_url": "https://avatars.githubusercontent.com/u/28675823?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mregydev",
      "html_url": "https://github.com/mregydev",
      "followers_url": "https://api.github.com/users/mregydev/followers",
      "following_url": "https://api.github.com/users/mregydev/following{/other_user}",
      "gists_url": "https://api.github.com/users/mregydev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mregydev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mregydev/subscriptions",
      "organizations_url": "https://api.github.com/users/mregydev/orgs",
      "repos_url": "https://api.github.com/users/mregydev/repos",
      "events_url": "https://api.github.com/users/mregydev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mregydev/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-11-03T22:50:21Z",
    "updated_at": "2018-11-03T23:43:48Z",
    "closed_at": "2018-11-03T22:54:32Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "There is a problem when requesting existing endpoint with wrong method ( post or get or delete) , 404 not found is returned while 405 not allowed should be returned \r\n\r\n<code>\r\nrouter.get('/test',(req,res)=>{\r\n    res.send(\"this is a test\");\r\n});\r\n</code>\r\n\r\n\r\nwhen requesting http://localhost:8070/test with post it should return 405 not 404",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3790/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3790/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3789",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3789/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3789/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3789/events",
    "html_url": "https://github.com/expressjs/express/issues/3789",
    "id": 376943683,
    "node_id": "MDU6SXNzdWUzNzY5NDM2ODM=",
    "number": 3789,
    "title": "Getting error installing express on Ubuntu 18.04.1",
    "user": {
      "login": "willdorfx",
      "id": 19579355,
      "node_id": "MDQ6VXNlcjE5NTc5MzU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/19579355?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/willdorfx",
      "html_url": "https://github.com/willdorfx",
      "followers_url": "https://api.github.com/users/willdorfx/followers",
      "following_url": "https://api.github.com/users/willdorfx/following{/other_user}",
      "gists_url": "https://api.github.com/users/willdorfx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/willdorfx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/willdorfx/subscriptions",
      "organizations_url": "https://api.github.com/users/willdorfx/orgs",
      "repos_url": "https://api.github.com/users/willdorfx/repos",
      "events_url": "https://api.github.com/users/willdorfx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/willdorfx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-11-02T19:41:51Z",
    "updated_at": "2018-11-02T22:19:41Z",
    "closed_at": "2018-11-02T22:19:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Trying to install on Ubuntu 18.04.1 VM on top of ProxMox, running into this:\r\n\r\n>npm ERR! Invalid argument: family must be 4 or 6\r\n>\r\n>npm ERR! A complete log of this run can be found in:\r\n>npm ERR!     /home/xxxxxxxx/.npm/_logs/2018-11-02T19_13_39_150Z-debug.log\r\n\r\nHere is the log:\r\n\r\n>0 info it worked if it ends with ok\r\n>1 verbose cli [ '/usr/bin/node', '/usr/bin/npm', 'install', 'express' ]\r\n>2 info using npm@6.4.1\r\n>3 info using node@v8.12.0\r\n>4 verbose config Skipping project config: /home/willdorf/.npmrc. (matches userconfig)\r\n>5 verbose npm-session 4448880781489b56\r\n>6 silly install loadCurrentTree\r\n>7 silly install readLocalPackageData\r\n>8 silly fetchPackageMetaData error for express@latest Invalid argument: family must be 4 or 6\r\n>9 timing stage:rollbackFailedOptional Completed in 11ms\r\n>10 timing stage:runTopLevelLifecycles Completed in 3302ms\r\n>11 verbose stack TypeError: Invalid argument: family must be 4 or 6\r\n>11 verbose stack     at lookup (dns.js:129:11)\r\n>11 verbose stack     at net.js:1091:5\r\n>11 verbose stack     at defaultTriggerAsyncIdScope (internal/async_hooks.js:281:19)\r\n>11 verbose stack     at lookupAndConnect (net.js:1090:3)\r\n>11 verbose stack     at TLSSocket.Socket.connect (net.js:1025:5)\r\n>11 verbose stack     at Object.exports.connect (_tls_wrap.js:1088:12)\r\n>11 verbose stack     at HttpsAgent.createConnection (https.js:115:22)\r\n>11 verbose stack     at HttpsAgent.createSocket (/usr/lib/node_modules/npm/node_modules/agentkeepalive/lib/_http_agent.js:265:26)\r\n>11 verbose stack     at HttpsAgent.createSocket (/usr/lib/node_modules/npm/node_modules/agentkeepalive/lib/agent.js:77:11)\r\n>11 verbose stack     at HttpsAgent.addRequest (/usr/lib/node_modules/npm/node_modules/agentkeepalive/lib/_http_agent.js:239:10)\r\n>11 verbose stack     at new ClientRequest (_http_client.js:258:16)\r\n>11 verbose stack     at Object.request (http.js:38:10)\r\n>11 verbose stack     at request (https.js:243:15)\r\n>11 verbose stack     at fetch.Promise (/usr/lib/node_modules/npm/node_modules/node-fetch-npm/src/index.js:54:17)\r\n>11 verbose stack     at new Promise (<anonymous>)\r\n>11 verbose stack     at fetch (/usr/lib/node_modules/npm/node_modules/node-fetch-npm/src/index.js:41:10)\r\n>12 verbose cwd /home/willdorf\r\n>13 verbose Linux 4.15.0-38-generic\r\n>14 verbose argv \"/usr/bin/node\" \"/usr/bin/npm\" \"install\" \"express\"\r\n>15 verbose node v8.12.0\r\n>16 verbose npm  v6.4.1\r\n>17 error Invalid argument: family must be 4 or 6\r\n>18 verbose exit [ 1, true ]\r\n\r\nand this is everything I did from start to error:\r\n\r\n> 1. install ubuntu\r\n> 2. sudo apt-add-repository universe\r\n> 3. sudo apt update\r\n> 4. sudo apt -y upgrade\r\n> 5. sudo apt -y install fail2ban\r\n> 6. sudo ufw allow OpenSSH\r\n> 7. sudo ufw enable\r\n> 8. sudo apt -y install mysql-server\r\n> 9. sudo mysql_secure_installation\r\n>10. in mysql:\r\n>      alter user 'root'@'localhost' identified with mysql_native_password by 'xxxxxxxxxxxxxxxxxxxx';\r\n>11. curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash - && sudo apt-get install -y nodejs\r\n>12. sudo apt install -y build-essential\r\n>13. sudo npm init\r\n>14. sudo npm install express",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3789/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3789/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3788",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3788/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3788/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3788/events",
    "html_url": "https://github.com/expressjs/express/pull/3788",
    "id": 376379321,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjI3NjA4NzY3",
    "number": 3788,
    "title": "docs: homepage link http to https",
    "user": {
      "login": "graykode",
      "id": 10525011,
      "node_id": "MDQ6VXNlcjEwNTI1MDEx",
      "avatar_url": "https://avatars.githubusercontent.com/u/10525011?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/graykode",
      "html_url": "https://github.com/graykode",
      "followers_url": "https://api.github.com/users/graykode/followers",
      "following_url": "https://api.github.com/users/graykode/following{/other_user}",
      "gists_url": "https://api.github.com/users/graykode/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/graykode/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/graykode/subscriptions",
      "organizations_url": "https://api.github.com/users/graykode/orgs",
      "repos_url": "https://api.github.com/users/graykode/repos",
      "events_url": "https://api.github.com/users/graykode/events{/privacy}",
      "received_events_url": "https://api.github.com/users/graykode/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-11-01T12:50:43Z",
    "updated_at": "2018-11-01T12:56:20Z",
    "closed_at": "2018-11-01T12:55:01Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3788",
      "html_url": "https://github.com/expressjs/express/pull/3788",
      "diff_url": "https://github.com/expressjs/express/pull/3788.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3788.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3788/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3788/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3787",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3787/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3787/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3787/events",
    "html_url": "https://github.com/expressjs/express/pull/3787",
    "id": 376296468,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjI3NTQ0NzIz",
    "number": 3787,
    "title": "Pass file reference back when using res.sendFile",
    "user": {
      "login": "nullivex",
      "id": 2321375,
      "node_id": "MDQ6VXNlcjIzMjEzNzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2321375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nullivex",
      "html_url": "https://github.com/nullivex",
      "followers_url": "https://api.github.com/users/nullivex/followers",
      "following_url": "https://api.github.com/users/nullivex/following{/other_user}",
      "gists_url": "https://api.github.com/users/nullivex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nullivex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nullivex/subscriptions",
      "organizations_url": "https://api.github.com/users/nullivex/orgs",
      "repos_url": "https://api.github.com/users/nullivex/repos",
      "events_url": "https://api.github.com/users/nullivex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nullivex/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-11-01T08:19:52Z",
    "updated_at": "2018-11-01T23:16:43Z",
    "closed_at": "2018-11-01T12:15:03Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3787",
      "html_url": "https://github.com/expressjs/express/pull/3787",
      "diff_url": "https://github.com/expressjs/express/pull/3787.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3787.patch",
      "merged_at": null
    },
    "body": "This will allow access to the send library can be obtained.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3787/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3787/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3786",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3786/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3786/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3786/events",
    "html_url": "https://github.com/expressjs/express/pull/3786",
    "id": 376277379,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjI3NTMwODAw",
    "number": 3786,
    "title": "Lint - add semicolons",
    "user": {
      "login": "thammarith",
      "id": 8011543,
      "node_id": "MDQ6VXNlcjgwMTE1NDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8011543?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thammarith",
      "html_url": "https://github.com/thammarith",
      "followers_url": "https://api.github.com/users/thammarith/followers",
      "following_url": "https://api.github.com/users/thammarith/following{/other_user}",
      "gists_url": "https://api.github.com/users/thammarith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thammarith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thammarith/subscriptions",
      "organizations_url": "https://api.github.com/users/thammarith/orgs",
      "repos_url": "https://api.github.com/users/thammarith/repos",
      "events_url": "https://api.github.com/users/thammarith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thammarith/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-11-01T07:01:34Z",
    "updated_at": "2018-11-03T15:12:52Z",
    "closed_at": "2018-11-01T12:15:35Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3786",
      "html_url": "https://github.com/expressjs/express/pull/3786",
      "diff_url": "https://github.com/expressjs/express/pull/3786.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3786.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3786/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3786/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3785",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3785/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3785/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3785/events",
    "html_url": "https://github.com/expressjs/express/pull/3785",
    "id": 376070934,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjI3MzcxNzMw",
    "number": 3785,
    "title": "Update Readme.md",
    "user": {
      "login": "sowrabhinertia",
      "id": 37259884,
      "node_id": "MDQ6VXNlcjM3MjU5ODg0",
      "avatar_url": "https://avatars.githubusercontent.com/u/37259884?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sowrabhinertia",
      "html_url": "https://github.com/sowrabhinertia",
      "followers_url": "https://api.github.com/users/sowrabhinertia/followers",
      "following_url": "https://api.github.com/users/sowrabhinertia/following{/other_user}",
      "gists_url": "https://api.github.com/users/sowrabhinertia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sowrabhinertia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sowrabhinertia/subscriptions",
      "organizations_url": "https://api.github.com/users/sowrabhinertia/orgs",
      "repos_url": "https://api.github.com/users/sowrabhinertia/repos",
      "events_url": "https://api.github.com/users/sowrabhinertia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sowrabhinertia/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-10-31T17:12:22Z",
    "updated_at": "2018-10-31T17:25:36Z",
    "closed_at": "2018-10-31T17:24:31Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3785",
      "html_url": "https://github.com/expressjs/express/pull/3785",
      "diff_url": "https://github.com/expressjs/express/pull/3785.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3785.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3785/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3785/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3784",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3784/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3784/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3784/events",
    "html_url": "https://github.com/expressjs/express/issues/3784",
    "id": 376050382,
    "node_id": "MDU6SXNzdWUzNzYwNTAzODI=",
    "number": 3784,
    "title": "In-built authentication system",
    "user": {
      "login": "arunkumar413",
      "id": 7776779,
      "node_id": "MDQ6VXNlcjc3NzY3Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7776779?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arunkumar413",
      "html_url": "https://github.com/arunkumar413",
      "followers_url": "https://api.github.com/users/arunkumar413/followers",
      "following_url": "https://api.github.com/users/arunkumar413/following{/other_user}",
      "gists_url": "https://api.github.com/users/arunkumar413/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arunkumar413/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arunkumar413/subscriptions",
      "organizations_url": "https://api.github.com/users/arunkumar413/orgs",
      "repos_url": "https://api.github.com/users/arunkumar413/repos",
      "events_url": "https://api.github.com/users/arunkumar413/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arunkumar413/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-10-31T16:26:33Z",
    "updated_at": "2018-10-31T16:39:55Z",
    "closed_at": "2018-10-31T16:39:02Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi Team,\r\n\r\nCan you please include the authentication inbuilt into the express framework as this is the basic thing for most web apps. \r\n\r\nThanks,\r\nArun",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3784/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3784/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3783",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3783/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3783/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3783/events",
    "html_url": "https://github.com/expressjs/express/issues/3783",
    "id": 375789424,
    "node_id": "MDU6SXNzdWUzNzU3ODk0MjQ=",
    "number": 3783,
    "title": "Unsure if this is an issue",
    "user": {
      "login": "deckchairlabs",
      "id": 7539725,
      "node_id": "MDQ6VXNlcjc1Mzk3MjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7539725?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deckchairlabs",
      "html_url": "https://github.com/deckchairlabs",
      "followers_url": "https://api.github.com/users/deckchairlabs/followers",
      "following_url": "https://api.github.com/users/deckchairlabs/following{/other_user}",
      "gists_url": "https://api.github.com/users/deckchairlabs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deckchairlabs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deckchairlabs/subscriptions",
      "organizations_url": "https://api.github.com/users/deckchairlabs/orgs",
      "repos_url": "https://api.github.com/users/deckchairlabs/repos",
      "events_url": "https://api.github.com/users/deckchairlabs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deckchairlabs/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-10-31T04:02:25Z",
    "updated_at": "2018-11-01T01:55:19Z",
    "closed_at": "2018-11-01T01:55:18Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Is this an issue with the npm registry?\r\n\r\nhttps://www.npmjs.com/package/express\r\n\r\n`{\"message\":\"The request signature we calculated does not match the signature you provided. Check your key and signing method.\",\"code\":\"SignatureDoesNotMatch\",\"region\":null,\"time\":\"2018-10-31T03:58:46.874Z\",\"requestId\":\"D63323079AD62D6F\",\"extendedRequestId\":\"i8tEmoWq2C3M4pJo9zitwOC3ObeJK0XJNFYAe6t8N37/XJ6Sj157LrHyVUqzHr857epnXcgPr24=\",\"statusCode\":403,\"retryable\":false,\"retryDelay\":59.69814552881532}`",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3783/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3783/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3782",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3782/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3782/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3782/events",
    "html_url": "https://github.com/expressjs/express/issues/3782",
    "id": 375215073,
    "node_id": "MDU6SXNzdWUzNzUyMTUwNzM=",
    "number": 3782,
    "title": "Improves Issue Submission Template",
    "user": {
      "login": "koolamusic",
      "id": 8960757,
      "node_id": "MDQ6VXNlcjg5NjA3NTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8960757?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/koolamusic",
      "html_url": "https://github.com/koolamusic",
      "followers_url": "https://api.github.com/users/koolamusic/followers",
      "following_url": "https://api.github.com/users/koolamusic/following{/other_user}",
      "gists_url": "https://api.github.com/users/koolamusic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/koolamusic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/koolamusic/subscriptions",
      "organizations_url": "https://api.github.com/users/koolamusic/orgs",
      "repos_url": "https://api.github.com/users/koolamusic/repos",
      "events_url": "https://api.github.com/users/koolamusic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/koolamusic/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-10-29T21:02:02Z",
    "updated_at": "2018-10-30T12:20:27Z",
    "closed_at": "2018-10-30T12:20:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I intend to submit a PR that would improve the experience of the submission process for issues \r\ndifferentiating bugs, from features and enhancements :smile: \r\n\r\nSomething that looks like this https://prnt.sc/lbgpp0",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3782/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3782/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3781",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3781/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3781/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3781/events",
    "html_url": "https://github.com/expressjs/express/issues/3781",
    "id": 375207555,
    "node_id": "MDU6SXNzdWUzNzUyMDc1NTU=",
    "number": 3781,
    "title": "Support graceful shutdown",
    "user": {
      "login": "stephenh",
      "id": 6401,
      "node_id": "MDQ6VXNlcjY0MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6401?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenh",
      "html_url": "https://github.com/stephenh",
      "followers_url": "https://api.github.com/users/stephenh/followers",
      "following_url": "https://api.github.com/users/stephenh/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenh/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenh/orgs",
      "repos_url": "https://api.github.com/users/stephenh/repos",
      "events_url": "https://api.github.com/users/stephenh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2018-10-29T20:42:33Z",
    "updated_at": "2018-10-29T21:33:47Z",
    "closed_at": "2018-10-29T21:03:48Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "We're using a 3rd party package to do graceful shutdowns with express, so that when our application deploys, we can get exit code 0s, and not exit codes 127s from Docker finally giving up and killing the process (which looks like a container death in our metrics).\r\n\r\nThe code is pretty minimal:\r\n\r\nhttps://github.com/moebius-mlm/http-graceful-shutdown/blob/master/src/graceful-shutdown-manager.ts\r\n\r\nSeems like express should have a way for doing this directly.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3781/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3781/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3780",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3780/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3780/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3780/events",
    "html_url": "https://github.com/expressjs/express/issues/3780",
    "id": 374738150,
    "node_id": "MDU6SXNzdWUzNzQ3MzgxNTA=",
    "number": 3780,
    "title": "Infinite cycle to timeout when sending POST request to GET endpoint",
    "user": {
      "login": "kfrajtak",
      "id": 1510452,
      "node_id": "MDQ6VXNlcjE1MTA0NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1510452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kfrajtak",
      "html_url": "https://github.com/kfrajtak",
      "followers_url": "https://api.github.com/users/kfrajtak/followers",
      "following_url": "https://api.github.com/users/kfrajtak/following{/other_user}",
      "gists_url": "https://api.github.com/users/kfrajtak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kfrajtak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kfrajtak/subscriptions",
      "organizations_url": "https://api.github.com/users/kfrajtak/orgs",
      "repos_url": "https://api.github.com/users/kfrajtak/repos",
      "events_url": "https://api.github.com/users/kfrajtak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kfrajtak/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2018-10-28T10:19:08Z",
    "updated_at": "2018-11-27T03:50:46Z",
    "closed_at": "2018-11-27T03:50:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\r\nI have a GET endpoint and when I accidentally sent a POST request to that endpoint it took some time before timing out. After turning DEBUG on I noticed a pattern of repeated messages:\r\n\r\n```\r\n express:router cookieParser  : /api/user +3ms  \r\n express:router jsonParser  : /api/user +2ms    \r\n express:router session  : /api/user +2ms       \r\n express:router helmet  : /api/user +2ms        \r\n express:router initialize  : /api/user +2ms    \r\n express:router authenticate  : /api/user +1ms  \r\n express:router <anonymous>  : /api/user +1ms   \r\n express:router serveStatic  : /api/user +2ms   \r\n express:router middleware  : /api/user +2ms    \r\n express:router dispatching POST /api/user +6ms \r\n express:router query  : /api/user +1ms         \r\n express:router expressInit  : /api/user +2ms   \r\n express:router cookieParser  : /api/user +1ms  \r\n express:router jsonParser  : /api/user +2ms    \r\n express:router session  : /api/user +1ms       \r\n express:router helmet  : /api/user +3ms        \r\n express:router initialize  : /api/user +1ms    \r\n express:router authenticate  : /api/user +1ms  \r\n express:router <anonymous>  : /api/user +2ms   \r\n express:router serveStatic  : /api/user +1ms   \r\n express:router middleware  : /api/user +1ms    \r\n express:router dispatching POST /api/user +6ms \r\n express:router query  : /api/user +1ms         \r\n express:router expressInit  : /api/user +2ms   \r\n express:router cookieParser  : /api/user +1ms  \r\n express:router jsonParser  : /api/user +2ms    \r\n express:router session  : /api/user +2ms       \r\n express:router helmet  : /api/user +2ms        \r\n express:router initialize  : /api/user +1ms    \r\n express:router authenticate  : /api/user +1ms  \r\n express:router <anonymous>  : /api/user +1ms   \r\n express:router serveStatic  : /api/user +2ms   \r\n express:router middleware  : /api/user +1ms    \r\n express:router dispatching POST /api/user +5ms \r\n express:router query  : /api/user +2ms         \r\n express:router expressInit  : /api/user +1ms   \r\n express:router cookieParser  : /api/user +2ms  \r\n express:router jsonParser  : /api/user +2ms    \r\n express:router session  : /api/user +2ms       \r\n express:router helmet  : /api/user +1ms        \r\n ...\r\n```\r\nI have a catch all route and a route for serving static content and a proxy (it is a React application).\r\n```\r\napp.use(express.static(path.join(__dirname, \"..\", \"build\")));\r\nconst apiProxy = proxy(\"/\", { target: \"http://localhost:3000\", ws: true });\r\napp.use(apiProxy);\r\n```\r\nand\r\n```\r\napp.all(\"*\", (req, res) => {\r\n  res.status(404).send();\r\n});\r\n```\r\nIs there a way how to prevent this behavior?\r\nThanks,\r\nKarel",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3780/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3780/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3779",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3779/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3779/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3779/events",
    "html_url": "https://github.com/expressjs/express/pull/3779",
    "id": 374694579,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjI2MzI4MDAy",
    "number": 3779,
    "title": "Changed count of arguments for custom error handler",
    "user": {
      "login": "bifot",
      "id": 5220114,
      "node_id": "MDQ6VXNlcjUyMjAxMTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5220114?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bifot",
      "html_url": "https://github.com/bifot",
      "followers_url": "https://api.github.com/users/bifot/followers",
      "following_url": "https://api.github.com/users/bifot/following{/other_user}",
      "gists_url": "https://api.github.com/users/bifot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bifot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bifot/subscriptions",
      "organizations_url": "https://api.github.com/users/bifot/orgs",
      "repos_url": "https://api.github.com/users/bifot/repos",
      "events_url": "https://api.github.com/users/bifot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bifot/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-10-27T22:16:20Z",
    "updated_at": "2018-10-28T21:43:01Z",
    "closed_at": "2018-10-27T22:50:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3779",
      "html_url": "https://github.com/expressjs/express/pull/3779",
      "diff_url": "https://github.com/expressjs/express/pull/3779.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3779.patch",
      "merged_at": null
    },
    "body": "In my case, if route throwing error, I try to catch it via my custom error handler middleware.\r\n\r\n```js\r\nrouter.get((req, res, next) => {\r\n  try {\r\n    // api logic...\r\n    // throwing simple error for example\r\n    throw new Error('Unhandled rejection')\r\n  } catch (err) {\r\n    next(err);\r\n  }\r\n});\r\n\r\n// middleware is not calling, but if I pass 4 arguments, it will work\r\nrouter.use((error, req, res) => {\r\n  res.status(500).json({ error: 'Unknown error' });\r\n});\r\n```\r\n\r\nProblem in [`Layer.prototype.handle_error`](https://github.com/expressjs/express/blob/3ed5090ca91f6a387e66370d57ead94d886275e1/lib/router/layer.js#L62) because [it needs four arguments](https://github.com/expressjs/express/blob/3ed5090ca91f6a387e66370d57ead94d886275e1/lib/router/layer.js#L65) for detect custom error handler middleware.\r\n\r\nSo, why I must pass four arguments if I'm not using `next` function in middleware?\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3779/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3779/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3778",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3778/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3778/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3778/events",
    "html_url": "https://github.com/expressjs/express/pull/3778",
    "id": 374602025,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjI2MjY2NjY5",
    "number": 3778,
    "title": "Release 4.17",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 113897193,
        "node_id": "MDU6TGFiZWwxMTM4OTcxOTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/release",
        "name": "release",
        "color": "000000",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/17",
      "html_url": "https://github.com/expressjs/express/milestone/17",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/17/labels",
      "id": 3066819,
      "node_id": "MDk6TWlsZXN0b25lMzA2NjgxOQ==",
      "number": 17,
      "title": "4.17",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 15,
      "state": "closed",
      "created_at": "2018-01-26T16:25:16Z",
      "updated_at": "2019-05-17T01:58:27Z",
      "due_on": null,
      "closed_at": "2019-05-17T01:58:27Z"
    },
    "comments": 10,
    "created_at": "2018-10-27T03:41:09Z",
    "updated_at": "2019-05-25T22:13:29Z",
    "closed_at": "2019-05-17T00:51:32Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3778",
      "html_url": "https://github.com/expressjs/express/pull/3778",
      "diff_url": "https://github.com/expressjs/express/pull/3778.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3778.patch",
      "merged_at": "2019-05-17T00:51:32Z"
    },
    "body": "This is a tracking issue for release 4.17.\r\n\r\n**Please keep feature requests in their own issues**\r\n\r\nIf you want to make a comment on a particular change, please make the comment in the \"Files changed\" tab so comments are not lost during a rebase.\r\n\r\nList of changes for release:\r\n- [x] Add `express.raw` to parse raw bodies #3708\r\n- [x] Add `express.text` to parse text bodies #3455\r\n- [x] Improve error message for non-strings to `res.sendFile` #3582\r\n- [x] Improve error message for `null`/`undefined` to `res.status` #2795 #2797 #3111\r\n- [x] Support multiple hosts in `X-Forwarded-Host` #3494 #3495\r\n- [x] Support Node.js 9.x #3617\r\n- [x] Support Node.js 10.x #3656\r\n- [x] Support Node.js 11.x\r\n- [x] Support Node.js 12.x #3946\r\n- [x] Upgrade `accepts` to 1.3.7 to bring in sorting fixes\r\n- [x] Upgrade `body-parser` to 1.19.0 to bring in new encoding, `pb` shorthand, and url encoded parse fix\r\n- [x] Upgrade `content-disposition` to 0.5.3\r\n- [x] Upgrade `cookie` to 0.4.0 to add support for `SameSite=None` #3958\r\n- [x] Upgrade `finalhandler` to 1.1.2 for stricter CSP header\r\n- [x] Upgrade `parseurl` to 1.3.3\r\n- [x] Upgrade `proxy-addr` to 2.0.5\r\n- [x] Upgrade `qs` to 6.7.0 to bring in query parse fix\r\n- [x] Upgrade `range-parser` to 1.2.1\r\n- [x] Upgrade `send` to 0.17.1 to bring in stricter CSP and adjusted MIME types #3486\r\n- [x] Upgrade `serve-static` to 1.14.1 to bring in `send` 0.17.1 changes\r\n- [x] Upgrade `setprototypeof` to 1.1.1\r\n- [x] Upgrade `statuses` to 1.5.0\r\n- [x] Upgrade `type-is` to 1.6.18\r\n\r\n**Testing this release**\r\n\r\nIf you want to try out this release, you can install it with the following commands:\r\n\r\n``` bash\r\n$ npm cache clean express\r\n$ npm install expressjs/express#4.17\r\n```\r\n\r\nOwners/collaborators: please do not merge this PR :)",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3778/reactions",
      "total_count": 6,
      "+1": 6,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3778/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3777",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3777/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3777/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3777/events",
    "html_url": "https://github.com/expressjs/express/issues/3777",
    "id": 374164742,
    "node_id": "MDU6SXNzdWUzNzQxNjQ3NDI=",
    "number": 3777,
    "title": "promise created and not returned",
    "user": {
      "login": "maikelmclauflin",
      "id": 4896982,
      "node_id": "MDQ6VXNlcjQ4OTY5ODI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4896982?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maikelmclauflin",
      "html_url": "https://github.com/maikelmclauflin",
      "followers_url": "https://api.github.com/users/maikelmclauflin/followers",
      "following_url": "https://api.github.com/users/maikelmclauflin/following{/other_user}",
      "gists_url": "https://api.github.com/users/maikelmclauflin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maikelmclauflin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maikelmclauflin/subscriptions",
      "organizations_url": "https://api.github.com/users/maikelmclauflin/orgs",
      "repos_url": "https://api.github.com/users/maikelmclauflin/repos",
      "events_url": "https://api.github.com/users/maikelmclauflin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maikelmclauflin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-10-25T22:57:30Z",
    "updated_at": "2018-10-25T23:09:25Z",
    "closed_at": "2018-10-25T23:09:25Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "i have checked through all of my routes, but seem to be left with this warning. any ideas?\r\n```\r\nWarning: a promise was created in a handler at /app/node_modules/express/lib/router/index.js:317:13 but was not returned from it, see http://goo.gl/rRqMUw\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3777/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3777/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3776",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3776/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3776/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3776/events",
    "html_url": "https://github.com/expressjs/express/issues/3776",
    "id": 373933473,
    "node_id": "MDU6SXNzdWUzNzM5MzM0NzM=",
    "number": 3776,
    "title": "undefined: undefined added to http request headers if http.request used inside express",
    "user": {
      "login": "ils-sapnaj",
      "id": 31530583,
      "node_id": "MDQ6VXNlcjMxNTMwNTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/31530583?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ils-sapnaj",
      "html_url": "https://github.com/ils-sapnaj",
      "followers_url": "https://api.github.com/users/ils-sapnaj/followers",
      "following_url": "https://api.github.com/users/ils-sapnaj/following{/other_user}",
      "gists_url": "https://api.github.com/users/ils-sapnaj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ils-sapnaj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ils-sapnaj/subscriptions",
      "organizations_url": "https://api.github.com/users/ils-sapnaj/orgs",
      "repos_url": "https://api.github.com/users/ils-sapnaj/repos",
      "events_url": "https://api.github.com/users/ils-sapnaj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ils-sapnaj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2018-10-25T12:56:11Z",
    "updated_at": "2018-10-29T04:50:33Z",
    "closed_at": "2018-10-26T23:19:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am getting \"HTTP message contains more than the configured limit of 64 headers\" error when using request module to get the data from some third party urls. On debugging the issue, I got to know that there are some undefined undefined string added to http request headers due to which its length got increased. I seen the same issue reported earlier and mentioned that issue is in promisifyAll but I want to say that I am not using promisify at all then why I am getting this error.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3776/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3776/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3775",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3775/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3775/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3775/events",
    "html_url": "https://github.com/expressjs/express/pull/3775",
    "id": 373881731,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjI1NzA2ODQ3",
    "number": 3775,
    "title": "Add support for ppc64le",
    "user": {
      "login": "akhileshbhople",
      "id": 42931328,
      "node_id": "MDQ6VXNlcjQyOTMxMzI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/42931328?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akhileshbhople",
      "html_url": "https://github.com/akhileshbhople",
      "followers_url": "https://api.github.com/users/akhileshbhople/followers",
      "following_url": "https://api.github.com/users/akhileshbhople/following{/other_user}",
      "gists_url": "https://api.github.com/users/akhileshbhople/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akhileshbhople/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akhileshbhople/subscriptions",
      "organizations_url": "https://api.github.com/users/akhileshbhople/orgs",
      "repos_url": "https://api.github.com/users/akhileshbhople/repos",
      "events_url": "https://api.github.com/users/akhileshbhople/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akhileshbhople/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-10-25T10:35:37Z",
    "updated_at": "2018-10-31T12:10:32Z",
    "closed_at": "2018-10-31T12:10:31Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3775",
      "html_url": "https://github.com/expressjs/express/pull/3775",
      "diff_url": "https://github.com/expressjs/express/pull/3775.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3775.patch",
      "merged_at": null
    },
    "body": "Added support for ppc64le arch for supported nodeJS versions. Please review.\r\n\r\nThanks!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3775/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3775/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3774",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3774/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3774/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3774/events",
    "html_url": "https://github.com/expressjs/express/issues/3774",
    "id": 373564932,
    "node_id": "MDU6SXNzdWUzNzM1NjQ5MzI=",
    "number": 3774,
    "title": "req.route returns array, how to get active route?",
    "user": {
      "login": "jamalabo1",
      "id": 25992049,
      "node_id": "MDQ6VXNlcjI1OTkyMDQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/25992049?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamalabo1",
      "html_url": "https://github.com/jamalabo1",
      "followers_url": "https://api.github.com/users/jamalabo1/followers",
      "following_url": "https://api.github.com/users/jamalabo1/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamalabo1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamalabo1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamalabo1/subscriptions",
      "organizations_url": "https://api.github.com/users/jamalabo1/orgs",
      "repos_url": "https://api.github.com/users/jamalabo1/repos",
      "events_url": "https://api.github.com/users/jamalabo1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamalabo1/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2018-10-24T16:17:59Z",
    "updated_at": "2018-10-24T17:14:02Z",
    "closed_at": "2018-10-24T16:43:07Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello, \r\nim trying to get the active route from req.route, (when array is returned)\r\n\r\n### example:\r\n\r\n \r\n```\r\napp.get(['/index', '/product/:id'], function(req,res) { \r\n   console.log(req.route);\r\n   res.json({error: false})\r\n});\r\n```\r\n\r\n### expected output:\r\n```\r\nRoute {\r\n  path:\r\n   [ '/index',\r\n     '/product/:id'\r\n ],\r\n  stack:\r\n   [ Layer {\r\n       handle: [Function],\r\n       name: '<anonymous>',\r\n       params: undefined,\r\n       path: undefined,\r\n       keys: [],\r\n       regexp: /^\\/?$/i,\r\n       method: 'get' } ],\r\n  methods: { get: true } }\r\n```\r\n\r\n\r\nhow can i get the active route, \r\nif request url was: `/product/15` i want to know that the route is `/product/:id`",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3774/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3774/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3773",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3773/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3773/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3773/events",
    "html_url": "https://github.com/expressjs/express/issues/3773",
    "id": 373379635,
    "node_id": "MDU6SXNzdWUzNzMzNzk2MzU=",
    "number": 3773,
    "title": "Right way to send error messages through middleware cycle",
    "user": {
      "login": "BigFax",
      "id": 1742288,
      "node_id": "MDQ6VXNlcjE3NDIyODg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1742288?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BigFax",
      "html_url": "https://github.com/BigFax",
      "followers_url": "https://api.github.com/users/BigFax/followers",
      "following_url": "https://api.github.com/users/BigFax/following{/other_user}",
      "gists_url": "https://api.github.com/users/BigFax/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BigFax/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BigFax/subscriptions",
      "organizations_url": "https://api.github.com/users/BigFax/orgs",
      "repos_url": "https://api.github.com/users/BigFax/repos",
      "events_url": "https://api.github.com/users/BigFax/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BigFax/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2018-10-24T09:07:09Z",
    "updated_at": "2023-02-23T21:54:49Z",
    "closed_at": "2023-02-23T21:08:43Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Based on [this SO question](https://stackoverflow.com/questions/52470387/express-node-right-way-to-send-error-messages-through-middleware-cycle) and as mentioned by @dougwilson in [this PR](https://github.com/expressjs/express/pull/3770), i open an issue to understand how to manage error messages through the middleware cycle (layers stack).\r\n\r\nIn other frameworks i worked with, as Rails or Symfony, most of the job is done in controllers. This is the place where you call \"everything\" (authorizations, form validations, fetch datas, render views...). I could do the same with Express : have one middleware by route where i manage calls to helpers and services :\r\n```\r\nRouter.route('/auth')\r\n  .all(isAuthorized()) // return a middleware \r\n  .get(getAuth)\r\n  .post(postAuth);\r\n\r\nfunction postAuth (req, res, next) {\r\n  var validationError = userForm(req);\r\n  if (validationError) {\r\n    /* ... */\r\n   res.render(/* ... */);\r\n  }\r\n  res.render(/* ... */);\r\n}\r\n```\r\nI don't know if this is the \"right way\" in real project, but as I understand Express, it is made to be organized in another way (maybe i'm wrong ? maybe there is no \"right way\"). I separate each feature in middlewares that i put or not in my route layers stack. Example :\r\n```\r\nRouter.route('/auth')\r\n  .all(isAuthorized()) // return a middleware \r\n  .get(getAuth)\r\n  .post(userForm, signUpUser, checkUser, signInUser, getAuth);\r\n```\r\nEach of these middlewares is reusable in other routes. If i was using only one middleware, as a controller `postAuth` (as shown above), i could call `userForm`, `signUpUser`, `checkUser` and `signInUser` in it and manage errors easily. Now, in the way i am using middlewares, i don't know how to manage errors. The fact to have separate middlewares make them independant, without link between them. In case of errors in a middleware, for example `userForm`, i can't call directly `getAuth` to display the view with the errors in it because `userForm` is reusable in other route and is not specific to `getAuth`. I won't know which view or method to call. What i want to do, in case of errors, is to broken the middleware stack to bypass future middlewares and jump directly to the last middleware which display the view (here `getAuth`).\r\n\r\nThere is different worksaround which i think are not very convenient :\r\n\r\n1. Put a condition `if (res.locals.err)` in each middleware to jump to the next one in case of errors by calling `next();`.\r\n2. Call an error-handling middleware with `next(err);` but it is hard to manage every redirection in one function (this is the solution i use with custom errors).\r\n3. Use `next('route');` with a route duplication each time to manage error (similar as error-handling middleware solution).\r\n4. Use `res.redirect();` and flash messages (session, query string, db, cookie...). If I use this solution, I need to make it stateless (in case of REST). I could do it with query string for example, but this is also not very convenient to me. Furthermore, it doesn't really answer the question directly but more the question of how to pass message between requests in REST API. Here i don't want redirect but stay in the same request.\r\n\r\nI would like to know : \r\n\r\n**How you manage errors in real Express project ?**\r\n**Should i organize my routing differently ?**\r\n\r\nI tried to explain my problem in a different way that my stack overflow question, i hope it is clear. Tell me to clarify if necessary. Thank you in advance.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3773/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3773/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  }
]