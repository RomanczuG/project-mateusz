[
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2049",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2049/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2049/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2049/events",
    "html_url": "https://github.com/expressjs/express/issues/2049",
    "id": 31451897,
    "node_id": "MDU6SXNzdWUzMTQ1MTg5Nw==",
    "number": 2049,
    "title": "Is there a way to print all routes?",
    "user": {
      "login": "deiga",
      "id": 27202,
      "node_id": "MDQ6VXNlcjI3MjAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/27202?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deiga",
      "html_url": "https://github.com/deiga",
      "followers_url": "https://api.github.com/users/deiga/followers",
      "following_url": "https://api.github.com/users/deiga/following{/other_user}",
      "gists_url": "https://api.github.com/users/deiga/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deiga/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deiga/subscriptions",
      "organizations_url": "https://api.github.com/users/deiga/orgs",
      "repos_url": "https://api.github.com/users/deiga/repos",
      "events_url": "https://api.github.com/users/deiga/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deiga/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-04-14T10:59:55Z",
    "updated_at": "2022-10-31T05:50:29Z",
    "closed_at": "2014-04-14T14:55:22Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "I recall there used to be `app.routes` to get this information, what is the current way to do this?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2049/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2049/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2048",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2048/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2048/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2048/events",
    "html_url": "https://github.com/expressjs/express/pull/2048",
    "id": 31429879,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ3MDA1MjA=",
    "number": 2048,
    "title": "Merge pull request #1 from visionmedia/master",
    "user": {
      "login": "zimmem",
      "id": 921023,
      "node_id": "MDQ6VXNlcjkyMTAyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/921023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zimmem",
      "html_url": "https://github.com/zimmem",
      "followers_url": "https://api.github.com/users/zimmem/followers",
      "following_url": "https://api.github.com/users/zimmem/following{/other_user}",
      "gists_url": "https://api.github.com/users/zimmem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zimmem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zimmem/subscriptions",
      "organizations_url": "https://api.github.com/users/zimmem/orgs",
      "repos_url": "https://api.github.com/users/zimmem/repos",
      "events_url": "https://api.github.com/users/zimmem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zimmem/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-04-14T01:50:01Z",
    "updated_at": "2014-07-30T10:21:16Z",
    "closed_at": "2014-04-14T01:55:05Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2048",
      "html_url": "https://github.com/expressjs/express/pull/2048",
      "diff_url": "https://github.com/expressjs/express/pull/2048.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2048.patch",
      "merged_at": null
    },
    "body": "sync\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2048/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2048/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2047",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2047/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2047/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2047/events",
    "html_url": "https://github.com/expressjs/express/pull/2047",
    "id": 31406119,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ2OTQ1MDA=",
    "number": 2047,
    "title": "remove one feature description",
    "user": {
      "login": "Pana",
      "id": 552081,
      "node_id": "MDQ6VXNlcjU1MjA4MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/552081?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Pana",
      "html_url": "https://github.com/Pana",
      "followers_url": "https://api.github.com/users/Pana/followers",
      "following_url": "https://api.github.com/users/Pana/following{/other_user}",
      "gists_url": "https://api.github.com/users/Pana/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Pana/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Pana/subscriptions",
      "organizations_url": "https://api.github.com/users/Pana/orgs",
      "repos_url": "https://api.github.com/users/Pana/repos",
      "events_url": "https://api.github.com/users/Pana/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Pana/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2014-04-13T14:06:12Z",
    "updated_at": "2014-06-12T06:04:00Z",
    "closed_at": "2014-04-14T14:51:35Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2047",
      "html_url": "https://github.com/expressjs/express/pull/2047",
      "diff_url": "https://github.com/expressjs/express/pull/2047.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2047.patch",
      "merged_at": "2014-04-14T14:51:35Z"
    },
    "body": "app.configure method has removed \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2047/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2047/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2046",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2046/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2046/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2046/events",
    "html_url": "https://github.com/expressjs/express/issues/2046",
    "id": 31401683,
    "node_id": "MDU6SXNzdWUzMTQwMTY4Mw==",
    "number": 2046,
    "title": "latest version not cookie-friendly with passport-remember-me",
    "user": {
      "login": "danielgindi",
      "id": 366926,
      "node_id": "MDQ6VXNlcjM2NjkyNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/366926?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danielgindi",
      "html_url": "https://github.com/danielgindi",
      "followers_url": "https://api.github.com/users/danielgindi/followers",
      "following_url": "https://api.github.com/users/danielgindi/following{/other_user}",
      "gists_url": "https://api.github.com/users/danielgindi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danielgindi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danielgindi/subscriptions",
      "organizations_url": "https://api.github.com/users/danielgindi/orgs",
      "repos_url": "https://api.github.com/users/danielgindi/repos",
      "events_url": "https://api.github.com/users/danielgindi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danielgindi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-04-13T11:09:24Z",
    "updated_at": "2014-04-13T13:18:33Z",
    "closed_at": "2014-04-13T12:49:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Since express.js v4, when passport-remember-me tries to save a new cookie for the remember_me token (when there already was a remember_me cookie!) it does not come out in the response.\nThe flow is like this:\n1. It receives a remember_me cookie in the request\n2. consumes the token\n3. generates a new token\n4. saves it to the remember_me cookie\n5. Set-Cookie output does not contain remember_me\n\nWhen debugging, I can see that res.cookie is actually called and with correct arguments.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2046/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2046/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2045",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2045/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2045/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2045/events",
    "html_url": "https://github.com/expressjs/express/issues/2045",
    "id": 31384408,
    "node_id": "MDU6SXNzdWUzMTM4NDQwOA==",
    "number": 2045,
    "title": "/bin/www ?",
    "user": {
      "login": "daslicht",
      "id": 465008,
      "node_id": "MDQ6VXNlcjQ2NTAwOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/465008?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/daslicht",
      "html_url": "https://github.com/daslicht",
      "followers_url": "https://api.github.com/users/daslicht/followers",
      "following_url": "https://api.github.com/users/daslicht/following{/other_user}",
      "gists_url": "https://api.github.com/users/daslicht/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/daslicht/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daslicht/subscriptions",
      "organizations_url": "https://api.github.com/users/daslicht/orgs",
      "repos_url": "https://api.github.com/users/daslicht/repos",
      "events_url": "https://api.github.com/users/daslicht/events{/privacy}",
      "received_events_url": "https://api.github.com/users/daslicht/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-04-12T14:57:27Z",
    "updated_at": "2014-04-12T15:01:33Z",
    "closed_at": "2014-04-12T14:58:25Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello,\nis it no longer possible to just run node app.js ? \nI tried it but nothing happens ?\n\nHow to use forever etc. with express4 ?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2045/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2045/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2044",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2044/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2044/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2044/events",
    "html_url": "https://github.com/expressjs/express/issues/2044",
    "id": 31384101,
    "node_id": "MDU6SXNzdWUzMTM4NDEwMQ==",
    "number": 2044,
    "title": "JSON payloads no longer \"pretty\"",
    "user": {
      "login": "ezmilhouse",
      "id": 45563,
      "node_id": "MDQ6VXNlcjQ1NTYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/45563?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ezmilhouse",
      "html_url": "https://github.com/ezmilhouse",
      "followers_url": "https://api.github.com/users/ezmilhouse/followers",
      "following_url": "https://api.github.com/users/ezmilhouse/following{/other_user}",
      "gists_url": "https://api.github.com/users/ezmilhouse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ezmilhouse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ezmilhouse/subscriptions",
      "organizations_url": "https://api.github.com/users/ezmilhouse/orgs",
      "repos_url": "https://api.github.com/users/ezmilhouse/repos",
      "events_url": "https://api.github.com/users/ezmilhouse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ezmilhouse/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-04-12T14:40:17Z",
    "updated_at": "2016-05-31T18:18:29Z",
    "closed_at": "2014-04-12T14:41:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "hi,\n\nin express 3.x I did\n\n``` js\nres.contentType('application/json');\nres.send(200, {\n    foo : 'bar'\n});\n```\n\nreturn \"pretty\" JSON, in the browser and also in tools like Postman.\n\nin express 4.x I do\n\n``` js\nres.set('Content-Type', 'application/json');\nres.send(200, {\n    foo : 'bar'\n});\n```\n\nand JSON is not formatted anymore.\n\nChecked headers, content type header is set correctly.\n\nIs there any way to return to the old formatted way?\n\nthx\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2044/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2044/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2043",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2043/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2043/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2043/events",
    "html_url": "https://github.com/expressjs/express/issues/2043",
    "id": 31370421,
    "node_id": "MDU6SXNzdWUzMTM3MDQyMQ==",
    "number": 2043,
    "title": "Router doesn't send path params from mounted url",
    "user": {
      "login": "johnywith1n",
      "id": 321466,
      "node_id": "MDQ6VXNlcjMyMTQ2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/321466?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johnywith1n",
      "html_url": "https://github.com/johnywith1n",
      "followers_url": "https://api.github.com/users/johnywith1n/followers",
      "following_url": "https://api.github.com/users/johnywith1n/following{/other_user}",
      "gists_url": "https://api.github.com/users/johnywith1n/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johnywith1n/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johnywith1n/subscriptions",
      "organizations_url": "https://api.github.com/users/johnywith1n/orgs",
      "repos_url": "https://api.github.com/users/johnywith1n/repos",
      "events_url": "https://api.github.com/users/johnywith1n/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johnywith1n/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-04-11T23:38:04Z",
    "updated_at": "2014-04-14T19:49:47Z",
    "closed_at": "2014-04-14T19:49:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "If I have the following api:\n\n/api/:id/customers\n/api/:id/employees\n\nand I use Express 4 Routers in the following fashion:\n\n```\nvar customersRouter = require('customersRouter')\nvar employeesRouter = require('employeesRouter')\n\nvar app = express()\n\napp.use('/api/:id/customers', customersRouter);\napp.use('/api/:id/employees', employeeRouter);\n```\n\nthen in the routers, `req.params` doesn't contain the path param for id.\n\nIs this a design decision or could this functionality be added in?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2043/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2043/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2042",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2042/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2042/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2042/events",
    "html_url": "https://github.com/expressjs/express/issues/2042",
    "id": 31341015,
    "node_id": "MDU6SXNzdWUzMTM0MTAxNQ==",
    "number": 2042,
    "title": "Delete in routes",
    "user": {
      "login": "belmarca",
      "id": 6055789,
      "node_id": "MDQ6VXNlcjYwNTU3ODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6055789?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/belmarca",
      "html_url": "https://github.com/belmarca",
      "followers_url": "https://api.github.com/users/belmarca/followers",
      "following_url": "https://api.github.com/users/belmarca/following{/other_user}",
      "gists_url": "https://api.github.com/users/belmarca/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/belmarca/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/belmarca/subscriptions",
      "organizations_url": "https://api.github.com/users/belmarca/orgs",
      "repos_url": "https://api.github.com/users/belmarca/repos",
      "events_url": "https://api.github.com/users/belmarca/events{/privacy}",
      "received_events_url": "https://api.github.com/users/belmarca/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-04-11T16:21:25Z",
    "updated_at": "2014-04-11T16:52:12Z",
    "closed_at": "2014-04-11T16:52:12Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Why is this code valid:\n\n```\napp.route('/path')\n    .get(action)\n    .post(action)\n```\n\nbut breaks when you add a delete:\n\n```\napp.route('/path')\n    .get(action)\n    .post(action)\n    .del(action)\n```\n\n? Feature or bug?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2042/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2042/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2041",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2041/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2041/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2041/events",
    "html_url": "https://github.com/expressjs/express/issues/2041",
    "id": 31311669,
    "node_id": "MDU6SXNzdWUzMTMxMTY2OQ==",
    "number": 2041,
    "title": "app.get('/', controller.index) support object's function ?",
    "user": {
      "login": "fantasyni",
      "id": 1411347,
      "node_id": "MDQ6VXNlcjE0MTEzNDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1411347?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fantasyni",
      "html_url": "https://github.com/fantasyni",
      "followers_url": "https://api.github.com/users/fantasyni/followers",
      "following_url": "https://api.github.com/users/fantasyni/following{/other_user}",
      "gists_url": "https://api.github.com/users/fantasyni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fantasyni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fantasyni/subscriptions",
      "organizations_url": "https://api.github.com/users/fantasyni/orgs",
      "repos_url": "https://api.github.com/users/fantasyni/repos",
      "events_url": "https://api.github.com/users/fantasyni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fantasyni/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2014-04-11T08:52:53Z",
    "updated_at": "2014-04-11T12:39:49Z",
    "closed_at": "2014-04-11T12:39:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "in my use scene, controller is an object  \nhow can i pass controller.index function to express  \nwhen express routes to path '/', call the route method by controller context  \nlike controller.index(req, res, next);  \ninstead of just call index(req, res, next);  \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2041/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2041/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2040",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2040/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2040/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2040/events",
    "html_url": "https://github.com/expressjs/express/issues/2040",
    "id": 31296634,
    "node_id": "MDU6SXNzdWUzMTI5NjYzNA==",
    "number": 2040,
    "title": "How to apply an all() routing for all pages AND sub-pages?",
    "user": {
      "login": "binarykitchen",
      "id": 177641,
      "node_id": "MDQ6VXNlcjE3NzY0MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/177641?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/binarykitchen",
      "html_url": "https://github.com/binarykitchen",
      "followers_url": "https://api.github.com/users/binarykitchen/followers",
      "following_url": "https://api.github.com/users/binarykitchen/following{/other_user}",
      "gists_url": "https://api.github.com/users/binarykitchen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/binarykitchen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/binarykitchen/subscriptions",
      "organizations_url": "https://api.github.com/users/binarykitchen/orgs",
      "repos_url": "https://api.github.com/users/binarykitchen/repos",
      "events_url": "https://api.github.com/users/binarykitchen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/binarykitchen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-04-11T01:43:43Z",
    "updated_at": "2014-04-11T05:08:06Z",
    "closed_at": "2014-04-11T05:08:06Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "For the administration on my single page app I have a router structure like this:\n\n``` js\n    app.use('/admin', adminRouter);\n\n    adminRouter.route('/user')\n        .get(app.controllers.user.isAdmin, app.controllers.user.get);\n\n    adminRouter.route('/user/:alias')\n        .all(app.controllers.user.isAdmin)\n        .get(app.controllers.user.get)\n        .put(app.controllers.user.update)\n        .delete(app.controllers.user.del);\n\n    // category administration\n\n    adminRouter.route('/category')\n        .all(app.controllers.user.isAdmin)\n        .get(app.controllers.category.get)\n        .post(app.controllers.category.post);\n\n    adminRouter.route('/category/create')\n        .get(app.controllers.user.isAdmin);\n```\n\nYou see, I call everywhere `.all(app.controllers.user.isAdmin)` to check first, if the logged user is an administrator. IMO this code smells and there is too much duplicate code.\n\nCan I somehow tell Express to run `.all(app.controllers.user.isAdmin)` for all pages beginning with `'/admin'`?\n\nSomething like this:\n\n``` js\n    app.use('/admin', adminRouter)\n        .all(app.controllers.user.isAdmin);\n\n    adminRouter.route('/user')\n        .get(app.controllers.user.get);\n\n    adminRouter.route('/user/:alias')\n        .get(app.controllers.user.get)\n        .put(app.controllers.user.update)\n        .delete(app.controllers.user.del);\n\n    // category administration\n\n    adminRouter.route('/category')\n        .get(app.controllers.category.get)\n        .post(app.controllers.category.post);\n\n    // etc ...\n```\n\nIs that possible?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2040/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2040/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2039",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2039/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2039/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2039/events",
    "html_url": "https://github.com/expressjs/express/pull/2039",
    "id": 31275205,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ2MjI4MDU=",
    "number": 2039,
    "title": "Update deps",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-04-10T19:52:29Z",
    "updated_at": "2014-07-25T20:45:24Z",
    "closed_at": "2014-04-10T20:54:51Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2039",
      "html_url": "https://github.com/expressjs/express/pull/2039",
      "diff_url": "https://github.com/expressjs/express/pull/2039.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2039.patch",
      "merged_at": null
    },
    "body": "This updates a few slightly out-of-date deps for express 4.x\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2039/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2039/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2038",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2038/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2038/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2038/events",
    "html_url": "https://github.com/expressjs/express/issues/2038",
    "id": 31218318,
    "node_id": "MDU6SXNzdWUzMTIxODMxOA==",
    "number": 2038,
    "title": "Make routing prettier",
    "user": {
      "login": "binarykitchen",
      "id": 177641,
      "node_id": "MDQ6VXNlcjE3NzY0MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/177641?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/binarykitchen",
      "html_url": "https://github.com/binarykitchen",
      "followers_url": "https://api.github.com/users/binarykitchen/followers",
      "following_url": "https://api.github.com/users/binarykitchen/following{/other_user}",
      "gists_url": "https://api.github.com/users/binarykitchen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/binarykitchen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/binarykitchen/subscriptions",
      "organizations_url": "https://api.github.com/users/binarykitchen/orgs",
      "repos_url": "https://api.github.com/users/binarykitchen/repos",
      "events_url": "https://api.github.com/users/binarykitchen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/binarykitchen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-04-10T06:36:34Z",
    "updated_at": "2014-04-10T13:01:16Z",
    "closed_at": "2014-04-10T12:54:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "At the moment I have something like this:\n\n``` js\n    express.Router().route('/:alias/subtitle/:key')\n        .all(app.controllers.user.isMember)\n        .put(app.controllers.subtitle.update)\n        .delete(app.controllers.subtitle.del);\n```\n\nIMO it looks not very pretty, calling the constructor Router() and then the method route() afterwards.\n\nAre there any shortcuts or workarounds?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2038/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2038/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2037",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2037/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2037/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2037/events",
    "html_url": "https://github.com/expressjs/express/issues/2037",
    "id": 31214064,
    "node_id": "MDU6SXNzdWUzMTIxNDA2NA==",
    "number": 2037,
    "title": "req.is('json') returns undefined",
    "user": {
      "login": "binarykitchen",
      "id": 177641,
      "node_id": "MDQ6VXNlcjE3NzY0MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/177641?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/binarykitchen",
      "html_url": "https://github.com/binarykitchen",
      "followers_url": "https://api.github.com/users/binarykitchen/followers",
      "following_url": "https://api.github.com/users/binarykitchen/following{/other_user}",
      "gists_url": "https://api.github.com/users/binarykitchen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/binarykitchen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/binarykitchen/subscriptions",
      "organizations_url": "https://api.github.com/users/binarykitchen/orgs",
      "repos_url": "https://api.github.com/users/binarykitchen/repos",
      "events_url": "https://api.github.com/users/binarykitchen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/binarykitchen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-04-10T04:17:27Z",
    "updated_at": "2014-04-10T13:02:59Z",
    "closed_at": "2014-04-10T13:02:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Another weird thing with express' latest version. But in `req.headers` I have `'application/json'` for the content type. Hmmm, what's wrong here?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2037/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2037/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2036",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2036/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2036/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2036/events",
    "html_url": "https://github.com/expressjs/express/issues/2036",
    "id": 31213106,
    "node_id": "MDU6SXNzdWUzMTIxMzEwNg==",
    "number": 2036,
    "title": "Update README",
    "user": {
      "login": "sahat",
      "id": 544954,
      "node_id": "MDQ6VXNlcjU0NDk1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/544954?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sahat",
      "html_url": "https://github.com/sahat",
      "followers_url": "https://api.github.com/users/sahat/followers",
      "following_url": "https://api.github.com/users/sahat/following{/other_user}",
      "gists_url": "https://api.github.com/users/sahat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sahat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sahat/subscriptions",
      "organizations_url": "https://api.github.com/users/sahat/orgs",
      "repos_url": "https://api.github.com/users/sahat/repos",
      "events_url": "https://api.github.com/users/sahat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sahat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2014-04-10T03:44:41Z",
    "updated_at": "2014-04-10T13:58:00Z",
    "closed_at": "2014-04-10T13:58:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "- Update Logo with a `4.0.0` version.\n- The first paragraph still mentions Express 4 Release Candidate. The final version as I understand was already released.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2036/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2036/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2035",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2035/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2035/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2035/events",
    "html_url": "https://github.com/expressjs/express/issues/2035",
    "id": 31210655,
    "node_id": "MDU6SXNzdWUzMTIxMDY1NQ==",
    "number": 2035,
    "title": "I use nodejs to test post request server api , but cant read req.body value",
    "user": {
      "login": "einsitang",
      "id": 1745525,
      "node_id": "MDQ6VXNlcjE3NDU1MjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1745525?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/einsitang",
      "html_url": "https://github.com/einsitang",
      "followers_url": "https://api.github.com/users/einsitang/followers",
      "following_url": "https://api.github.com/users/einsitang/following{/other_user}",
      "gists_url": "https://api.github.com/users/einsitang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/einsitang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/einsitang/subscriptions",
      "organizations_url": "https://api.github.com/users/einsitang/orgs",
      "repos_url": "https://api.github.com/users/einsitang/repos",
      "events_url": "https://api.github.com/users/einsitang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/einsitang/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-04-10T02:25:31Z",
    "updated_at": "2014-04-10T20:13:37Z",
    "closed_at": "2014-04-10T20:13:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I write a nodejs(client) use post method request other nodejs(server) api , send something params,but cant work , server part read req.body is {},\n\nbut I write C# use HttpClient post method can work .\n\nis a bug ? \n\nmy code : \n\n```\nvar http = require('http');\nvar data = require('querystring').stringify({\n         product : 'club',\n         sign : 'ddddddddddddddd',\n         sender: '发送者的名字:超级管理员',\n         uids : ['ffwq@qq.com', 'ffqwf@www.com'],\n         msg : 'wwww'\n}); \nvar req = http.request(options,function(serverFeedback){\n\n        //if(serverFeedback.statuscode == 200){\n            var body = '';\n            serverFeedback.on('data', function(chunk) {\n                body += chunk;\n            })\n\n            serverFeedback.on('end', function() {\n                console.log(new Date());\n                console.log('done....');\n                console.log(body);\n            });\n\n        //}else{\n            //console.log(serverFeedback);\n        //}\n\n    })\n\n    //console.log(data);\n    req.write(data);\n    req.end();\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2035/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2035/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2034",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2034/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2034/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2034/events",
    "html_url": "https://github.com/expressjs/express/issues/2034",
    "id": 31209488,
    "node_id": "MDU6SXNzdWUzMTIwOTQ4OA==",
    "number": 2034,
    "title": "Invalid regular expression in routing?",
    "user": {
      "login": "binarykitchen",
      "id": 177641,
      "node_id": "MDQ6VXNlcjE3NzY0MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/177641?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/binarykitchen",
      "html_url": "https://github.com/binarykitchen",
      "followers_url": "https://api.github.com/users/binarykitchen/followers",
      "following_url": "https://api.github.com/users/binarykitchen/following{/other_user}",
      "gists_url": "https://api.github.com/users/binarykitchen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/binarykitchen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/binarykitchen/subscriptions",
      "organizations_url": "https://api.github.com/users/binarykitchen/orgs",
      "repos_url": "https://api.github.com/users/binarykitchen/repos",
      "events_url": "https://api.github.com/users/binarykitchen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/binarykitchen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 14,
    "created_at": "2014-04-10T01:51:41Z",
    "updated_at": "2014-04-11T01:44:25Z",
    "closed_at": "2014-04-10T20:15:31Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In Express 3.0 this worked\n\n``` js\n    app.get('/video/:alias?/(category/:category)?/',\n        app.controllers.video.get\n    );\n```\n\nbut v4 throws this\n\n```\n01:43:18.517Z FATAL: Invalid regular expression: /^\\/video(?:\\/([^/]+?))?\\/(?(?:([^/]+?))\\/(?:([^/]+?)))?\\/\\/?$/: Invalid group\n    SyntaxError: Invalid regular expression: /^\\/video(?:\\/([^/]+?))?\\/(?(?:([^/]+?))\\/(?:([^/]+?)))?\\/\\/?$/: Invalid group\n        at new RegExp (<anonymous>)\n        at pathtoRegexp (xx/node_modules/express/node_modules/path-to-regexp/index.js:55:77)\n        at new Layer (xx/node_modules/express/lib/router/layer.js:21:17)\n        at proto.route (xx/node_modules/express/lib/router/index.js:364:15)\n        at app.(anonymous function) (xx/node_modules/express/lib/application.js:405:30)\n```\n\nYou didn't mention a change in the regex engine in the changelog so I really wonder that the issue is here ...\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2034/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2034/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2033",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2033/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2033/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2033/events",
    "html_url": "https://github.com/expressjs/express/issues/2033",
    "id": 31205015,
    "node_id": "MDU6SXNzdWUzMTIwNTAxNQ==",
    "number": 2033,
    "title": "4.x Documentation - Router initialization",
    "user": {
      "login": "boljen",
      "id": 4733114,
      "node_id": "MDQ6VXNlcjQ3MzMxMTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4733114?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/boljen",
      "html_url": "https://github.com/boljen",
      "followers_url": "https://api.github.com/users/boljen/followers",
      "following_url": "https://api.github.com/users/boljen/following{/other_user}",
      "gists_url": "https://api.github.com/users/boljen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/boljen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/boljen/subscriptions",
      "organizations_url": "https://api.github.com/users/boljen/orgs",
      "repos_url": "https://api.github.com/users/boljen/repos",
      "events_url": "https://api.github.com/users/boljen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/boljen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-04-09T23:54:58Z",
    "updated_at": "2014-04-10T00:37:05Z",
    "closed_at": "2014-04-10T00:37:05Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I don't know if this is the place to make a suggestion concerning the documentation, my apologies if it isn't. \n\nI realized my custom router didn't have strict routing enabled even though my application did. After looking at the express source code for 2 minutes combined with CTRL+F, I already found how to fix this. It took me a while before I went down that route though.\n\nMy suggestion is to add a _\"initialization parameters\"_ paragraph to the router-documentation as I see my exact scenario become quite a common issue, especially considering express 4 just went stable.\n\nCheers.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2033/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2033/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2032",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2032/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2032/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2032/events",
    "html_url": "https://github.com/expressjs/express/issues/2032",
    "id": 31072305,
    "node_id": "MDU6SXNzdWUzMTA3MjMwNQ==",
    "number": 2032,
    "title": "Express 4.0 Request not passed correctly to error handling?",
    "user": {
      "login": "gergelyke",
      "id": 2174968,
      "node_id": "MDQ6VXNlcjIxNzQ5Njg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2174968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gergelyke",
      "html_url": "https://github.com/gergelyke",
      "followers_url": "https://api.github.com/users/gergelyke/followers",
      "following_url": "https://api.github.com/users/gergelyke/following{/other_user}",
      "gists_url": "https://api.github.com/users/gergelyke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gergelyke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gergelyke/subscriptions",
      "organizations_url": "https://api.github.com/users/gergelyke/orgs",
      "repos_url": "https://api.github.com/users/gergelyke/repos",
      "events_url": "https://api.github.com/users/gergelyke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gergelyke/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-04-08T13:57:42Z",
    "updated_at": "2014-04-10T09:35:25Z",
    "closed_at": "2014-04-10T09:35:25Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am using a route like: \n\n```\napp.get '/products/:product_id'\n```\n\nwhich will populate  `req.params`, but if an error happens, and \n\n```\nnext (new Error(err));\n```\n\nis called then my error handler won't see the req.params object. What am I missing?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2032/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2032/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2031",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2031/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2031/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2031/events",
    "html_url": "https://github.com/expressjs/express/issues/2031",
    "id": 31068353,
    "node_id": "MDU6SXNzdWUzMTA2ODM1Mw==",
    "number": 2031,
    "title": "mp3 files not properly returned with Firefox's Accept header",
    "user": {
      "login": "michamil",
      "id": 1659857,
      "node_id": "MDQ6VXNlcjE2NTk4NTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1659857?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michamil",
      "html_url": "https://github.com/michamil",
      "followers_url": "https://api.github.com/users/michamil/followers",
      "following_url": "https://api.github.com/users/michamil/following{/other_user}",
      "gists_url": "https://api.github.com/users/michamil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michamil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michamil/subscriptions",
      "organizations_url": "https://api.github.com/users/michamil/orgs",
      "repos_url": "https://api.github.com/users/michamil/repos",
      "events_url": "https://api.github.com/users/michamil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michamil/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-04-08T13:05:24Z",
    "updated_at": "2014-04-09T12:07:34Z",
    "closed_at": "2014-04-09T02:25:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am using expressjs 3.4.2.  I am serving mp3s, which are being loaded by the client with an XHR (we are using the createjs lib for our media).  For certain mp3s, if the Accept header is not just right, expressjs is doing something (bad) to the data when it is served.  I have created an example page so you can watch this happen, but since it does not happen with all mp3s I am wondering what the best way is to get my test mp3 to you?  The text of the test page follows:\n\n```\n<!DOCTYPE html>\n<html>\n<head>\n    <title>expressjs Accepts MP3 test</title>\n    <meta charset=\"utf-8\">\n</head>\n<body>\n    <script>\n        var request = new XMLHttpRequest();\n        request.open(\"GET\", \"test_sound.mp3\", true);\n        request.responseType = \"arraybuffer\";\n\n        // with this line uncommented, the proper data is returned\n        //  the proper data length is 76067 bytes\n        //request.setRequestHeader(\"Accept\", \"audio/*\");\n\n        // with this line uncommented (and above commented), expressjs returns unusable data\n        //  it returns 137917 bytes of something strange\n        //  this is the Accepts header that firefox OSX 28 adds if we don't add one first\n        request.setRequestHeader(\"Accept\", \"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\");\n        request.send();\n    </script>\n</body>\n</html>\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2031/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2031/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2030",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2030/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2030/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2030/events",
    "html_url": "https://github.com/expressjs/express/issues/2030",
    "id": 31051501,
    "node_id": "MDU6SXNzdWUzMTA1MTUwMQ==",
    "number": 2030,
    "title": "What changes were made in 3.5.1?",
    "user": {
      "login": "ryandesign",
      "id": 429209,
      "node_id": "MDQ6VXNlcjQyOTIwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/429209?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryandesign",
      "html_url": "https://github.com/ryandesign",
      "followers_url": "https://api.github.com/users/ryandesign/followers",
      "following_url": "https://api.github.com/users/ryandesign/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryandesign/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryandesign/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryandesign/subscriptions",
      "organizations_url": "https://api.github.com/users/ryandesign/orgs",
      "repos_url": "https://api.github.com/users/ryandesign/repos",
      "events_url": "https://api.github.com/users/ryandesign/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryandesign/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-04-08T08:23:59Z",
    "updated_at": "2014-04-08T21:50:32Z",
    "closed_at": "2014-04-08T21:50:32Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I cannot find this version described in history.md, not even in the 3.x branch.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2030/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2030/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2029",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2029/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2029/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2029/events",
    "html_url": "https://github.com/expressjs/express/issues/2029",
    "id": 31048953,
    "node_id": "MDU6SXNzdWUzMTA0ODk1Mw==",
    "number": 2029,
    "title": "thrown error in Route not handled by error handler in route",
    "user": {
      "login": "hayeah",
      "id": 50120,
      "node_id": "MDQ6VXNlcjUwMTIw",
      "avatar_url": "https://avatars.githubusercontent.com/u/50120?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayeah",
      "html_url": "https://github.com/hayeah",
      "followers_url": "https://api.github.com/users/hayeah/followers",
      "following_url": "https://api.github.com/users/hayeah/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayeah/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayeah/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayeah/subscriptions",
      "organizations_url": "https://api.github.com/users/hayeah/orgs",
      "repos_url": "https://api.github.com/users/hayeah/repos",
      "events_url": "https://api.github.com/users/hayeah/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayeah/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-04-08T07:33:53Z",
    "updated_at": "2014-04-08T18:50:59Z",
    "closed_at": "2014-04-08T18:50:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "An error passed into `next` would be handled by error handler in route, but not a thrown error, because `Route#dispatch` doesn't invoke the handlers in a try/catch block:\n\n``` js\napp.get(\"/bar\",function(req,res,next) {\n  next(new Error(\"bar error\")) ;\n},function(err,req,res,next) {\n  // will handle errors generated within this route\n  res.end(\"handled bar\");\n});\n\napp.get(\"/baz\",function(req,res,next) {\n  throw new Error(\"baz error\");\n},function(err,req,res,next) {\n  // won't capture thrown error in route. kinda surprising?\n  res.end(\"handled baz\");\n});\n```\n\nIt's a little surprising. Is it intentional behaviour?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2029/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2029/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2028",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2028/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2028/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2028/events",
    "html_url": "https://github.com/expressjs/express/issues/2028",
    "id": 30989255,
    "node_id": "MDU6SXNzdWUzMDk4OTI1NQ==",
    "number": 2028,
    "title": "request parameter mismatch.",
    "user": {
      "login": "Sally-Xu",
      "id": 1042478,
      "node_id": "MDQ6VXNlcjEwNDI0Nzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1042478?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sally-Xu",
      "html_url": "https://github.com/Sally-Xu",
      "followers_url": "https://api.github.com/users/Sally-Xu/followers",
      "following_url": "https://api.github.com/users/Sally-Xu/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sally-Xu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sally-Xu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sally-Xu/subscriptions",
      "organizations_url": "https://api.github.com/users/Sally-Xu/orgs",
      "repos_url": "https://api.github.com/users/Sally-Xu/repos",
      "events_url": "https://api.github.com/users/Sally-Xu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sally-Xu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2014-04-07T14:33:51Z",
    "updated_at": "2014-05-01T02:33:02Z",
    "closed_at": "2014-05-01T02:33:02Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When I used wildcard in the path, the request parameter doesn't give me the correct value.\n\n I have the following code:\n\napp.get('*/api/user/:id', function (req, res) {\n    res.send('Hello from user ' + req.params.id);\n});\n\nI got the response:  \"Hello from user /nodetest\" when I send in a GET request as \"localhost:/nodetest/user/1\".  \n\nThe req.params.id didn't give me \"1\" which was what I expected. Instead it gave me \"/nodetest\" which is the root of my site.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2028/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2028/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2027",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2027/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2027/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2027/events",
    "html_url": "https://github.com/expressjs/express/issues/2027",
    "id": 30945351,
    "node_id": "MDU6SXNzdWUzMDk0NTM1MQ==",
    "number": 2027,
    "title": "4.x strict routing not enforced via .use()",
    "user": {
      "login": "sinejoe",
      "id": 494192,
      "node_id": "MDQ6VXNlcjQ5NDE5Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/494192?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinejoe",
      "html_url": "https://github.com/sinejoe",
      "followers_url": "https://api.github.com/users/sinejoe/followers",
      "following_url": "https://api.github.com/users/sinejoe/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinejoe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinejoe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinejoe/subscriptions",
      "organizations_url": "https://api.github.com/users/sinejoe/orgs",
      "repos_url": "https://api.github.com/users/sinejoe/repos",
      "events_url": "https://api.github.com/users/sinejoe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinejoe/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 8497,
        "node_id": "MDU6TGFiZWw4NDk3",
        "url": "https://api.github.com/repos/expressjs/express/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2014-04-06T20:05:59Z",
    "updated_at": "2015-04-06T17:06:39Z",
    "closed_at": "2014-04-11T12:40:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The new simpler syntax in 4.x for app.use to use a Router() object is cool and simpler, but the strict routing setting for the app doesn't seem to be enforced at this level with paths.\n\nThe code below for example results in a redirect loop because /dash and /dash/ are both being 301 redirected...\n\n```\nvar express = require('express'),\n    app = express();\n\napp.enable('strict routing');\napp.use('/dash', function(req, res) { res.redirect(301, '/dash/'); });\napp.use('/dash/', require('./routes').dashRoute);\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2027/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2027/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2026",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2026/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2026/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2026/events",
    "html_url": "https://github.com/expressjs/express/issues/2026",
    "id": 30930824,
    "node_id": "MDU6SXNzdWUzMDkzMDgyNA==",
    "number": 2026,
    "title": "running app in subdirectory",
    "user": {
      "login": "soliton4",
      "id": 1090629,
      "node_id": "MDQ6VXNlcjEwOTA2Mjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1090629?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soliton4",
      "html_url": "https://github.com/soliton4",
      "followers_url": "https://api.github.com/users/soliton4/followers",
      "following_url": "https://api.github.com/users/soliton4/following{/other_user}",
      "gists_url": "https://api.github.com/users/soliton4/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soliton4/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soliton4/subscriptions",
      "organizations_url": "https://api.github.com/users/soliton4/orgs",
      "repos_url": "https://api.github.com/users/soliton4/repos",
      "events_url": "https://api.github.com/users/soliton4/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soliton4/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-04-06T05:31:17Z",
    "updated_at": "2014-04-06T12:48:24Z",
    "closed_at": "2014-04-06T12:48:13Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "i am maintaining the app nodeMirror\nhttps://github.com/soliton4/nodeMirror\n\nand i am very happy with express so far.\ntons of options like bodyparser and cockieparser are used.\nthere is the option to run nodeMirror in a subdirectory, meaning it will only listen on a given path like www.mydomain.com/editor/\n\nthat runs very well. \n\nnow i want to add support for running nodeMirror not as stand alone app, but simply to add it to your existing express configuration.\nif you give a subdirectory and a existing express app in the constructor parameter, nodeMirror should just be added to your existing express configuration.\nthe problem is, i do not understand how potential global settings for cookie parsing & co that exist on the main app influence the nodeMirror setting.\ni need to have my own cookie to ensure proper interaction with socket.io\n\nwhat is the way to go? is there a tutorial for this?\n\nif you would be so kind to point me in the right direction that would be awesome.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2026/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2026/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2025",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2025/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2025/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2025/events",
    "html_url": "https://github.com/expressjs/express/pull/2025",
    "id": 30923478,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ0MTg1NjU=",
    "number": 2025,
    "title": "Use SVG badges in Readme",
    "user": {
      "login": "seanlinsley",
      "id": 688886,
      "node_id": "MDQ6VXNlcjY4ODg4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/688886?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seanlinsley",
      "html_url": "https://github.com/seanlinsley",
      "followers_url": "https://api.github.com/users/seanlinsley/followers",
      "following_url": "https://api.github.com/users/seanlinsley/following{/other_user}",
      "gists_url": "https://api.github.com/users/seanlinsley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seanlinsley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seanlinsley/subscriptions",
      "organizations_url": "https://api.github.com/users/seanlinsley/orgs",
      "repos_url": "https://api.github.com/users/seanlinsley/repos",
      "events_url": "https://api.github.com/users/seanlinsley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seanlinsley/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2014-04-05T20:36:09Z",
    "updated_at": "2014-06-12T06:03:58Z",
    "closed_at": "2014-04-05T21:08:09Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2025",
      "html_url": "https://github.com/expressjs/express/pull/2025",
      "diff_url": "https://github.com/expressjs/express/pull/2025.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2025.patch",
      "merged_at": "2014-04-05T21:08:09Z"
    },
    "body": ":sparkles: \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2025/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2025/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2024",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2024/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2024/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2024/events",
    "html_url": "https://github.com/expressjs/express/issues/2024",
    "id": 30807373,
    "node_id": "MDU6SXNzdWUzMDgwNzM3Mw==",
    "number": 2024,
    "title": "Terminated ECONNRESET connection leads to errors on res.sendfile",
    "user": {
      "login": "vtsukur",
      "id": 315491,
      "node_id": "MDQ6VXNlcjMxNTQ5MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/315491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vtsukur",
      "html_url": "https://github.com/vtsukur",
      "followers_url": "https://api.github.com/users/vtsukur/followers",
      "following_url": "https://api.github.com/users/vtsukur/following{/other_user}",
      "gists_url": "https://api.github.com/users/vtsukur/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vtsukur/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vtsukur/subscriptions",
      "organizations_url": "https://api.github.com/users/vtsukur/orgs",
      "repos_url": "https://api.github.com/users/vtsukur/repos",
      "events_url": "https://api.github.com/users/vtsukur/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vtsukur/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/8",
      "html_url": "https://github.com/expressjs/express/milestone/8",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/8/labels",
      "id": 639755,
      "node_id": "MDk6TWlsZXN0b25lNjM5NzU1",
      "number": 8,
      "title": "4.1.0",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 11,
      "state": "closed",
      "created_at": "2014-04-24T22:02:09Z",
      "updated_at": "2014-04-24T22:08:44Z",
      "due_on": null,
      "closed_at": "2014-04-24T22:08:44Z"
    },
    "comments": 5,
    "created_at": "2014-04-03T19:49:01Z",
    "updated_at": "2014-07-29T04:18:19Z",
    "closed_at": "2014-04-24T19:04:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "\"**Can't set headers after they are sent**\" error is pretty well known, but this time it looks like the root cause lies somewhere inside **express**. Let's see.\n\nProblem: **Node.js service crashes from time to time with the following stack trace**:\n\n```\nError: Can't set headers after they are sent.,\n     at ServerResponse.OutgoingMessage.setHeader (http.js:691:11),\n     at ServerResponse.res.setHeader (/myapp/node_modules/express/node_modules/connect/lib/patch.js:59:22),\n     at SendStream.setHeader (/myapp/node_modules/express/node_modules/send/lib/send.js:469:44),\n     at SendStream.send (/myapp/node_modules/express/node_modules/send/lib/send.js:345:8),\n     at /myapp/node_modules/express/node_modules/send/lib/send.js:323:10,\n     at Object.oncomplete (fs.js:107:15)]\n```\n\nInvestigation has shown that crashes happen when client terminates the connection to a specific endpoint (and not every client termination leads to such weird behavior). Here is the application routing rule which proved to be in the _erroneous_ path:\n\n```\n    app.get(/^\\/crossdomain.xml/, function(req, res) {\n        res.set({\n            'Content-Type': 'text/x-cross-domain-policy',\n            'Cache-Control': 'max-age=0, no-cache, must-revalidate',\n            'Connection': 'close',\n            'Pragma': 'no-cache',\n            'Expires': 'Wed, 11 Jan 1984 05:00:00 GMT'\n        });\n        res.sendfile('crossdomain/crossdomain.xml');\n    });\n```\n\n`res.sendfile` will actually call `SendStream.pipe` at certain point:\n\n```\nSendStream.prototype.pipe = function(res){\n  ...\n  fs.stat(path, function(err, stat){\n    if (err) return self.onStatError(err);\n    if (stat.isDirectory()) return self.redirect(self.path);\n    self.emit('file', path, stat);\n    self.send(path, stat);\n  });\n  ...\n};\n```\n\nAnd `self.send` will fail because it will see response in a incompatible state.\n\nCode snippets of the application (see above) demonstrate that there is no incompatible transformation of response states (trying to write **head** while being in the **body** or **finished** mode.\n\nHere is the middleware configuration of **express** application:\n\n```\n    app.use(express.bodyParser());\n    app.use(express.query());\n    app.use(app.router);\n    app.use(function (err, req, res, next) {\n        logger.error('Error handling %s:', methodAndUrl(req), err && err.stack ? err.stack : err);\n        next(err);\n    });\n```\n\nWhat the problem might be here? Looks like the application itself is not an issue and **express** behaves incorrectly.\n\n**express.js** version: 3.3.4\n**Node.js** version: 0.10.26\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2024/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2024/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2023",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2023/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2023/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2023/events",
    "html_url": "https://github.com/expressjs/express/issues/2023",
    "id": 30741983,
    "node_id": "MDU6SXNzdWUzMDc0MTk4Mw==",
    "number": 2023,
    "title": "How is express.js related to connect.js",
    "user": {
      "login": "MOZGIII",
      "id": 265507,
      "node_id": "MDQ6VXNlcjI2NTUwNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/265507?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MOZGIII",
      "html_url": "https://github.com/MOZGIII",
      "followers_url": "https://api.github.com/users/MOZGIII/followers",
      "following_url": "https://api.github.com/users/MOZGIII/following{/other_user}",
      "gists_url": "https://api.github.com/users/MOZGIII/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MOZGIII/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MOZGIII/subscriptions",
      "organizations_url": "https://api.github.com/users/MOZGIII/orgs",
      "repos_url": "https://api.github.com/users/MOZGIII/repos",
      "events_url": "https://api.github.com/users/MOZGIII/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MOZGIII/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2014-04-03T02:22:54Z",
    "updated_at": "2014-04-04T13:42:05Z",
    "closed_at": "2014-04-03T02:32:01Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello, I'm new to Node.js and I'm confused about how express.js relates to connect.js. Practically, it seems like in the past express.js had connect as a dependency, but not anymore as it seem. Therefore, it's not quite clear what is the state of both projects to each other. Seems like before it was like connect used to provide a usefull set of middlewares and \"middleware interface\" of some sort, that express was using whereas express used to provide some architectural shugar on top of all that. Now it seems like express extracted all middlewares it used to rely on to separate repos and removed all connect.js-dependent code.\nSo, does that mean that all mentions to connect.js as express.js dependency are out of date (like [here](https://github.com/senchalabs/connect/wiki))?\nAnd can I somehow use connect.js middlewares inside of express.js since it seem to have a wide variety of them.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2023/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2023/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2022",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2022/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2022/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2022/events",
    "html_url": "https://github.com/expressjs/express/issues/2022",
    "id": 30735562,
    "node_id": "MDU6SXNzdWUzMDczNTU2Mg==",
    "number": 2022,
    "title": "about view cache",
    "user": {
      "login": "seonpiao",
      "id": 4477794,
      "node_id": "MDQ6VXNlcjQ0Nzc3OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4477794?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seonpiao",
      "html_url": "https://github.com/seonpiao",
      "followers_url": "https://api.github.com/users/seonpiao/followers",
      "following_url": "https://api.github.com/users/seonpiao/following{/other_user}",
      "gists_url": "https://api.github.com/users/seonpiao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seonpiao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seonpiao/subscriptions",
      "organizations_url": "https://api.github.com/users/seonpiao/orgs",
      "repos_url": "https://api.github.com/users/seonpiao/repos",
      "events_url": "https://api.github.com/users/seonpiao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seonpiao/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-04-02T23:39:31Z",
    "updated_at": "2014-04-03T02:33:03Z",
    "closed_at": "2014-04-03T02:33:03Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "why \"view cache\" does not use the full path of view files as the cache key?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2022/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2022/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2021",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2021/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2021/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2021/events",
    "html_url": "https://github.com/expressjs/express/issues/2021",
    "id": 30724174,
    "node_id": "MDU6SXNzdWUzMDcyNDE3NA==",
    "number": 2021,
    "title": "Is there an issue with domains?",
    "user": {
      "login": "rook2pawn",
      "id": 176303,
      "node_id": "MDQ6VXNlcjE3NjMwMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/176303?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rook2pawn",
      "html_url": "https://github.com/rook2pawn",
      "followers_url": "https://api.github.com/users/rook2pawn/followers",
      "following_url": "https://api.github.com/users/rook2pawn/following{/other_user}",
      "gists_url": "https://api.github.com/users/rook2pawn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rook2pawn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rook2pawn/subscriptions",
      "organizations_url": "https://api.github.com/users/rook2pawn/orgs",
      "repos_url": "https://api.github.com/users/rook2pawn/repos",
      "events_url": "https://api.github.com/users/rook2pawn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rook2pawn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-04-02T20:52:22Z",
    "updated_at": "2014-04-02T22:32:48Z",
    "closed_at": "2014-04-02T20:55:04Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "https://github.com/rook2pawn/express-domains-issue\n\nI created the above repository to illustrate a potential issue with errors not being caught in domains. I think this may be due to the way middleware is being added to emitters after domains are bound; \n\nI am looking for any comments or thoughts regarding Express and Domain Error handling.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2021/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2021/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2020",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2020/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2020/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2020/events",
    "html_url": "https://github.com/expressjs/express/issues/2020",
    "id": 30663031,
    "node_id": "MDU6SXNzdWUzMDY2MzAzMQ==",
    "number": 2020,
    "title": "getting error in installation of express module...any1 can help?",
    "user": {
      "login": "shailendra9",
      "id": 1866381,
      "node_id": "MDQ6VXNlcjE4NjYzODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1866381?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shailendra9",
      "html_url": "https://github.com/shailendra9",
      "followers_url": "https://api.github.com/users/shailendra9/followers",
      "following_url": "https://api.github.com/users/shailendra9/following{/other_user}",
      "gists_url": "https://api.github.com/users/shailendra9/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shailendra9/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shailendra9/subscriptions",
      "organizations_url": "https://api.github.com/users/shailendra9/orgs",
      "repos_url": "https://api.github.com/users/shailendra9/repos",
      "events_url": "https://api.github.com/users/shailendra9/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shailendra9/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-04-02T06:44:52Z",
    "updated_at": "2014-04-02T07:29:56Z",
    "closed_at": "2014-04-02T06:58:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "sudo npm install express\nnpm http GET https://registry.npmjs.org/express\nnpm ERR! Error: failed to fetch from registry: express\nnpm ERR!     at /usr/share/npm/lib/utils/npm-registry-client/get.js:139:12\nnpm ERR!     at cb (/usr/share/npm/lib/utils/npm-registry-client/request.js:31:9)\nnpm ERR!     at Request._callback (/usr/share/npm/lib/utils/npm-registry-client/request.js:136:18)\nnpm ERR!     at Request.callback (/usr/lib/nodejs/request/main.js:119:22)\nnpm ERR!     at Request.<anonymous> (/usr/lib/nodejs/request/main.js:212:58)\nnpm ERR!     at Request.emit (events.js:88:20)\nnpm ERR!     at ClientRequest.<anonymous> (/usr/lib/nodejs/request/main.js:412:12)\nnpm ERR!     at ClientRequest.emit (events.js:67:17)\nnpm ERR!     at HTTPParser.onIncoming (http.js:1261:11)\nnpm ERR!     at HTTPParser.onHeadersComplete (http.js:102:31)\nnpm ERR! You may report this log at:\nnpm ERR!     http://bugs.debian.org/npm\nnpm ERR! or use\nnpm ERR!     reportbug --attach /home/shailendra/npm-debug.log npm\nnpm ERR! \nnpm ERR! System Linux 3.8.0-37-generic\nnpm ERR! command \"node\" \"/usr/bin/npm\" \"install\" \"express\"\nnpm ERR! cwd /home/shailendra\nnpm ERR! node -v v0.6.12\nnpm ERR! npm -v 1.1.4\nnpm ERR! message failed to fetch from registry: express\nnpm ERR! \nnpm ERR! Additional logging details can be found in:\nnpm ERR!     /home/shailendra/npm-debug.log\nnpm not ok\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2020/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2020/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2019",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2019/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2019/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2019/events",
    "html_url": "https://github.com/expressjs/express/pull/2019",
    "id": 30615474,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTQyMzY5OTQ=",
    "number": 2019,
    "title": "Send \"hidden\" option to send library",
    "user": {
      "login": "btleffler",
      "id": 665794,
      "node_id": "MDQ6VXNlcjY2NTc5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/665794?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/btleffler",
      "html_url": "https://github.com/btleffler",
      "followers_url": "https://api.github.com/users/btleffler/followers",
      "following_url": "https://api.github.com/users/btleffler/following{/other_user}",
      "gists_url": "https://api.github.com/users/btleffler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/btleffler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/btleffler/subscriptions",
      "organizations_url": "https://api.github.com/users/btleffler/orgs",
      "repos_url": "https://api.github.com/users/btleffler/repos",
      "events_url": "https://api.github.com/users/btleffler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/btleffler/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/8",
      "html_url": "https://github.com/expressjs/express/milestone/8",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/8/labels",
      "id": 639755,
      "node_id": "MDk6TWlsZXN0b25lNjM5NzU1",
      "number": 8,
      "title": "4.1.0",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 11,
      "state": "closed",
      "created_at": "2014-04-24T22:02:09Z",
      "updated_at": "2014-04-24T22:08:44Z",
      "due_on": null,
      "closed_at": "2014-04-24T22:08:44Z"
    },
    "comments": 5,
    "created_at": "2014-04-01T16:36:04Z",
    "updated_at": "2014-09-17T15:17:57Z",
    "closed_at": "2014-04-24T21:32:40Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2019",
      "html_url": "https://github.com/expressjs/express/pull/2019",
      "diff_url": "https://github.com/expressjs/express/pull/2019.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2019.patch",
      "merged_at": null
    },
    "body": "Simply exposes some of the API that's [already built into](https://github.com/visionmedia/send#hiddenbool) `send`.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2019/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2019/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2018",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2018/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2018/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2018/events",
    "html_url": "https://github.com/expressjs/express/pull/2018",
    "id": 30548378,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTQxOTcwNjk=",
    "number": 2018,
    "title": "This example does not work with express 4.x.",
    "user": {
      "login": "Devrama",
      "id": 5025118,
      "node_id": "MDQ6VXNlcjUwMjUxMTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5025118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Devrama",
      "html_url": "https://github.com/Devrama",
      "followers_url": "https://api.github.com/users/Devrama/followers",
      "following_url": "https://api.github.com/users/Devrama/following{/other_user}",
      "gists_url": "https://api.github.com/users/Devrama/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Devrama/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Devrama/subscriptions",
      "organizations_url": "https://api.github.com/users/Devrama/orgs",
      "repos_url": "https://api.github.com/users/Devrama/repos",
      "events_url": "https://api.github.com/users/Devrama/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Devrama/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2014-03-31T20:52:53Z",
    "updated_at": "2014-06-12T06:03:57Z",
    "closed_at": "2014-04-01T00:09:15Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2018",
      "html_url": "https://github.com/expressjs/express/pull/2018",
      "diff_url": "https://github.com/expressjs/express/pull/2018.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2018.patch",
      "merged_at": "2014-04-01T00:09:15Z"
    },
    "body": "This example does not work with express 4.x.\nbodyParser() does not have multipart() anymore.\nMultiparty module and middleware are added.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2018/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2018/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2017",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2017/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2017/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2017/events",
    "html_url": "https://github.com/expressjs/express/issues/2017",
    "id": 30547413,
    "node_id": "MDU6SXNzdWUzMDU0NzQxMw==",
    "number": 2017,
    "title": "response.sendFile() send \"hidden\" files",
    "user": {
      "login": "btleffler",
      "id": 665794,
      "node_id": "MDQ6VXNlcjY2NTc5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/665794?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/btleffler",
      "html_url": "https://github.com/btleffler",
      "followers_url": "https://api.github.com/users/btleffler/followers",
      "following_url": "https://api.github.com/users/btleffler/following{/other_user}",
      "gists_url": "https://api.github.com/users/btleffler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/btleffler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/btleffler/subscriptions",
      "organizations_url": "https://api.github.com/users/btleffler/orgs",
      "repos_url": "https://api.github.com/users/btleffler/repos",
      "events_url": "https://api.github.com/users/btleffler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/btleffler/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 88345,
        "node_id": "MDU6TGFiZWw4ODM0NQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/3.x",
        "name": "3.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/8",
      "html_url": "https://github.com/expressjs/express/milestone/8",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/8/labels",
      "id": 639755,
      "node_id": "MDk6TWlsZXN0b25lNjM5NzU1",
      "number": 8,
      "title": "4.1.0",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 11,
      "state": "closed",
      "created_at": "2014-04-24T22:02:09Z",
      "updated_at": "2014-04-24T22:08:44Z",
      "due_on": null,
      "closed_at": "2014-04-24T22:08:44Z"
    },
    "comments": 9,
    "created_at": "2014-03-31T20:41:11Z",
    "updated_at": "2014-07-23T04:08:37Z",
    "closed_at": "2014-04-01T16:36:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "https://github.com/visionmedia/send/blob/master/lib/send.js#L85\n\nWhat is the \"correct\" way to toggle the sending of hidden files in an Express application? I see there is an API for the send library, but I don't see any way to access the .hidden method when it's used in Express.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2017/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2017/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2016",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2016/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2016/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2016/events",
    "html_url": "https://github.com/expressjs/express/issues/2016",
    "id": 30523760,
    "node_id": "MDU6SXNzdWUzMDUyMzc2MA==",
    "number": 2016,
    "title": "res.format error is not catchable by Router error middleware",
    "user": {
      "login": "pgn-vole",
      "id": 2323627,
      "node_id": "MDQ6VXNlcjIzMjM2Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2323627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pgn-vole",
      "html_url": "https://github.com/pgn-vole",
      "followers_url": "https://api.github.com/users/pgn-vole/followers",
      "following_url": "https://api.github.com/users/pgn-vole/following{/other_user}",
      "gists_url": "https://api.github.com/users/pgn-vole/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pgn-vole/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pgn-vole/subscriptions",
      "organizations_url": "https://api.github.com/users/pgn-vole/orgs",
      "repos_url": "https://api.github.com/users/pgn-vole/repos",
      "events_url": "https://api.github.com/users/pgn-vole/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pgn-vole/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 8497,
        "node_id": "MDU6TGFiZWw4NDk3",
        "url": "https://api.github.com/repos/expressjs/express/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/9",
      "html_url": "https://github.com/expressjs/express/milestone/9",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/9/labels",
      "id": 648502,
      "node_id": "MDk6TWlsZXN0b25lNjQ4NTAy",
      "number": 9,
      "title": "4.2.0",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 5,
      "state": "closed",
      "created_at": "2014-05-04T17:42:39Z",
      "updated_at": "2014-05-13T03:25:41Z",
      "due_on": null,
      "closed_at": "2014-05-13T03:25:41Z"
    },
    "comments": 13,
    "created_at": "2014-03-31T15:50:12Z",
    "updated_at": "2014-05-11T12:16:04Z",
    "closed_at": "2014-05-09T20:53:55Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi, \nIs it an expected behavior to not be able to catch `res.format` error when used inside a Router route handler?\n\nExample code\n\n``` javascript\nvar app = express()\n  , router = express.Router()\n\nrouter.get('/', function(req, res){\n  res.format({\n     json : function() { res.send(200) }\n  })\n})\nrouter.use(function(err, req, res, next) {\n  // We should get a Not Acceptable error here if requesting with a wrong accept header\n  next()\n})\napp.use(router).listen(3000)\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2016/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2016/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2015",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2015/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2015/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2015/events",
    "html_url": "https://github.com/expressjs/express/issues/2015",
    "id": 30486051,
    "node_id": "MDU6SXNzdWUzMDQ4NjA1MQ==",
    "number": 2015,
    "title": "my router is too lazy",
    "user": {
      "login": "rlidwka",
      "id": 999113,
      "node_id": "MDQ6VXNlcjk5OTExMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/999113?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rlidwka",
      "html_url": "https://github.com/rlidwka",
      "followers_url": "https://api.github.com/users/rlidwka/followers",
      "following_url": "https://api.github.com/users/rlidwka/following{/other_user}",
      "gists_url": "https://api.github.com/users/rlidwka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rlidwka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rlidwka/subscriptions",
      "organizations_url": "https://api.github.com/users/rlidwka/orgs",
      "repos_url": "https://api.github.com/users/rlidwka/repos",
      "events_url": "https://api.github.com/users/rlidwka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rlidwka/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2014-03-31T05:24:25Z",
    "updated_at": "2014-06-02T13:15:02Z",
    "closed_at": "2014-04-07T13:57:19Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Apparently, router is loaded when first route is created. It creates a funny edge case:\n\n``` js\nvar app = require('express')()\napp.listen(1337)\n```\n\n```\n/tmp/express/lib/application.js:119\n  this._router.handle(req, res, function(err) {\n               ^\nTypeError: Cannot call method 'handle' of undefined\n    at Function.app.handle (/tmp/express/lib/application.js:119:16)\n    at Server.app (/tmp/express/lib/express.js:28:9)\n    at Server.EventEmitter.emit (events.js:98:17)\n    at HTTPParser.parser.onIncoming (http.js:2108:12)\n    at HTTPParser.parserOnHeadersComplete [as onHeadersComplete] (http.js:121:23)\n    at Socket.socket.ondata (http.js:1966:22)\n    at TCP.onread (net.js:525:27)\n```\n\nPS: I want an award for simplest reproducible test case ever :P\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2015/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2015/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2014",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2014/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2014/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2014/events",
    "html_url": "https://github.com/expressjs/express/issues/2014",
    "id": 30436626,
    "node_id": "MDU6SXNzdWUzMDQzNjYyNg==",
    "number": 2014,
    "title": "typo in application.js comment?",
    "user": {
      "login": "ycdesu",
      "id": 1477617,
      "node_id": "MDQ6VXNlcjE0Nzc2MTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1477617?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ycdesu",
      "html_url": "https://github.com/ycdesu",
      "followers_url": "https://api.github.com/users/ycdesu/followers",
      "following_url": "https://api.github.com/users/ycdesu/following{/other_user}",
      "gists_url": "https://api.github.com/users/ycdesu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ycdesu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ycdesu/subscriptions",
      "organizations_url": "https://api.github.com/users/ycdesu/orgs",
      "repos_url": "https://api.github.com/users/ycdesu/repos",
      "events_url": "https://api.github.com/users/ycdesu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ycdesu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-03-29T03:47:45Z",
    "updated_at": "2014-03-29T05:56:50Z",
    "closed_at": "2014-03-29T05:56:50Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Is it a typo at [the 293 line of application.js](https://github.com/visionmedia/express/blob/4.0.0-rc4/lib/application.js#L293) in 4.0.0-rc4? Should it be `app.set('foo');` instead of `app.get('foo');`? Thanks.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2014/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2014/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2013",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2013/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2013/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2013/events",
    "html_url": "https://github.com/expressjs/express/pull/2013",
    "id": 30382556,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTQxMDYxNjM=",
    "number": 2013,
    "title": "Tell me what I'm using that isn't allowed",
    "user": {
      "login": "kentcdodds",
      "id": 1500684,
      "node_id": "MDQ6VXNlcjE1MDA2ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kentcdodds",
      "html_url": "https://github.com/kentcdodds",
      "followers_url": "https://api.github.com/users/kentcdodds/followers",
      "following_url": "https://api.github.com/users/kentcdodds/following{/other_user}",
      "gists_url": "https://api.github.com/users/kentcdodds/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kentcdodds/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kentcdodds/subscriptions",
      "organizations_url": "https://api.github.com/users/kentcdodds/orgs",
      "repos_url": "https://api.github.com/users/kentcdodds/repos",
      "events_url": "https://api.github.com/users/kentcdodds/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kentcdodds/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-03-28T12:19:32Z",
    "updated_at": "2017-07-07T22:19:24Z",
    "closed_at": "2014-03-29T05:57:03Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2013",
      "html_url": "https://github.com/expressjs/express/pull/2013",
      "diff_url": "https://github.com/expressjs/express/pull/2013.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2013.patch",
      "merged_at": "2014-03-29T05:57:03Z"
    },
    "body": "I'm migrating and it would be useful in a large application to know what I'm using that's not allowed. I think lots of people would feel this way. Let me know if you would prefer a different implementation.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2013/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2013/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2012",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2012/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2012/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2012/events",
    "html_url": "https://github.com/expressjs/express/issues/2012",
    "id": 30352542,
    "node_id": "MDU6SXNzdWUzMDM1MjU0Mg==",
    "number": 2012,
    "title": "4.0 chainable .route('/library').route('/books')",
    "user": {
      "login": "danschumann",
      "id": 1516973,
      "node_id": "MDQ6VXNlcjE1MTY5NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1516973?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danschumann",
      "html_url": "https://github.com/danschumann",
      "followers_url": "https://api.github.com/users/danschumann/followers",
      "following_url": "https://api.github.com/users/danschumann/following{/other_user}",
      "gists_url": "https://api.github.com/users/danschumann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danschumann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danschumann/subscriptions",
      "organizations_url": "https://api.github.com/users/danschumann/orgs",
      "repos_url": "https://api.github.com/users/danschumann/repos",
      "events_url": "https://api.github.com/users/danschumann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danschumann/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-03-27T23:39:51Z",
    "updated_at": "2014-03-27T23:42:56Z",
    "closed_at": "2014-03-27T23:40:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello,\n\nIs the subject already possible?  I think jquery has a fairly good syntax for chaining and then using `.end()` to go up the chain.  The following use case should hopefully work:\n\n```\napp\n\n  .route('/library')\n    .all(middleware.auth.hasLibraryCard)\n      .route('/books')\n        .get(controllers.books.index)\n\n        .get('/:book_id', controllers.books.show) // is this still possible?\n\n        .route('/overdue') // or is it like this?\n          .get(controllers.overdueBooks.index)\n          .post(controllers.overdueBooks.create)\n          .end() // this would be nice to help in chaining\n\n        .post(controllers.books.create)\n        .end() \n\n      .route('/shelves')\n        .route('/:shelf_id')\n          .all(middleware.loadShelf)\n          .get(controllers.shelves.show)\n          .post(controllers.shelves.update)\n          .end()\n        .end()\n      .end()\n    .end()\n\n  .route('fire_station')\n    // etc....\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2012/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2012/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2011",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2011/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2011/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2011/events",
    "html_url": "https://github.com/expressjs/express/pull/2011",
    "id": 30305194,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTQwNjA3NjQ=",
    "number": 2011,
    "title": "req.send() should be a 204, not a 200",
    "user": {
      "login": "bluehallu",
      "id": 1838241,
      "node_id": "MDQ6VXNlcjE4MzgyNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1838241?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bluehallu",
      "html_url": "https://github.com/bluehallu",
      "followers_url": "https://api.github.com/users/bluehallu/followers",
      "following_url": "https://api.github.com/users/bluehallu/following{/other_user}",
      "gists_url": "https://api.github.com/users/bluehallu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bluehallu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bluehallu/subscriptions",
      "organizations_url": "https://api.github.com/users/bluehallu/orgs",
      "repos_url": "https://api.github.com/users/bluehallu/repos",
      "events_url": "https://api.github.com/users/bluehallu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bluehallu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 14,
    "created_at": "2014-03-27T14:33:47Z",
    "updated_at": "2014-03-28T12:50:56Z",
    "closed_at": "2014-03-27T14:58:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2011",
      "html_url": "https://github.com/expressjs/express/pull/2011",
      "diff_url": "https://github.com/expressjs/express/pull/2011.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2011.patch",
      "merged_at": null
    },
    "body": "According to the RFC, a 204 is a 200 without body, so it only makes sense to send it if send() is called without arguments.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2011/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2011/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2010",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2010/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2010/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2010/events",
    "html_url": "https://github.com/expressjs/express/issues/2010",
    "id": 30298233,
    "node_id": "MDU6SXNzdWUzMDI5ODIzMw==",
    "number": 2010,
    "title": "app.locals fails",
    "user": {
      "login": "claydiffrient",
      "id": 606262,
      "node_id": "MDQ6VXNlcjYwNjI2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/606262?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/claydiffrient",
      "html_url": "https://github.com/claydiffrient",
      "followers_url": "https://api.github.com/users/claydiffrient/followers",
      "following_url": "https://api.github.com/users/claydiffrient/following{/other_user}",
      "gists_url": "https://api.github.com/users/claydiffrient/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/claydiffrient/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/claydiffrient/subscriptions",
      "organizations_url": "https://api.github.com/users/claydiffrient/orgs",
      "repos_url": "https://api.github.com/users/claydiffrient/repos",
      "events_url": "https://api.github.com/users/claydiffrient/events{/privacy}",
      "received_events_url": "https://api.github.com/users/claydiffrient/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2014-03-27T13:08:44Z",
    "updated_at": "2014-05-11T18:27:39Z",
    "closed_at": "2014-03-27T13:18:35Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm using Express 4.0.0-rc4 and trying to do the following:\n\n``` js\nvar app = express();\napp.locals({\n   testing: true,\n   appTitle: \"Cool App\"\n});\n```\n\nEach time that I do that I get an error that says:\n\n``` js\nTypeError: Property 'locals' of object function (req, res, next) {\n    app.handle(req, res, next);\n  } is not a function\n```\n\nMy current workaround is to do this:\n\n``` js\napp.locals.testing = true;\napp.locals.appTitle = \"Cool App\"\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2010/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2010/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2009",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2009/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2009/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2009/events",
    "html_url": "https://github.com/expressjs/express/issues/2009",
    "id": 30287897,
    "node_id": "MDU6SXNzdWUzMDI4Nzg5Nw==",
    "number": 2009,
    "title": "Amazon Elastic Beanstalk => Error: Cannot find module 'serve-static'",
    "user": {
      "login": "deerawan",
      "id": 1243921,
      "node_id": "MDQ6VXNlcjEyNDM5MjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1243921?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deerawan",
      "html_url": "https://github.com/deerawan",
      "followers_url": "https://api.github.com/users/deerawan/followers",
      "following_url": "https://api.github.com/users/deerawan/following{/other_user}",
      "gists_url": "https://api.github.com/users/deerawan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deerawan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deerawan/subscriptions",
      "organizations_url": "https://api.github.com/users/deerawan/orgs",
      "repos_url": "https://api.github.com/users/deerawan/repos",
      "events_url": "https://api.github.com/users/deerawan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deerawan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-03-27T10:21:03Z",
    "updated_at": "2014-03-27T13:18:05Z",
    "closed_at": "2014-03-27T13:17:50Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello everyone, \n\nI tried to deploy my express node js app into Amazon Elastic Beanstalk but I got this error below. I don't know why it is happened. In my local development (using ubuntu vagrant) no problem at all. \n\n```\nError: Cannot find module 'serve-static'\n    at Function.Module._resolveFilename (module.js:338:15)\n    at Function.Module._load (module.js:280:25)\n    at Module.require (module.js:362:17)\n    at require (module.js:378:17)\n    at Object.<anonymous> (/var/app/current/node_modules/express/node_modules/connect/lib/middleware/static.js:19:18)\n    at Module._compile (module.js:449:26)\n    at Object.Module._extensions..js (module.js:467:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Module.require (module.js:362:17)\n```\n\nThen I saw static.js file and the content of file is just like this\n\n```\n/*!\n * Connect - static\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n\n/**\n * Static:\n *\n * See [serve-static](https://github.com/expressjs/serve-static)\n *\n * @param {String} root\n * @param {Object} options\n * @return {Function}\n * @api public\n */\n\nmodule.exports = require('serve-static');\n```\n\nMy package.json\n\n```\n{\n  \"name\": \"mabok darat\",\n  \"description\": \"Mabok Darat\",\n  \"author\": \"Bang Toyib\",\n  \"version\": \"v1.0\",\n  \"private\": true,\n  \"dependencies\": {\n    \"express\": \"3.x\",\n    \"socket.io\": \"0.9.6\",\n    \"mysql\": \"2.0.1\",\n    \"cron\": \"1.0.0\",\n    \"time\": \"0.9.2\",\n    \"apn\": \"1.4.4\",\n    \"node-gcm\": \"0.9.9\",\n    \"bunyan\": \"~0.22.1\",\n    \"async\": \"~0.2.10\"\n  },\n  \"engine\": {\n    \"node\": \"node 0.8.21\"\n  }\n}\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2009/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2009/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2008",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2008/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2008/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2008/events",
    "html_url": "https://github.com/expressjs/express/pull/2008",
    "id": 30267975,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTQwMzkzNTM=",
    "number": 2008,
    "title": "some code clean up",
    "user": {
      "login": "agchou",
      "id": 1366142,
      "node_id": "MDQ6VXNlcjEzNjYxNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1366142?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/agchou",
      "html_url": "https://github.com/agchou",
      "followers_url": "https://api.github.com/users/agchou/followers",
      "following_url": "https://api.github.com/users/agchou/following{/other_user}",
      "gists_url": "https://api.github.com/users/agchou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/agchou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agchou/subscriptions",
      "organizations_url": "https://api.github.com/users/agchou/orgs",
      "repos_url": "https://api.github.com/users/agchou/repos",
      "events_url": "https://api.github.com/users/agchou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/agchou/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2014-03-27T01:56:00Z",
    "updated_at": "2014-06-12T06:03:50Z",
    "closed_at": "2014-03-27T22:22:49Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2008",
      "html_url": "https://github.com/expressjs/express/pull/2008",
      "diff_url": "https://github.com/expressjs/express/pull/2008.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2008.patch",
      "merged_at": "2014-03-27T22:22:49Z"
    },
    "body": "Changed from single var to multiple var declaration and fixed some semi-colons for some examples. Will run through others later.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2008/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2008/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2007",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2007/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2007/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2007/events",
    "html_url": "https://github.com/expressjs/express/issues/2007",
    "id": 30225725,
    "node_id": "MDU6SXNzdWUzMDIyNTcyNQ==",
    "number": 2007,
    "title": "express-common for middleware",
    "user": {
      "login": "bodokaiser",
      "id": 1780466,
      "node_id": "MDQ6VXNlcjE3ODA0NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1780466?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bodokaiser",
      "html_url": "https://github.com/bodokaiser",
      "followers_url": "https://api.github.com/users/bodokaiser/followers",
      "following_url": "https://api.github.com/users/bodokaiser/following{/other_user}",
      "gists_url": "https://api.github.com/users/bodokaiser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bodokaiser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bodokaiser/subscriptions",
      "organizations_url": "https://api.github.com/users/bodokaiser/orgs",
      "repos_url": "https://api.github.com/users/bodokaiser/repos",
      "events_url": "https://api.github.com/users/bodokaiser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bodokaiser/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2014-03-26T16:09:59Z",
    "updated_at": "2014-03-26T21:57:46Z",
    "closed_at": "2014-03-26T16:16:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I would like to avoid the ugly dependencies `basic-auth-connect` bla bla when moving to 4.0.\n\nIs there a plan to publish a `express-common` package as there is a `koa-common` package?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2007/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2007/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2006",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2006/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2006/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2006/events",
    "html_url": "https://github.com/expressjs/express/issues/2006",
    "id": 30196273,
    "node_id": "MDU6SXNzdWUzMDE5NjI3Mw==",
    "number": 2006,
    "title": "app.param(param, callback) not fired for ?param=...",
    "user": {
      "login": "adamhavel",
      "id": 2836193,
      "node_id": "MDQ6VXNlcjI4MzYxOTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2836193?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamhavel",
      "html_url": "https://github.com/adamhavel",
      "followers_url": "https://api.github.com/users/adamhavel/followers",
      "following_url": "https://api.github.com/users/adamhavel/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamhavel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamhavel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamhavel/subscriptions",
      "organizations_url": "https://api.github.com/users/adamhavel/orgs",
      "repos_url": "https://api.github.com/users/adamhavel/repos",
      "events_url": "https://api.github.com/users/adamhavel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamhavel/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-03-26T09:33:08Z",
    "updated_at": "2014-03-26T10:30:42Z",
    "closed_at": "2014-03-26T10:30:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm trying to use the app.param() feature like this:\n\n``` javascript\napp.route('/blueprints/:subject?/:date?/:lang?')\n      .get(blueprints.query);\n\napp.param('subject', blueprints.filterBySubject);\napp.param('date', blueprints.filterByDate);\napp.param('lang', blueprints.filterByLang);\n```\n\nIt works for /blueprints/abc/2014-02-02/en but doesn't fire when using /blueprints?subject=abc&date=2014-02-02&lang=en.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2006/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2006/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2005",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2005/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2005/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2005/events",
    "html_url": "https://github.com/expressjs/express/issues/2005",
    "id": 30108570,
    "node_id": "MDU6SXNzdWUzMDEwODU3MA==",
    "number": 2005,
    "title": "less-middleware 2 ",
    "user": {
      "login": "colby-swandale",
      "id": 996377,
      "node_id": "MDQ6VXNlcjk5NjM3Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/996377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/colby-swandale",
      "html_url": "https://github.com/colby-swandale",
      "followers_url": "https://api.github.com/users/colby-swandale/followers",
      "following_url": "https://api.github.com/users/colby-swandale/following{/other_user}",
      "gists_url": "https://api.github.com/users/colby-swandale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/colby-swandale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/colby-swandale/subscriptions",
      "organizations_url": "https://api.github.com/users/colby-swandale/orgs",
      "repos_url": "https://api.github.com/users/colby-swandale/repos",
      "events_url": "https://api.github.com/users/colby-swandale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/colby-swandale/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-03-25T09:41:45Z",
    "updated_at": "2014-03-25T09:50:25Z",
    "closed_at": "2014-03-25T09:43:07Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "the guys over at https://github.com/emberfeather/less.js-middleware have published version 2 of less-middleware which appears to not be compatible with express stable.\n\n```\n/Users/colby/Desktop/honeybird/node_modules/less-middleware/lib/middleware.js:50\n    throw new Error('Please update your less-middleware usage: http://goo.gl/Y\n          ^\nError: Please update your less-middleware usage: http://goo.gl/YnK8p0\n    at module.exports.less.middleware (/Users/colby/Desktop/honeybird/node_modules/less-middleware/lib/middleware.js:50:11)\n    at Object.<anonymous> (/Users/colby/Desktop/honeybird/app.js:21:35)\n    at Module._compile (module.js:456:26)\n    at Object.Module._extensions..js (module.js:474:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Function.Module.runMain (module.js:497:10)\n    at startup (node.js:119:16)\n    at node.js:902:3\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2005/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2005/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2004",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2004/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2004/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2004/events",
    "html_url": "https://github.com/expressjs/express/pull/2004",
    "id": 30105137,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTM5NDE0NzA=",
    "number": 2004,
    "title": "some code clean up",
    "user": {
      "login": "agchou",
      "id": 1366142,
      "node_id": "MDQ6VXNlcjEzNjYxNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1366142?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/agchou",
      "html_url": "https://github.com/agchou",
      "followers_url": "https://api.github.com/users/agchou/followers",
      "following_url": "https://api.github.com/users/agchou/following{/other_user}",
      "gists_url": "https://api.github.com/users/agchou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/agchou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agchou/subscriptions",
      "organizations_url": "https://api.github.com/users/agchou/orgs",
      "repos_url": "https://api.github.com/users/agchou/repos",
      "events_url": "https://api.github.com/users/agchou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/agchou/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 11,
    "created_at": "2014-03-25T08:44:00Z",
    "updated_at": "2014-06-12T06:03:47Z",
    "closed_at": "2014-03-25T22:30:34Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/2004",
      "html_url": "https://github.com/expressjs/express/pull/2004",
      "diff_url": "https://github.com/expressjs/express/pull/2004.diff",
      "patch_url": "https://github.com/expressjs/express/pull/2004.patch",
      "merged_at": "2014-03-25T22:30:34Z"
    },
    "body": "Hey guys!\n\nFirst of all, just want to say thank you for creating such an amazing framework. I'm currently working hard to become a full-stack javascript developer and have been recently learning express.\n\nWhile reading through the code many times, I noticed some inconsistencies in the formatting (especially with the \"Module Dependencies\") and thought it could be a chance for me to try and become involved in open source. In this commit I formatted the \"Module Dependencies\", moved the export to the top with comments, and added comments to the initialize function for Layer. \n\nIf this is not acceptable please let me know if I can help out in any other way. I am willing to go through all files and format \"Module Dependencies\" or any other mundane tasks you need completed. Thanks so much for reading—I am greatly inspired by you all!\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2004/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2004/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2003",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2003/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2003/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2003/events",
    "html_url": "https://github.com/expressjs/express/issues/2003",
    "id": 30101761,
    "node_id": "MDU6SXNzdWUzMDEwMTc2MQ==",
    "number": 2003,
    "title": "Is app.route() broken in last commits?",
    "user": {
      "login": "felixsanz",
      "id": 6182099,
      "node_id": "MDQ6VXNlcjYxODIwOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6182099?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/felixsanz",
      "html_url": "https://github.com/felixsanz",
      "followers_url": "https://api.github.com/users/felixsanz/followers",
      "following_url": "https://api.github.com/users/felixsanz/following{/other_user}",
      "gists_url": "https://api.github.com/users/felixsanz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/felixsanz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/felixsanz/subscriptions",
      "organizations_url": "https://api.github.com/users/felixsanz/orgs",
      "repos_url": "https://api.github.com/users/felixsanz/repos",
      "events_url": "https://api.github.com/users/felixsanz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/felixsanz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 18,
    "created_at": "2014-03-25T07:25:15Z",
    "updated_at": "2014-09-22T17:13:38Z",
    "closed_at": "2014-03-25T19:13:12Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I was using RC1 of 4.0, and my code worked fine. But now im getting:\n\n```\napp.route('/').get(controllers.posts.list);\n      ^\nTypeError: Property 'route' of object function app(req, res, next){ app.handle(req, res, next); } is not a function\n```\n\nI didn't change anything (i can be wrong), i just had to reinstall the node_modules directory and express is now latest version (RC4).\n\nIf i do `console.log(app.route)` im getting \"/\" (So... is not a function). Any idea? What i'm doing wrong here?\n\nThanks in advance.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2003/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2003/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2002",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2002/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2002/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2002/events",
    "html_url": "https://github.com/expressjs/express/issues/2002",
    "id": 30082420,
    "node_id": "MDU6SXNzdWUzMDA4MjQyMA==",
    "number": 2002,
    "title": "4.0.0-rc3 issue with sub router and middlewares",
    "user": {
      "login": "soyuka",
      "id": 1321971,
      "node_id": "MDQ6VXNlcjEzMjE5NzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1321971?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soyuka",
      "html_url": "https://github.com/soyuka",
      "followers_url": "https://api.github.com/users/soyuka/followers",
      "following_url": "https://api.github.com/users/soyuka/following{/other_user}",
      "gists_url": "https://api.github.com/users/soyuka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soyuka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soyuka/subscriptions",
      "organizations_url": "https://api.github.com/users/soyuka/orgs",
      "repos_url": "https://api.github.com/users/soyuka/repos",
      "events_url": "https://api.github.com/users/soyuka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soyuka/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-03-24T22:42:38Z",
    "updated_at": "2014-03-24T22:57:00Z",
    "closed_at": "2014-03-24T22:44:09Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Take this simple code : \n\n```\nvar app = express()\n\nvar middleware = function(req, res, next) {\n    console.log('Trying to put a middleware here')\n    next()\n}\n\napp.get('/', middleware, function(req, res, next) {\n    res.send(200)\n})\n\napp.listen(3001)\n```\n\nIt works well, but then when I try to use the same middleware in a sub router :\n\n```\n(...)\n\nvar sub = express.Router()\n\nsub.get('/test', middleware, function(req, res, next) {\n    res.send(200)\n})\n\napp.use('/sub', sub)\napp.listen(3001)\n```\n\nIt just stops at the first middleware. Any thoughts ?\n\nI've made a [gist there](https://gist.github.com/soyuka/9750928) with more tests (.all, .route)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2002/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2002/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2001",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2001/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2001/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2001/events",
    "html_url": "https://github.com/expressjs/express/issues/2001",
    "id": 30066957,
    "node_id": "MDU6SXNzdWUzMDA2Njk1Nw==",
    "number": 2001,
    "title": "Etag - req.fresh is false all the time",
    "user": {
      "login": "vidz1979",
      "id": 5623041,
      "node_id": "MDQ6VXNlcjU2MjMwNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5623041?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vidz1979",
      "html_url": "https://github.com/vidz1979",
      "followers_url": "https://api.github.com/users/vidz1979/followers",
      "following_url": "https://api.github.com/users/vidz1979/following{/other_user}",
      "gists_url": "https://api.github.com/users/vidz1979/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vidz1979/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vidz1979/subscriptions",
      "organizations_url": "https://api.github.com/users/vidz1979/orgs",
      "repos_url": "https://api.github.com/users/vidz1979/repos",
      "events_url": "https://api.github.com/users/vidz1979/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vidz1979/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-03-24T19:25:58Z",
    "updated_at": "2014-03-24T19:54:33Z",
    "closed_at": "2014-03-24T19:54:33Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi everybody!\n\nI am struggling with etag support in Express. Two points about the use o Etag:\n1) Performance: caching objects\n2) Data integrity: checking if objects being updated/deleted are the same version as of the time user last requested the object.\n\nMy case is mainly the last one (an API serving JSON resources). When I send a PUT request with a \"If-None-Match\" equal to object \"Etag\" header (I did a GET prior to PUT), req.fresh is false yet.\n\nI read the docs but wasn't able to find out what is happening.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2001/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2001/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/2000",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/2000/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/2000/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/2000/events",
    "html_url": "https://github.com/expressjs/express/issues/2000",
    "id": 30059519,
    "node_id": "MDU6SXNzdWUzMDA1OTUxOQ==",
    "number": 2000,
    "title": "Add support for custom HTTP verbs",
    "user": {
      "login": "spencerbeggs",
      "id": 109114,
      "node_id": "MDQ6VXNlcjEwOTExNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/109114?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/spencerbeggs",
      "html_url": "https://github.com/spencerbeggs",
      "followers_url": "https://api.github.com/users/spencerbeggs/followers",
      "following_url": "https://api.github.com/users/spencerbeggs/following{/other_user}",
      "gists_url": "https://api.github.com/users/spencerbeggs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/spencerbeggs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/spencerbeggs/subscriptions",
      "organizations_url": "https://api.github.com/users/spencerbeggs/orgs",
      "repos_url": "https://api.github.com/users/spencerbeggs/repos",
      "events_url": "https://api.github.com/users/spencerbeggs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/spencerbeggs/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-03-24T18:05:18Z",
    "updated_at": "2014-03-24T18:14:01Z",
    "closed_at": "2014-03-24T18:14:01Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I think it would be nice to support custom HTTP verbs. Currently, it seems like Express uses the standard HTTP verbs from the npm methods module. But the W3 clearly notes that the set of verbs [can be expanded](http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html).\n\nI think it's just a matter of passing an array of custom method names to the constructor. If you all don't think this is out of the scope of the project, I would be happy to create a pull request.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/2000/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/2000/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1999",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1999/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1999/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1999/events",
    "html_url": "https://github.com/expressjs/express/issues/1999",
    "id": 30038656,
    "node_id": "MDU6SXNzdWUzMDAzODY1Ng==",
    "number": 1999,
    "title": "[is it ok if I send a pr for...] pulling out router into a separate node module",
    "user": {
      "login": "mikermcneil",
      "id": 618009,
      "node_id": "MDQ6VXNlcjYxODAwOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/618009?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikermcneil",
      "html_url": "https://github.com/mikermcneil",
      "followers_url": "https://api.github.com/users/mikermcneil/followers",
      "following_url": "https://api.github.com/users/mikermcneil/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikermcneil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikermcneil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikermcneil/subscriptions",
      "organizations_url": "https://api.github.com/users/mikermcneil/orgs",
      "repos_url": "https://api.github.com/users/mikermcneil/repos",
      "events_url": "https://api.github.com/users/mikermcneil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikermcneil/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2014-03-24T14:21:53Z",
    "updated_at": "2014-04-04T23:38:56Z",
    "closed_at": "2014-03-26T01:09:37Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "See https://github.com/visionmedia/express/issues/1838#issuecomment-35854657 for original discussion\n#### Clarifications:\n- My motivation: selfishly, I want to be able to use the Express router directly in a couple of my own modules (some of them non-http).  I'd also like to experiment w/ running browserify on it.\n- Assuming we achieve 100% backwards-compatibility in the fork where we yank the router into its own module, would you be comfortable with this change making its way into Express 4?\n- The router source code could stay in this repo or move to a separate one.  I'd suggest the latter, since multiple npm modules per repo [can get confusing](https://github.com/creationix/stack/blame/master/README.markdown#L57).  But I want to make sure that lines up with what you're imagining.\n\n@jonathanong Thanks!\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1999/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1999/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1998",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1998/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1998/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1998/events",
    "html_url": "https://github.com/expressjs/express/issues/1998",
    "id": 30033872,
    "node_id": "MDU6SXNzdWUzMDAzMzg3Mg==",
    "number": 1998,
    "title": "unauthorized return don't work, when you specify err=true in callback",
    "user": {
      "login": "spyrade",
      "id": 7047321,
      "node_id": "MDQ6VXNlcjcwNDczMjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7047321?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/spyrade",
      "html_url": "https://github.com/spyrade",
      "followers_url": "https://api.github.com/users/spyrade/followers",
      "following_url": "https://api.github.com/users/spyrade/following{/other_user}",
      "gists_url": "https://api.github.com/users/spyrade/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/spyrade/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/spyrade/subscriptions",
      "organizations_url": "https://api.github.com/users/spyrade/orgs",
      "repos_url": "https://api.github.com/users/spyrade/repos",
      "events_url": "https://api.github.com/users/spyrade/events{/privacy}",
      "received_events_url": "https://api.github.com/users/spyrade/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2014-03-24T13:33:03Z",
    "updated_at": "2014-03-24T15:08:26Z",
    "closed_at": "2014-03-24T15:08:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "basicAuth.js [row 87]:\n        if (err || !user)  return unauthorized(res, realm);\nWhen i pass err=true in a callback it should return unauthorized response, but it dosn't ? \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1998/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1998/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1997",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1997/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1997/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1997/events",
    "html_url": "https://github.com/expressjs/express/issues/1997",
    "id": 30033175,
    "node_id": "MDU6SXNzdWUzMDAzMzE3NQ==",
    "number": 1997,
    "title": "unauthorized return don't work, when you specify err=true in callback",
    "user": {
      "login": "spyrade",
      "id": 7047321,
      "node_id": "MDQ6VXNlcjcwNDczMjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7047321?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/spyrade",
      "html_url": "https://github.com/spyrade",
      "followers_url": "https://api.github.com/users/spyrade/followers",
      "following_url": "https://api.github.com/users/spyrade/following{/other_user}",
      "gists_url": "https://api.github.com/users/spyrade/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/spyrade/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/spyrade/subscriptions",
      "organizations_url": "https://api.github.com/users/spyrade/orgs",
      "repos_url": "https://api.github.com/users/spyrade/repos",
      "events_url": "https://api.github.com/users/spyrade/events{/privacy}",
      "received_events_url": "https://api.github.com/users/spyrade/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2014-03-24T13:24:48Z",
    "updated_at": "2014-03-24T13:53:58Z",
    "closed_at": "2014-03-24T13:53:58Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "basicAuth.js row 87:\nif (err || !user)  return unauthorized(res, realm);\nwhen i pass true in a callback it should return unauthorized page, but it dosen't !!!\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1997/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1997/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1996",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1996/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1996/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1996/events",
    "html_url": "https://github.com/expressjs/express/pull/1996",
    "id": 30004482,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTM4ODM4ODc=",
    "number": 1996,
    "title": "Add/arrays as middleware",
    "user": {
      "login": "defunctzombie",
      "id": 84792,
      "node_id": "MDQ6VXNlcjg0Nzky",
      "avatar_url": "https://avatars.githubusercontent.com/u/84792?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/defunctzombie",
      "html_url": "https://github.com/defunctzombie",
      "followers_url": "https://api.github.com/users/defunctzombie/followers",
      "following_url": "https://api.github.com/users/defunctzombie/following{/other_user}",
      "gists_url": "https://api.github.com/users/defunctzombie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/defunctzombie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/defunctzombie/subscriptions",
      "organizations_url": "https://api.github.com/users/defunctzombie/orgs",
      "repos_url": "https://api.github.com/users/defunctzombie/repos",
      "events_url": "https://api.github.com/users/defunctzombie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/defunctzombie/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2014-03-24T01:32:02Z",
    "updated_at": "2014-07-01T19:56:50Z",
    "closed_at": "2014-03-25T02:52:54Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1996",
      "html_url": "https://github.com/expressjs/express/pull/1996",
      "diff_url": "https://github.com/expressjs/express/pull/1996.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1996.patch",
      "merged_at": "2014-03-25T02:52:54Z"
    },
    "body": "does not add support for arrays as middleware to `.use` yet\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1996/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1996/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1995",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1995/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1995/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1995/events",
    "html_url": "https://github.com/expressjs/express/issues/1995",
    "id": 29993961,
    "node_id": "MDU6SXNzdWUyOTk5Mzk2MQ==",
    "number": 1995,
    "title": "Route gets called twice when using params and throwing error",
    "user": {
      "login": "LinusU",
      "id": 189580,
      "node_id": "MDQ6VXNlcjE4OTU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/189580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LinusU",
      "html_url": "https://github.com/LinusU",
      "followers_url": "https://api.github.com/users/LinusU/followers",
      "following_url": "https://api.github.com/users/LinusU/following{/other_user}",
      "gists_url": "https://api.github.com/users/LinusU/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LinusU/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LinusU/subscriptions",
      "organizations_url": "https://api.github.com/users/LinusU/orgs",
      "repos_url": "https://api.github.com/users/LinusU/repos",
      "events_url": "https://api.github.com/users/LinusU/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LinusU/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2014-03-23T18:29:20Z",
    "updated_at": "2019-06-02T04:52:14Z",
    "closed_at": "2014-03-23T18:43:17Z",
    "author_association": "MEMBER",
    "active_lock_reason": "resolved",
    "body": "I really thought I was going crazy, but after lots of debugging I was finally able to write a simple reproducible test case. This is for express `4.0.0-rc3`.\n\nWhen having routes that uses params (`app.get('/test/:id', ...)`) and throws an error, the route will be called twice. It also ignores when my custom error handler writes to the socket and uses the default 500 to output a page to the client.\n\n``` js\n\nvar express = require('express');\n\nvar incomingRequests = 0;\nvar routeCalled = 0;\n\napp = express();\n\napp.use(function (req, res, next) {\n  incomingRequests += 1;\n  next();\n});\n\napp.get('/test/:id', function (req, res) {\n  routeCalled += 1;\n\n  console.log(' --- ');\n  console.log('incomingRequests', incomingRequests);\n  console.log('routeCalled', routeCalled);\n  console.log(' --- ');\n\n  throw new Error('Error in get');\n});\n\napp.listen(1337);\n```\n\nStart the app and hit the route:\n- `node twice.js`\n- `curl localhost:1337/test/2`\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1995/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1995/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1994",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1994/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1994/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1994/events",
    "html_url": "https://github.com/expressjs/express/pull/1994",
    "id": 29992627,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTM4Nzk2NDI=",
    "number": 1994,
    "title": "Router var search increment to bitwise",
    "user": {
      "login": "nook-scheel",
      "id": 824669,
      "node_id": "MDQ6VXNlcjgyNDY2OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/824669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nook-scheel",
      "html_url": "https://github.com/nook-scheel",
      "followers_url": "https://api.github.com/users/nook-scheel/followers",
      "following_url": "https://api.github.com/users/nook-scheel/following{/other_user}",
      "gists_url": "https://api.github.com/users/nook-scheel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nook-scheel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nook-scheel/subscriptions",
      "organizations_url": "https://api.github.com/users/nook-scheel/orgs",
      "repos_url": "https://api.github.com/users/nook-scheel/repos",
      "events_url": "https://api.github.com/users/nook-scheel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nook-scheel/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-03-23T17:52:23Z",
    "updated_at": "2014-03-23T18:21:40Z",
    "closed_at": "2014-03-23T18:21:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1994",
      "html_url": "https://github.com/expressjs/express/pull/1994",
      "diff_url": "https://github.com/expressjs/express/pull/1994.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1994.patch",
      "merged_at": null
    },
    "body": "Clean code\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1994/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1994/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1993",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1993/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1993/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1993/events",
    "html_url": "https://github.com/expressjs/express/issues/1993",
    "id": 29989335,
    "node_id": "MDU6SXNzdWUyOTk4OTMzNQ==",
    "number": 1993,
    "title": "https support",
    "user": {
      "login": "jprystowsky",
      "id": 3267617,
      "node_id": "MDQ6VXNlcjMyNjc2MTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3267617?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jprystowsky",
      "html_url": "https://github.com/jprystowsky",
      "followers_url": "https://api.github.com/users/jprystowsky/followers",
      "following_url": "https://api.github.com/users/jprystowsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/jprystowsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jprystowsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jprystowsky/subscriptions",
      "organizations_url": "https://api.github.com/users/jprystowsky/orgs",
      "repos_url": "https://api.github.com/users/jprystowsky/repos",
      "events_url": "https://api.github.com/users/jprystowsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jprystowsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-03-23T15:23:13Z",
    "updated_at": "2014-03-23T17:10:36Z",
    "closed_at": "2014-03-23T15:24:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I love Express and use it in many of my projects. Would it be possible, please, to enable TLS (HTTPS) support for expressjs.com as well?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1993/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1993/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1992",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1992/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1992/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1992/events",
    "html_url": "https://github.com/expressjs/express/issues/1992",
    "id": 29986994,
    "node_id": "MDU6SXNzdWUyOTk4Njk5NA==",
    "number": 1992,
    "title": "passing middleware as an array does not work",
    "user": {
      "login": "eiriklv",
      "id": 3486317,
      "node_id": "MDQ6VXNlcjM0ODYzMTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3486317?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eiriklv",
      "html_url": "https://github.com/eiriklv",
      "followers_url": "https://api.github.com/users/eiriklv/followers",
      "following_url": "https://api.github.com/users/eiriklv/following{/other_user}",
      "gists_url": "https://api.github.com/users/eiriklv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eiriklv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eiriklv/subscriptions",
      "organizations_url": "https://api.github.com/users/eiriklv/orgs",
      "repos_url": "https://api.github.com/users/eiriklv/repos",
      "events_url": "https://api.github.com/users/eiriklv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eiriklv/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 16,
    "created_at": "2014-03-23T13:10:18Z",
    "updated_at": "2020-05-10T20:26:21Z",
    "closed_at": "2014-03-25T02:57:03Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "``` javascript\nvar middleware = [loadForum, loadThread];\n\napp.get('/forum/:fid/thread/:tid', middleware, function(){\n  // ...\n})\n```\n\nthe above part gives me the following error:\n\n``` javascript\nError: Route.use() requires callback functions but got a [object Array]\n```\n\nIt works fine if i pass the middleware like this:\n\n``` javascript\napp.get('/forum/:fid/thread/:tid', loadForum, loadThread, function(){\n  // ...\n})\n```\n\nAccording to the 4.x docs, the array should be flattened by express, but it doesn't seem to work as intended\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1992/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1992/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1991",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1991/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1991/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1991/events",
    "html_url": "https://github.com/expressjs/express/issues/1991",
    "id": 29905202,
    "node_id": "MDU6SXNzdWUyOTkwNTIwMg==",
    "number": 1991,
    "title": "missing basicAuth",
    "user": {
      "login": "mman",
      "id": 249814,
      "node_id": "MDQ6VXNlcjI0OTgxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/249814?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mman",
      "html_url": "https://github.com/mman",
      "followers_url": "https://api.github.com/users/mman/followers",
      "following_url": "https://api.github.com/users/mman/following{/other_user}",
      "gists_url": "https://api.github.com/users/mman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mman/subscriptions",
      "organizations_url": "https://api.github.com/users/mman/orgs",
      "repos_url": "https://api.github.com/users/mman/repos",
      "events_url": "https://api.github.com/users/mman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mman/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2014-03-21T14:44:35Z",
    "updated_at": "2014-08-04T08:12:53Z",
    "closed_at": "2014-03-21T14:46:22Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This code works fine on 3.5.0, fails with the trace below in 4.0.0-rc3\n\n```\napp.use(express.basicAuth('username', 'password'));\n                ^\nTypeError: Object function createApplication() {\n  var app = function(req, res, next) {\n    app.handle(req, res, next);\n  };\n\n  mixin(app, proto);\n  mixin(app, EventEmitter.prototype);\n\n  app.request = { __proto__: req, app: app };\n  app.response = { __proto__: res, app: app };\n  app.init();\n  return app;\n} has no method 'basicAuth'\n    at Object.<anonymous> (/home/mman/Projects/MMP2PSession/Server/mmrelay/mmrelay.js:44:17)\n    at Module._compile (module.js:456:26)\n    at Object.Module._extensions..js (module.js:474:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Function.Module.runMain (module.js:497:10)\n    at startup (node.js:119:16)\n    at node.js:902:3\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1991/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1991/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1990",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1990/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1990/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1990/events",
    "html_url": "https://github.com/expressjs/express/issues/1990",
    "id": 29802069,
    "node_id": "MDU6SXNzdWUyOTgwMjA2OQ==",
    "number": 1990,
    "title": "npm latest is 3.4.8 (not 3.5.0)",
    "user": {
      "login": "gkorland",
      "id": 753206,
      "node_id": "MDQ6VXNlcjc1MzIwNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/753206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gkorland",
      "html_url": "https://github.com/gkorland",
      "followers_url": "https://api.github.com/users/gkorland/followers",
      "following_url": "https://api.github.com/users/gkorland/following{/other_user}",
      "gists_url": "https://api.github.com/users/gkorland/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gkorland/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gkorland/subscriptions",
      "organizations_url": "https://api.github.com/users/gkorland/orgs",
      "repos_url": "https://api.github.com/users/gkorland/repos",
      "events_url": "https://api.github.com/users/gkorland/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gkorland/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-03-20T08:51:31Z",
    "updated_at": "2014-03-20T18:56:15Z",
    "closed_at": "2014-03-20T18:56:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "npm shows that the latest version is 3.4.8 and not 3.5.0\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1990/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1990/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1989",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1989/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1989/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1989/events",
    "html_url": "https://github.com/expressjs/express/issues/1989",
    "id": 29783838,
    "node_id": "MDU6SXNzdWUyOTc4MzgzOA==",
    "number": 1989,
    "title": "req.query.param_name returns undefined.",
    "user": {
      "login": "geekatron",
      "id": 704495,
      "node_id": "MDQ6VXNlcjcwNDQ5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/704495?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/geekatron",
      "html_url": "https://github.com/geekatron",
      "followers_url": "https://api.github.com/users/geekatron/followers",
      "following_url": "https://api.github.com/users/geekatron/following{/other_user}",
      "gists_url": "https://api.github.com/users/geekatron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/geekatron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/geekatron/subscriptions",
      "organizations_url": "https://api.github.com/users/geekatron/orgs",
      "repos_url": "https://api.github.com/users/geekatron/repos",
      "events_url": "https://api.github.com/users/geekatron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/geekatron/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-03-20T00:00:03Z",
    "updated_at": "2020-02-26T16:25:58Z",
    "closed_at": "2014-03-22T08:57:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am currently running an Express 4.x project.\n\nWhenever I am trying to access the query parameters through req.query.param (e.g. req.query.offset) a value of undefined is returned. However when I run req.query() the expected query string is returned offset=0\n\nIs there something I am not adding to my application or am I using req.query incorrectly?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1989/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1989/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1988",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1988/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1988/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1988/events",
    "html_url": "https://github.com/expressjs/express/issues/1988",
    "id": 29719011,
    "node_id": "MDU6SXNzdWUyOTcxOTAxMQ==",
    "number": 1988,
    "title": "Invalid code for less 0.2.x",
    "user": {
      "login": "hanxue",
      "id": 760008,
      "node_id": "MDQ6VXNlcjc2MDAwOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/760008?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hanxue",
      "html_url": "https://github.com/hanxue",
      "followers_url": "https://api.github.com/users/hanxue/followers",
      "following_url": "https://api.github.com/users/hanxue/following{/other_user}",
      "gists_url": "https://api.github.com/users/hanxue/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hanxue/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hanxue/subscriptions",
      "organizations_url": "https://api.github.com/users/hanxue/orgs",
      "repos_url": "https://api.github.com/users/hanxue/repos",
      "events_url": "https://api.github.com/users/hanxue/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hanxue/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-03-19T09:59:36Z",
    "updated_at": "2014-03-19T10:08:47Z",
    "closed_at": "2014-03-19T10:08:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "If `less-middleware 0.2.x` is used, then some code needs to be updated https://github.com/emberfeather/less.js-middleware/wiki/Migration-0.1.x-0.2.0\n\nUsing the default installation of express and running `express <project> -c less` results in :\n- express 3.4.8\n- less-middleware 0.2.1-beta\n- less 1.6.3\n\nand this error message\n\n``` javascript\n$ node app.js \n\n/Users/hanxue/Code/Node/Express/CodeEffect/helloExpress/node_modules/less-middleware/lib/middleware.js:50\n    throw new Error('Please update your less-middleware usage: http://goo.gl/Y\n          ^\nError: Please update your less-middleware usage: http://goo.gl/YnK8p0\n    at module.exports.less.middleware (/Users/hanxue/Code/Node/Express/CodeEffect/helloExpress/node_modules/less-middleware/lib/middleware.js:50:11)\n    at Object.<anonymous> (/Users/hanxue/Code/Node/Express/CodeEffect/helloExpress/app.js:24:35)\n    at Module._compile (module.js:449:26)\n    at Object.Module._extensions..js (module.js:467:10)\n    at Module.load (module.js:349:32)\n    at Function.Module._load (module.js:305:12)\n    at Function.Module.runMain (module.js:490:10)\n    at startup (node.js:123:16)\n    at node.js:1027:3\n```\n\nSpecifically, this line\n`app.use(require('less-middleware')({ src: path.join(__dirname, 'public') }));`\n\nneeds to be changed to\n`app.use(require('less-middleware')(path.join(__dirname, '/public')));`\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1988/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1988/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1987",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1987/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1987/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1987/events",
    "html_url": "https://github.com/expressjs/express/pull/1987",
    "id": 29702491,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTM3MTg0MTk=",
    "number": 1987,
    "title": "Preserve case when setting headers",
    "user": {
      "login": "eden",
      "id": 7797,
      "node_id": "MDQ6VXNlcjc3OTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eden",
      "html_url": "https://github.com/eden",
      "followers_url": "https://api.github.com/users/eden/followers",
      "following_url": "https://api.github.com/users/eden/following{/other_user}",
      "gists_url": "https://api.github.com/users/eden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eden/subscriptions",
      "organizations_url": "https://api.github.com/users/eden/orgs",
      "repos_url": "https://api.github.com/users/eden/repos",
      "events_url": "https://api.github.com/users/eden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eden/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2014-03-19T02:25:56Z",
    "updated_at": "2014-07-17T06:18:19Z",
    "closed_at": "2014-03-19T02:26:45Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1987",
      "html_url": "https://github.com/expressjs/express/pull/1987",
      "diff_url": "https://github.com/expressjs/express/pull/1987.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1987.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1987/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1987/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1986",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1986/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1986/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1986/events",
    "html_url": "https://github.com/expressjs/express/issues/1986",
    "id": 29698395,
    "node_id": "MDU6SXNzdWUyOTY5ODM5NQ==",
    "number": 1986,
    "title": "configure a prefix on a per Route() basis?",
    "user": {
      "login": "eshell",
      "id": 1856531,
      "node_id": "MDQ6VXNlcjE4NTY1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1856531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eshell",
      "html_url": "https://github.com/eshell",
      "followers_url": "https://api.github.com/users/eshell/followers",
      "following_url": "https://api.github.com/users/eshell/following{/other_user}",
      "gists_url": "https://api.github.com/users/eshell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eshell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eshell/subscriptions",
      "organizations_url": "https://api.github.com/users/eshell/orgs",
      "repos_url": "https://api.github.com/users/eshell/repos",
      "events_url": "https://api.github.com/users/eshell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eshell/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-03-19T00:35:14Z",
    "updated_at": "2014-03-19T00:42:47Z",
    "closed_at": "2014-03-19T00:42:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Is it or could it be possible to configure a prefix for any routes created?\n\n```\nvar routeV1 = express.Router({prefix: '/v1'})\n,     routeV2 = express.Router({prefix: '/v2'});\n```\n\nSomething like that?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1986/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1986/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1985",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1985/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1985/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1985/events",
    "html_url": "https://github.com/expressjs/express/issues/1985",
    "id": 29602861,
    "node_id": "MDU6SXNzdWUyOTYwMjg2MQ==",
    "number": 1985,
    "title": "CSRF getting stuck?",
    "user": {
      "login": "brianblocker",
      "id": 793419,
      "node_id": "MDQ6VXNlcjc5MzQxOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/793419?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brianblocker",
      "html_url": "https://github.com/brianblocker",
      "followers_url": "https://api.github.com/users/brianblocker/followers",
      "following_url": "https://api.github.com/users/brianblocker/following{/other_user}",
      "gists_url": "https://api.github.com/users/brianblocker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brianblocker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brianblocker/subscriptions",
      "organizations_url": "https://api.github.com/users/brianblocker/orgs",
      "repos_url": "https://api.github.com/users/brianblocker/repos",
      "events_url": "https://api.github.com/users/brianblocker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brianblocker/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-03-17T21:57:11Z",
    "updated_at": "2014-03-17T22:12:48Z",
    "closed_at": "2014-03-17T22:06:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Let's say I have the following in a \"csrf config\" file:\n\n```\nvar config = require(process.cwd() + '/config/environment_config')\n  , express = require('express')\n  , csrf = require('csurf');\n\nmodule.exports = function (app) {\n  // conditionally use csrf tags\n  app.use(function (req, res, next) {\n    if (/^\\/?api\\//i.test(req.originalUrl)) {\n      return next();\n    }\n\n    csrf(req, res, next); // <-- this is hanging\n    //next();\n  });\n\n  // if the request has a csrfToken, set it\n  app.use(function (req, res, next) {\n    if (req.csrfToken) {\n      app.locals.csrf_token = req.csrfToken();\n      res.header('X-CSRF-Token', app.locals.csrf_token);\n\n      // just for testing, only set if testing?\n      config.CSRF = req.csrfToken();\n    }\n\n    next();\n  });\n};\n```\n\nThe call to csrf() keeps timing out. With express 3, this wasn't the case. Can anybody duplicate? Also, my middleware is called in this order:\n- cookie parser\n- session\n- body parser\n- csrf\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1985/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1985/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1984",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1984/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1984/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1984/events",
    "html_url": "https://github.com/expressjs/express/pull/1984",
    "id": 29584080,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTM2NDc3OTk=",
    "number": 1984,
    "title": "Override params each layer",
    "user": {
      "login": "blakeembrey",
      "id": 1088987,
      "node_id": "MDQ6VXNlcjEwODg5ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1088987?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blakeembrey",
      "html_url": "https://github.com/blakeembrey",
      "followers_url": "https://api.github.com/users/blakeembrey/followers",
      "following_url": "https://api.github.com/users/blakeembrey/following{/other_user}",
      "gists_url": "https://api.github.com/users/blakeembrey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blakeembrey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blakeembrey/subscriptions",
      "organizations_url": "https://api.github.com/users/blakeembrey/orgs",
      "repos_url": "https://api.github.com/users/blakeembrey/repos",
      "events_url": "https://api.github.com/users/blakeembrey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blakeembrey/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2014-03-17T18:03:00Z",
    "updated_at": "2014-07-29T04:18:20Z",
    "closed_at": "2014-03-19T00:45:27Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1984",
      "html_url": "https://github.com/expressjs/express/pull/1984",
      "diff_url": "https://github.com/expressjs/express/pull/1984.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1984.patch",
      "merged_at": "2014-03-19T00:45:27Z"
    },
    "body": "After the last PR went through, I've reconsidered keeping old params around. I see no reason to keep them around as it actually breaks the idea of modularity and could expose some weird behaviour. I've also changed `params` to be an array, which is more natural to work with.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1984/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1984/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1983",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1983/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1983/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1983/events",
    "html_url": "https://github.com/expressjs/express/issues/1983",
    "id": 29558946,
    "node_id": "MDU6SXNzdWUyOTU1ODk0Ng==",
    "number": 1983,
    "title": "Will you use cookies",
    "user": {
      "login": "popomore",
      "id": 360661,
      "node_id": "MDQ6VXNlcjM2MDY2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/360661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/popomore",
      "html_url": "https://github.com/popomore",
      "followers_url": "https://api.github.com/users/popomore/followers",
      "following_url": "https://api.github.com/users/popomore/following{/other_user}",
      "gists_url": "https://api.github.com/users/popomore/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/popomore/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/popomore/subscriptions",
      "organizations_url": "https://api.github.com/users/popomore/orgs",
      "repos_url": "https://api.github.com/users/popomore/repos",
      "events_url": "https://api.github.com/users/popomore/events{/privacy}",
      "received_events_url": "https://api.github.com/users/popomore/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-03-17T13:15:13Z",
    "updated_at": "2014-03-17T14:26:11Z",
    "closed_at": "2014-03-17T14:19:58Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "I see connect sugguest use [cookies](https://github.com/jed/cookies) as cookieParser in README. And express is using [cookie](https://github.com/defunctzombie/node-cookie) now.\n\nWill you use cookies as a middleware and delete res.cookie in express?\n\nOr will you use cookies instead of cookie in res.cookie?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1983/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1983/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1982",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1982/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1982/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1982/events",
    "html_url": "https://github.com/expressjs/express/issues/1982",
    "id": 29534535,
    "node_id": "MDU6SXNzdWUyOTUzNDUzNQ==",
    "number": 1982,
    "title": "Enabling Authentication For Resources, Not Routes",
    "user": {
      "login": "ypinskiy",
      "id": 6011399,
      "node_id": "MDQ6VXNlcjYwMTEzOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6011399?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ypinskiy",
      "html_url": "https://github.com/ypinskiy",
      "followers_url": "https://api.github.com/users/ypinskiy/followers",
      "following_url": "https://api.github.com/users/ypinskiy/following{/other_user}",
      "gists_url": "https://api.github.com/users/ypinskiy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ypinskiy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ypinskiy/subscriptions",
      "organizations_url": "https://api.github.com/users/ypinskiy/orgs",
      "repos_url": "https://api.github.com/users/ypinskiy/repos",
      "events_url": "https://api.github.com/users/ypinskiy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ypinskiy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2014-03-17T02:58:15Z",
    "updated_at": "2014-03-17T03:56:24Z",
    "closed_at": "2014-03-17T03:27:53Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am using the express.basicAuth in my server to protect an admin only area in the /secure path. Going to /secure/manager asks for a password, however going to a specific file such as /secure/manager.html seems to bypass the authentication. Is this a bug in the basicAuth middleware or do I need a different solution for protecting resources as opposed to protecting paths? My code is:\n\n```\nvar auth = express.basicAuth(function(user, pass) {\n    return user === 'admin' && pass === '12345';\n});\n\napp.get('/secure/*', auth, function (req, res) {\n});\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1982/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1982/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1981",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1981/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1981/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1981/events",
    "html_url": "https://github.com/expressjs/express/issues/1981",
    "id": 29514456,
    "node_id": "MDU6SXNzdWUyOTUxNDQ1Ng==",
    "number": 1981,
    "title": "Update the docs w.r.t. express-generator",
    "user": {
      "login": "ralt",
      "id": 1016379,
      "node_id": "MDQ6VXNlcjEwMTYzNzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1016379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ralt",
      "html_url": "https://github.com/ralt",
      "followers_url": "https://api.github.com/users/ralt/followers",
      "following_url": "https://api.github.com/users/ralt/following{/other_user}",
      "gists_url": "https://api.github.com/users/ralt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ralt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ralt/subscriptions",
      "organizations_url": "https://api.github.com/users/ralt/orgs",
      "repos_url": "https://api.github.com/users/ralt/repos",
      "events_url": "https://api.github.com/users/ralt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ralt/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-03-16T10:53:29Z",
    "updated_at": "2014-03-16T20:45:23Z",
    "closed_at": "2014-03-16T20:45:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Right now, it says to run `node app.js` to run the server. It looks like express-generator has updated its way to do so, and now says the following:\n\n```\nrun the app:\n  $ DEBUG=my-application ./bin/www\n```\n\nSo now people following expressjs.com's tutorial run `node app.js` and nothing happens, leaving them clueless. (Yes, they should read what the terminal tells them, etc, but having contradicting instructions is still bad imho.)\n\nSide note: many people don't understand the env variable setup syntax, according to my experience in the [SO JavaScript chat room](http://chat.stackoverflow.com/transcript/message/15312645#15312645). Should something be done about it? What's the standard for express' degree of explanation?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1981/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1981/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1980",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1980/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1980/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1980/events",
    "html_url": "https://github.com/expressjs/express/issues/1980",
    "id": 29509928,
    "node_id": "MDU6SXNzdWUyOTUwOTkyOA==",
    "number": 1980,
    "title": "Please add app.route('foo').use()",
    "user": {
      "login": "nakedible",
      "id": 445682,
      "node_id": "MDQ6VXNlcjQ0NTY4Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/445682?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nakedible",
      "html_url": "https://github.com/nakedible",
      "followers_url": "https://api.github.com/users/nakedible/followers",
      "following_url": "https://api.github.com/users/nakedible/following{/other_user}",
      "gists_url": "https://api.github.com/users/nakedible/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nakedible/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nakedible/subscriptions",
      "organizations_url": "https://api.github.com/users/nakedible/orgs",
      "repos_url": "https://api.github.com/users/nakedible/repos",
      "events_url": "https://api.github.com/users/nakedible/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nakedible/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 31,
    "created_at": "2014-03-16T05:35:56Z",
    "updated_at": "2020-06-22T11:16:04Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "For Express 4.x, documentation says \"Using app.route() is a recommended approach to avoiding duplicate route naming and thus typo errors.\" However, since all() and use() are different, it would be nice to be able to call use() on route objects as well, to avoid duplicate route naming.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1980/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1980/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1979",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1979/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1979/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1979/events",
    "html_url": "https://github.com/expressjs/express/issues/1979",
    "id": 29407174,
    "node_id": "MDU6SXNzdWUyOTQwNzE3NA==",
    "number": 1979,
    "title": "Error: ENOENT, open '/home/.../nodedemo/node_modules/express/node_modules/connect/node_modules/static-favicon/../public/favicon.ico'",
    "user": {
      "login": "ljcqx",
      "id": 309218,
      "node_id": "MDQ6VXNlcjMwOTIxOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/309218?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ljcqx",
      "html_url": "https://github.com/ljcqx",
      "followers_url": "https://api.github.com/users/ljcqx/followers",
      "following_url": "https://api.github.com/users/ljcqx/following{/other_user}",
      "gists_url": "https://api.github.com/users/ljcqx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ljcqx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ljcqx/subscriptions",
      "organizations_url": "https://api.github.com/users/ljcqx/orgs",
      "repos_url": "https://api.github.com/users/ljcqx/repos",
      "events_url": "https://api.github.com/users/ljcqx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ljcqx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2014-03-14T02:46:25Z",
    "updated_at": "2014-03-30T19:42:58Z",
    "closed_at": "2014-03-14T02:54:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "express version: 3.5.0\nError: ENOENT, open '/home/.../nodedemo/node_modules/express/node_modules/connect/node_modules/static-favicon/../public/favicon.ico'\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1979/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1979/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1978",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1978/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1978/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1978/events",
    "html_url": "https://github.com/expressjs/express/pull/1978",
    "id": 29401454,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTM1NTI2NTI=",
    "number": 1978,
    "title": "fix readme to match updated license",
    "user": {
      "login": "robgraeber",
      "id": 2387719,
      "node_id": "MDQ6VXNlcjIzODc3MTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2387719?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/robgraeber",
      "html_url": "https://github.com/robgraeber",
      "followers_url": "https://api.github.com/users/robgraeber/followers",
      "following_url": "https://api.github.com/users/robgraeber/following{/other_user}",
      "gists_url": "https://api.github.com/users/robgraeber/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/robgraeber/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/robgraeber/subscriptions",
      "organizations_url": "https://api.github.com/users/robgraeber/orgs",
      "repos_url": "https://api.github.com/users/robgraeber/repos",
      "events_url": "https://api.github.com/users/robgraeber/events{/privacy}",
      "received_events_url": "https://api.github.com/users/robgraeber/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-03-14T00:18:39Z",
    "updated_at": "2014-03-14T00:22:50Z",
    "closed_at": "2014-03-14T00:19:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1978",
      "html_url": "https://github.com/expressjs/express/pull/1978",
      "diff_url": "https://github.com/expressjs/express/pull/1978.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1978.patch",
      "merged_at": null
    },
    "body": "Just a minor fix, updating the readme to match the changed license.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1978/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1978/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1977",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1977/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1977/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1977/events",
    "html_url": "https://github.com/expressjs/express/issues/1977",
    "id": 29396226,
    "node_id": "MDU6SXNzdWUyOTM5NjIyNg==",
    "number": 1977,
    "title": "Updating to version 3.5.0",
    "user": {
      "login": "reggi",
      "id": 296798,
      "node_id": "MDQ6VXNlcjI5Njc5OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/296798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reggi",
      "html_url": "https://github.com/reggi",
      "followers_url": "https://api.github.com/users/reggi/followers",
      "following_url": "https://api.github.com/users/reggi/following{/other_user}",
      "gists_url": "https://api.github.com/users/reggi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reggi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reggi/subscriptions",
      "organizations_url": "https://api.github.com/users/reggi/orgs",
      "repos_url": "https://api.github.com/users/reggi/repos",
      "events_url": "https://api.github.com/users/reggi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reggi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2014-03-13T22:40:29Z",
    "updated_at": "2014-03-13T23:52:19Z",
    "closed_at": "2014-03-13T23:52:19Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "What gives? Updating to version 3.5.0 uninstalls express??\n\n```\n> express --version\n3.4.8\n> npm update -g express\n```\n\n[bunch of garble-garble](https://gist.github.com/reggi/9538619)\n\n```\nexpress@3.5.0 /usr/local/lib/node_modules/compound/node_modules/railway-routes/node_modules/express\n├── methods@0.1.0\n├── fresh@0.2.2\n├── debug@0.7.4\n├── buffer-crc32@0.2.1\n├── cookie@0.1.1\n├── commander@1.3.2 (keypress@0.1.0)\n├── mkdirp@0.3.5\n├── range-parser@1.0.0\n├── send@0.2.0 (mime@1.2.11)\n├── merge-descriptors@0.0.2\n├── cookie-signature@1.0.3\n└── connect@2.14.1 (response-time@1.0.0, pause@0.0.1, connect-timeout@1.0.0, method-override@1.0.0, vhost@1.0.0, static-favicon@1.0.0, qs@0.6.6, serve-static@1.0.2, morgan@1.0.0, basic-auth-connect@1.0.0, bytes@0.2.1, raw-body@1.1.3, errorhandler@1.0.0, csurf@1.0.0, cookie-parser@1.0.1, compression@1.0.0, express-session@1.0.2, serve-index@1.0.1, multiparty@2.2.0)\nnpm info ok \n> express --version\n-bash: /usr/local/bin/express: No such file or directory\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1977/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1977/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1976",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1976/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1976/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1976/events",
    "html_url": "https://github.com/expressjs/express/pull/1976",
    "id": 29327175,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTM1MDc1NjI=",
    "number": 1976,
    "title": "Update license year",
    "user": {
      "login": "jontewks",
      "id": 3970573,
      "node_id": "MDQ6VXNlcjM5NzA1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3970573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jontewks",
      "html_url": "https://github.com/jontewks",
      "followers_url": "https://api.github.com/users/jontewks/followers",
      "following_url": "https://api.github.com/users/jontewks/following{/other_user}",
      "gists_url": "https://api.github.com/users/jontewks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jontewks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jontewks/subscriptions",
      "organizations_url": "https://api.github.com/users/jontewks/orgs",
      "repos_url": "https://api.github.com/users/jontewks/repos",
      "events_url": "https://api.github.com/users/jontewks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jontewks/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2014-03-13T05:39:41Z",
    "updated_at": "2014-06-19T21:17:25Z",
    "closed_at": "2014-03-13T16:18:09Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1976",
      "html_url": "https://github.com/expressjs/express/pull/1976",
      "diff_url": "https://github.com/expressjs/express/pull/1976.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1976.patch",
      "merged_at": null
    },
    "body": "Fix outdated copyright year (updated to 2014).\nThe copyright year was out of date. Copyright notices must reflect the current year, so this commit updates the listed year to 2014.\n\nSee http://www.copyright.gov/circs/circ01.pdf for more info.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1976/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1976/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1975",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1975/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1975/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1975/events",
    "html_url": "https://github.com/expressjs/express/issues/1975",
    "id": 29265365,
    "node_id": "MDU6SXNzdWUyOTI2NTM2NQ==",
    "number": 1975,
    "title": "app.mountpath is not set correctly when used within the app itself",
    "user": {
      "login": "thomasfr",
      "id": 287432,
      "node_id": "MDQ6VXNlcjI4NzQzMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/287432?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thomasfr",
      "html_url": "https://github.com/thomasfr",
      "followers_url": "https://api.github.com/users/thomasfr/followers",
      "following_url": "https://api.github.com/users/thomasfr/following{/other_user}",
      "gists_url": "https://api.github.com/users/thomasfr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thomasfr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thomasfr/subscriptions",
      "organizations_url": "https://api.github.com/users/thomasfr/orgs",
      "repos_url": "https://api.github.com/users/thomasfr/repos",
      "events_url": "https://api.github.com/users/thomasfr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thomasfr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-03-12T14:09:22Z",
    "updated_at": "2014-03-12T14:33:52Z",
    "closed_at": "2014-03-12T14:26:01Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\n\nI have to use `app.mountpath` in the views of my app, as a prefix for some urls. In this example i used it for the url to a css file which is in a public directory in the app (`/app/public`), but it could also be used for dynamically creating links depending on the mountpath.\n\nWhat i did is basically this:\n\n``` javascript\n// /index.js\n\nvar app = express()\nvar mountpoint = \"/foo\";\napp.use(mountpoint, require(\"./app/index.js\"))\n\n```\n\n``` javascript\n// /app/index.js\n\nvar app = module.exports = express()\n\napp.locals.baseurl = app.mountpath.replace(/\\/$/, \"\") // <-- of course, this is set to '/' at this moment, because it is not yet mounted under 'mountpoint' (/foo)\n\nvar router = express.Router()\nvar route = router.route(\"/bar\")\nroute.get(function(request, response, next) {\n  response.render(\"bar\")\n});\n\napp.use(router)\n\n\n```\n\n``` jade\n// /app/views/bar.jade\ndoctype html\nhtml(lang=\"en\")\n  head\n    meta(charset=\"utf-8\")\n    link(href=\"#{baseurl}/css/style.css\", rel=\"stylesheet\")\n\n```\n\nWhen requesting `/foo/bar` the link href should be `/foo/css/style.css` but it is `/css/style.css`\n\nMaybe i am using it in a way it was not intended. If so, please tell me how i can achieve the same result.\n\nThanks\ncheers\nThomas\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1975/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1975/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1974",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1974/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1974/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1974/events",
    "html_url": "https://github.com/expressjs/express/issues/1974",
    "id": 29256676,
    "node_id": "MDU6SXNzdWUyOTI1NjY3Ng==",
    "number": 1974,
    "title": "reference to \"app.use(app.router)\" in static-files example",
    "user": {
      "login": "lithiumjake",
      "id": 5306636,
      "node_id": "MDQ6VXNlcjUzMDY2MzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5306636?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lithiumjake",
      "html_url": "https://github.com/lithiumjake",
      "followers_url": "https://api.github.com/users/lithiumjake/followers",
      "following_url": "https://api.github.com/users/lithiumjake/following{/other_user}",
      "gists_url": "https://api.github.com/users/lithiumjake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lithiumjake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lithiumjake/subscriptions",
      "organizations_url": "https://api.github.com/users/lithiumjake/orgs",
      "repos_url": "https://api.github.com/users/lithiumjake/repos",
      "events_url": "https://api.github.com/users/lithiumjake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lithiumjake/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2014-03-12T11:56:19Z",
    "updated_at": "2014-03-12T14:27:36Z",
    "closed_at": "2014-03-12T14:27:36Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Minor head's up: in express/examples/static-files/index.js, the final comment still makes reference to \"app.use(app.router)\"\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1974/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1974/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1973",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1973/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1973/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1973/events",
    "html_url": "https://github.com/expressjs/express/issues/1973",
    "id": 29217105,
    "node_id": "MDU6SXNzdWUyOTIxNzEwNQ==",
    "number": 1973,
    "title": "static middleware is looking for utils.escape",
    "user": {
      "login": "brettlaforge",
      "id": 324460,
      "node_id": "MDQ6VXNlcjMyNDQ2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/324460?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brettlaforge",
      "html_url": "https://github.com/brettlaforge",
      "followers_url": "https://api.github.com/users/brettlaforge/followers",
      "following_url": "https://api.github.com/users/brettlaforge/following{/other_user}",
      "gists_url": "https://api.github.com/users/brettlaforge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brettlaforge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brettlaforge/subscriptions",
      "organizations_url": "https://api.github.com/users/brettlaforge/orgs",
      "repos_url": "https://api.github.com/users/brettlaforge/repos",
      "events_url": "https://api.github.com/users/brettlaforge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brettlaforge/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-03-11T21:04:37Z",
    "updated_at": "2014-03-12T01:35:49Z",
    "closed_at": "2014-03-12T01:35:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "It seems that the utils.escape method was removed in favour of the escape-html module. The static middleware is still referencing the utils.escape method.\n\nmiddleware/static.js - Line 70\nres.end('Redirecting to ' + utils.escape(target));\n\nThis method no longer exists, should the escape-html module be used instead?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1973/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1973/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1972",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1972/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1972/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1972/events",
    "html_url": "https://github.com/expressjs/express/issues/1972",
    "id": 29207251,
    "node_id": "MDU6SXNzdWUyOTIwNzI1MQ==",
    "number": 1972,
    "title": "expressjs.com: bug in API Reference? ",
    "user": {
      "login": "ThatGeoGuy",
      "id": 5060863,
      "node_id": "MDQ6VXNlcjUwNjA4NjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5060863?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ThatGeoGuy",
      "html_url": "https://github.com/ThatGeoGuy",
      "followers_url": "https://api.github.com/users/ThatGeoGuy/followers",
      "following_url": "https://api.github.com/users/ThatGeoGuy/following{/other_user}",
      "gists_url": "https://api.github.com/users/ThatGeoGuy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ThatGeoGuy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ThatGeoGuy/subscriptions",
      "organizations_url": "https://api.github.com/users/ThatGeoGuy/orgs",
      "repos_url": "https://api.github.com/users/ThatGeoGuy/repos",
      "events_url": "https://api.github.com/users/ThatGeoGuy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ThatGeoGuy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-03-11T19:03:03Z",
    "updated_at": "2014-03-12T01:35:56Z",
    "closed_at": "2014-03-12T01:35:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I was browsing through the documentation and noticed some basic errors with == vs === in the example code. \n\nUnder **app.configure([env], callback)**, there is an example section mentioning that using the app.configure() function is basically syntactic sugar for:\n\n```\n// all environments\napp.set('title', 'My Application');\n\n// development only\nif ('development' == app.get('env')) {\n  app.set('db uri', 'localhost/dev');\n}\n\n// production only\nif ('production' == app.get('env')) {\n  app.set('db uri', 'n.n.n.n/prod');\n}\n```\n\nYou'll notice that the == operator was used for comparison, when in JavaScript the === is likely what will give the expected behaviour. Obviously, both objects _should_ be strings (either \"development\" or \"production\", based on what process.env.NODE_ENV is), so this shouldn't cause any direct issue, but this example is not really an example of best practice. If I'm not making any sense, please recall the following: \n\n== Tests equality with type coercion (i.e. JavaScript tries to convert one object to the type of the object on the left. Therefore, '0' == 0 will evaluate to true, as will null == undefined, etc...) \n\n=== Tests equality without type coercion. This is important since it's typically what is expected when performing comparisons. We should expect '0' === 0 to be false, and we should expect null to be a separate singleton from undefined, since they mean different things. \n\nThere are a few sections in the API reference where this can be seen, most notably **req.secure()** and **Middleware -> basicAuth()**. \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1972/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1972/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1971",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1971/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1971/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1971/events",
    "html_url": "https://github.com/expressjs/express/pull/1971",
    "id": 29187474,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTM0MjU3NTI=",
    "number": 1971,
    "title": "Added codeclimate badge",
    "user": {
      "login": "frootloops",
      "id": 861670,
      "node_id": "MDQ6VXNlcjg2MTY3MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/861670?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frootloops",
      "html_url": "https://github.com/frootloops",
      "followers_url": "https://api.github.com/users/frootloops/followers",
      "following_url": "https://api.github.com/users/frootloops/following{/other_user}",
      "gists_url": "https://api.github.com/users/frootloops/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frootloops/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frootloops/subscriptions",
      "organizations_url": "https://api.github.com/users/frootloops/orgs",
      "repos_url": "https://api.github.com/users/frootloops/repos",
      "events_url": "https://api.github.com/users/frootloops/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frootloops/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2014-03-11T15:22:28Z",
    "updated_at": "2014-03-11T15:23:02Z",
    "closed_at": "2014-03-11T15:23:02Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1971",
      "html_url": "https://github.com/expressjs/express/pull/1971",
      "diff_url": "https://github.com/expressjs/express/pull/1971.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1971.patch",
      "merged_at": null
    },
    "body": "Just badge :)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1971/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1971/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1970",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1970/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1970/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1970/events",
    "html_url": "https://github.com/expressjs/express/pull/1970",
    "id": 29187388,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTM0MjU2OTM=",
    "number": 1970,
    "title": "Try coffee for tests",
    "user": {
      "login": "frootloops",
      "id": 861670,
      "node_id": "MDQ6VXNlcjg2MTY3MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/861670?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frootloops",
      "html_url": "https://github.com/frootloops",
      "followers_url": "https://api.github.com/users/frootloops/followers",
      "following_url": "https://api.github.com/users/frootloops/following{/other_user}",
      "gists_url": "https://api.github.com/users/frootloops/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frootloops/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frootloops/subscriptions",
      "organizations_url": "https://api.github.com/users/frootloops/orgs",
      "repos_url": "https://api.github.com/users/frootloops/repos",
      "events_url": "https://api.github.com/users/frootloops/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frootloops/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2014-03-11T15:21:32Z",
    "updated_at": "2014-03-11T15:22:15Z",
    "closed_at": "2014-03-11T15:22:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1970",
      "html_url": "https://github.com/expressjs/express/pull/1970",
      "diff_url": "https://github.com/expressjs/express/pull/1970.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1970.patch",
      "merged_at": null
    },
    "body": "What you think about coffee?\n\nFor example I'm convert one js file to coffee.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1970/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1970/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1969",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1969/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1969/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1969/events",
    "html_url": "https://github.com/expressjs/express/pull/1969",
    "id": 29179937,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTM0MjExNzI=",
    "number": 1969,
    "title": "Troubleshooting tests for OSX users",
    "user": {
      "login": "frootloops",
      "id": 861670,
      "node_id": "MDQ6VXNlcjg2MTY3MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/861670?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frootloops",
      "html_url": "https://github.com/frootloops",
      "followers_url": "https://api.github.com/users/frootloops/followers",
      "following_url": "https://api.github.com/users/frootloops/following{/other_user}",
      "gists_url": "https://api.github.com/users/frootloops/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frootloops/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frootloops/subscriptions",
      "organizations_url": "https://api.github.com/users/frootloops/orgs",
      "repos_url": "https://api.github.com/users/frootloops/repos",
      "events_url": "https://api.github.com/users/frootloops/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frootloops/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-03-11T13:56:15Z",
    "updated_at": "2014-03-12T05:42:53Z",
    "closed_at": "2014-03-12T05:37:36Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1969",
      "html_url": "https://github.com/expressjs/express/pull/1969",
      "diff_url": "https://github.com/expressjs/express/pull/1969.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1969.patch",
      "merged_at": null
    },
    "body": "Hi. I can't run tests on my macbook before change \"file descriptors\" limit.\n\nMaybe it helpful for new contributors :)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1969/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1969/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1968",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1968/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1968/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1968/events",
    "html_url": "https://github.com/expressjs/express/pull/1968",
    "id": 29165166,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTM0MTI0ODU=",
    "number": 1968,
    "title": "__defineGetter__ is replaced with Object.defineProperty in request.js",
    "user": {
      "login": "inca",
      "id": 118196,
      "node_id": "MDQ6VXNlcjExODE5Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118196?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/inca",
      "html_url": "https://github.com/inca",
      "followers_url": "https://api.github.com/users/inca/followers",
      "following_url": "https://api.github.com/users/inca/following{/other_user}",
      "gists_url": "https://api.github.com/users/inca/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/inca/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/inca/subscriptions",
      "organizations_url": "https://api.github.com/users/inca/orgs",
      "repos_url": "https://api.github.com/users/inca/repos",
      "events_url": "https://api.github.com/users/inca/events{/privacy}",
      "received_events_url": "https://api.github.com/users/inca/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-03-11T09:52:19Z",
    "updated_at": "2014-08-12T13:05:10Z",
    "closed_at": "2014-03-11T09:57:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1968",
      "html_url": "https://github.com/expressjs/express/pull/1968",
      "diff_url": "https://github.com/expressjs/express/pull/1968.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1968.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1968/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1968/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1967",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1967/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1967/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1967/events",
    "html_url": "https://github.com/expressjs/express/issues/1967",
    "id": 29156154,
    "node_id": "MDU6SXNzdWUyOTE1NjE1NA==",
    "number": 1967,
    "title": "Heavy use of deprecated __proto__",
    "user": {
      "login": "inca",
      "id": 118196,
      "node_id": "MDQ6VXNlcjExODE5Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118196?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/inca",
      "html_url": "https://github.com/inca",
      "followers_url": "https://api.github.com/users/inca/followers",
      "following_url": "https://api.github.com/users/inca/following{/other_user}",
      "gists_url": "https://api.github.com/users/inca/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/inca/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/inca/subscriptions",
      "organizations_url": "https://api.github.com/users/inca/orgs",
      "repos_url": "https://api.github.com/users/inca/repos",
      "events_url": "https://api.github.com/users/inca/events{/privacy}",
      "received_events_url": "https://api.github.com/users/inca/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 88345,
        "node_id": "MDU6TGFiZWw4ODM0NQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/3.x",
        "name": "3.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 8636393,
        "node_id": "MDU6TGFiZWw4NjM2Mzkz",
        "url": "https://api.github.com/repos/expressjs/express/labels/wontfix",
        "name": "wontfix",
        "color": "ffffff",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2014-03-11T06:10:35Z",
    "updated_at": "2014-07-29T02:17:32Z",
    "closed_at": "2014-03-11T06:16:11Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Don't know if this came up before, but I noticed heavy use of `__proto__` throughout Express codebase, which is deprecated and seems to be [heavily discouraged by MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto).\n\nNow, since Express 4 is a fresh start, I was wondering if these fragments could be revisited, too? Frankly, I don't know if this even possible, or is there any good reason to stick with `__proto__`, so any explanations on this one would be very much appreciated.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1967/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1967/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1966",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1966/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1966/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1966/events",
    "html_url": "https://github.com/expressjs/express/issues/1966",
    "id": 29151706,
    "node_id": "MDU6SXNzdWUyOTE1MTcwNg==",
    "number": 1966,
    "title": "routes.route multiple functions",
    "user": {
      "login": "jamlfy",
      "id": 1652887,
      "node_id": "MDQ6VXNlcjE2NTI4ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1652887?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamlfy",
      "html_url": "https://github.com/jamlfy",
      "followers_url": "https://api.github.com/users/jamlfy/followers",
      "following_url": "https://api.github.com/users/jamlfy/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamlfy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamlfy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamlfy/subscriptions",
      "organizations_url": "https://api.github.com/users/jamlfy/orgs",
      "repos_url": "https://api.github.com/users/jamlfy/repos",
      "events_url": "https://api.github.com/users/jamlfy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamlfy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2014-03-11T03:33:08Z",
    "updated_at": "2014-03-11T16:56:19Z",
    "closed_at": "2014-03-11T06:16:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "It should work\n\n``` js\nrouter.route('/users')\n  .all(fn1, fn5)\n  .get(fn2, fn3, function(data, req, res){\n   res.send(\"ok GET\");\n})\n  .put(fn3, fn6)\n  .post(fn4, fn3, function(data, req, res){\n   res.send(\"ok POST\");\n})\n  .delete(fn2);\n```\n\nIn express 4.x\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1966/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1966/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1965",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1965/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1965/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1965/events",
    "html_url": "https://github.com/expressjs/express/issues/1965",
    "id": 29114652,
    "node_id": "MDU6SXNzdWUyOTExNDY1Mg==",
    "number": 1965,
    "title": "app.route should return a router",
    "user": {
      "login": "blakeembrey",
      "id": 1088987,
      "node_id": "MDQ6VXNlcjEwODg5ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1088987?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blakeembrey",
      "html_url": "https://github.com/blakeembrey",
      "followers_url": "https://api.github.com/users/blakeembrey/followers",
      "following_url": "https://api.github.com/users/blakeembrey/following{/other_user}",
      "gists_url": "https://api.github.com/users/blakeembrey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blakeembrey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blakeembrey/subscriptions",
      "organizations_url": "https://api.github.com/users/blakeembrey/orgs",
      "repos_url": "https://api.github.com/users/blakeembrey/repos",
      "events_url": "https://api.github.com/users/blakeembrey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blakeembrey/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-03-10T17:26:37Z",
    "updated_at": "2014-03-10T20:08:50Z",
    "closed_at": "2014-03-10T19:37:03Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "The `app.route` method could return a router to do route nesting, which might be easier for people new to the framework. For example:\n\n``` js\nvar app = express();\n\napp\n  .route('/:foo')\n    .get('/', function () { ... })\n    .route('/:bar')\n      .put('/', function () { ... })\n      .use(function () { ... });\n```\n\nTo do this at the moment you would need to create two routers and mount one under another and then under the app, completely avoiding the use of `.route`.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1965/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1965/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1964",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1964/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1964/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1964/events",
    "html_url": "https://github.com/expressjs/express/pull/1964",
    "id": 29114171,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTMzODI1NzM=",
    "number": 1964,
    "title": "Modular routing",
    "user": {
      "login": "blakeembrey",
      "id": 1088987,
      "node_id": "MDQ6VXNlcjEwODg5ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1088987?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blakeembrey",
      "html_url": "https://github.com/blakeembrey",
      "followers_url": "https://api.github.com/users/blakeembrey/followers",
      "following_url": "https://api.github.com/users/blakeembrey/following{/other_user}",
      "gists_url": "https://api.github.com/users/blakeembrey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blakeembrey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blakeembrey/subscriptions",
      "organizations_url": "https://api.github.com/users/blakeembrey/orgs",
      "repos_url": "https://api.github.com/users/blakeembrey/repos",
      "events_url": "https://api.github.com/users/blakeembrey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blakeembrey/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 18,
    "created_at": "2014-03-10T17:20:39Z",
    "updated_at": "2015-04-26T03:18:21Z",
    "closed_at": "2014-03-13T16:29:48Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1964",
      "html_url": "https://github.com/expressjs/express/pull/1964",
      "diff_url": "https://github.com/expressjs/express/pull/1964.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1964.patch",
      "merged_at": "2014-03-13T16:29:48Z"
    },
    "body": "Enable dynamic `.use` mounting for more modular applications. For example:\n\n``` js\nvar mount = app.route('/').get(function (req) {\n  console.log(req.params.route); // Works!\n});\n\napp.use('/:route', mount);\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1964/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1964/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1963",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1963/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1963/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1963/events",
    "html_url": "https://github.com/expressjs/express/issues/1963",
    "id": 29100221,
    "node_id": "MDU6SXNzdWUyOTEwMDIyMQ==",
    "number": 1963,
    "title": "A naming convention for Express 4 middleware?",
    "user": {
      "login": "benpptung",
      "id": 364314,
      "node_id": "MDQ6VXNlcjM2NDMxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/364314?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benpptung",
      "html_url": "https://github.com/benpptung",
      "followers_url": "https://api.github.com/users/benpptung/followers",
      "following_url": "https://api.github.com/users/benpptung/following{/other_user}",
      "gists_url": "https://api.github.com/users/benpptung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benpptung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benpptung/subscriptions",
      "organizations_url": "https://api.github.com/users/benpptung/orgs",
      "repos_url": "https://api.github.com/users/benpptung/repos",
      "events_url": "https://api.github.com/users/benpptung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benpptung/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-03-10T14:43:18Z",
    "updated_at": "2014-03-11T06:18:00Z",
    "closed_at": "2014-03-11T06:18:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "While trying to switch to express 4, I've found It is difficult to distinguish express/connect middleware from normal npm module by their package name. Is it possible to have a naming convention like grunt to have the middleware module named by connect-xxxx or express-xxxx or something else ? \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1963/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1963/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1962",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1962/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1962/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1962/events",
    "html_url": "https://github.com/expressjs/express/issues/1962",
    "id": 29069357,
    "node_id": "MDU6SXNzdWUyOTA2OTM1Nw==",
    "number": 1962,
    "title": "req.auth is not documented in expressjs.com",
    "user": {
      "login": "jonathanong",
      "id": 643505,
      "node_id": "MDQ6VXNlcjY0MzUwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/643505?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanong",
      "html_url": "https://github.com/jonathanong",
      "followers_url": "https://api.github.com/users/jonathanong/followers",
      "following_url": "https://api.github.com/users/jonathanong/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanong/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanong/orgs",
      "repos_url": "https://api.github.com/users/jonathanong/repos",
      "events_url": "https://api.github.com/users/jonathanong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanong/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-03-10T02:30:39Z",
    "updated_at": "2014-03-10T02:49:23Z",
    "closed_at": "2014-03-10T02:49:23Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "should we just remove it? \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1962/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1962/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1961",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1961/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1961/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1961/events",
    "html_url": "https://github.com/expressjs/express/issues/1961",
    "id": 29067242,
    "node_id": "MDU6SXNzdWUyOTA2NzI0Mg==",
    "number": 1961,
    "title": "4.0RC2 Crash: TypeError: Cannot read property 'length' of undefined at next_layer",
    "user": {
      "login": "Twipped",
      "id": 231157,
      "node_id": "MDQ6VXNlcjIzMTE1Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/231157?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Twipped",
      "html_url": "https://github.com/Twipped",
      "followers_url": "https://api.github.com/users/Twipped/followers",
      "following_url": "https://api.github.com/users/Twipped/following{/other_user}",
      "gists_url": "https://api.github.com/users/Twipped/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Twipped/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Twipped/subscriptions",
      "organizations_url": "https://api.github.com/users/Twipped/orgs",
      "repos_url": "https://api.github.com/users/Twipped/repos",
      "events_url": "https://api.github.com/users/Twipped/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Twipped/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-03-10T00:52:28Z",
    "updated_at": "2014-03-10T00:59:47Z",
    "closed_at": "2014-03-10T00:59:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm getting a crash when using a 4.0rc2 router with a very basic url pattern.\n\n``` js\nmodule.exports = exports = function () {\n    var router = express.Router();\n    router.get('/track/:trackid', exports.getMain);\n    return router;\n};\n\n//exports.getMain is further down the file, but not relevant\n```\n\nIn the main app I load this router in as:\n\n``` js\napp.use(require('./routes/root')());\n```\n\nCrash happens when I try to visit `http://localhost:8000/track/2391404`\n\nFull stack trace:\n\n```\nTypeError: Cannot read property 'length' of undefined\n    at next_layer (/srv/node_modules/express/lib/router/route.js:84:29)\n    at Route.dispatch (/srv/node_modules/express/lib/router/route.js:98:5)\n    at c (/srv/node_modules/express/lib/router/index.js:195:24)\n    at param (/srv/node_modules/express/lib/router/index.js:268:14)\n    at param (/srv/node_modules/express/lib/router/index.js:280:16)\n    at Function.proto.process_params (/srv/node_modules/express/lib/router/index.js:296:3)\n    at next (/srv/node_modules/express/lib/router/index.js:189:19)\n    at Function.proto.handle (/srv/node_modules/express/lib/router/index.js:234:5)\n    at Layer.router (/srv/node_modules/express/lib/router/index.js:23:12)\n    at trim_prefix (/srv/node_modules/express/lib/router/index.js:226:17)\nTypeError: Cannot read property 'length' of undefined\n    at next_layer (/srv/node_modules/express/lib/router/route.js:84:29)\n    at Route.dispatch (/srv/node_modules/express/lib/router/route.js:98:5)\n    at c (/srv/node_modules/express/lib/router/index.js:195:24)\n    at param (/srv/node_modules/express/lib/router/index.js:286:5)\n    at Function.proto.process_params (/srv/node_modules/express/lib/router/index.js:296:3)\n    at next (/srv/node_modules/express/lib/router/index.js:189:19)\n    at Function.proto.handle (/srv/node_modules/express/lib/router/index.js:234:5)\n    at Layer.router (/srv/node_modules/express/lib/router/index.js:23:12)\n    at trim_prefix (/srv/node_modules/express/lib/router/index.js:226:17)\n    at c (/srv/node_modules/express/lib/router/index.js:198:9)\n```\n\nCrashing at a call to `var arity = layer.handle.length;`.  I tried replacing the node_module with the current master branch and am still getting the same crash, so I don't think it's been fixed since RC2 went out.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1961/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1961/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1960",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1960/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1960/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1960/events",
    "html_url": "https://github.com/expressjs/express/pull/1960",
    "id": 29043092,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTMzNTA3MjU=",
    "number": 1960,
    "title": "Fixed Router.VERB doesn't work with multiple callbacks.",
    "user": {
      "login": "shin1m",
      "id": 1365743,
      "node_id": "MDQ6VXNlcjEzNjU3NDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1365743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shin1m",
      "html_url": "https://github.com/shin1m",
      "followers_url": "https://api.github.com/users/shin1m/followers",
      "following_url": "https://api.github.com/users/shin1m/following{/other_user}",
      "gists_url": "https://api.github.com/users/shin1m/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shin1m/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shin1m/subscriptions",
      "organizations_url": "https://api.github.com/users/shin1m/orgs",
      "repos_url": "https://api.github.com/users/shin1m/repos",
      "events_url": "https://api.github.com/users/shin1m/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shin1m/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2014-03-09T13:23:23Z",
    "updated_at": "2014-07-29T04:18:20Z",
    "closed_at": "2014-03-24T15:10:51Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1960",
      "html_url": "https://github.com/expressjs/express/pull/1960",
      "diff_url": "https://github.com/expressjs/express/pull/1960.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1960.patch",
      "merged_at": null
    },
    "body": "I fixed Router.all as well.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1960/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1960/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1959",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1959/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1959/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1959/events",
    "html_url": "https://github.com/expressjs/express/issues/1959",
    "id": 29021766,
    "node_id": "MDU6SXNzdWUyOTAyMTc2Ng==",
    "number": 1959,
    "title": "Errors with jade >=0.31.0",
    "user": {
      "login": "jamielinux",
      "id": 2598089,
      "node_id": "MDQ6VXNlcjI1OTgwODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2598089?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamielinux",
      "html_url": "https://github.com/jamielinux",
      "followers_url": "https://api.github.com/users/jamielinux/followers",
      "following_url": "https://api.github.com/users/jamielinux/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamielinux/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamielinux/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamielinux/subscriptions",
      "organizations_url": "https://api.github.com/users/jamielinux/orgs",
      "repos_url": "https://api.github.com/users/jamielinux/repos",
      "events_url": "https://api.github.com/users/jamielinux/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamielinux/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-03-08T13:49:43Z",
    "updated_at": "2014-03-08T14:16:35Z",
    "closed_at": "2014-03-08T14:16:35Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Jade 0.31.0 introduced [a change](https://github.com/visionmedia/jade/commit/1e8477706ade2be55ca3e4b8180f56a643d63d4e) that causes the following three errors when running `make test`:\n\n```\n  411 passing (1s)\n  3 failing\n\n  1) app .render(name, fn) when an error occurs should invoke the callback:\n     Uncaught AssertionError: expected '/builddir/build/BUILD/package/test/fixtures/user.jade:1\\n  > 1| p= user.name\\n    2| \\n\\nCannot read property \\'name\\' of undefined' to match /user is not defined/\n      at Assertion.prop.(anonymous function) (/usr/lib/node_modules/should/lib/should.js:60:14)\n      at /builddir/build/BUILD/package/test/app.render.js:77:32\n      at process._tickCallback (node.js:415:13)\n\n  2) res .render(name) when an error occurs should next(err):\n     Error: expected body '/builddir/build/BUILD/package/test/fixtures/user.jade:1\\n  > 1| p= user.name\\n    2| \\n\\nCannot read property \\'name\\' of undefined' to match /user is not defined/\n      at error (/builddir/build/BUILD/package/node_modules/supertest/lib/test.js:227:13)\n      at Test.assert (/builddir/build/BUILD/package/node_modules/supertest/lib/test.js:176:23)\n      at /builddir/build/BUILD/package/node_modules/supertest/lib/test.js:126:10\n      at Test.Request.callback (/builddir/build/BUILD/package/node_modules/supertest/node_modules/superagent/lib/node/index.js:654:30)\n      at Test.<anonymous> (/builddir/build/BUILD/package/node_modules/supertest/node_modules/superagent/lib/node/index.js:131:10)\n      at Test.EventEmitter.emit (events.js:95:17)\n      at IncomingMessage.<anonymous> (/builddir/build/BUILD/package/node_modules/supertest/node_modules/superagent/lib/node/index.js:802:12)\n      at IncomingMessage.EventEmitter.emit (events.js:117:20)\n      at _stream_readable.js:920:16\n      at process._tickCallback (node.js:415:13)\n\n  3) res .render(name, fn) when an error occurs should pass it to the callback:\n     Error: expected body '/builddir/build/BUILD/package/test/fixtures/user.jade:1\\n  > 1| p= user.name\\n    2| \\n\\nCannot read property \\'name\\' of undefined' to match /is not defined/\n      at error (/builddir/build/BUILD/package/node_modules/supertest/lib/test.js:227:13)\n      at Test.assert (/builddir/build/BUILD/package/node_modules/supertest/lib/test.js:176:23)\n      at /builddir/build/BUILD/package/node_modules/supertest/lib/test.js:126:10\n      at Test.Request.callback (/builddir/build/BUILD/package/node_modules/supertest/node_modules/superagent/lib/node/index.js:654:30)\n      at Test.<anonymous> (/builddir/build/BUILD/package/node_modules/supertest/node_modules/superagent/lib/node/index.js:131:10)\n      at Test.EventEmitter.emit (events.js:95:17)\n      at IncomingMessage.<anonymous> (/builddir/build/BUILD/package/node_modules/supertest/node_modules/superagent/lib/node/index.js:802:12)\n      at IncomingMessage.EventEmitter.emit (events.js:117:20)\n      at _stream_readable.js:920:16\n      at process._tickCallback (node.js:415:13)\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1959/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1959/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1958",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1958/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1958/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1958/events",
    "html_url": "https://github.com/expressjs/express/pull/1958",
    "id": 29007402,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTMzMzQ3MzM=",
    "number": 1958,
    "title": "remove bodyParser Connect 3.0 deprecation alert",
    "user": {
      "login": "PatrickJS",
      "id": 1016365,
      "node_id": "MDQ6VXNlcjEwMTYzNjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1016365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PatrickJS",
      "html_url": "https://github.com/PatrickJS",
      "followers_url": "https://api.github.com/users/PatrickJS/followers",
      "following_url": "https://api.github.com/users/PatrickJS/following{/other_user}",
      "gists_url": "https://api.github.com/users/PatrickJS/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PatrickJS/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PatrickJS/subscriptions",
      "organizations_url": "https://api.github.com/users/PatrickJS/orgs",
      "repos_url": "https://api.github.com/users/PatrickJS/repos",
      "events_url": "https://api.github.com/users/PatrickJS/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PatrickJS/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-03-07T23:30:46Z",
    "updated_at": "2014-07-19T15:39:42Z",
    "closed_at": "2014-03-12T01:36:20Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1958",
      "html_url": "https://github.com/expressjs/express/pull/1958",
      "diff_url": "https://github.com/expressjs/express/pull/1958.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1958.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1958/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1958/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1957",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1957/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1957/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1957/events",
    "html_url": "https://github.com/expressjs/express/issues/1957",
    "id": 28998320,
    "node_id": "MDU6SXNzdWUyODk5ODMyMA==",
    "number": 1957,
    "title": "acceptsLanguage and Language",
    "user": {
      "login": "jamlfy",
      "id": 1652887,
      "node_id": "MDQ6VXNlcjE2NTI4ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1652887?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamlfy",
      "html_url": "https://github.com/jamlfy",
      "followers_url": "https://api.github.com/users/jamlfy/followers",
      "following_url": "https://api.github.com/users/jamlfy/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamlfy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamlfy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamlfy/subscriptions",
      "organizations_url": "https://api.github.com/users/jamlfy/orgs",
      "repos_url": "https://api.github.com/users/jamlfy/repos",
      "events_url": "https://api.github.com/users/jamlfy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamlfy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-03-07T21:03:16Z",
    "updated_at": "2014-03-07T23:09:54Z",
    "closed_at": "2014-03-07T21:53:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "`acceptsLanguage` must be a variable in which the browser sends. It is a list of languages ​​according to country. As seen here on header\n\n``` json\n{ \n     host: 'localhost:3006',\n     'user-agent': 'Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:27.0) Gecko/20100101 Firefox/27.0',\n     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',\n     'accept-language': 'en-US,en;q=0.5',\n     'accept-encoding': 'gzip, deflate',\n     dnt: '0',\n     cookie: '',\n     connection: 'keep-alive',\n     'cache-control': 'max-age=0' \n}\n```\n\nThe request can not be accepted given language, but the responce, yes. My proposal is\n\n``` js\nreq.acceptsLanguage // Langs browser\n//-> [ 'es', 'en' ]\nres.acceptsLanguage('pt') // Only accept PT\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1957/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1957/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1956",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1956/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1956/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1956/events",
    "html_url": "https://github.com/expressjs/express/issues/1956",
    "id": 28982193,
    "node_id": "MDU6SXNzdWUyODk4MjE5Mw==",
    "number": 1956,
    "title": "Fail! express.session.store()",
    "user": {
      "login": "jamlfy",
      "id": 1652887,
      "node_id": "MDQ6VXNlcjE2NTI4ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1652887?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamlfy",
      "html_url": "https://github.com/jamlfy",
      "followers_url": "https://api.github.com/users/jamlfy/followers",
      "following_url": "https://api.github.com/users/jamlfy/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamlfy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamlfy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamlfy/subscriptions",
      "organizations_url": "https://api.github.com/users/jamlfy/orgs",
      "repos_url": "https://api.github.com/users/jamlfy/repos",
      "events_url": "https://api.github.com/users/jamlfy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamlfy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2014-03-07T17:17:43Z",
    "updated_at": "2014-03-08T00:43:10Z",
    "closed_at": "2014-03-07T19:54:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I was updating the package express. And I realized that there is no `express.session.Store()`, to create session with databases\n\n``` js\nSessionStore.prototype = new express.session.Store();\n```\n\nAs is the new way of doing this sort of thing, or where he left this function?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1956/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1956/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1955",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1955/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1955/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1955/events",
    "html_url": "https://github.com/expressjs/express/issues/1955",
    "id": 28963263,
    "node_id": "MDU6SXNzdWUyODk2MzI2Mw==",
    "number": 1955,
    "title": "Named routes",
    "user": {
      "login": "dariuszp",
      "id": 249863,
      "node_id": "MDQ6VXNlcjI0OTg2Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/249863?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dariuszp",
      "html_url": "https://github.com/dariuszp",
      "followers_url": "https://api.github.com/users/dariuszp/followers",
      "following_url": "https://api.github.com/users/dariuszp/following{/other_user}",
      "gists_url": "https://api.github.com/users/dariuszp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dariuszp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dariuszp/subscriptions",
      "organizations_url": "https://api.github.com/users/dariuszp/orgs",
      "repos_url": "https://api.github.com/users/dariuszp/repos",
      "events_url": "https://api.github.com/users/dariuszp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dariuszp/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 14,
    "created_at": "2014-03-07T12:55:54Z",
    "updated_at": "2014-03-19T07:40:37Z",
    "closed_at": "2014-03-07T14:53:03Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi guys,\nthere is something I would welcome in Ex 4. I was planning to wrap express with few missing (in my opinion) features to speed up development and make Ex apps better to maintain. \nAfter some talk we decided to wrap some npm modules into our own framework BUT before that I created small test to check how it would work.\n\nCode is here:\nhttps://github.com/dariuszp/express-jet/blob/develop/extension/namedRoutes.js\n\nWhat I did here was simple. I've added labels to routes. So you still can use for example .post() but you can call .namedPost().\n\nThis way route can be labeled. Next step was to extend Swig (template engine we are using) with url() function that would generate routes based on labels. Like this:\n\nCheck &lt;a href=\"{{ url('something interesting', { slug: 'cool-stuff' }) }}\">this</a&gt;\n\nIF \"slug\" is in route as param we would replace :slug with \"cool-stuff\". If not we would append slug parameter to query string. This work only if you provide path as string with :name as params.\n\nThis way we can manipulate routes without need to change them in templates.\n\nIdea is taken from Symfony 2 framework. \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1955/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1955/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1954",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1954/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1954/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1954/events",
    "html_url": "https://github.com/expressjs/express/issues/1954",
    "id": 28920937,
    "node_id": "MDU6SXNzdWUyODkyMDkzNw==",
    "number": 1954,
    "title": "Option/Function to get root url of request",
    "user": {
      "login": "newmanw",
      "id": 3382274,
      "node_id": "MDQ6VXNlcjMzODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3382274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/newmanw",
      "html_url": "https://github.com/newmanw",
      "followers_url": "https://api.github.com/users/newmanw/followers",
      "following_url": "https://api.github.com/users/newmanw/following{/other_user}",
      "gists_url": "https://api.github.com/users/newmanw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/newmanw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/newmanw/subscriptions",
      "organizations_url": "https://api.github.com/users/newmanw/orgs",
      "repos_url": "https://api.github.com/users/newmanw/repos",
      "events_url": "https://api.github.com/users/newmanw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/newmanw/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-03-06T22:26:38Z",
    "updated_at": "2014-03-08T19:51:08Z",
    "closed_at": "2014-03-06T22:29:32Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When building true restful api its mandatory that you include links in your responses.  Shame that you have to build the url each time from pieces of the request.\n\n```\n      var rootUrl = req.protocol + '://' + req.get('Host');\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1954/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1954/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1953",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1953/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1953/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1953/events",
    "html_url": "https://github.com/expressjs/express/issues/1953",
    "id": 28876084,
    "node_id": "MDU6SXNzdWUyODg3NjA4NA==",
    "number": 1953,
    "title": "Multiple handlers for router.route('path').VERB()",
    "user": {
      "login": "codewarmer",
      "id": 4745457,
      "node_id": "MDQ6VXNlcjQ3NDU0NTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4745457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codewarmer",
      "html_url": "https://github.com/codewarmer",
      "followers_url": "https://api.github.com/users/codewarmer/followers",
      "following_url": "https://api.github.com/users/codewarmer/following{/other_user}",
      "gists_url": "https://api.github.com/users/codewarmer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codewarmer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codewarmer/subscriptions",
      "organizations_url": "https://api.github.com/users/codewarmer/orgs",
      "repos_url": "https://api.github.com/users/codewarmer/repos",
      "events_url": "https://api.github.com/users/codewarmer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codewarmer/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2014-03-06T12:47:58Z",
    "updated_at": "2014-03-07T04:56:43Z",
    "closed_at": "2014-03-06T23:07:45Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The route VERB accepts only one handler, and when I need to check an access for a certain method, I must write it as:\n\n```\nrouter.route(/articles)\n  .get(handle)\n  .post(checkAuth)\n  .post(saveArticle);\n```\n\nIt will be much better if I could add a multiple handlers into one method:\n\n```\nrouter.route(/articles)\n  .get(handle)\n  .post(checkAuth, saveArticle);\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1953/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1953/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1952",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1952/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1952/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1952/events",
    "html_url": "https://github.com/expressjs/express/issues/1952",
    "id": 28861268,
    "node_id": "MDU6SXNzdWUyODg2MTI2OA==",
    "number": 1952,
    "title": "set-header: only set charset if not already set",
    "user": {
      "login": "jonathanong",
      "id": 643505,
      "node_id": "MDQ6VXNlcjY0MzUwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/643505?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanong",
      "html_url": "https://github.com/jonathanong",
      "followers_url": "https://api.github.com/users/jonathanong/followers",
      "following_url": "https://api.github.com/users/jonathanong/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanong/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanong/orgs",
      "repos_url": "https://api.github.com/users/jonathanong/repos",
      "events_url": "https://api.github.com/users/jonathanong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanong/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2014-03-06T09:42:16Z",
    "updated_at": "2014-03-08T00:33:22Z",
    "closed_at": "2014-03-08T00:33:22Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "https://github.com/visionmedia/express/commit/3112f92d08198a3b009fab53584c420e8808b31d#diff-d86a59ede7d999db4b7bc43cb25a1c11R798\n\nprone to errors\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1952/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1952/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1951",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1951/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1951/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1951/events",
    "html_url": "https://github.com/expressjs/express/pull/1951",
    "id": 28826838,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTMyMzI4MTk=",
    "number": 1951,
    "title": "Pass object to middleware",
    "user": {
      "login": "sjonnet19",
      "id": 1060672,
      "node_id": "MDQ6VXNlcjEwNjA2NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1060672?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sjonnet19",
      "html_url": "https://github.com/sjonnet19",
      "followers_url": "https://api.github.com/users/sjonnet19/followers",
      "following_url": "https://api.github.com/users/sjonnet19/following{/other_user}",
      "gists_url": "https://api.github.com/users/sjonnet19/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sjonnet19/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sjonnet19/subscriptions",
      "organizations_url": "https://api.github.com/users/sjonnet19/orgs",
      "repos_url": "https://api.github.com/users/sjonnet19/repos",
      "events_url": "https://api.github.com/users/sjonnet19/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sjonnet19/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2014-03-05T21:21:09Z",
    "updated_at": "2014-03-06T23:05:17Z",
    "closed_at": "2014-03-06T23:05:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1951",
      "html_url": "https://github.com/expressjs/express/pull/1951",
      "diff_url": "https://github.com/expressjs/express/pull/1951.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1951.patch",
      "merged_at": null
    },
    "body": "Middleware expects a object i.e connect. So we could opt to change the middleware instead and may make more sense to.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1951/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1951/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1950",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1950/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1950/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1950/events",
    "html_url": "https://github.com/expressjs/express/issues/1950",
    "id": 28821693,
    "node_id": "MDU6SXNzdWUyODgyMTY5Mw==",
    "number": 1950,
    "title": "Configure invoke falling on ",
    "user": {
      "login": "nitsugahcram",
      "id": 1857880,
      "node_id": "MDQ6VXNlcjE4NTc4ODA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1857880?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nitsugahcram",
      "html_url": "https://github.com/nitsugahcram",
      "followers_url": "https://api.github.com/users/nitsugahcram/followers",
      "following_url": "https://api.github.com/users/nitsugahcram/following{/other_user}",
      "gists_url": "https://api.github.com/users/nitsugahcram/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nitsugahcram/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nitsugahcram/subscriptions",
      "organizations_url": "https://api.github.com/users/nitsugahcram/orgs",
      "repos_url": "https://api.github.com/users/nitsugahcram/repos",
      "events_url": "https://api.github.com/users/nitsugahcram/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nitsugahcram/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2014-03-05T20:14:23Z",
    "updated_at": "2014-03-05T20:29:17Z",
    "closed_at": "2014-03-05T20:15:09Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I installed the express module using npm install express and my app is falling at configure method.\n\nPakckage Json \n \"dependencies\": {\n     \"express\": \"~4.0.0-rc2\",\n  },\nC:\\dashboard\\analytics.dashboard.js:15\nappServer.configure(function () {\n          ^\nTypeError: Object function (req, res, next) {\n    app.handle(req, res, next);\n  } has no method 'configure'\n    at Object.<anonymous> (C:\\dcg\\iotkit-analytics\\analytics-realtime-platform\\dashboard\\analytics.dashboard.js:15:11)\n    at Module._compile (module.js:456:26)\n    at Object.Module._extensions..js (module.js:474:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Module.runMain [as _onTimeout](module.js:497:10)\n    at Timer.listOnTimeout [as ontimeout](timers.js:110:15)\n\nIt's working with 3.4.8 \nregards\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1950/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1950/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  }
]