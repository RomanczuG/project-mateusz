[
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3164",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3164/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3164/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3164/events",
    "html_url": "https://github.com/expressjs/express/issues/3164",
    "id": 198447612,
    "node_id": "MDU6SXNzdWUxOTg0NDc2MTI=",
    "number": 3164,
    "title": "Why is __proto__ used instead of setPrototypeOf in router/index.js",
    "user": {
      "login": "maxkoretskyi",
      "id": 6124091,
      "node_id": "MDQ6VXNlcjYxMjQwOTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6124091?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maxkoretskyi",
      "html_url": "https://github.com/maxkoretskyi",
      "followers_url": "https://api.github.com/users/maxkoretskyi/followers",
      "following_url": "https://api.github.com/users/maxkoretskyi/following{/other_user}",
      "gists_url": "https://api.github.com/users/maxkoretskyi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maxkoretskyi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maxkoretskyi/subscriptions",
      "organizations_url": "https://api.github.com/users/maxkoretskyi/orgs",
      "repos_url": "https://api.github.com/users/maxkoretskyi/repos",
      "events_url": "https://api.github.com/users/maxkoretskyi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maxkoretskyi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-01-03T10:38:21Z",
    "updated_at": "2017-02-19T18:14:17Z",
    "closed_at": "2017-01-03T11:33:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm reading a source code at `router/index.js` and there's the following:\r\n```js\r\nvar proto = module.exports = function(options) {\r\n  var opts = options || {};\r\n\r\n  function router(req, res, next) {\r\n    router.handle(req, res, next);\r\n  }\r\n\r\n  // mixin Router class functions\r\n  router.__proto__ = proto;\r\n         ^^^^^^^^^\r\n\r\n  router.params = {};\r\n  router._params = [];\r\n  router.caseSensitive = opts.caseSensitive;\r\n  router.mergeParams = opts.mergeParams;\r\n  router.strict = opts.strict;\r\n  router.stack = [];\r\n\r\n  return router;\r\n};\r\n```\r\n\r\nWhy is the old deprecated `__proto__` method used instead of a modern `setPrototypeOf `? MDN warns against using `__proto__` [here](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto).",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3164/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3164/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3163",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3163/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3163/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3163/events",
    "html_url": "https://github.com/expressjs/express/issues/3163",
    "id": 198272055,
    "node_id": "MDU6SXNzdWUxOTgyNzIwNTU=",
    "number": 3163,
    "title": "Views are not cached in production mode by default",
    "user": {
      "login": "Tarabass",
      "id": 462513,
      "node_id": "MDQ6VXNlcjQ2MjUxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/462513?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Tarabass",
      "html_url": "https://github.com/Tarabass",
      "followers_url": "https://api.github.com/users/Tarabass/followers",
      "following_url": "https://api.github.com/users/Tarabass/following{/other_user}",
      "gists_url": "https://api.github.com/users/Tarabass/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Tarabass/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Tarabass/subscriptions",
      "organizations_url": "https://api.github.com/users/Tarabass/orgs",
      "repos_url": "https://api.github.com/users/Tarabass/repos",
      "events_url": "https://api.github.com/users/Tarabass/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Tarabass/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-01-01T16:00:15Z",
    "updated_at": "2017-01-01T19:29:00Z",
    "closed_at": "2017-01-01T19:29:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have a problem with ExpressJs not caching my views when NODE_ENV is set to production. I'm using the EJS template engine. Here is my code:\r\n\r\n_npm script in package.json_\r\n`\"start\": \"set NODE_ENV=production && node ./bin/www\"`\r\n\r\n_app.js_\r\n`console.log(app.get('env')) => logs production`\r\n`console.log(app.get('view cache')) => logs undefined`\r\n`app.set('view cache', true)`\r\n`console.log(app.get('view cache')) => logs true`\r\n\r\nSo it seems that when I set the NODE_ENV environment variable to production ExpressJs is not enabling view cache, but when I enable it manually by calling app.set('view cache', true) it will.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3163/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3163/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3162",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3162/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3162/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3162/events",
    "html_url": "https://github.com/expressjs/express/issues/3162",
    "id": 198231507,
    "node_id": "MDU6SXNzdWUxOTgyMzE1MDc=",
    "number": 3162,
    "title": "How i can block user request?",
    "user": {
      "login": "zmikolaj",
      "id": 5605754,
      "node_id": "MDQ6VXNlcjU2MDU3NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5605754?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zmikolaj",
      "html_url": "https://github.com/zmikolaj",
      "followers_url": "https://api.github.com/users/zmikolaj/followers",
      "following_url": "https://api.github.com/users/zmikolaj/following{/other_user}",
      "gists_url": "https://api.github.com/users/zmikolaj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zmikolaj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zmikolaj/subscriptions",
      "organizations_url": "https://api.github.com/users/zmikolaj/orgs",
      "repos_url": "https://api.github.com/users/zmikolaj/repos",
      "events_url": "https://api.github.com/users/zmikolaj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zmikolaj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-12-31T12:59:46Z",
    "updated_at": "2016-12-31T23:02:27Z",
    "closed_at": "2016-12-31T23:02:27Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello,\r\nhow i can block user request? I want to make that user can do one request per 4 seconds.\r\n\r\n```js\r\napp.post('/user/test', function(req, res) {\r\n          if(req.session.blockRequest + 4 >= Math.floor(Date.now() / 1000)) {\r\n                res.json({ success: false });\r\n                return;\r\n            } else {\r\n                console.log('All good');\r\n            }\r\n        }\r\n        req.session.blockRequest = Math.floor(Date.now() / 1000);\r\n       //rest code\r\n});\r\n```\r\nBut its not working well, if user do spam with request i will do 2 requests :(\r\nHow i can block it properly?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3162/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3162/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3161",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3161/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3161/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3161/events",
    "html_url": "https://github.com/expressjs/express/issues/3161",
    "id": 198051519,
    "node_id": "MDU6SXNzdWUxOTgwNTE1MTk=",
    "number": 3161,
    "title": "View engine view path results to default after set manually",
    "user": {
      "login": "akotulu",
      "id": 1204475,
      "node_id": "MDQ6VXNlcjEyMDQ0NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1204475?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akotulu",
      "html_url": "https://github.com/akotulu",
      "followers_url": "https://api.github.com/users/akotulu/followers",
      "following_url": "https://api.github.com/users/akotulu/following{/other_user}",
      "gists_url": "https://api.github.com/users/akotulu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akotulu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akotulu/subscriptions",
      "organizations_url": "https://api.github.com/users/akotulu/orgs",
      "repos_url": "https://api.github.com/users/akotulu/repos",
      "events_url": "https://api.github.com/users/akotulu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akotulu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2016-12-29T18:49:06Z",
    "updated_at": "2022-03-27T00:04:44Z",
    "closed_at": "2022-03-27T00:04:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "app.set('views', path.join(__dirname, 'views'));\r\napp.set('view engine', 'pug');\r\n\r\nThis does not work, path still points to \r\nFailed to lookup view \"admin/objects/list\" in views directory \"/tmp/backend/views\"\r\nbut should /tmp/backend/src/views as __dirname = /tmp/backend/src\r\n\r\nTemporary fix is to uncomment default configuration **resolve('views')** command.\r\n\r\n```javascript\r\napp.defaultConfiguration = function defaultConfiguration() {\r\n  ...\r\n  // default configuration\r\n  this.set('view', View);\r\n  **//this.set('views', resolve('views'));\r\n  this.set('jsonp callback name', 'callback');\r\n};\r\n```\r\n```json\r\n\"dependencies\": {\r\n    \"app-module-path\": \"^2.1.0\",\r\n    \"body-parser\": \"^1.15.2\",\r\n    \"chai\": \"^3.5.0\",\r\n    \"debug\": \"^2.3.2\",\r\n    \"express\": \"^4.14.0\",\r\n    \"install\": \"^0.8.2\",\r\n    \"is-my-json-valid\": \"^2.15.0\",\r\n    \"lowdb\": \"^0.14.0\",\r\n    \"mocha\": \"^3.1.2\",\r\n    \"npm\": \"^4.0.3\",\r\n    \"path\": \"^0.12.7\",\r\n    \"pug\": \"^2.0.0-beta6\",\r\n    \"socket.io\": \"^1.5.1\",\r\n    \"uuid\": \"^3.0.0\",\r\n    \"winston\": \"^2.3.0\"\r\n  }\r\n```\r\n[Full code](http://existanz.planet.ee/dl/express_view_example.zip)",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3161/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3161/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3160",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3160/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3160/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3160/events",
    "html_url": "https://github.com/expressjs/express/issues/3160",
    "id": 197996254,
    "node_id": "MDU6SXNzdWUxOTc5OTYyNTQ=",
    "number": 3160,
    "title": "Is express dead?",
    "user": {
      "login": "Segundissimo",
      "id": 24825791,
      "node_id": "MDQ6VXNlcjI0ODI1Nzkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/24825791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Segundissimo",
      "html_url": "https://github.com/Segundissimo",
      "followers_url": "https://api.github.com/users/Segundissimo/followers",
      "following_url": "https://api.github.com/users/Segundissimo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Segundissimo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Segundissimo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Segundissimo/subscriptions",
      "organizations_url": "https://api.github.com/users/Segundissimo/orgs",
      "repos_url": "https://api.github.com/users/Segundissimo/repos",
      "events_url": "https://api.github.com/users/Segundissimo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Segundissimo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2016-12-29T11:55:04Z",
    "updated_at": "2017-01-23T14:55:49Z",
    "closed_at": "2016-12-29T11:59:45Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Is the express dead? Six months without updates, the last commit in version 5 is 2 years ago. What is going on? How can I help you? Do you have plans to release 5?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3160/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3160/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3159",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3159/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3159/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3159/events",
    "html_url": "https://github.com/expressjs/express/issues/3159",
    "id": 197576911,
    "node_id": "MDU6SXNzdWUxOTc1NzY5MTE=",
    "number": 3159,
    "title": "how app.use work with regluar expression",
    "user": {
      "login": "Thstone37",
      "id": 11756943,
      "node_id": "MDQ6VXNlcjExNzU2OTQz",
      "avatar_url": "https://avatars.githubusercontent.com/u/11756943?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Thstone37",
      "html_url": "https://github.com/Thstone37",
      "followers_url": "https://api.github.com/users/Thstone37/followers",
      "following_url": "https://api.github.com/users/Thstone37/following{/other_user}",
      "gists_url": "https://api.github.com/users/Thstone37/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Thstone37/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Thstone37/subscriptions",
      "organizations_url": "https://api.github.com/users/Thstone37/orgs",
      "repos_url": "https://api.github.com/users/Thstone37/repos",
      "events_url": "https://api.github.com/users/Thstone37/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Thstone37/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2016-12-26T11:15:44Z",
    "updated_at": "2016-12-28T02:31:30Z",
    "closed_at": "2016-12-28T02:31:22Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "![image](https://cloud.githubusercontent.com/assets/11756943/21481175/99229a4c-cb9f-11e6-814a-e75f6310a194.png)\r\n\r\nit does not work\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3159/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3159/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3158",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3158/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3158/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3158/events",
    "html_url": "https://github.com/expressjs/express/pull/3158",
    "id": 197511058,
    "node_id": "MDExOlB1bGxSZXF1ZXN0OTkzMjczMDg=",
    "number": 3158,
    "title": "debug require engine",
    "user": {
      "login": "pravdomil",
      "id": 2387356,
      "node_id": "MDQ6VXNlcjIzODczNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2387356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pravdomil",
      "html_url": "https://github.com/pravdomil",
      "followers_url": "https://api.github.com/users/pravdomil/followers",
      "following_url": "https://api.github.com/users/pravdomil/following{/other_user}",
      "gists_url": "https://api.github.com/users/pravdomil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pravdomil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pravdomil/subscriptions",
      "organizations_url": "https://api.github.com/users/pravdomil/orgs",
      "repos_url": "https://api.github.com/users/pravdomil/repos",
      "events_url": "https://api.github.com/users/pravdomil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pravdomil/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/15",
      "html_url": "https://github.com/expressjs/express/milestone/15",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/15/labels",
      "id": 2284432,
      "node_id": "MDk6TWlsZXN0b25lMjI4NDQzMg==",
      "number": 15,
      "title": "4.15",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 8,
      "state": "closed",
      "created_at": "2017-01-29T03:36:44Z",
      "updated_at": "2017-03-01T22:20:15Z",
      "due_on": null,
      "closed_at": "2017-03-01T22:20:15Z"
    },
    "comments": 2,
    "created_at": "2016-12-25T18:30:55Z",
    "updated_at": "2017-03-01T22:14:09Z",
    "closed_at": "2017-03-01T22:14:08Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3158",
      "html_url": "https://github.com/expressjs/express/pull/3158",
      "diff_url": "https://github.com/expressjs/express/pull/3158.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3158.patch",
      "merged_at": null
    },
    "body": "Requiring new engine can take more than 300ms, it make sense to include it in debug to inform developers whence the delays comes from.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3158/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3158/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3157",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3157/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3157/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3157/events",
    "html_url": "https://github.com/expressjs/express/issues/3157",
    "id": 197436448,
    "node_id": "MDU6SXNzdWUxOTc0MzY0NDg=",
    "number": 3157,
    "title": "json parse error",
    "user": {
      "login": "anotherbuild",
      "id": 24739935,
      "node_id": "MDQ6VXNlcjI0NzM5OTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/24739935?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anotherbuild",
      "html_url": "https://github.com/anotherbuild",
      "followers_url": "https://api.github.com/users/anotherbuild/followers",
      "following_url": "https://api.github.com/users/anotherbuild/following{/other_user}",
      "gists_url": "https://api.github.com/users/anotherbuild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anotherbuild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anotherbuild/subscriptions",
      "organizations_url": "https://api.github.com/users/anotherbuild/orgs",
      "repos_url": "https://api.github.com/users/anotherbuild/repos",
      "events_url": "https://api.github.com/users/anotherbuild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anotherbuild/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-12-23T23:19:14Z",
    "updated_at": "2016-12-24T15:08:49Z",
    "closed_at": "2016-12-24T15:08:05Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello,\r\n\r\nI'm trying to do two different project request. I am request a using request module other project using express but  json parse error in the express project\r\n\r\nexample object \r\n```\r\nvar data= {\r\n    User: {\r\n        ID: 123\r\n    },\r\n    Text: 'hello world'\r\n};\r\n```\r\n\r\n\r\n```\r\n request.post({\r\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\r\n            url: \"url/test\",\r\n            body: JSON.stringify(data)\r\n        }, function (error, response, body) {\r\n\r\n            logger.debug(\"error : \", error);\r\n            logger.debug(\"body : \", body);\r\n\r\n        });\r\n```\r\n\r\nListen a express project\r\n\r\n```\r\napp.post('/test', function(req, res) {\r\n\r\n    try {\r\n        res.header('Access-Control-Allow-Origin', req.headers.origin || \"*\");\r\n        res.header('Access-Control-Allow-Methods', 'POST');\r\n        res.header('Access-Control-Allow-Headers', 'Content-Type');\r\n\r\n        console.log(req.body);\r\n        var x = JSON.parse(req.body);\r\n\r\n        res.send(200);\r\n\r\n    } catch (error) {\r\n\r\n        res.send(200);\r\n    }\r\n});\r\n```\r\n\r\n**req.body is** \r\n\r\n{ '{\"User\":{\"ID\":123},\"Text\":\"hello world\"}': '' }\r\n\r\n**erorr is** \r\n\r\nSyntaxError: Unexpected token o in JSON at position 1\r\n\r\nbeats extra single quote { '{\"User\":{\"ID\":123},\"Text\":\"hello world\"}'**: '' }**\r\n\r\n \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3157/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3157/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3156",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3156/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3156/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3156/events",
    "html_url": "https://github.com/expressjs/express/issues/3156",
    "id": 197315740,
    "node_id": "MDU6SXNzdWUxOTczMTU3NDA=",
    "number": 3156,
    "title": "set base url with generics endpoints from very beginning",
    "user": {
      "login": "haider0324",
      "id": 3973130,
      "node_id": "MDQ6VXNlcjM5NzMxMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3973130?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haider0324",
      "html_url": "https://github.com/haider0324",
      "followers_url": "https://api.github.com/users/haider0324/followers",
      "following_url": "https://api.github.com/users/haider0324/following{/other_user}",
      "gists_url": "https://api.github.com/users/haider0324/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haider0324/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haider0324/subscriptions",
      "organizations_url": "https://api.github.com/users/haider0324/orgs",
      "repos_url": "https://api.github.com/users/haider0324/repos",
      "events_url": "https://api.github.com/users/haider0324/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haider0324/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-12-23T05:40:15Z",
    "updated_at": "2016-12-27T06:22:03Z",
    "closed_at": "2016-12-25T21:19:04Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have created server.js and route.js file for restful api development. I want to add endpoints in base url in server.js not in route.js. see this in below mentioned code \r\n\r\n> Scenario 1 What should i do right now \r\n\r\n```\r\nserver.js\r\n\r\nvar express \t= require('express');\r\nvar app \t\t= express();\r\n\r\nvar routes = require(\"./app/routes/routes.js\")(app);\r\n\r\n-------------------------------------------------------------------------\r\nroutes.js\r\n\r\nvar appRouter = function(app) {\r\n\tapp.get(\"/api/:id\", function(req, res) {\r\n\t\tconsole.log('-------------------User detail fetched..............')\r\n\t});\r\n\tapp.delete(\"/api/:id\", function(req, res) {\r\n\t\tconsole.log('-------------------particular user detail..............')\r\n\t});\r\n}\r\nmodule.exports = appRouter;\r\n```\r\n\r\n> I want to extract out api keywords end points from routes.js file and put somewhere in server.js file. So my future route.js updated code is mentioned below. how we implement generic api end points from server.js file.\r\n```\r\nroutes.js\r\n\r\nvar appRouter = function(app) {\r\n\tapp.get(\"/:id\", function(req, res) {\r\n\t\tconsole.log('-------------------User detail fetched..............')\r\n\t});\r\n\tapp.delete(\"/:id\", function(req, res) {\r\n\t\tconsole.log('-------------------particular user detail..............')\r\n\t});\r\n}\r\nmodule.exports = appRouter;\r\n```\r\n\r\nPlease guide me.. thanks in advance\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3156/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3156/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3155",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3155/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3155/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3155/events",
    "html_url": "https://github.com/expressjs/express/issues/3155",
    "id": 197086919,
    "node_id": "MDU6SXNzdWUxOTcwODY5MTk=",
    "number": 3155,
    "title": "Why is Jquery always loaded?",
    "user": {
      "login": "cyphunk",
      "id": 119662,
      "node_id": "MDQ6VXNlcjExOTY2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/119662?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cyphunk",
      "html_url": "https://github.com/cyphunk",
      "followers_url": "https://api.github.com/users/cyphunk/followers",
      "following_url": "https://api.github.com/users/cyphunk/following{/other_user}",
      "gists_url": "https://api.github.com/users/cyphunk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cyphunk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cyphunk/subscriptions",
      "organizations_url": "https://api.github.com/users/cyphunk/orgs",
      "repos_url": "https://api.github.com/users/cyphunk/repos",
      "events_url": "https://api.github.com/users/cyphunk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cyphunk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-12-22T03:29:14Z",
    "updated_at": "2016-12-22T05:32:28Z",
    "closed_at": "2016-12-22T03:52:50Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I wasn't able to find anything in documentation concerning the addition of the Jquery script tag when loading static HTML files. Perhaps I missed something, or this is the wrong place to address the issue. Currently in version 4.14.0 this script tag is always added. Consider this example:\r\n\r\n```javascript\r\nvar express = require('express')\r\nvar http = require('http')\r\nvar app = express()\r\nvar server = http.createServer(app)\r\napp.get('/test', function(req, res){\r\n\tres.sendFile(__dirname+'/test.html') })\r\nserver.listen(8080)\r\n```\r\n\r\ntest.html:\r\n```html\r\n<html><head></head><body>t</body></html>\r\n```\r\n\r\nWhen requesting http://localost:8080/test the HTML is turned into\r\n\r\n```html\r\n<html><head><script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js\" type=\"text/javascript\" async=\"\"></script></head><body>t\r\n</body></html>\r\n```\r\n\r\nany thoughts on what I may have missed and how to change this so that jquery is not automatically loaded?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3155/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3155/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3154",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3154/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3154/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3154/events",
    "html_url": "https://github.com/expressjs/express/issues/3154",
    "id": 196926709,
    "node_id": "MDU6SXNzdWUxOTY5MjY3MDk=",
    "number": 3154,
    "title": "Static files for App not being resolved after deploying to Heroku",
    "user": {
      "login": "chaiwa-berian",
      "id": 7937584,
      "node_id": "MDQ6VXNlcjc5Mzc1ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7937584?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chaiwa-berian",
      "html_url": "https://github.com/chaiwa-berian",
      "followers_url": "https://api.github.com/users/chaiwa-berian/followers",
      "following_url": "https://api.github.com/users/chaiwa-berian/following{/other_user}",
      "gists_url": "https://api.github.com/users/chaiwa-berian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chaiwa-berian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chaiwa-berian/subscriptions",
      "organizations_url": "https://api.github.com/users/chaiwa-berian/orgs",
      "repos_url": "https://api.github.com/users/chaiwa-berian/repos",
      "events_url": "https://api.github.com/users/chaiwa-berian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chaiwa-berian/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-12-21T12:57:37Z",
    "updated_at": "2016-12-25T21:20:27Z",
    "closed_at": "2016-12-25T21:20:27Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "@here.....\r\nI seem to have a problem with getting the MEAN Stack App work on Heroku. Everything works perfectly on my local machine but when I deploy to Heroku, via Travis CI, for some reason the everything under /client sub-folder is not being resolved. So I have a 'client' folder which is and equivalent of the 'public' folder and I have setup static file access via app.use(express.static(path.resolve('./') + \"/client\")) in the server.js! server.js is in /server/bin folder. When I run the App locally, no issue, but when deployed to Heroku only the Index page is displayed and everything related to angular(i.e, stuff in /js/.... and /libs/ are not being resolved at all. **_Anyone to help, please?_**\r\n\r\nHere is the link to the repo if anyone wants to replicate the issue: https://github.com/Silverkeytechnology/Kole\r\n\r\nI have checked the **_logs_** and here is a snapshot:\r\n\r\nC:\\Users\\Berian Chaiwa\\Kole>heroku logs --tail\r\n2016-12-21T07:33:29.347584+00:00 heroku[web.1]: Idling\r\n2016-12-21T07:33:29.348142+00:00 heroku[web.1]: State changed from up to down\r\n2016-12-21T07:33:29.795642+00:00 heroku[web.1]: Stopping all processes with SIGTERM\r\n2016-12-21T07:33:29.920686+00:00 heroku[web.1]: Process exited with status 143\r\n2016-12-21T10:44:45.875272+00:00 heroku[web.1]: Unidling\r\n2016-12-21T10:44:45.875661+00:00 heroku[web.1]: State changed from down to starting\r\n2016-12-21T10:44:48.543085+00:00 heroku[web.1]: Starting process with command `npm start`\r\n2016-12-21T10:44:50.427659+00:00 app[web.1]:\r\n2016-12-21T10:44:50.427676+00:00 app[web.1]: > kole@1.0.0 start /app\r\n2016-12-21T10:44:50.427677+00:00 app[web.1]: > cross-env NODE_ENV=live node ./server/bin/server.js\r\n2016-12-21T10:44:50.427678+00:00 app[web.1]:\r\n2016-12-21T10:44:51.006390+00:00 app[web.1]: Your app listening on port 53101! √\r\n2016-12-21T10:44:51.202088+00:00 app[web.1]: Connected correctly to database server √\r\n2016-12-21T10:44:51.333518+00:00 heroku[web.1]: State changed from starting to up\r\n2016-12-21T10:44:51.923936+00:00 heroku[router]: at=info method=GET path=\"/\" host=kole-api.herokuapp.com\r\nrequest_id=8cb40fdb-0a89-4258-b0c1-b4900c2fe91f fwd=\"197.220.16.50\" dyno=web.1 connect=1ms service=14ms s\r\ntatus=304 bytes=237\r\n2016-12-21T10:44:53.022135+00:00 heroku[router]: at=info method=GET path=\"/libs/bootstrap/dist/css/bootst\r\nrap.css\" host=kole-api.herokuapp.com request_id=1bde7af7-6163-4fc8-8d9b-59a4cafcf00e fwd=\"197.220.16.50\"\r\ndyno=web.1 connect=1ms service=11ms status=404 bytes=248\r\n2016-12-21T10:44:53.025419+00:00 heroku[router]: at=info method=GET path=\"/libs/bootstrap/dist/js/bootstr\r\nap.min.js\" host=kole-api.herokuapp.com request_id=e6e54555-2f94-4a22-aaeb-22b54b70fc26 fwd=\"197.220.16.50\r\n\" dyno=web.1 connect=1ms service=10ms status=404 bytes=250\r\n2016-12-21T10:44:53.033649+00:00 heroku[router]: at=info method=GET path=\"/libs/jquery/dist/jquery.min.js\r\n\" host=kole-api.herokuapp.com request_id=4c8ef324-a5b9-422e-9e42-9522a65bb69d fwd=\"197.220.16.50\" dyno=we\r\nb.1 connect=1ms service=10ms status=404 bytes=241\r\n2016-12-21T10:44:53.041259+00:00 heroku[router]: at=info method=GET path=\"/libs/angular/angular.js\" host=\r\nkole-api.herokuapp.com request_id=69477245-17b1-421f-b313-3c4822817513 fwd=\"197.220.16.50\" dyno=web.1 con\r\nnect=1ms service=3ms status=404 bytes=234\r\n2016-12-21T10:44:54.892198+00:00 heroku[router]: at=info method=GET path=\"/libs/angular-route/angular-rou\r\nte.js\" host=kole-api.herokuapp.com request_id=8769a5f8-1acc-4f68-bcbf-ae6445edec71 fwd=\"197.220.16.50\" dy\r\nno=web.1 connect=1ms service=2ms status=404 bytes=246\r\n2016-12-21T10:44:55.787247+00:00 heroku[router]: at=info method=GET path=\"/js/app.js\" host=kole-api.herok\r\nuapp.com request_id=73026c25-a48f-47ac-ac30-f1489c3e0777 fwd=\"197.220.16.50\" dyno=web.1 connect=1ms servi\r\nce=2ms status=304 bytes=236\r\n2016-12-21T10:44:56.472310+00:00 heroku[router]: at=info method=GET path=\"/js/app.router.js\" host=kole-ap\r\ni.herokuapp.com request_id=a002ed59-d044-452c-b3c7-863ba93d36ae fwd=\"197.220.16.50\" dyno=web.1 connect=1m\r\ns service=10ms status=304 bytes=237\r\n2016-12-21T10:44:56.924865+00:00 heroku[router]: at=info method=GET path=\"/js/student-list/student-list.m\r\nodule.js\" host=kole-api.herokuapp.com request_id=b389c9c1-9506-4664-8681-df10eb4b5bdb fwd=\"197.220.16.50\"\r\n dyno=web.1 connect=1ms service=6ms status=304 bytes=236\r\n2016-12-21T10:44:57.224001+00:00 heroku[router]: at=info method=GET path=\"/js/student-list/student-list.c\r\nomponent.js\" host=kole-api.herokuapp.com request_id=d4d0b52e-e396-49ce-af1f-84a7dd6063b4 fwd=\"197.220.16.\r\n50\" dyno=web.1 connect=1ms service=4ms status=304 bytes=237\r\n2016-12-21T10:45:28.776039+00:00 heroku[router]: at=info method=GET path=\"/libs/bootstrap/dist/js/bootstr\r\nap.min.js\" host=kole-api.herokuapp.com request_id=d4e2f9ad-d45b-4d9c-ac87-859f0a41fc62 fwd=\"197.220.16.50\r\n\" dyno=web.1 connect=1ms service=7ms status=404 bytes=250\r\n2016-12-21T10:45:29.673657+00:00 heroku[router]: at=info method=GET path=\"/libs/angular/angular.js\" host=\r\nkole-api.herokuapp.com request_id=9a0c35de-b6cb-483e-a316-611628dee630 fwd=\"197.220.16.50\" dyno=web.1 con\r\nnect=1ms service=3ms status=404 bytes=234\r\n2016-12-21T10:45:33.370082+00:00 heroku[router]: at=info method=GET path=\"/libs/angular-route/angular-rou\r\nte.js\" host=kole-api.herokuapp.com request_id=cbbec13e-ffd1-40d3-b43f-efd8646c5197 fwd=\"197.220.16.50\" dy\r\nno=web.1 connect=1ms service=3ms status=404 bytes=246\r\n2016-12-21T10:45:34.286067+00:00 heroku[router]: at=info method=GET path=\"/favicon.ico\" host=kole-api.her\r\nokuapp.com request_id=61a9065f-18bc-415f-8718-d008b831de21 fwd=\"197.220.16.50\" dyno=web.1 connect=1ms ser\r\nvice=3ms status=404 bytes=222\r\n2016-12-21T11:20:56.388832+00:00 heroku[web.1]: Idling\r\n2016-12-21T11:20:56.389228+00:00 heroku[web.1]: State changed from up to down\r\n2016-12-21T11:20:57.160105+00:00 heroku[web.1]: Stopping all processes with SIGTERM\r\n2016-12-21T11:20:57.292968+00:00 heroku[web.1]: Process exited with status 143\r\n2016-12-21T11:45:49.455550+00:00 heroku[slug-compiler]: Slug compilation started\r\n2016-12-21T11:45:49.455555+00:00 heroku[slug-compiler]: Slug compilation finished\r\n2016-12-21T11:45:49.407428+00:00 heroku[web.1]: State changed from down to starting\r\n2016-12-21T11:45:49.274370+00:00 app[api]: Deploy 9e39543 by user chaiwa.berian@gmail.com\r\n2016-12-21T11:45:49.274370+00:00 app[api]: Release v13 created by user chaiwa.berian@gmail.com\r\n2016-12-21T11:45:51.344583+00:00 heroku[web.1]: Starting process with command `npm start`\r\n2016-12-21T11:45:54.476994+00:00 app[web.1]:\r\n2016-12-21T11:45:54.477015+00:00 app[web.1]: > kole@1.0.0 start /app\r\n2016-12-21T11:45:54.477016+00:00 app[web.1]: > cross-env NODE_ENV=live node ./server/bin/server.js\r\n2016-12-21T11:45:54.477017+00:00 app[web.1]:\r\n2016-12-21T11:45:55.025499+00:00 app[web.1]: dir:  /app/server/bin/client dir2:  /app/client dir3:  /app/\r\nclient process.cwd():  /app\r\n2016-12-21T11:45:55.062150+00:00 app[web.1]: Your app listening on port 30482! √\r\n2016-12-21T11:45:55.241553+00:00 app[web.1]: Connected correctly to database server √\r\n2016-12-21T11:45:55.665827+00:00 heroku[web.1]: State changed from starting to up\r\n2016-12-21T11:46:24.490952+00:00 heroku[router]: at=info method=GET path=\"/\" host=kole-api.herokuapp.com\r\nrequest_id=ffa973a9-3f4f-46f9-87d2-d5c4fb5a12ff fwd=\"45.215.184.13\" dyno=web.1 connect=1ms service=35ms s\r\ntatus=200 bytes=1789\r\n2016-12-21T11:46:25.046173+00:00 heroku[router]: at=info method=GET path=\"/libs/bootstrap/dist/css/bootst\r\nrap.css\" host=kole-api.herokuapp.com request_id=7f65272f-a7a1-48f5-822c-e19d9d3c3157 fwd=\"45.215.184.13\"\r\ndyno=web.1 connect=1ms service=10ms status=404 bytes=248\r\n2016-12-21T11:46:25.154193+00:00 heroku[router]: at=info method=GET path=\"/libs/jquery/dist/jquery.min.js\r\n\" host=kole-api.herokuapp.com request_id=9262bb8c-df4a-4783-875c-9d3438e0349a fwd=\"45.215.184.13\" dyno=we\r\nb.1 connect=1ms service=5ms status=404 bytes=241\r\n2016-12-21T11:46:25.357504+00:00 heroku[router]: at=info method=GET path=\"/libs/angular/angular.js\" host=\r\nkole-api.herokuapp.com request_id=0ba5377b-f9f2-4081-9553-2d69bd32115c fwd=\"45.215.184.13\" dyno=web.1 con\r\nnect=1ms service=5ms status=404 bytes=234\r\n2016-12-21T11:46:25.478438+00:00 heroku[router]: at=info method=GET path=\"/libs/angular-route/angular-rou\r\nte.js\" host=kole-api.herokuapp.com request_id=8bd35bcc-994a-493b-a937-d53dafae8294 fwd=\"45.215.184.13\" dy\r\nno=web.1 connect=1ms service=6ms status=404 bytes=246\r\n2016-12-21T11:46:25.330053+00:00 heroku[router]: at=info method=GET path=\"/libs/bootstrap/dist/js/bootstr\r\nap.min.js\" host=kole-api.herokuapp.com request_id=be3fda14-0d83-4e7a-ba7e-49a9fa7aadaf fwd=\"45.215.184.13\r\n\" dyno=web.1 connect=1ms service=7ms status=404 bytes=250\r\n2016-12-21T11:46:25.629399+00:00 heroku[router]: at=info method=GET path=\"/js/app.js\" host=kole-api.herok\r\nuapp.com request_id=4881ccfe-b8ec-49b3-b587-0f43cb1c4877 fwd=\"45.215.184.13\" dyno=web.1 connect=1ms servi\r\nce=7ms status=200 bytes=365\r\n2016-12-21T11:46:25.755947+00:00 heroku[router]: at=info method=GET path=\"/js/app.router.js\" host=kole-ap\r\ni.herokuapp.com request_id=693df35d-211e-4e62-b0fb-f5075361f0ef fwd=\"45.215.184.13\" dyno=web.1 connect=1m\r\ns service=4ms status=200 bytes=643\r\n2016-12-21T11:46:25.914104+00:00 heroku[router]: at=info method=GET path=\"/js/student-list/student-list.m\r\nodule.js\" host=kole-api.herokuapp.com request_id=f3b3ff91-cdb0-4f5e-8335-12f817642813 fwd=\"45.215.184.13\"\r\n dyno=web.1 connect=1ms service=3ms status=200 bytes=333\r\n2016-12-21T11:46:26.045930+00:00 heroku[router]: at=info method=GET path=\"/js/student-list/student-list.c\r\nomponent.js\" host=kole-api.herokuapp.com request_id=2ea3becd-b9c0-45f6-85f2-34a7855c8599 fwd=\"45.215.184.\r\n13\" dyno=web.1 connect=1ms service=2ms status=200 bytes=737\r\n2016-12-21T11:46:30.738677+00:00 heroku[router]: at=info method=GET path=\"/\" host=kole-api.herokuapp.com\r\nrequest_id=5235711d-4f32-4dce-8374-b6cb643bec05 fwd=\"45.215.184.13\" dyno=web.1 connect=1ms service=15ms s\r\ntatus=304 bytes=237\r\n2016-12-21T11:46:31.716903+00:00 heroku[router]: at=info method=GET path=\"/libs/bootstrap/dist/css/bootst\r\nrap.css\" host=kole-api.herokuapp.com request_id=ee2c1eb4-5875-495c-87d1-79bad0c72971 fwd=\"45.215.184.13\"\r\ndyno=web.1 connect=1ms service=9ms status=404 bytes=248\r\n2016-12-21T11:46:31.837099+00:00 heroku[router]: at=info method=GET path=\"/libs/jquery/dist/jquery.min.js\r\n\" host=kole-api.herokuapp.com request_id=e71c737c-9d8d-432f-9848-397a4cbba43a fwd=\"45.215.184.13\" dyno=we\r\nb.1 connect=1ms service=8ms status=404 bytes=241\r\n2016-12-21T11:46:31.935907+00:00 heroku[router]: at=info method=GET path=\"/libs/bootstrap/dist/js/bootstr\r\nap.min.js\" host=kole-api.herokuapp.com request_id=05e5e7b1-a68e-4ca7-9952-e88bbcf9c964 fwd=\"45.215.184.13\r\n\" dyno=web.1 connect=1ms service=5ms status=404 bytes=250\r\n2016-12-21T11:46:32.155620+00:00 heroku[router]: at=info method=GET path=\"/libs/angular-route/angular-rou\r\nte.js\" host=kole-api.herokuapp.com request_id=b560775b-7740-40c4-8611-1b8158352ef7 fwd=\"45.215.184.13\" dy\r\nno=web.1 connect=1ms service=4ms status=404 bytes=246\r\n2016-12-21T11:46:32.065473+00:00 heroku[router]: at=info method=GET path=\"/libs/angular/angular.js\" host=\r\nkole-api.herokuapp.com request_id=7b31f1c0-0ed7-473e-90ff-529d3fe80929 fwd=\"45.215.184.13\" dyno=web.1 con\r\nnect=1ms service=3ms status=404 bytes=234\r\n2016-12-21T11:46:32.177421+00:00 heroku[router]: at=info method=GET path=\"/js/app.js\" host=kole-api.herok\r\nuapp.com request_id=edd56637-23e6-410f-b2d2-d5ac472d7c95 fwd=\"45.215.184.13\" dyno=web.1 connect=1ms servi\r\nce=4ms status=304 bytes=236\r\n2016-12-21T11:46:32.389557+00:00 heroku[router]: at=info method=GET path=\"/js/app.router.js\" host=kole-ap\r\ni.herokuapp.com request_id=bc4765fc-a454-404f-8022-a6b362a8a6a8 fwd=\"45.215.184.13\" dyno=web.1 connect=0m\r\ns service=3ms status=304 bytes=237\r\n2016-12-21T11:46:32.413141+00:00 heroku[router]: at=info method=GET path=\"/js/student-list/student-list.m\r\nodule.js\" host=kole-api.herokuapp.com request_id=9a300201-3124-42b3-80cc-44b31d7caa33 fwd=\"45.215.184.13\"\r\n dyno=web.1 connect=1ms service=2ms status=304 bytes=236\r\n2016-12-21T11:46:32.446053+00:00 heroku[router]: at=info method=GET path=\"/js/student-list/student-list.c\r\nomponent.js\" host=kole-api.herokuapp.com request_id=ec142bef-7475-40a3-a027-72854cd11fad fwd=\"45.215.184.\r\n13\" dyno=web.1 connect=1ms service=3ms status=304 bytes=237\r\n2016-12-21T12:21:07.256160+00:00 heroku[web.1]: Idling\r\n2016-12-21T12:21:07.256160+00:00 heroku[web.1]: State changed from up to down\r\n2016-12-21T12:21:08.514442+00:00 heroku[web.1]: Stopping all processes with SIGTERM\r\n2016-12-21T12:21:08.932633+00:00 heroku[web.1]: Process exited with status 143\r\n2016-12-21T12:28:01.014970+00:00 heroku[web.1]: Unidling\r\n2016-12-21T12:28:01.015358+00:00 heroku[web.1]: State changed from down to starting\r\n2016-12-21T12:28:03.351458+00:00 heroku[web.1]: Starting process with command `npm start`\r\n2016-12-21T12:28:05.950271+00:00 app[web.1]:\r\n2016-12-21T12:28:05.950287+00:00 app[web.1]: > kole@1.0.0 start /app\r\n2016-12-21T12:28:05.950288+00:00 app[web.1]: > cross-env NODE_ENV=live node ./server/bin/server.js\r\n2016-12-21T12:28:05.950288+00:00 app[web.1]:\r\n2016-12-21T12:28:06.555156+00:00 app[web.1]: dir:  /app/server/bin/client dir2:  /app/client dir3:  /app/\r\nclient process.cwd():  /app\r\n2016-12-21T12:28:06.613819+00:00 app[web.1]: Your app listening on port 52635! √\r\n2016-12-21T12:28:06.806888+00:00 app[web.1]: Connected correctly to database server √\r\n2016-12-21T12:28:07.105307+00:00 heroku[web.1]: State changed from starting to up\r\n2016-12-21T12:28:08.077830+00:00 heroku[router]: at=info method=GET path=\"/\" host=kole-api.herokuapp.com\r\nrequest_id=ac3675b9-dbe7-49c4-b575-555a9e65b47a fwd=\"45.215.184.13\" dyno=web.1 connect=0ms service=15ms s\r\ntatus=304 bytes=237\r\n2016-12-21T12:28:08.572177+00:00 heroku[router]: at=info method=GET path=\"/libs/bootstrap/dist/css/bootst\r\nrap.css\" host=kole-api.herokuapp.com request_id=33adf51a-6e38-447f-be45-3ad8d7a042ac fwd=\"45.215.184.13\"\r\ndyno=web.1 connect=0ms service=12ms status=404 bytes=248\r\n2016-12-21T12:28:08.680454+00:00 heroku[router]: at=info method=GET path=\"/libs/jquery/dist/jquery.min.js\r\n\" host=kole-api.herokuapp.com request_id=7ce5a087-6b21-4772-8117-2dfe1dfd57d1 fwd=\"45.215.184.13\" dyno=we\r\nb.1 connect=0ms service=2ms status=404 bytes=241\r\n2016-12-21T12:28:08.803210+00:00 heroku[router]: at=info method=GET path=\"/libs/bootstrap/dist/js/bootstr\r\nap.min.js\" host=kole-api.herokuapp.com request_id=67a6b0c4-b8f8-49c9-8ef7-48c06d9e6a67 fwd=\"45.215.184.13\r\n\" dyno=web.1 connect=0ms service=2ms status=404 bytes=250\r\n2016-12-21T12:28:08.900764+00:00 heroku[router]: at=info method=GET path=\"/libs/angular/angular.js\" host=\r\nkole-api.herokuapp.com request_id=ccc5f12d-a672-4ab1-8c06-8e47e4f8e65c fwd=\"45.215.184.13\" dyno=web.1 con\r\nnect=0ms service=1ms status=404 bytes=234\r\n2016-12-21T12:28:09.121628+00:00 heroku[router]: at=info method=GET path=\"/libs/angular-route/angular-rou\r\nte.js\" host=kole-api.herokuapp.com request_id=255a2d93-f42e-41ff-9bb8-d3bb02554ded fwd=\"45.215.184.13\" dy\r\nno=web.1 connect=0ms service=1ms status=404 bytes=246\r\n2016-12-21T12:28:09.379558+00:00 heroku[router]: at=info method=GET path=\"/js/app.js\" host=kole-api.herok\r\nuapp.com request_id=f9252db1-6cfd-4798-86f7-ff3f78dae059 fwd=\"45.215.184.13\" dyno=web.1 connect=0ms servi\r\nce=1ms status=304 bytes=236\r\n2016-12-21T12:28:09.666390+00:00 heroku[router]: at=info method=GET path=\"/js/app.router.js\" host=kole-ap\r\ni.herokuapp.com request_id=e7bbea3d-ec74-4314-a8e7-22af66feea92 fwd=\"45.215.184.13\" dyno=web.1 connect=0m\r\ns service=1ms status=304 bytes=237\r\n2016-12-21T12:28:09.681001+00:00 heroku[router]: at=info method=GET path=\"/js/student-list/student-list.m\r\nodule.js\" host=kole-api.herokuapp.com request_id=8cec6635-484c-4858-b07a-477e8f35c271 fwd=\"45.215.184.13\"\r\n dyno=web.1 connect=0ms service=1ms status=304 bytes=236\r\n2016-12-21T12:28:09.881464+00:00 heroku[router]: at=info method=GET path=\"/js/student-list/student-list.c\r\nomponent.js\" host=kole-api.herokuapp.com request_id=e2d1aa66-d038-4db1-8901-2260ffa9c35d fwd=\"45.215.184.\r\n13\" dyno=web.1 connect=0ms service=1ms status=304 bytes=237\r\n2016-12-21T12:54:42.259644+00:00 heroku[router]: at=info method=GET path=\"/\" host=kole-api.herokuapp.com\r\nrequest_id=e267412a-020e-4b26-b63a-d551f77e0948 fwd=\"45.215.184.13\" dyno=web.1 connect=1ms service=13ms s\r\ntatus=304 bytes=237\r\n2016-12-21T12:54:42.772234+00:00 heroku[router]: at=info method=GET path=\"/libs/angular/angular.js\" host=\r\nkole-api.herokuapp.com request_id=45ee97ed-9f83-45df-91ce-055d8595335c fwd=\"45.215.184.13\" dyno=web.1 con\r\nnect=0ms service=4ms status=404 bytes=234\r\n2016-12-21T12:54:42.788281+00:00 heroku[router]: at=info method=GET path=\"/libs/angular-route/angular-rou\r\nte.js\" host=kole-api.herokuapp.com request_id=ac5cc1b9-5e28-4b29-9408-162aecead8ee fwd=\"45.215.184.13\" dy\r\nno=web.1 connect=1ms service=2ms status=404 bytes=246\r\n2016-12-21T12:54:42.712419+00:00 heroku[router]: at=info method=GET path=\"/libs/jquery/dist/jquery.min.js\r\n\" host=kole-api.herokuapp.com request_id=adba1d01-dcb5-4e5b-8f05-7b8034395f7e fwd=\"45.215.184.13\" dyno=we\r\nb.1 connect=0ms service=1ms status=404 bytes=241\r\n2016-12-21T12:54:42.688925+00:00 heroku[router]: at=info method=GET path=\"/libs/bootstrap/dist/css/bootst\r\nrap.css\" host=kole-api.herokuapp.com request_id=a930d3b1-ada9-4848-a5fc-965b64552538 fwd=\"45.215.184.13\"\r\ndyno=web.1 connect=0ms service=3ms status=404 bytes=248\r\n2016-12-21T12:54:43.029787+00:00 heroku[router]: at=info method=GET path=\"/js/app.js\" host=kole-api.herok\r\nuapp.com request_id=43f99673-43db-46e6-a987-3fe691badb1a fwd=\"45.215.184.13\" dyno=web.1 connect=0ms servi\r\nce=2ms status=304 bytes=236\r\n2016-12-21T12:54:42.748174+00:00 heroku[router]: at=info method=GET path=\"/libs/bootstrap/dist/js/bootstr\r\nap.min.js\" host=kole-api.herokuapp.com request_id=7d548c71-a742-47df-b311-f9666810a0dc fwd=\"45.215.184.13\r\n\" dyno=web.1 connect=0ms service=2ms status=404 bytes=250\r\n2016-12-21T12:54:43.093072+00:00 heroku[router]: at=info method=GET path=\"/js/app.router.js\" host=kole-ap\r\ni.herokuapp.com request_id=824e985d-27e6-42b1-a374-0eefb9b9479a fwd=\"45.215.184.13\" dyno=web.1 connect=0m\r\ns service=7ms status=304 bytes=237\r\n2016-12-21T12:54:43.153520+00:00 heroku[router]: at=info method=GET path=\"/js/student-list/student-list.c\r\nomponent.js\" host=kole-api.herokuapp.com request_id=bff1c7cc-d360-4271-871a-c6f0289ce570 fwd=\"45.215.184.\r\n13\" dyno=web.1 connect=0ms service=2ms status=304 bytes=237\r\n2016-12-21T12:54:43.131042+00:00 heroku[router]: at=info method=GET path=\"/js/student-list/student-list.m\r\nodule.js\" host=kole-api.herokuapp.com request_id=8c3b7573-f927-4a63-8c2f-f293b496d62e fwd=\"45.215.184.13\"\r\n dyno=web.1 connect=1ms service=2ms status=304 bytes=236\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3154/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3154/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3153",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3153/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3153/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3153/events",
    "html_url": "https://github.com/expressjs/express/issues/3153",
    "id": 196746320,
    "node_id": "MDU6SXNzdWUxOTY3NDYzMjA=",
    "number": 3153,
    "title": "x-forwarded-port not updated in req headers during redirect",
    "user": {
      "login": "manikawnth",
      "id": 10106516,
      "node_id": "MDQ6VXNlcjEwMTA2NTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/10106516?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/manikawnth",
      "html_url": "https://github.com/manikawnth",
      "followers_url": "https://api.github.com/users/manikawnth/followers",
      "following_url": "https://api.github.com/users/manikawnth/following{/other_user}",
      "gists_url": "https://api.github.com/users/manikawnth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/manikawnth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/manikawnth/subscriptions",
      "organizations_url": "https://api.github.com/users/manikawnth/orgs",
      "repos_url": "https://api.github.com/users/manikawnth/repos",
      "events_url": "https://api.github.com/users/manikawnth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/manikawnth/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-12-20T18:35:08Z",
    "updated_at": "2016-12-20T21:14:06Z",
    "closed_at": "2016-12-20T21:14:06Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\r\n\r\nI have a reverse proxy (HAProxy) running on port 80.\r\nThis will proxy the requests to express server running on port 4040 after setting `X-Forwarded-Port` header to `80` and it is reflecting in the express server when I did `console.log(req.get('X-Forwarded-Port'));`\r\n\r\nFrom here I redirected the response to port 3939 \r\n`res.redirect(301, 'http://10.80.51.90:3939');`\r\nNow the redirect is not carrying forward the request header **X-Forwarded-Port**.\r\n\r\n I'm not sure if this is by design and we need to explicitly set the header or if this is an issue?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3153/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3153/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3152",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3152/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3152/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3152/events",
    "html_url": "https://github.com/expressjs/express/issues/3152",
    "id": 196632706,
    "node_id": "MDU6SXNzdWUxOTY2MzI3MDY=",
    "number": 3152,
    "title": "deprecated sendfile error message",
    "user": {
      "login": "superhero",
      "id": 839818,
      "node_id": "MDQ6VXNlcjgzOTgxOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/839818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/superhero",
      "html_url": "https://github.com/superhero",
      "followers_url": "https://api.github.com/users/superhero/followers",
      "following_url": "https://api.github.com/users/superhero/following{/other_user}",
      "gists_url": "https://api.github.com/users/superhero/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/superhero/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/superhero/subscriptions",
      "organizations_url": "https://api.github.com/users/superhero/orgs",
      "repos_url": "https://api.github.com/users/superhero/repos",
      "events_url": "https://api.github.com/users/superhero/events{/privacy}",
      "received_events_url": "https://api.github.com/users/superhero/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 11,
    "created_at": "2016-12-20T10:08:12Z",
    "updated_at": "2017-02-23T19:02:47Z",
    "closed_at": "2016-12-21T11:00:50Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "A bit funny error message that I have a hard time understanding :smile: \r\n\r\n```\r\nTue, 20 Dec 2016 09:48:41 GMT express deprecated res.sendfile: Use res.sendFile instead at ...\r\n```\r\n\r\n_I tried to use: `res.sendFile` but it tells me it's also deprecated and that I should use `res.sendFile` instead. So I tried  `res.sendFile` instead but it's also deprecated ... and so on ..._",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3152/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3152/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3151",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3151/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3151/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3151/events",
    "html_url": "https://github.com/expressjs/express/issues/3151",
    "id": 196523539,
    "node_id": "MDU6SXNzdWUxOTY1MjM1Mzk=",
    "number": 3151,
    "title": "Allow override output for res.sendStatus(x)",
    "user": {
      "login": "raijinsetsu",
      "id": 6809014,
      "node_id": "MDQ6VXNlcjY4MDkwMTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6809014?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raijinsetsu",
      "html_url": "https://github.com/raijinsetsu",
      "followers_url": "https://api.github.com/users/raijinsetsu/followers",
      "following_url": "https://api.github.com/users/raijinsetsu/following{/other_user}",
      "gists_url": "https://api.github.com/users/raijinsetsu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raijinsetsu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raijinsetsu/subscriptions",
      "organizations_url": "https://api.github.com/users/raijinsetsu/orgs",
      "repos_url": "https://api.github.com/users/raijinsetsu/repos",
      "events_url": "https://api.github.com/users/raijinsetsu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raijinsetsu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-12-19T21:21:41Z",
    "updated_at": "2016-12-19T21:28:04Z",
    "closed_at": "2016-12-19T21:25:14Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "It would be beneficial if we could install a hook that would allow us to control the content generated by the res.sendStatus call.\r\nExample:\r\n``` typescript\r\napp.set('sendStatus callback',(req, res, statusCode) => {\r\n    res\r\n        .contentType('application/json')\r\n        .status(statusCode)\r\n        .send(getDefaultResponseBody(statusCode));\r\n});\r\n\r\n...\r\nres.sendStatus(404);\r\n```\r\nThe 404 error would output something like '{\"error\":\"resource not found\"}' with the appropriate headers\r\ninstead of the current default which is to look at the http module's status codes.\r\n\r\nWe thought about alternatives, such as monkey-patching sendStatus or creating our own function which we would call instead of calling res.sendStatus. Neither sit well with me.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3151/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3151/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3150",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3150/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3150/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3150/events",
    "html_url": "https://github.com/expressjs/express/issues/3150",
    "id": 195187812,
    "node_id": "MDU6SXNzdWUxOTUxODc4MTI=",
    "number": 3150,
    "title": "Is there a standard for middleware libraries?",
    "user": {
      "login": "franciscop",
      "id": 2801252,
      "node_id": "MDQ6VXNlcjI4MDEyNTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2801252?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/franciscop",
      "html_url": "https://github.com/franciscop",
      "followers_url": "https://api.github.com/users/franciscop/followers",
      "following_url": "https://api.github.com/users/franciscop/following{/other_user}",
      "gists_url": "https://api.github.com/users/franciscop/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/franciscop/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/franciscop/subscriptions",
      "organizations_url": "https://api.github.com/users/franciscop/orgs",
      "repos_url": "https://api.github.com/users/franciscop/repos",
      "events_url": "https://api.github.com/users/franciscop/events{/privacy}",
      "received_events_url": "https://api.github.com/users/franciscop/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 163600,
        "node_id": "MDU6TGFiZWwxNjM2MDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-12-13T08:14:07Z",
    "updated_at": "2017-02-11T01:19:34Z",
    "closed_at": "2017-02-11T01:09:58Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I know how to create/use middleware and I'm aware of [Writing middleware for use in Express apps](http://expressjs.com/en/guide/writing-middleware.html), however I am curious about packaging/publishing middleware.\r\n\r\nMany of the express middleware seems to be following this convention:\r\n\r\n```js\r\nlet middle = require('middleware-name');\r\nlet options = {};\r\n\r\napp.use(middle(options));\r\n```\r\n\r\nI have used the same for a couple of projects of mine since it seems really useful way of including the options, but haven't seen it anywhere as a recommended way of doing it. Is this part of some standard/recommended way of creating middleware? Should I edit that guide to reflect this as the recommended way?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3150/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3150/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3149",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3149/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3149/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3149/events",
    "html_url": "https://github.com/expressjs/express/issues/3149",
    "id": 194706381,
    "node_id": "MDU6SXNzdWUxOTQ3MDYzODE=",
    "number": 3149,
    "title": "Document that GET handler also handles HEAD requests",
    "user": {
      "login": "syrnick",
      "id": 263328,
      "node_id": "MDQ6VXNlcjI2MzMyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/263328?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/syrnick",
      "html_url": "https://github.com/syrnick",
      "followers_url": "https://api.github.com/users/syrnick/followers",
      "following_url": "https://api.github.com/users/syrnick/following{/other_user}",
      "gists_url": "https://api.github.com/users/syrnick/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/syrnick/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/syrnick/subscriptions",
      "organizations_url": "https://api.github.com/users/syrnick/orgs",
      "repos_url": "https://api.github.com/users/syrnick/repos",
      "events_url": "https://api.github.com/users/syrnick/events{/privacy}",
      "received_events_url": "https://api.github.com/users/syrnick/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 88345,
        "node_id": "MDU6TGFiZWw4ODM0NQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/3.x",
        "name": "3.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-12-09T21:55:36Z",
    "updated_at": "2016-12-10T00:46:32Z",
    "closed_at": "2016-12-09T22:20:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The current docs don't mention that GET handlers must also accept HEAD requests:\r\n\r\nhttps://github.com/expressjs/express/blob/master/lib/router/route.js#L65\r\n\r\nThis is quite unexpected and would cause bugs if something is done for GETs, but not for HEADs. E.g.\r\n\r\n```js\r\napp.get('/', (req, res, next) => {\r\n   assert(req.method === 'GET');\r\n   ...\r\n});\r\n```\r\n\r\nlooks reasonable, but allows someone to crash the process. ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3149/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3149/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3148",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3148/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3148/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3148/events",
    "html_url": "https://github.com/expressjs/express/issues/3148",
    "id": 194564044,
    "node_id": "MDU6SXNzdWUxOTQ1NjQwNDQ=",
    "number": 3148,
    "title": "Is this usecase recommended or discouraged?",
    "user": {
      "login": "franciscop",
      "id": 2801252,
      "node_id": "MDQ6VXNlcjI4MDEyNTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2801252?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/franciscop",
      "html_url": "https://github.com/franciscop",
      "followers_url": "https://api.github.com/users/franciscop/followers",
      "following_url": "https://api.github.com/users/franciscop/following{/other_user}",
      "gists_url": "https://api.github.com/users/franciscop/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/franciscop/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/franciscop/subscriptions",
      "organizations_url": "https://api.github.com/users/franciscop/orgs",
      "repos_url": "https://api.github.com/users/franciscop/repos",
      "events_url": "https://api.github.com/users/franciscop/events{/privacy}",
      "received_events_url": "https://api.github.com/users/franciscop/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-12-09T10:37:53Z",
    "updated_at": "2017-01-28T19:26:08Z",
    "closed_at": "2016-12-10T17:59:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I created some modules for normalizing URLs in different ways (+ there are some others out there), so I would like to bundle them into a single module. This works right now:\r\n\r\n```js\r\napp.use((req, res, next) => {\r\n  req.app.use((req, res, next) => {\r\n    console.log(\"I am called!\");\r\n    next();\r\n  });\r\n  req.app.use((req, res, next) => {\r\n    console.log(\"Me too!\");\r\n    next();\r\n  });\r\n  console.log(\"Great\");\r\n  next();\r\n});\r\n```\r\n\r\nWhich correctly outputs:\r\n\r\n```\r\nGreat\r\nI am called!\r\nMe too!\r\n```\r\n\r\nHowever I worry that this is abusing express functionality/original intent. So I'd like to ask if this is frowned upon or perfectly valid within express' API.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3148/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3148/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3147",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3147/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3147/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3147/events",
    "html_url": "https://github.com/expressjs/express/issues/3147",
    "id": 194344805,
    "node_id": "MDU6SXNzdWUxOTQzNDQ4MDU=",
    "number": 3147,
    "title": "how to set etags disable for a single html",
    "user": {
      "login": "Thstone37",
      "id": 11756943,
      "node_id": "MDQ6VXNlcjExNzU2OTQz",
      "avatar_url": "https://avatars.githubusercontent.com/u/11756943?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Thstone37",
      "html_url": "https://github.com/Thstone37",
      "followers_url": "https://api.github.com/users/Thstone37/followers",
      "following_url": "https://api.github.com/users/Thstone37/following{/other_user}",
      "gists_url": "https://api.github.com/users/Thstone37/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Thstone37/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Thstone37/subscriptions",
      "organizations_url": "https://api.github.com/users/Thstone37/orgs",
      "repos_url": "https://api.github.com/users/Thstone37/repos",
      "events_url": "https://api.github.com/users/Thstone37/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Thstone37/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-12-08T14:09:19Z",
    "updated_at": "2017-02-19T21:10:15Z",
    "closed_at": "2017-02-19T21:10:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "![image](https://cloud.githubusercontent.com/assets/11756943/21012851/ee4af7a0-bd92-11e6-8f64-b7bb2c0ed890.png)\r\n ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3147/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3147/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3146",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3146/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3146/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3146/events",
    "html_url": "https://github.com/expressjs/express/pull/3146",
    "id": 194224953,
    "node_id": "MDExOlB1bGxSZXF1ZXN0OTcwNDM4MDY=",
    "number": 3146,
    "title": "add appendContent",
    "user": {
      "login": "txiaocao",
      "id": 3929991,
      "node_id": "MDQ6VXNlcjM5Mjk5OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3929991?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/txiaocao",
      "html_url": "https://github.com/txiaocao",
      "followers_url": "https://api.github.com/users/txiaocao/followers",
      "following_url": "https://api.github.com/users/txiaocao/following{/other_user}",
      "gists_url": "https://api.github.com/users/txiaocao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/txiaocao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/txiaocao/subscriptions",
      "organizations_url": "https://api.github.com/users/txiaocao/orgs",
      "repos_url": "https://api.github.com/users/txiaocao/repos",
      "events_url": "https://api.github.com/users/txiaocao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/txiaocao/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-12-08T01:39:43Z",
    "updated_at": "2016-12-08T03:07:59Z",
    "closed_at": "2016-12-08T03:07:43Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3146",
      "html_url": "https://github.com/expressjs/express/pull/3146",
      "diff_url": "https://github.com/expressjs/express/pull/3146.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3146.patch",
      "merged_at": null
    },
    "body": "the response is close when use response.send\r\nbut if i need send more,just like php flush\r\n\r\nsend(\"process.......1%\")\r\n// something\r\nsend(\"process.......20%\")\r\nsend(\"process.......100%\")",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3146/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3146/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3145",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3145/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3145/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3145/events",
    "html_url": "https://github.com/expressjs/express/issues/3145",
    "id": 193397609,
    "node_id": "MDU6SXNzdWUxOTMzOTc2MDk=",
    "number": 3145,
    "title": "Express should throw an error if `next()` is called without any more middleware in the stack",
    "user": {
      "login": "adamreisnz",
      "id": 490562,
      "node_id": "MDQ6VXNlcjQ5MDU2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/490562?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamreisnz",
      "html_url": "https://github.com/adamreisnz",
      "followers_url": "https://api.github.com/users/adamreisnz/followers",
      "following_url": "https://api.github.com/users/adamreisnz/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamreisnz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamreisnz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamreisnz/subscriptions",
      "organizations_url": "https://api.github.com/users/adamreisnz/orgs",
      "repos_url": "https://api.github.com/users/adamreisnz/repos",
      "events_url": "https://api.github.com/users/adamreisnz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamreisnz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2016-12-05T02:26:47Z",
    "updated_at": "2017-02-24T21:04:40Z",
    "closed_at": "2017-02-23T21:17:34Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I've spent half an hour trying to debug why the client was getting a 404 response back, and it turns out the cause was because we didn't have a middleware in place to close the request (e.g. `res.end()`). In other words, the last middleware in the stack called `next()` but there wasn't any more middleware to handle the request, so Express sent a 404 response.\r\n\r\nI don't think this should be the default behaviour, as this is clearly a case of programmer error. As such, I think express should throw an error instead, so that we can be made aware of the issue and add correct middleware in place or otherwise handle the error.\r\n\r\nSilently responding with a 404 makes a developer hunt their own middleware stack first to see if and why they are terminating the request with a 404, which they aren't.\r\n\r\nThoughts?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3145/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3145/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3144",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3144/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3144/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3144/events",
    "html_url": "https://github.com/expressjs/express/issues/3144",
    "id": 191969734,
    "node_id": "MDU6SXNzdWUxOTE5Njk3MzQ=",
    "number": 3144,
    "title": "app.mountpath only gives the last attached parent mountpaths",
    "user": {
      "login": "derMart",
      "id": 1069456,
      "node_id": "MDQ6VXNlcjEwNjk0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1069456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/derMart",
      "html_url": "https://github.com/derMart",
      "followers_url": "https://api.github.com/users/derMart/followers",
      "following_url": "https://api.github.com/users/derMart/following{/other_user}",
      "gists_url": "https://api.github.com/users/derMart/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/derMart/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/derMart/subscriptions",
      "organizations_url": "https://api.github.com/users/derMart/orgs",
      "repos_url": "https://api.github.com/users/derMart/repos",
      "events_url": "https://api.github.com/users/derMart/events{/privacy}",
      "received_events_url": "https://api.github.com/users/derMart/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-11-28T10:30:24Z",
    "updated_at": "2016-11-29T07:21:14Z",
    "closed_at": "2016-11-28T12:26:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "app.mountpath API documentation states:\r\n> If a sub-app is mounted on multiple path patterns, app.mountpath returns the list of patterns it is mounted on, as shown in the following example.\r\n\r\nIf I run\r\n\r\n```\r\nvar e = express();\r\nvar n = express();\r\n\r\nn.get('/sub', function(req, res) { res.end(); }\r\n\r\ne.use('/p1',n);\r\ne.use('/p2',n);\r\n\r\nconsole.log(n.mountpath);\r\n```\r\nresults in\r\n\r\n> /p2\r\n\r\nso it doesn't give all mounted paths but only the last attached.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3144/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3144/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3143",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3143/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3143/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3143/events",
    "html_url": "https://github.com/expressjs/express/pull/3143",
    "id": 191884789,
    "node_id": "MDExOlB1bGxSZXF1ZXN0OTU0MTYxNDk=",
    "number": 3143,
    "title": "Gracefully handle invalid status codes",
    "user": {
      "login": "nickclaw",
      "id": 2576091,
      "node_id": "MDQ6VXNlcjI1NzYwOTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2576091?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nickclaw",
      "html_url": "https://github.com/nickclaw",
      "followers_url": "https://api.github.com/users/nickclaw/followers",
      "following_url": "https://api.github.com/users/nickclaw/following{/other_user}",
      "gists_url": "https://api.github.com/users/nickclaw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nickclaw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nickclaw/subscriptions",
      "organizations_url": "https://api.github.com/users/nickclaw/orgs",
      "repos_url": "https://api.github.com/users/nickclaw/repos",
      "events_url": "https://api.github.com/users/nickclaw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nickclaw/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 98481977,
        "node_id": "MDU6TGFiZWw5ODQ4MTk3Nw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2016-11-27T20:50:36Z",
    "updated_at": "2020-04-19T00:50:13Z",
    "closed_at": "2020-04-19T00:50:13Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3143",
      "html_url": "https://github.com/expressjs/express/pull/3143",
      "diff_url": "https://github.com/expressjs/express/pull/3143.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3143.patch",
      "merged_at": null
    },
    "body": "#3137 off the 5.0 branch",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3143/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3143/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3142",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3142/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3142/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3142/events",
    "html_url": "https://github.com/expressjs/express/issues/3142",
    "id": 191875421,
    "node_id": "MDU6SXNzdWUxOTE4NzU0MjE=",
    "number": 3142,
    "title": "upgrade path-to-regexp package?",
    "user": {
      "login": "hellatan",
      "id": 2065840,
      "node_id": "MDQ6VXNlcjIwNjU4NDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2065840?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hellatan",
      "html_url": "https://github.com/hellatan",
      "followers_url": "https://api.github.com/users/hellatan/followers",
      "following_url": "https://api.github.com/users/hellatan/following{/other_user}",
      "gists_url": "https://api.github.com/users/hellatan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hellatan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hellatan/subscriptions",
      "organizations_url": "https://api.github.com/users/hellatan/orgs",
      "repos_url": "https://api.github.com/users/hellatan/repos",
      "events_url": "https://api.github.com/users/hellatan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hellatan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      },
      {
        "id": 133578716,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/deps",
        "name": "deps",
        "color": "444444",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2016-11-27T18:08:50Z",
    "updated_at": "2016-11-30T02:36:24Z",
    "closed_at": "2016-11-27T18:11:43Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I filed [this bug](https://github.com/pillarjs/path-to-regexp/issues/97) with the `path-to-regexp` package. However, I noticed that express@3.14.x is currently using path-to-regexp@0.1.7. I did a test install with path-to-regexp@1.7.0 and my local instance stopped having those issues in the ticket I linked to.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3142/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3142/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3141",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3141/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3141/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3141/events",
    "html_url": "https://github.com/expressjs/express/issues/3141",
    "id": 191743020,
    "node_id": "MDU6SXNzdWUxOTE3NDMwMjA=",
    "number": 3141,
    "title": "Generate ETags for safe HTTP methods only",
    "user": {
      "login": "mickaeltr",
      "id": 378910,
      "node_id": "MDQ6VXNlcjM3ODkxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/378910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mickaeltr",
      "html_url": "https://github.com/mickaeltr",
      "followers_url": "https://api.github.com/users/mickaeltr/followers",
      "following_url": "https://api.github.com/users/mickaeltr/following{/other_user}",
      "gists_url": "https://api.github.com/users/mickaeltr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mickaeltr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mickaeltr/subscriptions",
      "organizations_url": "https://api.github.com/users/mickaeltr/orgs",
      "repos_url": "https://api.github.com/users/mickaeltr/repos",
      "events_url": "https://api.github.com/users/mickaeltr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mickaeltr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 98481977,
        "node_id": "MDU6TGFiZWw5ODQ4MTk3Nw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-11-25T17:10:38Z",
    "updated_at": "2020-04-17T14:12:59Z",
    "closed_at": "2020-04-17T12:48:13Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello,\r\n\r\nI am wondering if it is possible to generate (strong) ETags for safe HTTP methods only.\r\n\r\n```js\r\napp.set(\"etag\", \"strong\"); // This generates ETags for all methods\r\n\r\napp.set(\"etag\", function (body, encoding) {\r\n    … // The method is not available here so ETags cannot be generated conditionally\r\n}\r\n```\r\n\r\nMy reasons are:\r\n- It probably takes time and resources to generate (strong) ETags\r\n- Most of time, applications use ETags only for caching (ie not on unsafe methods)\r\n- Some stupid HTTP clients send If-None-Match headers also for unsafe methods and get `412 Precondition Failed` responses!\r\n\r\nThank you",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3141/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3141/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3140",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3140/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3140/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3140/events",
    "html_url": "https://github.com/expressjs/express/issues/3140",
    "id": 191740180,
    "node_id": "MDU6SXNzdWUxOTE3NDAxODA=",
    "number": 3140,
    "title": "app.mountpath not correctly set when the express nesting level is greater than one",
    "user": {
      "login": "derMart",
      "id": 1069456,
      "node_id": "MDQ6VXNlcjEwNjk0NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1069456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/derMart",
      "html_url": "https://github.com/derMart",
      "followers_url": "https://api.github.com/users/derMart/followers",
      "following_url": "https://api.github.com/users/derMart/following{/other_user}",
      "gists_url": "https://api.github.com/users/derMart/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/derMart/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/derMart/subscriptions",
      "organizations_url": "https://api.github.com/users/derMart/orgs",
      "repos_url": "https://api.github.com/users/derMart/repos",
      "events_url": "https://api.github.com/users/derMart/events{/privacy}",
      "received_events_url": "https://api.github.com/users/derMart/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-11-25T16:54:16Z",
    "updated_at": "2016-11-28T12:30:11Z",
    "closed_at": "2016-11-25T17:13:55Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "when using this code in express 4\r\n\r\n```js\r\nvar nested2 = express();\r\nvar nested = express();\r\nvar server = express();\r\n\r\nnested2.get('/', function (req, res) {\r\n  res.end(nested2.mountpath);\r\n});\r\n\r\nnested.use('/nested2', nested2);\r\n\r\nserver.use('/nested', nested);\r\n```\r\n\r\nthen accessing\r\n\r\n> /nested/nested2\r\n\r\noutputs\r\n\r\n> /nested2\r\n\r\ninstead of\r\n\r\n> /nested/nested2\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3140/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3140/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3139",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3139/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3139/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3139/events",
    "html_url": "https://github.com/expressjs/express/issues/3139",
    "id": 191632431,
    "node_id": "MDU6SXNzdWUxOTE2MzI0MzE=",
    "number": 3139,
    "title": "Incorrent \"-if condition\" in response",
    "user": {
      "login": "sergey-borisov",
      "id": 18289455,
      "node_id": "MDQ6VXNlcjE4Mjg5NDU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/18289455?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sergey-borisov",
      "html_url": "https://github.com/sergey-borisov",
      "followers_url": "https://api.github.com/users/sergey-borisov/followers",
      "following_url": "https://api.github.com/users/sergey-borisov/following{/other_user}",
      "gists_url": "https://api.github.com/users/sergey-borisov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sergey-borisov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sergey-borisov/subscriptions",
      "organizations_url": "https://api.github.com/users/sergey-borisov/orgs",
      "repos_url": "https://api.github.com/users/sergey-borisov/repos",
      "events_url": "https://api.github.com/users/sergey-borisov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sergey-borisov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-11-25T06:22:37Z",
    "updated_at": "2016-11-25T06:28:04Z",
    "closed_at": "2016-11-25T06:27:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In this condition return always \"true\": https://github.com/expressjs/express/blob/master/lib/response.js#L163\r\n\r\nThis bug adds invalid parameter \"chartset\" for \"application/json\" header.\r\ndetails here: https://github.com/expressjs/express/issues/1631",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3139/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3139/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3138",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3138/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3138/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3138/events",
    "html_url": "https://github.com/expressjs/express/pull/3138",
    "id": 191585104,
    "node_id": "MDExOlB1bGxSZXF1ZXN0OTUyMjM4MDA=",
    "number": 3138,
    "title": "Ability to return a value from middleware",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-11-24T20:00:33Z",
    "updated_at": "2016-11-24T20:20:21Z",
    "closed_at": "2016-11-24T20:16:18Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3138",
      "html_url": "https://github.com/expressjs/express/pull/3138",
      "diff_url": "https://github.com/expressjs/express/pull/3138.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3138.patch",
      "merged_at": null
    },
    "body": "It adds ability to return a value from middleware",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3138/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3138/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3137",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3137/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3137/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3137/events",
    "html_url": "https://github.com/expressjs/express/pull/3137",
    "id": 191362005,
    "node_id": "MDExOlB1bGxSZXF1ZXN0OTUwNjY1MDI=",
    "number": 3137,
    "title": "Gracefully handle invalid status codes",
    "user": {
      "login": "nickclaw",
      "id": 2576091,
      "node_id": "MDQ6VXNlcjI1NzYwOTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2576091?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nickclaw",
      "html_url": "https://github.com/nickclaw",
      "followers_url": "https://api.github.com/users/nickclaw/followers",
      "following_url": "https://api.github.com/users/nickclaw/following{/other_user}",
      "gists_url": "https://api.github.com/users/nickclaw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nickclaw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nickclaw/subscriptions",
      "organizations_url": "https://api.github.com/users/nickclaw/orgs",
      "repos_url": "https://api.github.com/users/nickclaw/repos",
      "events_url": "https://api.github.com/users/nickclaw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nickclaw/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 98481977,
        "node_id": "MDU6TGFiZWw5ODQ4MTk3Nw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 11,
    "created_at": "2016-11-23T19:32:56Z",
    "updated_at": "2016-11-27T20:50:56Z",
    "closed_at": "2016-11-27T20:50:55Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3137",
      "html_url": "https://github.com/expressjs/express/pull/3137",
      "diff_url": "https://github.com/expressjs/express/pull/3137.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3137.patch",
      "merged_at": null
    },
    "body": "Currently if an invalid status code is sent in the response, node throws an exception on `writeHead` that afaik can't be handled in express. Instead it just leads to a hanging request. I realize that it's best practice for people to only send valid status codes, but I have seen:\r\n\r\n```if (err) res.sendStatus(err.code || 500)```\r\n\r\nfar too many times.\r\n\r\nThis change is similar to https://github.com/expressjs/express/pull/2797, which I think is ultimately a better solution. But this fix should be non breaking.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3137/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3137/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3136",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3136/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3136/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3136/events",
    "html_url": "https://github.com/expressjs/express/issues/3136",
    "id": 190861064,
    "node_id": "MDU6SXNzdWUxOTA4NjEwNjQ=",
    "number": 3136,
    "title": "res.redirect(404, '/path/') Not working. ",
    "user": {
      "login": "solocreativeco",
      "id": 14856298,
      "node_id": "MDQ6VXNlcjE0ODU2Mjk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/14856298?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/solocreativeco",
      "html_url": "https://github.com/solocreativeco",
      "followers_url": "https://api.github.com/users/solocreativeco/followers",
      "following_url": "https://api.github.com/users/solocreativeco/following{/other_user}",
      "gists_url": "https://api.github.com/users/solocreativeco/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/solocreativeco/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/solocreativeco/subscriptions",
      "organizations_url": "https://api.github.com/users/solocreativeco/orgs",
      "repos_url": "https://api.github.com/users/solocreativeco/repos",
      "events_url": "https://api.github.com/users/solocreativeco/events{/privacy}",
      "received_events_url": "https://api.github.com/users/solocreativeco/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-11-21T23:00:49Z",
    "updated_at": "2016-11-22T00:53:20Z",
    "closed_at": "2016-11-21T23:09:51Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This does not work.\r\n\r\n```res.redirect(404, '/path/to/404/page/')```\r\n\r\nThis does. \r\n\r\n```\r\nres.sendStatus(404)'\r\nres.redirect('/path/to/404/page/')\r\n```\r\n\r\nNot sure if that's by design in the case of a 404? Other status codes like `302` work fine. ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3136/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3136/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3135",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3135/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3135/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3135/events",
    "html_url": "https://github.com/expressjs/express/issues/3135",
    "id": 190647077,
    "node_id": "MDU6SXNzdWUxOTA2NDcwNzc=",
    "number": 3135,
    "title": "Feature Request: Get parameter position",
    "user": {
      "login": "julmot",
      "id": 8310677,
      "node_id": "MDQ6VXNlcjgzMTA2Nzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8310677?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/julmot",
      "html_url": "https://github.com/julmot",
      "followers_url": "https://api.github.com/users/julmot/followers",
      "following_url": "https://api.github.com/users/julmot/following{/other_user}",
      "gists_url": "https://api.github.com/users/julmot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/julmot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/julmot/subscriptions",
      "organizations_url": "https://api.github.com/users/julmot/orgs",
      "repos_url": "https://api.github.com/users/julmot/repos",
      "events_url": "https://api.github.com/users/julmot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/julmot/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2016-11-21T08:19:47Z",
    "updated_at": "2017-01-21T05:28:51Z",
    "closed_at": "2017-01-21T05:28:51Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "While you can retrieve GET parameters using [`req.query`](http://expressjs.com/de/api.html#req.query) I'm not familiar with a method to retrieve a parameter's position.\r\n\r\nLet me clarify the use case: I'm building a server that filters a database by given filter parameters, in the same order they are passed. Therefore I need to determine the arrangement of filter parameters.\r\n\r\nYou probably wouldn't like to add the position directly to the parameter, e.g. `req.query.x.pos`. Therefore my idea is to have a separate array with the positions, e.g. `req.queryPosition.x`.\r\n\r\n**Example**:\r\n\r\n/?test1=true&test2=false\r\n\r\n```javascript\r\nreq.queryPosition.test1\r\n// => 0\r\n\r\nreq.queryPosition.test2\r\n// => 1\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3135/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3135/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3134",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3134/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3134/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3134/events",
    "html_url": "https://github.com/expressjs/express/issues/3134",
    "id": 190578813,
    "node_id": "MDU6SXNzdWUxOTA1Nzg4MTM=",
    "number": 3134,
    "title": "Add Blueprint to Wiki documentation",
    "user": {
      "login": "hilljh82",
      "id": 2015997,
      "node_id": "MDQ6VXNlcjIwMTU5OTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2015997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hilljh82",
      "html_url": "https://github.com/hilljh82",
      "followers_url": "https://api.github.com/users/hilljh82/followers",
      "following_url": "https://api.github.com/users/hilljh82/following{/other_user}",
      "gists_url": "https://api.github.com/users/hilljh82/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hilljh82/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hilljh82/subscriptions",
      "organizations_url": "https://api.github.com/users/hilljh82/orgs",
      "repos_url": "https://api.github.com/users/hilljh82/repos",
      "events_url": "https://api.github.com/users/hilljh82/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hilljh82/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-11-20T19:46:35Z",
    "updated_at": "2016-11-25T17:26:25Z",
    "closed_at": "2016-11-25T17:26:25Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Blueprint is a new framework built atop of Express. \r\n\r\nhttps://github.com/onehilltech/blueprint\r\n\r\nCan it be added to the framework section on the Wiki:\r\n\r\nhttps://github.com/expressjs/express/wiki#frameworks-built-with-express",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3134/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3134/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3133",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3133/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3133/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3133/events",
    "html_url": "https://github.com/expressjs/express/issues/3133",
    "id": 190313574,
    "node_id": "MDU6SXNzdWUxOTAzMTM1NzQ=",
    "number": 3133,
    "title": "next('route') in middleware does not behave as documented when added with app.use",
    "user": {
      "login": "LaurentVB",
      "id": 2806149,
      "node_id": "MDQ6VXNlcjI4MDYxNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2806149?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LaurentVB",
      "html_url": "https://github.com/LaurentVB",
      "followers_url": "https://api.github.com/users/LaurentVB/followers",
      "following_url": "https://api.github.com/users/LaurentVB/following{/other_user}",
      "gists_url": "https://api.github.com/users/LaurentVB/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LaurentVB/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LaurentVB/subscriptions",
      "organizations_url": "https://api.github.com/users/LaurentVB/orgs",
      "repos_url": "https://api.github.com/users/LaurentVB/repos",
      "events_url": "https://api.github.com/users/LaurentVB/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LaurentVB/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2016-11-18T12:58:30Z",
    "updated_at": "2016-11-25T17:22:45Z",
    "closed_at": "2016-11-25T17:22:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello,\r\n\r\nI have been able to reduce this issue to a very simple test case:\r\n\r\n```js\r\nconst express = require('express');\r\nconst app = express();\r\n\r\nconst bypass = (req, res, next) => {\r\n  return next('route');\r\n};\r\n\r\napp.use(bypass, (req, res, next) => {\r\n  res.send('Should not happen');\r\n});\r\n\r\napp.get('/', (req, res, next) => {\r\n  res.send('Should happen');\r\n});\r\n\r\napp.listen(3000);\r\n```\r\n\r\nThe first call to `app.use` defines a middleware chain that should be bypassed by the first middleware, according to the documentation in http://expressjs.com/en/4x/api.html#app.use\r\nIn this test case, if I replace `app.use` by `app.(all|get|post|...)` it behaves as expected.\r\n\r\nIn my use case, though, I'm mounting a router with some subdomain precondition so I would like to write:\r\n\r\n```js\r\napp.use(subdomainPrecondition, require('./subdomainRouter'));\r\n```\r\n\r\nI'm using express 4.14.0 on node 6.9.1.\r\n\r\nRegards,\r\n\r\nLaurent",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3133/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3133/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3132",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3132/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3132/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3132/events",
    "html_url": "https://github.com/expressjs/express/issues/3132",
    "id": 190165483,
    "node_id": "MDU6SXNzdWUxOTAxNjU0ODM=",
    "number": 3132,
    "title": "Issue warnings when Express used in \"unexpected\" ways",
    "user": {
      "login": "adamreisnz",
      "id": 490562,
      "node_id": "MDQ6VXNlcjQ5MDU2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/490562?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamreisnz",
      "html_url": "https://github.com/adamreisnz",
      "followers_url": "https://api.github.com/users/adamreisnz/followers",
      "following_url": "https://api.github.com/users/adamreisnz/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamreisnz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamreisnz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamreisnz/subscriptions",
      "organizations_url": "https://api.github.com/users/adamreisnz/orgs",
      "repos_url": "https://api.github.com/users/adamreisnz/repos",
      "events_url": "https://api.github.com/users/adamreisnz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamreisnz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 18291,
        "node_id": "MDU6TGFiZWwxODI5MQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-11-17T21:12:36Z",
    "updated_at": "2016-11-17T22:17:06Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Overall, I am very pleased with Express and have developed very successful API's with it. However, I decided to raise this issue, because over the last couple of months, I've run into 3 separate very hard to debug issues with different apps, which all shared the same common root causes in Express.\r\n\r\nBasically in all of the cases it boiled down to user error, and was one of two things:\r\n\r\n1) [Calling `next()` twice in the same middleware](https://github.com/expressjs/express/issues/3024) due to a forgotten/omitted `return`.\r\n2) Ending a middleware stack prematurely with `res.end()` while there was more middleware expected to run\r\n\r\nIn each case, Express did not actually trigger an error, but the resulting behaviour of the app was very flaky and it took us a long time, literally hours, to pinpoint the problems which were in fact trivial to fix.\r\n\r\nSo my question is if it's possible to have Express \"guard\" against these kind of cases somehow and maybe depending on your configuration/settings, have Express trigger warnings if such unexpected behaviour is registered?\r\n\r\nI realize it's probably a valid use case to have some middleware in the middle of the stack terminate the response, so it would be hard to write rules around that, but I don't think it's ever expected that the same `next` handler is called twice in the same middleware.\r\n\r\nAny thoughts on how we as developers can better guard against such issues?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3132/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3132/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3131",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3131/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3131/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3131/events",
    "html_url": "https://github.com/expressjs/express/issues/3131",
    "id": 190017756,
    "node_id": "MDU6SXNzdWUxOTAwMTc3NTY=",
    "number": 3131,
    "title": "Error handling middleware not firing for clustered express",
    "user": {
      "login": "sumeetkpatel",
      "id": 4479653,
      "node_id": "MDQ6VXNlcjQ0Nzk2NTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4479653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sumeetkpatel",
      "html_url": "https://github.com/sumeetkpatel",
      "followers_url": "https://api.github.com/users/sumeetkpatel/followers",
      "following_url": "https://api.github.com/users/sumeetkpatel/following{/other_user}",
      "gists_url": "https://api.github.com/users/sumeetkpatel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sumeetkpatel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sumeetkpatel/subscriptions",
      "organizations_url": "https://api.github.com/users/sumeetkpatel/orgs",
      "repos_url": "https://api.github.com/users/sumeetkpatel/repos",
      "events_url": "https://api.github.com/users/sumeetkpatel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sumeetkpatel/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-11-17T11:18:33Z",
    "updated_at": "2017-02-23T21:52:23Z",
    "closed_at": "2016-11-17T12:40:34Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Using a clustered node app (using node's own cluster module), and express\r\n\r\nAdding an error middle-ware as such:\r\n```js\r\napp.use(function(err,req,res,next) {\r\n   console.log('hit');\r\n});\r\n```\r\n\r\nThen firing an error on request:\r\n```js\r\napp.get('/crash', function(req, res){\r\n\tres.end('OK');\r\n\tthrow new Error(\"Crashing as requested.\");\r\n});\r\n```\r\n\r\nDoesn't seem to log the error at all, but the exception is seen in the console.\r\n\r\n**How come the middle-ware doesn't run?**\r\n\r\nIf clustering code is removed then the handler runs.\r\n\r\nEdit: Managed to fix it by moving the middleware right to the end of the file, **the kicker was AFTER any routes.**",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3131/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3131/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3130",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3130/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3130/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3130/events",
    "html_url": "https://github.com/expressjs/express/pull/3130",
    "id": 189970076,
    "node_id": "MDExOlB1bGxSZXF1ZXN0OTQxMTkzNDI=",
    "number": 3130,
    "title": "Issue #3129 : few typos fixes",
    "user": {
      "login": "VishvajitP",
      "id": 5609697,
      "node_id": "MDQ6VXNlcjU2MDk2OTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5609697?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VishvajitP",
      "html_url": "https://github.com/VishvajitP",
      "followers_url": "https://api.github.com/users/VishvajitP/followers",
      "following_url": "https://api.github.com/users/VishvajitP/following{/other_user}",
      "gists_url": "https://api.github.com/users/VishvajitP/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VishvajitP/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VishvajitP/subscriptions",
      "organizations_url": "https://api.github.com/users/VishvajitP/orgs",
      "repos_url": "https://api.github.com/users/VishvajitP/repos",
      "events_url": "https://api.github.com/users/VishvajitP/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VishvajitP/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 133578714,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/tests",
        "name": "tests",
        "color": "944008",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-11-17T08:06:59Z",
    "updated_at": "2016-11-18T18:44:07Z",
    "closed_at": "2016-11-18T18:44:07Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3130",
      "html_url": "https://github.com/expressjs/express/pull/3130",
      "diff_url": "https://github.com/expressjs/express/pull/3130.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3130.patch",
      "merged_at": null
    },
    "body": "test/app.options.js\r\n`respone`  => `response `\r\n\r\ntest/app.router.js\r\n`paranthesis` => `paranthesis `\r\n\r\ntest/req.acceptsEncoding.js, test/req.acceptsEncodings.js, test/req.acceptsLanguage.js, test/req.acceptsLanguages.js\r\n`accpeted` => `accepted` ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3130/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3130/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3129",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3129/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3129/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3129/events",
    "html_url": "https://github.com/expressjs/express/issues/3129",
    "id": 189969894,
    "node_id": "MDU6SXNzdWUxODk5Njk4OTQ=",
    "number": 3129,
    "title": "Few typos",
    "user": {
      "login": "VishvajitP",
      "id": 5609697,
      "node_id": "MDQ6VXNlcjU2MDk2OTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5609697?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VishvajitP",
      "html_url": "https://github.com/VishvajitP",
      "followers_url": "https://api.github.com/users/VishvajitP/followers",
      "following_url": "https://api.github.com/users/VishvajitP/following{/other_user}",
      "gists_url": "https://api.github.com/users/VishvajitP/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VishvajitP/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VishvajitP/subscriptions",
      "organizations_url": "https://api.github.com/users/VishvajitP/orgs",
      "repos_url": "https://api.github.com/users/VishvajitP/repos",
      "events_url": "https://api.github.com/users/VishvajitP/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VishvajitP/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-11-17T08:05:56Z",
    "updated_at": "2016-11-18T18:50:04Z",
    "closed_at": "2016-11-18T18:50:04Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "test/app.options.js\r\nrespone => response\r\n\r\ntest/app.router.js\r\nparanthesis => paranthesis\r\n\r\ntest/req.acceptsEncoding.js, test/req.acceptsEncodings.js, test/req.acceptsLanguage.js, test/req.acceptsLanguages.js\r\naccpeted => accepted\r\n\r\nPR  #3130.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3129/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3129/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3128",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3128/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3128/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3128/events",
    "html_url": "https://github.com/expressjs/express/issues/3128",
    "id": 189648925,
    "node_id": "MDU6SXNzdWUxODk2NDg5MjU=",
    "number": 3128,
    "title": "How can I get direct access to the middlewares stack?",
    "user": {
      "login": "rkt2spc",
      "id": 17026876,
      "node_id": "MDQ6VXNlcjE3MDI2ODc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/17026876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkt2spc",
      "html_url": "https://github.com/rkt2spc",
      "followers_url": "https://api.github.com/users/rkt2spc/followers",
      "following_url": "https://api.github.com/users/rkt2spc/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkt2spc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkt2spc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkt2spc/subscriptions",
      "organizations_url": "https://api.github.com/users/rkt2spc/orgs",
      "repos_url": "https://api.github.com/users/rkt2spc/repos",
      "events_url": "https://api.github.com/users/rkt2spc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkt2spc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2016-11-16T09:50:28Z",
    "updated_at": "2016-11-20T15:20:17Z",
    "closed_at": "2016-11-20T15:20:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "So that I can remove middlewares, add middlewares from/to arbitrary positions dynamically at run time",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3128/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3128/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3127",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3127/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3127/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3127/events",
    "html_url": "https://github.com/expressjs/express/issues/3127",
    "id": 189422505,
    "node_id": "MDU6SXNzdWUxODk0MjI1MDU=",
    "number": 3127,
    "title": "Using sendFile for a 500 throws \"Request aborted\"",
    "user": {
      "login": "phortuin",
      "id": 137299,
      "node_id": "MDQ6VXNlcjEzNzI5OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phortuin",
      "html_url": "https://github.com/phortuin",
      "followers_url": "https://api.github.com/users/phortuin/followers",
      "following_url": "https://api.github.com/users/phortuin/following{/other_user}",
      "gists_url": "https://api.github.com/users/phortuin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phortuin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phortuin/subscriptions",
      "organizations_url": "https://api.github.com/users/phortuin/orgs",
      "repos_url": "https://api.github.com/users/phortuin/repos",
      "events_url": "https://api.github.com/users/phortuin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phortuin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2016-11-15T15:29:19Z",
    "updated_at": "2016-11-15T16:27:36Z",
    "closed_at": "2016-11-15T16:17:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am trying to send a static `500.html` since I don’t want to rely on template rendering for my error pages (since the template renderer itself may be the cause of the problem).\r\n\r\n``` javascript\r\napp.use((err, req, res, next) => {\r\n\tres.status(500).sendFile('/path/to/500.html', (err) => {\r\n\t\tconsole.error(err);\r\n\t\tnext(err);\r\n\t});\r\n});\r\n```\r\n\r\nThis throws an `ECONNABORTED` error:\r\n\r\n```\r\n{ [Error: Request aborted] code: 'ECONNABORTED' }\r\n```\r\n\r\nI can get pretty much any other by-the-numbers 500 implementation working, just not `sendFile`. I can’t find any documentation on it either. Am I missing something? Or am I using `sendFile` in an uncommon way?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3127/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3127/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3126",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3126/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3126/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3126/events",
    "html_url": "https://github.com/expressjs/express/issues/3126",
    "id": 189264576,
    "node_id": "MDU6SXNzdWUxODkyNjQ1NzY=",
    "number": 3126,
    "title": "Cannot install in El Capitan",
    "user": {
      "login": "revjtanton",
      "id": 6391564,
      "node_id": "MDQ6VXNlcjYzOTE1NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6391564?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/revjtanton",
      "html_url": "https://github.com/revjtanton",
      "followers_url": "https://api.github.com/users/revjtanton/followers",
      "following_url": "https://api.github.com/users/revjtanton/following{/other_user}",
      "gists_url": "https://api.github.com/users/revjtanton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/revjtanton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/revjtanton/subscriptions",
      "organizations_url": "https://api.github.com/users/revjtanton/orgs",
      "repos_url": "https://api.github.com/users/revjtanton/repos",
      "events_url": "https://api.github.com/users/revjtanton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/revjtanton/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-11-15T00:20:44Z",
    "updated_at": "2016-11-15T00:28:35Z",
    "closed_at": "2016-11-15T00:28:35Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I've been working on this for a while and it's the simplest thing....I NEED to simply install express so I can move on and actually work.  No matter what I do I get this same error and express won't install:\r\n`➜  ~ npm install -g express\r\nnpm WARN checkPermissions Missing write access to /Users/revjtanton/.nvm/versions/node/v0.12.2/lib/node_modules/express\r\n/Users/revjtanton/.nvm/versions/node/v0.12.2/lib\r\n└── express@4.14.0\r\n\r\nnpm ERR! Darwin 15.6.0\r\nnpm ERR! argv \"node\" \"/Users/revjtanton/.nvm/versions/node/v0.12.2/bin/npm\" \"install\" \"-g\" \"express\"\r\nnpm ERR! node v0.12.2\r\nnpm ERR! npm  v3.9.3\r\nnpm ERR! path /Users/revjtanton/.nvm/versions/node/v0.12.2/lib/node_modules/express\r\nnpm ERR! code EACCES\r\nnpm ERR! errno -13\r\n\r\nnpm ERR! Error: EACCES, access '/Users/revjtanton/.nvm/versions/node/v0.12.2/lib/node_modules/express'\r\nnpm ERR!     at Error (native)\r\nnpm ERR!  { [Error: EACCES, access '/Users/revjtanton/.nvm/versions/node/v0.12.2/lib/node_modules/express']\r\nnpm ERR!   errno: -13,\r\nnpm ERR!   code: 'EACCES',\r\nnpm ERR!   path: '/Users/revjtanton/.nvm/versions/node/v0.12.2/lib/node_modules/express' }\r\nnpm ERR!\r\nnpm ERR! Please try running this command again as root/Administrator.\r\n\r\nnpm ERR! Please include the following file with any support request:\r\nnpm ERR!     /Users/revjtanton/npm-debug.log`\r\n\r\nI've managed permissions, cleaned caches, tried installing with sudo (which doesn't produce an error...but I'm still not able to use express). ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3126/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3126/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3125",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3125/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3125/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3125/events",
    "html_url": "https://github.com/expressjs/express/issues/3125",
    "id": 188741431,
    "node_id": "MDU6SXNzdWUxODg3NDE0MzE=",
    "number": 3125,
    "title": "baseUrl return nothing",
    "user": {
      "login": "calidion",
      "id": 131776,
      "node_id": "MDQ6VXNlcjEzMTc3Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/131776?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/calidion",
      "html_url": "https://github.com/calidion",
      "followers_url": "https://api.github.com/users/calidion/followers",
      "following_url": "https://api.github.com/users/calidion/following{/other_user}",
      "gists_url": "https://api.github.com/users/calidion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/calidion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/calidion/subscriptions",
      "organizations_url": "https://api.github.com/users/calidion/orgs",
      "repos_url": "https://api.github.com/users/calidion/repos",
      "events_url": "https://api.github.com/users/calidion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/calidion/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 11,
    "created_at": "2016-11-11T11:35:22Z",
    "updated_at": "2021-04-19T12:09:11Z",
    "closed_at": "2016-11-11T14:03:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "the request url is `/validations/2?username=sdfsf&c=3`\r\nit is expected that `req.baseUrl` will be `/validations/2`, but got nothing.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3125/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3125/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3124",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3124/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3124/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3124/events",
    "html_url": "https://github.com/expressjs/express/issues/3124",
    "id": 188720395,
    "node_id": "MDU6SXNzdWUxODg3MjAzOTU=",
    "number": 3124,
    "title": "View engines `require` logic can fail under some conditions ",
    "user": {
      "login": "th0r",
      "id": 302213,
      "node_id": "MDQ6VXNlcjMwMjIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/302213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/th0r",
      "html_url": "https://github.com/th0r",
      "followers_url": "https://api.github.com/users/th0r/followers",
      "following_url": "https://api.github.com/users/th0r/following{/other_user}",
      "gists_url": "https://api.github.com/users/th0r/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/th0r/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/th0r/subscriptions",
      "organizations_url": "https://api.github.com/users/th0r/orgs",
      "repos_url": "https://api.github.com/users/th0r/repos",
      "events_url": "https://api.github.com/users/th0r/events{/privacy}",
      "received_events_url": "https://api.github.com/users/th0r/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 88345,
        "node_id": "MDU6TGFiZWw4ODM0NQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/3.x",
        "name": "3.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-11-11T09:36:44Z",
    "updated_at": "2016-11-11T14:09:48Z",
    "closed_at": "2016-11-11T14:00:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm talking about [this line](https://github.com/expressjs/express/blob/master/lib/view.js#L78).\r\n\r\nI've created a [repo](https://github.com/th0r/express-view-engines-bug) that shows a bug.\r\n\r\n#### Conditions that cause it:\r\n1. Package manager that flattens `node_modules` structure should be used (`npm 3` or `yarn`).\r\n2. Project and some of it's deps should use unconflicting (semver-compatible) versions of `express` (in my repo it's `webpack-bundle-analyzer`)\r\n3. Project (or some of it's deps) and this dep should have incompatible versions of the same template engine (in my repo project uses `ejs 0.8.8` and `webpack-bundle-analyzer` uses `ejs ^2.5.2`)\r\n\r\n#### How to reproduce a bug:\r\nClone [this repo](https://github.com/th0r/express-view-engines-bug) and run `npm i && npm start` or `yarn && yarn run start` (remember to use `npm 3`).\r\n\r\nYou'll see an error `ENOENT: no such file or directory, open '/Volumes/Work/express-view-engines-bug/node_modules/webpack-bundle-analyzer/views/('style', { filename: 'viewer.css' })'`.\r\n\r\nThis is because `webpack-bundle-analyzer` expects `express` to use `ejs ^2.5.2` from it's deps as view engine with it's new syntax for `include` method, but instead it loads `ejs 0.8.8` (project's dep) with old `include` syntax.\r\n\r\n#### Why that happens\r\nAfter `npm install` `node_modules` has the following **flattened**  structure (condition 1):\r\n```\r\nnode_modules\r\n|- express\r\n|- ejs 0.8.8\r\n|- webpack-bundle-analyzer\r\n|- |- node_modules\r\n|- |- |- ejs 2.5.2\r\n```\r\n\r\nNote that `webpack-bundle-analyzer` doesn't have it's own copy of `express` under `node_modules` because it's version matches project's `express` dep (condition 2).\r\n\r\nWhen `webpack-bundle-analyzer` starts express app it sets `ejs` as default view engine.\r\n[This line](https://github.com/expressjs/express/blob/master/lib/view.js#L78) requires `ejs` and `node` loads wrong version of it from `<project>/node_modules/ejs` (condition 3) because `express` is located in `<project>/node_modules/express`, but it should load it from `<project>/node_modules/webpack-bundle-analyzer/node_modules/ejs`.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3124/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3124/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3123",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3123/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3123/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3123/events",
    "html_url": "https://github.com/expressjs/express/pull/3123",
    "id": 188506017,
    "node_id": "MDExOlB1bGxSZXF1ZXN0OTMxNDg2MjM=",
    "number": 3123,
    "title": "Update Readme.md, add yarn ",
    "user": {
      "login": "xcarpentier",
      "id": 923036,
      "node_id": "MDQ6VXNlcjkyMzAzNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/923036?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xcarpentier",
      "html_url": "https://github.com/xcarpentier",
      "followers_url": "https://api.github.com/users/xcarpentier/followers",
      "following_url": "https://api.github.com/users/xcarpentier/following{/other_user}",
      "gists_url": "https://api.github.com/users/xcarpentier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xcarpentier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xcarpentier/subscriptions",
      "organizations_url": "https://api.github.com/users/xcarpentier/orgs",
      "repos_url": "https://api.github.com/users/xcarpentier/repos",
      "events_url": "https://api.github.com/users/xcarpentier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xcarpentier/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-11-10T13:18:09Z",
    "updated_at": "2016-11-10T21:17:54Z",
    "closed_at": "2016-11-10T16:38:34Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3123",
      "html_url": "https://github.com/expressjs/express/pull/3123",
      "diff_url": "https://github.com/expressjs/express/pull/3123.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3123.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3123/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3123/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3122",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3122/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3122/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3122/events",
    "html_url": "https://github.com/expressjs/express/issues/3122",
    "id": 188001126,
    "node_id": "MDU6SXNzdWUxODgwMDExMjY=",
    "number": 3122,
    "title": "Bug in app.param and error thrown from middleware",
    "user": {
      "login": "q42jaap",
      "id": 114642,
      "node_id": "MDQ6VXNlcjExNDY0Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/114642?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/q42jaap",
      "html_url": "https://github.com/q42jaap",
      "followers_url": "https://api.github.com/users/q42jaap/followers",
      "following_url": "https://api.github.com/users/q42jaap/following{/other_user}",
      "gists_url": "https://api.github.com/users/q42jaap/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/q42jaap/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/q42jaap/subscriptions",
      "organizations_url": "https://api.github.com/users/q42jaap/orgs",
      "repos_url": "https://api.github.com/users/q42jaap/repos",
      "events_url": "https://api.github.com/users/q42jaap/events{/privacy}",
      "received_events_url": "https://api.github.com/users/q42jaap/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-11-08T14:10:24Z",
    "updated_at": "2016-11-12T19:28:22Z",
    "closed_at": "2016-11-08T14:33:02Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Repro in: https://github.com/q42jaap/express-bug\r\n\r\nWhat I have is a super small express setup with a param and two handlers.\r\n\r\n```\r\nvar express = require('express');\r\nvar app = express();\r\n\r\napp.get('/crash', function(req, res, next) {\r\n  console.log('about to crash');\r\n  throw new Error('crashing');\r\n});\r\n\r\napp.param('key', function(req, res, next, key) {\r\n  console.log('going to send 404');\r\n  res.sendStatus(404);\r\n});\r\n\r\napp.use('/:key', function(req, res, next) {\r\n  // we'll never reach this\r\n  res.sendStatus(204);\r\n});\r\n\r\napp.listen(3000);\r\n```\r\n\r\nI'm testing this using `curl -v http://localhost:3000/crash`\r\nI'm expecting the result to be a 500, but it's a 404 instead. The 404 is sent by the `.param` middleware. I'm not sure why the middleware gets called.\r\n\r\nWhen experimenting with the code, I discovered that disabling the `/:key` handler causes the `.param` function not be called when I raise the error in the `crash` handler.\r\n\r\nI believe this is a bug in express.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3122/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3122/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3121",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3121/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3121/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3121/events",
    "html_url": "https://github.com/expressjs/express/issues/3121",
    "id": 187976662,
    "node_id": "MDU6SXNzdWUxODc5NzY2NjI=",
    "number": 3121,
    "title": "How to add a stringified script tag in a script",
    "user": {
      "login": "terencechow",
      "id": 1937276,
      "node_id": "MDQ6VXNlcjE5MzcyNzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1937276?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/terencechow",
      "html_url": "https://github.com/terencechow",
      "followers_url": "https://api.github.com/users/terencechow/followers",
      "following_url": "https://api.github.com/users/terencechow/following{/other_user}",
      "gists_url": "https://api.github.com/users/terencechow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/terencechow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/terencechow/subscriptions",
      "organizations_url": "https://api.github.com/users/terencechow/orgs",
      "repos_url": "https://api.github.com/users/terencechow/repos",
      "events_url": "https://api.github.com/users/terencechow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/terencechow/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-11-08T12:14:26Z",
    "updated_at": "2016-11-08T23:02:06Z",
    "closed_at": "2016-11-08T12:26:29Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have express using pug as a view. My index.pug has the following:\r\n\r\n```\r\nscript(type='text/javascript').\r\n      window.__DATA__ = !{payload}\r\n```\r\n\r\nwhere payload is a json object. It has been stringified in the render function of express:\r\n\r\n```\r\nres.render('index', {\r\n    payload : JSON.stringify({\r\n           \"anExample\": \"<script></script>\"\r\n     })\r\n  })\r\n```\r\n\r\nWhen my Json object has `</script>` it terminates my `window.__DATA =` function early due to the ending script tag. How can I prevent this from blowing up my page? Is this a limitation of Pug or Express or the browser?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3121/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3121/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3120",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3120/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3120/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3120/events",
    "html_url": "https://github.com/expressjs/express/issues/3120",
    "id": 187536467,
    "node_id": "MDU6SXNzdWUxODc1MzY0Njc=",
    "number": 3120,
    "title": "next('route') not working",
    "user": {
      "login": "kuolun",
      "id": 7124250,
      "node_id": "MDQ6VXNlcjcxMjQyNTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7124250?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kuolun",
      "html_url": "https://github.com/kuolun",
      "followers_url": "https://api.github.com/users/kuolun/followers",
      "following_url": "https://api.github.com/users/kuolun/following{/other_user}",
      "gists_url": "https://api.github.com/users/kuolun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kuolun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kuolun/subscriptions",
      "organizations_url": "https://api.github.com/users/kuolun/orgs",
      "repos_url": "https://api.github.com/users/kuolun/repos",
      "events_url": "https://api.github.com/users/kuolun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kuolun/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2016-11-06T02:02:25Z",
    "updated_at": "2016-11-06T11:42:17Z",
    "closed_at": "2016-11-06T02:14:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I copy the documentation code from here\r\nhttp://expressjs.com/en/guide/using-middleware.html#middleware.application\r\n<img width=\"769\" alt=\"2016-11-06_09-45-49\" src=\"https://cloud.githubusercontent.com/assets/7124250/20034840/19a47074-a408-11e6-83c0-6490167226df.png\">\r\n\r\nand change `res.render` to `res.send`\r\n<img width=\"692\" alt=\"2016-11-06_09-52-38\" src=\"https://cloud.githubusercontent.com/assets/7124250/20034837/ec40e1a8-a407-11e6-815e-8287b6fb7495.png\">\r\n\r\nwhen I type **localhost:3000/user/0**\r\nI still get the response of 'regular' on the page\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3120/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3120/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3119",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3119/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3119/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3119/events",
    "html_url": "https://github.com/expressjs/express/issues/3119",
    "id": 187235703,
    "node_id": "MDU6SXNzdWUxODcyMzU3MDM=",
    "number": 3119,
    "title": "Middleware usage with extra arguments",
    "user": {
      "login": "fselcukcan",
      "id": 5363259,
      "node_id": "MDQ6VXNlcjUzNjMyNTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5363259?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fselcukcan",
      "html_url": "https://github.com/fselcukcan",
      "followers_url": "https://api.github.com/users/fselcukcan/followers",
      "following_url": "https://api.github.com/users/fselcukcan/following{/other_user}",
      "gists_url": "https://api.github.com/users/fselcukcan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fselcukcan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fselcukcan/subscriptions",
      "organizations_url": "https://api.github.com/users/fselcukcan/orgs",
      "repos_url": "https://api.github.com/users/fselcukcan/repos",
      "events_url": "https://api.github.com/users/fselcukcan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fselcukcan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2016-11-04T01:50:34Z",
    "updated_at": "2022-03-27T00:53:29Z",
    "closed_at": "2022-03-27T00:53:29Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "On the **optional arguments to an Express.js middleware** , probaly a fourth one apart from being an error handling middleware and at ideal many arguments without any Express.js specific limit, I have a logic where it comes useful. It may be achieved by a different way, but anyways. But this is **not data passing between middleware**, maybe this question should have its own post. I have already suggested some solutions for this, and osme what I was guessed of, however, this can be taken as a design suggestion for bettering the Express.js middleware use pattern. Thanks in advance.\r\n\r\nI want to make some api routes permission checked, the middleware I wish to write should look up database for a requesting user for how many reputation points (integer) he/she has. I defined an object to hold privileges and reputation points required as key value pairs. Later, middleware should look up this privileges object to see if the user has greater than or equal reputation points for a **corresponding action**. I want to pass this **corresponding action** name which is a key in the privileges object as a different string for each route.\r\n\r\nBy the way, apparently I also need route based (not Router based) middleware mounting, I am not sure if Express.js supports, but this is another story.\r\n\r\nMaybe one can describe and ask this use case as **can I parametrize a middleware function with my parameters, not just by incoming req and res objects?**\r\n\r\n```\r\n/// Privilege Check middleware\r\n// used per route with corresponding actionName\r\n// signature function (request, response, next, actionNameOneOfKeysInPrevilegesObject::String)\r\nvar privilegeCheck = function (req, res, next, actionName) {\r\n\tdb.one(\r\n\t\t`\r\n\t\t\tSELECT reputation FROM users WHERE id = $(id)\r\n\t\t`,\r\n\t\t{id: req.user.id} // remember req.user was set by jwt.sign(data) during login or signup with demanded data; here it is {id:, name:, username:,}\r\n\t)\r\n\t\t.then(function (data) {\r\n\t\t\tif(data >= privileges[actionName]) {\r\n\t\t\t\tnext();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tres.status(403).json({errorMessage: \"You need to have \" + privileges.questionUpvote + \" reputation to upvote.\"});\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(function (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t})\r\n};\r\n```\r\n\r\n```\r\n// reputations needed for privileged actions\r\nvar privileges =\r\n{\r\n\tquestionAsk: 5,\r\n\tanswer: 15,\r\n\tacceptAnswer: 0,\r\n\tcomment: 5,\r\n\tquestionEdit: 20,\r\n\tanswerEdit: 20,\r\n\tcommentsEdit: 0,\r\n\tpostsUpvote: 30,\r\n\tpostsDownvote: 30,\r\n\tcommentsUpvote: 5,\r\n\tquestionUpvote: 10,\r\n\tquestionDownvote: 125,\r\n}\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3119/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3119/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3118",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3118/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3118/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3118/events",
    "html_url": "https://github.com/expressjs/express/issues/3118",
    "id": 186898266,
    "node_id": "MDU6SXNzdWUxODY4OTgyNjY=",
    "number": 3118,
    "title": "Trust Proxy settings not being respected",
    "user": {
      "login": "sanchitgera",
      "id": 8632167,
      "node_id": "MDQ6VXNlcjg2MzIxNjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8632167?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sanchitgera",
      "html_url": "https://github.com/sanchitgera",
      "followers_url": "https://api.github.com/users/sanchitgera/followers",
      "following_url": "https://api.github.com/users/sanchitgera/following{/other_user}",
      "gists_url": "https://api.github.com/users/sanchitgera/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sanchitgera/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sanchitgera/subscriptions",
      "organizations_url": "https://api.github.com/users/sanchitgera/orgs",
      "repos_url": "https://api.github.com/users/sanchitgera/repos",
      "events_url": "https://api.github.com/users/sanchitgera/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sanchitgera/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2016-11-02T19:31:13Z",
    "updated_at": "2016-11-02T22:29:28Z",
    "closed_at": "2016-11-02T22:19:36Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have set up an Express app with Morgan for logging behind an NGINX proxy. I have configured the `trust proxy` setting in my root file like so: \r\n\r\n```\r\napp.set('trust proxy', true);\r\n\r\nlet controllers = require('./controllers');\r\napp.use('/', controllers); \r\n\r\nif (process.env.NODE_ENV !== 'test') {\r\n    app.use(morgan('combined', {\r\n      'stream': logger.stream\r\n    }));\r\n}\r\n```\r\n\r\nBut when I actually run the app and start making requests, I see the following error trace: \r\n\r\n```\r\n   \"stack\":[  \r\n      \"TypeError: trust argument is required\",\r\n      \"    at proxyaddr (/home/cadror_deploy/app/gatekeeper/staging/releases/20161101222206/node_modules/proxy-addr/index.js:259:11)\",\r\n      \"    at IncomingMessage.ip (/home/cadror_deploy/app/gatekeeper/staging/releases/20161101222206/node_modules/express/lib/request.js:328:10)\",\r\n      \"    at Function.getip [as remote-addr] (/home/cadror_deploy/app/gatekeeper/staging/releases/20161101222206/node_modules/morgan/index.js:458:13)\",\r\n      \"    at eval (eval at compile (/home/cadror_deploy/app/gatekeeper/staging/releases/20161101222206/node_modules/morgan/index.js:1:0), <anonymous>:4:29)\",\r\n      \"    at Array.logRequest (/home/cadror_deploy/app/gatekeeper/staging/releases/20161101222206/node_modules/morgan/index.js:122:18)\",\r\n      \"    at listener (/home/cadror_deploy/app/gatekeeper/staging/releases/20161101222206/node_modules/on-finished/index.js:169:15)\",\r\n      \"    at onFinish (/home/cadror_deploy/app/gatekeeper/staging/releases/20161101222206/node_modules/on-finished/index.js:100:5)\",\r\n      \"    at callback (/home/cadror_deploy/app/gatekeeper/staging/releases/20161101222206/node_modules/ee-first/index.js:55:10)\",\r\n      \"    at ServerResponse.onevent (/home/cadror_deploy/app/gatekeeper/staging/releases/20161101222206/node_modules/ee-first/index.js:93:5)\",\r\n      \"    at emitNone (events.js:85:20)\",\r\n      \"    at ServerResponse.emit (events.js:179:7)\",\r\n      \"    at finish (_http_outgoing.js:551:10)\",\r\n      \"    at _combinedTickCallback (node.js:376:9)\",\r\n      \"    at process._tickDomainCallback (node.js:431:11)\"\r\n   ],\r\n   \"level\":\"error\",\r\n   \"message\":\"uncaughtException: trust argument is required\",\r\n   \"timestamp\":\"2016-11-02T18:20:20.026Z\"\r\n```\r\n\r\nIt appears that Morgan attempts to get the ip address of the incoming request using the getter defined by Express, but fails because the trust argument is set to false. Any thoughts? \r\n\r\nI have also tried wrapping the second argument in `app.set('trust proxy' in a function but that doesn't make a difference. Thanks! ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3118/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3118/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3117",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3117/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3117/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3117/events",
    "html_url": "https://github.com/expressjs/express/issues/3117",
    "id": 186222723,
    "node_id": "MDU6SXNzdWUxODYyMjI3MjM=",
    "number": 3117,
    "title": "why express static middleware interrupt req with path '/', and send index.html??",
    "user": {
      "login": "leekangtaqi",
      "id": 5259489,
      "node_id": "MDQ6VXNlcjUyNTk0ODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5259489?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leekangtaqi",
      "html_url": "https://github.com/leekangtaqi",
      "followers_url": "https://api.github.com/users/leekangtaqi/followers",
      "following_url": "https://api.github.com/users/leekangtaqi/following{/other_user}",
      "gists_url": "https://api.github.com/users/leekangtaqi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leekangtaqi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leekangtaqi/subscriptions",
      "organizations_url": "https://api.github.com/users/leekangtaqi/orgs",
      "repos_url": "https://api.github.com/users/leekangtaqi/repos",
      "events_url": "https://api.github.com/users/leekangtaqi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leekangtaqi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-10-31T07:43:12Z",
    "updated_at": "2016-11-01T01:59:48Z",
    "closed_at": "2016-11-01T01:58:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "```js\r\nvar express = require('express');\r\nvar app = express();\r\nvar server = require('http').createServer(app);\r\napp.use(express.static('public'));      //  interrupt req with path '/'  and send a index.html file base on root, why??\r\napp.use(function(req, res, next){\r\n  console.warn('...')        // never call ................\r\n  next();\r\n})\r\nserver.listen(3000)\r\n```\r\n\r\nlocalhost:3000/\r\n\r\nsend me a  index.html ????",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3117/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3117/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3116",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3116/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3116/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3116/events",
    "html_url": "https://github.com/expressjs/express/issues/3116",
    "id": 185899947,
    "node_id": "MDU6SXNzdWUxODU4OTk5NDc=",
    "number": 3116,
    "title": "why not extract expressjs router to independence package?",
    "user": {
      "login": "i5ting",
      "id": 3118295,
      "node_id": "MDQ6VXNlcjMxMTgyOTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3118295?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/i5ting",
      "html_url": "https://github.com/i5ting",
      "followers_url": "https://api.github.com/users/i5ting/followers",
      "following_url": "https://api.github.com/users/i5ting/following{/other_user}",
      "gists_url": "https://api.github.com/users/i5ting/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/i5ting/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/i5ting/subscriptions",
      "organizations_url": "https://api.github.com/users/i5ting/orgs",
      "repos_url": "https://api.github.com/users/i5ting/repos",
      "events_url": "https://api.github.com/users/i5ting/events{/privacy}",
      "received_events_url": "https://api.github.com/users/i5ting/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2016-10-28T11:25:59Z",
    "updated_at": "2016-10-28T14:24:17Z",
    "closed_at": "2016-10-28T13:16:48Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "why not extract expressjs router to independence package，here is a example at https://github.com/i5ting/exr\n\nand in Koa 2.x we can \n\n``` js\napp.em(function(req, res, next){\n  const start = new Date();\n  return next().then(() => {\n    const ms = new Date() - start;\n    console.log(`${req.method} ${req.url} - ${ms}ms`);\n  });\n})\n```\n\nmaybe we can reuse this router\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3116/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3116/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3115",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3115/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3115/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3115/events",
    "html_url": "https://github.com/expressjs/express/pull/3115",
    "id": 185774840,
    "node_id": "MDExOlB1bGxSZXF1ZXN0OTEyNzY2OTQ=",
    "number": 3115,
    "title": "Raw Query getter for req object",
    "user": {
      "login": "CanisLupusXenonis",
      "id": 5897046,
      "node_id": "MDQ6VXNlcjU4OTcwNDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5897046?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CanisLupusXenonis",
      "html_url": "https://github.com/CanisLupusXenonis",
      "followers_url": "https://api.github.com/users/CanisLupusXenonis/followers",
      "following_url": "https://api.github.com/users/CanisLupusXenonis/following{/other_user}",
      "gists_url": "https://api.github.com/users/CanisLupusXenonis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CanisLupusXenonis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CanisLupusXenonis/subscriptions",
      "organizations_url": "https://api.github.com/users/CanisLupusXenonis/orgs",
      "repos_url": "https://api.github.com/users/CanisLupusXenonis/repos",
      "events_url": "https://api.github.com/users/CanisLupusXenonis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CanisLupusXenonis/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-10-27T20:41:57Z",
    "updated_at": "2017-02-05T02:54:45Z",
    "closed_at": "2017-02-05T02:54:45Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3115",
      "html_url": "https://github.com/expressjs/express/pull/3115",
      "diff_url": "https://github.com/expressjs/express/pull/3115.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3115.patch",
      "merged_at": null
    },
    "body": "Addresses #3097\n- Added req.rawQuery getter for raw query string\n- Changed req.query to use req.rawQuery and fixed its comment return value.\n- Added tests\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3115/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3115/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3114",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3114/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3114/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3114/events",
    "html_url": "https://github.com/expressjs/express/pull/3114",
    "id": 185733156,
    "node_id": "MDExOlB1bGxSZXF1ZXN0OTEyNDY0NjE=",
    "number": 3114,
    "title": "Options for Engines",
    "user": {
      "login": "CanisLupusXenonis",
      "id": 5897046,
      "node_id": "MDQ6VXNlcjU4OTcwNDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5897046?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CanisLupusXenonis",
      "html_url": "https://github.com/CanisLupusXenonis",
      "followers_url": "https://api.github.com/users/CanisLupusXenonis/followers",
      "following_url": "https://api.github.com/users/CanisLupusXenonis/following{/other_user}",
      "gists_url": "https://api.github.com/users/CanisLupusXenonis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CanisLupusXenonis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CanisLupusXenonis/subscriptions",
      "organizations_url": "https://api.github.com/users/CanisLupusXenonis/orgs",
      "repos_url": "https://api.github.com/users/CanisLupusXenonis/repos",
      "events_url": "https://api.github.com/users/CanisLupusXenonis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CanisLupusXenonis/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55587817,
        "node_id": "MDU6TGFiZWw1NTU4NzgxNw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/needs%20tests",
        "name": "needs tests",
        "color": "e11d21",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2016-10-27T17:32:49Z",
    "updated_at": "2023-01-03T09:03:14Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3114",
      "html_url": "https://github.com/expressjs/express/pull/3114",
      "diff_url": "https://github.com/expressjs/express/pull/3114.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3114.patch",
      "merged_at": null
    },
    "body": "This is inspired by #2982. It adds an option object to engines, and adds an option for bypassing the filesystem mapping and checks done in view.js.\n\nAlternatively, this option could be used to bypass the `if (!view.path) {` check in application.js:565, or even to assign `view.path = name` somewhere around there.\n\nEither way, I think it'd be a good idea to have options for engines. \nPut into the 5.0 branch because it's a breaking change.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3114/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3114/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3113",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3113/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3113/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3113/events",
    "html_url": "https://github.com/expressjs/express/issues/3113",
    "id": 185599840,
    "node_id": "MDU6SXNzdWUxODU1OTk4NDA=",
    "number": 3113,
    "title": "204 status code with a body (or invalid headers) should throw",
    "user": {
      "login": "yvele",
      "id": 4225430,
      "node_id": "MDQ6VXNlcjQyMjU0MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4225430?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yvele",
      "html_url": "https://github.com/yvele",
      "followers_url": "https://api.github.com/users/yvele/followers",
      "following_url": "https://api.github.com/users/yvele/following{/other_user}",
      "gists_url": "https://api.github.com/users/yvele/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yvele/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yvele/subscriptions",
      "organizations_url": "https://api.github.com/users/yvele/orgs",
      "repos_url": "https://api.github.com/users/yvele/repos",
      "events_url": "https://api.github.com/users/yvele/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yvele/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 18291,
        "node_id": "MDU6TGFiZWwxODI5MQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1",
        "default": false,
        "description": null
      },
      {
        "id": 163600,
        "node_id": "MDU6TGFiZWwxNjM2MDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2016-10-27T08:05:51Z",
    "updated_at": "2017-02-19T18:56:05Z",
    "closed_at": "2017-02-19T18:56:05Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Today I made a typo in my code and wrote `204` instead of `201`. My response was showing no body at all and I went crazy.\n\n---\n\nI found that express, when status code is `204`(no content) or `304` (not modified), is explicitly removing any previously set body (and 3 headers). See [source code](https://github.com/expressjs/express/blob/9375a9afa9d7baa814b454c7a6818a7471aaef00/lib/response.js#L192-L198).\n\n``` js\n// strip irrelevant headers\nif (204 === this.statusCode || 304 === this.statusCode) {\n  this.removeHeader('Content-Type');\n  this.removeHeader('Content-Length');\n  this.removeHeader('Transfer-Encoding');\n  chunk = '';\n}\n```\n\nShouldn't express throw an error instead of trying to make magical things?\n\nIf the developper has set (or is writing) a body, thats because that's what he want to do. And if the developper is setting incompatible status/body/headers, I think that express :\n1. Shouldn't alter initial developper wishes\n2. Can ne nice and throw an **explicit error** to scatterbrain developper\n\nRelated:\n- Here is a PR with a similar conversation on the limits of express responsibility : https://github.com/expressjs/express/pull/2011\n- Headers are not removed in 204/304 when using `.end()` https://github.com/expressjs/express/pull/3076\n- Auto 204 with empty body https://github.com/expressjs/express/pull/604 is ok. But not with empty json https://github.com/expressjs/express/issues/1800\n- How Node.js HttpServer is dealing with \"no body\" statuses : [_http_server.js](https://github.com/nodejs/node/blob/master/lib/_http_server.js#L201-L214)\n\nConsidering you agree, I'm aware this is a breaking change, but we can take advantage of the new 5.0 express version.\n\n**PS**: Looking back to code history, [I found some origin](https://github.com/archyta/node-response-send/blob/master/lib/response-send.js#L100-L105) in [node-response-send](https://github.com/archyta/node-response-send).\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3113/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3113/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3112",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3112/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3112/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3112/events",
    "html_url": "https://github.com/expressjs/express/issues/3112",
    "id": 185552565,
    "node_id": "MDU6SXNzdWUxODU1NTI1NjU=",
    "number": 3112,
    "title": "Is there any plan to support nodejs v6?",
    "user": {
      "login": "youkaisteve",
      "id": 8175530,
      "node_id": "MDQ6VXNlcjgxNzU1MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8175530?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/youkaisteve",
      "html_url": "https://github.com/youkaisteve",
      "followers_url": "https://api.github.com/users/youkaisteve/followers",
      "following_url": "https://api.github.com/users/youkaisteve/following{/other_user}",
      "gists_url": "https://api.github.com/users/youkaisteve/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/youkaisteve/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/youkaisteve/subscriptions",
      "organizations_url": "https://api.github.com/users/youkaisteve/orgs",
      "repos_url": "https://api.github.com/users/youkaisteve/repos",
      "events_url": "https://api.github.com/users/youkaisteve/events{/privacy}",
      "received_events_url": "https://api.github.com/users/youkaisteve/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-10-27T01:37:12Z",
    "updated_at": "2016-11-08T03:51:14Z",
    "closed_at": "2016-11-08T03:51:14Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\nI wonder if there is a plan to support nodejs v6.9.1 ?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3112/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3112/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3111",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3111/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3111/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3111/events",
    "html_url": "https://github.com/expressjs/express/pull/3111",
    "id": 185513110,
    "node_id": "MDExOlB1bGxSZXF1ZXN0OTEwOTA2MjQ=",
    "number": 3111,
    "title": "Throw TypeError if argument passed to res.status is null or undefined",
    "user": {
      "login": "Shastel",
      "id": 6017041,
      "node_id": "MDQ6VXNlcjYwMTcwNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6017041?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Shastel",
      "html_url": "https://github.com/Shastel",
      "followers_url": "https://api.github.com/users/Shastel/followers",
      "following_url": "https://api.github.com/users/Shastel/following{/other_user}",
      "gists_url": "https://api.github.com/users/Shastel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Shastel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Shastel/subscriptions",
      "organizations_url": "https://api.github.com/users/Shastel/orgs",
      "repos_url": "https://api.github.com/users/Shastel/repos",
      "events_url": "https://api.github.com/users/Shastel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Shastel/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/17",
      "html_url": "https://github.com/expressjs/express/milestone/17",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/17/labels",
      "id": 3066819,
      "node_id": "MDk6TWlsZXN0b25lMzA2NjgxOQ==",
      "number": 17,
      "title": "4.17",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 15,
      "state": "closed",
      "created_at": "2018-01-26T16:25:16Z",
      "updated_at": "2019-05-17T01:58:27Z",
      "due_on": null,
      "closed_at": "2019-05-17T01:58:27Z"
    },
    "comments": 8,
    "created_at": "2016-10-26T21:19:17Z",
    "updated_at": "2018-11-27T20:04:46Z",
    "closed_at": "2018-11-27T20:04:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3111",
      "html_url": "https://github.com/expressjs/express/pull/3111",
      "diff_url": "https://github.com/expressjs/express/pull/3111.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3111.patch",
      "merged_at": null
    },
    "body": "It's fix for #2795 \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3111/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3111/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3110",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3110/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3110/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3110/events",
    "html_url": "https://github.com/expressjs/express/issues/3110",
    "id": 185436685,
    "node_id": "MDU6SXNzdWUxODU0MzY2ODU=",
    "number": 3110,
    "title": "Remove X-Powered-By header",
    "user": {
      "login": "naholyr",
      "id": 214067,
      "node_id": "MDQ6VXNlcjIxNDA2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/214067?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naholyr",
      "html_url": "https://github.com/naholyr",
      "followers_url": "https://api.github.com/users/naholyr/followers",
      "following_url": "https://api.github.com/users/naholyr/following{/other_user}",
      "gists_url": "https://api.github.com/users/naholyr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naholyr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naholyr/subscriptions",
      "organizations_url": "https://api.github.com/users/naholyr/orgs",
      "repos_url": "https://api.github.com/users/naholyr/repos",
      "events_url": "https://api.github.com/users/naholyr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naholyr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": true,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-10-26T15:58:21Z",
    "updated_at": "2017-08-15T14:04:43Z",
    "closed_at": "2016-10-26T16:19:22Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello,\n\nI know this is legacy, but I can't find any good reason to keep this header in activity. It's at best useless, and at worst an indication for potential hackers (just append version number, so that they can find known flaws faster). I always wonder why I have to still add `app.settings['x-powered-by'] = false` in my script ;)\n\nHow about removing it completely?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3110/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3110/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3109",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3109/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3109/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3109/events",
    "html_url": "https://github.com/expressjs/express/issues/3109",
    "id": 185120363,
    "node_id": "MDU6SXNzdWUxODUxMjAzNjM=",
    "number": 3109,
    "title": "new release?",
    "user": {
      "login": "bonesoul",
      "id": 73215,
      "node_id": "MDQ6VXNlcjczMjE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/73215?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bonesoul",
      "html_url": "https://github.com/bonesoul",
      "followers_url": "https://api.github.com/users/bonesoul/followers",
      "following_url": "https://api.github.com/users/bonesoul/following{/other_user}",
      "gists_url": "https://api.github.com/users/bonesoul/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bonesoul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bonesoul/subscriptions",
      "organizations_url": "https://api.github.com/users/bonesoul/orgs",
      "repos_url": "https://api.github.com/users/bonesoul/repos",
      "events_url": "https://api.github.com/users/bonesoul/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bonesoul/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 98481977,
        "node_id": "MDU6TGFiZWw5ODQ4MTk3Nw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-10-25T13:38:55Z",
    "updated_at": "2017-02-10T02:50:14Z",
    "closed_at": "2016-10-25T20:14:29Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "So node 7.0 is near to a release date with async/await support.\nShould we expect an express release soon utilizing it?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3109/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3109/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3108",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3108/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3108/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3108/events",
    "html_url": "https://github.com/expressjs/express/issues/3108",
    "id": 184585365,
    "node_id": "MDU6SXNzdWUxODQ1ODUzNjU=",
    "number": 3108,
    "title": "Jade renamed to Pug",
    "user": {
      "login": "tdsfugal",
      "id": 6570350,
      "node_id": "MDQ6VXNlcjY1NzAzNTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6570350?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tdsfugal",
      "html_url": "https://github.com/tdsfugal",
      "followers_url": "https://api.github.com/users/tdsfugal/followers",
      "following_url": "https://api.github.com/users/tdsfugal/following{/other_user}",
      "gists_url": "https://api.github.com/users/tdsfugal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tdsfugal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tdsfugal/subscriptions",
      "organizations_url": "https://api.github.com/users/tdsfugal/orgs",
      "repos_url": "https://api.github.com/users/tdsfugal/repos",
      "events_url": "https://api.github.com/users/tdsfugal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tdsfugal/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-10-21T22:40:49Z",
    "updated_at": "2016-10-21T22:51:10Z",
    "closed_at": "2016-10-21T22:51:10Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Dependencies now throw warning.  Jade depreciated.  Some sort of trademark violation.  Pug is the new name for Jade.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3108/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3108/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3107",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3107/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3107/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3107/events",
    "html_url": "https://github.com/expressjs/express/issues/3107",
    "id": 184264057,
    "node_id": "MDU6SXNzdWUxODQyNjQwNTc=",
    "number": 3107,
    "title": "unix socket support",
    "user": {
      "login": "magne4000",
      "id": 1098371,
      "node_id": "MDQ6VXNlcjEwOTgzNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1098371?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/magne4000",
      "html_url": "https://github.com/magne4000",
      "followers_url": "https://api.github.com/users/magne4000/followers",
      "following_url": "https://api.github.com/users/magne4000/following{/other_user}",
      "gists_url": "https://api.github.com/users/magne4000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/magne4000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/magne4000/subscriptions",
      "organizations_url": "https://api.github.com/users/magne4000/orgs",
      "repos_url": "https://api.github.com/users/magne4000/repos",
      "events_url": "https://api.github.com/users/magne4000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/magne4000/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2016-10-20T15:35:29Z",
    "updated_at": "2016-10-21T13:16:07Z",
    "closed_at": "2016-10-21T13:16:07Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Is it possible to use express with unix socket instead of `host:port` ?\n\nThe `listen` signature just call underlying server `listen` method, so I tried with:\n\n``` node\nserver = require('net').createServer(express());\nserver.listen('/tmp/sock', function() {\n  fs.chmodSync('/tmp/sock', 0777);\n});\n```\n\nBut then when, through nginx, I try to access a page, express crashes with the following error:\n\n```\n[...]/node_modules/express/lib/router/index.js:140\n  var search = 1 + req.url.indexOf('?');\n                          ^\n\nTypeError: Cannot read property 'indexOf' of undefined\n    at Function.handle ([...]/node_modules/express/lib/router/index.js:140:27)\n    at EventEmitter.handle ([...]/node_modules/express/lib/application.js:173:10)\n    at Server.app ([...]/node_modules/express/lib/express.js:38:9)\n    at emitOne (events.js:77:13)\n    at Server.emit (events.js:169:7)\n    at Pipe.onconnection (net.js:1431:8)\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3107/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3107/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3106",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3106/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3106/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3106/events",
    "html_url": "https://github.com/expressjs/express/issues/3106",
    "id": 184106480,
    "node_id": "MDU6SXNzdWUxODQxMDY0ODA=",
    "number": 3106,
    "title": "Serving plain-text SVGs with Express.js",
    "user": {
      "login": "MCTaylor17",
      "id": 7216377,
      "node_id": "MDQ6VXNlcjcyMTYzNzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7216377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MCTaylor17",
      "html_url": "https://github.com/MCTaylor17",
      "followers_url": "https://api.github.com/users/MCTaylor17/followers",
      "following_url": "https://api.github.com/users/MCTaylor17/following{/other_user}",
      "gists_url": "https://api.github.com/users/MCTaylor17/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MCTaylor17/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MCTaylor17/subscriptions",
      "organizations_url": "https://api.github.com/users/MCTaylor17/orgs",
      "repos_url": "https://api.github.com/users/MCTaylor17/repos",
      "events_url": "https://api.github.com/users/MCTaylor17/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MCTaylor17/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-10-20T00:20:06Z",
    "updated_at": "2016-10-21T03:51:08Z",
    "closed_at": "2016-10-20T19:56:19Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I posted [this question on StackOverflow](http://stackoverflow.com/questions/40143517/serving-plain-text-svgs-with-express-js).  I wonder if there is a subtlety in Express that might help explain the behavior that I'm experiencing.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3106/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3106/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3105",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3105/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3105/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3105/events",
    "html_url": "https://github.com/expressjs/express/issues/3105",
    "id": 183560476,
    "node_id": "MDU6SXNzdWUxODM1NjA0NzY=",
    "number": 3105,
    "title": "res.send integer deprecation problem",
    "user": {
      "login": "adamsiwiec",
      "id": 17085172,
      "node_id": "MDQ6VXNlcjE3MDg1MTcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/17085172?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamsiwiec",
      "html_url": "https://github.com/adamsiwiec",
      "followers_url": "https://api.github.com/users/adamsiwiec/followers",
      "following_url": "https://api.github.com/users/adamsiwiec/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamsiwiec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamsiwiec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamsiwiec/subscriptions",
      "organizations_url": "https://api.github.com/users/adamsiwiec/orgs",
      "repos_url": "https://api.github.com/users/adamsiwiec/repos",
      "events_url": "https://api.github.com/users/adamsiwiec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamsiwiec/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-10-18T00:18:22Z",
    "updated_at": "2016-10-18T00:20:38Z",
    "closed_at": "2016-10-18T00:20:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Even though this is purposeful, when I pass an integer into res.send, like this:\n\n``` javascript\nrouter.get('/', function(req, res) {\n\n    var foo = 20;\n    res.send(foo);\n});\n\n```\n\nI get a deprecated error:\n\n```\nexpress deprecated res.send(status): Use res.sendStatus(status) instead \n```\n\nand 20 does not show up in the browser. \nThis seems very illogical because now I have to go through an extra step, `res.send(\"\" + foo)`, to convert the parameter to a string, and display a simple integer. Any opinions or notes?  \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3105/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3105/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3104",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3104/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3104/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3104/events",
    "html_url": "https://github.com/expressjs/express/issues/3104",
    "id": 183489191,
    "node_id": "MDU6SXNzdWUxODM0ODkxOTE=",
    "number": 3104,
    "title": "Using Decorators in Express",
    "user": {
      "login": "mohammedzamakhan",
      "id": 2327532,
      "node_id": "MDQ6VXNlcjIzMjc1MzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2327532?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mohammedzamakhan",
      "html_url": "https://github.com/mohammedzamakhan",
      "followers_url": "https://api.github.com/users/mohammedzamakhan/followers",
      "following_url": "https://api.github.com/users/mohammedzamakhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/mohammedzamakhan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mohammedzamakhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mohammedzamakhan/subscriptions",
      "organizations_url": "https://api.github.com/users/mohammedzamakhan/orgs",
      "repos_url": "https://api.github.com/users/mohammedzamakhan/repos",
      "events_url": "https://api.github.com/users/mohammedzamakhan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mohammedzamakhan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2016-10-17T18:20:14Z",
    "updated_at": "2016-10-17T18:39:55Z",
    "closed_at": "2016-10-17T18:39:55Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I wanted Decorators to be part of Express restful API system, where you can define the url, method etc using decorators. This exist in Java Spring Framework like\n\n``` java\n@RestController\npublic class GreetingController {\n\n    private static final String template = \"Hello, %s!\";\n    private final AtomicLong counter = new AtomicLong();\n\n    @RequestMapping(\"/greeting\")\n    public Greeting greeting(@RequestParam(value=\"name\", defaultValue=\"World\") String name) {\n        return new Greeting(counter.incrementAndGet(),\n                            String.format(template, name));\n    }\n}\n```\n\nref: https://spring.io/guides/gs/rest-service/\n\nso in Express this \n\n``` js\napp.get('/greeting', function (req, res) {\n  res.send('Hello World!');\n});\n```\n\ncould convert to\n\n``` ts\n@RestController()\nclass GreetingController() {\n    @Request('/greeting')\n    greeting(req, res) {\n       res.send('Hello World!');\n    }\n}\n```\n\nThis way a lot of Java Developers would be interested in NodeJS and Express environment and MEAN 2 would be great because Angular 2 also uses decorators 😄 \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3104/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3104/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3103",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3103/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3103/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3103/events",
    "html_url": "https://github.com/expressjs/express/issues/3103",
    "id": 183440227,
    "node_id": "MDU6SXNzdWUxODM0NDAyMjc=",
    "number": 3103,
    "title": "Issues regarding the use of __proto__",
    "user": {
      "login": "julianjensen",
      "id": 680724,
      "node_id": "MDQ6VXNlcjY4MDcyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/680724?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/julianjensen",
      "html_url": "https://github.com/julianjensen",
      "followers_url": "https://api.github.com/users/julianjensen/followers",
      "following_url": "https://api.github.com/users/julianjensen/following{/other_user}",
      "gists_url": "https://api.github.com/users/julianjensen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/julianjensen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/julianjensen/subscriptions",
      "organizations_url": "https://api.github.com/users/julianjensen/orgs",
      "repos_url": "https://api.github.com/users/julianjensen/repos",
      "events_url": "https://api.github.com/users/julianjensen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/julianjensen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2016-10-17T14:59:35Z",
    "updated_at": "2017-02-19T18:15:25Z",
    "closed_at": "2016-10-17T17:08:36Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Any chance that the use of `__proto__` can be changed? Looping through some objects created in _express_ needs a check for `__proto__` which is, at least, violates the principle of least astonishment. And then there's this:\n\nForm [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto):\n\n> Warning: Changing the [[Prototype]] of an object is, by the nature of how modern JavaScript engines\n> optimize property accesses, a very slow operation, in every browser and JavaScript engine. The effects\n> on performance of altering inheritance are subtle and far-flung, and are not limited to simply the time \n> spent in `obj.__proto__ = ... statement`, but may extend to any code that has access to any object\n> whose [[Prototype]] has been altered. If you care about performance you should avoid setting\n> the [[Prototype]] of an object. Instead, create a new object with the desired [[Prototype]] using\n> `Object.create()`.\n\nI understand that using `Object.create()`, or outright removing `__proto__`, would probably be too much of a change, how about a compromise:\n\nInstead of \n\n```\nsomeObject.__proto__ = whatever;\n```\n\nuse\n\n```\nObject.defineProperty( someObject, '__proto__', {\n    enumerable: false,\n    writable: true, \n    configurable: true, \n    value: whatever\n}\n```\n\nThere are many ways to avoid using the deprecated and detrimental technique and it would be nice to shed its use, especially with a new version coming up. Anyway, just a suggestion. If there is any interest in making this change, I wouldn't mind doing a pull request on it.\n\nJulian\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3103/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3103/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3102",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3102/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3102/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3102/events",
    "html_url": "https://github.com/expressjs/express/issues/3102",
    "id": 182804583,
    "node_id": "MDU6SXNzdWUxODI4MDQ1ODM=",
    "number": 3102,
    "title": "NodeJS started to serve static files very slowly",
    "user": {
      "login": "archasek",
      "id": 2247211,
      "node_id": "MDQ6VXNlcjIyNDcyMTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2247211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/archasek",
      "html_url": "https://github.com/archasek",
      "followers_url": "https://api.github.com/users/archasek/followers",
      "following_url": "https://api.github.com/users/archasek/following{/other_user}",
      "gists_url": "https://api.github.com/users/archasek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/archasek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/archasek/subscriptions",
      "organizations_url": "https://api.github.com/users/archasek/orgs",
      "repos_url": "https://api.github.com/users/archasek/repos",
      "events_url": "https://api.github.com/users/archasek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/archasek/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2016-10-13T14:25:24Z",
    "updated_at": "2016-10-25T03:13:20Z",
    "closed_at": "2016-10-24T11:18:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "#### Expected behaviour\n\nFaster serving static files for development purposes (I know that on production NodeJS should not serve static files because it's slow). I need it only for local dev env.\n#### Actual behaviour\n\nWhen I refresh the website, very frequently it get stuck and it takes a few/dozen seconds to render.\nIn realtime logs, there is also no information about successful requests (I don't know why it disappeared), I cannot see what static files are served with status 200. There are only missing files listed.\nEverything in log appears with a delay.\nThere are weird `- - ms - -` and there are no successful requests listed.\n#### Steps to reproduce\n\nI run `node bin/www`\n#### Software versions used\n\n```\nOS         : Windows 7 64bit\nNodeJS  : 4.4.5\n```\n#### Log output\n\n```\nλ node bin/www\nGET /favicon.ico - - ms - -\nGET /favicon.ico - - ms - -\nGET /favicon.ico - - ms - -\nGET /favicon.ico - - ms - -\nGET /favicon.ico - - ms - -\nGET /img/favicon.ico - - ms - -\nGET /img/logo.png - - ms - -\nGET /favicon.ico - - ms - -\nGET /favicon.ico - - ms - -\nGET /browser-sync/socket.io.min.1.5.0.js.map - - ms - -\nGET /browser-sync/socket.io.min.1.5.0.js.map - - ms - -\nGET /img/favicon.ico - - ms - -\nGET /img/logo.png - - ms - -\nGET /img/favicon.ico - - ms - -\nGET /img/favicon.ico - - ms - -\nGET /favicon.ico - - ms - -\nGET /browser-sync/socket.io.min.1.5.0.js.map - - ms - -\nGET /browser-sync/socket.io.min.1.5.0.js.map - - ms - -\nGET /favicon.ico - - ms - -\n```\n#### Static files in app.js\n\n`const path = require('path');`\n`app.use(express.static(path.join(__dirname, 'frontend/dist')));`\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3102/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3102/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3101",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3101/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3101/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3101/events",
    "html_url": "https://github.com/expressjs/express/pull/3101",
    "id": 182681143,
    "node_id": "MDExOlB1bGxSZXF1ZXN0ODkxMjc0MTI=",
    "number": 3101,
    "title": "Master",
    "user": {
      "login": "IiroVaris",
      "id": 12960423,
      "node_id": "MDQ6VXNlcjEyOTYwNDIz",
      "avatar_url": "https://avatars.githubusercontent.com/u/12960423?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/IiroVaris",
      "html_url": "https://github.com/IiroVaris",
      "followers_url": "https://api.github.com/users/IiroVaris/followers",
      "following_url": "https://api.github.com/users/IiroVaris/following{/other_user}",
      "gists_url": "https://api.github.com/users/IiroVaris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/IiroVaris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/IiroVaris/subscriptions",
      "organizations_url": "https://api.github.com/users/IiroVaris/orgs",
      "repos_url": "https://api.github.com/users/IiroVaris/repos",
      "events_url": "https://api.github.com/users/IiroVaris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/IiroVaris/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-10-13T02:36:56Z",
    "updated_at": "2016-10-13T02:50:39Z",
    "closed_at": "2016-10-13T02:43:38Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3101",
      "html_url": "https://github.com/expressjs/express/pull/3101",
      "diff_url": "https://github.com/expressjs/express/pull/3101.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3101.patch",
      "merged_at": null
    },
    "body": "# # @\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3101/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3101/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3100",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3100/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3100/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3100/events",
    "html_url": "https://github.com/expressjs/express/pull/3100",
    "id": 182611097,
    "node_id": "MDExOlB1bGxSZXF1ZXN0ODkwNzcwMDE=",
    "number": 3100,
    "title": "expose the matched routes for a request",
    "user": {
      "login": "evanshortiss",
      "id": 1303687,
      "node_id": "MDQ6VXNlcjEzMDM2ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1303687?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/evanshortiss",
      "html_url": "https://github.com/evanshortiss",
      "followers_url": "https://api.github.com/users/evanshortiss/followers",
      "following_url": "https://api.github.com/users/evanshortiss/following{/other_user}",
      "gists_url": "https://api.github.com/users/evanshortiss/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/evanshortiss/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/evanshortiss/subscriptions",
      "organizations_url": "https://api.github.com/users/evanshortiss/orgs",
      "repos_url": "https://api.github.com/users/evanshortiss/repos",
      "events_url": "https://api.github.com/users/evanshortiss/events{/privacy}",
      "received_events_url": "https://api.github.com/users/evanshortiss/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 12,
    "created_at": "2016-10-12T19:21:32Z",
    "updated_at": "2020-04-15T06:51:22Z",
    "closed_at": "2020-04-15T06:51:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3100",
      "html_url": "https://github.com/expressjs/express/pull/3100",
      "diff_url": "https://github.com/expressjs/express/pull/3100.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3100.patch",
      "merged_at": null
    },
    "body": "I'm open to suggestions on improving this one. Basically if a route is \"/foo/:num/bar/:num\" and a client requests \"/foo/12/bar/32\" I would like to be able to see that they hit \"/foo/:num/bar/:num\":\n\nHere's how this PR does that:\n\n``` js\napp.get('/foo/:num/bar/:num', function (req, res) {\n  var matched = req.matchedRoute; // \"/foo/:num/bar/:num\"\n  var originalUrl = req.originalUrl; // \"/foo/12/bar/32\"\n});\n```\n\nIt works for nested routes also. This can be seen in the new tests added.\n\nIt would also be possible to expose an Array instead if desirable, e.g `['/foo/:num/bar/:num']` with each matched layer/router inside.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3100/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3100/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3099",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3099/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3099/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3099/events",
    "html_url": "https://github.com/expressjs/express/issues/3099",
    "id": 182579198,
    "node_id": "MDU6SXNzdWUxODI1NzkxOTg=",
    "number": 3099,
    "title": "404 error when stress testing the router",
    "user": {
      "login": "jon301",
      "id": 122108,
      "node_id": "MDQ6VXNlcjEyMjEwOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/122108?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jon301",
      "html_url": "https://github.com/jon301",
      "followers_url": "https://api.github.com/users/jon301/followers",
      "following_url": "https://api.github.com/users/jon301/following{/other_user}",
      "gists_url": "https://api.github.com/users/jon301/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jon301/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jon301/subscriptions",
      "organizations_url": "https://api.github.com/users/jon301/orgs",
      "repos_url": "https://api.github.com/users/jon301/repos",
      "events_url": "https://api.github.com/users/jon301/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jon301/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2016-10-12T17:00:41Z",
    "updated_at": "2016-11-08T03:49:57Z",
    "closed_at": "2016-11-08T03:49:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\n\nI've made a repo so you can reproduce the issue :\nhttps://github.com/jon301/express-router-test\n\nWhat you need to do :\n\n```\nnpm install -g gulp-cli\ngit clone https://github.com/jon301/express-router-test.git\ncd express-router-test\nnpm install\ngulp test\n```\n\nThis will do many requests against the same route and will crash after a while.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3099/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3099/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3098",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3098/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3098/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3098/events",
    "html_url": "https://github.com/expressjs/express/issues/3098",
    "id": 182436636,
    "node_id": "MDU6SXNzdWUxODI0MzY2MzY=",
    "number": 3098,
    "title": "Used app / router does not exec `params` middleware without call from within app / router",
    "user": {
      "login": "reggi",
      "id": 296798,
      "node_id": "MDQ6VXNlcjI5Njc5OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/296798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reggi",
      "html_url": "https://github.com/reggi",
      "followers_url": "https://api.github.com/users/reggi/followers",
      "following_url": "https://api.github.com/users/reggi/following{/other_user}",
      "gists_url": "https://api.github.com/users/reggi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reggi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reggi/subscriptions",
      "organizations_url": "https://api.github.com/users/reggi/orgs",
      "repos_url": "https://api.github.com/users/reggi/repos",
      "events_url": "https://api.github.com/users/reggi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reggi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-10-12T05:11:05Z",
    "updated_at": "2016-10-12T05:47:40Z",
    "closed_at": "2016-10-12T05:47:40Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I was just creating a router with only a param in it and found out the hard way that it doesn't execute in the `app` it's `app.use` in.\n\nHere's the code:\n\n``` js\nfunction myRouter () {\n  const router = Router({mergeParams: true})\n  router.param('appId', async (req, res, next, appId) => {\n    console.log('hi')\n    return next()\n  })\n  router.all('/:appId/*', (req, res, next) => {\n    return next()\n  })\n  return router\n}\n```\n\nThis will not log `hi` without.\n\n``` js\n  router.all('/:appId/*', (req, res, next) => {\n    return next()\n  })\n```\n\nWhich seems a bit unintuitive.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3098/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3098/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3097",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3097/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3097/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3097/events",
    "html_url": "https://github.com/expressjs/express/issues/3097",
    "id": 182221047,
    "node_id": "MDU6SXNzdWUxODIyMjEwNDc=",
    "number": 3097,
    "title": "Add req.search property containing unparsed query string",
    "user": {
      "login": "koistya",
      "id": 197134,
      "node_id": "MDQ6VXNlcjE5NzEzNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/197134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/koistya",
      "html_url": "https://github.com/koistya",
      "followers_url": "https://api.github.com/users/koistya/followers",
      "following_url": "https://api.github.com/users/koistya/following{/other_user}",
      "gists_url": "https://api.github.com/users/koistya/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/koistya/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/koistya/subscriptions",
      "organizations_url": "https://api.github.com/users/koistya/orgs",
      "repos_url": "https://api.github.com/users/koistya/repos",
      "events_url": "https://api.github.com/users/koistya/events{/privacy}",
      "received_events_url": "https://api.github.com/users/koistya/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 163600,
        "node_id": "MDU6TGFiZWwxNjM2MDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-10-11T09:48:55Z",
    "updated_at": "2017-02-05T02:51:27Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This is will make things simpler when building an isomorphic app which will use its own query string parser in order to make it work consistently on the server and the client.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3097/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3097/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3096",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3096/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3096/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3096/events",
    "html_url": "https://github.com/expressjs/express/pull/3096",
    "id": 181385935,
    "node_id": "MDExOlB1bGxSZXF1ZXN0ODgyNDA5Mjg=",
    "number": 3096,
    "title": "no message",
    "user": {
      "login": "EasyValley",
      "id": 9133644,
      "node_id": "MDQ6VXNlcjkxMzM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9133644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EasyValley",
      "html_url": "https://github.com/EasyValley",
      "followers_url": "https://api.github.com/users/EasyValley/followers",
      "following_url": "https://api.github.com/users/EasyValley/following{/other_user}",
      "gists_url": "https://api.github.com/users/EasyValley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EasyValley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EasyValley/subscriptions",
      "organizations_url": "https://api.github.com/users/EasyValley/orgs",
      "repos_url": "https://api.github.com/users/EasyValley/repos",
      "events_url": "https://api.github.com/users/EasyValley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EasyValley/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-10-06T11:05:15Z",
    "updated_at": "2016-10-07T00:10:41Z",
    "closed_at": "2016-10-07T00:10:34Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3096",
      "html_url": "https://github.com/expressjs/express/pull/3096",
      "diff_url": "https://github.com/expressjs/express/pull/3096.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3096.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3096/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3096/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3095",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3095/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3095/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3095/events",
    "html_url": "https://github.com/expressjs/express/issues/3095",
    "id": 181087529,
    "node_id": "MDU6SXNzdWUxODEwODc1Mjk=",
    "number": 3095,
    "title": "Add SameSite option to response.cookie()",
    "user": {
      "login": "ShimShamSam",
      "id": 2212177,
      "node_id": "MDQ6VXNlcjIyMTIxNzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2212177?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ShimShamSam",
      "html_url": "https://github.com/ShimShamSam",
      "followers_url": "https://api.github.com/users/ShimShamSam/followers",
      "following_url": "https://api.github.com/users/ShimShamSam/following{/other_user}",
      "gists_url": "https://api.github.com/users/ShimShamSam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ShimShamSam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ShimShamSam/subscriptions",
      "organizations_url": "https://api.github.com/users/ShimShamSam/orgs",
      "repos_url": "https://api.github.com/users/ShimShamSam/repos",
      "events_url": "https://api.github.com/users/ShimShamSam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ShimShamSam/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2016-10-05T07:58:28Z",
    "updated_at": "2020-10-22T15:17:19Z",
    "closed_at": "2016-10-05T13:25:22Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "Add support for the [SameSite](https://en.wikipedia.org/wiki/HTTP_cookie#SameSite_cookie) flag on cookies.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3095/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3095/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3094",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3094/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3094/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3094/events",
    "html_url": "https://github.com/expressjs/express/issues/3094",
    "id": 180525190,
    "node_id": "MDU6SXNzdWUxODA1MjUxOTA=",
    "number": 3094,
    "title": "ars all",
    "user": {
      "login": "alirawashdeh",
      "id": 10329516,
      "node_id": "MDQ6VXNlcjEwMzI5NTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/10329516?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alirawashdeh",
      "html_url": "https://github.com/alirawashdeh",
      "followers_url": "https://api.github.com/users/alirawashdeh/followers",
      "following_url": "https://api.github.com/users/alirawashdeh/following{/other_user}",
      "gists_url": "https://api.github.com/users/alirawashdeh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alirawashdeh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alirawashdeh/subscriptions",
      "organizations_url": "https://api.github.com/users/alirawashdeh/orgs",
      "repos_url": "https://api.github.com/users/alirawashdeh/repos",
      "events_url": "https://api.github.com/users/alirawashdeh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alirawashdeh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-10-02T18:01:18Z",
    "updated_at": "2016-10-03T23:15:37Z",
    "closed_at": "2016-10-02T20:07:03Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3094/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3094/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3093",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3093/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3093/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3093/events",
    "html_url": "https://github.com/expressjs/express/issues/3093",
    "id": 180036407,
    "node_id": "MDU6SXNzdWUxODAwMzY0MDc=",
    "number": 3093,
    "title": "HTTP2",
    "user": {
      "login": "perryjsteward",
      "id": 4425826,
      "node_id": "MDQ6VXNlcjQ0MjU4MjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4425826?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/perryjsteward",
      "html_url": "https://github.com/perryjsteward",
      "followers_url": "https://api.github.com/users/perryjsteward/followers",
      "following_url": "https://api.github.com/users/perryjsteward/following{/other_user}",
      "gists_url": "https://api.github.com/users/perryjsteward/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/perryjsteward/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/perryjsteward/subscriptions",
      "organizations_url": "https://api.github.com/users/perryjsteward/orgs",
      "repos_url": "https://api.github.com/users/perryjsteward/repos",
      "events_url": "https://api.github.com/users/perryjsteward/events{/privacy}",
      "received_events_url": "https://api.github.com/users/perryjsteward/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-09-29T12:32:46Z",
    "updated_at": "2016-09-29T23:36:05Z",
    "closed_at": "2016-09-29T23:35:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\n\nI've seen a few known issues for HTTP2 support but i haven't been able to find a solution anywhere. SDPY module seems to be working ok but some online comparisons show this to not be as fast.\n\nI have tried and installed the modules http2 and express-http2 but still through the same errors alot of the same issues in previous issue submissions. Has there been a fix released or a workaround?\n\nThanks,\nPerry \n\n![image](https://cloud.githubusercontent.com/assets/4425826/18954076/323e59c4-8649-11e6-9c19-62a56e369485.png)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3093/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3093/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3092",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3092/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3092/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3092/events",
    "html_url": "https://github.com/expressjs/express/issues/3092",
    "id": 179938221,
    "node_id": "MDU6SXNzdWUxNzk5MzgyMjE=",
    "number": 3092,
    "title": "Where are buffered chunk sizes?",
    "user": {
      "login": "Nokel81",
      "id": 8225332,
      "node_id": "MDQ6VXNlcjgyMjUzMzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8225332?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Nokel81",
      "html_url": "https://github.com/Nokel81",
      "followers_url": "https://api.github.com/users/Nokel81/followers",
      "following_url": "https://api.github.com/users/Nokel81/following{/other_user}",
      "gists_url": "https://api.github.com/users/Nokel81/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Nokel81/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Nokel81/subscriptions",
      "organizations_url": "https://api.github.com/users/Nokel81/orgs",
      "repos_url": "https://api.github.com/users/Nokel81/repos",
      "events_url": "https://api.github.com/users/Nokel81/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Nokel81/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-09-29T02:31:55Z",
    "updated_at": "2016-10-18T02:43:56Z",
    "closed_at": "2016-10-18T02:43:50Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "If a response object from a web server is sent back in chunks (like a file), where or how would the total size of the chunks be able to be collected from the Express response object?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3092/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3092/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3091",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3091/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3091/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3091/events",
    "html_url": "https://github.com/expressjs/express/issues/3091",
    "id": 179684624,
    "node_id": "MDU6SXNzdWUxNzk2ODQ2MjQ=",
    "number": 3091,
    "title": "options.settings is undefined in the res.render method",
    "user": {
      "login": "adrianiskandar",
      "id": 7379674,
      "node_id": "MDQ6VXNlcjczNzk2NzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7379674?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adrianiskandar",
      "html_url": "https://github.com/adrianiskandar",
      "followers_url": "https://api.github.com/users/adrianiskandar/followers",
      "following_url": "https://api.github.com/users/adrianiskandar/following{/other_user}",
      "gists_url": "https://api.github.com/users/adrianiskandar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adrianiskandar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adrianiskandar/subscriptions",
      "organizations_url": "https://api.github.com/users/adrianiskandar/orgs",
      "repos_url": "https://api.github.com/users/adrianiskandar/repos",
      "events_url": "https://api.github.com/users/adrianiskandar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adrianiskandar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2016-09-28T05:41:00Z",
    "updated_at": "2016-09-30T04:52:37Z",
    "closed_at": "2016-09-30T04:52:37Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi a render engine I'm trying to use (react-engine) looks like is trying to access the settings object inside the res.render options but looks like is undefined\n\n``` js\napp.get('/', function(req, res, next) {\n   res.render('index', { title: 'Express' });\n });\n```\n\ninside the pkg is trying to read:\n`options.settings.views`\n Throws:\n\"Cannot read property 'views' of undefined\"\n\nI'm assuming settings was the app.seetings object that was available to the requests before but now is not passed down anymore?\n\nI'm using \"express\": \"~4.14.0\" can you guys tell me if this is intentional or is a bug? if it is intentional, what will be the best practice to access app settings inside the render method now?\n\nI was thinking adding what is needed to the app.locals object because I know that is passed down but I wanted to verify with you guys first.\n\nThanks.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3091/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3091/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3090",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3090/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3090/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3090/events",
    "html_url": "https://github.com/expressjs/express/issues/3090",
    "id": 179066140,
    "node_id": "MDU6SXNzdWUxNzkwNjYxNDA=",
    "number": 3090,
    "title": "Update \"engines\" in package.json",
    "user": {
      "login": "lmj0011",
      "id": 9396189,
      "node_id": "MDQ6VXNlcjkzOTYxODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9396189?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lmj0011",
      "html_url": "https://github.com/lmj0011",
      "followers_url": "https://api.github.com/users/lmj0011/followers",
      "following_url": "https://api.github.com/users/lmj0011/following{/other_user}",
      "gists_url": "https://api.github.com/users/lmj0011/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lmj0011/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lmj0011/subscriptions",
      "organizations_url": "https://api.github.com/users/lmj0011/orgs",
      "repos_url": "https://api.github.com/users/lmj0011/repos",
      "events_url": "https://api.github.com/users/lmj0011/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lmj0011/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-09-25T03:52:36Z",
    "updated_at": "2016-09-25T03:59:34Z",
    "closed_at": "2016-09-25T03:59:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Recently updated to Node v6 and then started having problems with my Express App starting. I'm receiving `502 Bad Gateway` error for all of my endpoints. I then looked online to see if node v6 was supported by Express\n\nAfter searching through related issues, I found an answer from May of this year. \nhttps://github.com/expressjs/express/issues/2997#issuecomment-219156779\n\nI think the versions of Node supported need to be front-page info.\n\nupdating \"engines\" in package.json with an upper limit will help also\nhttps://docs.npmjs.com/files/package.json#engines\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3090/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3090/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3089",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3089/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3089/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3089/events",
    "html_url": "https://github.com/expressjs/express/issues/3089",
    "id": 179063833,
    "node_id": "MDU6SXNzdWUxNzkwNjM4MzM=",
    "number": 3089,
    "title": "is there a way to abort tcp connection in the middle of handling to http request?",
    "user": {
      "login": "pps83",
      "id": 1614246,
      "node_id": "MDQ6VXNlcjE2MTQyNDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1614246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pps83",
      "html_url": "https://github.com/pps83",
      "followers_url": "https://api.github.com/users/pps83/followers",
      "following_url": "https://api.github.com/users/pps83/following{/other_user}",
      "gists_url": "https://api.github.com/users/pps83/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pps83/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pps83/subscriptions",
      "organizations_url": "https://api.github.com/users/pps83/orgs",
      "repos_url": "https://api.github.com/users/pps83/repos",
      "events_url": "https://api.github.com/users/pps83/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pps83/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-09-25T02:35:10Z",
    "updated_at": "2016-09-25T18:04:18Z",
    "closed_at": "2016-09-25T03:55:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "It seems that there was something related posted a while ago: https://github.com/nodejs/node-v0.x-archive/issues/1776\n\nI'll describe case that I'm trying to handle: for simplicity assume that my node/express app listens for requests and then just proxies the request to another upstream server. Request takes a while to handle (e.g. seconds), and if upstream simply evaporates without finishing reply then I want to abort tcp connection so that first originating party would get error event instead of trying to process unfinished reply.\nBelow is a simple example for simplicity: server starts serving reply, says that it's 100-bytes long and then after serving 10 bytes simply closes the connection after 500ms. I wasn't able to find a way to abort http connection on server side so that client gets an error instead of thinking that request was properly served.\n\n```\n//server\nvar express = require('express');\nvar app = express();\napp.use(function(req, res, next){\n    res.setHeader('Content-Length', 100);\n    res.writeHead(200);\n    res.write('1234567890');\n    setTimeout(function() { res.connection.destroy(); }, 500);\n});\napp.listen(8080);\n```\n\nand\n\n```\n//client\nvar http = require('http');\nhttp.get('http://localhost:8080/', function(res){\n   var length = 0;\n   console.log('expected size: ', res.headers['content-length']);\n   res.on('data', function(chunk){ length += chunk.length; });\n   res.on('end', function(){ console.log('received: ', length); });\n}).on('error', function(e){\n    console.log('error', e);\n});\n```\n\nat least on Windows if I throw a new Error inside that timeout then connection is reset (RST) and client gets error event. Why there is no api provided to abort connection, or the client is supposed to verify content length!? and what about chunked transfer then?\n\n(I use node 6.6.0 on win10 and ubuntu 16.4)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3089/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3089/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3088",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3088/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3088/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3088/events",
    "html_url": "https://github.com/expressjs/express/issues/3088",
    "id": 179057082,
    "node_id": "MDU6SXNzdWUxNzkwNTcwODI=",
    "number": 3088,
    "title": "Router bug with full request URL",
    "user": {
      "login": "mscdex",
      "id": 54666,
      "node_id": "MDQ6VXNlcjU0NjY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/54666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mscdex",
      "html_url": "https://github.com/mscdex",
      "followers_url": "https://api.github.com/users/mscdex/followers",
      "following_url": "https://api.github.com/users/mscdex/following{/other_user}",
      "gists_url": "https://api.github.com/users/mscdex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mscdex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mscdex/subscriptions",
      "organizations_url": "https://api.github.com/users/mscdex/orgs",
      "repos_url": "https://api.github.com/users/mscdex/repos",
      "events_url": "https://api.github.com/users/mscdex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mscdex/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 21,
    "created_at": "2016-09-24T23:08:19Z",
    "updated_at": "2016-09-25T23:05:41Z",
    "closed_at": "2016-09-24T23:32:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "It appears that [Express ignores the other properties of the parsed request URL](https://github.com/expressjs/express/blob/b69b7605b07b41273acc931d25ab585377bcd107/lib/router/index.js#L528) when matching defined routes against an incoming request.\n\nThis is problematic because \"full\" request URLs for example will match any defined route handler that contains the path part of the \"full\" URL.\n\nExample:\n\n```\nGET http://google.com HTTP/1.1\nConnection: close\n```\n\nwill cause Express to match a handler like this:\n\n``` js\napp.get('/', function(req, res) {\n  res.end('Hello world!');\n});\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3088/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3088/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3087",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3087/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3087/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3087/events",
    "html_url": "https://github.com/expressjs/express/issues/3087",
    "id": 177561153,
    "node_id": "MDU6SXNzdWUxNzc1NjExNTM=",
    "number": 3087,
    "title": "route.param multiple callbacks",
    "user": {
      "login": "navaneetharaopy",
      "id": 6571626,
      "node_id": "MDQ6VXNlcjY1NzE2MjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6571626?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/navaneetharaopy",
      "html_url": "https://github.com/navaneetharaopy",
      "followers_url": "https://api.github.com/users/navaneetharaopy/followers",
      "following_url": "https://api.github.com/users/navaneetharaopy/following{/other_user}",
      "gists_url": "https://api.github.com/users/navaneetharaopy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/navaneetharaopy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/navaneetharaopy/subscriptions",
      "organizations_url": "https://api.github.com/users/navaneetharaopy/orgs",
      "repos_url": "https://api.github.com/users/navaneetharaopy/repos",
      "events_url": "https://api.github.com/users/navaneetharaopy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/navaneetharaopy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-09-17T07:13:57Z",
    "updated_at": "2016-09-19T08:28:37Z",
    "closed_at": "2016-09-19T08:28:37Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Current express 4 docs specify `router.param` as`router.param(name, callback)`, Is it possible/allowed to insert a middleware  like `route.param(name, check_authentic_middleware,callback)`\n\nBecause `app.get` has the this format `app.get(path, callback [, callback ...])` which allows multiple callbacks `app.get(name,cb1,cb2)`\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3087/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3087/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3086",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3086/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3086/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3086/events",
    "html_url": "https://github.com/expressjs/express/issues/3086",
    "id": 176837433,
    "node_id": "MDU6SXNzdWUxNzY4Mzc0MzM=",
    "number": 3086,
    "title": "Access native Node.js ClientRequest and ServerResponse objects",
    "user": {
      "login": "roman-vanesyan",
      "id": 18165039,
      "node_id": "MDQ6VXNlcjE4MTY1MDM5",
      "avatar_url": "https://avatars.githubusercontent.com/u/18165039?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roman-vanesyan",
      "html_url": "https://github.com/roman-vanesyan",
      "followers_url": "https://api.github.com/users/roman-vanesyan/followers",
      "following_url": "https://api.github.com/users/roman-vanesyan/following{/other_user}",
      "gists_url": "https://api.github.com/users/roman-vanesyan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roman-vanesyan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roman-vanesyan/subscriptions",
      "organizations_url": "https://api.github.com/users/roman-vanesyan/orgs",
      "repos_url": "https://api.github.com/users/roman-vanesyan/repos",
      "events_url": "https://api.github.com/users/roman-vanesyan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roman-vanesyan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-09-14T07:43:51Z",
    "updated_at": "2016-09-25T23:51:06Z",
    "closed_at": "2016-09-14T07:59:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello there! Sorry if this question was raised before. How can I access native Node.js request and response objects? For example in `koa` it's possible through getters `context.req = request.req = response.req` and `context.res = request.res = response.res` for request and response respectively.\n\nThanks\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3086/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3086/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3085",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3085/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3085/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3085/events",
    "html_url": "https://github.com/expressjs/express/issues/3085",
    "id": 176243140,
    "node_id": "MDU6SXNzdWUxNzYyNDMxNDA=",
    "number": 3085,
    "title": "What is the best practice to place this kind of custom middleware function?",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-09-11T13:11:17Z",
    "updated_at": "2016-09-13T15:58:43Z",
    "closed_at": "2016-09-13T12:20:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Man, I have a project whose hierarchy is like this:\n\n```\n├── app/\n├── config.js\n├── index.js\n├── node_modules/\n├── package.json\n└── routes/\n```\n\nCurrently, I place all my router in `routes`, these routes share one public middle function in `routes/middlewares/jwt-verifier.js`.\n\nI want to ask, what is the best practice to place this kind of custom middleware function?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3085/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3085/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3084",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3084/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3084/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3084/events",
    "html_url": "https://github.com/expressjs/express/issues/3084",
    "id": 176241295,
    "node_id": "MDU6SXNzdWUxNzYyNDEyOTU=",
    "number": 3084,
    "title": "Params from root route not showing",
    "user": {
      "login": "Rushmead",
      "id": 1780637,
      "node_id": "MDQ6VXNlcjE3ODA2Mzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1780637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Rushmead",
      "html_url": "https://github.com/Rushmead",
      "followers_url": "https://api.github.com/users/Rushmead/followers",
      "following_url": "https://api.github.com/users/Rushmead/following{/other_user}",
      "gists_url": "https://api.github.com/users/Rushmead/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Rushmead/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Rushmead/subscriptions",
      "organizations_url": "https://api.github.com/users/Rushmead/orgs",
      "repos_url": "https://api.github.com/users/Rushmead/repos",
      "events_url": "https://api.github.com/users/Rushmead/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Rushmead/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-09-11T12:24:36Z",
    "updated_at": "2016-09-11T21:27:35Z",
    "closed_at": "2016-09-11T21:27:29Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi all,\n\nSo i have a file called commands.routes.js and inside i use the express router to create a get route on the '/' path. So then i add the routes in my express config, like so: `app.use('/panel/server/:id/commands', commands);` however, when i output req.params in my route, its empty and the ':id' param is not there. Is this purposeful or is it a mistake?\n\nThanks\nRushmead\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3084/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3084/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3083",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3083/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3083/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3083/events",
    "html_url": "https://github.com/expressjs/express/issues/3083",
    "id": 176237675,
    "node_id": "MDU6SXNzdWUxNzYyMzc2NzU=",
    "number": 3083,
    "title": "Issue with installation of express or/and express generator [ENOTDIR]",
    "user": {
      "login": "ghoolio",
      "id": 15908502,
      "node_id": "MDQ6VXNlcjE1OTA4NTAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/15908502?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghoolio",
      "html_url": "https://github.com/ghoolio",
      "followers_url": "https://api.github.com/users/ghoolio/followers",
      "following_url": "https://api.github.com/users/ghoolio/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghoolio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghoolio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghoolio/subscriptions",
      "organizations_url": "https://api.github.com/users/ghoolio/orgs",
      "repos_url": "https://api.github.com/users/ghoolio/repos",
      "events_url": "https://api.github.com/users/ghoolio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghoolio/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2016-09-11T10:39:57Z",
    "updated_at": "2021-06-29T01:39:27Z",
    "closed_at": "2016-09-11T21:21:25Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "# I'm opening this issue because:\n\nnpm install express-generator errors\nWhat's going wrong?\n\n&\n\nHow can the CLI team reproduce the problem?\n\nHey guys, I want to install the express-generator with \"npm install express-generator\" but \nI always receive an ENOTDIR error and I can't figure out why, since I'm new in Node.js.\nI would be happy if someone could help me.\n\nhttps://gist.github.com/mandaleyshow/14af60cedf3e1e9cfcf98bbc9b4b88c6\nsupporting information:\n\nNPM: 3.10.3\nNode: v6.5.0\nOS X Mavericks\nTerminal: \n\n```\nLibrament davidnoldner$ npm install express-generator\nnodejscourse@0.0.0 /Users/davidnoldner/Librament\n└─┬ express-generator@4.13.4 \n├─┬ commander@2.7.1 \n│ └── graceful-readlink@1.0.1 \n├─┬ mkdirp@0.5.1 \n│ └── minimist@0.0.8 \n└── sorted-object@2.0.0\n\nnpm WARN nodejscourse@0.0.0 license should be a valid SPDX license expression\nnpm ERR! Darwin 13.4.0\nnpm ERR! argv \"/Users/davidnoldner/local/bin/node\" \"/Users/davidnoldner/local/bin/npm\" \"install\" \"express-generator\"\nnpm ERR! node v6.5.0\nnpm ERR! npm v3.10.3\nnpm ERR! path /Users/davidnoldner/Librament/node_modules/.staging\nnpm ERR! code ENOTDIR\nnpm ERR! errno -20\nnpm ERR! syscall unlink\n\nnpm ERR! ENOTDIR: not a directory, unlink '/Users/davidnoldner/Librament/node_modules/.staging'\nnpm ERR!\n```\n\nThanks!\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3083/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3083/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3082",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3082/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3082/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3082/events",
    "html_url": "https://github.com/expressjs/express/issues/3082",
    "id": 176217438,
    "node_id": "MDU6SXNzdWUxNzYyMTc0Mzg=",
    "number": 3082,
    "title": "Set max SSL fragment size in Express",
    "user": {
      "login": "houluy",
      "id": 11565649,
      "node_id": "MDQ6VXNlcjExNTY1NjQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/11565649?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/houluy",
      "html_url": "https://github.com/houluy",
      "followers_url": "https://api.github.com/users/houluy/followers",
      "following_url": "https://api.github.com/users/houluy/following{/other_user}",
      "gists_url": "https://api.github.com/users/houluy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/houluy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/houluy/subscriptions",
      "organizations_url": "https://api.github.com/users/houluy/orgs",
      "repos_url": "https://api.github.com/users/houluy/repos",
      "events_url": "https://api.github.com/users/houluy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/houluy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-09-11T03:38:22Z",
    "updated_at": "2016-09-12T13:14:49Z",
    "closed_at": "2016-09-12T13:14:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm using express to set up an HTTPS server for some embedded devices. However, due to the lack of computing capabilities, the default SSL fragment size 16384 is too large for these devices. I wonder how I can change this size in express.\nI found that in tls modules, TLSSocket class has a method _tlsSocket.setMaxSendFragment(size)_ which may work, but I can't find out how to use it in Express.\nThis is how my server is established:\n\n```\nvar app = require('express')();\nvar cert_path = '/home/houlu/Programs/Node/http/ssl/';\nvar privateKey = fs.readFileSync(cert_path+'server.key', 'utf8');\nvar certificate = fs.readFileSync(cert_path+'server.crt', 'utf8');\nvar credentials = {key: privateKey, cert: certificate};\n\nhttpsServer = https.createServer(credentials, app);\n```\n\nThanks a lot!  :-)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3082/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3082/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3081",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3081/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3081/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3081/events",
    "html_url": "https://github.com/expressjs/express/issues/3081",
    "id": 176207219,
    "node_id": "MDU6SXNzdWUxNzYyMDcyMTk=",
    "number": 3081,
    "title": "Dont hide code climate score just because its 2.5",
    "user": {
      "login": "madnight",
      "id": 10064471,
      "node_id": "MDQ6VXNlcjEwMDY0NDcx",
      "avatar_url": "https://avatars.githubusercontent.com/u/10064471?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/madnight",
      "html_url": "https://github.com/madnight",
      "followers_url": "https://api.github.com/users/madnight/followers",
      "following_url": "https://api.github.com/users/madnight/following{/other_user}",
      "gists_url": "https://api.github.com/users/madnight/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/madnight/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/madnight/subscriptions",
      "organizations_url": "https://api.github.com/users/madnight/orgs",
      "repos_url": "https://api.github.com/users/madnight/repos",
      "events_url": "https://api.github.com/users/madnight/events{/privacy}",
      "received_events_url": "https://api.github.com/users/madnight/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-09-10T22:28:41Z",
    "updated_at": "2016-09-11T14:48:39Z",
    "closed_at": "2016-09-11T14:48:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "https://codeclimate.com/github/expressjs/express\nhttps://codeclimate.com/github/expressjs/express/badges\n(145 issues)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3081/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3081/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3080",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3080/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3080/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3080/events",
    "html_url": "https://github.com/expressjs/express/issues/3080",
    "id": 175798462,
    "node_id": "MDU6SXNzdWUxNzU3OTg0NjI=",
    "number": 3080,
    "title": "Sanitize req.params",
    "user": {
      "login": "justinffs",
      "id": 17650336,
      "node_id": "MDQ6VXNlcjE3NjUwMzM2",
      "avatar_url": "https://avatars.githubusercontent.com/u/17650336?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/justinffs",
      "html_url": "https://github.com/justinffs",
      "followers_url": "https://api.github.com/users/justinffs/followers",
      "following_url": "https://api.github.com/users/justinffs/following{/other_user}",
      "gists_url": "https://api.github.com/users/justinffs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/justinffs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/justinffs/subscriptions",
      "organizations_url": "https://api.github.com/users/justinffs/orgs",
      "repos_url": "https://api.github.com/users/justinffs/repos",
      "events_url": "https://api.github.com/users/justinffs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/justinffs/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-09-08T16:22:11Z",
    "updated_at": "2018-12-04T02:21:34Z",
    "closed_at": "2016-09-09T02:18:27Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "There does not seem to be an easy way to sanitize or escape request params.  What we ended up doing you can see here https://github.com/fingerfoodstudios/express-sanitize-escape/blob/master/lib/express-sanitize-escape.js#L40\n\n```\nmodule.exports.sanitizeParams = function(router, paramNames) {\n    paramNames.forEach(function(paramName) {\n        router.param(paramName, function(req, res, next) {\n            req.params[paramName] = sanitize(req.params[paramName]);\n            next();\n        });\n    });\n}\n```\n\nAnd then using it in every router that we have where params are required.\n\n```\n'use strict';\n\nvar express = require('express');\nvar expressSanitized = require('express-sanitize-escape');\nvar controller = require('./user.controller');\n\nvar router = express.Router();\n\nexpressSanitized.sanitizeParams(router, ['id']);\n\nrouter.get('/:id/', controller.show);\n\nmodule.exports = router;\n```\n\nIs there any way to do this better?  So that all params can be escaped and sanitized?  If not can the router be changed to allow a wildcard for params functions?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3080/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3080/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3079",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3079/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3079/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3079/events",
    "html_url": "https://github.com/expressjs/express/issues/3079",
    "id": 175667509,
    "node_id": "MDU6SXNzdWUxNzU2Njc1MDk=",
    "number": 3079,
    "title": "npm ERR! Failed to parse json",
    "user": {
      "login": "darshak6336",
      "id": 21969697,
      "node_id": "MDQ6VXNlcjIxOTY5Njk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/21969697?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darshak6336",
      "html_url": "https://github.com/darshak6336",
      "followers_url": "https://api.github.com/users/darshak6336/followers",
      "following_url": "https://api.github.com/users/darshak6336/following{/other_user}",
      "gists_url": "https://api.github.com/users/darshak6336/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darshak6336/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darshak6336/subscriptions",
      "organizations_url": "https://api.github.com/users/darshak6336/orgs",
      "repos_url": "https://api.github.com/users/darshak6336/repos",
      "events_url": "https://api.github.com/users/darshak6336/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darshak6336/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-09-08T05:22:16Z",
    "updated_at": "2016-09-08T05:34:49Z",
    "closed_at": "2016-09-08T05:34:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "i run this cmd commands \"npm run build\" and then got this Error\n\nnpm ERR! Windows_NT 10.0.10586\nnpm ERR! argv \"C:\\Program Files\\nodejs\\node.exe\" \"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js\" \"run\" \"build\"\nnpm ERR! node v6.3.0\nnpm ERR! npm  v3.10.3\nnpm ERR! file E:\\new\\package.json\nnpm ERR! code EJSONPARSE\n\nnpm ERR! Failed to parse json\nnpm ERR! Unexpected token 'b' at 8:3\nnpm ERR!        \"build\": \"electron-packager . blox\"\nnpm ERR!         ^\nnpm ERR! File: E:\\new\\package.json\nnpm ERR! Failed to parse package.json data.\nnpm ERR! package.json must be actual JSON, not just JavaScript.\nnpm ERR!\nnpm ERR! This is not a bug in npm.\nnpm ERR! Tell the package author to fix their package.json file. JSON.parse\n\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     E:\\new\\npm-debug.log\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3079/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3079/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3078",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3078/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3078/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3078/events",
    "html_url": "https://github.com/expressjs/express/issues/3078",
    "id": 175637581,
    "node_id": "MDU6SXNzdWUxNzU2Mzc1ODE=",
    "number": 3078,
    "title": "Add info on running tests and code style to Collaborator's Guide",
    "user": {
      "login": "crandmck",
      "id": 2925364,
      "node_id": "MDQ6VXNlcjI5MjUzNjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2925364?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/crandmck",
      "html_url": "https://github.com/crandmck",
      "followers_url": "https://api.github.com/users/crandmck/followers",
      "following_url": "https://api.github.com/users/crandmck/following{/other_user}",
      "gists_url": "https://api.github.com/users/crandmck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/crandmck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/crandmck/subscriptions",
      "organizations_url": "https://api.github.com/users/crandmck/orgs",
      "repos_url": "https://api.github.com/users/crandmck/repos",
      "events_url": "https://api.github.com/users/crandmck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/crandmck/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-09-08T00:26:42Z",
    "updated_at": "2020-02-18T23:06:54Z",
    "closed_at": "2020-02-18T23:06:54Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Per discussion in the TC, we need to update https://github.com/expressjs/express/blob/master/Collaborator-Guide.md with info on coding style (cf. https://github.com/expressjs/discussions/issues/18) and how to run tests.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3078/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3078/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3077",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3077/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3077/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3077/events",
    "html_url": "https://github.com/expressjs/express/issues/3077",
    "id": 175296282,
    "node_id": "MDU6SXNzdWUxNzUyOTYyODI=",
    "number": 3077,
    "title": "Is it time to use pug insead of jade?",
    "user": {
      "login": "Jianru-Lin",
      "id": 1057486,
      "node_id": "MDQ6VXNlcjEwNTc0ODY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1057486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Jianru-Lin",
      "html_url": "https://github.com/Jianru-Lin",
      "followers_url": "https://api.github.com/users/Jianru-Lin/followers",
      "following_url": "https://api.github.com/users/Jianru-Lin/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jianru-Lin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Jianru-Lin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jianru-Lin/subscriptions",
      "organizations_url": "https://api.github.com/users/Jianru-Lin/orgs",
      "repos_url": "https://api.github.com/users/Jianru-Lin/repos",
      "events_url": "https://api.github.com/users/Jianru-Lin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Jianru-Lin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-09-06T16:48:50Z",
    "updated_at": "2016-09-06T17:13:36Z",
    "closed_at": "2016-09-06T17:13:36Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Is it a good time to switch dependency from jade to pug? The development of jade stopped. Last release of it is one year ago. \n\nThanks.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3077/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3077/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3076",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3076/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3076/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3076/events",
    "html_url": "https://github.com/expressjs/express/pull/3076",
    "id": 175260670,
    "node_id": "MDExOlB1bGxSZXF1ZXN0ODQxMzE4NDE=",
    "number": 3076,
    "title": "Explicitly remove headers from 204 and 304 responses when using .end()",
    "user": {
      "login": "komachi",
      "id": 1848785,
      "node_id": "MDQ6VXNlcjE4NDg3ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1848785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/komachi",
      "html_url": "https://github.com/komachi",
      "followers_url": "https://api.github.com/users/komachi/followers",
      "following_url": "https://api.github.com/users/komachi/following{/other_user}",
      "gists_url": "https://api.github.com/users/komachi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/komachi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/komachi/subscriptions",
      "organizations_url": "https://api.github.com/users/komachi/orgs",
      "repos_url": "https://api.github.com/users/komachi/repos",
      "events_url": "https://api.github.com/users/komachi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/komachi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-09-06T14:24:07Z",
    "updated_at": "2016-09-06T14:29:09Z",
    "closed_at": "2016-09-06T14:29:02Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3076",
      "html_url": "https://github.com/expressjs/express/pull/3076",
      "diff_url": "https://github.com/expressjs/express/pull/3076.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3076.patch",
      "merged_at": null
    },
    "body": "We need to remove that headers for requests issued with .end() like we do with .send().\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3076/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3076/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3075",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3075/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3075/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3075/events",
    "html_url": "https://github.com/expressjs/express/issues/3075",
    "id": 175119834,
    "node_id": "MDU6SXNzdWUxNzUxMTk4MzQ=",
    "number": 3075,
    "title": "Express breaks Angular controllers error 'controller' is not a function, got undefined",
    "user": {
      "login": "StephenGrable1",
      "id": 19244434,
      "node_id": "MDQ6VXNlcjE5MjQ0NDM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/19244434?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/StephenGrable1",
      "html_url": "https://github.com/StephenGrable1",
      "followers_url": "https://api.github.com/users/StephenGrable1/followers",
      "following_url": "https://api.github.com/users/StephenGrable1/following{/other_user}",
      "gists_url": "https://api.github.com/users/StephenGrable1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/StephenGrable1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/StephenGrable1/subscriptions",
      "organizations_url": "https://api.github.com/users/StephenGrable1/orgs",
      "repos_url": "https://api.github.com/users/StephenGrable1/repos",
      "events_url": "https://api.github.com/users/StephenGrable1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/StephenGrable1/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-09-05T19:30:06Z",
    "updated_at": "2016-09-06T15:13:08Z",
    "closed_at": "2016-09-06T15:12:51Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "So I have created an angular app (version 1.5.7) and wanted to deploy it to heroku.\n\n I decided to implement Node and used express to serve the files. When I did this, both of my controllers broke. \n\nand in the console i get an error that reads \"[ng:areq] Argument 'contactCtrl' is not a function, got undefined\"\n\nThe same project worked perfectly before implementing express. Do I need to use a view engine? I  couldn't seem to find any helpful resources online and would greatly appreciate a push in the right direction. \n\nHere is my server.js file \n\n```\nvar express = require('express');\nvar app = express();\n\nvar port = process.env.PORT || 8080;\n\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.get('/', function(req, res) {\n\nres.sendfile('index.html', {root: __dirname })\n});\n\n\napp.listen(port, function() {\n console.log('Our app is running on port ' + port);\n});\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3075/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3075/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3074",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3074/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3074/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3074/events",
    "html_url": "https://github.com/expressjs/express/issues/3074",
    "id": 174697150,
    "node_id": "MDU6SXNzdWUxNzQ2OTcxNTA=",
    "number": 3074,
    "title": "Does order of applications settings matter?",
    "user": {
      "login": "miller-productions",
      "id": 15177547,
      "node_id": "MDQ6VXNlcjE1MTc3NTQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/15177547?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/miller-productions",
      "html_url": "https://github.com/miller-productions",
      "followers_url": "https://api.github.com/users/miller-productions/followers",
      "following_url": "https://api.github.com/users/miller-productions/following{/other_user}",
      "gists_url": "https://api.github.com/users/miller-productions/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/miller-productions/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/miller-productions/subscriptions",
      "organizations_url": "https://api.github.com/users/miller-productions/orgs",
      "repos_url": "https://api.github.com/users/miller-productions/repos",
      "events_url": "https://api.github.com/users/miller-productions/events{/privacy}",
      "received_events_url": "https://api.github.com/users/miller-productions/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-09-02T07:26:18Z",
    "updated_at": "2016-09-02T07:46:06Z",
    "closed_at": "2016-09-02T07:46:06Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi everyone,\n\n:hand: \n\nJust a quick question regarding order/sequence of configuring application settings, i.e. [app.set(name, value)](http://expressjs.com/en/api.html#app.set).\n\nWe know, based on the [Express Guide - Writing Middleware](https://expressjs.com/en/guide/writing-middleware.html), that \n\n> The order of middleware loading is important: middleware functions that are loaded first are also executed first.\n\nIs there a similar caveat on configuring application settings using `app.set(name, value)`?\n\nFor example, would there be any particular reason why you might need to configure the `view cache` property prior to configuring any other setting or loading any other middleware?\n\nOr, is order/sequence irrelevant in the context of application settings?\n\nThanks in advance for your time in reading/considering this question.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3074/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3074/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3073",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3073/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3073/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3073/events",
    "html_url": "https://github.com/expressjs/express/issues/3073",
    "id": 174367813,
    "node_id": "MDU6SXNzdWUxNzQzNjc4MTM=",
    "number": 3073,
    "title": "modular support",
    "user": {
      "login": "zenithtekla",
      "id": 11691367,
      "node_id": "MDQ6VXNlcjExNjkxMzY3",
      "avatar_url": "https://avatars.githubusercontent.com/u/11691367?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zenithtekla",
      "html_url": "https://github.com/zenithtekla",
      "followers_url": "https://api.github.com/users/zenithtekla/followers",
      "following_url": "https://api.github.com/users/zenithtekla/following{/other_user}",
      "gists_url": "https://api.github.com/users/zenithtekla/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zenithtekla/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zenithtekla/subscriptions",
      "organizations_url": "https://api.github.com/users/zenithtekla/orgs",
      "repos_url": "https://api.github.com/users/zenithtekla/repos",
      "events_url": "https://api.github.com/users/zenithtekla/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zenithtekla/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 18291,
        "node_id": "MDU6TGFiZWwxODI5MQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 20,
    "created_at": "2016-08-31T20:16:24Z",
    "updated_at": "2020-06-03T07:24:02Z",
    "closed_at": "2020-06-03T07:24:02Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Man, your ExpressJS should support something like this:\ncore module configuration file (core.config.js) returns \n\n``` js\nmodules[module] = {\n    name: module,\n    root: root,\n    view_path: view_path,\n    routes: routes,\n    view_engine: view_engine\n  };\n```\n\nand then, in server.js we can do:\n\n``` js\n_.each(modules, function(module){\n      if(module){\n        app.set('root', module.root);\n        app.set('module_name', module.name);\n\n        require(module.routes)(app);\n        app.set('module_view', module.view_path);\n        app.set('module_view_engine', module.view_engine); \n        console.log(module.name, module.view_engine);\n      }\n    });\n```\n\n**OR better**\n\n``` js\n_.each(modules, function(module){\n      if(module){\n        app.moduleSet(module);\n```\n\nSo we don't have to hack around! by pushing them (the views) to an array and unable to attain dynamic view engine on render. The views array is like a tiger skin, a unclassified combined mesh of things (views folders of every module) and it is not possible to set view_engine per module (per view_path).\n\n``` js\n_.each(modules, function(module){\n      if(module){\n        app.set('root', module.root);\n        app.set('module_name', module.name);\n        require(module.routes)(app);\n        views.push(module.view_path);\n        view_engines.push(module.view_engine);        \n        // app.engine(module.view_engine, engines[module.view_engine]);\n        console.log(module.name, module.view_engine);\n      }\n    });\n\n    /* swig & handlebars require engine to be declared\n    app.engine('html', swig.renderFile);\n    */\n\n\n    app.set('views', views);\n    app.set('view engine', 'pug');\n```\n\nThen, in our moduleA.controllers files, we have to do this: \n\n``` js\nexports.todos = (req,res) => {\n  app.set('view engine', 'hjs');\n  // or with json\n  var config = require('../configs/module.config.json');\n  app.set('view engine', config.view_engine);\n  var todos = [\n    {\"task\":\"task1\", \"description\":\"task1_desc\"},\n    {\"task\":\"task2\", \"description\":\"task2_desc\"}\n  ];\n\n  // res.send('ok');\n  // res.json(todos);\n // for todo.hjs\n  res.render('todos', {\"todos\": todos});\n};\n\n```\n\nIn moduleB.controllers file, we have to the similar with 'pug' in place of 'hjs'. \nI don't know how the MEAN.js stack handles this, it seems working smoothly but requiring Grunt|Gulp and a lot of 'grunt work' picking up the views folder per module and render. Please enlighten me.\nLet me know how you guys handle the issues to be able to render different view engines per module for different views-routes.\n\ncurrent working project: https://github.com/zenithtekla/nodeMySQL\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3073/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3073/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3072",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3072/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3072/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3072/events",
    "html_url": "https://github.com/expressjs/express/issues/3072",
    "id": 174365434,
    "node_id": "MDU6SXNzdWUxNzQzNjU0MzQ=",
    "number": 3072,
    "title": "What does app.locals.cache = 'memory'; actually do?",
    "user": {
      "login": "CareerFairPlus",
      "id": 17342716,
      "node_id": "MDQ6VXNlcjE3MzQyNzE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/17342716?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CareerFairPlus",
      "html_url": "https://github.com/CareerFairPlus",
      "followers_url": "https://api.github.com/users/CareerFairPlus/followers",
      "following_url": "https://api.github.com/users/CareerFairPlus/following{/other_user}",
      "gists_url": "https://api.github.com/users/CareerFairPlus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CareerFairPlus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CareerFairPlus/subscriptions",
      "organizations_url": "https://api.github.com/users/CareerFairPlus/orgs",
      "repos_url": "https://api.github.com/users/CareerFairPlus/repos",
      "events_url": "https://api.github.com/users/CareerFairPlus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CareerFairPlus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-08-31T20:04:48Z",
    "updated_at": "2016-09-02T01:15:01Z",
    "closed_at": "2016-08-31T20:12:04Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "From [MEAN.io standard express config](https://github.com/linnovate/mean/blob/master/config/express.js#L32-L33):\n\n> ```\n> // cache=memory or swig dies in NODE_ENV=production\n> app.locals.cache = 'memory';\n> ```\n\nFrom [tj/consolodate.js Issue](https://github.com/tj/consolidate.js/commit/e84860d55b2cb938c9a5525f83feba7f86dfeba7#commitcomment-6427166) (emphasis mine):\n\n> A workaround\n> \n> ```\n> app.locals.cache = \"memory\"\n> ```\n> \n> which enable both **express cache** and swig cache\n\nI'm trying to understand more about this line of code in the express config file.  I have a few questions:\n1. Are there any other implications other than ensuring swig works properly?  \n2. Are there other options other than `'memory'`?\n3. Does this cause large JSON responses to remain in memory for any period of time?\n\nI tried researching this on the expressjs API site, but nothing specifically talks about this cache variable, just locals in general.  I looked at [this page](http://expressjs.com/en/advanced/best-practice-performance.html), but it only refers to [view HTML/CSS caching](http://expressjs.com/en/advanced/best-practice-performance.html#env).\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3072/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3072/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3071",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3071/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3071/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3071/events",
    "html_url": "https://github.com/expressjs/express/issues/3071",
    "id": 174213353,
    "node_id": "MDU6SXNzdWUxNzQyMTMzNTM=",
    "number": 3071,
    "title": "Routing issue with Express 4.14.0",
    "user": {
      "login": "iamchathu",
      "id": 3932230,
      "node_id": "MDQ6VXNlcjM5MzIyMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3932230?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamchathu",
      "html_url": "https://github.com/iamchathu",
      "followers_url": "https://api.github.com/users/iamchathu/followers",
      "following_url": "https://api.github.com/users/iamchathu/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamchathu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamchathu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamchathu/subscriptions",
      "organizations_url": "https://api.github.com/users/iamchathu/orgs",
      "repos_url": "https://api.github.com/users/iamchathu/repos",
      "events_url": "https://api.github.com/users/iamchathu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamchathu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-08-31T08:25:31Z",
    "updated_at": "2016-08-31T13:09:28Z",
    "closed_at": "2016-08-31T11:28:37Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When I visit localhost:9000 it keeps waiting.\n\nMy index.js is defined as \n\n``` js\n'use strict';\n\nconst express = require('express');\nconst mongoose = require('mongoose');\nconst helmet = require('helmet');\n\nconst dbconfig = require('./config/database');\n\nvar app = express();\n\n//Security\n//app.use(helmet.xssFilter());\n//app.use(helmet.hidePoweredBy());\n//app.use(helmet.noSniff());\n\n//Load Routes\nconst defaultRoutes = require('./routes/defaultRoutes');\n\n// app.get(\"/\", function(req, res) {\n//     res.send('Test !');\n// });\n\napp.use('/', defaultRoutes);\n\n// app.get(\"*\", function(req, res) {\n//   res.redirect('http://main.domain');\n// });\n\napp.set('port', process.env.OPENSHIFT_NODEJS_PORT || process.env.PORT || 9000);\napp.set('ip', process.env.OPENSHIFT_NODEJS_IP || \"127.0.0.1\");\n\n\napp.listen(app.get('port'), app.get('ip'), function() {\n    console.log('%s: Node server started on %s:%d ...', Date(Date.now()), app.get('port'), app.get('ip'));\n});\n\n```\n\nAnd defaultRoutes.js\n\n``` js\n'use strict';\nconst express = require('express');\n\nvar routes = function() {\n    let defaultRouter = express.Router();\n    defaultRouter.use(function(req, res, next) {\n        console.log(req.method, req.url);\n        next();\n    });\n\n    defaultRouter.get('/', function(req, res) {\n        res.send('Home page');\n    });\n    return defaultRouter;\n};\n\nmodule.exports = routes;\n\n```\n\nWhen I visit localhost:9000 it keeps waiting.\n\nIf i comments defaultRoutes and uncomment below code it works.\n\n``` js\n// app.get(\"/\", function(req, res) {\n//     res.send('Test !');\n// });\n```\n\nThis code was used previously without `const` and `let` keywords and worked perfectly.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3071/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3071/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3070",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3070/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3070/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3070/events",
    "html_url": "https://github.com/expressjs/express/pull/3070",
    "id": 174114347,
    "node_id": "MDExOlB1bGxSZXF1ZXN0ODMzMzkwOTA=",
    "number": 3070,
    "title": "Implementing classes using the new ES6 syntax (branch 5.0)",
    "user": {
      "login": "leonardo-silva",
      "id": 7905740,
      "node_id": "MDQ6VXNlcjc5MDU3NDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7905740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardo-silva",
      "html_url": "https://github.com/leonardo-silva",
      "followers_url": "https://api.github.com/users/leonardo-silva/followers",
      "following_url": "https://api.github.com/users/leonardo-silva/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardo-silva/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardo-silva/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardo-silva/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardo-silva/orgs",
      "repos_url": "https://api.github.com/users/leonardo-silva/repos",
      "events_url": "https://api.github.com/users/leonardo-silva/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardo-silva/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-08-30T20:14:44Z",
    "updated_at": "2017-01-21T05:37:24Z",
    "closed_at": "2017-01-21T05:37:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3070",
      "html_url": "https://github.com/expressjs/express/pull/3070",
      "diff_url": "https://github.com/expressjs/express/pull/3070.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3070.patch",
      "merged_at": null
    },
    "body": "I created a new PR to change the branches (5.0 -> 5.0).\nInitial PR: https://github.com/expressjs/express/pull/3069\n\nOriginal message: \nHi, \n\nIn my PhD research, I am using express in some experiments.\n\nAs a result, I detected the existence of at least 3 main \"classes\" in the current codebase (View, Route, Layer).\n\nSo, I decided to rewrite this code to follow the new syntax for classes provided by ECMAScript 2016, which I think is much more readable. All changes are just syntactical. I was also very careful to preserve the code style.\nFinally, all tests are green in the migrated code.\n\nDo you think it is worth to integrate these changes to the project?\n\nThank you\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3070/reactions",
      "total_count": 7,
      "+1": 0,
      "-1": 7,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3070/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3069",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3069/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3069/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3069/events",
    "html_url": "https://github.com/expressjs/express/pull/3069",
    "id": 174026028,
    "node_id": "MDExOlB1bGxSZXF1ZXN0ODMyNzYxNDQ=",
    "number": 3069,
    "title": "Implementing classes using the new ES6 syntax",
    "user": {
      "login": "leonardo-silva",
      "id": 7905740,
      "node_id": "MDQ6VXNlcjc5MDU3NDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7905740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardo-silva",
      "html_url": "https://github.com/leonardo-silva",
      "followers_url": "https://api.github.com/users/leonardo-silva/followers",
      "following_url": "https://api.github.com/users/leonardo-silva/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardo-silva/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardo-silva/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardo-silva/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardo-silva/orgs",
      "repos_url": "https://api.github.com/users/leonardo-silva/repos",
      "events_url": "https://api.github.com/users/leonardo-silva/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardo-silva/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-08-30T13:57:19Z",
    "updated_at": "2016-08-30T19:55:19Z",
    "closed_at": "2016-08-30T19:55:19Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3069",
      "html_url": "https://github.com/expressjs/express/pull/3069",
      "diff_url": "https://github.com/expressjs/express/pull/3069.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3069.patch",
      "merged_at": null
    },
    "body": "Hi,\n\nIn my PhD research, I am using express in some experiments.\n\nAs a result, I detected the existence of at least 3 main \"classes\" in the current codebase (View, Route, Layer).\n\nSo, I decided to rewrite this code to follow the new syntax for classes provided by ECMAScript 2016, which I think is much more readable. All changes are just syntactical. I was also very careful to preserve the code style.\nFinally, all tests are green in the migrated code.\n\nDo you think it is worth to integrate these changes to the project?\n\nThank you\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3069/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3069/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3068",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3068/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3068/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3068/events",
    "html_url": "https://github.com/expressjs/express/pull/3068",
    "id": 173590921,
    "node_id": "MDExOlB1bGxSZXF1ZXN0ODI5ODUxMTI=",
    "number": 3068,
    "title": "Jenkins",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-08-27T11:03:23Z",
    "updated_at": "2016-08-27T17:50:19Z",
    "closed_at": "2016-08-27T11:04:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3068",
      "html_url": "https://github.com/expressjs/express/pull/3068",
      "diff_url": "https://github.com/expressjs/express/pull/3068.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3068.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3068/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3068/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3067",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3067/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3067/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3067/events",
    "html_url": "https://github.com/expressjs/express/issues/3067",
    "id": 173584535,
    "node_id": "MDU6SXNzdWUxNzM1ODQ1MzU=",
    "number": 3067,
    "title": "1 in 10 users take ~20secs to get a response",
    "user": {
      "login": "dylanh724",
      "id": 8840024,
      "node_id": "MDQ6VXNlcjg4NDAwMjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8840024?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dylanh724",
      "html_url": "https://github.com/dylanh724",
      "followers_url": "https://api.github.com/users/dylanh724/followers",
      "following_url": "https://api.github.com/users/dylanh724/following{/other_user}",
      "gists_url": "https://api.github.com/users/dylanh724/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dylanh724/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dylanh724/subscriptions",
      "organizations_url": "https://api.github.com/users/dylanh724/orgs",
      "repos_url": "https://api.github.com/users/dylanh724/repos",
      "events_url": "https://api.github.com/users/dylanh724/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dylanh724/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-08-27T07:58:10Z",
    "updated_at": "2016-08-31T05:38:03Z",
    "closed_at": "2016-08-31T05:38:03Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm using Node+Express with a public GET route '/' ( https://api.throneoflies.com with \\* CORS ) and a private POST route ( CORS to _.throneoflies._ used for https://www.throneoflies.com ) to show more or less a hello world, and that's taking some people up to ~20s to process:\n\nWhat's odd is that the content SHOWS in the end! It's not like it times out and shows nothing! It's as if the send() isn't calling end(). Now, I'm still new to Node, but my setup SEEMS right ... a few hundred people registered successfully, while about 10 out of every 100 email me timing out (\n\nI'm using this:\n\nhttps://github.com/dylanh724/tol-node-public/tree/master/tol2\n\nwith a small bounty added on Reddit for an answer:\n\nhttps://www.reddit.com/r/node/comments/4zt2uv/10_bounty_credits_in_an_online_game_find_out_why/\n\nIn debug mode, for me, its under 300ms. \n\nIn debug mode, for someone that has issues, it's ALSO under 300ms -- however, while synchronizing with their timing, I don't even see the request until they have already seen the page! It doesn't appear to be \"stuck\" anywhere..\n\nI've seen a few occurrences on Google with this issue, but no one seemed to resolve them - quite mysterious. Server is hosted on a SSD digitalocean droplet\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3067/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3067/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3066",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3066/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3066/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3066/events",
    "html_url": "https://github.com/expressjs/express/issues/3066",
    "id": 173165699,
    "node_id": "MDU6SXNzdWUxNzMxNjU2OTk=",
    "number": 3066,
    "title": "Error: read ECONNRESET",
    "user": {
      "login": "enzobes",
      "id": 14608488,
      "node_id": "MDQ6VXNlcjE0NjA4NDg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/14608488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/enzobes",
      "html_url": "https://github.com/enzobes",
      "followers_url": "https://api.github.com/users/enzobes/followers",
      "following_url": "https://api.github.com/users/enzobes/following{/other_user}",
      "gists_url": "https://api.github.com/users/enzobes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/enzobes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/enzobes/subscriptions",
      "organizations_url": "https://api.github.com/users/enzobes/orgs",
      "repos_url": "https://api.github.com/users/enzobes/repos",
      "events_url": "https://api.github.com/users/enzobes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/enzobes/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-08-25T10:16:32Z",
    "updated_at": "2016-08-25T11:07:37Z",
    "closed_at": "2016-08-25T11:06:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi, i have this error when i lunch my crawler for Vinted website.\nBut i have this error a lot of time : \nfirst i have this : \n`\nError: getaddrinfo ENOTFOUND www.vinted.fr www.vinted.fr:443\n`\nThen \n\n```\n...\nError: read ECONNRESET   \nError: read ECONNRESET\nError: read ECONNRESET\nError: read ECONNRESET\nError: read ECONNRESET\n...\n```\n\nand sometimes\n\n```\nError: socket hang up\nError: socket hang up\nError: socket hang up\n```\n\nBut my crawler works and return me the good results for some products and stop after 10 min about.\nI think is because i send too much resquest but i need it ...\nI am completely stuck with all these error\n\nThanks for your help.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3066/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3066/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3065",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3065/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3065/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3065/events",
    "html_url": "https://github.com/expressjs/express/issues/3065",
    "id": 173055077,
    "node_id": "MDU6SXNzdWUxNzMwNTUwNzc=",
    "number": 3065,
    "title": "Redundant path-to-regexp computations in app.use",
    "user": {
      "login": "rohanpadhye",
      "id": 4233266,
      "node_id": "MDQ6VXNlcjQyMzMyNjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4233266?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rohanpadhye",
      "html_url": "https://github.com/rohanpadhye",
      "followers_url": "https://api.github.com/users/rohanpadhye/followers",
      "following_url": "https://api.github.com/users/rohanpadhye/following{/other_user}",
      "gists_url": "https://api.github.com/users/rohanpadhye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rohanpadhye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rohanpadhye/subscriptions",
      "organizations_url": "https://api.github.com/users/rohanpadhye/orgs",
      "repos_url": "https://api.github.com/users/rohanpadhye/repos",
      "events_url": "https://api.github.com/users/rohanpadhye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rohanpadhye/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-08-24T20:51:29Z",
    "updated_at": "2020-04-04T15:29:55Z",
    "closed_at": "2020-04-04T15:29:55Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "There seems to be a lot of redundant regexp construction when `app.use` is called with an array of middleware:\n\n```\napp.use(path, [f1, f2, f3])\n```\n\nA new layer is created for each middleware and the same path converted to a `RegExp` in the constructor of each layer. This effect gets exacerbated when `path` is itself an array of paths. For _M_ paths and _N_ middleware, there are _O(MN)_ `RegExp` objects being created, though I feel only _O(M)_ are really needed.\n\nHere is a [benchmark for a pathological case](https://gist.github.com/rohanpadhye/5bb00fefd8f6b0eb5675fced1a7baca3). When `M = N = 1000`, the call to `app.use` takes about **1.7 seconds** on my machine. \n\nIs there any reason why the regexp objects cannot be shared across all the layers? If all the layers share the regexp of the first layer, the same benchmark runs in only **7ms**. The patch is quite hacky and hence I have not submitted a PR, but I would like to confirm if my assumptions are correct. Please let me know if I have misunderstood something.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3065/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3065/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  }
]