[
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1647",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1647/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1647/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1647/events",
    "html_url": "https://github.com/expressjs/express/issues/1647",
    "id": 15306500,
    "node_id": "MDU6SXNzdWUxNTMwNjUwMA==",
    "number": 1647,
    "title": "Cant echo passed var to view",
    "user": {
      "login": "itzik16",
      "id": 3527186,
      "node_id": "MDQ6VXNlcjM1MjcxODY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3527186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/itzik16",
      "html_url": "https://github.com/itzik16",
      "followers_url": "https://api.github.com/users/itzik16/followers",
      "following_url": "https://api.github.com/users/itzik16/following{/other_user}",
      "gists_url": "https://api.github.com/users/itzik16/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/itzik16/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/itzik16/subscriptions",
      "organizations_url": "https://api.github.com/users/itzik16/orgs",
      "repos_url": "https://api.github.com/users/itzik16/repos",
      "events_url": "https://api.github.com/users/itzik16/events{/privacy}",
      "received_events_url": "https://api.github.com/users/itzik16/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2013-06-08T15:46:32Z",
    "updated_at": "2013-06-08T22:02:16Z",
    "closed_at": "2013-06-08T22:02:16Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "here is the code:\n\n``` javascript\napp.get('/edit/:id?', function(req, res){\n  var routeidname = req.params.id;\n  var content;\n  fs.readFile(__dirname + '/box/' + req.params.id, 'utf8', function (err,data) {\n      if (err) {\n        return console.log(err);\n      }\n      var content = data;\n    });\n  res.render('edit', {\n    title: 'about',\n    file: routeidname,\n    filecontent: content\n  });\n});\n```\n\nI can echo the file and the title vars but I cant echo filecontent\nplease help\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1647/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1647/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1646",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1646/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1646/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1646/events",
    "html_url": "https://github.com/expressjs/express/pull/1646",
    "id": 15184142,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjEzOTM5OQ==",
    "number": 1646,
    "title": "req.secure: check first comma-delimited protocol",
    "user": {
      "login": "jonathanong",
      "id": 643505,
      "node_id": "MDQ6VXNlcjY0MzUwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/643505?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanong",
      "html_url": "https://github.com/jonathanong",
      "followers_url": "https://api.github.com/users/jonathanong/followers",
      "following_url": "https://api.github.com/users/jonathanong/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanong/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanong/orgs",
      "repos_url": "https://api.github.com/users/jonathanong/repos",
      "events_url": "https://api.github.com/users/jonathanong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanong/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2013-06-05T17:57:56Z",
    "updated_at": "2014-06-12T07:14:20Z",
    "closed_at": "2013-06-05T19:05:48Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1646",
      "html_url": "https://github.com/expressjs/express/pull/1646",
      "diff_url": "https://github.com/expressjs/express/pull/1646.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1646.patch",
      "merged_at": null
    },
    "body": "Currently, my request headers look like this:\n\n``` js\n  'x-forwarded-for': '24.205.165.76,127.0.0.1',\n  'x-forwarded-proto': 'https,http',\n  'x-forwarded-port': '32220' \n```\n\nBut this doesn't work with `req.secure` as it currently assumes there's only one proxy. \n\nAlso, there are no tests for `req.secure`, so I don't know how to add a test.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1646/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1646/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1645",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1645/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1645/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1645/events",
    "html_url": "https://github.com/expressjs/express/pull/1645",
    "id": 15023413,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjA1OTIwOQ==",
    "number": 1645,
    "title": "res.jsonp() fails when response object is undefined",
    "user": {
      "login": "kawanet",
      "id": 9765,
      "node_id": "MDQ6VXNlcjk3NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kawanet",
      "html_url": "https://github.com/kawanet",
      "followers_url": "https://api.github.com/users/kawanet/followers",
      "following_url": "https://api.github.com/users/kawanet/following{/other_user}",
      "gists_url": "https://api.github.com/users/kawanet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kawanet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kawanet/subscriptions",
      "organizations_url": "https://api.github.com/users/kawanet/orgs",
      "repos_url": "https://api.github.com/users/kawanet/repos",
      "events_url": "https://api.github.com/users/kawanet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kawanet/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-06-01T05:54:39Z",
    "updated_at": "2015-06-13T22:40:23Z",
    "closed_at": "2013-06-02T22:46:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1645",
      "html_url": "https://github.com/expressjs/express/pull/1645",
      "diff_url": "https://github.com/expressjs/express/pull/1645.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1645.patch",
      "merged_at": null
    },
    "body": "This patch allows res.jsonp() to respond an empty object.\n\nhttps://github.com/visionmedia/express/issues/1644\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1645/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1645/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1644",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1644/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1644/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1644/events",
    "html_url": "https://github.com/expressjs/express/issues/1644",
    "id": 15023155,
    "node_id": "MDU6SXNzdWUxNTAyMzE1NQ==",
    "number": 1644,
    "title": "res.jsonp() fails when response object is undefined",
    "user": {
      "login": "kawanet",
      "id": 9765,
      "node_id": "MDQ6VXNlcjk3NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kawanet",
      "html_url": "https://github.com/kawanet",
      "followers_url": "https://api.github.com/users/kawanet/followers",
      "following_url": "https://api.github.com/users/kawanet/following{/other_user}",
      "gists_url": "https://api.github.com/users/kawanet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kawanet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kawanet/subscriptions",
      "organizations_url": "https://api.github.com/users/kawanet/orgs",
      "repos_url": "https://api.github.com/users/kawanet/repos",
      "events_url": "https://api.github.com/users/kawanet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kawanet/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-06-01T05:19:53Z",
    "updated_at": "2013-06-02T22:46:51Z",
    "closed_at": "2013-06-02T22:46:51Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "res.jsonp() does not accept a response which is undefined.\nIn a few cases, I'd like to respond an empty through JSONP.\n\nerror message:\n\n``` text\n/path/to/express/lib/response.js:227\n    .replace(/\\u2028/g, '\\\\u2028')\n     ^\nTypeError: Cannot call method 'replace' of undefined\n    at ServerResponse.res.jsonp (/path/to/express/lib/response.js:227:6)\n```\n\nlib/response.js\n\n``` js\n  var body = JSON.stringify(obj, replacer, spaces)\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029');\n```\n\nquick fix:\n\n``` js\n  var body = JSON.stringify(obj, replacer, spaces);\n  if (body) {\n    body = body.replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029');\n  }\n```\n\nUpdate: null response is accepted.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1644/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1644/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1643",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1643/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1643/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1643/events",
    "html_url": "https://github.com/expressjs/express/pull/1643",
    "id": 14780191,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTkzODQzMg==",
    "number": 1643,
    "title": "Fixed issue with callback querystring failure",
    "user": {
      "login": "jonjenkins",
      "id": 407316,
      "node_id": "MDQ6VXNlcjQwNzMxNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/407316?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonjenkins",
      "html_url": "https://github.com/jonjenkins",
      "followers_url": "https://api.github.com/users/jonjenkins/followers",
      "following_url": "https://api.github.com/users/jonjenkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonjenkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonjenkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonjenkins/subscriptions",
      "organizations_url": "https://api.github.com/users/jonjenkins/orgs",
      "repos_url": "https://api.github.com/users/jonjenkins/repos",
      "events_url": "https://api.github.com/users/jonjenkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonjenkins/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2013-05-27T02:41:52Z",
    "updated_at": "2014-06-24T14:21:31Z",
    "closed_at": "2013-06-03T21:52:49Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1643",
      "html_url": "https://github.com/expressjs/express/pull/1643",
      "diff_url": "https://github.com/expressjs/express/pull/1643.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1643.patch",
      "merged_at": "2013-06-03T21:52:49Z"
    },
    "body": "express/lib/response.js:238 failure when querystring contains > 1 callback function reference.\n\nIt is not uncommon for callback to appear in the querystring twice (albeit on accident) if jQuery's jsonp signature (e.g. jsonpCallback) is used incorrectly in conjunction with a manual querystring setting. The app should not fail just because of a querystring issue. This fixes that situation.\n\nMy test querystring which crashed the Node instance was \"?callback=go&callback=go\".\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1643/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1643/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1642",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1642/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1642/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1642/events",
    "html_url": "https://github.com/expressjs/express/pull/1642",
    "id": 14775742,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTkzNzMwNw==",
    "number": 1642,
    "title": "Update jade files [bot-update#1]",
    "user": {
      "login": "jade-bot",
      "id": 4529801,
      "node_id": "MDQ6VXNlcjQ1Mjk4MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4529801?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jade-bot",
      "html_url": "https://github.com/jade-bot",
      "followers_url": "https://api.github.com/users/jade-bot/followers",
      "following_url": "https://api.github.com/users/jade-bot/following{/other_user}",
      "gists_url": "https://api.github.com/users/jade-bot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jade-bot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jade-bot/subscriptions",
      "organizations_url": "https://api.github.com/users/jade-bot/orgs",
      "repos_url": "https://api.github.com/users/jade-bot/repos",
      "events_url": "https://api.github.com/users/jade-bot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jade-bot/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-05-26T21:51:35Z",
    "updated_at": "2014-06-19T06:53:13Z",
    "closed_at": "2013-06-02T23:04:50Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1642",
      "html_url": "https://github.com/expressjs/express/pull/1642",
      "diff_url": "https://github.com/expressjs/express/pull/1642.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1642.patch",
      "merged_at": "2013-06-02T23:04:50Z"
    },
    "body": "Implicit text-only status for `script` and `style` tags in jade has been [deprecated](https://github.com/visionmedia/jade/pull/1036), and will be removed in a future version.  To be prepared, all you need to do is add a `.` after all script and style tags.  This pull request helps by doing that.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1642/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1642/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1641",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1641/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1641/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1641/events",
    "html_url": "https://github.com/expressjs/express/pull/1641",
    "id": 14774397,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTkzNjgzOA==",
    "number": 1641,
    "title": "res.sendfile() now fires its callback even for HTTP 304 responses (issue #1640)",
    "user": {
      "login": "hacksparrow",
      "id": 950112,
      "node_id": "MDQ6VXNlcjk1MDExMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/950112?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hacksparrow",
      "html_url": "https://github.com/hacksparrow",
      "followers_url": "https://api.github.com/users/hacksparrow/followers",
      "following_url": "https://api.github.com/users/hacksparrow/following{/other_user}",
      "gists_url": "https://api.github.com/users/hacksparrow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hacksparrow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hacksparrow/subscriptions",
      "organizations_url": "https://api.github.com/users/hacksparrow/orgs",
      "repos_url": "https://api.github.com/users/hacksparrow/repos",
      "events_url": "https://api.github.com/users/hacksparrow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hacksparrow/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-05-26T19:43:14Z",
    "updated_at": "2014-06-16T21:57:30Z",
    "closed_at": "2013-06-27T11:25:26Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1641",
      "html_url": "https://github.com/expressjs/express/pull/1641",
      "diff_url": "https://github.com/expressjs/express/pull/1641.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1641.patch",
      "merged_at": null
    },
    "body": "`res.sendfile()` now fires the callback even if the requested file is not modified since the last request.\n\nIssue: #1640\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1641/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1641/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1640",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1640/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1640/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1640/events",
    "html_url": "https://github.com/expressjs/express/issues/1640",
    "id": 14774289,
    "node_id": "MDU6SXNzdWUxNDc3NDI4OQ==",
    "number": 1640,
    "title": "res.sendfile() does not fire the callback when the requested file is not modified",
    "user": {
      "login": "hacksparrow",
      "id": 950112,
      "node_id": "MDQ6VXNlcjk1MDExMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/950112?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hacksparrow",
      "html_url": "https://github.com/hacksparrow",
      "followers_url": "https://api.github.com/users/hacksparrow/followers",
      "following_url": "https://api.github.com/users/hacksparrow/following{/other_user}",
      "gists_url": "https://api.github.com/users/hacksparrow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hacksparrow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hacksparrow/subscriptions",
      "organizations_url": "https://api.github.com/users/hacksparrow/orgs",
      "repos_url": "https://api.github.com/users/hacksparrow/repos",
      "events_url": "https://api.github.com/users/hacksparrow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hacksparrow/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 8497,
        "node_id": "MDU6TGFiZWw4NDk3",
        "url": "https://api.github.com/repos/expressjs/express/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2013-05-26T19:34:25Z",
    "updated_at": "2013-12-04T10:55:35Z",
    "closed_at": "2013-12-04T10:55:35Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "`res.sendfile()` does not fire the callback when the requested file is not modified\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1640/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1640/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1639",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1639/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1639/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1639/events",
    "html_url": "https://github.com/expressjs/express/issues/1639",
    "id": 14772172,
    "node_id": "MDU6SXNzdWUxNDc3MjE3Mg==",
    "number": 1639,
    "title": "requiring grunt causes revisioned images url to cause range errors",
    "user": {
      "login": "tinganho",
      "id": 1324476,
      "node_id": "MDQ6VXNlcjEzMjQ0NzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1324476?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tinganho",
      "html_url": "https://github.com/tinganho",
      "followers_url": "https://api.github.com/users/tinganho/followers",
      "following_url": "https://api.github.com/users/tinganho/following{/other_user}",
      "gists_url": "https://api.github.com/users/tinganho/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tinganho/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tinganho/subscriptions",
      "organizations_url": "https://api.github.com/users/tinganho/orgs",
      "repos_url": "https://api.github.com/users/tinganho/repos",
      "events_url": "https://api.github.com/users/tinganho/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tinganho/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-05-26T16:19:39Z",
    "updated_at": "2013-06-02T23:03:48Z",
    "closed_at": "2013-06-02T23:03:48Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have this code:\n\n``` javascript\nvar express    = require('express'),\n    requirejs  = require('requirejs'),\n    http       = require('http'),\n    path       = require('path'),\n    cluster    = require('cluster'),\n    paths      = require('./conf/paths'),\n    cf         = require('./conf/serverConf'),\n    grunt      = require('grunt');\n```\n\nAnd I try to access http://dev.domain.com:3000/public/images/background.jpg?136912979, and it doesn't work, it causes a range error. And undefined is outputted in stdout.\n\nAnd I use the static parser: \n\n``` javascript\napp.use('/public', express.static(path.join(__dirname, 'public/')));\n```\n\nBut if I remove the query in the url it works. But the even weirder part is that I know grunt is causing all this problem. It works totally fine without grunt and I haven't called or used grunt in other parts of my code(as soon as I requires it, it causes this problem). The problem is that I need to use both the query in the url and grunt.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1639/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1639/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1638",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1638/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1638/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1638/events",
    "html_url": "https://github.com/expressjs/express/issues/1638",
    "id": 14682611,
    "node_id": "MDU6SXNzdWUxNDY4MjYxMQ==",
    "number": 1638,
    "title": "Why is next() \"not defined\" inside the app.all route function?",
    "user": {
      "login": "trusktr",
      "id": 297678,
      "node_id": "MDQ6VXNlcjI5NzY3OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/297678?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/trusktr",
      "html_url": "https://github.com/trusktr",
      "followers_url": "https://api.github.com/users/trusktr/followers",
      "following_url": "https://api.github.com/users/trusktr/following{/other_user}",
      "gists_url": "https://api.github.com/users/trusktr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/trusktr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/trusktr/subscriptions",
      "organizations_url": "https://api.github.com/users/trusktr/orgs",
      "repos_url": "https://api.github.com/users/trusktr/repos",
      "events_url": "https://api.github.com/users/trusktr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/trusktr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2013-05-23T16:16:08Z",
    "updated_at": "2013-05-23T18:56:36Z",
    "closed_at": "2013-05-23T17:18:03Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm doing this:\n\n``` javascript\napp.all(\"*\", function(req, res) {\n    console.log(\"\\n\\n------------- BLAH ---------\\n\\n\");\n    next(); // Why doesn't next() work here????????\n});\n```\n\nAnd it says \"ReferenceError: next is not defined\" so I can't move to the next route.\n\nWhy?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1638/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1638/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1637",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1637/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1637/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1637/events",
    "html_url": "https://github.com/expressjs/express/issues/1637",
    "id": 14675259,
    "node_id": "MDU6SXNzdWUxNDY3NTI1OQ==",
    "number": 1637,
    "title": "Settings set in `app.defaultConfiguration` is not inherited",
    "user": {
      "login": "tellnes",
      "id": 613729,
      "node_id": "MDQ6VXNlcjYxMzcyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/613729?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tellnes",
      "html_url": "https://github.com/tellnes",
      "followers_url": "https://api.github.com/users/tellnes/followers",
      "following_url": "https://api.github.com/users/tellnes/following{/other_user}",
      "gists_url": "https://api.github.com/users/tellnes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tellnes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tellnes/subscriptions",
      "organizations_url": "https://api.github.com/users/tellnes/orgs",
      "repos_url": "https://api.github.com/users/tellnes/repos",
      "events_url": "https://api.github.com/users/tellnes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tellnes/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 8497,
        "node_id": "MDU6TGFiZWw4NDk3",
        "url": "https://api.github.com/repos/expressjs/express/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 23,
    "created_at": "2013-05-23T13:59:00Z",
    "updated_at": "2013-12-04T00:16:55Z",
    "closed_at": "2013-12-04T00:14:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Is this intended behavior?\n\n``` js\nvar express = require('express')\n  , assert = require('assert')\n\nvar parent = express()\nvar child = express()\n\nparent.enable('something')\nparent.disable('x-powered-by')\n\nparent.use(child)\n\nassert(parent.enabled('something') == true)\nassert(parent.enabled('x-powered-by') == false)\n\nassert(parent.enabled('something') == child.enabled('something'))\nassert(parent.enabled('x-powered-by') == child.enabled('x-powered-by')) // fails\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1637/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1637/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1636",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1636/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1636/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1636/events",
    "html_url": "https://github.com/expressjs/express/issues/1636",
    "id": 14616512,
    "node_id": "MDU6SXNzdWUxNDYxNjUxMg==",
    "number": 1636,
    "title": "Bodyparser not setting object.prototype?",
    "user": {
      "login": "srlowe",
      "id": 1562665,
      "node_id": "MDQ6VXNlcjE1NjI2NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1562665?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/srlowe",
      "html_url": "https://github.com/srlowe",
      "followers_url": "https://api.github.com/users/srlowe/followers",
      "following_url": "https://api.github.com/users/srlowe/following{/other_user}",
      "gists_url": "https://api.github.com/users/srlowe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/srlowe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/srlowe/subscriptions",
      "organizations_url": "https://api.github.com/users/srlowe/orgs",
      "repos_url": "https://api.github.com/users/srlowe/repos",
      "events_url": "https://api.github.com/users/srlowe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/srlowe/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-05-22T10:46:42Z",
    "updated_at": "2013-05-23T18:06:33Z",
    "closed_at": "2013-05-23T18:06:33Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "If I get some data from a http post like this:\n\nsomeControlerFunction : function(req, res){\n            var somedata = req.body.somedata;\n...\n}\n\nThen somedata.hasOwnProperty == undefined.  Is this intended?\n\nThanks.\n\n(Express 3.2.1)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1636/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1636/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1635",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1635/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1635/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1635/events",
    "html_url": "https://github.com/expressjs/express/issues/1635",
    "id": 14549891,
    "node_id": "MDU6SXNzdWUxNDU0OTg5MQ==",
    "number": 1635,
    "title": "cookieParser and cookieSession not working when secret set to both",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2013-05-21T04:01:29Z",
    "updated_at": "2013-09-10T09:48:21Z",
    "closed_at": "2013-09-10T09:48:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm using the following to create a cookie session (using 'blah' for example).\n\n``` javascript\n  app.use(express.cookieParser('blah'));\n  app.use(express.cookieSession({\n    secret: 'blah',\n    key: sessionKey\n  }));\n```\n\nAfter setting some values to req.session, on the next refresh, req.session is empty.  \n\nIf I remove the `secret: 'blah'` line from the cookieSession, it works fine and the sessions don't erase.  Any idea what I am doing wrong?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1635/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1635/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1634",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1634/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1634/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1634/events",
    "html_url": "https://github.com/expressjs/express/pull/1634",
    "id": 14505399,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTgwMjMzMg==",
    "number": 1634,
    "title": "added some additional explanation for clarity",
    "user": {
      "login": "joshlangner",
      "id": 852593,
      "node_id": "MDQ6VXNlcjg1MjU5Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/852593?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joshlangner",
      "html_url": "https://github.com/joshlangner",
      "followers_url": "https://api.github.com/users/joshlangner/followers",
      "following_url": "https://api.github.com/users/joshlangner/following{/other_user}",
      "gists_url": "https://api.github.com/users/joshlangner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joshlangner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joshlangner/subscriptions",
      "organizations_url": "https://api.github.com/users/joshlangner/orgs",
      "repos_url": "https://api.github.com/users/joshlangner/repos",
      "events_url": "https://api.github.com/users/joshlangner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joshlangner/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-05-20T02:47:10Z",
    "updated_at": "2014-06-25T12:36:58Z",
    "closed_at": "2013-06-02T22:58:26Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1634",
      "html_url": "https://github.com/expressjs/express/pull/1634",
      "diff_url": "https://github.com/expressjs/express/pull/1634.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1634.patch",
      "merged_at": "2013-06-02T22:58:26Z"
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1634/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1634/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1633",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1633/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1633/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1633/events",
    "html_url": "https://github.com/expressjs/express/issues/1633",
    "id": 14485249,
    "node_id": "MDU6SXNzdWUxNDQ4NTI0OQ==",
    "number": 1633,
    "title": "Add compass as a default stylesheet option.",
    "user": {
      "login": "nathggns",
      "id": 719814,
      "node_id": "MDQ6VXNlcjcxOTgxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/719814?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathggns",
      "html_url": "https://github.com/nathggns",
      "followers_url": "https://api.github.com/users/nathggns/followers",
      "following_url": "https://api.github.com/users/nathggns/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathggns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathggns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathggns/subscriptions",
      "organizations_url": "https://api.github.com/users/nathggns/orgs",
      "repos_url": "https://api.github.com/users/nathggns/repos",
      "events_url": "https://api.github.com/users/nathggns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathggns/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-05-18T16:02:23Z",
    "updated_at": "2013-05-18T20:50:38Z",
    "closed_at": "2013-05-18T20:50:38Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Is it possible to add [compass](http://compass-style.org/) as a default stylesheet option (in addition to the currently existing less + stylus options).\n\nI have [already written a middleware for express](http://github.com/nathggns/node-compass) that does it, it's just a case of adding it to the core, I guess.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1633/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1633/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1632",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1632/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1632/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1632/events",
    "html_url": "https://github.com/expressjs/express/issues/1632",
    "id": 14479653,
    "node_id": "MDU6SXNzdWUxNDQ3OTY1Mw==",
    "number": 1632,
    "title": "express 3.2.1 ~ 3.2.4 upload file error",
    "user": {
      "login": "godfox2012",
      "id": 1642170,
      "node_id": "MDQ6VXNlcjE2NDIxNzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1642170?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/godfox2012",
      "html_url": "https://github.com/godfox2012",
      "followers_url": "https://api.github.com/users/godfox2012/followers",
      "following_url": "https://api.github.com/users/godfox2012/following{/other_user}",
      "gists_url": "https://api.github.com/users/godfox2012/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/godfox2012/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/godfox2012/subscriptions",
      "organizations_url": "https://api.github.com/users/godfox2012/orgs",
      "repos_url": "https://api.github.com/users/godfox2012/repos",
      "events_url": "https://api.github.com/users/godfox2012/events{/privacy}",
      "received_events_url": "https://api.github.com/users/godfox2012/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-05-18T06:11:45Z",
    "updated_at": "2013-12-11T03:49:01Z",
    "closed_at": "2013-12-11T03:49:01Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I use 3.2.0 version is normal, But update version to 3.2.4 have error:  \n\n> Error: unintialized parser\n\nI look up this error because：\n\n> npm WARN engine formidable@1.0.13: wanted: {\"node\":\"<0.9.0\"} (current: {\"node\":\"v0.10.6\",\"npm\":\"1.2.18\"})\n\nI hope fixed this bug\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1632/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1632/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1631",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1631/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1631/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1631/events",
    "html_url": "https://github.com/expressjs/express/issues/1631",
    "id": 14478693,
    "node_id": "MDU6SXNzdWUxNDQ3ODY5Mw==",
    "number": 1631,
    "title": "application/json does not have a charset parameter",
    "user": {
      "login": "kevinoid",
      "id": 336433,
      "node_id": "MDQ6VXNlcjMzNjQzMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/336433?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinoid",
      "html_url": "https://github.com/kevinoid",
      "followers_url": "https://api.github.com/users/kevinoid/followers",
      "following_url": "https://api.github.com/users/kevinoid/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinoid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinoid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinoid/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinoid/orgs",
      "repos_url": "https://api.github.com/users/kevinoid/repos",
      "events_url": "https://api.github.com/users/kevinoid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinoid/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/10",
      "html_url": "https://github.com/expressjs/express/milestone/10",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/10/labels",
      "id": 661448,
      "node_id": "MDk6TWlsZXN0b25lNjYxNDQ4",
      "number": 10,
      "title": "4.3.0",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 4,
      "state": "closed",
      "created_at": "2014-05-16T19:07:43Z",
      "updated_at": "2014-05-23T22:37:20Z",
      "due_on": null,
      "closed_at": "2014-05-23T22:37:20Z"
    },
    "comments": 5,
    "created_at": "2013-05-18T03:43:45Z",
    "updated_at": "2016-11-25T06:28:43Z",
    "closed_at": "2014-05-21T06:10:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "According to [RFC 4627](http://tools.ietf.org/html/rfc4627) `application/json` does not have a `charset` parameter and must always be encoded in Unicode.  Express currently adds a charset parameter to the Content-Type of JSON responses.\n\nThe impact of this bug is small, since adding `charset` is common enough that most clients will handle it.  It's probably a wontfix issue, but I thought you should be aware.  If it is something you would be interested in fixing, I can work up a pull request for it.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1631/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1631/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1630",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1630/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1630/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1630/events",
    "html_url": "https://github.com/expressjs/express/pull/1630",
    "id": 14463366,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTc4NDA0Mw==",
    "number": 1630,
    "title": "Remove dead link from readme's \"More Information\"",
    "user": {
      "login": "EvanHahn",
      "id": 777712,
      "node_id": "MDQ6VXNlcjc3NzcxMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/777712?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EvanHahn",
      "html_url": "https://github.com/EvanHahn",
      "followers_url": "https://api.github.com/users/EvanHahn/followers",
      "following_url": "https://api.github.com/users/EvanHahn/following{/other_user}",
      "gists_url": "https://api.github.com/users/EvanHahn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EvanHahn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EvanHahn/subscriptions",
      "organizations_url": "https://api.github.com/users/EvanHahn/orgs",
      "repos_url": "https://api.github.com/users/EvanHahn/repos",
      "events_url": "https://api.github.com/users/EvanHahn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EvanHahn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-05-17T17:37:29Z",
    "updated_at": "2022-04-24T23:55:02Z",
    "closed_at": "2013-06-02T22:50:45Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1630",
      "html_url": "https://github.com/expressjs/express/pull/1630",
      "diff_url": "https://github.com/expressjs/express/pull/1630.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1630.patch",
      "merged_at": "2013-06-02T22:50:45Z"
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1630/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1630/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1629",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1629/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1629/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1629/events",
    "html_url": "https://github.com/expressjs/express/issues/1629",
    "id": 14445954,
    "node_id": "MDU6SXNzdWUxNDQ0NTk1NA==",
    "number": 1629,
    "title": "Unable to pass all locals in a vew",
    "user": {
      "login": "skotchio",
      "id": 1432812,
      "node_id": "MDQ6VXNlcjE0MzI4MTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1432812?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/skotchio",
      "html_url": "https://github.com/skotchio",
      "followers_url": "https://api.github.com/users/skotchio/followers",
      "following_url": "https://api.github.com/users/skotchio/following{/other_user}",
      "gists_url": "https://api.github.com/users/skotchio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/skotchio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/skotchio/subscriptions",
      "organizations_url": "https://api.github.com/users/skotchio/orgs",
      "repos_url": "https://api.github.com/users/skotchio/repos",
      "events_url": "https://api.github.com/users/skotchio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/skotchio/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 11,
    "created_at": "2013-05-17T10:16:40Z",
    "updated_at": "2013-05-18T22:48:57Z",
    "closed_at": "2013-05-17T12:28:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have the following middleware for pass default locals into a view:\n\n```\napp.use(function (req, res, next) {\n    res.locals.prop0 = 1;\n    return next();\n });\n```\n\nAnd also I have the following route:\n\n```\napp.get('/', function (req, res, next) {\n    return res.render('index', {prop1: 1, prop2: 2});   \n});\n```\n\nI need to get these locals in a view and save into javascript object. When I do like the following:\n\n```\n script\n    var data = {};\n    data = #{locals.prop0};\n    data = #{locals.prop1};\n    data = #{locals.prop2};\n```\n\nAll works fine but if I try to get them like the following:\n\n```\nscript\n    var data = #{locals};\n```\n\ndata variable has [object Object]\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1629/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1629/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1628",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1628/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1628/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1628/events",
    "html_url": "https://github.com/expressjs/express/issues/1628",
    "id": 14442573,
    "node_id": "MDU6SXNzdWUxNDQ0MjU3Mw==",
    "number": 1628,
    "title": "Make example for multipart response",
    "user": {
      "login": "guilloche",
      "id": 1781036,
      "node_id": "MDQ6VXNlcjE3ODEwMzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1781036?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/guilloche",
      "html_url": "https://github.com/guilloche",
      "followers_url": "https://api.github.com/users/guilloche/followers",
      "following_url": "https://api.github.com/users/guilloche/following{/other_user}",
      "gists_url": "https://api.github.com/users/guilloche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/guilloche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/guilloche/subscriptions",
      "organizations_url": "https://api.github.com/users/guilloche/orgs",
      "repos_url": "https://api.github.com/users/guilloche/repos",
      "events_url": "https://api.github.com/users/guilloche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/guilloche/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2013-05-17T08:33:12Z",
    "updated_at": "2013-06-02T22:57:56Z",
    "closed_at": "2013-06-02T22:57:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I don't find any example for multipart response, but parsing multipart request working very well.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1628/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1628/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1627",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1627/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1627/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1627/events",
    "html_url": "https://github.com/expressjs/express/issues/1627",
    "id": 14413020,
    "node_id": "MDU6SXNzdWUxNDQxMzAyMA==",
    "number": 1627,
    "title": "restricting when Session middleware is run",
    "user": {
      "login": "bazjapan",
      "id": 108936,
      "node_id": "MDQ6VXNlcjEwODkzNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/108936?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bazjapan",
      "html_url": "https://github.com/bazjapan",
      "followers_url": "https://api.github.com/users/bazjapan/followers",
      "following_url": "https://api.github.com/users/bazjapan/following{/other_user}",
      "gists_url": "https://api.github.com/users/bazjapan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bazjapan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bazjapan/subscriptions",
      "organizations_url": "https://api.github.com/users/bazjapan/orgs",
      "repos_url": "https://api.github.com/users/bazjapan/repos",
      "events_url": "https://api.github.com/users/bazjapan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bazjapan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2013-05-16T15:56:30Z",
    "updated_at": "2013-05-17T02:28:35Z",
    "closed_at": "2013-05-17T02:28:35Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Is there a prescribed way to have routes pointing to static files etc not run certain middleware?\nBasically, I don't want to run the session middleware when the requested url has  an extension of either .js or .css\nthanks for your help\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1627/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1627/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1626",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1626/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1626/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1626/events",
    "html_url": "https://github.com/expressjs/express/issues/1626",
    "id": 14355192,
    "node_id": "MDU6SXNzdWUxNDM1NTE5Mg==",
    "number": 1626,
    "title": "could I pass the next funtion as a callback?",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2013-05-15T12:04:27Z",
    "updated_at": "2013-05-16T01:58:20Z",
    "closed_at": "2013-05-16T01:58:20Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "  test1 = function(req, res, next) {\n    return db.find(next);\n  }\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1626/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1626/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1625",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1625/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1625/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1625/events",
    "html_url": "https://github.com/expressjs/express/pull/1625",
    "id": 14339556,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTcxNjYxMg==",
    "number": 1625,
    "title": "Throw a meaningful error when there is no default engine",
    "user": {
      "login": "ForbesLindesay",
      "id": 1260646,
      "node_id": "MDQ6VXNlcjEyNjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1260646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ForbesLindesay",
      "html_url": "https://github.com/ForbesLindesay",
      "followers_url": "https://api.github.com/users/ForbesLindesay/followers",
      "following_url": "https://api.github.com/users/ForbesLindesay/following{/other_user}",
      "gists_url": "https://api.github.com/users/ForbesLindesay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ForbesLindesay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ForbesLindesay/subscriptions",
      "organizations_url": "https://api.github.com/users/ForbesLindesay/orgs",
      "repos_url": "https://api.github.com/users/ForbesLindesay/repos",
      "events_url": "https://api.github.com/users/ForbesLindesay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ForbesLindesay/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2013-05-15T01:18:58Z",
    "updated_at": "2014-07-25T21:30:44Z",
    "closed_at": "2013-05-15T15:27:47Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1625",
      "html_url": "https://github.com/expressjs/express/pull/1625",
      "diff_url": "https://github.com/expressjs/express/pull/1625.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1625.patch",
      "merged_at": "2013-05-15T15:27:47Z"
    },
    "body": "See https://github.com/visionmedia/jade/issues/1023 for an example of the current lack of helpful error messages biting people (@lbj96347).\n\nI've run into this myself before as well at some point.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1625/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1625/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1624",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1624/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1624/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1624/events",
    "html_url": "https://github.com/expressjs/express/issues/1624",
    "id": 14291626,
    "node_id": "MDU6SXNzdWUxNDI5MTYyNg==",
    "number": 1624,
    "title": "why then next function only access one argument",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2013-05-14T02:48:03Z",
    "updated_at": "2013-05-15T07:16:06Z",
    "closed_at": "2013-05-15T07:16:06Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "could it be better if\n\n```\n    // invoke route callbacks\n    function callbacks(err, result) {\n      req.prev = {err: err, result: result};\n      var fn = route.callbacks[i++];\n      try {\n        if ('route' == err) {\n          nextRoute();\n        } else if (err && fn) {\n          if (fn.length < 4) return fn(req, res, callbacks);\n          fn(err, req, res, callbacks);\n        } else if (fn) {\n          if (fn.length < 4) return fn(req, res, callbacks);\n          callbacks();\n        } else {\n          nextRoute(err);\n        }\n      } catch (err) {\n        callbacks(err);\n      }\n    }\n\n```\n\noriginal code from lib/router/index.js line 151\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1624/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1624/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1623",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1623/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1623/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1623/events",
    "html_url": "https://github.com/expressjs/express/issues/1623",
    "id": 14278651,
    "node_id": "MDU6SXNzdWUxNDI3ODY1MQ==",
    "number": 1623,
    "title": "Infinite Loop Caused By Undefined Status Code",
    "user": {
      "login": "xjamundx",
      "id": 246143,
      "node_id": "MDQ6VXNlcjI0NjE0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/246143?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xjamundx",
      "html_url": "https://github.com/xjamundx",
      "followers_url": "https://api.github.com/users/xjamundx/followers",
      "following_url": "https://api.github.com/users/xjamundx/following{/other_user}",
      "gists_url": "https://api.github.com/users/xjamundx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xjamundx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xjamundx/subscriptions",
      "organizations_url": "https://api.github.com/users/xjamundx/orgs",
      "repos_url": "https://api.github.com/users/xjamundx/repos",
      "events_url": "https://api.github.com/users/xjamundx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xjamundx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 16,
    "created_at": "2013-05-13T19:57:20Z",
    "updated_at": "2013-05-28T16:27:08Z",
    "closed_at": "2013-05-13T20:22:37Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The following code will break express really hard:\n\n``` javascript\nvar express = require('express');\nvar app = express();\napp.get('/', function(req, res) {\n  res.send(undefined, \"bla\");\n});\napp.listen(2222);\n```\n\nEssentially starting an infinite loop of errors that looks like this:\n\n```\nTypeError: Cannot call method 'toString' of undefined\n    at ServerResponse.writeHead (http.js:980:45)\n    at ServerResponse.res.writeHead (/Users/jamund/Sites/no.desk/node_modules/express/node_modules/connect/lib/patch.js:75:22)\n    at ServerResponse._implicitHeader (http.js:931:8)\n    at ServerResponse.OutgoingMessage.end (http.js:766:10)\n    at next (/Users/jamund/Sites/no.desk/node_modules/express/node_modules/connect/lib/proto.js:149:13)\n    at pass (/Users/jamund/Sites/no.desk/node_modules/express/lib/router/index.js:107:24)\n    at nextRoute (/Users/jamund/Sites/no.desk/node_modules/express/lib/router/index.js:100:7)\n    at callbacks (/Users/jamund/Sites/no.desk/node_modules/express/lib/router/index.js:164:11)\n    at callbacks (/Users/jamund/Sites/no.desk/node_modules/express/lib/router/index.js:167:9)\n    at callbacks (/Users/jamund/Sites/no.desk/node_modules/express/lib/router/index.js:167:9)\nTypeError: Cannot call method 'toString' of undefined\n    at ServerResponse.writeHead (http.js:980:45)\n    at ServerResponse.res.writeHead (/Users/jamund/Sites/no.desk/node_modules/express/node_modules/connect/lib/patch.js:75:22)\n    at ServerResponse._implicitHeader (http.js:931:8)\n    at ServerResponse.OutgoingMessage.end (http.js:766:10)\n    at next (/Users/jamund/Sites/no.desk/node_modules/express/node_modules/connect/lib/proto.js:149:13)\n    at pass (/Users/jamund/Sites/no.desk/node_modules/express/lib/router/index.js:107:24)\n    at nextRoute (/Users/jamund/Sites/no.desk/node_modules/express/lib/router/index.js:100:7)\n    at callbacks (/Users/jamund/Sites/no.desk/node_modules/express/lib/router/index.js:164:11)\n    at callbacks (/Users/jamund/Sites/no.desk/node_modules/express/lib/router/index.js:167:9)\n    at callbacks (/Users/jamund/Sites/no.desk/node_modules/express/lib/router/index.js:167:9)\nTypeError: Cannot call method 'toString' of undefined\n    at ServerResponse.writeHead (http.js:980:45)\n    at ServerResponse.res.writeHead (/Users/jamund/Sites/no.desk/node_modules/express/node_modules/connect/lib/patch.js:75:22)\n    at ServerResponse._implicitHeader (http.js:931:8)\n    at ServerResponse.OutgoingMessage.end (http.js:766:10)\n    at next (/Users/jamund/Sites/no.desk/node_modules/express/node_modules/connect/lib/proto.js:149:13)\n    at pass (/Users/jamund/Sites/no.desk/node_modules/express/lib/router/index.js:107:24)\n    at nextRoute (/Users/jamund/Sites/no.desk/node_modules/express/lib/router/index.js:100:7)\n    at callbacks (/Users/jamund/Sites/no.desk/node_modules/express/lib/router/index.js:164:11)\n    at callbacks (/Users/jamund/Sites/no.desk/node_modules/express/lib/router/index.js:167:9)\n    at callbacks (/Users/jamund/Sites/no.desk/node_modules/express/lib/router/index.js:167:9)\n```\n\nYou can easily solve this problem by catching errors:\n\n``` javascript\napp.use(function(err, req, res, next) {\n console.log(err);\n});\n```\n\nBut seriously, we should fix this :)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1623/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1623/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1622",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1622/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1622/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1622/events",
    "html_url": "https://github.com/expressjs/express/pull/1622",
    "id": 14240482,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTY2NDk0MA==",
    "number": 1622,
    "title": "Fixes indentation for css engines when using express to scaffold an application",
    "user": {
      "login": "saintedlama",
      "id": 123820,
      "node_id": "MDQ6VXNlcjEyMzgyMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/123820?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/saintedlama",
      "html_url": "https://github.com/saintedlama",
      "followers_url": "https://api.github.com/users/saintedlama/followers",
      "following_url": "https://api.github.com/users/saintedlama/following{/other_user}",
      "gists_url": "https://api.github.com/users/saintedlama/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/saintedlama/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/saintedlama/subscriptions",
      "organizations_url": "https://api.github.com/users/saintedlama/orgs",
      "repos_url": "https://api.github.com/users/saintedlama/repos",
      "events_url": "https://api.github.com/users/saintedlama/events{/privacy}",
      "received_events_url": "https://api.github.com/users/saintedlama/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-05-12T21:52:19Z",
    "updated_at": "2014-07-01T08:43:36Z",
    "closed_at": "2013-06-02T22:47:36Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1622",
      "html_url": "https://github.com/expressjs/express/pull/1622",
      "diff_url": "https://github.com/expressjs/express/pull/1622.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1622.patch",
      "merged_at": "2013-06-02T22:47:36Z"
    },
    "body": "Generating an express application with `express -c less` generates an app.js file like this\n\n```\n...\napp.use(app.router);\n  app.use(require('less-middleware')({ src: __dirname + '/public' }));\napp.use(express.static(path.join(__dirname, 'public')));\n...\n```\n\nAfter applying this fix the indentation for the css middleware is fixed and the app.js flile will look like this:\n\n```\n...\napp.use(app.router);\napp.use(require('less-middleware')({ src: __dirname + '/public' }));\napp.use(express.static(path.join(__dirname, 'public')));\n...\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1622/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1622/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1621",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1621/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1621/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1621/events",
    "html_url": "https://github.com/expressjs/express/issues/1621",
    "id": 14224812,
    "node_id": "MDU6SXNzdWUxNDIyNDgxMg==",
    "number": 1621,
    "title": "res.Sendfile returns forbidden on files with \"..\" in their name",
    "user": {
      "login": "zumoshi",
      "id": 4184939,
      "node_id": "MDQ6VXNlcjQxODQ5Mzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4184939?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zumoshi",
      "html_url": "https://github.com/zumoshi",
      "followers_url": "https://api.github.com/users/zumoshi/followers",
      "following_url": "https://api.github.com/users/zumoshi/following{/other_user}",
      "gists_url": "https://api.github.com/users/zumoshi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zumoshi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zumoshi/subscriptions",
      "organizations_url": "https://api.github.com/users/zumoshi/orgs",
      "repos_url": "https://api.github.com/users/zumoshi/repos",
      "events_url": "https://api.github.com/users/zumoshi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zumoshi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2013-05-11T18:04:47Z",
    "updated_at": "2014-04-22T23:12:16Z",
    "closed_at": "2013-05-11T18:41:22Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "the relative path; the \"../\" is considered malicious by res.sendfile() but it doesn't check for ../ or /.. , it only checks for \"..\"\nso if i do res.sendfile('/a..txt') it throws\n\nError: Forbidden\n    at SendStream.error (C:\\w\\node_modules\\express\\node_modules\\send\\lib\\send.js:145:16)\n    at SendStream.pipe (C:\\w\\node_modules\\express\\node_modules\\send\\lib\\send.js:307:39)\n    at ServerResponse.res.sendfile (C:\\w\\node_modules\\express\\lib\\response.js:339:8)\n   ...\n    at callbacks (C:\\w\\node_modules\\express\\lib\\router\\index.js:161:37)\n    at param (C:\\w\\node_modules\\express\\lib\\router\\index.js:135:11)\n\ni am currently using express send file in a production server to serve user files and some files have 2 dots in their name\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1621/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1621/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1620",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1620/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1620/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1620/events",
    "html_url": "https://github.com/expressjs/express/issues/1620",
    "id": 14215294,
    "node_id": "MDU6SXNzdWUxNDIxNTI5NA==",
    "number": 1620,
    "title": "can remove connect.query() in default ? because it not support \"+\" to space",
    "user": {
      "login": "paynechu",
      "id": 314176,
      "node_id": "MDQ6VXNlcjMxNDE3Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/314176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paynechu",
      "html_url": "https://github.com/paynechu",
      "followers_url": "https://api.github.com/users/paynechu/followers",
      "following_url": "https://api.github.com/users/paynechu/following{/other_user}",
      "gists_url": "https://api.github.com/users/paynechu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paynechu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paynechu/subscriptions",
      "organizations_url": "https://api.github.com/users/paynechu/orgs",
      "repos_url": "https://api.github.com/users/paynechu/repos",
      "events_url": "https://api.github.com/users/paynechu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paynechu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2013-05-11T00:47:15Z",
    "updated_at": "2013-05-11T08:00:55Z",
    "closed_at": "2013-05-11T07:49:06Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "can remove connect.query() in default ? I need to decode \"+\" to space. but connect.query() not support this. I may put my own middleware handle query. but..connect.query add by default make me feel duplicate...any way to remove it from default ? p.s. I also asked Connect.JS team to fix the connect.query() problem already.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1620/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1620/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1619",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1619/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1619/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1619/events",
    "html_url": "https://github.com/expressjs/express/issues/1619",
    "id": 14210725,
    "node_id": "MDU6SXNzdWUxNDIxMDcyNQ==",
    "number": 1619,
    "title": "dont produce ETag for non-GET",
    "user": {
      "login": "tj",
      "id": 25254,
      "node_id": "MDQ6VXNlcjI1MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tj",
      "html_url": "https://github.com/tj",
      "followers_url": "https://api.github.com/users/tj/followers",
      "following_url": "https://api.github.com/users/tj/following{/other_user}",
      "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
      "organizations_url": "https://api.github.com/users/tj/orgs",
      "repos_url": "https://api.github.com/users/tj/repos",
      "events_url": "https://api.github.com/users/tj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 88345,
        "node_id": "MDU6TGFiZWw4ODM0NQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/3.x",
        "name": "3.x",
        "color": "ededed",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2013-05-10T21:35:45Z",
    "updated_at": "2015-02-12T22:14:23Z",
    "closed_at": "2013-05-10T21:44:06Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "doesn't make much sense\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1619/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1619/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1618",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1618/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1618/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1618/events",
    "html_url": "https://github.com/expressjs/express/pull/1618",
    "id": 14194853,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTY0NDQ5Nw==",
    "number": 1618,
    "title": "Flush messages exposed to locals *after* the view has the chance to proces...",
    "user": {
      "login": "pwmckenna",
      "id": 295678,
      "node_id": "MDQ6VXNlcjI5NTY3OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/295678?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pwmckenna",
      "html_url": "https://github.com/pwmckenna",
      "followers_url": "https://api.github.com/users/pwmckenna/followers",
      "following_url": "https://api.github.com/users/pwmckenna/following{/other_user}",
      "gists_url": "https://api.github.com/users/pwmckenna/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pwmckenna/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pwmckenna/subscriptions",
      "organizations_url": "https://api.github.com/users/pwmckenna/orgs",
      "repos_url": "https://api.github.com/users/pwmckenna/repos",
      "events_url": "https://api.github.com/users/pwmckenna/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pwmckenna/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-05-10T15:05:52Z",
    "updated_at": "2014-07-07T14:07:58Z",
    "closed_at": "2013-05-11T22:26:23Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1618",
      "html_url": "https://github.com/expressjs/express/pull/1618",
      "diff_url": "https://github.com/expressjs/express/pull/1618.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1618.patch",
      "merged_at": "2013-05-11T22:26:23Z"
    },
    "body": "...s them.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1618/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1618/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1617",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1617/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1617/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1617/events",
    "html_url": "https://github.com/expressjs/express/pull/1617",
    "id": 14179077,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTYzNjMzMQ==",
    "number": 1617,
    "title": "Refactor merging of options in app.render",
    "user": {
      "login": "alvinsw",
      "id": 2344573,
      "node_id": "MDQ6VXNlcjIzNDQ1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2344573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alvinsw",
      "html_url": "https://github.com/alvinsw",
      "followers_url": "https://api.github.com/users/alvinsw/followers",
      "following_url": "https://api.github.com/users/alvinsw/following{/other_user}",
      "gists_url": "https://api.github.com/users/alvinsw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alvinsw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alvinsw/subscriptions",
      "organizations_url": "https://api.github.com/users/alvinsw/orgs",
      "repos_url": "https://api.github.com/users/alvinsw/repos",
      "events_url": "https://api.github.com/users/alvinsw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alvinsw/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-05-10T05:36:52Z",
    "updated_at": "2013-09-07T21:30:11Z",
    "closed_at": "2013-09-07T21:29:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1617",
      "html_url": "https://github.com/expressjs/express/pull/1617",
      "diff_url": "https://github.com/expressjs/express/pull/1617.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1617.patch",
      "merged_at": null
    },
    "body": "Since opts is a newly created object, why not have it extend the this.locals instead of merging it?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1617/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1617/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1616",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1616/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1616/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1616/events",
    "html_url": "https://github.com/expressjs/express/issues/1616",
    "id": 14162832,
    "node_id": "MDU6SXNzdWUxNDE2MjgzMg==",
    "number": 1616,
    "title": "TypeError on method req.__defineGetter__ host - split of undefined",
    "user": {
      "login": "esnunes",
      "id": 961874,
      "node_id": "MDQ6VXNlcjk2MTg3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/961874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/esnunes",
      "html_url": "https://github.com/esnunes",
      "followers_url": "https://api.github.com/users/esnunes/followers",
      "following_url": "https://api.github.com/users/esnunes/following{/other_user}",
      "gists_url": "https://api.github.com/users/esnunes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/esnunes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/esnunes/subscriptions",
      "organizations_url": "https://api.github.com/users/esnunes/orgs",
      "repos_url": "https://api.github.com/users/esnunes/repos",
      "events_url": "https://api.github.com/users/esnunes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/esnunes/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-05-09T19:53:37Z",
    "updated_at": "2013-05-09T19:56:53Z",
    "closed_at": "2013-05-09T19:56:53Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Getter method `host` of request object sometimes generates a `TypeError` due to a call of method `split` on `undefined`. The method is very simple:\n\n``` javascript\nreq.__defineGetter__('host', function(){\n  var trustProxy = this.app.get('trust proxy');\n  var host = trustProxy && this.get('X-Forwarded-Host');\n  host = host || this.get('Host');\n  return host.split(':')[0];\n});\n```\n\nFor some reason it's reaching `undefined` value for variable `host` on the line `return host.split(':')[0];`.\n\nI'm using express version 3.1.2 and \"trust proxy\" is disabled.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1616/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1616/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1615",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1615/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1615/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1615/events",
    "html_url": "https://github.com/expressjs/express/pull/1615",
    "id": 14156003,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTYyNDE0OQ==",
    "number": 1615,
    "title": "runnable button",
    "user": {
      "login": "ykumar6",
      "id": 1085792,
      "node_id": "MDQ6VXNlcjEwODU3OTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1085792?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ykumar6",
      "html_url": "https://github.com/ykumar6",
      "followers_url": "https://api.github.com/users/ykumar6/followers",
      "following_url": "https://api.github.com/users/ykumar6/following{/other_user}",
      "gists_url": "https://api.github.com/users/ykumar6/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ykumar6/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ykumar6/subscriptions",
      "organizations_url": "https://api.github.com/users/ykumar6/orgs",
      "repos_url": "https://api.github.com/users/ykumar6/repos",
      "events_url": "https://api.github.com/users/ykumar6/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ykumar6/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2013-05-09T17:22:47Z",
    "updated_at": "2014-06-29T20:45:32Z",
    "closed_at": "2013-10-14T21:17:04Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1615",
      "html_url": "https://github.com/expressjs/express/pull/1615",
      "diff_url": "https://github.com/expressjs/express/pull/1615.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1615.patch",
      "merged_at": null
    },
    "body": "replaced link with button to live examples from the examples folder\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1615/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1615/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1614",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1614/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1614/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1614/events",
    "html_url": "https://github.com/expressjs/express/pull/1614",
    "id": 14113953,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTYwMjAxMw==",
    "number": 1614,
    "title": "Link to live runnable examples from examples directory",
    "user": {
      "login": "leemunroe",
      "id": 15963,
      "node_id": "MDQ6VXNlcjE1OTYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/15963?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leemunroe",
      "html_url": "https://github.com/leemunroe",
      "followers_url": "https://api.github.com/users/leemunroe/followers",
      "following_url": "https://api.github.com/users/leemunroe/following{/other_user}",
      "gists_url": "https://api.github.com/users/leemunroe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leemunroe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leemunroe/subscriptions",
      "organizations_url": "https://api.github.com/users/leemunroe/orgs",
      "repos_url": "https://api.github.com/users/leemunroe/repos",
      "events_url": "https://api.github.com/users/leemunroe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leemunroe/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-05-08T18:00:48Z",
    "updated_at": "2014-07-12T11:52:02Z",
    "closed_at": "2013-09-08T04:47:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1614",
      "html_url": "https://github.com/expressjs/express/pull/1614",
      "diff_url": "https://github.com/expressjs/express/pull/1614.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1614.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1614/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1614/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1613",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1613/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1613/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1613/events",
    "html_url": "https://github.com/expressjs/express/issues/1613",
    "id": 14078521,
    "node_id": "MDU6SXNzdWUxNDA3ODUyMQ==",
    "number": 1613,
    "title": "silly javascript",
    "user": {
      "login": "ricardobeat",
      "id": 97396,
      "node_id": "MDQ6VXNlcjk3Mzk2",
      "avatar_url": "https://avatars.githubusercontent.com/u/97396?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ricardobeat",
      "html_url": "https://github.com/ricardobeat",
      "followers_url": "https://api.github.com/users/ricardobeat/followers",
      "following_url": "https://api.github.com/users/ricardobeat/following{/other_user}",
      "gists_url": "https://api.github.com/users/ricardobeat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ricardobeat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ricardobeat/subscriptions",
      "organizations_url": "https://api.github.com/users/ricardobeat/orgs",
      "repos_url": "https://api.github.com/users/ricardobeat/repos",
      "events_url": "https://api.github.com/users/ricardobeat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ricardobeat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 21,
    "created_at": "2013-05-08T00:19:51Z",
    "updated_at": "2013-05-08T20:58:08Z",
    "closed_at": "2013-05-08T02:50:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "plain javascript is annoying. it's a shame that we can't use a modern language to develop this thing. please consider rewriting everything in coffee-script\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1613/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1613/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1612",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1612/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1612/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1612/events",
    "html_url": "https://github.com/expressjs/express/issues/1612",
    "id": 14069610,
    "node_id": "MDU6SXNzdWUxNDA2OTYxMA==",
    "number": 1612,
    "title": "Create a middleware to support other HTTP methods",
    "user": {
      "login": "realguess",
      "id": 263215,
      "node_id": "MDQ6VXNlcjI2MzIxNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/263215?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/realguess",
      "html_url": "https://github.com/realguess",
      "followers_url": "https://api.github.com/users/realguess/followers",
      "following_url": "https://api.github.com/users/realguess/following{/other_user}",
      "gists_url": "https://api.github.com/users/realguess/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/realguess/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/realguess/subscriptions",
      "organizations_url": "https://api.github.com/users/realguess/orgs",
      "repos_url": "https://api.github.com/users/realguess/repos",
      "events_url": "https://api.github.com/users/realguess/events{/privacy}",
      "received_events_url": "https://api.github.com/users/realguess/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2013-05-07T20:34:13Z",
    "updated_at": "2013-05-08T16:16:21Z",
    "closed_at": "2013-05-08T16:16:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Express supports the following methods:\n\n> get, post, put, head, delete, options, trace, copy, lock, mkcol, move, propfind, proppatch, unlock, report, mkactivity, checkout, merge, m-search, notify, subscribe, unsubscribe, patch\n\nIf I would like to support other methods or provide a response like `501 Not Implemented`, how do I do that?\n\nCurrently if unsupported method is requested, got empty response from the server:\n\n```\n> curl -X FAUXMETHOD localhost:3000\ncurl: (52) Empty reply from server\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1612/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1612/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1611",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1611/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1611/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1611/events",
    "html_url": "https://github.com/expressjs/express/issues/1611",
    "id": 14061035,
    "node_id": "MDU6SXNzdWUxNDA2MTAzNQ==",
    "number": 1611,
    "title": "base url ",
    "user": {
      "login": "carlituxman",
      "id": 2116042,
      "node_id": "MDQ6VXNlcjIxMTYwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2116042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carlituxman",
      "html_url": "https://github.com/carlituxman",
      "followers_url": "https://api.github.com/users/carlituxman/followers",
      "following_url": "https://api.github.com/users/carlituxman/following{/other_user}",
      "gists_url": "https://api.github.com/users/carlituxman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carlituxman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carlituxman/subscriptions",
      "organizations_url": "https://api.github.com/users/carlituxman/orgs",
      "repos_url": "https://api.github.com/users/carlituxman/repos",
      "events_url": "https://api.github.com/users/carlituxman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carlituxman/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 11,
    "created_at": "2013-05-07T17:33:11Z",
    "updated_at": "2020-07-24T05:04:27Z",
    "closed_at": "2013-07-01T18:21:30Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "How can I change the run of my app under a base url like\n\nhttp://myserver:3000/base_url/\n\nwhere base_url is relative for all the app?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1611/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1611/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1610",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1610/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1610/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1610/events",
    "html_url": "https://github.com/expressjs/express/issues/1610",
    "id": 14059538,
    "node_id": "MDU6SXNzdWUxNDA1OTUzOA==",
    "number": 1610,
    "title": "Array in req.session does not allow .concat() method?",
    "user": {
      "login": "skotchio",
      "id": 1432812,
      "node_id": "MDQ6VXNlcjE0MzI4MTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1432812?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/skotchio",
      "html_url": "https://github.com/skotchio",
      "followers_url": "https://api.github.com/users/skotchio/followers",
      "following_url": "https://api.github.com/users/skotchio/following{/other_user}",
      "gists_url": "https://api.github.com/users/skotchio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/skotchio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/skotchio/subscriptions",
      "organizations_url": "https://api.github.com/users/skotchio/orgs",
      "repos_url": "https://api.github.com/users/skotchio/repos",
      "events_url": "https://api.github.com/users/skotchio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/skotchio/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2013-05-07T17:03:42Z",
    "updated_at": "2013-05-11T22:32:41Z",
    "closed_at": "2013-05-11T22:32:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I need to store an simple array in user session. But why I can't use concat method?\n\n```\nreq.session.arr = [];\nconsole.log(req.session.arr); // []\n\nreq.session.arr.concat(1);\nconsole.log(req.session.arr); // [] <- error: empty array\n```\n\nIs it bug?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1610/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1610/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1609",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1609/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1609/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1609/events",
    "html_url": "https://github.com/expressjs/express/issues/1609",
    "id": 14050277,
    "node_id": "MDU6SXNzdWUxNDA1MDI3Nw==",
    "number": 1609,
    "title": "Body parser(I guess) in v 3.2.2 goes into infinite recursion when parsing my request which is handled without problem in v3.2.0",
    "user": {
      "login": "capaj",
      "id": 1305378,
      "node_id": "MDQ6VXNlcjEzMDUzNzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1305378?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/capaj",
      "html_url": "https://github.com/capaj",
      "followers_url": "https://api.github.com/users/capaj/followers",
      "following_url": "https://api.github.com/users/capaj/following{/other_user}",
      "gists_url": "https://api.github.com/users/capaj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/capaj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/capaj/subscriptions",
      "organizations_url": "https://api.github.com/users/capaj/orgs",
      "repos_url": "https://api.github.com/users/capaj/repos",
      "events_url": "https://api.github.com/users/capaj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/capaj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-05-07T14:01:47Z",
    "updated_at": "2013-05-07T14:47:41Z",
    "closed_at": "2013-05-07T14:47:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have this piece of code on my serverside:\nvar request = require('request');\n\napp.post(function (req, res) {\n    for (var url in req.body) break;\n    request(url, function (error, response, body) {\n        console.log(response.statusCode);\n        res.send(response.request.href);\n    });\n});\n\nI call this function by doing ajax like this in angularJS:\n$http({method: 'POST', url: '/player-request', data: \"http:/somelink\" });\n\nThis goes absolutely fine on express v3.2.0, but when I use v 3.2.2 my post function is not even called and on client I get weird json response containing error with message that maximum callstack size has been reached or something similar.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1609/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1609/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1608",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1608/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1608/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1608/events",
    "html_url": "https://github.com/expressjs/express/issues/1608",
    "id": 14049889,
    "node_id": "MDU6SXNzdWUxNDA0OTg4OQ==",
    "number": 1608,
    "title": "Maximum call stack size exceeded express 3.2.2",
    "user": {
      "login": "DominicBoettger",
      "id": 662196,
      "node_id": "MDQ6VXNlcjY2MjE5Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/662196?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DominicBoettger",
      "html_url": "https://github.com/DominicBoettger",
      "followers_url": "https://api.github.com/users/DominicBoettger/followers",
      "following_url": "https://api.github.com/users/DominicBoettger/following{/other_user}",
      "gists_url": "https://api.github.com/users/DominicBoettger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DominicBoettger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DominicBoettger/subscriptions",
      "organizations_url": "https://api.github.com/users/DominicBoettger/orgs",
      "repos_url": "https://api.github.com/users/DominicBoettger/repos",
      "events_url": "https://api.github.com/users/DominicBoettger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DominicBoettger/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2013-05-07T13:54:25Z",
    "updated_at": "2013-05-07T14:56:30Z",
    "closed_at": "2013-05-07T14:56:30Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Since i updated my application to version 3.2.2 i get the Maximum call stack size exceeded  error.\nI had no trouble with any version before 3.2.\n\nAny ideas?\n\nRegards,\n\nDominic\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1608/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1608/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1607",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1607/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1607/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1607/events",
    "html_url": "https://github.com/expressjs/express/issues/1607",
    "id": 14048488,
    "node_id": "MDU6SXNzdWUxNDA0ODQ4OA==",
    "number": 1607,
    "title": "cookieParser docs may require some extra text",
    "user": {
      "login": "Pomax",
      "id": 177243,
      "node_id": "MDQ6VXNlcjE3NzI0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/177243?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Pomax",
      "html_url": "https://github.com/Pomax",
      "followers_url": "https://api.github.com/users/Pomax/followers",
      "following_url": "https://api.github.com/users/Pomax/following{/other_user}",
      "gists_url": "https://api.github.com/users/Pomax/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Pomax/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Pomax/subscriptions",
      "organizations_url": "https://api.github.com/users/Pomax/orgs",
      "repos_url": "https://api.github.com/users/Pomax/repos",
      "events_url": "https://api.github.com/users/Pomax/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Pomax/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2013-05-07T13:24:30Z",
    "updated_at": "2013-09-10T09:48:38Z",
    "closed_at": "2013-09-10T09:48:38Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The current online documentation leaves some questions pertaining to using the cookieParser. The current text states that \"Optionally you may enabled signed cookie support by passing a secret string.\" implying that without such a string, secure cookies won't work, regardless of whether a cookie has a 'secret' set. If this is the case, it would be good to mention this explicitly. It also doesn't explain what happens when both cookieParser and a cookie have a secret string set. Which one is used, does a cookie still need a secret, or will it fall back to the cookieparser secret, etc.\n\n(filed because we had great difficulty getting cookies to work across subdomains, despite using matching cookie secret strings. Adding a nonsense string to the cookieParser suddenly made things work, which is not the most intuitive behaviour when there are already secret strings encoded in the cookies.)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1607/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1607/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1606",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1606/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1606/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1606/events",
    "html_url": "https://github.com/expressjs/express/issues/1606",
    "id": 14029491,
    "node_id": "MDU6SXNzdWUxNDAyOTQ5MQ==",
    "number": 1606,
    "title": "Url Encoded post bodies causing 'Maximum call stack size exceeded'",
    "user": {
      "login": "s2young",
      "id": 1398798,
      "node_id": "MDQ6VXNlcjEzOTg3OTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1398798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s2young",
      "html_url": "https://github.com/s2young",
      "followers_url": "https://api.github.com/users/s2young/followers",
      "following_url": "https://api.github.com/users/s2young/following{/other_user}",
      "gists_url": "https://api.github.com/users/s2young/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s2young/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s2young/subscriptions",
      "organizations_url": "https://api.github.com/users/s2young/orgs",
      "repos_url": "https://api.github.com/users/s2young/repos",
      "events_url": "https://api.github.com/users/s2young/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s2young/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2013-05-07T01:41:20Z",
    "updated_at": "2013-05-07T14:57:09Z",
    "closed_at": "2013-05-07T14:57:09Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I just deployed Express 3.2.2 on a development server and we immediately saw POST requests from our mobile apps fail with a 'Maximum call stack size exceeded' error.\n\nWe are running 3.1.0 in production and all is fine.  I reverted the dev box to 3.1.0 and all was fine again.\n\nWe narrowed it down to a couple of parameters that were being submitted without values, like this:\n\nname=Joe&phone=&city=nashville\n\nOnce we removed those parameters without values, the POSTs began working again. \n\nI broke out the bodyParser middleware into its component parts and error was definitely happening in the urlencoded middleware.\n\nI haven't dug into the change logs enough to see what has changed, but I wanted to get this submitted because hopefully it's enough to go on.\n\nThanks!\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1606/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1606/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1605",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1605/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1605/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1605/events",
    "html_url": "https://github.com/expressjs/express/issues/1605",
    "id": 14020773,
    "node_id": "MDU6SXNzdWUxNDAyMDc3Mw==",
    "number": 1605,
    "title": "Response.locals strange behavior with concurrent users",
    "user": {
      "login": "lagoasoft-lucasschmidt",
      "id": 849274,
      "node_id": "MDQ6VXNlcjg0OTI3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/849274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lagoasoft-lucasschmidt",
      "html_url": "https://github.com/lagoasoft-lucasschmidt",
      "followers_url": "https://api.github.com/users/lagoasoft-lucasschmidt/followers",
      "following_url": "https://api.github.com/users/lagoasoft-lucasschmidt/following{/other_user}",
      "gists_url": "https://api.github.com/users/lagoasoft-lucasschmidt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lagoasoft-lucasschmidt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lagoasoft-lucasschmidt/subscriptions",
      "organizations_url": "https://api.github.com/users/lagoasoft-lucasschmidt/orgs",
      "repos_url": "https://api.github.com/users/lagoasoft-lucasschmidt/repos",
      "events_url": "https://api.github.com/users/lagoasoft-lucasschmidt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lagoasoft-lucasschmidt/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2013-05-06T20:59:13Z",
    "updated_at": "2013-05-11T18:57:27Z",
    "closed_at": "2013-05-11T18:57:27Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hey guys, I am using res.locals to store data like current logged in user and things like that, just like you guys present in the example in the website. \n\nProblem is that, if I have 2 concurrent requests, I ve seen that res.locals from user A gets sent to res.locals of user B. \n\nWhen I talk about concurrent requests, it means, user A requests Page 1, but I do another request to Resource 1, and then I render Page 1, while user B requests Page 2 ...\n\nThese res.locals from the users are being set before I do any external requests, like:\n\nUser A - sets locals\nUser A - performs external request\nUser B - sets locals\nUser B - performs external request\nUser B - external request finished\nUser B - response finished\nUser A - external request finished\nUser A - response finished\n\nAm I crazy / doing something very wrong or is it possible that there is a problem? Thanks for the attention. I will try to do an example later.\n\nexpress@3.2.2\nnode@0.10.5\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1605/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1605/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1604",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1604/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1604/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1604/events",
    "html_url": "https://github.com/expressjs/express/pull/1604",
    "id": 13981182,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTUzNjU5Nw==",
    "number": 1604,
    "title": "Adds a json prefix setting.",
    "user": {
      "login": "gjohnson",
      "id": 67717,
      "node_id": "MDQ6VXNlcjY3NzE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/67717?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gjohnson",
      "html_url": "https://github.com/gjohnson",
      "followers_url": "https://api.github.com/users/gjohnson/followers",
      "following_url": "https://api.github.com/users/gjohnson/following{/other_user}",
      "gists_url": "https://api.github.com/users/gjohnson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gjohnson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gjohnson/subscriptions",
      "organizations_url": "https://api.github.com/users/gjohnson/orgs",
      "repos_url": "https://api.github.com/users/gjohnson/repos",
      "events_url": "https://api.github.com/users/gjohnson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gjohnson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2013-05-05T18:16:34Z",
    "updated_at": "2014-06-17T18:37:44Z",
    "closed_at": "2013-07-15T14:13:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1604",
      "html_url": "https://github.com/expressjs/express/pull/1604",
      "diff_url": "https://github.com/expressjs/express/pull/1604.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1604.patch",
      "merged_at": null
    },
    "body": "Adds a new optional setting called `json prefix` for prefixing a value to the body of json responses in order to prevent [json hijacking](http://haacked.com/archive/2009/06/25/json-hijacking.aspx).\n\nCould technically be external middleware, but seems simple enough to live inside `.json()` like the rest of the json settings.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1604/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1604/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1603",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1603/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1603/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1603/events",
    "html_url": "https://github.com/expressjs/express/issues/1603",
    "id": 13969994,
    "node_id": "MDU6SXNzdWUxMzk2OTk5NA==",
    "number": 1603,
    "title": "in express 3.2.2, querysting params must have a value, otherwise 500 internal server error is returned",
    "user": {
      "login": "silentuser",
      "id": 1732023,
      "node_id": "MDQ6VXNlcjE3MzIwMjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1732023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/silentuser",
      "html_url": "https://github.com/silentuser",
      "followers_url": "https://api.github.com/users/silentuser/followers",
      "following_url": "https://api.github.com/users/silentuser/following{/other_user}",
      "gists_url": "https://api.github.com/users/silentuser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/silentuser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/silentuser/subscriptions",
      "organizations_url": "https://api.github.com/users/silentuser/orgs",
      "repos_url": "https://api.github.com/users/silentuser/repos",
      "events_url": "https://api.github.com/users/silentuser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/silentuser/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2013-05-04T20:13:13Z",
    "updated_at": "2013-05-06T16:55:05Z",
    "closed_at": "2013-05-06T16:55:05Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "running nodejs/express app on nginx. if the client passes in any querystring param with an empty value, express just returns a 500 error. see below\n1. [url]?param : FAIL\n2. [url]?rapam= : FAIL\n3. [url]?param=value : WORKS\n4. [url] : WORKS\n\nThis is not a bug in my code. My code/route never gets the control.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1603/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1603/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1602",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1602/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1602/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1602/events",
    "html_url": "https://github.com/expressjs/express/issues/1602",
    "id": 13964561,
    "node_id": "MDU6SXNzdWUxMzk2NDU2MQ==",
    "number": 1602,
    "title": "Responde#redirect doesnt consider \"path\" parameter passed in Application#use",
    "user": {
      "login": "gimmi",
      "id": 6589,
      "node_id": "MDQ6VXNlcjY1ODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6589?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gimmi",
      "html_url": "https://github.com/gimmi",
      "followers_url": "https://api.github.com/users/gimmi/followers",
      "following_url": "https://api.github.com/users/gimmi/following{/other_user}",
      "gists_url": "https://api.github.com/users/gimmi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gimmi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gimmi/subscriptions",
      "organizations_url": "https://api.github.com/users/gimmi/orgs",
      "repos_url": "https://api.github.com/users/gimmi/repos",
      "events_url": "https://api.github.com/users/gimmi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gimmi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-05-04T13:49:18Z",
    "updated_at": "2013-05-11T22:34:48Z",
    "closed_at": "2013-05-11T22:34:48Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi, consider the following code:\n\n``` javascript\nvar express = require('express');\nvar app = express();\n\napp.use('/mountpath', app.router);\n\napp.get('/resource', function (req, res) {\n    res.redirect('otherresource');\n});\n\napp.listen(8080);\n```\n\nWhen i `GET http://localhost:8080/mountpath/resource` i expect to be redirected to `http://localhost:8080/mountpath/otherresource`, what i get instead is this:\n\n```\n$ curl http://localhost:8080/mountpath/resource\nMoved Temporarily. Redirecting to /otherresource\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1602/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1602/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1601",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1601/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1601/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1601/events",
    "html_url": "https://github.com/expressjs/express/pull/1601",
    "id": 13963992,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTUzMTE2MQ==",
    "number": 1601,
    "title": "Added `param` parameter to `res.format` that checks for the `req.params.format` variable in order to determine the requested content-type.",
    "user": {
      "login": "elslooo",
      "id": 732188,
      "node_id": "MDQ6VXNlcjczMjE4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/732188?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elslooo",
      "html_url": "https://github.com/elslooo",
      "followers_url": "https://api.github.com/users/elslooo/followers",
      "following_url": "https://api.github.com/users/elslooo/following{/other_user}",
      "gists_url": "https://api.github.com/users/elslooo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elslooo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elslooo/subscriptions",
      "organizations_url": "https://api.github.com/users/elslooo/orgs",
      "repos_url": "https://api.github.com/users/elslooo/repos",
      "events_url": "https://api.github.com/users/elslooo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elslooo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55587817,
        "node_id": "MDU6TGFiZWw1NTU4NzgxNw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/needs%20tests",
        "name": "needs tests",
        "color": "e11d21",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2013-05-04T12:59:09Z",
    "updated_at": "2014-06-13T12:17:42Z",
    "closed_at": "2013-09-10T16:26:13Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1601",
      "html_url": "https://github.com/expressjs/express/pull/1601",
      "diff_url": "https://github.com/expressjs/express/pull/1601.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1601.patch",
      "merged_at": null
    },
    "body": "Works exactly the same when no `param` is set. When set to `true`, tries to override the requested content-type by using `req.params.format`. When set to a string, e.g. either `json` or `application/json`, it tries to override the requested content-type by using that string.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1601/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1601/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1600",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1600/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1600/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1600/events",
    "html_url": "https://github.com/expressjs/express/issues/1600",
    "id": 13946175,
    "node_id": "MDU6SXNzdWUxMzk0NjE3NQ==",
    "number": 1600,
    "title": "req.subdomains tests fail in Windows",
    "user": {
      "login": "mcandre",
      "id": 5316,
      "node_id": "MDQ6VXNlcjUzMTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5316?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcandre",
      "html_url": "https://github.com/mcandre",
      "followers_url": "https://api.github.com/users/mcandre/followers",
      "following_url": "https://api.github.com/users/mcandre/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcandre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcandre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcandre/subscriptions",
      "organizations_url": "https://api.github.com/users/mcandre/orgs",
      "repos_url": "https://api.github.com/users/mcandre/repos",
      "events_url": "https://api.github.com/users/mcandre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcandre/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-05-03T18:17:12Z",
    "updated_at": "2013-09-19T19:43:42Z",
    "closed_at": "2013-09-19T19:43:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Trace:\n\n```\n$ mocha test/req.subdomains.js\n\n  .....\n\n  × 3 of 5 tests failed:\n\n  1) req .subdomains when present should return an array:\n     Error: expected '[\"ferrets\",\"tobi\"]' response body, got '[\\n  \"ferrets\",\\n  \"tobi\"\\n]'\n      at Test.assert (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\supertest\\lib\\test.js:177:21)\n      at c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\supertest\\lib\\test.js:124:10\n      at Test.Request.callback (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\supertest\\node_modules\\superagent\\lib\\node\\index.js:575:3)\n      at Test.<anonymous> (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\supertest\\node_modules\\superagent\\lib\\node\\index.js:133:10)\n      at Test.EventEmitter.emit (events.js:95:17)\n      at IncomingMessage.<anonymous> (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\supertest\\node_modules\\superagent\\lib\\node\\index.js:703:12)\n      at IncomingMessage.EventEmitter.emit (events.js:117:20)\n      at _stream_readable.js:883:14\n      at process._tickCallback (node.js:415:13)\n\n  2) req .subdomains when subdomain offset is set when subdomain offset is zero should return an array with the whole domain:\n     Error: expected '[\"com\",\"example\",\"sub\",\"ferrets\",\"tobi\"]' response body, got '[\\n\n \"com\",\\n  \"example\",\\n  \"sub\",\\n  \"ferrets\",\\n  \"tobi\"\\n]'\n      at Test.assert (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\supertest\\lib\\test.js:177:21)\n      at c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\supertest\\lib\\test.js:124:10\n      at Test.Request.callback (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\supertest\\node_modules\\superagent\\lib\\node\\index.js:575:3)\n      at Test.<anonymous> (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\supertest\\node_modules\\superagent\\lib\\node\\index.js:133:10)\n      at Test.EventEmitter.emit (events.js:95:17)\n      at IncomingMessage.<anonymous> (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\supertest\\node_modules\\superagent\\lib\\node\\index.js:703:12)\n      at IncomingMessage.EventEmitter.emit (events.js:117:20)\n      at _stream_readable.js:883:14\n      at process._tickCallback (node.js:415:13)\n\n  3) req .subdomains when subdomain offset is set when present should return an array:\n     Error: expected '[\"ferrets\",\"tobi\"]' response body, got '[\\n  \"ferrets\",\\n  \"tobi\"\\n]'\n      at Test.assert (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\supertest\\lib\\test.js:177:21)\n      at c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\supertest\\lib\\test.js:124:10\n      at Test.Request.callback (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\supertest\\node_modules\\superagent\\lib\\node\\index.js:575:3)\n      at Test.<anonymous> (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\supertest\\node_modules\\superagent\\lib\\node\\index.js:133:10)\n      at Test.EventEmitter.emit (events.js:95:17)\n      at IncomingMessage.<anonymous> (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\supertest\\node_modules\\superagent\\lib\\node\\index.js:703:12)\n      at IncomingMessage.EventEmitter.emit (events.js:117:20)\n      at _stream_readable.js:883:14\n      at process._tickCallback (node.js:415:13)\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1600/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1600/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1599",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1599/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1599/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1599/events",
    "html_url": "https://github.com/expressjs/express/issues/1599",
    "id": 13908581,
    "node_id": "MDU6SXNzdWUxMzkwODU4MQ==",
    "number": 1599,
    "title": "Unit test failures in Windows",
    "user": {
      "login": "mcandre",
      "id": 5316,
      "node_id": "MDQ6VXNlcjUzMTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5316?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcandre",
      "html_url": "https://github.com/mcandre",
      "followers_url": "https://api.github.com/users/mcandre/followers",
      "following_url": "https://api.github.com/users/mcandre/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcandre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcandre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcandre/subscriptions",
      "organizations_url": "https://api.github.com/users/mcandre/orgs",
      "repos_url": "https://api.github.com/users/mcandre/repos",
      "events_url": "https://api.github.com/users/mcandre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcandre/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2013-05-02T20:12:54Z",
    "updated_at": "2013-05-03T16:43:28Z",
    "closed_at": "2013-05-02T21:35:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When I run `npm test` in Windows, I get a bunch of errors.\n\nTrace:\n\n```\n$ npm test\n\n> express@3.2.1 test c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\n> make test\n\n\n  .................................................................\n  ..................................................................\n  ..................................................................\n  ..................................................................\n  ..................................................................\n  ......................................................\n\n  × 141 of 383 tests failed:\n\n  1) req .subdomains when subdomain offset is set when present should return an array:\n     Error: listen ENOBUFS\n      at errnoException (net.js:878:11)\n      at Server._listen2 (net.js:1016:14)\n      at listen (net.js:1038:10)\n      at Server.listen (net.js:1104:5)\n      at Test.serverAddress (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\supertest\\lib\\test.js:65:18)\n      at new Test (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\supertest\\lib\\test.js:44:12)\n      at Object.obj.(anonymous function) [as get] (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\supertest\\index.js:29:14)\n      at Context.<anonymous> (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\test\\req.subdomains.js:64:12)\n      at Test.Runnable.run (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runnable.js:196:15)\n      at Runner.runTest (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runner.js:351:10)\n      at c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runner.js:397:12\n      at next (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runner.js:277:14)\n      at c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runner.js:286:7\n      at next (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runner.js:234:23)\n      at Object._onImmediate (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runner.js:254:5)\n      at processImmediate [as _immediateCallback] (timers.js:317:15)\n\n  2) req .subdomains when subdomain offset is set otherwise should return an empty array:\n     Error: listen ENOBUFS\n      at errnoException (net.js:878:11)\n      at Server._listen2 (net.js:1016:14)\n      at listen (net.js:1038:10)\n      at Server.listen (net.js:1104:5)\n      at Test.serverAddress (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\supertest\\lib\\test.js:65:18)\n      at new Test (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\supertest\\lib\\test.js:44:12)\n      at Object.obj.(anonymous function) [as get] (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\supertest\\index.js:29:14)\n      at Context.<anonymous> (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\test\\req.subdomains.js:80:12)\n      at Test.Runnable.run (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runnable.js:196:15)\n      at Runner.runTest (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runner.js:351:10)\n      at c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runner.js:397:12\n      at next (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runner.js:277:14)\n      at c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runner.js:286:7\n      at next (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runner.js:234:23)\n      at Object._onImmediate (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runner.js:254:5)\n      at processImmediate [as _immediateCallback] (timers.js:317:15)\n\n  3) req .xhr should return true when X-Requested-With is xmlhttprequest:\n     Error: listen ENOBUFS\n      at errnoException (net.js:878:11)\n      at Server._listen2 (net.js:1016:14)\n      at listen (net.js:1038:10)\n      at Server.listen (net.js:1104:5)\n      at Test.serverAddress (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\supertest\\lib\\test.js:65:18)\n      at new Test (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\supertest\\lib\\test.js:44:12)\n      at Object.obj.(anonymous function) [as get] (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\supertest\\index.js:29:14)\n      at Context.<anonymous> (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\test\\req.xhr.js:16:8)\n      at Test.Runnable.run (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runnable.js:196:15)\n      at Runner.runTest (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runner.js:351:10)\n      at c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runner.js:397:12\n      at next (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runner.js:277:14)\n      at c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runner.js:286:7\n      at next (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runner.js:234:23)\n      at Object._onImmediate (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runner.js:254:5)\n      at processImmediate [as _immediateCallback] (timers.js:317:15)\n\n  4) req .xhr should case-insensitive:\n     Error: listen ENOBUFS\n      at errnoException (net.js:878:11)\n      at Server._listen2 (net.js:1016:14)\n      at listen (net.js:1038:10)\n      at Server.listen (net.js:1104:5)\n      at Test.serverAddress (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\supertest\\lib\\test.js:65:18)\n      at new Test (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\supertest\\lib\\test.js:44:12)\n      at Object.obj.(anonymous function) [as get] (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\supertest\\index.js:29:14)\n      at Context.<anonymous> (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\test\\req.xhr.js:32:8)\n      at Test.Runnable.run (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runnable.js:196:15)\n      at Runner.runTest (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runner.js:351:10)\n      at c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runner.js:397:12\n      at next (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runner.js:277:14)\n      at c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runner.js:286:7\n      at next (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runner.js:234:23)\n      at Object._onImmediate (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runner.js:254:5)\n      at processImmediate [as _immediateCallback] (timers.js:317:15)\n\n  5) req .xhr should return false otherwise:\n     Error: listen ENOBUFS\n      at errnoException (net.js:878:11)\n      at Server._listen2 (net.js:1016:14)\n      at listen (net.js:1038:10)\n      at Server.listen (net.js:1104:5)\n      at Test.serverAddress (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\supertest\\lib\\test.js:65:18)\n      at new Test (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\supertest\\lib\\test.js:44:12)\n      at Object.obj.(anonymous function) [as get] (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\supertest\\index.js:29:14)\n      at Context.<anonymous> (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\test\\req.xhr.js:48:8)\n      at Test.Runnable.run (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runnable.js:196:15)\n      at Runner.runTest (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runner.js:351:10)\n      at c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runner.js:397:12\n      at next (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runner.js:277:14)\n      at c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runner.js:286:7\n      at next (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runner.js:234:23)\n      at Object._onImmediate (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runner.js:254:5)\n      at processImmediate [as _immediateCallback] (timers.js:317:15)\n...\n  141) Router .middleware should dispatch:\n     Error: listen ENOBUFS\n      at errnoException (net.js:878:11)\n      at Server._listen2 (net.js:1016:14)\n      at listen (net.js:1038:10)\n      at Server.listen (net.js:1104:5)\n      at Test.serverAddress (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\supertest\\lib\\test.js:65:18)\n      at new Test (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\supertest\\lib\\test.js:44:12)\n      at Object.obj.(anonymous function) [as get] (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\supertest\\index.js:29:14)\n      at Context.<anonymous> (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\test\\Router.js:75:8)\n      at Test.Runnable.run (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runnable.js:196:15)\n      at Runner.runTest (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runner.js:351:10)\n      at c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runner.js:397:12\n      at next (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runner.js:277:14)\n      at c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runner.js:286:7\n      at next (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runner.js:234:23)\n      at Object._onImmediate (c:\\Documents and Settings\\apenneba\\Desktop\\src\\express\\node_modules\\mocha\\lib\\runner.js:254:5)\n      at processImmediate [as _immediateCallback] (timers.js:317:15)\n\n\nmake: *** [test-unit] Error 141\nnpm ERR! Test failed.  See above for more details.\nnpm ERR! not ok code 0\n```\n\nSystem:\n\n```\n$ specs node os\nSpecs:\n\nspecs 0.4\nhttps://github.com/mcandre/specs#readme\n\nnpm --version\n1.2.17\n\nnode --version\nv0.10.3\n\nsysteminfo | findstr /B /C:\"OS Name\" /C:\"OS Version\"\nOS Name:                   Microsoft Windows XP Professional\nOS Version:                5.1.2600 Service Pack 3 Build 2600\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1599/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1599/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1598",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1598/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1598/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1598/events",
    "html_url": "https://github.com/expressjs/express/pull/1598",
    "id": 13871213,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTQ4MjQ2NA==",
    "number": 1598,
    "title": "the file is hosts not vhosts",
    "user": {
      "login": "colynb",
      "id": 1049124,
      "node_id": "MDQ6VXNlcjEwNDkxMjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1049124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/colynb",
      "html_url": "https://github.com/colynb",
      "followers_url": "https://api.github.com/users/colynb/followers",
      "following_url": "https://api.github.com/users/colynb/following{/other_user}",
      "gists_url": "https://api.github.com/users/colynb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/colynb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/colynb/subscriptions",
      "organizations_url": "https://api.github.com/users/colynb/orgs",
      "repos_url": "https://api.github.com/users/colynb/repos",
      "events_url": "https://api.github.com/users/colynb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/colynb/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-05-01T23:28:47Z",
    "updated_at": "2014-07-31T04:31:26Z",
    "closed_at": "2013-05-09T16:12:54Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1598",
      "html_url": "https://github.com/expressjs/express/pull/1598",
      "diff_url": "https://github.com/expressjs/express/pull/1598.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1598.patch",
      "merged_at": "2013-05-09T16:12:54Z"
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1598/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1598/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1597",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1597/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1597/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1597/events",
    "html_url": "https://github.com/expressjs/express/pull/1597",
    "id": 13862397,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTQ3NzUzMw==",
    "number": 1597,
    "title": "Version bump for node-cookie",
    "user": {
      "login": "Cauldrath",
      "id": 1427204,
      "node_id": "MDQ6VXNlcjE0MjcyMDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1427204?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Cauldrath",
      "html_url": "https://github.com/Cauldrath",
      "followers_url": "https://api.github.com/users/Cauldrath/followers",
      "following_url": "https://api.github.com/users/Cauldrath/following{/other_user}",
      "gists_url": "https://api.github.com/users/Cauldrath/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Cauldrath/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Cauldrath/subscriptions",
      "organizations_url": "https://api.github.com/users/Cauldrath/orgs",
      "repos_url": "https://api.github.com/users/Cauldrath/repos",
      "events_url": "https://api.github.com/users/Cauldrath/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Cauldrath/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-05-01T19:30:40Z",
    "updated_at": "2014-07-02T14:05:22Z",
    "closed_at": "2013-05-11T22:35:31Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1597",
      "html_url": "https://github.com/expressjs/express/pull/1597",
      "diff_url": "https://github.com/expressjs/express/pull/1597.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1597.patch",
      "merged_at": "2013-05-11T22:35:31Z"
    },
    "body": "Adds option for setting encode and decode functions.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1597/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1597/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1596",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1596/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1596/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1596/events",
    "html_url": "https://github.com/expressjs/express/issues/1596",
    "id": 13862251,
    "node_id": "MDU6SXNzdWUxMzg2MjI1MQ==",
    "number": 1596,
    "title": "hasOwnProperty method on req.body",
    "user": {
      "login": "wasula",
      "id": 879053,
      "node_id": "MDQ6VXNlcjg3OTA1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/879053?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wasula",
      "html_url": "https://github.com/wasula",
      "followers_url": "https://api.github.com/users/wasula/followers",
      "following_url": "https://api.github.com/users/wasula/following{/other_user}",
      "gists_url": "https://api.github.com/users/wasula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wasula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wasula/subscriptions",
      "organizations_url": "https://api.github.com/users/wasula/orgs",
      "repos_url": "https://api.github.com/users/wasula/repos",
      "events_url": "https://api.github.com/users/wasula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wasula/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2013-05-01T19:26:30Z",
    "updated_at": "2013-05-03T19:35:41Z",
    "closed_at": "2013-05-03T19:35:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I used copy values from the req.body to variables directly(ie: var user = req.body.user) and used \"hasOwnProperty\" method to check for existence of some of the variables. It used work like a charm but looks like the latest version has removed this method from the req.body. I just wanted find out if this was going to be permanent or not so that I can decide whether to change the express version or go back and change the usage of my previous projects.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1596/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1596/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1595",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1595/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1595/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1595/events",
    "html_url": "https://github.com/expressjs/express/issues/1595",
    "id": 13783641,
    "node_id": "MDU6SXNzdWUxMzc4MzY0MQ==",
    "number": 1595,
    "title": "settings: don't use `qs` - use `querystring` instead",
    "user": {
      "login": "jonathanong",
      "id": 643505,
      "node_id": "MDQ6VXNlcjY0MzUwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/643505?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanong",
      "html_url": "https://github.com/jonathanong",
      "followers_url": "https://api.github.com/users/jonathanong/followers",
      "following_url": "https://api.github.com/users/jonathanong/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanong/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanong/orgs",
      "repos_url": "https://api.github.com/users/jonathanong/repos",
      "events_url": "https://api.github.com/users/jonathanong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanong/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2013-04-29T22:08:42Z",
    "updated_at": "2013-05-08T17:44:52Z",
    "closed_at": "2013-05-07T14:57:57Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "i personally don't like the `obj[attribute]` notation in querystrings. how do you feel about an option to just use node's `querystring` module instead of `connect.query()`?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1595/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1595/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1594",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1594/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1594/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1594/events",
    "html_url": "https://github.com/expressjs/express/pull/1594",
    "id": 13783552,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTQzNjUxOQ==",
    "number": 1594,
    "title": "package.json: remove qs dependency",
    "user": {
      "login": "jonathanong",
      "id": 643505,
      "node_id": "MDQ6VXNlcjY0MzUwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/643505?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanong",
      "html_url": "https://github.com/jonathanong",
      "followers_url": "https://api.github.com/users/jonathanong/followers",
      "following_url": "https://api.github.com/users/jonathanong/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanong/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanong/orgs",
      "repos_url": "https://api.github.com/users/jonathanong/repos",
      "events_url": "https://api.github.com/users/jonathanong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanong/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-04-29T22:06:31Z",
    "updated_at": "2013-05-07T14:59:08Z",
    "closed_at": "2013-05-07T14:59:08Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1594",
      "html_url": "https://github.com/expressjs/express/pull/1594",
      "diff_url": "https://github.com/expressjs/express/pull/1594.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1594.patch",
      "merged_at": null
    },
    "body": "doesn't seem to be used anywhere in Express. it is, however, used in Connect and should be updated there. right now, it uses an older version.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1594/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1594/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1593",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1593/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1593/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1593/events",
    "html_url": "https://github.com/expressjs/express/issues/1593",
    "id": 13781676,
    "node_id": "MDU6SXNzdWUxMzc4MTY3Ng==",
    "number": 1593,
    "title": "settings: forced ssl",
    "user": {
      "login": "jonathanong",
      "id": 643505,
      "node_id": "MDQ6VXNlcjY0MzUwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/643505?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanong",
      "html_url": "https://github.com/jonathanong",
      "followers_url": "https://api.github.com/users/jonathanong/followers",
      "following_url": "https://api.github.com/users/jonathanong/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanong/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanong/orgs",
      "repos_url": "https://api.github.com/users/jonathanong/repos",
      "events_url": "https://api.github.com/users/jonathanong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanong/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2013-04-29T21:18:16Z",
    "updated_at": "2013-05-11T23:00:57Z",
    "closed_at": "2013-05-11T23:00:57Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "how do you feel about a \"forced ssl\" settings option? basically if enabled and not over SSL, redirects if HEAD/GET/OPTIONS, sends a 426 error code otherwise.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1593/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1593/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1592",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1592/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1592/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1592/events",
    "html_url": "https://github.com/expressjs/express/pull/1592",
    "id": 13762533,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTQyNTMzMQ==",
    "number": 1592,
    "title": "Removing dependency which is no longer supported",
    "user": {
      "login": "bartsqueezy",
      "id": 647029,
      "node_id": "MDQ6VXNlcjY0NzAyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/647029?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bartsqueezy",
      "html_url": "https://github.com/bartsqueezy",
      "followers_url": "https://api.github.com/users/bartsqueezy/followers",
      "following_url": "https://api.github.com/users/bartsqueezy/following{/other_user}",
      "gists_url": "https://api.github.com/users/bartsqueezy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bartsqueezy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bartsqueezy/subscriptions",
      "organizations_url": "https://api.github.com/users/bartsqueezy/orgs",
      "repos_url": "https://api.github.com/users/bartsqueezy/repos",
      "events_url": "https://api.github.com/users/bartsqueezy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bartsqueezy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-04-29T14:28:44Z",
    "updated_at": "2014-07-31T04:30:30Z",
    "closed_at": "2013-05-11T22:36:40Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1592",
      "html_url": "https://github.com/expressjs/express/pull/1592",
      "diff_url": "https://github.com/expressjs/express/pull/1592.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1592.patch",
      "merged_at": "2013-05-11T22:36:40Z"
    },
    "body": "Removing github-flavored-markdown as a dependency as it is no longer supported by Isaac. Switch to use marked instead, as it is both supported and includes the MIT license.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1592/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1592/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1591",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1591/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1591/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1591/events",
    "html_url": "https://github.com/expressjs/express/pull/1591",
    "id": 13761399,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTQyNDczOA==",
    "number": 1591,
    "title": "Removing dependency which is no longer supported",
    "user": {
      "login": "bartsqueezy",
      "id": 647029,
      "node_id": "MDQ6VXNlcjY0NzAyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/647029?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bartsqueezy",
      "html_url": "https://github.com/bartsqueezy",
      "followers_url": "https://api.github.com/users/bartsqueezy/followers",
      "following_url": "https://api.github.com/users/bartsqueezy/following{/other_user}",
      "gists_url": "https://api.github.com/users/bartsqueezy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bartsqueezy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bartsqueezy/subscriptions",
      "organizations_url": "https://api.github.com/users/bartsqueezy/orgs",
      "repos_url": "https://api.github.com/users/bartsqueezy/repos",
      "events_url": "https://api.github.com/users/bartsqueezy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bartsqueezy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-04-29T14:05:36Z",
    "updated_at": "2013-04-29T14:29:11Z",
    "closed_at": "2013-04-29T14:29:11Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1591",
      "html_url": "https://github.com/expressjs/express/pull/1591",
      "diff_url": "https://github.com/expressjs/express/pull/1591.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1591.patch",
      "merged_at": null
    },
    "body": "Removing github-flavored-markdown as a dependency as it is no longer supported by Isaac.  Switch to use marked instead, as it is both supported and includes the MIT license.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1591/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1591/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1590",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1590/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1590/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1590/events",
    "html_url": "https://github.com/expressjs/express/issues/1590",
    "id": 13756107,
    "node_id": "MDU6SXNzdWUxMzc1NjEwNw==",
    "number": 1590,
    "title": "Start template",
    "user": {
      "login": "CodersBrothers",
      "id": 2166523,
      "node_id": "MDQ6VXNlcjIxNjY1MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2166523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodersBrothers",
      "html_url": "https://github.com/CodersBrothers",
      "followers_url": "https://api.github.com/users/CodersBrothers/followers",
      "following_url": "https://api.github.com/users/CodersBrothers/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodersBrothers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodersBrothers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodersBrothers/subscriptions",
      "organizations_url": "https://api.github.com/users/CodersBrothers/orgs",
      "repos_url": "https://api.github.com/users/CodersBrothers/repos",
      "events_url": "https://api.github.com/users/CodersBrothers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodersBrothers/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 13,
    "created_at": "2013-04-29T11:40:55Z",
    "updated_at": "2013-06-04T13:07:46Z",
    "closed_at": "2013-05-11T22:37:53Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi, i think that will be better in the default start template of app.js use \n\n```\n// development only\nif ('development' === app.get('env')) {\n    app.use(express.errorHandler());\n}\n```\n\n3 equals (===), not 2.\n\nAnd maybe this:\n\n```\n// Fire on condition\napp.configure('development', function(){\n   app.use(express.errorHandler());\n});\n```\n\nNice work!\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1590/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1590/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1589",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1589/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1589/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1589/events",
    "html_url": "https://github.com/expressjs/express/pull/1589",
    "id": 13546899,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTMyMjc5MA==",
    "number": 1589,
    "title": "Signed cookies can now accept numbers as values, like unsigned cookies",
    "user": {
      "login": "hacksparrow",
      "id": 950112,
      "node_id": "MDQ6VXNlcjk1MDExMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/950112?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hacksparrow",
      "html_url": "https://github.com/hacksparrow",
      "followers_url": "https://api.github.com/users/hacksparrow/followers",
      "following_url": "https://api.github.com/users/hacksparrow/following{/other_user}",
      "gists_url": "https://api.github.com/users/hacksparrow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hacksparrow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hacksparrow/subscriptions",
      "organizations_url": "https://api.github.com/users/hacksparrow/orgs",
      "repos_url": "https://api.github.com/users/hacksparrow/repos",
      "events_url": "https://api.github.com/users/hacksparrow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hacksparrow/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-04-23T17:32:28Z",
    "updated_at": "2014-07-31T04:49:01Z",
    "closed_at": "2013-04-25T23:29:39Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1589",
      "html_url": "https://github.com/expressjs/express/pull/1589",
      "diff_url": "https://github.com/expressjs/express/pull/1589.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1589.patch",
      "merged_at": "2013-04-25T23:29:39Z"
    },
    "body": "Fixed this issue:\n\n```\nvar count = 1;\nres.cookie('count', count); // works\nres.cookie('count', count, { signed: true }); // throws\n```\n\nDetails: https://github.com/visionmedia/express/issues/1588\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1589/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1589/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1588",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1588/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1588/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1588/events",
    "html_url": "https://github.com/expressjs/express/issues/1588",
    "id": 13545096,
    "node_id": "MDU6SXNzdWUxMzU0NTA5Ng==",
    "number": 1588,
    "title": "Cannot set number as value of a Signed Cookie",
    "user": {
      "login": "hacksparrow",
      "id": 950112,
      "node_id": "MDQ6VXNlcjk1MDExMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/950112?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hacksparrow",
      "html_url": "https://github.com/hacksparrow",
      "followers_url": "https://api.github.com/users/hacksparrow/followers",
      "following_url": "https://api.github.com/users/hacksparrow/following{/other_user}",
      "gists_url": "https://api.github.com/users/hacksparrow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hacksparrow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hacksparrow/subscriptions",
      "organizations_url": "https://api.github.com/users/hacksparrow/orgs",
      "repos_url": "https://api.github.com/users/hacksparrow/repos",
      "events_url": "https://api.github.com/users/hacksparrow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hacksparrow/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-04-23T17:02:10Z",
    "updated_at": "2013-04-26T20:28:50Z",
    "closed_at": "2013-04-26T20:28:50Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Trying to set a number as the value of signed cookie throws an error.\n\n```\nvar count = 1;\nres.cookie('count', count); // works\nres.cookie('count', count, { signed: true }); // throws\n```\n\n**Cause**\n\n`cookie-signature.sign()` does `if ('string' != typeof val) throw new TypeError('cookie required');`\n\n**Fix**\n\nConvert the number to string before any operation on the value, in the `res.cookie()` method.\n`if ('number' == typeof val) val = val.toString();`\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1588/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1588/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1587",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1587/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1587/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1587/events",
    "html_url": "https://github.com/expressjs/express/issues/1587",
    "id": 13487176,
    "node_id": "MDU6SXNzdWUxMzQ4NzE3Ng==",
    "number": 1587,
    "title": "Routes are overwriting static middleware",
    "user": {
      "login": "skerit",
      "id": 755212,
      "node_id": "MDQ6VXNlcjc1NTIxMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/755212?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/skerit",
      "html_url": "https://github.com/skerit",
      "followers_url": "https://api.github.com/users/skerit/followers",
      "following_url": "https://api.github.com/users/skerit/following{/other_user}",
      "gists_url": "https://api.github.com/users/skerit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/skerit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/skerit/subscriptions",
      "organizations_url": "https://api.github.com/users/skerit/orgs",
      "repos_url": "https://api.github.com/users/skerit/repos",
      "events_url": "https://api.github.com/users/skerit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/skerit/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2013-04-22T15:17:26Z",
    "updated_at": "2013-09-08T04:35:03Z",
    "closed_at": "2013-09-08T04:34:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "My static file middleware calls are being overwritten by my routes, even though I'm running it in the correct order:\n\nFirst I set my static files, like this:\n\n```\napp.use('/public', express.static('/home/skerit/temp'));\napp.use('/public', express.static('/home/skerit/app/public'));\n```\n\nThen I add my route:\n\n```\napp.get('/:controller/:action', callback);\n```\n\nAnd now, when I try to get /public/empty.txt the route is executed.\nWhen I remove the route, it works just fine.\n\nAnd I'm sure they happen in the correct order. (First app.use, then app.get)\n\nSo what could be wrong here? \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1587/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1587/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1586",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1586/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1586/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1586/events",
    "html_url": "https://github.com/expressjs/express/pull/1586",
    "id": 13448649,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTI3OTM2OQ==",
    "number": 1586,
    "title": "removed some spaces from bin/express",
    "user": {
      "login": "yields",
      "id": 1661587,
      "node_id": "MDQ6VXNlcjE2NjE1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1661587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yields",
      "html_url": "https://github.com/yields",
      "followers_url": "https://api.github.com/users/yields/followers",
      "following_url": "https://api.github.com/users/yields/following{/other_user}",
      "gists_url": "https://api.github.com/users/yields/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yields/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yields/subscriptions",
      "organizations_url": "https://api.github.com/users/yields/orgs",
      "repos_url": "https://api.github.com/users/yields/repos",
      "events_url": "https://api.github.com/users/yields/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yields/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-04-21T12:45:33Z",
    "updated_at": "2014-07-31T04:18:40Z",
    "closed_at": "2013-04-22T01:18:19Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1586",
      "html_url": "https://github.com/expressjs/express/pull/1586",
      "diff_url": "https://github.com/expressjs/express/pull/1586.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1586.patch",
      "merged_at": "2013-04-22T01:18:19Z"
    },
    "body": "this is how it used to look:\n\n``` js\napp.use(express.methodOverride());\n  app.use(express.cookieParser('your secret here'));\n  app.use(express.session());\napp.use(app.router);\n```\n\nthis is how it looks now:\n\n``` js\napp.use(express.methodOverride());\napp.use(express.cookieParser('your secret here'));\napp.use(express.session());\napp.use(app.router);\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1586/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1586/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1585",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1585/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1585/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1585/events",
    "html_url": "https://github.com/expressjs/express/issues/1585",
    "id": 13423154,
    "node_id": "MDU6SXNzdWUxMzQyMzE1NA==",
    "number": 1585,
    "title": "Default charset not set when calling res.render from within res.format",
    "user": {
      "login": "allenpc",
      "id": 1543187,
      "node_id": "MDQ6VXNlcjE1NDMxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1543187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/allenpc",
      "html_url": "https://github.com/allenpc",
      "followers_url": "https://api.github.com/users/allenpc/followers",
      "following_url": "https://api.github.com/users/allenpc/following{/other_user}",
      "gists_url": "https://api.github.com/users/allenpc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/allenpc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/allenpc/subscriptions",
      "organizations_url": "https://api.github.com/users/allenpc/orgs",
      "repos_url": "https://api.github.com/users/allenpc/repos",
      "events_url": "https://api.github.com/users/allenpc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/allenpc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2013-04-19T21:59:57Z",
    "updated_at": "2013-09-09T22:28:08Z",
    "closed_at": "2013-09-09T22:28:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Normally, `res.render()` will have a default charset of utf-8 because it eventually calls through `res.send()`, which has logic for default Content-Type and charset when the content is a string.\n\nHowever, if you call `res.render()` from within the `html` callback of a `res.format()` call, the default charset is not set because `res.format()` sets the Content-Type, which doesn't allow the default charset logic in `res.send()` to kick in later.\n\nI thought about adding some logic in `res.render()` to set a default charset, but I realized that this probably isn't the right thing to do since you can pass a callback and potentially send back something that isn't text/html.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1585/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1585/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1584",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1584/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1584/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1584/events",
    "html_url": "https://github.com/expressjs/express/issues/1584",
    "id": 13388716,
    "node_id": "MDU6SXNzdWUxMzM4ODcxNg==",
    "number": 1584,
    "title": "error with node 0.10.4",
    "user": {
      "login": "nickleefly",
      "id": 1024773,
      "node_id": "MDQ6VXNlcjEwMjQ3NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1024773?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nickleefly",
      "html_url": "https://github.com/nickleefly",
      "followers_url": "https://api.github.com/users/nickleefly/followers",
      "following_url": "https://api.github.com/users/nickleefly/following{/other_user}",
      "gists_url": "https://api.github.com/users/nickleefly/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nickleefly/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nickleefly/subscriptions",
      "organizations_url": "https://api.github.com/users/nickleefly/orgs",
      "repos_url": "https://api.github.com/users/nickleefly/repos",
      "events_url": "https://api.github.com/users/nickleefly/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nickleefly/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2013-04-19T06:16:51Z",
    "updated_at": "2013-04-19T08:08:12Z",
    "closed_at": "2013-04-19T08:08:12Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "```\n$ express --version\n3.2.0\n\n$ node -v\nv0.10.4\n\n$ npm -v\n1.2.18\n```\n\nI use `express app` and `cd app`\nrun `npm install`\nrun `node app.js`\n\nthrows error\n\n```\n$ node app.js \n\nevents.js:72\n        throw er; // Unhandled 'error' event\n              ^\nError: listen EADDRINUSE\n    at errnoException (net.js:883:11)\n    at Server._listen2 (net.js:1021:14)\n    at listen (net.js:1043:10)\n    at Server.listen (net.js:1109:5)\n    at Object.<anonymous> (/home/nick/Projects/app/app.js:33:24)\n    at Module._compile (module.js:456:26)\n    at Object.Module._extensions..js (module.js:474:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Function.Module.runMain (module.js:497:10)\n```\n\nIts the error happened with node v0.10.4, whilst when I use node version v0.8.18,\nit works\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1584/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1584/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1583",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1583/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1583/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1583/events",
    "html_url": "https://github.com/expressjs/express/issues/1583",
    "id": 13322596,
    "node_id": "MDU6SXNzdWUxMzMyMjU5Ng==",
    "number": 1583,
    "title": "Middleware that needs to modify res.body",
    "user": {
      "login": "nickpack",
      "id": 109072,
      "node_id": "MDQ6VXNlcjEwOTA3Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/109072?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nickpack",
      "html_url": "https://github.com/nickpack",
      "followers_url": "https://api.github.com/users/nickpack/followers",
      "following_url": "https://api.github.com/users/nickpack/following{/other_user}",
      "gists_url": "https://api.github.com/users/nickpack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nickpack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nickpack/subscriptions",
      "organizations_url": "https://api.github.com/users/nickpack/orgs",
      "repos_url": "https://api.github.com/users/nickpack/repos",
      "events_url": "https://api.github.com/users/nickpack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nickpack/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2013-04-17T22:17:40Z",
    "updated_at": "2018-09-24T01:57:07Z",
    "closed_at": "2013-04-21T20:53:18Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi, I recently upgraded to 3.x and have just discovered that res.write was removed, and thus some of my middleware doesn't work, the only logical place I can see to replace these is res.send but I seem to be causing responses to not return doing this, consider this simple example:\n\n``` javascript\nthis.use(function(req, res, next){\n        var send = res.send;\n        res.send = function (string) {\n            var body = string instanceof Buffer ? string.toString() : string;\n            body = body.replace(/<\\/body>/, function (w) {\n                return 'foo' + w;\n            });\n\n            if (string instanceof Buffer) {\n                this.body = new Buffer(body);\n            } else {\n                this.body =  body;\n            }\n\n            send.call(this);\n        };\n        next();\n    });\n```\n\nIf I send the raw body instead of the res object, it will crap out because req is lost, with it like this the http response never returns though express seems to think it has, happily dropping a GET in the terminal. I have looked at these requests, and the body is indeed as it should be with 'foo' before the end body tag, it just never gets sent to the browser.\n\nAm I doing something blindingly stupid, or is there an issue/reason for not modifying the body after the view has been rendered?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1583/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1583/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1582",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1582/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1582/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1582/events",
    "html_url": "https://github.com/expressjs/express/issues/1582",
    "id": 13299981,
    "node_id": "MDU6SXNzdWUxMzI5OTk4MQ==",
    "number": 1582,
    "title": "res.write in 3?",
    "user": {
      "login": "clearly",
      "id": 1709962,
      "node_id": "MDQ6VXNlcjE3MDk5NjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1709962?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/clearly",
      "html_url": "https://github.com/clearly",
      "followers_url": "https://api.github.com/users/clearly/followers",
      "following_url": "https://api.github.com/users/clearly/following{/other_user}",
      "gists_url": "https://api.github.com/users/clearly/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/clearly/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/clearly/subscriptions",
      "organizations_url": "https://api.github.com/users/clearly/orgs",
      "repos_url": "https://api.github.com/users/clearly/repos",
      "events_url": "https://api.github.com/users/clearly/events{/privacy}",
      "received_events_url": "https://api.github.com/users/clearly/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2013-04-17T14:57:08Z",
    "updated_at": "2013-04-17T15:23:16Z",
    "closed_at": "2013-04-17T15:23:16Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm using express 3 and res.write seems to work fine but I don't see it in the api documentation. I specifically need to stream chunks of string based html content back to the client so res.send and res.sendfile are not appropriate for my use case.\n\nI just wanted to confirm that res.write will continue to be supported? Or if I can use .pipe(res) to stream content to the client as well.\n\nJust looking for some formal color on the topic.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1582/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1582/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1581",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1581/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1581/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1581/events",
    "html_url": "https://github.com/expressjs/express/pull/1581",
    "id": 13231718,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTE3ODkxNQ==",
    "number": 1581,
    "title": "Stop Express from crashing when used with SugarJS",
    "user": {
      "login": "tarqd",
      "id": 554927,
      "node_id": "MDQ6VXNlcjU1NDkyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/554927?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tarqd",
      "html_url": "https://github.com/tarqd",
      "followers_url": "https://api.github.com/users/tarqd/followers",
      "following_url": "https://api.github.com/users/tarqd/following{/other_user}",
      "gists_url": "https://api.github.com/users/tarqd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tarqd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tarqd/subscriptions",
      "organizations_url": "https://api.github.com/users/tarqd/orgs",
      "repos_url": "https://api.github.com/users/tarqd/repos",
      "events_url": "https://api.github.com/users/tarqd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tarqd/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-04-16T05:03:18Z",
    "updated_at": "2013-04-16T13:48:41Z",
    "closed_at": "2013-04-16T13:48:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1581",
      "html_url": "https://github.com/expressjs/express/pull/1581",
      "diff_url": "https://github.com/expressjs/express/pull/1581.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1581.patch",
      "merged_at": null
    },
    "body": "Express 3.0 currently breaks if you use SugarJS with it's `Object.extend();` feature. \nThe problem occurs in `router/index.js` \n\n`(this.map[method] = this.map[method] || []).push(route);`\n\nBecause `merge` is a method supported by express and a function added to the Object prototype by Sugar, `this.map[method]` is mistakenly assigned the merge function from the prototype instead of the empty array.\n\nFix:\nUse hasOwnProperty to check if the method exists, to fix mixups caused by merge function added to the Object prototype by Sugar\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1581/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1581/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1580",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1580/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1580/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1580/events",
    "html_url": "https://github.com/expressjs/express/pull/1580",
    "id": 13226293,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTE3NjMzMw==",
    "number": 1580,
    "title": "Fix unit tests on Windows",
    "user": {
      "login": "SLaks",
      "id": 313894,
      "node_id": "MDQ6VXNlcjMxMzg5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/313894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SLaks",
      "html_url": "https://github.com/SLaks",
      "followers_url": "https://api.github.com/users/SLaks/followers",
      "following_url": "https://api.github.com/users/SLaks/following{/other_user}",
      "gists_url": "https://api.github.com/users/SLaks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SLaks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SLaks/subscriptions",
      "organizations_url": "https://api.github.com/users/SLaks/orgs",
      "repos_url": "https://api.github.com/users/SLaks/repos",
      "events_url": "https://api.github.com/users/SLaks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SLaks/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 24,
    "created_at": "2013-04-16T00:18:55Z",
    "updated_at": "2014-06-26T00:45:15Z",
    "closed_at": "2013-10-31T03:37:06Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1580",
      "html_url": "https://github.com/expressjs/express/pull/1580",
      "diff_url": "https://github.com/expressjs/express/pull/1580.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1580.patch",
      "merged_at": null
    },
    "body": "ENOENT errors are reported differently on Windows; see comment.\n\nThis assumes the presence of `make` to run the tests in the first place.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1580/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1580/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1579",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1579/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1579/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1579/events",
    "html_url": "https://github.com/expressjs/express/pull/1579",
    "id": 13216398,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTE3MTA3Mw==",
    "number": 1579,
    "title": "Handle missing Host: header",
    "user": {
      "login": "SLaks",
      "id": 313894,
      "node_id": "MDQ6VXNlcjMxMzg5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/313894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SLaks",
      "html_url": "https://github.com/SLaks",
      "followers_url": "https://api.github.com/users/SLaks/followers",
      "following_url": "https://api.github.com/users/SLaks/following{/other_user}",
      "gists_url": "https://api.github.com/users/SLaks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SLaks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SLaks/subscriptions",
      "organizations_url": "https://api.github.com/users/SLaks/orgs",
      "repos_url": "https://api.github.com/users/SLaks/repos",
      "events_url": "https://api.github.com/users/SLaks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SLaks/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 11,
    "created_at": "2013-04-15T19:42:40Z",
    "updated_at": "2014-06-17T12:55:14Z",
    "closed_at": "2013-05-09T16:14:14Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1579",
      "html_url": "https://github.com/expressjs/express/pull/1579",
      "diff_url": "https://github.com/expressjs/express/pull/1579.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1579.patch",
      "merged_at": null
    },
    "body": "Right now, a request without a `Host:` header (nor `X-Forwarded-Host`) will throw an error every time I access `req.host`.\n\nI fixed that to return an empty string.\n\nThis also affects `req.subdomains`.  \n`\"\".split(\".\")` returns `[ \"\" ]`.  \nHowever, since `subdomains` slices the initial portion of the host anyway, this will still correctly return `[]`.  (unless `subdomain offset` is `0`)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1579/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1579/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1578",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1578/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1578/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1578/events",
    "html_url": "https://github.com/expressjs/express/pull/1578",
    "id": 13154174,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTE0NTk0MQ==",
    "number": 1578,
    "title": "Correct sorting of long list of accept header",
    "user": {
      "login": "silentjohnny",
      "id": 569663,
      "node_id": "MDQ6VXNlcjU2OTY2Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/569663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/silentjohnny",
      "html_url": "https://github.com/silentjohnny",
      "followers_url": "https://api.github.com/users/silentjohnny/followers",
      "following_url": "https://api.github.com/users/silentjohnny/following{/other_user}",
      "gists_url": "https://api.github.com/users/silentjohnny/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/silentjohnny/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/silentjohnny/subscriptions",
      "organizations_url": "https://api.github.com/users/silentjohnny/orgs",
      "repos_url": "https://api.github.com/users/silentjohnny/repos",
      "events_url": "https://api.github.com/users/silentjohnny/events{/privacy}",
      "received_events_url": "https://api.github.com/users/silentjohnny/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-04-13T10:40:40Z",
    "updated_at": "2014-07-21T20:43:02Z",
    "closed_at": "2013-04-13T16:06:09Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1578",
      "html_url": "https://github.com/expressjs/express/pull/1578",
      "diff_url": "https://github.com/expressjs/express/pull/1578.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1578.patch",
      "merged_at": "2013-04-13T16:06:09Z"
    },
    "body": "v8 does an unstable sort for arrays longer than 10 elements. Added an 'originalIndex' property to the parsed array, so order of equal-quality elements stays the same.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1578/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1578/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1577",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1577/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1577/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1577/events",
    "html_url": "https://github.com/expressjs/express/pull/1577",
    "id": 13052528,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTA5OTU2NA==",
    "number": 1577,
    "title": "introducing view constructor configuration",
    "user": {
      "login": "caridy",
      "id": 38969,
      "node_id": "MDQ6VXNlcjM4OTY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/38969?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/caridy",
      "html_url": "https://github.com/caridy",
      "followers_url": "https://api.github.com/users/caridy/followers",
      "following_url": "https://api.github.com/users/caridy/following{/other_user}",
      "gists_url": "https://api.github.com/users/caridy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/caridy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/caridy/subscriptions",
      "organizations_url": "https://api.github.com/users/caridy/orgs",
      "repos_url": "https://api.github.com/users/caridy/repos",
      "events_url": "https://api.github.com/users/caridy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/caridy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2013-04-11T05:00:04Z",
    "updated_at": "2013-04-13T17:26:07Z",
    "closed_at": "2013-04-13T16:53:10Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1577",
      "html_url": "https://github.com/expressjs/express/pull/1577",
      "diff_url": "https://github.com/expressjs/express/pull/1577.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1577.patch",
      "merged_at": null
    },
    "body": "## User Stories\n- As a developer, I want to bend the instantiation process for views so I can optimize it for my product.\n- As a developer, I want to render views that are loaded over the network so I can control them thru an editorial tool.\n- As a developer, I want to render views that are compiled into javascript so I can improve performance.\n## Shortcoming\n\nThe current implementation:\n- enforces the use of a view constructor (`lib/view.js`) that is not exposed, hence cannot be customized, optimized or bended.\n- requires the view engine to be bound to the filesystem where each view will have to be backed up by a local file without room for abstraction.\n## Details\n\nThis PR introduces a simple mechanism to configure express to rely on a custom `View` implementation without having to move the current implementation into a separate package or extra complexity. The proposal is to support this:\n\n```\nvar app = express();\napp.set('view constructor', CustomView);\napp.render('something');\n```\n\nWhere `CustomView` is a Class that mimics the api of `lib/view.js` which is responsible for exposing a method called `render` that will be invoked when calling `app.render`. How the view will be resolved based on the `name` and the `options` passed into `app.render` is irrelevant.\n## To-do\n- [x] code\n- [x] test\n- [x] example\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1577/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1577/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1576",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1576/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1576/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1576/events",
    "html_url": "https://github.com/expressjs/express/issues/1576",
    "id": 13025524,
    "node_id": "MDU6SXNzdWUxMzAyNTUyNA==",
    "number": 1576,
    "title": "Content-Type: application/json not working for multipart MIME requests",
    "user": {
      "login": "ctalibard",
      "id": 4116610,
      "node_id": "MDQ6VXNlcjQxMTY2MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4116610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctalibard",
      "html_url": "https://github.com/ctalibard",
      "followers_url": "https://api.github.com/users/ctalibard/followers",
      "following_url": "https://api.github.com/users/ctalibard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctalibard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctalibard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctalibard/subscriptions",
      "organizations_url": "https://api.github.com/users/ctalibard/orgs",
      "repos_url": "https://api.github.com/users/ctalibard/repos",
      "events_url": "https://api.github.com/users/ctalibard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctalibard/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2013-04-10T15:46:36Z",
    "updated_at": "2013-09-07T21:45:53Z",
    "closed_at": "2013-09-07T21:45:53Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I want to be able to send two parts to my REST API, one containing RAW JSON data representing attributes of a file and a second containing the actual file. \n\nDespite defining the Content-Type of the first part as _application/json_ (like I would for a non-multipart request) Express is still parsing it as a string and setting a single field in `req.body` to contain that string.\n\nMy HTTP request is formatted like this:\n\n```\nContent-Type: multipart/form-data; boundary=xxxx\n\n--xxxx\nContent-Disposition: form-data; name=\"json\"\nContent-Type: application/json\n\n{ some: \"JSON\", to: \"parse\" }\n\n--xxxx\nContent-Disposition: file; filename=\"theFile\"\nContent-Transfer-Encoding: binary\n\nFile contents here\n--xxxx--\n```\n\nI would hope that `req.body` would be the JSON I sent, but instead it's:\n\n```\n{ json: \"{ some: \\\"JSON\\\", to: \\\"parse\\\" }\" }\n```\n\nIs there a special Content-Disposition I should be using to make this work?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1576/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1576/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1575",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1575/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1575/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1575/events",
    "html_url": "https://github.com/expressjs/express/pull/1575",
    "id": 12984745,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTA2NDQzOQ==",
    "number": 1575,
    "title": "Changed URL of russian docs in Readme.md",
    "user": {
      "login": "jsmarkus",
      "id": 1039431,
      "node_id": "MDQ6VXNlcjEwMzk0MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1039431?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jsmarkus",
      "html_url": "https://github.com/jsmarkus",
      "followers_url": "https://api.github.com/users/jsmarkus/followers",
      "following_url": "https://api.github.com/users/jsmarkus/following{/other_user}",
      "gists_url": "https://api.github.com/users/jsmarkus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jsmarkus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jsmarkus/subscriptions",
      "organizations_url": "https://api.github.com/users/jsmarkus/orgs",
      "repos_url": "https://api.github.com/users/jsmarkus/repos",
      "events_url": "https://api.github.com/users/jsmarkus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jsmarkus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-04-09T18:19:48Z",
    "updated_at": "2014-08-06T15:06:48Z",
    "closed_at": "2013-04-09T22:47:31Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1575",
      "html_url": "https://github.com/expressjs/express/pull/1575",
      "diff_url": "https://github.com/expressjs/express/pull/1575.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1575.patch",
      "merged_at": "2013-04-09T22:47:31Z"
    },
    "body": "Old link to express-js.ru is deprecated.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1575/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1575/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1574",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1574/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1574/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1574/events",
    "html_url": "https://github.com/expressjs/express/issues/1574",
    "id": 12906604,
    "node_id": "MDU6SXNzdWUxMjkwNjYwNA==",
    "number": 1574,
    "title": "Socket hang up upon request of static files",
    "user": {
      "login": "lacek",
      "id": 1272100,
      "node_id": "MDQ6VXNlcjEyNzIxMDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1272100?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lacek",
      "html_url": "https://github.com/lacek",
      "followers_url": "https://api.github.com/users/lacek/followers",
      "following_url": "https://api.github.com/users/lacek/following{/other_user}",
      "gists_url": "https://api.github.com/users/lacek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lacek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lacek/subscriptions",
      "organizations_url": "https://api.github.com/users/lacek/orgs",
      "repos_url": "https://api.github.com/users/lacek/repos",
      "events_url": "https://api.github.com/users/lacek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lacek/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2013-04-08T02:47:47Z",
    "updated_at": "2013-04-12T02:30:02Z",
    "closed_at": "2013-04-12T02:30:02Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am testing an express web app with Zombie and IE6 under Node.js v0.8.20. The server stop with socket hang up error when Zombie or IE6 request for static files consecutively (like CSS and JavaScript file).\n\nBelow is the error trace cause by request of Zombie test:\n\n<pre>\nevents.js:71\n       throw arguments[1]; // Unhandled 'error' event\n                       ^\nError: socket hang up\n    at createHangUpError (http.js:1360:15)\n    at ServerResponse.OutgoingMessage._writeRaw (http.js:507:26)\n    at ServerResponse.OutgoingMessage._send (http.js:476:15)\n    at ServerResponse.OutgoingMessage.write (http.js:749:16)\n    at ServerResponse.OutgoingMessage.end (http.js:882:16)\n    at ServerResponse.module.exports.res.end (D:\\Libraries\\EclipseWorkspace\\prototype\\node_modules\\express\\node_modules\\connect\\lib\\middleware\\logger.js:148:13)\n    at res.end (D:\\Libraries\\EclipseWorkspace\\prototype\\node_modules\\express\\node_modules\\connect\\lib\\middleware\\session.js:282:13)\n    at D:\\Libraries\\EclipseWorkspace\\prototype\\node_modules\\express\\node_modules\\connect\\lib\\middleware\\session\\memory.js:73:11\n    at process.startup.processNextTick.process._tickCallback (node.js:244:9)\n</pre>\n\n\nBelow is the error trace cause by request of IE6:\n\n<pre>\nevents.js:71\n        throw arguments[1]; // Unhandled 'error' event\n                       ^\nError: socket hang up\n    at createHangUpError (http.js:1360:15)\n    at ServerResponse.OutgoingMessage._writeRaw (http.js:507:26)\n    at ServerResponse.OutgoingMessage._send (http.js:476:15)\n    at ServerResponse.OutgoingMessage.end (http.js:890:18)\n    at ServerResponse.module.exports.res.end (D:\\Libraries\\EclipseWorkspace\\prototype\\node_modules\\express\\node_modules\\connect\\lib\\middleware\\logger.js:148:13)\n    at SendStream.notModified (D:\\Libraries\\EclipseWorkspace\\prototype\\node_modules\\express\\node_modules\\send\\lib\\send.js:223:7)\n    at SendStream.send (D:\\Libraries\\EclipseWorkspace\\prototype\\node_modules\\express\\node_modules\\send\\lib\\send.js:353:17)\n    at SendStream.pipe (D:\\Libraries\\EclipseWorkspace\\prototype\\node_modules\\express\\node_modules\\send\\lib\\send.js:322:10)\n    at Object.oncomplete (fs.js:297:15)\n</pre>\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1574/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1574/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1573",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1573/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1573/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1573/events",
    "html_url": "https://github.com/expressjs/express/pull/1573",
    "id": 12897114,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTAyMTg2Mw==",
    "number": 1573,
    "title": "Put http status code utils for restfull api",
    "user": {
      "login": "greengerong",
      "id": 2569893,
      "node_id": "MDQ6VXNlcjI1Njk4OTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2569893?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/greengerong",
      "html_url": "https://github.com/greengerong",
      "followers_url": "https://api.github.com/users/greengerong/followers",
      "following_url": "https://api.github.com/users/greengerong/following{/other_user}",
      "gists_url": "https://api.github.com/users/greengerong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/greengerong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/greengerong/subscriptions",
      "organizations_url": "https://api.github.com/users/greengerong/orgs",
      "repos_url": "https://api.github.com/users/greengerong/repos",
      "events_url": "https://api.github.com/users/greengerong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/greengerong/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-04-07T15:56:34Z",
    "updated_at": "2014-07-19T06:47:35Z",
    "closed_at": "2013-04-12T22:05:32Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1573",
      "html_url": "https://github.com/expressjs/express/pull/1573",
      "diff_url": "https://github.com/expressjs/express/pull/1573.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1573.patch",
      "merged_at": null
    },
    "body": "Put http status code utils for restfull api. CI failed due to the master also failed when i fork this project.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1573/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1573/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1572",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1572/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1572/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1572/events",
    "html_url": "https://github.com/expressjs/express/pull/1572",
    "id": 12877354,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTAxNjAyMw==",
    "number": 1572,
    "title": "updated mvc example",
    "user": {
      "login": "JonathanMH",
      "id": 919732,
      "node_id": "MDQ6VXNlcjkxOTczMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/919732?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JonathanMH",
      "html_url": "https://github.com/JonathanMH",
      "followers_url": "https://api.github.com/users/JonathanMH/followers",
      "following_url": "https://api.github.com/users/JonathanMH/following{/other_user}",
      "gists_url": "https://api.github.com/users/JonathanMH/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JonathanMH/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JonathanMH/subscriptions",
      "organizations_url": "https://api.github.com/users/JonathanMH/orgs",
      "repos_url": "https://api.github.com/users/JonathanMH/repos",
      "events_url": "https://api.github.com/users/JonathanMH/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JonathanMH/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-04-06T12:54:17Z",
    "updated_at": "2013-04-06T18:44:17Z",
    "closed_at": "2013-04-06T18:44:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1572",
      "html_url": "https://github.com/expressjs/express/pull/1572",
      "diff_url": "https://github.com/expressjs/express/pull/1572.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1572.patch",
      "merged_at": null
    },
    "body": "removed .js at end of filename for controller url\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1572/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1572/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1571",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1571/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1571/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1571/events",
    "html_url": "https://github.com/expressjs/express/pull/1571",
    "id": 12834198,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDk5NTA3NA==",
    "number": 1571,
    "title": "Change to crypto.pbkdf2 in Node v0.10 broke auth example",
    "user": {
      "login": "jlubawy",
      "id": 596251,
      "node_id": "MDQ6VXNlcjU5NjI1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/596251?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jlubawy",
      "html_url": "https://github.com/jlubawy",
      "followers_url": "https://api.github.com/users/jlubawy/followers",
      "following_url": "https://api.github.com/users/jlubawy/following{/other_user}",
      "gists_url": "https://api.github.com/users/jlubawy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jlubawy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jlubawy/subscriptions",
      "organizations_url": "https://api.github.com/users/jlubawy/orgs",
      "repos_url": "https://api.github.com/users/jlubawy/repos",
      "events_url": "https://api.github.com/users/jlubawy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jlubawy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-04-05T06:56:42Z",
    "updated_at": "2014-06-14T12:24:41Z",
    "closed_at": "2013-04-13T16:35:12Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1571",
      "html_url": "https://github.com/expressjs/express/pull/1571",
      "diff_url": "https://github.com/expressjs/express/pull/1571.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1571.patch",
      "merged_at": "2013-04-13T16:35:11Z"
    },
    "body": "The function `crypto.pbkdf2` has changed from returning a String in Node v0.8 to a SlowBuffer in Node v0.10 (https://github.com/joyent/node/issues/5003) effectively breaking the authentication scheme used in the auth example (not to mention https://github.com/visionmedia/node-pwd).\n\nThe change causes the line `if (hash == user.hash) return fn(null, user);` in the app.js `authentication` function to always evaluate as `false` using Node v0.10 (https://github.com/visionmedia/express/issues/1559).\n\nUsing the recommendations from (https://github.com/joyent/node/issues/5003) I modified the hash function in pass.js to return a base64 encoded hash at all times fixing the issue using Node v0.10 and not breaking the example using Node v0.8 (tested both).\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1571/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1571/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1570",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1570/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1570/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1570/events",
    "html_url": "https://github.com/expressjs/express/issues/1570",
    "id": 12832750,
    "node_id": "MDU6SXNzdWUxMjgzMjc1MA==",
    "number": 1570,
    "title": "Ubuntu 10.04 - express.js 3.1.1 - all files mal-formatted by \"express\" command",
    "user": {
      "login": "cloudconferenceroom",
      "id": 3916443,
      "node_id": "MDQ6VXNlcjM5MTY0NDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3916443?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cloudconferenceroom",
      "html_url": "https://github.com/cloudconferenceroom",
      "followers_url": "https://api.github.com/users/cloudconferenceroom/followers",
      "following_url": "https://api.github.com/users/cloudconferenceroom/following{/other_user}",
      "gists_url": "https://api.github.com/users/cloudconferenceroom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cloudconferenceroom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cloudconferenceroom/subscriptions",
      "organizations_url": "https://api.github.com/users/cloudconferenceroom/orgs",
      "repos_url": "https://api.github.com/users/cloudconferenceroom/repos",
      "events_url": "https://api.github.com/users/cloudconferenceroom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cloudconferenceroom/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-04-05T05:25:22Z",
    "updated_at": "2013-04-05T05:51:03Z",
    "closed_at": "2013-04-05T05:51:03Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I installed express.js 3.1.1, and it worked. When I used the command - express --sessions --css stylus --ejs myapp to create an example, it did. But all files under the /myapp folder are mal-formatted, it looks like - \",/**, \\* Module dependencies., */,,var express = require('express'),  , routes = require('./routes'),  ,.....\", there are no newline break between lines, also \",\" emerged in no-right-place too.\n\nI ran the same command on osx 10.7, but no such problem. I installed node.js, and npm from this tutorials - http://howtonode.org/how-to-install-nodejs, and I installed express from - npm install -g express.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1570/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1570/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1569",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1569/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1569/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1569/events",
    "html_url": "https://github.com/expressjs/express/issues/1569",
    "id": 12779315,
    "node_id": "MDU6SXNzdWUxMjc3OTMxNQ==",
    "number": 1569,
    "title": "Proposed check for port already in use",
    "user": {
      "login": "rkulla",
      "id": 244283,
      "node_id": "MDQ6VXNlcjI0NDI4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/244283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rkulla",
      "html_url": "https://github.com/rkulla",
      "followers_url": "https://api.github.com/users/rkulla/followers",
      "following_url": "https://api.github.com/users/rkulla/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkulla/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rkulla/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkulla/subscriptions",
      "organizations_url": "https://api.github.com/users/rkulla/orgs",
      "repos_url": "https://api.github.com/users/rkulla/repos",
      "events_url": "https://api.github.com/users/rkulla/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rkulla/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2013-04-03T23:28:56Z",
    "updated_at": "2013-04-13T23:58:55Z",
    "closed_at": "2013-04-13T16:33:30Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When express.js generates app.js to start the Express server on a port (default 3000), it throws an exception if the port is already in use. So instead, the error could be caught with the following check and produce a more descriptive error message, by changing:\n\n```\nhttp.createServer(app).listen(app.get('port'), function(){\n  console.log(\"Express server listening on port \" + app.get('port'));\n});\n```\n\nto:\n\n```\nserver = http.createServer(app);\nserver.once('error', function(err) {\n  if (err.code == 'EADDRINUSE') {\n    console.log(err.code + ': ' + app.get('port') + ' already in use');\n  }\n});\nserver.listen(app.get('port'), function(){\n  console.log(\"Express server listening on port \" + app.get('port'));\n});\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1569/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1569/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1568",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1568/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1568/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1568/events",
    "html_url": "https://github.com/expressjs/express/issues/1568",
    "id": 12753686,
    "node_id": "MDU6SXNzdWUxMjc1MzY4Ng==",
    "number": 1568,
    "title": "Fix param types in req.param comment docs (request.js)",
    "user": {
      "login": "venkatperi",
      "id": 1389947,
      "node_id": "MDQ6VXNlcjEzODk5NDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1389947?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/venkatperi",
      "html_url": "https://github.com/venkatperi",
      "followers_url": "https://api.github.com/users/venkatperi/followers",
      "following_url": "https://api.github.com/users/venkatperi/following{/other_user}",
      "gists_url": "https://api.github.com/users/venkatperi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/venkatperi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/venkatperi/subscriptions",
      "organizations_url": "https://api.github.com/users/venkatperi/orgs",
      "repos_url": "https://api.github.com/users/venkatperi/repos",
      "events_url": "https://api.github.com/users/venkatperi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/venkatperi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-04-03T14:02:23Z",
    "updated_at": "2013-04-03T22:12:02Z",
    "closed_at": "2013-04-03T22:12:02Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "To avoid inspection warnings, in request.js | function req.param:\n- @param defaultValue should be marked optional\n- @return should either be {String} or {Mixed=}\n\nSee below.\n\n``` javascript\n/**\n * Return the value of param `name` when present or `defaultValue`.\n *\n *  - Checks route placeholders, ex: _/user/:id_\n *  - Checks body params, ex: id=12, {\"id\":12}\n *  - Checks query string params, ex: ?id=12\n *\n * To utilize request bodies, `req.body`\n * should be an object. This can be done by using\n * the `connect.bodyParser()` middleware.\n *\n * @param {String} name\n * @param {String, optional} defaultValue\n * @return {String}\n * @api public\n */\n\nreq.param = function(name, defaultValue){\n  var params = this.params || {};\n  var body = this.body || {};\n  var query = this.query || {};\n  if (null != params[name] && params.hasOwnProperty(name)) return params[name];\n  if (null != body[name]) return body[name];\n  if (null != query[name]) return query[name];\n  return defaultValue;\n};\n\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1568/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1568/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1567",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1567/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1567/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1567/events",
    "html_url": "https://github.com/expressjs/express/pull/1567",
    "id": 12706943,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDkzMDQ4MQ==",
    "number": 1567,
    "title": "fix .travis.yml",
    "user": {
      "login": "guybrush",
      "id": 306324,
      "node_id": "MDQ6VXNlcjMwNjMyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/306324?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/guybrush",
      "html_url": "https://github.com/guybrush",
      "followers_url": "https://api.github.com/users/guybrush/followers",
      "following_url": "https://api.github.com/users/guybrush/following{/other_user}",
      "gists_url": "https://api.github.com/users/guybrush/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/guybrush/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/guybrush/subscriptions",
      "organizations_url": "https://api.github.com/users/guybrush/orgs",
      "repos_url": "https://api.github.com/users/guybrush/repos",
      "events_url": "https://api.github.com/users/guybrush/events{/privacy}",
      "received_events_url": "https://api.github.com/users/guybrush/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-04-02T14:20:02Z",
    "updated_at": "2014-08-06T15:13:57Z",
    "closed_at": "2013-04-02T21:42:06Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1567",
      "html_url": "https://github.com/expressjs/express/pull/1567",
      "diff_url": "https://github.com/expressjs/express/pull/1567.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1567.patch",
      "merged_at": "2013-04-02T21:42:06Z"
    },
    "body": "now the version-number has to be wrapped by quotes (they changed this at some time i guess?)\n\nsee: http://about.travis-ci.org/docs/user/languages/javascript-with-nodejs/\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1567/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1567/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1566",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1566/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1566/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1566/events",
    "html_url": "https://github.com/expressjs/express/pull/1566",
    "id": 12669823,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDkxMzE3NQ==",
    "number": 1566,
    "title": "Possible fix for #1557",
    "user": {
      "login": "daguej",
      "id": 354349,
      "node_id": "MDQ6VXNlcjM1NDM0OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/354349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/daguej",
      "html_url": "https://github.com/daguej",
      "followers_url": "https://api.github.com/users/daguej/followers",
      "following_url": "https://api.github.com/users/daguej/following{/other_user}",
      "gists_url": "https://api.github.com/users/daguej/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/daguej/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daguej/subscriptions",
      "organizations_url": "https://api.github.com/users/daguej/orgs",
      "repos_url": "https://api.github.com/users/daguej/repos",
      "events_url": "https://api.github.com/users/daguej/events{/privacy}",
      "received_events_url": "https://api.github.com/users/daguej/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2013-04-01T18:10:00Z",
    "updated_at": "2014-07-12T06:21:27Z",
    "closed_at": "2013-04-13T16:14:42Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1566",
      "html_url": "https://github.com/expressjs/express/pull/1566",
      "diff_url": "https://github.com/expressjs/express/pull/1566.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1566.patch",
      "merged_at": "2013-04-13T16:14:42Z"
    },
    "body": "This fixes #1557 by removing `instanceof` in favor of `Object.toString`.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1566/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1566/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1565",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1565/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1565/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1565/events",
    "html_url": "https://github.com/expressjs/express/issues/1565",
    "id": 12663796,
    "node_id": "MDU6SXNzdWUxMjY2Mzc5Ng==",
    "number": 1565,
    "title": "assets host",
    "user": {
      "login": "lws68825",
      "id": 916968,
      "node_id": "MDQ6VXNlcjkxNjk2OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/916968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lws68825",
      "html_url": "https://github.com/lws68825",
      "followers_url": "https://api.github.com/users/lws68825/followers",
      "following_url": "https://api.github.com/users/lws68825/following{/other_user}",
      "gists_url": "https://api.github.com/users/lws68825/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lws68825/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lws68825/subscriptions",
      "organizations_url": "https://api.github.com/users/lws68825/orgs",
      "repos_url": "https://api.github.com/users/lws68825/repos",
      "events_url": "https://api.github.com/users/lws68825/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lws68825/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-04-01T15:16:06Z",
    "updated_at": "2013-04-13T16:31:33Z",
    "closed_at": "2013-04-13T16:31:33Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "hi, how to set assets host like assets.myhost.com in express?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1565/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1565/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1564",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1564/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1564/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1564/events",
    "html_url": "https://github.com/expressjs/express/pull/1564",
    "id": 12637465,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDg5OTczMQ==",
    "number": 1564,
    "title": "Consider X-Forwarded-Host if proxy is trusted",
    "user": {
      "login": "cdauth",
      "id": 1801792,
      "node_id": "MDQ6VXNlcjE4MDE3OTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1801792?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cdauth",
      "html_url": "https://github.com/cdauth",
      "followers_url": "https://api.github.com/users/cdauth/followers",
      "following_url": "https://api.github.com/users/cdauth/following{/other_user}",
      "gists_url": "https://api.github.com/users/cdauth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cdauth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cdauth/subscriptions",
      "organizations_url": "https://api.github.com/users/cdauth/orgs",
      "repos_url": "https://api.github.com/users/cdauth/repos",
      "events_url": "https://api.github.com/users/cdauth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cdauth/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-03-31T00:40:46Z",
    "updated_at": "2014-08-08T22:36:58Z",
    "closed_at": "2013-04-01T18:06:40Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1564",
      "html_url": "https://github.com/expressjs/express/pull/1564",
      "diff_url": "https://github.com/expressjs/express/pull/1564.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1564.patch",
      "merged_at": "2013-04-01T18:06:40Z"
    },
    "body": "When `trust proxy` is enabled, the protocol and the remote address are already taken from the `X-Forwarded-*` headers. This patch additionally does that for the `Host` header.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1564/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1564/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1563",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1563/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1563/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1563/events",
    "html_url": "https://github.com/expressjs/express/pull/1563",
    "id": 12628845,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDg5Njc2OQ==",
    "number": 1563,
    "title": "Fix for Accept header parsing for custom accept parameters",
    "user": {
      "login": "pavelbrylov",
      "id": 448437,
      "node_id": "MDQ6VXNlcjQ0ODQzNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/448437?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pavelbrylov",
      "html_url": "https://github.com/pavelbrylov",
      "followers_url": "https://api.github.com/users/pavelbrylov/followers",
      "following_url": "https://api.github.com/users/pavelbrylov/following{/other_user}",
      "gists_url": "https://api.github.com/users/pavelbrylov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pavelbrylov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pavelbrylov/subscriptions",
      "organizations_url": "https://api.github.com/users/pavelbrylov/orgs",
      "repos_url": "https://api.github.com/users/pavelbrylov/repos",
      "events_url": "https://api.github.com/users/pavelbrylov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pavelbrylov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2013-03-30T11:19:31Z",
    "updated_at": "2013-04-11T15:39:00Z",
    "closed_at": "2013-04-11T15:39:00Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1563",
      "html_url": "https://github.com/expressjs/express/pull/1563",
      "diff_url": "https://github.com/expressjs/express/pull/1563.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1563.patch",
      "merged_at": null
    },
    "body": "According to RFC2616 (http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html) Accept header may contain different accept-params besides quality. Take a look at example from RFC:\n`Accept: text/*;q=0.3, text/html;q=0.7, text/html;level=1,\n               text/html;level=2;q=0.4, */*;q=0.5`\n\nWith current implementation such header will be parsed incorrectly (level=1 in text/html;level=1 will be parsed as quality). This PR adds better support for such parameters by adding 'params' field to Accept type object, and using it in negotiation.\n\nAlso, did you consider to use https://github.com/federomero/negotiator?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1563/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1563/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1562",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1562/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1562/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1562/events",
    "html_url": "https://github.com/expressjs/express/issues/1562",
    "id": 12600494,
    "node_id": "MDU6SXNzdWUxMjYwMDQ5NA==",
    "number": 1562,
    "title": "req.session alway shows undefined",
    "user": {
      "login": "joshbedo",
      "id": 607239,
      "node_id": "MDQ6VXNlcjYwNzIzOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/607239?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joshbedo",
      "html_url": "https://github.com/joshbedo",
      "followers_url": "https://api.github.com/users/joshbedo/followers",
      "following_url": "https://api.github.com/users/joshbedo/following{/other_user}",
      "gists_url": "https://api.github.com/users/joshbedo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joshbedo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joshbedo/subscriptions",
      "organizations_url": "https://api.github.com/users/joshbedo/orgs",
      "repos_url": "https://api.github.com/users/joshbedo/repos",
      "events_url": "https://api.github.com/users/joshbedo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joshbedo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-03-29T10:28:21Z",
    "updated_at": "2013-03-29T17:41:25Z",
    "closed_at": "2013-03-29T17:41:25Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I can't seem to set a session value for some reason can someone help? here is my code\n\nhttps://github.com/joshbedo/TumblrAPI/blob/master/server.js\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1562/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1562/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1561",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1561/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1561/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1561/events",
    "html_url": "https://github.com/expressjs/express/issues/1561",
    "id": 12591339,
    "node_id": "MDU6SXNzdWUxMjU5MTMzOQ==",
    "number": 1561,
    "title": "Back button on browser always reloads the resources",
    "user": {
      "login": "karenism",
      "id": 301221,
      "node_id": "MDQ6VXNlcjMwMTIyMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/301221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karenism",
      "html_url": "https://github.com/karenism",
      "followers_url": "https://api.github.com/users/karenism/followers",
      "following_url": "https://api.github.com/users/karenism/following{/other_user}",
      "gists_url": "https://api.github.com/users/karenism/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karenism/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karenism/subscriptions",
      "organizations_url": "https://api.github.com/users/karenism/orgs",
      "repos_url": "https://api.github.com/users/karenism/repos",
      "events_url": "https://api.github.com/users/karenism/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karenism/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-03-29T00:43:56Z",
    "updated_at": "2013-04-13T16:30:37Z",
    "closed_at": "2013-04-13T16:30:37Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am using express v 3.1.0\n\nI created a new app with a layout file that has an alert on window.onload, and a link to an external web site.  When I click on the external web site and hit the browser back button, the page is not cached so the onload event is fired.  All my searching says that the page should not fire the onload event on back button.  I created a standalone html page to make sure it worked as expected.\n\nAre there some special settings needed for express apps to cache the pages?\n\nI am curious because I am creating a page that has an ajax load of search results.  When the person clicks on a result I would like them to be able to hit the browser back button and not have the search query execute again.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1561/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1561/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1560",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1560/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1560/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1560/events",
    "html_url": "https://github.com/expressjs/express/issues/1560",
    "id": 12545860,
    "node_id": "MDU6SXNzdWUxMjU0NTg2MA==",
    "number": 1560,
    "title": "Etag not changing",
    "user": {
      "login": "mangvlad",
      "id": 1328123,
      "node_id": "MDQ6VXNlcjEzMjgxMjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1328123?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mangvlad",
      "html_url": "https://github.com/mangvlad",
      "followers_url": "https://api.github.com/users/mangvlad/followers",
      "following_url": "https://api.github.com/users/mangvlad/following{/other_user}",
      "gists_url": "https://api.github.com/users/mangvlad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mangvlad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mangvlad/subscriptions",
      "organizations_url": "https://api.github.com/users/mangvlad/orgs",
      "repos_url": "https://api.github.com/users/mangvlad/repos",
      "events_url": "https://api.github.com/users/mangvlad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mangvlad/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2013-03-28T02:14:24Z",
    "updated_at": "2013-09-07T21:43:44Z",
    "closed_at": "2013-09-07T21:43:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am serving some dynamic content (data API).\nThe operation (GET) supports returning content in two different formats (content types).\n\nFirst request is issued with \"Accept: application/x-type1\" and in the response an Etag header is present/generated.\n\nIn the second response, the client (browser) is setting \"Accept:application/x-type2\" and not changing any other parameters, but \"If-None-Match\" is automatically  included.\n\nMy express application returns 304 for the second request ignoring client's change to the Accept.\n\nThanks.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1560/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1560/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1559",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1559/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1559/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1559/events",
    "html_url": "https://github.com/expressjs/express/issues/1559",
    "id": 12515950,
    "node_id": "MDU6SXNzdWUxMjUxNTk1MA==",
    "number": 1559,
    "title": "example/auth - authentication fails",
    "user": {
      "login": "Dahie",
      "id": 28617,
      "node_id": "MDQ6VXNlcjI4NjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/28617?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dahie",
      "html_url": "https://github.com/Dahie",
      "followers_url": "https://api.github.com/users/Dahie/followers",
      "following_url": "https://api.github.com/users/Dahie/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dahie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dahie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dahie/subscriptions",
      "organizations_url": "https://api.github.com/users/Dahie/orgs",
      "repos_url": "https://api.github.com/users/Dahie/repos",
      "events_url": "https://api.github.com/users/Dahie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dahie/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2013-03-27T15:06:14Z",
    "updated_at": "2013-04-13T16:35:29Z",
    "closed_at": "2013-04-13T16:35:29Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I was trying the examples/auth and it does not work for me. I sat down to track down the issue and found that the comparison of the generated password hashes fails \nhttps://github.com/visionmedia/express/blob/master/examples/auth/app.js#L63:\n\n```\nif (hash == user.hash) return fn(null, user);\n```\n\nhash and user.hash are both SlowBuffers and should be equal:\n\n```\nhash: <SlowBuffer 84 82 cf bf 83 39 ef f6 fa 33 34 32 00 f0 1f 49 cb f7 73 e2 ca 32 07 ac 9d 05 a7 df ac 3a 8a 1f d5 e6 5d 84 c2 48 bb e9 58 a2 60 b6 18 0d b8 22 03 43 4f ...> \nuser.hash: <SlowBuffer 84 82 cf bf 83 39 ef f6 fa 33 34 32 00 f0 1f 49 cb f7 73 e2 ca 32 07 ac 9d 05 a7 df ac 3a 8a 1f d5 e6 5d 84 c2 48 bb e9 58 a2 60 b6 18 0d b8 22 03 43 4f ...>\n```\n\nHowever this always returns false and authentication passes the message, that the password is invalid. \n\nI tried latest revision on the master branch.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1559/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1559/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1558",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1558/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1558/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1558/events",
    "html_url": "https://github.com/expressjs/express/issues/1558",
    "id": 12480810,
    "node_id": "MDU6SXNzdWUxMjQ4MDgxMA==",
    "number": 1558,
    "title": "cannot 'get' on undefined in subdomains getter ",
    "user": {
      "login": "nihildeb",
      "id": 57786,
      "node_id": "MDQ6VXNlcjU3Nzg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/57786?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nihildeb",
      "html_url": "https://github.com/nihildeb",
      "followers_url": "https://api.github.com/users/nihildeb/followers",
      "following_url": "https://api.github.com/users/nihildeb/following{/other_user}",
      "gists_url": "https://api.github.com/users/nihildeb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nihildeb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nihildeb/subscriptions",
      "organizations_url": "https://api.github.com/users/nihildeb/orgs",
      "repos_url": "https://api.github.com/users/nihildeb/repos",
      "events_url": "https://api.github.com/users/nihildeb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nihildeb/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-03-27T01:02:47Z",
    "updated_at": "2013-04-13T16:26:52Z",
    "closed_at": "2013-04-13T16:26:52Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "trying to use vhosts, and getting an undefined object error. \nthis is related to https://github.com/visionmedia/express/pull/1475/\n\nthe code in the pull request seems to be correct, however in my current version of express (3.1.0), line 417 is:\n\n``` javascript\nvar offset = this.main.get('subdomain offset');\n```\n\nand what works (as was correct in the pull request) is:\n\n``` javascript\nvar offset = this.app.get('subdomain offset');\n```\n\nas far as I can tell, the existing tests added by https://github.com/gmethvin should have caught this. I've changed it back to ... this.app ... locally and it's working fine\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1558/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1558/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1557",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1557/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1557/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1557/events",
    "html_url": "https://github.com/expressjs/express/issues/1557",
    "id": 12465994,
    "node_id": "MDU6SXNzdWUxMjQ2NTk5NA==",
    "number": 1557,
    "title": "Cross-context route creation throws error",
    "user": {
      "login": "daguej",
      "id": 354349,
      "node_id": "MDQ6VXNlcjM1NDM0OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/354349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/daguej",
      "html_url": "https://github.com/daguej",
      "followers_url": "https://api.github.com/users/daguej/followers",
      "following_url": "https://api.github.com/users/daguej/following{/other_user}",
      "gists_url": "https://api.github.com/users/daguej/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/daguej/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daguej/subscriptions",
      "organizations_url": "https://api.github.com/users/daguej/orgs",
      "repos_url": "https://api.github.com/users/daguej/repos",
      "events_url": "https://api.github.com/users/daguej/events{/privacy}",
      "received_events_url": "https://api.github.com/users/daguej/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2013-03-26T19:09:50Z",
    "updated_at": "2013-09-08T04:57:00Z",
    "closed_at": "2013-09-08T04:57:00Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Because Express [checks if `path instanceof RegExp`](https://github.com/visionmedia/express/blob/3.1.0/lib/utils.js#L263), it is impossible to create routes with RegExp literals in a separate V8 context.\n\n```\nvar Contextify = require('contextify');\nvar ctx = Contextify({ RegExp:RegExp, app: anExpressApp });\n\nctx.run(\"\n    app.get(new RegExp('...'), function() { ... }); // works because we share the `RegExp` global between contexts\n    app.get(/.../, function() { ... }); // does not work\n\");\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1557/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1557/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1556",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1556/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1556/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1556/events",
    "html_url": "https://github.com/expressjs/express/issues/1556",
    "id": 12460468,
    "node_id": "MDU6SXNzdWUxMjQ2MDQ2OA==",
    "number": 1556,
    "title": "app.get and app.post route interpretation differs",
    "user": {
      "login": "peterschmidler",
      "id": 234022,
      "node_id": "MDQ6VXNlcjIzNDAyMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/234022?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/peterschmidler",
      "html_url": "https://github.com/peterschmidler",
      "followers_url": "https://api.github.com/users/peterschmidler/followers",
      "following_url": "https://api.github.com/users/peterschmidler/following{/other_user}",
      "gists_url": "https://api.github.com/users/peterschmidler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/peterschmidler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/peterschmidler/subscriptions",
      "organizations_url": "https://api.github.com/users/peterschmidler/orgs",
      "repos_url": "https://api.github.com/users/peterschmidler/repos",
      "events_url": "https://api.github.com/users/peterschmidler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/peterschmidler/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-03-26T17:31:57Z",
    "updated_at": "2013-04-13T16:25:20Z",
    "closed_at": "2013-04-13T16:25:20Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hey.\nI have an app.get and app.post with the same route e.g. ('/:page?/:post?) When I log req.params for the uri /foo/bar app.get gives me both 'foo' and 'bar' but app.post gives me only 'foo'. With a trailing slash ( /foo/bar/) both behave similar. Is this a bug or intended behavior. For my usecase it would be nice if both behaved similar.\nThanks and keep up the great work!\nPS\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1556/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1556/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1555",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1555/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1555/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1555/events",
    "html_url": "https://github.com/expressjs/express/issues/1555",
    "id": 12458583,
    "node_id": "MDU6SXNzdWUxMjQ1ODU4Mw==",
    "number": 1555,
    "title": "Express equivalent of res.end(data, 'binary')?",
    "user": {
      "login": "Siyfion",
      "id": 338488,
      "node_id": "MDQ6VXNlcjMzODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/338488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Siyfion",
      "html_url": "https://github.com/Siyfion",
      "followers_url": "https://api.github.com/users/Siyfion/followers",
      "following_url": "https://api.github.com/users/Siyfion/following{/other_user}",
      "gists_url": "https://api.github.com/users/Siyfion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Siyfion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Siyfion/subscriptions",
      "organizations_url": "https://api.github.com/users/Siyfion/orgs",
      "repos_url": "https://api.github.com/users/Siyfion/repos",
      "events_url": "https://api.github.com/users/Siyfion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Siyfion/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 14,
    "created_at": "2013-03-26T16:54:10Z",
    "updated_at": "2018-07-12T18:18:21Z",
    "closed_at": "2013-03-26T17:22:43Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "I'm using PDFKit to generate a PDF file and send it back to the client, I'm having a very unusual error, where I can't get express to send the PDF back in a format that the browser recognises and displays correctly.\n\n```\ndoc.output(function (pdfData) {\n\n    // This works:\n    res.writeHead(200, {'Content-Type': 'application/pdf'});\n    res.end(pdfData, 'binary');\n\n    // This doesn't:\n    res.set('Content-Type', 'application/pdf');\n    res.send(200, new Buffer(pdfData));\n});\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1555/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1555/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1554",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1554/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1554/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1554/events",
    "html_url": "https://github.com/expressjs/express/issues/1554",
    "id": 12443161,
    "node_id": "MDU6SXNzdWUxMjQ0MzE2MQ==",
    "number": 1554,
    "title": "fd leak in pipe()",
    "user": {
      "login": "yuvalkariv",
      "id": 3962138,
      "node_id": "MDQ6VXNlcjM5NjIxMzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3962138?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yuvalkariv",
      "html_url": "https://github.com/yuvalkariv",
      "followers_url": "https://api.github.com/users/yuvalkariv/followers",
      "following_url": "https://api.github.com/users/yuvalkariv/following{/other_user}",
      "gists_url": "https://api.github.com/users/yuvalkariv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yuvalkariv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yuvalkariv/subscriptions",
      "organizations_url": "https://api.github.com/users/yuvalkariv/orgs",
      "repos_url": "https://api.github.com/users/yuvalkariv/repos",
      "events_url": "https://api.github.com/users/yuvalkariv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yuvalkariv/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2013-03-26T10:47:30Z",
    "updated_at": "2013-07-03T18:26:17Z",
    "closed_at": "2013-07-03T18:26:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When serving static files using express.static, if client is doing a GET and disconnect imminently, the static file fd can stay open.\nCode in server: server.js\n\n```\nvar express = require('express')\n  , routes = require('./routes')\n  , http = require('http')\n  , path = require('path');\nvar app = express();\napp.configure(function(){\n  app.set('port', process.env.PORT || 3000);\n  app.use(express.static(path.join(__dirname, 'public')));\n});\nhttp.createServer(app).listen(app.get('port'), function(){\n  console.log(\"Express server listening on port \" + app.get('port'));\n});\n```\n\nSimple test (client) to reproduce: client.js\n\n```\nvar net = require('net');\nvar stream = net.createConnection(3000, \"localhost\");\nstream.end(\"GET /client.html HTTP/1.1\\r\\n\"+\n    \"Connection: close\\r\\n\"+\n    \"Host: localhost\\r\\n\\r\\n\");\n```\n\nRun the server:\n\n```\nnode ./server.js\n```\n\nCreate a CPU load on the server: do this in 4 bash terminals\n\n```\nwhile ((1)); do true; done\n```\n\nNow do client request to create the fd leak from bash:\n\n```\nfor ((i=0; i<100; i++)); do node ./client.js; done\n```\n\nTo view the leak:\n\n```\nls -la /proc/`pgrep node`/fd | grep client.html\n```\n\nWhere is the leak?\nI suspect the there were two leaks in stream.pipe(): one related to error handling with write() fails, and a second related to initial failure (socket closing just before stream.pipe() is called, or during its initial call/setup).\n\nThe first problem (error on write) was fixed in 0.9.5:\nstream: fix event handler leak in readstream pipe and unpipe (Andreas Madsen)). It seems that that fix handled pipe closing during session and not the event that the socket was \n\nThis fixed 90% of the edge cases of the leaks.\n\nThe second problem is not yet fixed, and the above test reproduces it on node 0.10.1.\n\nI am not a node core expert and will be happy to get help addressing this issue.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1554/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1554/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1553",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1553/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1553/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1553/events",
    "html_url": "https://github.com/expressjs/express/issues/1553",
    "id": 12414899,
    "node_id": "MDU6SXNzdWUxMjQxNDg5OQ==",
    "number": 1553,
    "title": "Stylus doesn't work",
    "user": {
      "login": "poliveira89",
      "id": 1919475,
      "node_id": "MDQ6VXNlcjE5MTk0NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1919475?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/poliveira89",
      "html_url": "https://github.com/poliveira89",
      "followers_url": "https://api.github.com/users/poliveira89/followers",
      "following_url": "https://api.github.com/users/poliveira89/following{/other_user}",
      "gists_url": "https://api.github.com/users/poliveira89/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/poliveira89/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/poliveira89/subscriptions",
      "organizations_url": "https://api.github.com/users/poliveira89/orgs",
      "repos_url": "https://api.github.com/users/poliveira89/repos",
      "events_url": "https://api.github.com/users/poliveira89/events{/privacy}",
      "received_events_url": "https://api.github.com/users/poliveira89/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-03-25T18:48:13Z",
    "updated_at": "2013-04-13T16:19:51Z",
    "closed_at": "2013-04-13T16:19:51Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have a project that uses Express and Coffeescript, and with some dependencies such as Stylus, Nib and Blueprint-stylus.\n\nBut, when I try to use them to compile .styl to .css this code:\n\n``` coffee\napp.use stylus.middleware(\n    src: __dirname + \"/src\"\n    dest: __dirname + \"/public\"\n    compile: (str, path) ->\n      stylus(str).set(\"filename\", path).set(\"warn\", true).set(\"compress\", false).set(\"paths\", [ require(\"stylus-blueprint\") ]).use nib()\n  )\n```\n\nDoesn't work. I can't figure out why, supposedly it's correct and well-written. \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1553/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1553/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1552",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1552/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1552/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1552/events",
    "html_url": "https://github.com/expressjs/express/issues/1552",
    "id": 12311918,
    "node_id": "MDU6SXNzdWUxMjMxMTkxOA==",
    "number": 1552,
    "title": "Which coding standards are used  to develop express?",
    "user": {
      "login": "justin-john",
      "id": 2345128,
      "node_id": "MDQ6VXNlcjIzNDUxMjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2345128?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/justin-john",
      "html_url": "https://github.com/justin-john",
      "followers_url": "https://api.github.com/users/justin-john/followers",
      "following_url": "https://api.github.com/users/justin-john/following{/other_user}",
      "gists_url": "https://api.github.com/users/justin-john/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/justin-john/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/justin-john/subscriptions",
      "organizations_url": "https://api.github.com/users/justin-john/orgs",
      "repos_url": "https://api.github.com/users/justin-john/repos",
      "events_url": "https://api.github.com/users/justin-john/events{/privacy}",
      "received_events_url": "https://api.github.com/users/justin-john/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-03-22T09:35:33Z",
    "updated_at": "2013-03-22T14:38:44Z",
    "closed_at": "2013-03-22T14:38:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Which coding standard definition are being used by express or Is there any coding standards defined by express itself for development?\n\nIs there any code standard testing tool is being used? If so, which tool is used and please provide the docs specifying the standards etc.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1552/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1552/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1551",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1551/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1551/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1551/events",
    "html_url": "https://github.com/expressjs/express/issues/1551",
    "id": 12276936,
    "node_id": "MDU6SXNzdWUxMjI3NjkzNg==",
    "number": 1551,
    "title": "Socket.io and express",
    "user": {
      "login": "arcthur",
      "id": 322331,
      "node_id": "MDQ6VXNlcjMyMjMzMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/322331?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arcthur",
      "html_url": "https://github.com/arcthur",
      "followers_url": "https://api.github.com/users/arcthur/followers",
      "following_url": "https://api.github.com/users/arcthur/following{/other_user}",
      "gists_url": "https://api.github.com/users/arcthur/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arcthur/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arcthur/subscriptions",
      "organizations_url": "https://api.github.com/users/arcthur/orgs",
      "repos_url": "https://api.github.com/users/arcthur/repos",
      "events_url": "https://api.github.com/users/arcthur/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arcthur/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-03-21T14:29:18Z",
    "updated_at": "2013-04-13T16:19:17Z",
    "closed_at": "2013-04-13T16:19:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi TJ,\nI built a app used socket.io and express, and use the some port. I want to use different port server now. What does code write?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1551/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1551/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1550",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1550/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1550/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1550/events",
    "html_url": "https://github.com/expressjs/express/pull/1550",
    "id": 12170708,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDY4Njk0OQ==",
    "number": 1550,
    "title": "Fix arrays of paths and add test cases",
    "user": {
      "login": "adrianheine",
      "id": 139208,
      "node_id": "MDQ6VXNlcjEzOTIwOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/139208?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adrianheine",
      "html_url": "https://github.com/adrianheine",
      "followers_url": "https://api.github.com/users/adrianheine/followers",
      "following_url": "https://api.github.com/users/adrianheine/following{/other_user}",
      "gists_url": "https://api.github.com/users/adrianheine/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adrianheine/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adrianheine/subscriptions",
      "organizations_url": "https://api.github.com/users/adrianheine/orgs",
      "repos_url": "https://api.github.com/users/adrianheine/repos",
      "events_url": "https://api.github.com/users/adrianheine/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adrianheine/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2013-03-19T08:44:39Z",
    "updated_at": "2013-04-01T18:12:21Z",
    "closed_at": "2013-04-01T18:12:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1550",
      "html_url": "https://github.com/expressjs/express/pull/1550",
      "diff_url": "https://github.com/expressjs/express/pull/1550.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1550.patch",
      "merged_at": null
    },
    "body": "In 28d7750eda15594a551ce834c16c168f55bca502, support for routing arrays of paths was introduced:\n\n```\napp.get(['/about', '/contact', '/imprint'], function () {\n  // …\n});\n```\n\nUnfortunately, params are not mapped correctly in this case. Moreover, there are no test cases for this feature. This pull request fixes both.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1550/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1550/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1549",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1549/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1549/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1549/events",
    "html_url": "https://github.com/expressjs/express/issues/1549",
    "id": 12167573,
    "node_id": "MDU6SXNzdWUxMjE2NzU3Mw==",
    "number": 1549,
    "title": "Passing path as an array runs callbacks before parameter callbacks",
    "user": {
      "login": "chrisfosterelli",
      "id": 2072672,
      "node_id": "MDQ6VXNlcjIwNzI2NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2072672?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chrisfosterelli",
      "html_url": "https://github.com/chrisfosterelli",
      "followers_url": "https://api.github.com/users/chrisfosterelli/followers",
      "following_url": "https://api.github.com/users/chrisfosterelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/chrisfosterelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chrisfosterelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chrisfosterelli/subscriptions",
      "organizations_url": "https://api.github.com/users/chrisfosterelli/orgs",
      "repos_url": "https://api.github.com/users/chrisfosterelli/repos",
      "events_url": "https://api.github.com/users/chrisfosterelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chrisfosterelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 16,
    "created_at": "2013-03-19T05:59:00Z",
    "updated_at": "2014-08-21T01:09:52Z",
    "closed_at": "2013-06-03T21:50:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "On Express 3.1, passing an array of paths will have them run before the parameter callback. I have a parameter set via a app.param('dog') call that sets req.dog, and while this code works:\n\n```\n  app.all('/api/v1/dog/:dog/s', function(req, res, next) {\n    console.log(req.dog);\n    next();\n  });\n  app.all('/api/v1/dog/:dog/b', function(req, res, next) {\n    console.log(req.dog);\n    next();\n  });\n```\n\nThis code crashes with an undefined error:\n\n```\n  app.all(['/api/v1/dog/:dog/s',\n           '/api/v1/dog/:dog/b'], function(req, res, next) {\n    console.log(req.dog);\n    next();\n  });\n```\n\nBasic placing on console.log() calls shows that the parameter is being ran _after_ the app.all call that is passed the array, while it runs before in the first scenario.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1549/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1549/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1548",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1548/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1548/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1548/events",
    "html_url": "https://github.com/expressjs/express/issues/1548",
    "id": 12148352,
    "node_id": "MDU6SXNzdWUxMjE0ODM1Mg==",
    "number": 1548,
    "title": "`this` should not become undefined in middleware",
    "user": {
      "login": "thatmarvin",
      "id": 646125,
      "node_id": "MDQ6VXNlcjY0NjEyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/646125?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thatmarvin",
      "html_url": "https://github.com/thatmarvin",
      "followers_url": "https://api.github.com/users/thatmarvin/followers",
      "following_url": "https://api.github.com/users/thatmarvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/thatmarvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thatmarvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thatmarvin/subscriptions",
      "organizations_url": "https://api.github.com/users/thatmarvin/orgs",
      "repos_url": "https://api.github.com/users/thatmarvin/repos",
      "events_url": "https://api.github.com/users/thatmarvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thatmarvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2013-03-18T18:56:00Z",
    "updated_at": "2013-03-18T19:38:37Z",
    "closed_at": "2013-03-18T19:38:37Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "https://gist.github.com/thatmarvin/5189720\n\nIf you run the server in the gist above with latest Express 2.x and hit the url `/1`, you'll see that `this` is undefined. However, `/2` works correctly.\n\nThis isn't reproducible in Express 3.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1548/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1548/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  }
]