[
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4302",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4302/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4302/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4302/events",
    "html_url": "https://github.com/expressjs/express/issues/4302",
    "id": 628449808,
    "node_id": "MDU6SXNzdWU2Mjg0NDk4MDg=",
    "number": 4302,
    "title": "[Feature Request] Allow view engine extensions containing dots",
    "user": {
      "login": "AndrewLeedham",
      "id": 5557458,
      "node_id": "MDQ6VXNlcjU1NTc0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5557458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AndrewLeedham",
      "html_url": "https://github.com/AndrewLeedham",
      "followers_url": "https://api.github.com/users/AndrewLeedham/followers",
      "following_url": "https://api.github.com/users/AndrewLeedham/following{/other_user}",
      "gists_url": "https://api.github.com/users/AndrewLeedham/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AndrewLeedham/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AndrewLeedham/subscriptions",
      "organizations_url": "https://api.github.com/users/AndrewLeedham/orgs",
      "repos_url": "https://api.github.com/users/AndrewLeedham/repos",
      "events_url": "https://api.github.com/users/AndrewLeedham/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AndrewLeedham/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-06-01T13:45:47Z",
    "updated_at": "2020-06-01T15:11:31Z",
    "closed_at": "2020-06-01T13:47:53Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This is definitely an edge case, but I am wondering how feasible it would be. What I would like to do is register a templating engine to use the extension `data.ts` and have express resolve templates like `default.data.ts` but it seems currently only single extensions (without a dot) are supported e.g just `ts`.\r\n\r\nI guess express would have to match more dots before trimming the left-most until it finds a registered engine. E.g: `component.blah.ext.handlebars` would check for `blah.ext.handlebars`, then `ext.handlebars`, then `handlebars`.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4302/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4302/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4301",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4301/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4301/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4301/events",
    "html_url": "https://github.com/expressjs/express/issues/4301",
    "id": 627739862,
    "node_id": "MDU6SXNzdWU2Mjc3Mzk4NjI=",
    "number": 4301,
    "title": " TypeError: Router.use() requires a middleware function but got a undefined",
    "user": {
      "login": "anna-rmrf",
      "id": 64837230,
      "node_id": "MDQ6VXNlcjY0ODM3MjMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/64837230?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anna-rmrf",
      "html_url": "https://github.com/anna-rmrf",
      "followers_url": "https://api.github.com/users/anna-rmrf/followers",
      "following_url": "https://api.github.com/users/anna-rmrf/following{/other_user}",
      "gists_url": "https://api.github.com/users/anna-rmrf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anna-rmrf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anna-rmrf/subscriptions",
      "organizations_url": "https://api.github.com/users/anna-rmrf/orgs",
      "repos_url": "https://api.github.com/users/anna-rmrf/repos",
      "events_url": "https://api.github.com/users/anna-rmrf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anna-rmrf/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-05-30T14:10:36Z",
    "updated_at": "2020-06-03T06:18:26Z",
    "closed_at": "2020-06-03T06:18:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**/routes/index.js**\r\n\r\n```js\r\nconst panel = require('express').Router()\r\nconst SettingsRouter = require('./user/settings') \r\n\r\nconsole.log(SettingsRouter) //[Function: router] {........}\r\n\r\npanel.use(\"/:ID\", SettingsRouter); //TypeError: Router.use() requires a middleware function but got a undefined\r\nmodule.exports = panel;\r\n```\r\n\r\n\r\n**/routes/user/settings.js**\r\n```js\r\nconst settings = require('express').Router({ mergeParams: true });\r\nsettings.get(\"/achievements\", async(req, res) => {\r\n.....\r\n})\r\nmodule.exports = settings;\r\n``` \r\n\r\n\r\nI'm getting an error as shown above.... I literally don't know what I have done wrong..",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4301/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4301/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4300",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4300/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4300/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4300/events",
    "html_url": "https://github.com/expressjs/express/issues/4300",
    "id": 627635645,
    "node_id": "MDU6SXNzdWU2Mjc2MzU2NDU=",
    "number": 4300,
    "title": "Multiple static paths to support multiple react apps in one single server",
    "user": {
      "login": "vadymrybak",
      "id": 38698086,
      "node_id": "MDQ6VXNlcjM4Njk4MDg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/38698086?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vadymrybak",
      "html_url": "https://github.com/vadymrybak",
      "followers_url": "https://api.github.com/users/vadymrybak/followers",
      "following_url": "https://api.github.com/users/vadymrybak/following{/other_user}",
      "gists_url": "https://api.github.com/users/vadymrybak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vadymrybak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vadymrybak/subscriptions",
      "organizations_url": "https://api.github.com/users/vadymrybak/orgs",
      "repos_url": "https://api.github.com/users/vadymrybak/repos",
      "events_url": "https://api.github.com/users/vadymrybak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vadymrybak/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2020-05-30T02:42:46Z",
    "updated_at": "2020-06-04T14:11:37Z",
    "closed_at": "2020-06-04T14:11:37Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Express 4.17.1.\r\nI have a simple express server with two built(compressed) React applications. Folder structure as below.\r\n- clients\r\n    - ops_ui\r\n       - static\r\n         index.html\r\n    - wf_ui\r\n       - static\r\n       index.html\r\n- server\r\n  index.ts\r\n\r\nThe short code in server's index.ts:\r\n```\r\nexport const app: Express = express();\r\n\r\nconst app_build: string = '../clients/ops_ui';\r\nconst wf_build: string = '../clients/wf_ui';\r\n\r\napp.use(express.static(app_build));\r\napp.use(express.static(wf_build));\r\n\r\napp.get('/wf', (req: Request, res: Response) => {\r\n  res.sendFile('index.html', { root: wf_build });\r\n});\r\napp.get('*', (req: Request, res: Response) => {\r\n  res.sendFile('index.html', { root: app_build });\r\n});\r\n```\r\n\r\nThe **wf_ui** app is single route, but **ops_ui** is using react router, so it can have /home or /orders routes.\r\n\r\nThis code does not work. Mozilla and Chrome behave differently. \r\n\r\nIn **Mozilla** accessing localhost:8097/wf gives proper wf_ui but on the second refresh gives ops_ui. After another refresh it returns wf_ui again and then everything repeats all over again.\r\n\r\nIn **Chrome** localhost:8097/wf always give wf_ui app but going back to localhost:8097 still gives wf_ui app. Refreshing just localhost:8097 results in returning wf_ui for some reason. Only doing Hard reset in Chrome will give me ops_ui.\r\n\r\nCan anybody explain me, what I'm doing wrong in this setup? How to properly code such situation when I have two independent React compressed application in two separate folders and I want to access WF_UI only if I specify /wf and i want to access OPS_UI when i request any other route(*)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4300/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4300/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4299",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4299/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4299/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4299/events",
    "html_url": "https://github.com/expressjs/express/issues/4299",
    "id": 626965293,
    "node_id": "MDU6SXNzdWU2MjY5NjUyOTM=",
    "number": 4299,
    "title": "var statuses = require('statuses') on line 24 missing semicolon",
    "user": {
      "login": "phpjsnerd",
      "id": 20193429,
      "node_id": "MDQ6VXNlcjIwMTkzNDI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/20193429?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phpjsnerd",
      "html_url": "https://github.com/phpjsnerd",
      "followers_url": "https://api.github.com/users/phpjsnerd/followers",
      "following_url": "https://api.github.com/users/phpjsnerd/following{/other_user}",
      "gists_url": "https://api.github.com/users/phpjsnerd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phpjsnerd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phpjsnerd/subscriptions",
      "organizations_url": "https://api.github.com/users/phpjsnerd/orgs",
      "repos_url": "https://api.github.com/users/phpjsnerd/repos",
      "events_url": "https://api.github.com/users/phpjsnerd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phpjsnerd/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-05-29T03:10:56Z",
    "updated_at": "2020-05-29T03:16:10Z",
    "closed_at": "2020-05-29T03:13:02Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "on the response.js semicolon is missing. \r\nhttps://github.com/expressjs/express/blob/master/lib/response.js\r\n\r\n```javascript\r\nvar onFinished = require('on-finished');\r\nvar path = require('path');\r\nvar statuses = require('statuses')\r\nvar merge = require('utils-merge');\r\n```\r\nCan we keep this consistent? so is there any problem adding the semicolon or is it purposefully not added semicolon?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4299/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4299/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4298",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4298/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4298/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4298/events",
    "html_url": "https://github.com/expressjs/express/issues/4298",
    "id": 626883806,
    "node_id": "MDU6SXNzdWU2MjY4ODM4MDY=",
    "number": 4298,
    "title": "req.params undefined with unspecified res.format default",
    "user": {
      "login": "CullenShane",
      "id": 597786,
      "node_id": "MDQ6VXNlcjU5Nzc4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/597786?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CullenShane",
      "html_url": "https://github.com/CullenShane",
      "followers_url": "https://api.github.com/users/CullenShane/followers",
      "following_url": "https://api.github.com/users/CullenShane/following{/other_user}",
      "gists_url": "https://api.github.com/users/CullenShane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CullenShane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CullenShane/subscriptions",
      "organizations_url": "https://api.github.com/users/CullenShane/orgs",
      "repos_url": "https://api.github.com/users/CullenShane/repos",
      "events_url": "https://api.github.com/users/CullenShane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CullenShane/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2020-05-28T23:25:09Z",
    "updated_at": "2020-07-10T16:37:23Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello everybody,\r\n\r\nI'm using Express 4.17.1 and I ran into a problem where `req.params` is undefined in an `onFinished` call back that I recently added for error logging.\r\n\r\nI have a middleware which listens to `onFinished` and inspects the `req.params` for error logging.\r\nI also use `res.format` to choose between two different supported `Accept:` headers, but I don't specify a default since the documentation says it will return a 406 if unhandled, which is what I want.  I have a test that ensures that my server returns a 406 according to the documentation.\r\n\r\nMy 406 test fails because `req.params` is undefined so I can't navigate further into the object.  When I was trying to sort that out I added a `\"default\"` handler to `res.format` and then the `req.params` object was valid and parsed correctly.\r\n\r\nAdditionally, I discovered that `req.params` is parsed properly when in my controller (before the call to `res.format`), but the version of the `req.params` that is passed into `onFinished` later in that same request is undefined.\r\n\r\nIs the the expected behavior?  The documentation and behavior makes me think this is unexpected.\r\n\r\nI can provide more information if needed\r\n\r\nThanks",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4298/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4298/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4296",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4296/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4296/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4296/events",
    "html_url": "https://github.com/expressjs/express/issues/4296",
    "id": 625425213,
    "node_id": "MDU6SXNzdWU2MjU0MjUyMTM=",
    "number": 4296,
    "title": "[question] Routes management",
    "user": {
      "login": "robertsLando",
      "id": 11502495,
      "node_id": "MDQ6VXNlcjExNTAyNDk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/11502495?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/robertsLando",
      "html_url": "https://github.com/robertsLando",
      "followers_url": "https://api.github.com/users/robertsLando/followers",
      "following_url": "https://api.github.com/users/robertsLando/following{/other_user}",
      "gists_url": "https://api.github.com/users/robertsLando/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/robertsLando/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/robertsLando/subscriptions",
      "organizations_url": "https://api.github.com/users/robertsLando/orgs",
      "repos_url": "https://api.github.com/users/robertsLando/repos",
      "events_url": "https://api.github.com/users/robertsLando/events{/privacy}",
      "received_events_url": "https://api.github.com/users/robertsLando/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 11,
    "created_at": "2020-05-27T06:44:46Z",
    "updated_at": "2020-05-27T15:16:53Z",
    "closed_at": "2020-05-27T13:25:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi everyone. I have a server that supports plugins that can be added on runtime, those plugins can add new routes to the server, the problem is that at the end of my routes I have an error handler like:\r\n\r\n```js\r\napp.use(function (req, res, next) {\r\n    var err = new Error('Not Found');\r\n    err.status = 404;\r\n    next(err);\r\n  });\r\n\r\n  // error handler\r\n  app.use(function (err, req, res, next) {\r\n    // set locals, only providing error in development\r\n    res.locals.message = err.message;\r\n    res.locals.error = req.app.get('env') === 'development' ? err : {};\r\n\r\n    logger.warn(`${err.status || 500} - ${err.message} - ${req.originalUrl} - ${req.method} - ${req.ip}`);\r\n\r\n    // render the error page\r\n    res.status(err.status || 500);\r\n    res.render('error.ejs', {\r\n      status: err.status || 500\r\n    });\r\n  });\r\n```\r\n\r\nWhen I init the plugin the route is added but never called as it has been inited after this error handlers, so how could I manage this? ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4296/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4296/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4294",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4294/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4294/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4294/events",
    "html_url": "https://github.com/expressjs/express/issues/4294",
    "id": 624065531,
    "node_id": "MDU6SXNzdWU2MjQwNjU1MzE=",
    "number": 4294,
    "title": "Static and databases",
    "user": {
      "login": "BumpyBill",
      "id": 62362511,
      "node_id": "MDQ6VXNlcjYyMzYyNTEx",
      "avatar_url": "https://avatars.githubusercontent.com/u/62362511?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BumpyBill",
      "html_url": "https://github.com/BumpyBill",
      "followers_url": "https://api.github.com/users/BumpyBill/followers",
      "following_url": "https://api.github.com/users/BumpyBill/following{/other_user}",
      "gists_url": "https://api.github.com/users/BumpyBill/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BumpyBill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BumpyBill/subscriptions",
      "organizations_url": "https://api.github.com/users/BumpyBill/orgs",
      "repos_url": "https://api.github.com/users/BumpyBill/repos",
      "events_url": "https://api.github.com/users/BumpyBill/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BumpyBill/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-05-25T05:57:36Z",
    "updated_at": "2020-05-26T16:38:05Z",
    "closed_at": "2020-05-26T16:38:05Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello! I'm using firebase for my project's database. Im just wondering how I can serve a static file in my database (I  know that probably doesn't  make sense). Here's  what I mean:\r\n```app.use('/static', express.static('https://imigy-d2ea7.firebaseio.com/'))```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4294/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4294/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4293",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4293/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4293/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4293/events",
    "html_url": "https://github.com/expressjs/express/pull/4293",
    "id": 623950371,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDIyNDczNDEz",
    "number": 4293,
    "title": "Advanced-search example added in example directory",
    "user": {
      "login": "Nondukishor",
      "id": 26400522,
      "node_id": "MDQ6VXNlcjI2NDAwNTIy",
      "avatar_url": "https://avatars.githubusercontent.com/u/26400522?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Nondukishor",
      "html_url": "https://github.com/Nondukishor",
      "followers_url": "https://api.github.com/users/Nondukishor/followers",
      "following_url": "https://api.github.com/users/Nondukishor/following{/other_user}",
      "gists_url": "https://api.github.com/users/Nondukishor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Nondukishor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Nondukishor/subscriptions",
      "organizations_url": "https://api.github.com/users/Nondukishor/orgs",
      "repos_url": "https://api.github.com/users/Nondukishor/repos",
      "events_url": "https://api.github.com/users/Nondukishor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Nondukishor/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2020-05-24T21:31:03Z",
    "updated_at": "2020-07-11T00:39:16Z",
    "closed_at": "2020-07-11T00:39:16Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4293",
      "html_url": "https://github.com/expressjs/express/pull/4293",
      "diff_url": "https://github.com/expressjs/express/pull/4293.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4293.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4293/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4293/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4292",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4292/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4292/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4292/events",
    "html_url": "https://github.com/expressjs/express/issues/4292",
    "id": 623793926,
    "node_id": "MDU6SXNzdWU2MjM3OTM5MjY=",
    "number": 4292,
    "title": "res.download() produces blank file",
    "user": {
      "login": "charlieroth",
      "id": 13981427,
      "node_id": "MDQ6VXNlcjEzOTgxNDI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/13981427?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charlieroth",
      "html_url": "https://github.com/charlieroth",
      "followers_url": "https://api.github.com/users/charlieroth/followers",
      "following_url": "https://api.github.com/users/charlieroth/following{/other_user}",
      "gists_url": "https://api.github.com/users/charlieroth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charlieroth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charlieroth/subscriptions",
      "organizations_url": "https://api.github.com/users/charlieroth/orgs",
      "repos_url": "https://api.github.com/users/charlieroth/repos",
      "events_url": "https://api.github.com/users/charlieroth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charlieroth/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-05-24T04:47:41Z",
    "updated_at": "2022-02-11T13:31:18Z",
    "closed_at": "2020-05-24T14:48:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am attempting to generate a CSV file and download it into my React application. Whenever I hit this endpoint the browser always downloads a blank file but when I open it with `open filename.csv` , it has the data as expected. I don't know if this is on the React end or on the express end but I figured I would start here. \r\n\r\nMy thoughts are that it has to do with me using `os.tmpdir()` but it runs as if it succeeds so no helpful debug. I logged the `csvStream.on(\"data\")` event and it was writing to the file properly. It seems that `res.download()` does not like the directory it is reading from. Can this be confirmed? Would a directory like `/var/folders/j_/43f_ppvn1y5_w7h24ng8yq440000gn/T/node-lab.csv` cause `res.download()` to produce a blank file?\r\n\r\n```\r\nnode: 14.3.0\r\nexpress: ^4.17.1\r\nreact: ^16.13.1\r\nreact-dom: ^16.13.1\r\n```\r\n\r\n### router.ts\r\n```\r\nrouter.get(\"/gen-csv\", async (_req: Request, res: Response) => {\r\n  const mockColumns = getMockColumns();\r\n  const headerRow = mockColumns.map((col) => col.fullName);\r\n  const filepath = path.resolve(os.tmpdir(), \"node-lab.csv\")\r\n  console.log(\"filepath: \", filepath)\r\n  const fileWriteStream = fs.createWriteStream(filepath)\r\n  const csvStream = format({headers: headerRow})\r\n  csvStream.pipe(fileWriteStream)\r\n\r\n  const rows = [\"fullName\", \"jobTitle\", \"jobArea\", \"jobType\"]\r\n  rows.forEach((row: string) => {\r\n    const templateRow = mockColumns.reduce((acc: any, col: MockColumn) => {\r\n      return {...acc, [col.fullName]: col[row]}\r\n    }, {})\r\n    csvStream.write(templateRow)\r\n  })\r\n\r\n  // close csvStream\r\n  // ...\r\n\r\n  res.download(filepath, \"node-lab.csv\", (err: Error) => {\r\n    if (err) {\r\n      console.error(err)\r\n    } else {\r\n      console.log(\"Generated CSV!!\")\r\n    }\r\n  })\r\n})\r\n```\r\n\r\n\r\n### server.ts\r\n```\r\nimport express from \"express\"\r\nimport cors from \"cors\"\r\nimport http from \"http\"\r\nimport morgan from \"morgan\"\r\nimport bodyParser from \"body-parser\"\r\nimport {createTerminus} from \"@godaddy/terminus\"\r\nimport router from \"./router\"\r\n\r\nconst PORT = process.env.PORT || 4000\r\nconst app = express()\r\n\r\napp.use(cors())\r\napp.use(morgan(\"dev\"))\r\napp.use(bodyParser.json())\r\napp.use(router);\r\n\r\n// godaddy/terminus stuff ...\r\n\r\nserver.listen(PORT, () => {\r\n  console.log(\"Server listening on port http:localhost:4000\")\r\n})\r\n```\r\n\r\n\r\n### App.js\r\n```\r\nimport React from \"react\"\r\n\r\nfunction App() {\r\n  const [loading, setLoading] = React.useState(false)\r\n\r\n  const handleGenerateCSV = async (e) => {\r\n    e.preventDefault()\r\n    const res = await fetch(\"http://localhost:4000/gen-csv\")\r\n    const blob = await res.blob()\r\n    const url = window.URL.createObjectURL(new Blob([blob]))\r\n    const link = document.createElement(\"a\")\r\n    link.href = url\r\n    link.setAttribute(\"download\", \"node-lab.csv\")\r\n    document.body.appendChild(link)\r\n    link.click()\r\n    link.parentNode.removeChild(link)\r\n    setLoading(false)\r\n  }\r\n\r\n  const isLoading = () => {\r\n    if (loading) return <h3>Loading...</h3>\r\n    else return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>React Lab</h1>\r\n      <button onClick={(e) => {\r\n        setLoading(true)\r\n        handleGenerateCSV(e)\r\n      }}>Generate CSV</button>\r\n      {isLoading()}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n```\r\n\r\nWhen I log the blob this is the result: \r\n```\r\nBlob {\r\n  size: 0, \r\n  type: \"text/csv\"\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4292/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4292/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4291",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4291/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4291/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4291/events",
    "html_url": "https://github.com/expressjs/express/pull/4291",
    "id": 623138500,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDIxODYzODE2",
    "number": 4291,
    "title": "Fix a small typo in History.md",
    "user": {
      "login": "gu-stav",
      "id": 2244375,
      "node_id": "MDQ6VXNlcjIyNDQzNzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2244375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gu-stav",
      "html_url": "https://github.com/gu-stav",
      "followers_url": "https://api.github.com/users/gu-stav/followers",
      "following_url": "https://api.github.com/users/gu-stav/following{/other_user}",
      "gists_url": "https://api.github.com/users/gu-stav/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gu-stav/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gu-stav/subscriptions",
      "organizations_url": "https://api.github.com/users/gu-stav/orgs",
      "repos_url": "https://api.github.com/users/gu-stav/repos",
      "events_url": "https://api.github.com/users/gu-stav/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gu-stav/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-05-22T11:18:11Z",
    "updated_at": "2020-05-22T11:18:59Z",
    "closed_at": "2020-05-22T11:18:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4291",
      "html_url": "https://github.com/expressjs/express/pull/4291",
      "diff_url": "https://github.com/expressjs/express/pull/4291.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4291.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4291/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4291/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4290",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4290/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4290/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4290/events",
    "html_url": "https://github.com/expressjs/express/issues/4290",
    "id": 622573151,
    "node_id": "MDU6SXNzdWU2MjI1NzMxNTE=",
    "number": 4290,
    "title": " Request triager role for e-l-i-s-e",
    "user": {
      "login": "e-l-i-s-e",
      "id": 33100935,
      "node_id": "MDQ6VXNlcjMzMTAwOTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/33100935?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/e-l-i-s-e",
      "html_url": "https://github.com/e-l-i-s-e",
      "followers_url": "https://api.github.com/users/e-l-i-s-e/followers",
      "following_url": "https://api.github.com/users/e-l-i-s-e/following{/other_user}",
      "gists_url": "https://api.github.com/users/e-l-i-s-e/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/e-l-i-s-e/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/e-l-i-s-e/subscriptions",
      "organizations_url": "https://api.github.com/users/e-l-i-s-e/orgs",
      "repos_url": "https://api.github.com/users/e-l-i-s-e/repos",
      "events_url": "https://api.github.com/users/e-l-i-s-e/events{/privacy}",
      "received_events_url": "https://api.github.com/users/e-l-i-s-e/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-05-21T15:18:14Z",
    "updated_at": "2020-05-29T00:10:54Z",
    "closed_at": "2020-05-24T17:06:32Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "I have read and understood the project's Code of Conduct.\r\nI also have read and understood the process and best practices around Express triaging.\r\nI request for a triager role for the following GitHub organizations:\r\njshttp\r\npillarjs\r\nexpress",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4290/reactions",
      "total_count": 6,
      "+1": 0,
      "-1": 0,
      "laugh": 2,
      "hooray": 4,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4290/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4288",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4288/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4288/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4288/events",
    "html_url": "https://github.com/expressjs/express/issues/4288",
    "id": 621740861,
    "node_id": "MDU6SXNzdWU2MjE3NDA4NjE=",
    "number": 4288,
    "title": "req.query does not work as stated in the docs",
    "user": {
      "login": "cado0626",
      "id": 22068550,
      "node_id": "MDQ6VXNlcjIyMDY4NTUw",
      "avatar_url": "https://avatars.githubusercontent.com/u/22068550?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cado0626",
      "html_url": "https://github.com/cado0626",
      "followers_url": "https://api.github.com/users/cado0626/followers",
      "following_url": "https://api.github.com/users/cado0626/following{/other_user}",
      "gists_url": "https://api.github.com/users/cado0626/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cado0626/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cado0626/subscriptions",
      "organizations_url": "https://api.github.com/users/cado0626/orgs",
      "repos_url": "https://api.github.com/users/cado0626/repos",
      "events_url": "https://api.github.com/users/cado0626/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cado0626/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-05-20T12:56:37Z",
    "updated_at": "2020-05-21T05:04:09Z",
    "closed_at": "2020-05-21T05:04:09Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "`// GET /shoes?color[]=blue&color[]=black&color[]=red\r\nconsole.dir(req.query.color)\r\n// => ['blue', 'black', 'red']`\r\n\r\nthis snippet is from the express docs, when I try\r\n`// GET /shoes?color[]=blue&color[]=black&color[]=red\r\nconsole.dir(req.query.color)`,\r\nI get only `red`",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4288/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4288/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4287",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4287/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4287/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4287/events",
    "html_url": "https://github.com/expressjs/express/pull/4287",
    "id": 621425917,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDIwNDc5NDkz",
    "number": 4287,
    "title": "Release 4.18",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 113897193,
        "node_id": "MDU6TGFiZWwxMTM4OTcxOTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/release",
        "name": "release",
        "color": "000000",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/18",
      "html_url": "https://github.com/expressjs/express/milestone/18",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/18/labels",
      "id": 5234171,
      "node_id": "MDk6TWlsZXN0b25lNTIzNDE3MQ==",
      "number": 18,
      "title": "4.18",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 15,
      "state": "closed",
      "created_at": "2020-03-24T23:16:48Z",
      "updated_at": "2022-04-24T22:50:58Z",
      "due_on": null,
      "closed_at": "2022-04-24T22:50:58Z"
    },
    "comments": 3,
    "created_at": "2020-05-20T03:12:47Z",
    "updated_at": "2022-09-13T21:42:04Z",
    "closed_at": "2022-04-24T22:48:05Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4287",
      "html_url": "https://github.com/expressjs/express/pull/4287",
      "diff_url": "https://github.com/expressjs/express/pull/4287.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4287.patch",
      "merged_at": "2022-04-24T22:48:05Z"
    },
    "body": "This is a tracking issue for release 4.18.\r\n\r\n**Please keep feature requests in their own issues**\r\n\r\nIf you want to make a comment on a particular change, please make the comment in the \"Files changed\" tab so comments are not lost during a rebase.\r\n\r\nList of changes for release:\r\n- [x] Add \"root\" option to `res.download` #4834 #4855 \r\n- [x] Allow `options` without `filename` in `res.download`\r\n- [x] Deprecate non-integer status codes in `res.status` #4223\r\n- [x] Fix behavior of non-number `maxAge` in `res.cookie` #3935 #3936\r\n- [x] Fix handling very large stacks of sync middleware #4891 \r\n- [x] Ignore `Object.prototype` values in settings through `app.set`/`app.get` #4802 #4803\r\n- [x] Invoke default with same arguments as types in `res.format` #3587\r\n- [x] Support Node.js 15.x #4767\r\n- [x] Support Node.js 16.x #4767\r\n- [x] Support Node.js 17.x\r\n- [x] Support Node.js 18.x\r\n- [x] Support proper 205 responses using `res.send` #4592 #4596\r\n- [x] Use `http-errors` for `res.format` error\r\n- [x] Upgrade `body-parser` to 1.20.0\r\n- [x] Upgrade `cookie` to 0.5.0\r\n- [x] Upgrade `depd` to 2.0.0 #4174\r\n- [x] Upgrade `finalhandler` to 1.2.0\r\n- [x] Upgrade `send` to 0.18.0\r\n- [x] Upgrade `serve-static` to 1.15.0\r\n- [x] Upgrade `statuses` to 2.0.1 #4336\r\n\r\n**Testing this release**\r\n\r\nIf you want to try out this release, you can install it with the following commands:\r\n\r\n``` bash\r\n$ npm cache clean express\r\n$ npm install expressjs/express#4.18\r\n```\r\n\r\nOwners/collaborators: please do not merge this PR :)",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4287/reactions",
      "total_count": 14,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 10,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4287/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4286",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4286/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4286/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4286/events",
    "html_url": "https://github.com/expressjs/express/pull/4286",
    "id": 620767423,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDE5OTQ4OTAy",
    "number": 4286,
    "title": "Fixed typo of the History.md",
    "user": {
      "login": "SaveYourTime",
      "id": 35715664,
      "node_id": "MDQ6VXNlcjM1NzE1NjY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/35715664?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SaveYourTime",
      "html_url": "https://github.com/SaveYourTime",
      "followers_url": "https://api.github.com/users/SaveYourTime/followers",
      "following_url": "https://api.github.com/users/SaveYourTime/following{/other_user}",
      "gists_url": "https://api.github.com/users/SaveYourTime/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SaveYourTime/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SaveYourTime/subscriptions",
      "organizations_url": "https://api.github.com/users/SaveYourTime/orgs",
      "repos_url": "https://api.github.com/users/SaveYourTime/repos",
      "events_url": "https://api.github.com/users/SaveYourTime/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SaveYourTime/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      },
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-05-19T08:05:38Z",
    "updated_at": "2020-10-27T00:38:09Z",
    "closed_at": "2020-06-26T21:45:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4286",
      "html_url": "https://github.com/expressjs/express/pull/4286",
      "diff_url": "https://github.com/expressjs/express/pull/4286.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4286.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4286/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4286/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4285",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4285/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4285/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4285/events",
    "html_url": "https://github.com/expressjs/express/pull/4285",
    "id": 620765662,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDE5OTQ3NDky",
    "number": 4285,
    "title": "Fixed typo of the History.md",
    "user": {
      "login": "SaveYourTime",
      "id": 35715664,
      "node_id": "MDQ6VXNlcjM1NzE1NjY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/35715664?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SaveYourTime",
      "html_url": "https://github.com/SaveYourTime",
      "followers_url": "https://api.github.com/users/SaveYourTime/followers",
      "following_url": "https://api.github.com/users/SaveYourTime/following{/other_user}",
      "gists_url": "https://api.github.com/users/SaveYourTime/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SaveYourTime/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SaveYourTime/subscriptions",
      "organizations_url": "https://api.github.com/users/SaveYourTime/orgs",
      "repos_url": "https://api.github.com/users/SaveYourTime/repos",
      "events_url": "https://api.github.com/users/SaveYourTime/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SaveYourTime/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-05-19T08:02:49Z",
    "updated_at": "2020-05-19T08:04:39Z",
    "closed_at": "2020-05-19T08:04:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4285",
      "html_url": "https://github.com/expressjs/express/pull/4285",
      "diff_url": "https://github.com/expressjs/express/pull/4285.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4285.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4285/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4285/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4284",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4284/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4284/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4284/events",
    "html_url": "https://github.com/expressjs/express/issues/4284",
    "id": 620132119,
    "node_id": "MDU6SXNzdWU2MjAxMzIxMTk=",
    "number": 4284,
    "title": "express post empty body",
    "user": {
      "login": "mirc1one",
      "id": 44461660,
      "node_id": "MDQ6VXNlcjQ0NDYxNjYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/44461660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mirc1one",
      "html_url": "https://github.com/mirc1one",
      "followers_url": "https://api.github.com/users/mirc1one/followers",
      "following_url": "https://api.github.com/users/mirc1one/following{/other_user}",
      "gists_url": "https://api.github.com/users/mirc1one/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mirc1one/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mirc1one/subscriptions",
      "organizations_url": "https://api.github.com/users/mirc1one/orgs",
      "repos_url": "https://api.github.com/users/mirc1one/repos",
      "events_url": "https://api.github.com/users/mirc1one/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mirc1one/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-05-18T11:29:05Z",
    "updated_at": "2020-05-18T11:33:38Z",
    "closed_at": "2020-05-18T11:32:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4284/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4284/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4283",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4283/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4283/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4283/events",
    "html_url": "https://github.com/expressjs/express/issues/4283",
    "id": 619683013,
    "node_id": "MDU6SXNzdWU2MTk2ODMwMTM=",
    "number": 4283,
    "title": "make Router.handle() public and explicitly part of the API",
    "user": {
      "login": "loreanvictor",
      "id": 13572283,
      "node_id": "MDQ6VXNlcjEzNTcyMjgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/13572283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/loreanvictor",
      "html_url": "https://github.com/loreanvictor",
      "followers_url": "https://api.github.com/users/loreanvictor/followers",
      "following_url": "https://api.github.com/users/loreanvictor/following{/other_user}",
      "gists_url": "https://api.github.com/users/loreanvictor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/loreanvictor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/loreanvictor/subscriptions",
      "organizations_url": "https://api.github.com/users/loreanvictor/orgs",
      "repos_url": "https://api.github.com/users/loreanvictor/repos",
      "events_url": "https://api.github.com/users/loreanvictor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/loreanvictor/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 18291,
        "node_id": "MDU6TGFiZWwxODI5MQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-05-17T11:53:07Z",
    "updated_at": "2020-05-17T16:03:50Z",
    "closed_at": "2020-05-17T16:03:50Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "It would be extremely nice if you could make [`Router.handle()`](https://github.com/expressjs/express/blob/18da651c5b57431f61391d9de2518a8c2ef88b2c/lib/router/index.js#L136) public and explicitly part of the exposed API, so that people could reliably use it. It would provide far greater composability and extensibility to the `Router` class, as third party code could utilize express routers in different contexts / processes.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4283/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4283/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4282",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4282/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4282/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4282/events",
    "html_url": "https://github.com/expressjs/express/issues/4282",
    "id": 619429264,
    "node_id": "MDU6SXNzdWU2MTk0MjkyNjQ=",
    "number": 4282,
    "title": "Dependencies (5.0)",
    "user": {
      "login": "vansergen",
      "id": 14388408,
      "node_id": "MDQ6VXNlcjE0Mzg4NDA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/14388408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vansergen",
      "html_url": "https://github.com/vansergen",
      "followers_url": "https://api.github.com/users/vansergen/followers",
      "following_url": "https://api.github.com/users/vansergen/following{/other_user}",
      "gists_url": "https://api.github.com/users/vansergen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vansergen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vansergen/subscriptions",
      "organizations_url": "https://api.github.com/users/vansergen/orgs",
      "repos_url": "https://api.github.com/users/vansergen/repos",
      "events_url": "https://api.github.com/users/vansergen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vansergen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 163600,
        "node_id": "MDU6TGFiZWwxNjM2MDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2020-05-16T09:47:16Z",
    "updated_at": "2021-12-31T15:26:07Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "It seems that we can remove a few dependencies before the `5.0` release:\r\n\r\n- `methods` - We can use the built-in `http` module:\r\n\r\n```javascript\r\nconst { METHODS } = require(\"http\");\r\nconst methods = METHODS.map((method) => method.toLowerCase());\r\n```\r\n\r\n- `path-is-absolute` - We can use the built-in `path` module:\r\n\r\n```javascript\r\nconst path = require(\"path\");\r\nconst isAbsolute = path.isAbsolute(\"some-path\");\r\n```\r\n\r\n- `safe-buffer` - We can use the built-in `Buffer`:\r\n\r\n```javascript\r\nconst a = Buffer.from(\"something\");\r\n```\r\n\r\n- `setprototypeof` - We can use the `Object.setPrototypeOf()`\r\n\r\n```javascript\r\nObject.setPrototypeOf(this.request, parent.request);\r\n```\r\n\r\n- `utils-merge` - We can use the spread operator:\r\n\r\n```javascript\r\nconst opts = { expires: new Date(1), path: '/' , ...options};\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4282/reactions",
      "total_count": 87,
      "+1": 52,
      "-1": 0,
      "laugh": 0,
      "hooray": 8,
      "confused": 0,
      "heart": 16,
      "rocket": 4,
      "eyes": 7
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4282/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4281",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4281/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4281/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4281/events",
    "html_url": "https://github.com/expressjs/express/issues/4281",
    "id": 619329671,
    "node_id": "MDU6SXNzdWU2MTkzMjk2NzE=",
    "number": 4281,
    "title": "Update eslint to v7.0.0",
    "user": {
      "login": "vansergen",
      "id": 14388408,
      "node_id": "MDQ6VXNlcjE0Mzg4NDA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/14388408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vansergen",
      "html_url": "https://github.com/vansergen",
      "followers_url": "https://api.github.com/users/vansergen/followers",
      "following_url": "https://api.github.com/users/vansergen/following{/other_user}",
      "gists_url": "https://api.github.com/users/vansergen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vansergen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vansergen/subscriptions",
      "organizations_url": "https://api.github.com/users/vansergen/orgs",
      "repos_url": "https://api.github.com/users/vansergen/repos",
      "events_url": "https://api.github.com/users/vansergen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vansergen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 18291,
        "node_id": "MDU6TGFiZWwxODI5MQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1",
        "default": false,
        "description": null
      },
      {
        "id": 133578716,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/deps",
        "name": "deps",
        "color": "444444",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2020-05-15T23:51:23Z",
    "updated_at": "2021-12-17T21:16:53Z",
    "closed_at": "2021-12-17T21:16:53Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "@dougwilson Let's update the devDependency `eslint` to v7.0.0 (on the `5.0` branch).\r\n\r\nIt would involve:\r\n\r\n- Update `package.json` 6accaf42c6c41ad358dd810df8a290baa2e5449a\r\n- Run `eslint --fix` 100c2bdb31cb49920ed61d608bf0ee99572833a9\r\n- Drop Node <10 support a576bf5830daeaff953610e8cfb0177c3b86b4a0 6f1e31b1db4a0cf96b279e9799b0636e0e36573c\r\n\r\nWhat do you think?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4281/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4281/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4280",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4280/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4280/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4280/events",
    "html_url": "https://github.com/expressjs/express/pull/4280",
    "id": 619323290,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDE4ODc1NTI5",
    "number": 4280,
    "title": "Update devDependencies",
    "user": {
      "login": "vansergen",
      "id": 14388408,
      "node_id": "MDQ6VXNlcjE0Mzg4NDA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/14388408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vansergen",
      "html_url": "https://github.com/vansergen",
      "followers_url": "https://api.github.com/users/vansergen/followers",
      "following_url": "https://api.github.com/users/vansergen/following{/other_user}",
      "gists_url": "https://api.github.com/users/vansergen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vansergen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vansergen/subscriptions",
      "organizations_url": "https://api.github.com/users/vansergen/orgs",
      "repos_url": "https://api.github.com/users/vansergen/repos",
      "events_url": "https://api.github.com/users/vansergen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vansergen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 133578716,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/deps",
        "name": "deps",
        "color": "444444",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2020-05-15T23:26:10Z",
    "updated_at": "2020-05-15T23:57:06Z",
    "closed_at": "2020-05-15T23:29:03Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4280",
      "html_url": "https://github.com/expressjs/express/pull/4280",
      "diff_url": "https://github.com/expressjs/express/pull/4280.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4280.patch",
      "merged_at": null
    },
    "body": "## Changes\r\n\r\n- bump `eslint` to `7.0.0` 6accaf4\r\n- bump `supertest` to `4.0.2` 015a211\r\n- bump `mocha` to `7.1.2` 9b70c9d\r\n- bump `connect-redis` to `4.0.4` 7cef0c3\r\n- bump `morgan` to `1.10.0` bbfde91\r\n- bump `cookie-session` to `1.4.0` c8c1649\r\n- bump `ejs` to `2.7.4` b2738de\r\n- bump `express-session` to `1.17.1` c028dc2\r\n- bump `hbs` to `4.1.1` e34580b\r\n- bump `marked` to `1.0.0` 447788c\r\n- bump `nyc` to `15.0.1` 0145809\r\n\r\n### Other changes\r\n\r\n- run `eslint --fix` 100c2bd\r\n- **BREAKING CHANGE** Drop Node <10 support a576bf5\r\n\r\n@dougwilson It seems that you did not like the PR #3948 but it is inevitable https://github.com/expressjs/express/issues/2755#issuecomment-382499774 😀\r\n\r\nP.S. We cannot go any further without a576bf5\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4280/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4280/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4279",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4279/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4279/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4279/events",
    "html_url": "https://github.com/expressjs/express/issues/4279",
    "id": 619321611,
    "node_id": "MDU6SXNzdWU2MTkzMjE2MTE=",
    "number": 4279,
    "title": "Wrong render path",
    "user": {
      "login": "iPatavatsizz",
      "id": 37545799,
      "node_id": "MDQ6VXNlcjM3NTQ1Nzk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/37545799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iPatavatsizz",
      "html_url": "https://github.com/iPatavatsizz",
      "followers_url": "https://api.github.com/users/iPatavatsizz/followers",
      "following_url": "https://api.github.com/users/iPatavatsizz/following{/other_user}",
      "gists_url": "https://api.github.com/users/iPatavatsizz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iPatavatsizz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iPatavatsizz/subscriptions",
      "organizations_url": "https://api.github.com/users/iPatavatsizz/orgs",
      "repos_url": "https://api.github.com/users/iPatavatsizz/repos",
      "events_url": "https://api.github.com/users/iPatavatsizz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iPatavatsizz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-05-15T23:18:45Z",
    "updated_at": "2020-05-17T02:52:44Z",
    "closed_at": "2020-05-17T02:52:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi, I am taking post id parameter to show blog content, everything is fine on here but there is a problem, it is on code or express rendering I don't know exactly.\r\nExpress trying to send my js/css/img files in 'public/post/', but I want to it send from only 'public' path.\r\n\r\nI tried these;\r\n- I tried to change 'path.join'(express.static) but it is also didn't work.\r\n-> `path.join(__dirname + '../', 'public')` or etc...\r\n- I tried to specify path to router but it didn't.\r\n-> (In app.js) app.use('/', mainRouter, here express.path)\r\n- I searched on google, express docs but I couldn't find any solution to this.\r\n\r\n**Routers:**\r\nOnly one router: _main.js_\r\n\r\n**Public Folder:**  classic express generator\r\n\r\n**Codes:**\r\n```\r\n// Show Post By ID\r\n// 5ebabf454b74f711141a5aa4 -> Test Database ID, It exists.\r\nrouter.get('/post/:postid', (req, res, next) => {\r\n    Post.findById(req.params.postid).then((doc) => {\r\n        res.render('post', { title: devblog.name, post: doc });\r\n    }).catch((err) => {\r\n        next(createError(404, err));\r\n    });\r\n});\r\n```\r\n**Console:**\r\n```\r\nGET /post/5ebabf454b74f711141a5aa4 304 3191.975 ms - -\r\nGET /post/stylesheets/bootstrap.min.css 404 500.526 ms - 2295\r\nGET /post/stylesheets/style.css 404 562.285 ms - 2295\r\nGET /post/javascripts/jquery-3.4.1.slim.min.js 404 1438.587 ms - 2295\r\nGET /post/javascripts/bootstrap.bundle.min.js 404 2100.498 ms - 2295\r\n```\r\nHere is the problem: \r\n> /post/stylesheets/\r\n\r\nHow i can change this to normal? **What should I do?**\r\n> /post/stylesheets/ => /stylesheets/\r\n\r\nSorry for syntax, bad English sentences, If there are many flaws, please forgive me.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4279/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4279/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4277",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4277/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4277/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4277/events",
    "html_url": "https://github.com/expressjs/express/issues/4277",
    "id": 618595037,
    "node_id": "MDU6SXNzdWU2MTg1OTUwMzc=",
    "number": 4277,
    "title": "named groups in regex routers not supported?",
    "user": {
      "login": "its-dibo",
      "id": 57308531,
      "node_id": "MDQ6VXNlcjU3MzA4NTMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/57308531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/its-dibo",
      "html_url": "https://github.com/its-dibo",
      "followers_url": "https://api.github.com/users/its-dibo/followers",
      "following_url": "https://api.github.com/users/its-dibo/following{/other_user}",
      "gists_url": "https://api.github.com/users/its-dibo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/its-dibo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/its-dibo/subscriptions",
      "organizations_url": "https://api.github.com/users/its-dibo/orgs",
      "repos_url": "https://api.github.com/users/its-dibo/repos",
      "events_url": "https://api.github.com/users/its-dibo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/its-dibo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 163600,
        "node_id": "MDU6TGFiZWwxNjM2MDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/11",
      "html_url": "https://github.com/expressjs/express/milestone/11",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/11/labels",
      "id": 739972,
      "node_id": "MDk6TWlsZXN0b25lNzM5OTcy",
      "number": 11,
      "title": "5.0",
      "description": "",
      "creator": {
        "login": "Fishrock123",
        "id": 1093990,
        "node_id": "MDQ6VXNlcjEwOTM5OTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1093990?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fishrock123",
        "html_url": "https://github.com/Fishrock123",
        "followers_url": "https://api.github.com/users/Fishrock123/followers",
        "following_url": "https://api.github.com/users/Fishrock123/following{/other_user}",
        "gists_url": "https://api.github.com/users/Fishrock123/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Fishrock123/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Fishrock123/subscriptions",
        "organizations_url": "https://api.github.com/users/Fishrock123/orgs",
        "repos_url": "https://api.github.com/users/Fishrock123/repos",
        "events_url": "https://api.github.com/users/Fishrock123/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Fishrock123/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 8,
      "closed_issues": 12,
      "state": "open",
      "created_at": "2014-08-01T16:41:47Z",
      "updated_at": "2023-03-04T23:52:31Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 1,
    "created_at": "2020-05-14T23:26:48Z",
    "updated_at": "2021-12-17T21:17:24Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "```\r\n// /regex/hello -> matches\r\napp.get(/\\/regex\\/(.+)/, (req, res) => res.json({ params: req.params }));\r\n\r\n//named groups not suppoted?\r\n//  /regex/hello -> error\r\napp.get(/\\/regex2\\/(?<groupname>.+)/, (req, res) =>\r\n  res.json({ params: req.params })\r\n);\r\n\r\n```\r\n\r\nwhen using named capture groups, I got the following error\r\n```\r\nTypeError: Cannot read property 'name' of undefined\r\n    at Layer.match (webpack:///./node_modules/express/lib/router/layer.js?:147:20)\r\n    at matchLayer (webpack:///./node_modules/express/lib/router/index.js?:574:18)\r\n    at next (webpack:///./node_modules/express/lib/router/index.js?:220:15)\r\n    at cors (webpack:///./node_modules/cors/lib/index.js?:188:7)\r\n    at eval (webpack:///./node_modules/cors/lib/index.js?:224:17)\r\n    at originCallback (webpack:///./node_modules/cors/lib/index.js?:214:15)\r\n    at eval (webpack:///./node_modules/cors/lib/index.js?:219:13)\r\n    at optionsCallback (webpack:///./node_modules/cors/lib/index.js?:199:9)\r\n    at corsMiddleware (webpack:///./node_modules/cors/lib/index.js?:204:7)\r\n    at Layer.handle [as handle_request] (webpack:///./node_modules/express/lib/router/layer.js?:95:5)\r\n    at trim_prefix (webpack:///./node_modules/express/lib/router/index.js?:317:13)\r\n    at eval (webpack:///./node_modules/express/lib/router/index.js?:284:7)\r\n    at Function.process_params (webpack:///./node_modules/express/lib/router/index.js?:335:12)\r\n    at next (webpack:///./node_modules/express/lib/router/index.js?:275:10)\r\n    at urlencodedParser (webpack:///./node_modules/body-parser/lib/types/urlencoded.js?:91:7)\r\n    at Layer.handle [as handle_request] (webpack:///./node_modules/express/lib/router/layer.js?:95:5)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4277/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4277/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4276",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4276/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4276/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4276/events",
    "html_url": "https://github.com/expressjs/express/pull/4276",
    "id": 617910912,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDE3NzM5ODg3",
    "number": 4276,
    "title": "Replace RegEx to slice method",
    "user": {
      "login": "martiliones",
      "id": 30230027,
      "node_id": "MDQ6VXNlcjMwMjMwMDI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/30230027?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martiliones",
      "html_url": "https://github.com/martiliones",
      "followers_url": "https://api.github.com/users/martiliones/followers",
      "following_url": "https://api.github.com/users/martiliones/following{/other_user}",
      "gists_url": "https://api.github.com/users/martiliones/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martiliones/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martiliones/subscriptions",
      "organizations_url": "https://api.github.com/users/martiliones/orgs",
      "repos_url": "https://api.github.com/users/martiliones/repos",
      "events_url": "https://api.github.com/users/martiliones/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martiliones/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2020-05-14T04:16:37Z",
    "updated_at": "2020-05-17T13:51:39Z",
    "closed_at": "2020-05-17T13:51:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4276",
      "html_url": "https://github.com/expressjs/express/pull/4276",
      "diff_url": "https://github.com/expressjs/express/pull/4276.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4276.patch",
      "merged_at": null
    },
    "body": "Slice method 3 times faster. I saw this method in [vuejs](https://github.com/vuejs/vue/blob/dev/src/shared/util.js#L51)",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4276/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4276/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4275",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4275/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4275/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4275/events",
    "html_url": "https://github.com/expressjs/express/issues/4275",
    "id": 617066819,
    "node_id": "MDU6SXNzdWU2MTcwNjY4MTk=",
    "number": 4275,
    "title": "Parameter issue Bug",
    "user": {
      "login": "georgeka98",
      "id": 19718662,
      "node_id": "MDQ6VXNlcjE5NzE4NjYy",
      "avatar_url": "https://avatars.githubusercontent.com/u/19718662?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/georgeka98",
      "html_url": "https://github.com/georgeka98",
      "followers_url": "https://api.github.com/users/georgeka98/followers",
      "following_url": "https://api.github.com/users/georgeka98/following{/other_user}",
      "gists_url": "https://api.github.com/users/georgeka98/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/georgeka98/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/georgeka98/subscriptions",
      "organizations_url": "https://api.github.com/users/georgeka98/orgs",
      "repos_url": "https://api.github.com/users/georgeka98/repos",
      "events_url": "https://api.github.com/users/georgeka98/events{/privacy}",
      "received_events_url": "https://api.github.com/users/georgeka98/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2020-05-13T01:14:26Z",
    "updated_at": "2020-05-13T04:21:19Z",
    "closed_at": "2020-05-13T02:16:45Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "There is a massive issue occurring with express js. when I am using multiple parameters, I am getting an \"Uncaught SyntaxError: Unexpected token '<'\".\r\n\r\nWhen I output the parameters, I am not understanding why express gets the javascript file names as parameters and  even the res.render function is being called 3 times.\r\n\r\nLike seriously? Why is express js so broken?!?\r\n\r\n<img width=\"953\" alt=\"Screenshot 2020-05-13 at 02 13 47\" src=\"https://user-images.githubusercontent.com/19718662/81760552-6c02ab00-94bf-11ea-8ca2-7997356cdbbf.png\">",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4275/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4275/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4274",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4274/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4274/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4274/events",
    "html_url": "https://github.com/expressjs/express/issues/4274",
    "id": 616053142,
    "node_id": "MDU6SXNzdWU2MTYwNTMxNDI=",
    "number": 4274,
    "title": "DeprecationWarning: OutgoingMessage.prototpye._headers is deprecated",
    "user": {
      "login": "SebastianBoehler",
      "id": 27767932,
      "node_id": "MDQ6VXNlcjI3NzY3OTMy",
      "avatar_url": "https://avatars.githubusercontent.com/u/27767932?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SebastianBoehler",
      "html_url": "https://github.com/SebastianBoehler",
      "followers_url": "https://api.github.com/users/SebastianBoehler/followers",
      "following_url": "https://api.github.com/users/SebastianBoehler/following{/other_user}",
      "gists_url": "https://api.github.com/users/SebastianBoehler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SebastianBoehler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SebastianBoehler/subscriptions",
      "organizations_url": "https://api.github.com/users/SebastianBoehler/orgs",
      "repos_url": "https://api.github.com/users/SebastianBoehler/repos",
      "events_url": "https://api.github.com/users/SebastianBoehler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SebastianBoehler/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 11,
    "created_at": "2020-05-11T17:29:41Z",
    "updated_at": "2021-12-08T12:47:12Z",
    "closed_at": "2021-05-08T05:43:23Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "Everything works fine until it should return the response.\r\n\r\nthis error message is displayed:\r\nDeprecationWarning: OutgoingMessage.prototpye._headers is deprecated",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4274/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4274/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4273",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4273/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4273/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4273/events",
    "html_url": "https://github.com/expressjs/express/issues/4273",
    "id": 615578530,
    "node_id": "MDU6SXNzdWU2MTU1Nzg1MzA=",
    "number": 4273,
    "title": "Using array of middleware in Typescript",
    "user": {
      "login": "ionizer",
      "id": 4402689,
      "node_id": "MDQ6VXNlcjQ0MDI2ODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4402689?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ionizer",
      "html_url": "https://github.com/ionizer",
      "followers_url": "https://api.github.com/users/ionizer/followers",
      "following_url": "https://api.github.com/users/ionizer/following{/other_user}",
      "gists_url": "https://api.github.com/users/ionizer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ionizer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ionizer/subscriptions",
      "organizations_url": "https://api.github.com/users/ionizer/orgs",
      "repos_url": "https://api.github.com/users/ionizer/repos",
      "events_url": "https://api.github.com/users/ionizer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ionizer/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2020-05-11T04:29:34Z",
    "updated_at": "2021-10-02T12:22:25Z",
    "closed_at": "2020-05-13T20:31:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm encountering an error when using array of middleware in Typescript as it complains about `req`, `res`, and `next` in the handler callback after the array of middleware having implicitly `any` type in the following example:\r\n```ts\r\nconst m1: RequestHandler = (req, res, next) => {\r\n  next();\r\n};\r\n\r\nconst m2: RequestHandler = (req, res, next) => {\r\n  next();\r\n};\r\n\r\nrouter.post('/', [m1, m2], (req, res, next) => { ... }); // Parameter `req`, `res`, and `next` implicitly has an `any` type. ts(7006)\r\n```\r\n\r\nThis is not exactly a breaking issue with JS, but this does break auto-complete for `req`, `res`, and `next` on editors like VSCode. But is there any specific typings we can use for this case?\r\n\r\nIf it helps, I'm using the following versions:\r\nNodeJS: 12.16.2\r\nTypescript: 3.8.3\r\nExpress: 4.16.4\r\n@types/express: 4.17.6",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4273/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4273/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4272",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4272/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4272/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4272/events",
    "html_url": "https://github.com/expressjs/express/pull/4272",
    "id": 615006439,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDE1NDQ5NTEz",
    "number": 4272,
    "title": "Expose path on Layer",
    "user": {
      "login": "caub",
      "id": 3134574,
      "node_id": "MDQ6VXNlcjMxMzQ1NzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3134574?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/caub",
      "html_url": "https://github.com/caub",
      "followers_url": "https://api.github.com/users/caub/followers",
      "following_url": "https://api.github.com/users/caub/following{/other_user}",
      "gists_url": "https://api.github.com/users/caub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/caub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/caub/subscriptions",
      "organizations_url": "https://api.github.com/users/caub/orgs",
      "repos_url": "https://api.github.com/users/caub/repos",
      "events_url": "https://api.github.com/users/caub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/caub/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2020-05-08T21:53:06Z",
    "updated_at": "2020-05-08T23:25:21Z",
    "closed_at": "2020-05-08T23:25:20Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4272",
      "html_url": "https://github.com/expressjs/express/pull/4272",
      "diff_url": "https://github.com/expressjs/express/pull/4272.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4272.patch",
      "merged_at": null
    },
    "body": "For introspecting routes more easily than with `regexp` prop",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4272/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4272/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4271",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4271/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4271/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4271/events",
    "html_url": "https://github.com/expressjs/express/issues/4271",
    "id": 614720517,
    "node_id": "MDU6SXNzdWU2MTQ3MjA1MTc=",
    "number": 4271,
    "title": "When I do next(err) the err type is lost.",
    "user": {
      "login": "Andrurodr",
      "id": 20403179,
      "node_id": "MDQ6VXNlcjIwNDAzMTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/20403179?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Andrurodr",
      "html_url": "https://github.com/Andrurodr",
      "followers_url": "https://api.github.com/users/Andrurodr/followers",
      "following_url": "https://api.github.com/users/Andrurodr/following{/other_user}",
      "gists_url": "https://api.github.com/users/Andrurodr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Andrurodr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Andrurodr/subscriptions",
      "organizations_url": "https://api.github.com/users/Andrurodr/orgs",
      "repos_url": "https://api.github.com/users/Andrurodr/repos",
      "events_url": "https://api.github.com/users/Andrurodr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Andrurodr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2020-05-08T12:45:00Z",
    "updated_at": "2020-05-12T19:57:37Z",
    "closed_at": "2020-05-10T12:11:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi ! I have a piece of code like this in a middleware:\r\n```typescript\r\n// Some validation goes wrong, create a new TypeError and call next\r\nconst error = new TypeError('Invalid type');\r\nnext(error);\r\n```\r\nthen i have an error handler middleware :\r\n```typescript\r\nconst errorHandler = (): express.ErrorRequestHandler => (err: any, req, res: express.Response, next: express.NextFunction): void => {\r\n     if (err instanceof TypeError){\r\n         // do something awesome\r\n     } else {\r\n        // do something not so awesome\r\n     }\r\n}\r\n```\r\nIn that point the awesome piece of code is not being executed, but if i change my first middleware to:\r\n\r\n```typescript\r\nthrow new TypeError('Invalid type');\r\n```\r\nLater when the error is handled by the error middleware the awesome piece of code executes.\r\nthis issue happens with custom error types too.\r\n\r\ni'm using express `4.17.1`",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4271/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4271/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4270",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4270/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4270/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4270/events",
    "html_url": "https://github.com/expressjs/express/issues/4270",
    "id": 614709308,
    "node_id": "MDU6SXNzdWU2MTQ3MDkzMDg=",
    "number": 4270,
    "title": "First attempt to connect to the Expressjs App after restarting node.js terminates at user's end",
    "user": {
      "login": "HarishVaranasi",
      "id": 14336477,
      "node_id": "MDQ6VXNlcjE0MzM2NDc3",
      "avatar_url": "https://avatars.githubusercontent.com/u/14336477?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/HarishVaranasi",
      "html_url": "https://github.com/HarishVaranasi",
      "followers_url": "https://api.github.com/users/HarishVaranasi/followers",
      "following_url": "https://api.github.com/users/HarishVaranasi/following{/other_user}",
      "gists_url": "https://api.github.com/users/HarishVaranasi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/HarishVaranasi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HarishVaranasi/subscriptions",
      "organizations_url": "https://api.github.com/users/HarishVaranasi/orgs",
      "repos_url": "https://api.github.com/users/HarishVaranasi/repos",
      "events_url": "https://api.github.com/users/HarishVaranasi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/HarishVaranasi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-05-08T12:21:42Z",
    "updated_at": "2020-05-08T15:06:39Z",
    "closed_at": "2020-05-08T15:05:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "route.js\r\nconst routes = require('express').Router();\r\nroutes.get('/', (req, res) => {\r\n var outputvariable =  child_process.spawnSync('powershell.exe'\r\n ///// .. do this for 15 mins)\r\nres.send('outputvariable);\r\n});\r\nmodule.exports = routes;\r\n\r\nIn the main.js \r\nconst aroute= require('./route.js'); app.use('/route', aroute);\r\n\r\nThe first hit coming to the server is being processed at the server end but the res.send is not working when I reload node main.js\r\n\r\nThere is a childprocessSync in route.js, request is going to the route.js , but the first hit to app.js is getting terminated from postman.\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4270/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4270/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4269",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4269/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4269/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4269/events",
    "html_url": "https://github.com/expressjs/express/pull/4269",
    "id": 614612885,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDE1MTMxNDQz",
    "number": 4269,
    "title": "Added res.xml()",
    "user": {
      "login": "cborac",
      "id": 28059892,
      "node_id": "MDQ6VXNlcjI4MDU5ODky",
      "avatar_url": "https://avatars.githubusercontent.com/u/28059892?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cborac",
      "html_url": "https://github.com/cborac",
      "followers_url": "https://api.github.com/users/cborac/followers",
      "following_url": "https://api.github.com/users/cborac/following{/other_user}",
      "gists_url": "https://api.github.com/users/cborac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cborac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cborac/subscriptions",
      "organizations_url": "https://api.github.com/users/cborac/orgs",
      "repos_url": "https://api.github.com/users/cborac/repos",
      "events_url": "https://api.github.com/users/cborac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cborac/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-05-08T09:04:37Z",
    "updated_at": "2020-06-03T06:16:25Z",
    "closed_at": "2020-06-03T06:16:25Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4269",
      "html_url": "https://github.com/expressjs/express/pull/4269",
      "diff_url": "https://github.com/expressjs/express/pull/4269.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4269.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4269/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4269/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4268",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4268/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4268/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4268/events",
    "html_url": "https://github.com/expressjs/express/issues/4268",
    "id": 614416396,
    "node_id": "MDU6SXNzdWU2MTQ0MTYzOTY=",
    "number": 4268,
    "title": "Request triager role for @mastermatt",
    "user": {
      "login": "mastermatt",
      "id": 2789206,
      "node_id": "MDQ6VXNlcjI3ODkyMDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2789206?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mastermatt",
      "html_url": "https://github.com/mastermatt",
      "followers_url": "https://api.github.com/users/mastermatt/followers",
      "following_url": "https://api.github.com/users/mastermatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/mastermatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mastermatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mastermatt/subscriptions",
      "organizations_url": "https://api.github.com/users/mastermatt/orgs",
      "repos_url": "https://api.github.com/users/mastermatt/repos",
      "events_url": "https://api.github.com/users/mastermatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mastermatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-05-08T00:02:48Z",
    "updated_at": "2020-05-08T01:00:02Z",
    "closed_at": "2020-05-08T01:00:02Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have read and understood the project's Code of Conduct.\r\nI also have read and understood the process and best practices around Express triaging.\r\nI request for a triager role for the following GitHub organizations:\r\njshttp\r\npillarjs\r\nexpress",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4268/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4268/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4267",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4267/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4267/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4267/events",
    "html_url": "https://github.com/expressjs/express/issues/4267",
    "id": 614112668,
    "node_id": "MDU6SXNzdWU2MTQxMTI2Njg=",
    "number": 4267,
    "title": "unable to install sass dev dependencies",
    "user": {
      "login": "Neelakanta-yadav",
      "id": 64421973,
      "node_id": "MDQ6VXNlcjY0NDIxOTcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/64421973?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Neelakanta-yadav",
      "html_url": "https://github.com/Neelakanta-yadav",
      "followers_url": "https://api.github.com/users/Neelakanta-yadav/followers",
      "following_url": "https://api.github.com/users/Neelakanta-yadav/following{/other_user}",
      "gists_url": "https://api.github.com/users/Neelakanta-yadav/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Neelakanta-yadav/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Neelakanta-yadav/subscriptions",
      "organizations_url": "https://api.github.com/users/Neelakanta-yadav/orgs",
      "repos_url": "https://api.github.com/users/Neelakanta-yadav/repos",
      "events_url": "https://api.github.com/users/Neelakanta-yadav/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Neelakanta-yadav/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-05-07T14:42:10Z",
    "updated_at": "2020-05-07T18:56:37Z",
    "closed_at": "2020-05-07T18:56:37Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "npm ERR! code EJSONPARSE\r\nnpm ERR! file C:\\Users\\neela\\OneDrive\\Desktop\\coursera\\Bootstrap4\\conFusion\\package.json\r\nnpm ERR! JSON.parse Failed to parse json\r\nnpm ERR! JSON.parse Unexpected token } in JSON at position 305 while parsing near '...ss -o css/ css/\",\r\nnpm ERR! JSON.parse   },\r\nnpm ERR! JSON.parse   \"author\": \"\",\r\nnpm ERR! JSON.parse  ...'\r\nnpm ERR! JSON.parse Failed to parse package.json data.\r\nnpm ERR! JSON.parse package.json must be actual JSON, not just JavaScript.\r\n\r\nnpm ERR! A complete log of this run can be found in:\r\nnpm ERR!     C:\\Users\\neela\\AppData\\Roaming\\npm-cache\\_logs\\2020-05-07T14_38_36_615Z-debug.log\r\n![Screenshot (3)](https://user-images.githubusercontent.com/64421973/81307991-e6d25d00-909e-11ea-87da-57f15bfc964e.png)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4267/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4267/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4266",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4266/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4266/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4266/events",
    "html_url": "https://github.com/expressjs/express/issues/4266",
    "id": 612837286,
    "node_id": "MDU6SXNzdWU2MTI4MzcyODY=",
    "number": 4266,
    "title": "Express server hangs on get request when using HTTPS ",
    "user": {
      "login": "dman777",
      "id": 887815,
      "node_id": "MDQ6VXNlcjg4NzgxNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/887815?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dman777",
      "html_url": "https://github.com/dman777",
      "followers_url": "https://api.github.com/users/dman777/followers",
      "following_url": "https://api.github.com/users/dman777/following{/other_user}",
      "gists_url": "https://api.github.com/users/dman777/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dman777/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dman777/subscriptions",
      "organizations_url": "https://api.github.com/users/dman777/orgs",
      "repos_url": "https://api.github.com/users/dman777/repos",
      "events_url": "https://api.github.com/users/dman777/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dman777/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-05-05T19:22:50Z",
    "updated_at": "2020-05-05T20:10:31Z",
    "closed_at": "2020-05-05T19:44:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Using: \r\nexpress@4.17.1\r\nNode v12.16.3\r\n\r\nI have a brand new SSL cert from Sectigo(formally known as Comodo) Positive SSL. \r\n\r\nOn the same server and node version, this cert works with no issues using browsersync. \r\n\r\nBut on the below express config, the get request hangs and never returns to the client. I am able to verify the cert successfully with the same express server instance and https://www.sslshopper.com/ssl-checker.html. The issue is when I do get requests from my browser it just hangs on the server. \r\n\r\nI figure this is a issue with the cert, https, and express since the same cloud server and cert works with browsersync(which also uses node). \r\n\r\nAny ideas what is wrong? \r\n\r\n```javascript\r\n const express = require('express');\r\nconst app = express();\r\nconst bodyParser = require('body-parser');\r\nconst https = require('https');\r\nconst colors = require('colors');\r\nconst fs = require('fs');\r\n\r\nconst cert = fs.readFileSync( 'ssl/certificate.pem');\r\nconst key = fs.readFileSync( 'ssl/private-key.pem');\r\nconst ca = fs.readFileSync( 'ssl/ca.pem');\r\n\r\nconst serverOptions = {\r\n  ca: ca,\r\n  key: key,\r\n  cert: cert,\r\n};\r\n\r\napp.use(bodyParser.json());\r\n\r\napp.use(bodyParser.urlencoded({extended: true}));\r\n\r\napp.use(function (req, res, next) {\r\n  res.header('Access-Control-Allow-Methods', \"POST, GET, OPTIONS, DELETE\");\r\n  res.header('Access-Control-Allow-Credentials', true);\r\n  res.header('Access-Control-Allow-Headers', true);\r\n  res.header('Access-Control-Allow-Origin', req.headers.origin);\r\n  next();\r\n});\r\n\r\napp.all('/', function (req, res) {\r\n  console.log('NOT OUTPUT....THIS NEVER SHOWS');\r\n  res.status(200).json({ results: 'hi'}); // this never returns to the browser\r\n})\r\nconst runServerHttps = (app) => {\r\n  https.createServer(serverOptions, app).listen(443, '0.0.0.0');\r\n  console.log(colors.green(`https dolphin server listening on port 443`));\r\n};\r\n\r\n\r\n\r\nrunServerHttps();\r\n```\r\n\r\nrunning:\r\n\r\n<details><summary>debug log</summary>\r\n<p>\r\n\r\n```\r\ndevelop /home/two/gitlab/ssl-node # DEBUG=express:* node index.js \r\n  express:application set \"x-powered-by\" to true +0ms\r\n  express:application set \"etag\" to 'weak' +3ms\r\n  express:application set \"etag fn\" to [Function: generateETag] +0ms\r\n  express:application set \"env\" to 'development' +1ms\r\n  express:application set \"query parser\" to 'extended' +0ms\r\n  express:application set \"query parser fn\" to [Function: parseExtendedQueryString] +0ms\r\n  express:application set \"subdomain offset\" to 2 +0ms\r\n  express:application set \"trust proxy\" to false +0ms\r\n  express:application set \"trust proxy fn\" to [Function: trustNone] +1ms\r\n  express:application booting in development mode +0ms\r\n  express:application set \"view\" to [Function: View] +0ms\r\n  express:application set \"views\" to '/home/two/gitlab/ssl-node/views' +0ms\r\n  express:application set \"jsonp callback name\" to 'callback' +0ms\r\n  express:router use '/' query +9ms\r\n  express:router:layer new '/' +1ms\r\n  express:router use '/' expressInit +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/' jsonParser +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/' urlencodedParser +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/' <anonymous> +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route acl '/' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route bind '/' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route checkout '/' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route connect '/' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route copy '/' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route delete '/' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route get '/' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route head '/' +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router:route link '/' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route lock '/' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route m-search '/' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route merge '/' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route mkactivity '/' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route mkcalendar '/' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route mkcol '/' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route move '/' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route notify '/' +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router:route options '/' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route patch '/' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route post '/' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route propfind '/' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route proppatch '/' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route purge '/' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route put '/' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route rebind '/' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route report '/' +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router:route search '/' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route source '/' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route subscribe '/' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route trace '/' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route unbind '/' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route unlink '/' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route unlock '/' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route unsubscribe '/' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route post '/' +1ms\r\n  express:router:layer new '/' +0ms\r\nhttps dolphin server listening on port 443\r\n```\r\n\r\n</p>\r\n</details>",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4266/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4266/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4265",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4265/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4265/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4265/events",
    "html_url": "https://github.com/expressjs/express/issues/4265",
    "id": 611555741,
    "node_id": "MDU6SXNzdWU2MTE1NTU3NDE=",
    "number": 4265,
    "title": "Resonse typo error",
    "user": {
      "login": "salazarr-js",
      "id": 9486209,
      "node_id": "MDQ6VXNlcjk0ODYyMDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9486209?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/salazarr-js",
      "html_url": "https://github.com/salazarr-js",
      "followers_url": "https://api.github.com/users/salazarr-js/followers",
      "following_url": "https://api.github.com/users/salazarr-js/following{/other_user}",
      "gists_url": "https://api.github.com/users/salazarr-js/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/salazarr-js/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/salazarr-js/subscriptions",
      "organizations_url": "https://api.github.com/users/salazarr-js/orgs",
      "repos_url": "https://api.github.com/users/salazarr-js/repos",
      "events_url": "https://api.github.com/users/salazarr-js/events{/privacy}",
      "received_events_url": "https://api.github.com/users/salazarr-js/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-05-04T01:24:48Z",
    "updated_at": "2020-05-04T12:17:45Z",
    "closed_at": "2020-05-04T11:37:48Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When trying to use `express-validator` with `typescript`\r\n```typescript\r\nimport * as express from 'express';\r\nimport { query, validationResult } from 'express-validator';\r\n\r\napp.get('/', [\r\n  query('url').isURL(),\r\n], (req: express.Request, res: express.Response) => {\r\n...\r\n}\r\n```\r\nGot error\r\n```typescript\r\ninterface e.Response<ResBody = any>\r\nerror TS7030: Not all code paths return a value.\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4265/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4265/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4263",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4263/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4263/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4263/events",
    "html_url": "https://github.com/expressjs/express/issues/4263",
    "id": 610802895,
    "node_id": "MDU6SXNzdWU2MTA4MDI4OTU=",
    "number": 4263,
    "title": "Error: Cannot find module 'nan'",
    "user": {
      "login": "nirus",
      "id": 2213751,
      "node_id": "MDQ6VXNlcjIyMTM3NTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2213751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nirus",
      "html_url": "https://github.com/nirus",
      "followers_url": "https://api.github.com/users/nirus/followers",
      "following_url": "https://api.github.com/users/nirus/following{/other_user}",
      "gists_url": "https://api.github.com/users/nirus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nirus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nirus/subscriptions",
      "organizations_url": "https://api.github.com/users/nirus/orgs",
      "repos_url": "https://api.github.com/users/nirus/repos",
      "events_url": "https://api.github.com/users/nirus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nirus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-05-01T15:16:21Z",
    "updated_at": "2020-05-01T15:37:59Z",
    "closed_at": "2020-05-01T15:37:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When i try to install express using `npm i express@latest --save` i am getting below error.\r\n\r\n## Environment details\r\nNode version - v12.13.0\r\nnpm - 6.14.2\r\nMac OS catalina  - v10.15.4\r\nexpress - 4.17.1\r\n\r\n## Error log:\r\n```\r\ninternal/modules/cjs/loader.js:797\r\n    throw err;\r\n    ^\r\n\r\nError: Cannot find module 'nan'\r\nRequire stack:\r\n- /Volumes/Invent/WorkSpace/svg2png/node_modules/webpack/node_modules/fsevents/[eval]\r\n    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:794:15)\r\n    at Function.Module._load (internal/modules/cjs/loader.js:687:27)\r\n    at Module.require (internal/modules/cjs/loader.js:849:19)\r\n    at require (internal/modules/cjs/helpers.js:74:18)\r\n    at [eval]:1:1\r\n    at Script.runInThisContext (vm.js:116:20)\r\n    at Object.runInThisContext (vm.js:306:38)\r\n    at Object.<anonymous> ([eval]-wrapper:9:26)\r\n    at Module._compile (internal/modules/cjs/loader.js:956:30)\r\n    at evalScript (internal/process/execution.js:80:25) {\r\n  code: 'MODULE_NOT_FOUND',\r\n  requireStack: [\r\n    '/Volumes/Invent/WorkSpace/svg2png/node_modules/webpack/node_modules/fsevents/[eval]'\r\n  ]\r\n}\r\ngyp: Call to 'node -e \"require('nan')\"' returned exit status 1 while in binding.gyp. while trying to load binding.gyp\r\ngyp ERR! configure error \r\ngyp ERR! stack Error: `gyp` failed with exit code: 1\r\ngyp ERR! stack     at ChildProcess.onCpExit (/usr/local/lib/node_modules/npm/node_modules/node-gyp/lib/configure.js:351:16)\r\ngyp ERR! stack     at ChildProcess.emit (events.js:210:5)\r\ngyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:272:12)\r\ngyp ERR! System Darwin 19.4.0\r\ngyp ERR! command \"/usr/local/bin/node\" \"/usr/local/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js\" \"rebuild\"\r\ngyp ERR! cwd /Volumes/Invent/WorkSpace/svg2png/node_modules/webpack/node_modules/fsevents\r\ngyp ERR! node -v v12.13.0\r\ngyp ERR! node-gyp -v v5.1.0\r\ngyp ERR! not ok \r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4263/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4263/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4262",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4262/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4262/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4262/events",
    "html_url": "https://github.com/expressjs/express/pull/4262",
    "id": 609625682,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDExMTc3NTkz",
    "number": 4262,
    "title": "Update response.js comment",
    "user": {
      "login": "kurtgalvin",
      "id": 45803439,
      "node_id": "MDQ6VXNlcjQ1ODAzNDM5",
      "avatar_url": "https://avatars.githubusercontent.com/u/45803439?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kurtgalvin",
      "html_url": "https://github.com/kurtgalvin",
      "followers_url": "https://api.github.com/users/kurtgalvin/followers",
      "following_url": "https://api.github.com/users/kurtgalvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/kurtgalvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kurtgalvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kurtgalvin/subscriptions",
      "organizations_url": "https://api.github.com/users/kurtgalvin/orgs",
      "repos_url": "https://api.github.com/users/kurtgalvin/repos",
      "events_url": "https://api.github.com/users/kurtgalvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kurtgalvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-04-30T06:24:10Z",
    "updated_at": "2020-06-22T03:11:39Z",
    "closed_at": "2020-06-22T03:11:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4262",
      "html_url": "https://github.com/expressjs/express/pull/4262",
      "diff_url": "https://github.com/expressjs/express/pull/4262.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4262.patch",
      "merged_at": null
    },
    "body": "**First ever pull request**, added a comment.\r\nLooking forward to putting in more work!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4262/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4262/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4260",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4260/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4260/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4260/events",
    "html_url": "https://github.com/expressjs/express/issues/4260",
    "id": 608351685,
    "node_id": "MDU6SXNzdWU2MDgzNTE2ODU=",
    "number": 4260,
    "title": "Express req.body modifies array value to a single string value in different middleware functions responding to same request",
    "user": {
      "login": "tjetnebula",
      "id": 57471460,
      "node_id": "MDQ6VXNlcjU3NDcxNDYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/57471460?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tjetnebula",
      "html_url": "https://github.com/tjetnebula",
      "followers_url": "https://api.github.com/users/tjetnebula/followers",
      "following_url": "https://api.github.com/users/tjetnebula/following{/other_user}",
      "gists_url": "https://api.github.com/users/tjetnebula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tjetnebula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tjetnebula/subscriptions",
      "organizations_url": "https://api.github.com/users/tjetnebula/orgs",
      "repos_url": "https://api.github.com/users/tjetnebula/repos",
      "events_url": "https://api.github.com/users/tjetnebula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tjetnebula/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-04-28T14:12:41Z",
    "updated_at": "2020-04-29T05:56:53Z",
    "closed_at": "2020-04-28T16:41:43Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This problem occurs in this tutorial example documented at MDN and the code can be obtained at \r\nhttps://github.com/mdn/express-locallibrary-tutorial\r\n\r\nIn the document \"Create a Book form\" under \"Express Web framework\"\r\nhttps://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/forms/Create_book_form\r\n\r\nthere is an error related to getting all the genre values in the express code from the form in pug\r\n\r\nBasically, req.body.genre is supposed to return an array of selected checkbox values from the pug form but in the code section where req.body.genre is referenced (in the final middleware function where the new Book model instance is created), it returns only the first value stored as string. Hence the genre field always ends up saving only one value even if multiple checkboxes were ticked in the form.\r\n\r\nwhen i do a console.log(req.body.genre) right before the code below in the last middleware function, it returns a string\r\n\r\n // Process request after validation and sanitization.\r\n    (req, res, next) => {\r\n        \r\n        // Extract the validation errors from a request.\r\n        const errors = validationResult(req);\r\n\r\n        // Create a Book object with escaped and trimmed data.\r\n        var book = new Book(\r\n          { title: req.body.title,\r\n            author: req.body.author,\r\n            summary: req.body.summary,\r\n            isbn: req.body.isbn,\r\n            genre: req.body.genre\r\n           });\r\n\r\nStrangely, console.log(req.body.genre) in this code section containing the first middle ware function returns an array but the saving happens in the other function above and there it shows only one string value\r\n\r\nFirst Middleware Function\r\nexports.book_create_post = [\r\n    // Convert the genre to an array.\r\n    (req, res, next) => {\r\n        if(!(req.body.genre instanceof Array)){\r\n            if(typeof req.body.genre==='undefined')\r\n            req.body.genre=[];\r\n            else\r\n            req.body.genre=new Array(req.body.genre);\r\n        }\r\n        next();\r\n    },\r\n\r\nreq.body.genre returns an array in the first middleware function but then in the last middleware function it returns a single value string which is the saved value for genre.\r\n\r\nOther information:\r\nNode.js version 12.14.1\r\nExpress version 4.16.1\r\nWindows 10 OS\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4260/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4260/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4259",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4259/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4259/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4259/events",
    "html_url": "https://github.com/expressjs/express/issues/4259",
    "id": 608262623,
    "node_id": "MDU6SXNzdWU2MDgyNjI2MjM=",
    "number": 4259,
    "title": "After releasing a new production version, I always get : Uncaught SyntaxError: Unexpected token '<'",
    "user": {
      "login": "kopax",
      "id": 1866564,
      "node_id": "MDQ6VXNlcjE4NjY1NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1866564?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kopax",
      "html_url": "https://github.com/kopax",
      "followers_url": "https://api.github.com/users/kopax/followers",
      "following_url": "https://api.github.com/users/kopax/following{/other_user}",
      "gists_url": "https://api.github.com/users/kopax/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kopax/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kopax/subscriptions",
      "organizations_url": "https://api.github.com/users/kopax/orgs",
      "repos_url": "https://api.github.com/users/kopax/repos",
      "events_url": "https://api.github.com/users/kopax/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kopax/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-04-28T12:02:49Z",
    "updated_at": "2020-04-28T20:56:14Z",
    "closed_at": "2020-04-28T20:56:14Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "# Bug report\r\n\r\n**What is the current behavior?**\r\n\r\nAfter deploying a new version of my application, \r\n\r\nI often see in my console this error that break my application:\r\n\r\n<img src=\"https://i.stack.imgur.com/0Mzis.png\" />\r\n\r\n    Uncaught SyntaxError: Unexpected token '<'\r\n\r\nThe solution is to refresh the page, but that's not a reliable solution for my end users.\r\n\r\nThis is how I serv my `index.html` in express:\r\n\r\n```js\r\n  app.use(express.static(join(__dirname, '../web-build')));\r\n  app.get('*', (req, res) => res.sendFile(join(__dirname, '../web-build/index.html')));\r\n```\r\n\r\nAny clue on how I can prevent that?\r\n\r\n\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce.**\r\n\r\n- Deploy a new version in production\r\n\r\n**What is the expected behavior?**\r\n\r\n\r\n- User should get the latest version\r\n\r\n**Other relevant information:**\r\n\r\nwebpack version:  ^4.43.0\r\nNode.js version: 14\r\nOperating System: alpine\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4259/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4259/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4258",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4258/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4258/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4258/events",
    "html_url": "https://github.com/expressjs/express/issues/4258",
    "id": 607937713,
    "node_id": "MDU6SXNzdWU2MDc5Mzc3MTM=",
    "number": 4258,
    "title": "After sending POST request, it gives GET https://localhost:9000/mailServer 404 (Not found)",
    "user": {
      "login": "MirzadVa",
      "id": 52415551,
      "node_id": "MDQ6VXNlcjUyNDE1NTUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/52415551?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MirzadVa",
      "html_url": "https://github.com/MirzadVa",
      "followers_url": "https://api.github.com/users/MirzadVa/followers",
      "following_url": "https://api.github.com/users/MirzadVa/following{/other_user}",
      "gists_url": "https://api.github.com/users/MirzadVa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MirzadVa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MirzadVa/subscriptions",
      "organizations_url": "https://api.github.com/users/MirzadVa/orgs",
      "repos_url": "https://api.github.com/users/MirzadVa/repos",
      "events_url": "https://api.github.com/users/MirzadVa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MirzadVa/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2020-04-28T00:25:09Z",
    "updated_at": "2020-04-28T02:29:21Z",
    "closed_at": "2020-04-28T01:19:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This is my code.\r\n```\r\nconst express = require('express');\r\nconst app = express();\r\nconst bodyParser = require('body-parser')\r\n\r\nconst port = 9000;\r\n\r\napp.use(bodyParser.urlencoded({\r\n    extended: true\r\n}));\r\napp.use(bodyParser.json());\r\n\r\napp.post('mailServer', (req, res) =>{\r\nres.send(req.body)\r\nres.end();\r\n})\r\n\r\napp.listen(port, ()=>console.log(`Server listen on ${port}`)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4258/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4258/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4257",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4257/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4257/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4257/events",
    "html_url": "https://github.com/expressjs/express/issues/4257",
    "id": 607371003,
    "node_id": "MDU6SXNzdWU2MDczNzEwMDM=",
    "number": 4257,
    "title": "res.render called more than once",
    "user": {
      "login": "khanbaba",
      "id": 5001760,
      "node_id": "MDQ6VXNlcjUwMDE3NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5001760?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/khanbaba",
      "html_url": "https://github.com/khanbaba",
      "followers_url": "https://api.github.com/users/khanbaba/followers",
      "following_url": "https://api.github.com/users/khanbaba/following{/other_user}",
      "gists_url": "https://api.github.com/users/khanbaba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/khanbaba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/khanbaba/subscriptions",
      "organizations_url": "https://api.github.com/users/khanbaba/orgs",
      "repos_url": "https://api.github.com/users/khanbaba/repos",
      "events_url": "https://api.github.com/users/khanbaba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/khanbaba/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-04-27T09:06:24Z",
    "updated_at": "2020-04-30T08:48:50Z",
    "closed_at": "2020-04-27T12:03:04Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi, I am using express v4.6 and ejs v2.5.6.\r\nThe problem is that in async usage the res.render called more than once.\r\nI have posted the problem here: https://stackoverflow.com/questions/61455213/express-ejs-res-render-called-more-than-once",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4257/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4257/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4256",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4256/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4256/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4256/events",
    "html_url": "https://github.com/expressjs/express/issues/4256",
    "id": 607009384,
    "node_id": "MDU6SXNzdWU2MDcwMDkzODQ=",
    "number": 4256,
    "title": "How to use async/await in express 5?",
    "user": {
      "login": "vipkouyu",
      "id": 29297132,
      "node_id": "MDQ6VXNlcjI5Mjk3MTMy",
      "avatar_url": "https://avatars.githubusercontent.com/u/29297132?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vipkouyu",
      "html_url": "https://github.com/vipkouyu",
      "followers_url": "https://api.github.com/users/vipkouyu/followers",
      "following_url": "https://api.github.com/users/vipkouyu/following{/other_user}",
      "gists_url": "https://api.github.com/users/vipkouyu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vipkouyu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vipkouyu/subscriptions",
      "organizations_url": "https://api.github.com/users/vipkouyu/orgs",
      "repos_url": "https://api.github.com/users/vipkouyu/repos",
      "events_url": "https://api.github.com/users/vipkouyu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vipkouyu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-04-26T13:12:08Z",
    "updated_at": "2020-05-18T19:41:44Z",
    "closed_at": "2020-04-26T20:01:06Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Here is my express 4.X code as follows:\r\n\r\n```\r\nrouter.post('/sign-in/do',function(req,res){\r\n\r\n\tdb.query('sql08',[req.body.email,req.body.pswd]).then(function(result){\r\n\t\tconsole.log('result:',result);\r\n\t\tif (result.length > 0) {\r\n\t\t\treq.login(result[0].id,function(err){\r\n\t\t\t\tif(err){\r\n\t\t\t\t\treturn res.send('19');\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn res.send('99');\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tdb.query('sql25',[req.body.email,t]).then(function(result){\r\n\t\t\t\tif(result.length > 0){\r\n\t\t\t\t\tvar count=result[0].count+1;\r\n\t\t\t\t\tdb.query('str26',[++result[0].count,req.body.email,t]).then(function(data){\r\n\t\t\t\t\t})\r\n\t\t\t\t}else{\r\n\t\t\t\t\tvar row={};\r\n\t\t\t\t\tdb.query('sql27',row).then(function(data){\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\treturn res.send('10');\r\n\t\t}\r\n\t});\t\r\n});\r\n```\r\n\r\nI want to use async/await in express 5, but i don't find a example anywhere.  As the following code, the mysql part has no problem（I have used bluebird to return a promise in mysql.js） ,but the other part code i think have a  lot problem. \r\n\r\n1、Is the right way to use async function?\r\n2、In the async function, you can't use .then function(req.login)?\r\n3、How to catch errors?\r\n\r\n\r\n```\r\nrouter.post('/sign-in/do',async function(req,res){\r\n\r\n\tlet result =await db.query('sql08',[req.body.email,req.body.pswd])\r\n\tconsole.log('result:',result);\r\n\tif (result.length > 0) {\r\n\t\treq.login(result[0].id,function(err){\r\n\t\t\tif(err){\r\n\t\t\t\treturn res.send('19');\r\n\t\t\t}else{\r\n\t\t\t\treturn res.send('99');\r\n\t\t\t}\r\n\t\t})\r\n\t} else {\r\n\t\tawait db.query('sql25',[req.body.email,t])\r\n\t\tif(result.length > 0){\r\n\t\t\tvar count=result[0].count+1;\r\n\t\t\tawait db.query('sql26',[++result[0].count,req.body.email,t])\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\tvar row={};\r\n\t\t\tawait db.query('sql27',row)\r\n\t\t}\r\n\t})\r\n\treturn res.send('10');\r\n});\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4256/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4256/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4255",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4255/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4255/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4255/events",
    "html_url": "https://github.com/expressjs/express/issues/4255",
    "id": 606965045,
    "node_id": "MDU6SXNzdWU2MDY5NjUwNDU=",
    "number": 4255,
    "title": "Weird CORS behaviour that changes with Express Router",
    "user": {
      "login": "nuxeric",
      "id": 48699932,
      "node_id": "MDQ6VXNlcjQ4Njk5OTMy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48699932?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nuxeric",
      "html_url": "https://github.com/nuxeric",
      "followers_url": "https://api.github.com/users/nuxeric/followers",
      "following_url": "https://api.github.com/users/nuxeric/following{/other_user}",
      "gists_url": "https://api.github.com/users/nuxeric/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nuxeric/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nuxeric/subscriptions",
      "organizations_url": "https://api.github.com/users/nuxeric/orgs",
      "repos_url": "https://api.github.com/users/nuxeric/repos",
      "events_url": "https://api.github.com/users/nuxeric/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nuxeric/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-04-26T09:24:16Z",
    "updated_at": "2020-04-26T22:08:33Z",
    "closed_at": "2020-04-26T22:08:32Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello so I am running into this weird issue using Express.Router. \r\n\r\ntdlr: I get cors issue when using middleware through express.router.use() but not if I embedded it in each individual this.router.get() or this.router.post() function\r\n\r\nHere is the situation. I have three applications a frontend (localhost:3000), a backend localhost:8080, and an authentication server localhost:8000. \r\n\r\nMy backend has CORS enabled. This is what my Server.ts file looks like: \r\n(I am trying to follow an OOP style of programming so all my classes / files are styled as such )\r\n```typescript\r\nexport default class Server {\r\n  private app: express.Application;\r\n  private port: number;\r\n  private httpsServer: https.Server;\r\n  private router: Router;\r\n\r\n  constructor(port?: number) {\r\n    this.port = port || 8080;\r\n    this.httpsServer = https.createServer(options, this.app);\r\n    this.app.use(bodyParser.json());\r\n    this.app.use(bodyParser.urlencoded({ extended: true }));\r\n    this.app.use(helmet());\r\n    this.app.set(\"trust proxy\", 1); // trust first proxy\r\n    this.app.use((req, res, next) => {\r\n      res.header(\"Access-Control-Allow-Origin\", \"https://localhost:3000\");\r\n      res.header(\r\n        \"Access-Control-Allow-Headers\",\r\n        \"Origin, X-Requested-With, Content-Type, Accept\"\r\n      );\r\n      res.header(\"Access-Control-Allow-Credentials\", \"true\");\r\n      next();\r\n    });\r\n    this.router = express.Router();\r\n    this.initRoutes();\r\n  }\r\n\r\n  public listen(): void {\r\n    this.httpsServer.listen(this.port, () => {\r\n      logger.info(`Https server listening on port ${this.port}`);\r\n    });\r\n  }\r\n\r\n  private initRoutes(): void {\r\n    this.app.use(\"/\", new testRoute().router);\r\n  }\r\n}\r\n```\r\n\r\nAnd my testRouter.ts looks like this\r\n\r\n```typescript\r\nexport default class testRoute {\r\n  public router: Router;\r\n\r\n  constructor() {\r\n    this.router = express.Router();\r\n  }\r\n\r\n  private initializeRoutes(): void {\r\n    this.router.use(this.verifyTokenAndContinue);\r\n    this.privateRoute();\r\n  }\r\n\r\n// middleware that basically sends API request to authserver and if its 2XX then it calls Express next(); \r\n async verifyTokenAndContinue(req: any, res: any, next: any): Promise<void> {\r\n    try {\r\n      const result = await axios.get(\r\n        `http://localhost:8000/api/user/verify`,\r\n        {\r\n          headers: { Authorization: `Bearer ${req!.session!.authToken}` },\r\n        }\r\n      );\r\n      res.locals.userUID = result.data.userUID;\r\n      next();\r\n    } catch (error) {\r\n      res.status(500).send();\r\n    }\r\n  }\r\n\r\n  private privateRoute(): void {\r\n    this.router.post(\"/1\", (req, res) => {\r\n      res.send(\"POST TEST\");\r\n    });\r\n  }\r\n}\r\n```\r\n\r\nWhen I set up my files like so I get an error saying : \r\n\r\n```\r\nAccess to XMLHttpRequest at 'https://localhost:8080/1' from origin 'https://localhost:3000' has been blocked by CORS policy: Response to preflight request doesn't pass access control check: It does not have HTTP ok status.\r\n```\r\n\r\nHOWEVER!!!!  This is the most important part when I structure my  testRouter.ts like so:\r\n\r\n```typescript\r\nexport default class testRoute {\r\n  public router: Router;\r\n\r\n  constructor() {\r\n    this.router = express.Router();\r\n  }\r\n\r\n  private initializeRoutes(): void {\r\n//    this.router.use(this.verifyTokenAndContinue); <--- I COMMENTED THIS OUT\r\n    this.privateRoute();\r\n  }\r\n\r\n// middleware that basically sends API request to auth server and if its 200 then it calls Express next(); \r\n private async verifyTokenAndContinue(req: any, res: any, next: any): Promise<void> {\r\n    try {\r\n      const result = await axios.get(\r\n        `http://localhost:8000/api/user/verify`,\r\n        {\r\n          headers: { Authorization: `Bearer ${req!.session!.authToken}` },\r\n        }\r\n      );\r\n      res.locals.userUID = result.data.userUID;\r\n      next();\r\n    } catch (error) {\r\n      res.status(500).send();\r\n    }\r\n  }\r\n\r\n// I ADDED THE FUNCTION HERE AS A MIDDLEWARE\r\n  private privateRoute(): void {\r\n    this.router.post(\"/1\", this.verifyTokenAndContinue, (req, res) => {\r\n      res.send(\"POST TEST\");\r\n    });\r\n  }\r\n}\r\n```\r\n\r\nthen I get no cors issue and it works perfectly fine\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4255/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4255/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4254",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4254/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4254/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4254/events",
    "html_url": "https://github.com/expressjs/express/issues/4254",
    "id": 606935511,
    "node_id": "MDU6SXNzdWU2MDY5MzU1MTE=",
    "number": 4254,
    "title": "When I start the express, when I want to stop, press ctrl c, terminal will report error ",
    "user": {
      "login": "dalxy",
      "id": 48442252,
      "node_id": "MDQ6VXNlcjQ4NDQyMjUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48442252?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dalxy",
      "html_url": "https://github.com/dalxy",
      "followers_url": "https://api.github.com/users/dalxy/followers",
      "following_url": "https://api.github.com/users/dalxy/following{/other_user}",
      "gists_url": "https://api.github.com/users/dalxy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dalxy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dalxy/subscriptions",
      "organizations_url": "https://api.github.com/users/dalxy/orgs",
      "repos_url": "https://api.github.com/users/dalxy/repos",
      "events_url": "https://api.github.com/users/dalxy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dalxy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-04-26T06:38:36Z",
    "updated_at": "2020-04-26T07:38:46Z",
    "closed_at": "2020-04-26T07:38:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "C:\\Users\\Desktop\\项目\\mydemo\\myexpress\\demo>npm start\r\n\r\n> demo@0.0.0 start C:\\Users\\Desktop\\项目\\mydemo\\myexpress\\demo \r\n> node ./bin/www\r\n\r\n^Cnpm ERR! code ELIFECYCLE\r\nnpm ERR! errno 3221225786\r\nnpm ERR! demo@0.0.0 start: `node ./bin/www`\r\nnpm ERR! Exit status 3221225786\r\nnpm ERR!\r\nnpm ERR! Failed at the demo@0.0.0 start script.\r\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\r\n\r\nnpm ERR! A complete log of this run can be found in:\r\nnpm ERR!     C:\\Users\\AppData\\Roaming\\npm-cache\\_logs\\2020-04-26T06_38_18_047Z-debug.log\r\n^C终止批处理操作吗(Y/N)?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4254/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4254/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4253",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4253/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4253/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4253/events",
    "html_url": "https://github.com/expressjs/express/pull/4253",
    "id": 606558439,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDA4NzQ1NjI1",
    "number": 4253,
    "title": "Fix cookie not clearing if maxAge is set. Closes #4252",
    "user": {
      "login": "harryjamesuk",
      "id": 1688323,
      "node_id": "MDQ6VXNlcjE2ODgzMjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1688323?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/harryjamesuk",
      "html_url": "https://github.com/harryjamesuk",
      "followers_url": "https://api.github.com/users/harryjamesuk/followers",
      "following_url": "https://api.github.com/users/harryjamesuk/following{/other_user}",
      "gists_url": "https://api.github.com/users/harryjamesuk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/harryjamesuk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/harryjamesuk/subscriptions",
      "organizations_url": "https://api.github.com/users/harryjamesuk/orgs",
      "repos_url": "https://api.github.com/users/harryjamesuk/repos",
      "events_url": "https://api.github.com/users/harryjamesuk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/harryjamesuk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-04-24T20:16:18Z",
    "updated_at": "2020-04-24T20:24:05Z",
    "closed_at": "2020-04-24T20:24:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4253",
      "html_url": "https://github.com/expressjs/express/pull/4253",
      "diff_url": "https://github.com/expressjs/express/pull/4253.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4253.patch",
      "merged_at": null
    },
    "body": "Closes issue [#4252](https://github.com/expressjs/express/issues/4252).\r\nSince maxAge takes precedence over expires, if maxAge was set the cookie would not expire.\r\n\r\n- Changed merge parameters' orders so that the cookie's options are overrided by `{maxAge:0}`. Note `expires: new Date(1)` has been removed as it is now obsolete since when `maxAge` is set, `expires` will also be set.\r\n- Also updated logic relating to setting `expires` property when `maxAge` is set. If `maxAge` is `<=0` it will set `expires` to a past date. Otherwise, set it to the current `Date() + maxAge`.\r\n- Added appropriate tests checking the `expires` and `maxAge` properties are overriden by `clearCookie()`. Also updated existing tests so that they now expect a `Max-Age=0;` that is always set when a cookie is cleared now.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4253/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4253/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4252",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4252/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4252/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4252/events",
    "html_url": "https://github.com/expressjs/express/issues/4252",
    "id": 606557282,
    "node_id": "MDU6SXNzdWU2MDY1NTcyODI=",
    "number": 4252,
    "title": "Cookie's don't clear if maxAge is set",
    "user": {
      "login": "harryjamesuk",
      "id": 1688323,
      "node_id": "MDQ6VXNlcjE2ODgzMjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1688323?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/harryjamesuk",
      "html_url": "https://github.com/harryjamesuk",
      "followers_url": "https://api.github.com/users/harryjamesuk/followers",
      "following_url": "https://api.github.com/users/harryjamesuk/following{/other_user}",
      "gists_url": "https://api.github.com/users/harryjamesuk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/harryjamesuk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/harryjamesuk/subscriptions",
      "organizations_url": "https://api.github.com/users/harryjamesuk/orgs",
      "repos_url": "https://api.github.com/users/harryjamesuk/repos",
      "events_url": "https://api.github.com/users/harryjamesuk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/harryjamesuk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2020-04-24T20:14:01Z",
    "updated_at": "2020-04-24T20:35:28Z",
    "closed_at": "2020-04-24T20:23:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "If a cookie with a `maxAge` is set, performing `res.clearCookie()` will not clear the cookie.\r\n\r\nWe update the expiry in `clearCookie()` so the `expires` property is overriden to a past date:\r\n```javascript\r\nres.clearCookie = function clearCookie(name, options) {\r\n  var opts = merge({ expires: new Date(1), path: '/' }, options);\r\n\r\n  return this.cookie(name, '', opts);\r\n};\r\n```\r\n\r\nBut then when `this.cookie()` is called, it sees the cookie has a `maxAge` property, which will override the expiry date in this code:\r\n\r\n```javascript\r\n  if ('maxAge' in opts) {\r\n    opts.expires = new Date(Date.now() + opts.maxAge);\r\n    opts.maxAge /= 1000;\r\n  }\r\n```\r\n\r\nand the cookie therefore wouldn't be cleared *(In fact, it would actually cause the cookie's expiry date to be further into the future)*.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4252/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4252/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4251",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4251/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4251/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4251/events",
    "html_url": "https://github.com/expressjs/express/pull/4251",
    "id": 606454709,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDA4NjYyODU3",
    "number": 4251,
    "title": "GitHub Actions workflow for Linux and Windows machines",
    "user": {
      "login": "mickeygousset",
      "id": 20031479,
      "node_id": "MDQ6VXNlcjIwMDMxNDc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/20031479?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mickeygousset",
      "html_url": "https://github.com/mickeygousset",
      "followers_url": "https://api.github.com/users/mickeygousset/followers",
      "following_url": "https://api.github.com/users/mickeygousset/following{/other_user}",
      "gists_url": "https://api.github.com/users/mickeygousset/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mickeygousset/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mickeygousset/subscriptions",
      "organizations_url": "https://api.github.com/users/mickeygousset/orgs",
      "repos_url": "https://api.github.com/users/mickeygousset/repos",
      "events_url": "https://api.github.com/users/mickeygousset/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mickeygousset/received_events",
      "type": "User",
      "site_admin": true
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2020-04-24T16:59:02Z",
    "updated_at": "2022-10-06T14:16:29Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4251",
      "html_url": "https://github.com/expressjs/express/pull/4251",
      "diff_url": "https://github.com/expressjs/express/pull/4251.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4251.patch",
      "merged_at": null
    },
    "body": "Edit: added @tspascoal as a co-author on this. \r\n\r\n@tspascoal and I have created a GitHub Actions workflow that will build express on both Linux and Windows machines.  I have not opened an issue to link to this, in order to allow all discussion to happen on the PR. I'm happy to open an issue if someone would like me to.\r\n\r\nAverage build time for Travis (Linux) and AppVeyor(Windows) pipelines currently in use is around 30 minutes.  With this workflow, I was able to build both Linux and Windows in just over 5 minutes, total. This is in part due to the number of concurrent pipelines that GitHub gives to open source projects.\r\n\r\nIf you look at the file, you'll notice I am using the same steps for both the Linux builds and the Windows builds.  This allows for code reuse, and also makes it where, if you need to modify a step, you only have to modify it in one place.\r\n\r\nI'm making use of a matrix strategy as well.  Right now, the workflow is set to only use Linux and Windows. If we wanted to also build on Mac (which is an option), all we would need to do is add `macos-latest` to the matrix. The same with any other specific versions of Node we would want to test against.\r\n\r\n[Here is an example of the build output.](https://github.com/mickeygousset/express/actions/runs/86911642)\r\n\r\n[Here is an example of a specific job (Node 2.5 running on Linux)](https://github.com/mickeygousset/express/runs/615992721?check_suite_focus=true)\r\n\r\nYou can click into the jobs and then into each individual step on a job and see details of the run.\r\n\r\nAt this point, this workflow does everything the current Travis and Appveyor workflows do.  In addition, it goes a step beyond the AppVeyor workflow, because the GH Action workflow supports pulling down the nightly build for the Windows build (similar to what the Travis build does), which the current Appveyor workflow does not do.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4251/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4251/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4250",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4250/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4250/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4250/events",
    "html_url": "https://github.com/expressjs/express/issues/4250",
    "id": 606100991,
    "node_id": "MDU6SXNzdWU2MDYxMDA5OTE=",
    "number": 4250,
    "title": "Do I want to add something to the response of all interfaces",
    "user": {
      "login": "smallbirdwy",
      "id": 59526030,
      "node_id": "MDQ6VXNlcjU5NTI2MDMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/59526030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smallbirdwy",
      "html_url": "https://github.com/smallbirdwy",
      "followers_url": "https://api.github.com/users/smallbirdwy/followers",
      "following_url": "https://api.github.com/users/smallbirdwy/following{/other_user}",
      "gists_url": "https://api.github.com/users/smallbirdwy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smallbirdwy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smallbirdwy/subscriptions",
      "organizations_url": "https://api.github.com/users/smallbirdwy/orgs",
      "repos_url": "https://api.github.com/users/smallbirdwy/repos",
      "events_url": "https://api.github.com/users/smallbirdwy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smallbirdwy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2020-04-24T07:24:41Z",
    "updated_at": "2020-04-26T03:29:50Z",
    "closed_at": "2020-04-26T02:04:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Do I want to add something to the response of all interfaces",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4250/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4250/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4248",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4248/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4248/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4248/events",
    "html_url": "https://github.com/expressjs/express/issues/4248",
    "id": 605959954,
    "node_id": "MDU6SXNzdWU2MDU5NTk5NTQ=",
    "number": 4248,
    "title": "Idea: Add Named Routes",
    "user": {
      "login": "getspooky",
      "id": 37160072,
      "node_id": "MDQ6VXNlcjM3MTYwMDcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/37160072?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/getspooky",
      "html_url": "https://github.com/getspooky",
      "followers_url": "https://api.github.com/users/getspooky/followers",
      "following_url": "https://api.github.com/users/getspooky/following{/other_user}",
      "gists_url": "https://api.github.com/users/getspooky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/getspooky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/getspooky/subscriptions",
      "organizations_url": "https://api.github.com/users/getspooky/orgs",
      "repos_url": "https://api.github.com/users/getspooky/repos",
      "events_url": "https://api.github.com/users/getspooky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/getspooky/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-04-24T00:41:35Z",
    "updated_at": "2020-04-24T00:44:26Z",
    "closed_at": "2020-04-24T00:44:26Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Named routes allow the convenient generation of URLs or redirects for specific routes. You may specify a name for a route by chaining the `name` method onto the route definition:\r\n```js\r\napp.get('/user/', function (req, res) {\r\n  res.send('USER')\r\n}).name('user')\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4248/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4248/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4246",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4246/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4246/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4246/events",
    "html_url": "https://github.com/expressjs/express/issues/4246",
    "id": 604728113,
    "node_id": "MDU6SXNzdWU2MDQ3MjgxMTM=",
    "number": 4246,
    "title": "Router should honour disabling 'X-Powered-By' on app",
    "user": {
      "login": "boojum",
      "id": 1714885,
      "node_id": "MDQ6VXNlcjE3MTQ4ODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1714885?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/boojum",
      "html_url": "https://github.com/boojum",
      "followers_url": "https://api.github.com/users/boojum/followers",
      "following_url": "https://api.github.com/users/boojum/following{/other_user}",
      "gists_url": "https://api.github.com/users/boojum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/boojum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/boojum/subscriptions",
      "organizations_url": "https://api.github.com/users/boojum/orgs",
      "repos_url": "https://api.github.com/users/boojum/repos",
      "events_url": "https://api.github.com/users/boojum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/boojum/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2020-04-22T12:44:27Z",
    "updated_at": "2020-04-22T13:48:17Z",
    "closed_at": "2020-04-22T13:35:12Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "NOTE: Not an issue. I was importing `express` instead of `Router`, like `import Router from 'express'`. This was due to using `node` experimental esm support via `\"type\": \"module\"` set in `package.json`. If I try to import `Router` the correct way - `import { Router } from 'express'` - it yells at me: `SyntaxError: The requested module 'express' does not provide an export named 'Router'`. Using `express.Router()` solves the issue.\r\n\r\n\r\nI can set `app.disable('x-powered-by')` and it will stop emitting the header alright. But then I have to do it for every instance for `Router()` as well, as in: `router.disable('x-powered-by')`.\r\n\r\nThis is not a major issue in a small scale projects but becomes a PITA when there's many router instance spread across numerous files. Code repetition, even if it is one line is not fun ;-)\r\n\r\nCan `Router()` read global `app` settings and use those _if_ they differ from the defaults or those not explicitly set on the `Router()`'s instance?\r\n\r\nOr perhaps I missed something here? [Repo to reproduce the issue](https://gitlab.com/b00jum/x-powered-by).",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4246/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4246/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4245",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4245/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4245/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4245/events",
    "html_url": "https://github.com/expressjs/express/issues/4245",
    "id": 604077942,
    "node_id": "MDU6SXNzdWU2MDQwNzc5NDI=",
    "number": 4245,
    "title": "Export router in Typescript",
    "user": {
      "login": "flexwie",
      "id": 1215778,
      "node_id": "MDQ6VXNlcjEyMTU3Nzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1215778?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/flexwie",
      "html_url": "https://github.com/flexwie",
      "followers_url": "https://api.github.com/users/flexwie/followers",
      "following_url": "https://api.github.com/users/flexwie/following{/other_user}",
      "gists_url": "https://api.github.com/users/flexwie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/flexwie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/flexwie/subscriptions",
      "organizations_url": "https://api.github.com/users/flexwie/orgs",
      "repos_url": "https://api.github.com/users/flexwie/repos",
      "events_url": "https://api.github.com/users/flexwie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/flexwie/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-04-21T15:13:13Z",
    "updated_at": "2020-04-21T15:16:12Z",
    "closed_at": "2020-04-21T15:16:12Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am rewriting an express route to use TypeScripts typing features, but I am running into issues correctly exporting the router so i can use() it in my main app. No matter how I try to do it\r\n\r\n`export router; export default router; export = router; export = { router }`\r\n\r\nit always returns an error when running it (not during build):\r\n\r\n> TypeError: Router.use() requires a middleware function but got a Object\r\n\r\nI am quite certain that its just a syntax error but I can't put my finger on it and I'm running out of ideas...",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4245/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4245/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4244",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4244/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4244/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4244/events",
    "html_url": "https://github.com/expressjs/express/issues/4244",
    "id": 603976338,
    "node_id": "MDU6SXNzdWU2MDM5NzYzMzg=",
    "number": 4244,
    "title": "Error handler from docs not working",
    "user": {
      "login": "JacobWrenn",
      "id": 37597713,
      "node_id": "MDQ6VXNlcjM3NTk3NzEz",
      "avatar_url": "https://avatars.githubusercontent.com/u/37597713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JacobWrenn",
      "html_url": "https://github.com/JacobWrenn",
      "followers_url": "https://api.github.com/users/JacobWrenn/followers",
      "following_url": "https://api.github.com/users/JacobWrenn/following{/other_user}",
      "gists_url": "https://api.github.com/users/JacobWrenn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JacobWrenn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JacobWrenn/subscriptions",
      "organizations_url": "https://api.github.com/users/JacobWrenn/orgs",
      "repos_url": "https://api.github.com/users/JacobWrenn/repos",
      "events_url": "https://api.github.com/users/JacobWrenn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JacobWrenn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-04-21T12:56:30Z",
    "updated_at": "2020-04-21T13:34:03Z",
    "closed_at": "2020-04-21T13:24:20Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "At <https://expressjs.com/en/guide/error-handling.html> it says I can use this to catch errors.\r\n\r\n``` js\r\napp.use(function (err, req, res, next) {\r\n  console.error(err.stack)\r\n  res.status(500).send('Something broke!')\r\n})\r\n```\r\n\r\nHowever in my simple test script it does nothing and just prints the error to the browser rather than the custom `'something broke'` message.\r\n\r\nThis is my test script.\r\n\r\n``` js\r\nconst express = require('express');\r\n\r\nconst app = express();\r\n\r\napp.get('/err', (req, res, next) => {\r\n  throw 'error'\r\n})\r\n\r\napp.use(function (err, req, res, next) {\r\n  console.error(err.stack)\r\n  res.status(500).send('Something broke!')\r\n})\r\n\r\napp.listen(33333);\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4244/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4244/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4242",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4242/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4242/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4242/events",
    "html_url": "https://github.com/expressjs/express/issues/4242",
    "id": 602322741,
    "node_id": "MDU6SXNzdWU2MDIzMjI3NDE=",
    "number": 4242,
    "title": "Serve static files only to logged in user",
    "user": {
      "login": "oe-bayram",
      "id": 3321668,
      "node_id": "MDQ6VXNlcjMzMjE2Njg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3321668?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/oe-bayram",
      "html_url": "https://github.com/oe-bayram",
      "followers_url": "https://api.github.com/users/oe-bayram/followers",
      "following_url": "https://api.github.com/users/oe-bayram/following{/other_user}",
      "gists_url": "https://api.github.com/users/oe-bayram/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/oe-bayram/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/oe-bayram/subscriptions",
      "organizations_url": "https://api.github.com/users/oe-bayram/orgs",
      "repos_url": "https://api.github.com/users/oe-bayram/repos",
      "events_url": "https://api.github.com/users/oe-bayram/events{/privacy}",
      "received_events_url": "https://api.github.com/users/oe-bayram/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-04-18T00:20:23Z",
    "updated_at": "2020-04-18T00:41:01Z",
    "closed_at": "2020-04-18T00:41:01Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When a user calls a route with params then a specific directory should be accessible for this user as static files. \r\n\r\nI have multiple users who can upload images to the server. When the user calls the route '/manageFiles/:clientID' then a page will be rendered with all his uploaded image files so the directory 'uploads/:clientID' should be accessible only for this user as static files to show them on the rendered page.\r\n\r\nIs this possible?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4242/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4242/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4239",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4239/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4239/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4239/events",
    "html_url": "https://github.com/expressjs/express/pull/4239",
    "id": 599019546,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDAyNzQ4NzA0",
    "number": 4239,
    "title": "request to add Olalekan Ikotun to the triage team.",
    "user": {
      "login": "ghinks",
      "id": 5049078,
      "node_id": "MDQ6VXNlcjUwNDkwNzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5049078?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghinks",
      "html_url": "https://github.com/ghinks",
      "followers_url": "https://api.github.com/users/ghinks/followers",
      "following_url": "https://api.github.com/users/ghinks/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghinks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghinks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghinks/subscriptions",
      "organizations_url": "https://api.github.com/users/ghinks/orgs",
      "repos_url": "https://api.github.com/users/ghinks/repos",
      "events_url": "https://api.github.com/users/ghinks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghinks/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-04-13T17:27:13Z",
    "updated_at": "2020-07-11T00:34:43Z",
    "closed_at": "2020-07-11T00:34:42Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4239",
      "html_url": "https://github.com/expressjs/express/pull/4239",
      "diff_url": "https://github.com/expressjs/express/pull/4239.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4239.patch",
      "merged_at": null
    },
    "body": "Please add Olalekan Ikotun to the triage members.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4239/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4239/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4238",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4238/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4238/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4238/events",
    "html_url": "https://github.com/expressjs/express/issues/4238",
    "id": 597425626,
    "node_id": "MDU6SXNzdWU1OTc0MjU2MjY=",
    "number": 4238,
    "title": "How to render mySQL Data using Express and EJS",
    "user": {
      "login": "crosssisters",
      "id": 46560849,
      "node_id": "MDQ6VXNlcjQ2NTYwODQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/46560849?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/crosssisters",
      "html_url": "https://github.com/crosssisters",
      "followers_url": "https://api.github.com/users/crosssisters/followers",
      "following_url": "https://api.github.com/users/crosssisters/following{/other_user}",
      "gists_url": "https://api.github.com/users/crosssisters/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/crosssisters/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/crosssisters/subscriptions",
      "organizations_url": "https://api.github.com/users/crosssisters/orgs",
      "repos_url": "https://api.github.com/users/crosssisters/repos",
      "events_url": "https://api.github.com/users/crosssisters/events{/privacy}",
      "received_events_url": "https://api.github.com/users/crosssisters/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-04-09T17:04:27Z",
    "updated_at": "2020-04-09T19:01:10Z",
    "closed_at": "2020-04-09T17:09:22Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi, it's my first time submitting an issue here.. I ran into this error. I am going through a mysql course and I'm working on goormIDE. I can't figure out how to display my mySQL data on an HTML page. Right now I am using Express, mySQL, and EJS.I have my mySQL database called join_us.\r\nI want to use Express (Node.js) to read in all the data. Then I want to send that data to the ejs file to render HTML.\r\nHere is my current error.This same error pops up in the webpage and the console. I don't know why this is happening. I used res.render().s there anything else you guys think I should fix? I am using all these languages/frameworks for the first time so I've very inexperienced.\r\n\r\n\r\nReferenceError: /workspace/mysql/JoinUs/views/home.ejs:3\r\n    1| <h1>JOIN US</h1>\r\n    2|  \r\n >> 3| <p class=\"lead\">Enter your email to join <strong><%= count %></strong> \r\n    4| others on our waitlist. We are 100% not a cult. </p>\r\n    5|  \r\n    6| <form method=\"POST\" action='/register'>\r\n\r\ncount is not defined\r\n    at eval (/workspace/mysql/JoinUs/views/home.ejs:12:26)\r\n    at home (/workspace/mysql/JoinUs/node_modules/ejs/lib/ejs.js:662:17)\r\n    at tryHandleCache (/workspace/mysql/JoinUs/node_modules/ejs/lib/ejs.js:255:36)\r\n    at View.exports.renderFile [as engine] (/workspace/mysql/JoinUs/node_modules/ejs/lib/ejs.js:461:10)\r\n    at View.render (/workspace/mysql/JoinUs/node_modules/express/lib/view.js:135:8)\r\n    at tryRender (/workspace/mysql/JoinUs/node_modules/express/lib/application.js:640:10)\r\n    at Function.render (/workspace/mysql/JoinUs/node_modules/express/lib/application.js:592:3)\r\n    at ServerResponse.render (/workspace/mysql/JoinUs/node_modules/express/lib/response.js:1012:7)\r\n    at Query.<anonymous> (/workspace/mysql/JoinUs/app.js:28:7)\r\n    at Query.<anonymous> (/workspace/mysql/JoinUs/node_modules/mysql/lib/Connection.js:526:10)\r\n\r\n--------------------------------------------------------------------------------------------\r\nThis is my ejs file: (It's called home.ejs)\r\n<h1>JOIN US</h1>\r\n \r\n<p class=\"lead\">Enter your email to join <strong><%= count %></strong> \r\nothers on our waitlist. We are 100% not a cult. </p>\r\n \r\n<form method=\"POST\" action='/register'>\r\n <input type=\"text\" class=\"form\" placeholder=\"Enter Your Email\">\r\n <button>Join Now</button>\r\n</form>\r\n-------------------------------------------------------------------------------------------\r\nMy js file( app.js)\r\n\r\nvar express = require('express');\r\nvar mysql = require('mysql');\r\nvar app = express();\r\n\r\napp.set(\"view engine\", \"ejs\"); \r\n\r\nvar connection = mysql.createConnection({\r\n  host     : 'localhost',\r\n  user     : 'root',     \r\n  database : 'join_us'   \r\n});\r\n\r\napp.get(\"/\", function(req, res){\r\n// Find COUNT of users in DB\r\n\tvar q = \"SELECT COUNT(*) AS count FROM users\";\r\n\tconnection.query(q, function(err, results){\r\n\t\t\r\n\t\tif (err) throw err;\r\n\t\tvar count = results[0].count;\r\n\t\t// res.send(\"We have \" + count + \" users in our DB\");\r\n\t\tres.render(\"home\");\r\n\t\t\r\n\t});\r\n\t\r\n});\r\napp.listen(3000, function(){\r\n\t\r\n\tconsole.log('Server runing on 3000!')\r\n});\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4238/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4238/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4236",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4236/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4236/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4236/events",
    "html_url": "https://github.com/expressjs/express/issues/4236",
    "id": 596693908,
    "node_id": "MDU6SXNzdWU1OTY2OTM5MDg=",
    "number": 4236,
    "title": "next function causing issue some times",
    "user": {
      "login": "veeRN135",
      "id": 37747111,
      "node_id": "MDQ6VXNlcjM3NzQ3MTEx",
      "avatar_url": "https://avatars.githubusercontent.com/u/37747111?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/veeRN135",
      "html_url": "https://github.com/veeRN135",
      "followers_url": "https://api.github.com/users/veeRN135/followers",
      "following_url": "https://api.github.com/users/veeRN135/following{/other_user}",
      "gists_url": "https://api.github.com/users/veeRN135/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/veeRN135/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/veeRN135/subscriptions",
      "organizations_url": "https://api.github.com/users/veeRN135/orgs",
      "repos_url": "https://api.github.com/users/veeRN135/repos",
      "events_url": "https://api.github.com/users/veeRN135/events{/privacy}",
      "received_events_url": "https://api.github.com/users/veeRN135/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-04-08T16:09:13Z",
    "updated_at": "2020-04-09T18:29:55Z",
    "closed_at": "2020-04-09T18:29:55Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "in my express.js app have an POST route (given below). when user performs an action the POST route gets called and the logic under post /response gets executed and then the user gets redirected to another page. most of the time this flow worked without issues, but one of the time i see POST being invoked and then immediately there is an GET call for the post URL which resulted in 404 and none of the code under post /response block got executed\r\n\r\ni am wondering if the next function is causing any issue by converting the POST to GET and not letting the code under POST /respone to execute?\r\n\r\n```\r\napp.use(function (req, res, next) {\r\n  res.locals.user = req.session.user;\r\n  logger.log(\"PAGE\", `Page: ${req.originalUrl}`);\r\n  next();\r\n});\r\n```\r\n\r\n ``` \r\napp.post(\"/response\",\r\n  [check('id').exists(),\r\n  check('check').exists()],\r\n  (req, res) => {\r\n//logic here\r\nreturn res.redirect(\"page2\");\r\n} \r\n```\r\n\r\nApache log:\r\n\r\n```\r\nxx.xx.xx.xx - - [30/Mar/2020:21:30:00 -0400] \"POST /response?c=val1&id=val2 HTTP/1.1\" 302 263\r\nxx.xx.xx.xx - - [30/Mar/2020:21:30:00 -0400] \"GET /response?c=val1&id=val2 HTTP/1.1\" **404** 15974\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4236/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4236/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4235",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4235/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4235/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4235/events",
    "html_url": "https://github.com/expressjs/express/issues/4235",
    "id": 595906425,
    "node_id": "MDU6SXNzdWU1OTU5MDY0MjU=",
    "number": 4235,
    "title": "Cannot set cookie from request object",
    "user": {
      "login": "asieverding",
      "id": 59558264,
      "node_id": "MDQ6VXNlcjU5NTU4MjY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/59558264?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asieverding",
      "html_url": "https://github.com/asieverding",
      "followers_url": "https://api.github.com/users/asieverding/followers",
      "following_url": "https://api.github.com/users/asieverding/following{/other_user}",
      "gists_url": "https://api.github.com/users/asieverding/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asieverding/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asieverding/subscriptions",
      "organizations_url": "https://api.github.com/users/asieverding/orgs",
      "repos_url": "https://api.github.com/users/asieverding/repos",
      "events_url": "https://api.github.com/users/asieverding/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asieverding/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-04-07T14:21:56Z",
    "updated_at": "2020-04-07T14:47:29Z",
    "closed_at": "2020-04-07T14:47:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello,\r\n\r\nI can set a cookie and it works well:\r\n```javascript\r\nres.cookie('test', 'Hello World')\r\n```\r\n\r\n...but if I want to set the cookie from my request object, it didn't work without any error messages:\r\n```javascript\r\nres.cookie('test', req.session.test)\r\n```\r\n\r\n`req.session.test` contains an access token in my case.\r\n\r\nPlease help me :)\r\nAndre",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4235/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4235/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4234",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4234/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4234/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4234/events",
    "html_url": "https://github.com/expressjs/express/issues/4234",
    "id": 595382248,
    "node_id": "MDU6SXNzdWU1OTUzODIyNDg=",
    "number": 4234,
    "title": "Router with same http method and same base url has weird behavior",
    "user": {
      "login": "ChristianMarca",
      "id": 39254595,
      "node_id": "MDQ6VXNlcjM5MjU0NTk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/39254595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ChristianMarca",
      "html_url": "https://github.com/ChristianMarca",
      "followers_url": "https://api.github.com/users/ChristianMarca/followers",
      "following_url": "https://api.github.com/users/ChristianMarca/following{/other_user}",
      "gists_url": "https://api.github.com/users/ChristianMarca/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ChristianMarca/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ChristianMarca/subscriptions",
      "organizations_url": "https://api.github.com/users/ChristianMarca/orgs",
      "repos_url": "https://api.github.com/users/ChristianMarca/repos",
      "events_url": "https://api.github.com/users/ChristianMarca/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ChristianMarca/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-04-06T19:48:37Z",
    "updated_at": "2020-04-06T20:04:07Z",
    "closed_at": "2020-04-06T19:53:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "> Express \r\n> Version\r\n> > ~4.16.1\r\n\r\nExample:\r\nCreate users info:\r\nI have two routes:\r\n`router.post('/users/:user/hobbies')` and `router.post('/users/:user/hobbies/likes')`\r\nif the first call is to `/users/:user/hobbies/likes` and after the second one is `/users/:user/hobbies`\r\nthe router will continue executing the first one handler, not the second one,\r\nbut if I never call `/users/:user/hobbies/likes` the router is executing the correct one.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4234/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4234/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4233",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4233/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4233/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4233/events",
    "html_url": "https://github.com/expressjs/express/issues/4233",
    "id": 594807023,
    "node_id": "MDU6SXNzdWU1OTQ4MDcwMjM=",
    "number": 4233,
    "title": "get undefined use express with readline",
    "user": {
      "login": "assmdx",
      "id": 19722693,
      "node_id": "MDQ6VXNlcjE5NzIyNjkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/19722693?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/assmdx",
      "html_url": "https://github.com/assmdx",
      "followers_url": "https://api.github.com/users/assmdx/followers",
      "following_url": "https://api.github.com/users/assmdx/following{/other_user}",
      "gists_url": "https://api.github.com/users/assmdx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/assmdx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/assmdx/subscriptions",
      "organizations_url": "https://api.github.com/users/assmdx/orgs",
      "repos_url": "https://api.github.com/users/assmdx/repos",
      "events_url": "https://api.github.com/users/assmdx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/assmdx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-04-06T05:10:05Z",
    "updated_at": "2020-04-06T12:38:05Z",
    "closed_at": "2020-04-06T07:00:04Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "```\r\n         // my express server code  \r\n\t const fs = require('fs');\r\n\t const readline = require('readline');\r\n\r\n\t async getLog(req, res) {\r\n\t  const _this = this;\r\n\t  try {\r\n\t\tconst { createReadStream } = fs;\r\n\t\tconst log = '/opt/example.log';\r\n\t\tconst readStream = createReadStream(log);\r\n\t\tconst rl = readline.createInterface(readStream, res);\r\n\t\trl.on(\"close\", () => {\r\n\t\t  console.log(\"end\");\r\n\t\t  readStream.close();\r\n\t\t  res.end();\r\n\t\t});\r\n\t  } catch (e) {\r\n\t\tconsole.error(e);\r\n\t\tres.json({\r\n                   code:2,\r\n                });\r\n\t  }\r\n\t}\r\n```\r\n\r\n```\r\n   // my browser code\r\n   fetch(getLog)\r\n    .then(async response => {\r\n      const reader = response.body.getReader();\r\n      do {\r\n        let { done, value } = await reader.read();\r\n        console.log(value);   //I got undefined here\r\n        if (done) {\r\n          break;\r\n        }\r\n      } while (true);\r\n    })\r\n    .catch(e => {\r\n      console.error(e);\r\n    });\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4233/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 1,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4233/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4232",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4232/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4232/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4232/events",
    "html_url": "https://github.com/expressjs/express/issues/4232",
    "id": 593963748,
    "node_id": "MDU6SXNzdWU1OTM5NjM3NDg=",
    "number": 4232,
    "title": "Cannot sendFile in views folder.",
    "user": {
      "login": "kingdomb",
      "id": 47176318,
      "node_id": "MDQ6VXNlcjQ3MTc2MzE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/47176318?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kingdomb",
      "html_url": "https://github.com/kingdomb",
      "followers_url": "https://api.github.com/users/kingdomb/followers",
      "following_url": "https://api.github.com/users/kingdomb/following{/other_user}",
      "gists_url": "https://api.github.com/users/kingdomb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kingdomb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kingdomb/subscriptions",
      "organizations_url": "https://api.github.com/users/kingdomb/orgs",
      "repos_url": "https://api.github.com/users/kingdomb/repos",
      "events_url": "https://api.github.com/users/kingdomb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kingdomb/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-04-04T17:38:37Z",
    "updated_at": "2020-04-05T02:25:13Z",
    "closed_at": "2020-04-05T02:25:13Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have a couple of pages that render after submitting a form.  However, all I get is a file not found error. \r\nmy index.html is in the root and the other html files are in /views. Please be specific about what to do.\r\n\r\nHere is my code:\r\n`\r\n// Chunk 1\r\nconst express = require('express');\r\nconst path = require('path');\r\nconst sendMail = require('./mail');\r\nconst log = console.log;\r\nconst app = express();\r\n\r\nconst PORT = 8080;\r\n\r\n\r\n// Data parsing\r\napp.use(express.urlencoded({\r\n    extended: false\r\n}));\r\napp.use(express.json());\r\n\r\n//STATIC FOLDER\r\napp.use(\"/public\", express.static(path.join(__dirname, \"public\")));\r\n\r\n\r\n// field data\r\napp.post('/email', (req, res) => {\r\n\r\n    const {name, subject, email, phone, message} = req.body;\r\n    log('Data: ', req.body);\r\n    \r\n    sendMail(name, subject, email, phone, message, function(err, data) {\r\n        if (err) {\r\n            res.status(500).json({ message: 'Internal Error'})\r\n        } else {\r\n            res.json({ message: \"Email sent!!!!\"})\r\n        }\r\n    });\r\n});\r\n\r\n\r\n// Render home page\r\napp.get('/', (req, res) => {\r\n    res.sendFile('index.html');\r\n});\r\n\r\n// Error page\r\napp.get('/error', (req, res) => {\r\n    res.sendFile(path.join(__dirname, 'views', 'error.html'));\r\n});\r\n\r\n// Email sent page\r\napp.get('/email/sent', (req, res) => {\r\n    res.sendFile(path.join(__dirname, 'views', 'emailMessage.html'));\r\n});\r\n\r\n// Start server\r\napp.listen(PORT, () => log(`Server is starting on PORT, ${PORT}`));` ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4232/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4232/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4231",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4231/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4231/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4231/events",
    "html_url": "https://github.com/expressjs/express/pull/4231",
    "id": 592579734,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzk3NTM1OTY5",
    "number": 4231,
    "title": "refactor: Including references to Collaborator-Guide.md, Contributing",
    "user": {
      "login": "getspooky",
      "id": 37160072,
      "node_id": "MDQ6VXNlcjM3MTYwMDcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/37160072?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/getspooky",
      "html_url": "https://github.com/getspooky",
      "followers_url": "https://api.github.com/users/getspooky/followers",
      "following_url": "https://api.github.com/users/getspooky/following{/other_user}",
      "gists_url": "https://api.github.com/users/getspooky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/getspooky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/getspooky/subscriptions",
      "organizations_url": "https://api.github.com/users/getspooky/orgs",
      "repos_url": "https://api.github.com/users/getspooky/repos",
      "events_url": "https://api.github.com/users/getspooky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/getspooky/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-04-02T12:05:20Z",
    "updated_at": "2020-04-02T12:05:48Z",
    "closed_at": "2020-04-02T12:05:41Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4231",
      "html_url": "https://github.com/expressjs/express/pull/4231",
      "diff_url": "https://github.com/expressjs/express/pull/4231.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4231.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4231/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4231/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4230",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4230/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4230/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4230/events",
    "html_url": "https://github.com/expressjs/express/issues/4230",
    "id": 591677005,
    "node_id": "MDU6SXNzdWU1OTE2NzcwMDU=",
    "number": 4230,
    "title": "layer.YYhandle_request is not a function",
    "user": {
      "login": "Crazie-ash",
      "id": 45698249,
      "node_id": "MDQ6VXNlcjQ1Njk4MjQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/45698249?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Crazie-ash",
      "html_url": "https://github.com/Crazie-ash",
      "followers_url": "https://api.github.com/users/Crazie-ash/followers",
      "following_url": "https://api.github.com/users/Crazie-ash/following{/other_user}",
      "gists_url": "https://api.github.com/users/Crazie-ash/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Crazie-ash/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Crazie-ash/subscriptions",
      "organizations_url": "https://api.github.com/users/Crazie-ash/orgs",
      "repos_url": "https://api.github.com/users/Crazie-ash/repos",
      "events_url": "https://api.github.com/users/Crazie-ash/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Crazie-ash/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2020-04-01T07:02:01Z",
    "updated_at": "2020-04-09T18:33:18Z",
    "closed_at": "2020-04-09T18:33:18Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "![image](https://user-images.githubusercontent.com/45698249/78108215-8fdcc680-7414-11ea-9f2a-43766cf0f33a.png)\r\n![image](https://user-images.githubusercontent.com/45698249/78108267-ac78fe80-7414-11ea-9197-09e021ef392f.png)\r\n\r\nI am not sure what am I missing or it was a bug... A little help is required\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4230/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4230/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4229",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4229/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4229/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4229/events",
    "html_url": "https://github.com/expressjs/express/issues/4229",
    "id": 591552703,
    "node_id": "MDU6SXNzdWU1OTE1NTI3MDM=",
    "number": 4229,
    "title": "[Tracking] Update to router@2.0.0",
    "user": {
      "login": "jonchurch",
      "id": 12915163,
      "node_id": "MDQ6VXNlcjEyOTE1MTYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/12915163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonchurch",
      "html_url": "https://github.com/jonchurch",
      "followers_url": "https://api.github.com/users/jonchurch/followers",
      "following_url": "https://api.github.com/users/jonchurch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonchurch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonchurch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonchurch/subscriptions",
      "organizations_url": "https://api.github.com/users/jonchurch/orgs",
      "repos_url": "https://api.github.com/users/jonchurch/repos",
      "events_url": "https://api.github.com/users/jonchurch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonchurch/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-04-01T01:36:00Z",
    "updated_at": "2020-04-01T20:41:09Z",
    "closed_at": "2020-04-01T01:59:44Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "I believe for v5 we are updating router. This is just a tracking issue for updating the dep in express. Once https://github.com/pillarjs/router/pull/60 is published, we can open a PR to update the router version.\r\n\r\nI'm not sure if there's a PR somewhere already to update the v5 docs to be in line with router@2 changes. ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4229/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4229/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4228",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4228/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4228/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4228/events",
    "html_url": "https://github.com/expressjs/express/issues/4228",
    "id": 590558370,
    "node_id": "MDU6SXNzdWU1OTA1NTgzNzA=",
    "number": 4228,
    "title": "Stacktrace included in production for default error handler",
    "user": {
      "login": "apascal",
      "id": 2894041,
      "node_id": "MDQ6VXNlcjI4OTQwNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2894041?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apascal",
      "html_url": "https://github.com/apascal",
      "followers_url": "https://api.github.com/users/apascal/followers",
      "following_url": "https://api.github.com/users/apascal/following{/other_user}",
      "gists_url": "https://api.github.com/users/apascal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apascal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apascal/subscriptions",
      "organizations_url": "https://api.github.com/users/apascal/orgs",
      "repos_url": "https://api.github.com/users/apascal/repos",
      "events_url": "https://api.github.com/users/apascal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apascal/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-03-30T20:06:41Z",
    "updated_at": "2020-03-31T12:14:34Z",
    "closed_at": "2020-03-31T12:14:34Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\r\n\r\nWe have an application running express `4.17.1`, with `process.NODE_ENV` set to `production`.\r\n\r\nHowever, when an unexpected error is thrown, the whole stacktrace is visible.\r\n\r\nFor example accessing a URL with malformed characters triggers this:\r\n```\r\nURIError: Failed to decode param '/%85'\r\n    at decodeURIComponent (<anonymous>)\r\n    at decode_param (/usr/src/app/node_modules/express/lib/router/layer.js:172:12)\r\n    at Layer.match (/usr/src/app/node_modules/express/lib/router/layer.js:123:27)\r\n    at matchLayer (/usr/src/app/node_modules/express/lib/router/index.js:574:18)\r\n\r\n...\r\n```\r\n\r\nBased on the [documentation](http://expressjs.com/en/guide/error-handling.html), when `NODE_ENV` is `production`, the stack trace should not be shown.\r\n\r\nMinimal reproduction case:\r\n```js\r\nimport express from 'express';\r\n\r\nconst app = express();\r\n\r\napp.get('*', (req, res) => {\r\n  return res.send('result');\r\n});\r\n\r\napp.listen(3000);\r\n```\r\n\r\nNote: a workaround is to add a default \"catch-all\" error handler after all routes are defined :\r\n```js\r\napp.use((err, req, res, next) => {\r\n    res.status(500).send('Something broke!');\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4228/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4228/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4227",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4227/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4227/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4227/events",
    "html_url": "https://github.com/expressjs/express/issues/4227",
    "id": 589723193,
    "node_id": "MDU6SXNzdWU1ODk3MjMxOTM=",
    "number": 4227,
    "title": "Displaying local photos with spaces in the filename (Windows)",
    "user": {
      "login": "gnesher",
      "id": 1402060,
      "node_id": "MDQ6VXNlcjE0MDIwNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1402060?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnesher",
      "html_url": "https://github.com/gnesher",
      "followers_url": "https://api.github.com/users/gnesher/followers",
      "following_url": "https://api.github.com/users/gnesher/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnesher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnesher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnesher/subscriptions",
      "organizations_url": "https://api.github.com/users/gnesher/orgs",
      "repos_url": "https://api.github.com/users/gnesher/repos",
      "events_url": "https://api.github.com/users/gnesher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnesher/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-03-29T05:37:55Z",
    "updated_at": "2020-03-29T09:49:41Z",
    "closed_at": "2020-03-29T09:49:25Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I've created a simple application that requests a user to select a photo using electron.remote.dialog.showOpenDialog after which I simply try to show a preview of the selected photo.\r\n\r\nIt works fine except for when it comes to files/paths with spaces on windows.\r\nthings like :\r\n`C:\\Users\\path name\\Downloads\\image name.jpeg`\r\n\r\nIs not displayed at all (fails to load the file) and solutions like encodeURI don't seem to help.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4227/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4227/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4226",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4226/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4226/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4226/events",
    "html_url": "https://github.com/expressjs/express/issues/4226",
    "id": 587045657,
    "node_id": "MDU6SXNzdWU1ODcwNDU2NTc=",
    "number": 4226,
    "title": "How to add custom method to Expressjs Response",
    "user": {
      "login": "duongkhoangiam",
      "id": 43959508,
      "node_id": "MDQ6VXNlcjQzOTU5NTA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/43959508?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/duongkhoangiam",
      "html_url": "https://github.com/duongkhoangiam",
      "followers_url": "https://api.github.com/users/duongkhoangiam/followers",
      "following_url": "https://api.github.com/users/duongkhoangiam/following{/other_user}",
      "gists_url": "https://api.github.com/users/duongkhoangiam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/duongkhoangiam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/duongkhoangiam/subscriptions",
      "organizations_url": "https://api.github.com/users/duongkhoangiam/orgs",
      "repos_url": "https://api.github.com/users/duongkhoangiam/repos",
      "events_url": "https://api.github.com/users/duongkhoangiam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/duongkhoangiam/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-03-24T15:28:22Z",
    "updated_at": "2020-03-24T15:39:21Z",
    "closed_at": "2020-03-24T15:34:45Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I need add custom method called content to use later in Response Middleware\r\nExample : in my router\r\n```\r\n//router\r\nrouter.get('/user', this.get);\r\n.....\r\npublic get = (req: Request, res: Response, next: NextFunction) => {\r\n    res.status(201).content({ name: 'My name'});// i need custom method content here\r\n    next();\r\n  };\r\n```\r\n\r\nand in Response Middleware\r\n```\r\nexport default function ResponseMiddleware(\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) {\r\n  res.status(200).json({\r\n    apiVersion: '1.0',\r\n    status: true,\r\n    data: res.content // get content object here\r\n  })\r\n}\r\n\r\n```\r\n\r\nis it possible ?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4226/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4226/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4225",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4225/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4225/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4225/events",
    "html_url": "https://github.com/expressjs/express/issues/4225",
    "id": 586869608,
    "node_id": "MDU6SXNzdWU1ODY4Njk2MDg=",
    "number": 4225,
    "title": "Idea(HTTP Exceptions) : Adding Abort method ",
    "user": {
      "login": "getspooky",
      "id": 37160072,
      "node_id": "MDQ6VXNlcjM3MTYwMDcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/37160072?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/getspooky",
      "html_url": "https://github.com/getspooky",
      "followers_url": "https://api.github.com/users/getspooky/followers",
      "following_url": "https://api.github.com/users/getspooky/following{/other_user}",
      "gists_url": "https://api.github.com/users/getspooky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/getspooky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/getspooky/subscriptions",
      "organizations_url": "https://api.github.com/users/getspooky/orgs",
      "repos_url": "https://api.github.com/users/getspooky/repos",
      "events_url": "https://api.github.com/users/getspooky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/getspooky/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-03-24T10:53:35Z",
    "updated_at": "2020-03-24T15:04:36Z",
    "closed_at": "2020-03-24T12:54:53Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Some exceptions describe HTTP error codes from the server. For example, this may be a \"page not found\" error (404), an \"unauthorized error\" (401) or even a developer generated 500 error. In order to generate such a response from anywhere in your application, you may use the abort method\r\n```\r\nres.abort(404);\r\nres.abort(403, 'Unauthorized action.');\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4225/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4225/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4224",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4224/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4224/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4224/events",
    "html_url": "https://github.com/expressjs/express/pull/4224",
    "id": 585783665,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzkyMDUxMjA1",
    "number": 4224,
    "title": "adding myself to Contributing.md",
    "user": {
      "login": "davidmashe",
      "id": 11878429,
      "node_id": "MDQ6VXNlcjExODc4NDI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/11878429?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidmashe",
      "html_url": "https://github.com/davidmashe",
      "followers_url": "https://api.github.com/users/davidmashe/followers",
      "following_url": "https://api.github.com/users/davidmashe/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidmashe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidmashe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidmashe/subscriptions",
      "organizations_url": "https://api.github.com/users/davidmashe/orgs",
      "repos_url": "https://api.github.com/users/davidmashe/repos",
      "events_url": "https://api.github.com/users/davidmashe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidmashe/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-03-22T18:38:16Z",
    "updated_at": "2020-07-11T00:35:12Z",
    "closed_at": "2020-07-11T00:35:12Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4224",
      "html_url": "https://github.com/expressjs/express/pull/4224",
      "diff_url": "https://github.com/expressjs/express/pull/4224.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4224.patch",
      "merged_at": null
    },
    "body": "`ghinks` recommended I open a PR here, I'd love to help with triage. ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4224/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4224/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4223",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4223/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4223/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4223/events",
    "html_url": "https://github.com/expressjs/express/pull/4223",
    "id": 585580647,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzkxOTEzNDEz",
    "number": 4223,
    "title": "Deprecate non integer status codes in v4",
    "user": {
      "login": "jonchurch",
      "id": 12915163,
      "node_id": "MDQ6VXNlcjEyOTE1MTYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/12915163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonchurch",
      "html_url": "https://github.com/jonchurch",
      "followers_url": "https://api.github.com/users/jonchurch/followers",
      "following_url": "https://api.github.com/users/jonchurch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonchurch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonchurch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonchurch/subscriptions",
      "organizations_url": "https://api.github.com/users/jonchurch/orgs",
      "repos_url": "https://api.github.com/users/jonchurch/repos",
      "events_url": "https://api.github.com/users/jonchurch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonchurch/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 95025092,
        "node_id": "MDU6TGFiZWw5NTAyNTA5Mg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/deprecate",
        "name": "deprecate",
        "color": "f7c6c7",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/18",
      "html_url": "https://github.com/expressjs/express/milestone/18",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/18/labels",
      "id": 5234171,
      "node_id": "MDk6TWlsZXN0b25lNTIzNDE3MQ==",
      "number": 18,
      "title": "4.18",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 15,
      "state": "closed",
      "created_at": "2020-03-24T23:16:48Z",
      "updated_at": "2022-04-24T22:50:58Z",
      "due_on": null,
      "closed_at": "2022-04-24T22:50:58Z"
    },
    "comments": 7,
    "created_at": "2020-03-21T20:43:25Z",
    "updated_at": "2022-03-24T05:04:46Z",
    "closed_at": "2022-03-24T04:59:33Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4223",
      "html_url": "https://github.com/expressjs/express/pull/4223",
      "diff_url": "https://github.com/expressjs/express/pull/4223.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4223.patch",
      "merged_at": "2022-03-24T04:59:33Z"
    },
    "body": "This relates to #4212 and actually does two things. First, it uses `res.status` everywhere that the `this.statusCode = N` was previously used in `res`. That _shouldn't_ be a breaking change. It allows us to check the status codes in order to deprecate. The changes related to using `res.status` internally are copied from #4212.  \r\n\r\nWanted to open this as an option for inclusion in v4 to warn folks about breaking changes coming in v5 for their app. \r\n\r\nThe goal here is to only print a deprecation message for behavior which will throw under v5 but does not currently throw under v4. Specifically I want to avoid users seeing a deprecation about something throwing soon, and then immediately after also seeing the Node.js throw error for bad statuses. I can already see the Github issues if that were the case.\r\n\r\nThere are two dep messages, in order to hopefully help folks understand specifically what is happening and how the behavior will change. \r\n\r\nThe two cases where a dep message will print:\r\n* String values in range of what Node.js accepts as valid, i.e. `'200'` and `'304.5'`. All strings throw under v5\r\n* Non integer values in range of what Node.js accepts as valid i.e. `200.5`.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4223/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4223/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4221",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4221/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4221/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4221/events",
    "html_url": "https://github.com/expressjs/express/issues/4221",
    "id": 583302323,
    "node_id": "MDU6SXNzdWU1ODMzMDIzMjM=",
    "number": 4221,
    "title": "Idea: Add resource controller 💡",
    "user": {
      "login": "getspooky",
      "id": 37160072,
      "node_id": "MDQ6VXNlcjM3MTYwMDcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/37160072?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/getspooky",
      "html_url": "https://github.com/getspooky",
      "followers_url": "https://api.github.com/users/getspooky/followers",
      "following_url": "https://api.github.com/users/getspooky/following{/other_user}",
      "gists_url": "https://api.github.com/users/getspooky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/getspooky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/getspooky/subscriptions",
      "organizations_url": "https://api.github.com/users/getspooky/orgs",
      "repos_url": "https://api.github.com/users/getspooky/repos",
      "events_url": "https://api.github.com/users/getspooky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/getspooky/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-03-17T21:13:14Z",
    "updated_at": "2020-03-17T21:21:28Z",
    "closed_at": "2020-03-17T21:21:17Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Resource controllers provide the CRUD routes to the controller in a single line of code. A resource controller is used to create a controller that handles all the http requests stored by your application.\r\n```js\r\nexports.index = function(req,res) {\r\n  // Display a listing of the resource.\r\n}\r\nexports.edit = function(req,res) {\r\n // Show the form for editing the specified resource.\r\n}\r\nexports.show = function(req,res) {\r\n // Display the specified resource.\r\n}\r\nexports.create = function(req,res) {\r\n // Show the form for creating a new resource.\r\n}\r\nexports.destroy = function(req,res) {\r\n // Remove the specified resource from storage.\r\n}\r\nexports.update = function(req,res) {\r\n // Update the specified resource in storage.\r\n}\r\n```\r\n```js\r\napp.resource('article', require('./ArticleController'));\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4221/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4221/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4220",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4220/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4220/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4220/events",
    "html_url": "https://github.com/expressjs/express/issues/4220",
    "id": 582994468,
    "node_id": "MDU6SXNzdWU1ODI5OTQ0Njg=",
    "number": 4220,
    "title": "Response time 25ms or 15s",
    "user": {
      "login": "Bogdah9",
      "id": 51694355,
      "node_id": "MDQ6VXNlcjUxNjk0MzU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/51694355?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Bogdah9",
      "html_url": "https://github.com/Bogdah9",
      "followers_url": "https://api.github.com/users/Bogdah9/followers",
      "following_url": "https://api.github.com/users/Bogdah9/following{/other_user}",
      "gists_url": "https://api.github.com/users/Bogdah9/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Bogdah9/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Bogdah9/subscriptions",
      "organizations_url": "https://api.github.com/users/Bogdah9/orgs",
      "repos_url": "https://api.github.com/users/Bogdah9/repos",
      "events_url": "https://api.github.com/users/Bogdah9/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Bogdah9/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-03-17T12:58:49Z",
    "updated_at": "2020-03-19T12:35:37Z",
    "closed_at": "2020-03-19T12:35:37Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I usage :\r\nNuxt js v 2.10.2\r\nexpressjs v 4.17.1\r\nNodeJS v13.9.0\r\n\r\nIn the production version, I found unexpected behavior; any API request works up to 300 ms. But sometimes (one of 30 of any requests) takes 10-15 seconds. I thought there was not enough memory, but there were no errors at all. Any ideas ?\r\nI checked the time with such a function : \r\n  `const app = express()`\r\n  `app.use('/',function(req,res,next){`\r\n   ` let date1 = +(new Date())`\r\n    `res.on('finish',()=>{`\r\n     ` let time  = +(new Date())-date1`\r\n     ` if(time>1000)console.error( \"Any text\")}`\r\n   ` })`\r\n    `next()`\r\n ` })`\r\n`.........\r\n`\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4220/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4220/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4219",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4219/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4219/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4219/events",
    "html_url": "https://github.com/expressjs/express/issues/4219",
    "id": 582057730,
    "node_id": "MDU6SXNzdWU1ODIwNTc3MzA=",
    "number": 4219,
    "title": "This site can’t be reached",
    "user": {
      "login": "SerenModz21",
      "id": 41450647,
      "node_id": "MDQ6VXNlcjQxNDUwNjQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/41450647?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SerenModz21",
      "html_url": "https://github.com/SerenModz21",
      "followers_url": "https://api.github.com/users/SerenModz21/followers",
      "following_url": "https://api.github.com/users/SerenModz21/following{/other_user}",
      "gists_url": "https://api.github.com/users/SerenModz21/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SerenModz21/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SerenModz21/subscriptions",
      "organizations_url": "https://api.github.com/users/SerenModz21/orgs",
      "repos_url": "https://api.github.com/users/SerenModz21/repos",
      "events_url": "https://api.github.com/users/SerenModz21/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SerenModz21/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-03-16T07:11:13Z",
    "updated_at": "2020-03-16T17:57:46Z",
    "closed_at": "2020-03-16T17:57:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I made a small express server with the following code\r\n```js\r\nconst express = require(\"express\");\r\nconst app = express();\r\nconst port = 5000;\r\n\r\napp.get(\"/\", (req, res) => {\r\n        res.send(\"Hello\")\r\n});\r\n\r\napp.listen(port, () => {\r\n        console.log(`Listening on port: ${port}`)\r\n});\r\n```\r\nand it currently is running on my Ubuntu 18.04.4 LTS x86_64 vps and when i go to `https://<my vps ipv4>:5000`, im getting `This site can’t be reached`.\r\n\r\nHow could i fix this? \r\n\r\ni have allowed the port on ufw and ive allowed it with iptables but i dont know why this isn't working. I have also ran `sudo tcpdump -i ${ext_if} port 5000` to dump information about the port and that shows information about my connection but im getting `This site can’t be reached`.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4219/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4219/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4218",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4218/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4218/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4218/events",
    "html_url": "https://github.com/expressjs/express/issues/4218",
    "id": 581718432,
    "node_id": "MDU6SXNzdWU1ODE3MTg0MzI=",
    "number": 4218,
    "title": "http.createServer(options, app .... DOES NOT WORK",
    "user": {
      "login": "cekvenich",
      "id": 22248870,
      "node_id": "MDQ6VXNlcjIyMjQ4ODcw",
      "avatar_url": "https://avatars.githubusercontent.com/u/22248870?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cekvenich",
      "html_url": "https://github.com/cekvenich",
      "followers_url": "https://api.github.com/users/cekvenich/followers",
      "following_url": "https://api.github.com/users/cekvenich/following{/other_user}",
      "gists_url": "https://api.github.com/users/cekvenich/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cekvenich/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cekvenich/subscriptions",
      "organizations_url": "https://api.github.com/users/cekvenich/orgs",
      "repos_url": "https://api.github.com/users/cekvenich/repos",
      "events_url": "https://api.github.com/users/cekvenich/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cekvenich/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 12,
    "created_at": "2020-03-15T15:31:16Z",
    "updated_at": "2020-03-17T00:30:24Z",
    "closed_at": "2020-03-15T19:42:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "> https.createServer(options, app).listen(8080)\r\ndoes not work as documented here:\r\n- http://expressjs.com/en/api.html#app.listen_path_callback\r\n\r\n1. It does not listen\r\n2. It does not set maxHeaderSize. \r\n`http.createServer({maxHeaderSize: 16000 }, appInst).listen(8080)\r\nconsole.warn(http.maxHeaderSize)\r\n`\r\noutpuuts 8192.\r\nAbove should listen and set size as documented, it does not.\r\n\r\nI create the app, and then do above to listen.\r\nIt does not answer to a request on that port and it does not set the maxHeaderSize. \r\n\r\nIssue is referenced:\r\n- https://github.com/expressjs/express/issues/4131\r\n- https://github.com/nodejs/node/issues/24692\r\n\r\n\r\n \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4218/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4218/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4217",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4217/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4217/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4217/events",
    "html_url": "https://github.com/expressjs/express/pull/4217",
    "id": 581714997,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzg4NzM5MDI3",
    "number": 4217,
    "title": "feat: Add Pull Request Template",
    "user": {
      "login": "getspooky",
      "id": 37160072,
      "node_id": "MDQ6VXNlcjM3MTYwMDcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/37160072?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/getspooky",
      "html_url": "https://github.com/getspooky",
      "followers_url": "https://api.github.com/users/getspooky/followers",
      "following_url": "https://api.github.com/users/getspooky/following{/other_user}",
      "gists_url": "https://api.github.com/users/getspooky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/getspooky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/getspooky/subscriptions",
      "organizations_url": "https://api.github.com/users/getspooky/orgs",
      "repos_url": "https://api.github.com/users/getspooky/repos",
      "events_url": "https://api.github.com/users/getspooky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/getspooky/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2020-03-15T15:21:31Z",
    "updated_at": "2020-07-29T23:55:28Z",
    "closed_at": "2020-07-29T23:55:28Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4217",
      "html_url": "https://github.com/expressjs/express/pull/4217",
      "diff_url": "https://github.com/expressjs/express/pull/4217.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4217.patch",
      "merged_at": null
    },
    "body": "As developers, our responsibility is not only to fix issues or implement new features, but to clearly communicate the development work to reviewers. A developer can convey proposed code changes and their purposes either through detailed documentation or other means of communication.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4217/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4217/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4216",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4216/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4216/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4216/events",
    "html_url": "https://github.com/expressjs/express/issues/4216",
    "id": 581414046,
    "node_id": "MDU6SXNzdWU1ODE0MTQwNDY=",
    "number": 4216,
    "title": "Feature request: Add Fallback Routes",
    "user": {
      "login": "getspooky",
      "id": 37160072,
      "node_id": "MDQ6VXNlcjM3MTYwMDcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/37160072?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/getspooky",
      "html_url": "https://github.com/getspooky",
      "followers_url": "https://api.github.com/users/getspooky/followers",
      "following_url": "https://api.github.com/users/getspooky/following{/other_user}",
      "gists_url": "https://api.github.com/users/getspooky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/getspooky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/getspooky/subscriptions",
      "organizations_url": "https://api.github.com/users/getspooky/orgs",
      "repos_url": "https://api.github.com/users/getspooky/repos",
      "events_url": "https://api.github.com/users/getspooky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/getspooky/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-03-14T23:17:15Z",
    "updated_at": "2020-03-14T23:25:00Z",
    "closed_at": "2020-03-14T23:22:13Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Using the fallback method, you may define a route that will be executed when no other route matches the incoming request. Typically, unhandled requests will automatically render a \"404\" page via your application's exception handler\r\nexample:\r\n```js\r\napp.fallback(function(req,res){\r\n  // \r\n});\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4216/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4216/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4215",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4215/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4215/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4215/events",
    "html_url": "https://github.com/expressjs/express/pull/4215",
    "id": 581308623,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzg4Mzg1Mjg0",
    "number": 4215,
    "title": "feat: Add match method",
    "user": {
      "login": "getspooky",
      "id": 37160072,
      "node_id": "MDQ6VXNlcjM3MTYwMDcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/37160072?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/getspooky",
      "html_url": "https://github.com/getspooky",
      "followers_url": "https://api.github.com/users/getspooky/followers",
      "following_url": "https://api.github.com/users/getspooky/following{/other_user}",
      "gists_url": "https://api.github.com/users/getspooky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/getspooky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/getspooky/subscriptions",
      "organizations_url": "https://api.github.com/users/getspooky/orgs",
      "repos_url": "https://api.github.com/users/getspooky/repos",
      "events_url": "https://api.github.com/users/getspooky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/getspooky/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55587817,
        "node_id": "MDU6TGFiZWw1NTU4NzgxNw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/needs%20tests",
        "name": "needs tests",
        "color": "e11d21",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-03-14T18:01:57Z",
    "updated_at": "2020-03-15T19:12:10Z",
    "closed_at": "2020-03-14T20:44:22Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4215",
      "html_url": "https://github.com/expressjs/express/pull/4215",
      "diff_url": "https://github.com/expressjs/express/pull/4215.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4215.patch",
      "merged_at": null
    },
    "body": "Sometimes you may need to register a route that responds to multiple HTTP verbs.\r\n You may do so using the match method. \r\nexample : \r\n``\r\napp.match(['get','post'], '/' ,function(req,res) {\r\n  console.log(req.method);\r\n });\r\n``",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4215/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4215/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4214",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4214/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4214/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4214/events",
    "html_url": "https://github.com/expressjs/express/issues/4214",
    "id": 580540727,
    "node_id": "MDU6SXNzdWU1ODA1NDA3Mjc=",
    "number": 4214,
    "title": "Workaround for \"formiddable\" & \"express-formiddable\" logging error stack to console and response if headers are unsupported",
    "user": {
      "login": "Portur",
      "id": 24350810,
      "node_id": "MDQ6VXNlcjI0MzUwODEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/24350810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Portur",
      "html_url": "https://github.com/Portur",
      "followers_url": "https://api.github.com/users/Portur/followers",
      "following_url": "https://api.github.com/users/Portur/following{/other_user}",
      "gists_url": "https://api.github.com/users/Portur/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Portur/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Portur/subscriptions",
      "organizations_url": "https://api.github.com/users/Portur/orgs",
      "repos_url": "https://api.github.com/users/Portur/repos",
      "events_url": "https://api.github.com/users/Portur/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Portur/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-03-13T11:26:49Z",
    "updated_at": "2020-03-13T13:58:19Z",
    "closed_at": "2020-03-13T13:58:14Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "`formiddable` and thus `express-formiddable` return and error if `Content Type` header is not accepted by the following rules\r\n\r\n```javascript\r\n\r\n//summary of rules @ formiddable/lib/incoming_form.js:253\r\nif (req.headers['content-type'] &&\r\n        (req.headers['content-type'].match(/octet-stream/i) ||\r\n            req.headers['content-type'].match(/urlencoded/i) ||\r\n            req.headers['content-type'].match(/multipart/i) ||\r\n            req.headers['content-type'].match(/json/i)\r\n        )\r\n    ) {\r\n        \"formiddable does its thing\"\r\n    }\r\nelse\r\n   {\r\n      //this\r\n       new Error('bad content-type header, unknown content-type: '+this.headers['content-type']))\r\n    }\r\n\r\n```\r\n\r\nThus, `express` gets this error and for some reason uses the following lines to send the error to console.\r\n\r\n```javascript\r\n//code of express @ express/lib/application.js:621\r\n\r\n/**\r\n * Log error using console.error.\r\n *\r\n * @param {Error} err\r\n * @private\r\n */\r\n\r\nfunction logerror(err) {\r\n  /* istanbul ignore next */\r\n  if (this.get('env') !== 'test') console.error(err.stack || err.toString());\r\n}\r\n```\r\n\r\nThat should not be `this.get('env') !== 'test'`, but rather `this.get('env') === 'test'`.\r\nI don't want to see stack traces if im running in the env in `development, staging, production`.\r\nAlso I'm not in Istanbul.\r\n\r\n---\r\n**THE WORKAROUND**\r\n\r\n```javascript\r\n\r\nconst formidable = require('express-formidable');\r\n\r\n// parse body\r\napp.use(express.json());\r\napp.use(express.urlencoded({extended : true}));\r\napp.use(formiddableCustom);\r\n\r\n//custom middleware to handle formiddable error issues\r\nfunction formiddableCustom (req, res, next) {\r\n    if (req.headers['content-type'] && req.headers['content-type'].match(/multipart/i)) {\r\n        return formidable({encoding: 'utf-8', multiples: true}, _events())(req,res,next);\r\n    }\r\n    else\r\n    {\r\n        next()\r\n    }\r\n\r\n    function _events () {\r\n        return [\r\n            {\r\n                event: 'error',\r\n                action: function (req, res, next) {\r\n                    console.log(\"this isn't logged\")\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n```\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4214/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4214/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4212",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4212/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4212/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4212/events",
    "html_url": "https://github.com/expressjs/express/pull/4212",
    "id": 578302890,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzg1OTA5NzM1",
    "number": 4212,
    "title": "Throw on invalid status codes",
    "user": {
      "login": "jonchurch",
      "id": 12915163,
      "node_id": "MDQ6VXNlcjEyOTE1MTYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/12915163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonchurch",
      "html_url": "https://github.com/jonchurch",
      "followers_url": "https://api.github.com/users/jonchurch/followers",
      "following_url": "https://api.github.com/users/jonchurch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonchurch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonchurch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonchurch/subscriptions",
      "organizations_url": "https://api.github.com/users/jonchurch/orgs",
      "repos_url": "https://api.github.com/users/jonchurch/repos",
      "events_url": "https://api.github.com/users/jonchurch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonchurch/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 98481977,
        "node_id": "MDU6TGFiZWw5ODQ4MTk3Nw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/11",
      "html_url": "https://github.com/expressjs/express/milestone/11",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/11/labels",
      "id": 739972,
      "node_id": "MDk6TWlsZXN0b25lNzM5OTcy",
      "number": 11,
      "title": "5.0",
      "description": "",
      "creator": {
        "login": "Fishrock123",
        "id": 1093990,
        "node_id": "MDQ6VXNlcjEwOTM5OTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1093990?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fishrock123",
        "html_url": "https://github.com/Fishrock123",
        "followers_url": "https://api.github.com/users/Fishrock123/followers",
        "following_url": "https://api.github.com/users/Fishrock123/following{/other_user}",
        "gists_url": "https://api.github.com/users/Fishrock123/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Fishrock123/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Fishrock123/subscriptions",
        "organizations_url": "https://api.github.com/users/Fishrock123/orgs",
        "repos_url": "https://api.github.com/users/Fishrock123/repos",
        "events_url": "https://api.github.com/users/Fishrock123/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Fishrock123/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 8,
      "closed_issues": 12,
      "state": "open",
      "created_at": "2014-08-01T16:41:47Z",
      "updated_at": "2023-03-04T23:52:31Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 12,
    "created_at": "2020-03-10T02:53:31Z",
    "updated_at": "2023-03-10T10:09:56Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4212",
      "html_url": "https://github.com/expressjs/express/pull/4212",
      "diff_url": "https://github.com/expressjs/express/pull/4212.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4212.patch",
      "merged_at": null
    },
    "body": "Closes #3143\r\n\r\nWill throw an error if status code is not an integer.\r\n\r\n~Cases that are allowed are cases that Node.js also allows, such as `'200.0'` or `200`. I made this choice (allowing strings) because Node.js allows those strings.~\r\n\r\nAdded tests to make sure it throws on bad inputs. \r\n\r\n~Please excuse the unary use of `Number.isInteger(+code)`, after thinking through this a lot it was the best way to temporarily coerce a string to a number for testing with isInteger.~\r\n\r\n~**Under the hood, Node.js actually uses a bitwise operator to coerce statuscodes to integers before testing if they fall in their range: `code |= 0`**~\r\n\r\nThis PR is actually more strict than Node.js as it currently stands (at least at version 12 LTS), but I went off the work that had been done in #3143.\r\n\r\nIf we want to truly only throw an error when Node.js would, this PR would need to be altered to accept values with floats, possibly coercing them like Node.js does into integers.\r\n\r\n**Edit: The PR has been updated to throw on strings. Currently it still accepts Numbers which can be represented as an integer such as `200.00`.**\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4212/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4212/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4211",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4211/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4211/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4211/events",
    "html_url": "https://github.com/expressjs/express/pull/4211",
    "id": 578180005,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzg1ODA5NTA1",
    "number": 4211,
    "title": "Triage Edits",
    "user": {
      "login": "wesleytodd",
      "id": 1027776,
      "node_id": "MDQ6VXNlcjEwMjc3NzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1027776?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesleytodd",
      "html_url": "https://github.com/wesleytodd",
      "followers_url": "https://api.github.com/users/wesleytodd/followers",
      "following_url": "https://api.github.com/users/wesleytodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesleytodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesleytodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesleytodd/subscriptions",
      "organizations_url": "https://api.github.com/users/wesleytodd/orgs",
      "repos_url": "https://api.github.com/users/wesleytodd/repos",
      "events_url": "https://api.github.com/users/wesleytodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesleytodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 36,
    "created_at": "2020-03-09T20:44:08Z",
    "updated_at": "2020-05-11T05:05:39Z",
    "closed_at": "2020-05-11T05:05:03Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4211",
      "html_url": "https://github.com/expressjs/express/pull/4211",
      "diff_url": "https://github.com/expressjs/express/pull/4211.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4211.patch",
      "merged_at": "2020-05-11T05:05:04Z"
    },
    "body": "With all the work being on I wanted to make sure these edits I had never pushed were available in case anyone could finish them up.  I did some rebasing, but it probably needs a bit more work and for sure a commit clean up pass.  I will prioritize the req/res stuff, but if I can I will also get to this over the next day or so.  If anyone wants to take this over and see that it gets finished let me know and you can take over.\r\n\r\ncc: @gireeshpunathil @dougwilson ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4211/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4211/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4210",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4210/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4210/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4210/events",
    "html_url": "https://github.com/expressjs/express/pull/4210",
    "id": 577744765,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzg1NDU0NjA5",
    "number": 4210,
    "title": "doc: add section for project captains",
    "user": {
      "login": "gireeshpunathil",
      "id": 6447530,
      "node_id": "MDQ6VXNlcjY0NDc1MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6447530?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gireeshpunathil",
      "html_url": "https://github.com/gireeshpunathil",
      "followers_url": "https://api.github.com/users/gireeshpunathil/followers",
      "following_url": "https://api.github.com/users/gireeshpunathil/following{/other_user}",
      "gists_url": "https://api.github.com/users/gireeshpunathil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gireeshpunathil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gireeshpunathil/subscriptions",
      "organizations_url": "https://api.github.com/users/gireeshpunathil/orgs",
      "repos_url": "https://api.github.com/users/gireeshpunathil/repos",
      "events_url": "https://api.github.com/users/gireeshpunathil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gireeshpunathil/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 22,
    "created_at": "2020-03-09T08:47:07Z",
    "updated_at": "2022-10-06T14:16:29Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": "too heated",
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4210",
      "html_url": "https://github.com/expressjs/express/pull/4210",
      "diff_url": "https://github.com/expressjs/express/pull/4210.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4210.patch",
      "merged_at": null
    },
    "body": "Refs: https://github.com/expressjs/discussions/issues/98\r\nRefs: https://github.com/expressjs/discussions/issues/106#issuecomment-595342919\r\nco-authored-by: Wes Todd @wesleytodd",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4210/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4210/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4209",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4209/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4209/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4209/events",
    "html_url": "https://github.com/expressjs/express/issues/4209",
    "id": 577530787,
    "node_id": "MDU6SXNzdWU1Nzc1MzA3ODc=",
    "number": 4209,
    "title": "i have an issue in installing npm electron",
    "user": {
      "login": "duasohail",
      "id": 56893690,
      "node_id": "MDQ6VXNlcjU2ODkzNjkw",
      "avatar_url": "https://avatars.githubusercontent.com/u/56893690?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/duasohail",
      "html_url": "https://github.com/duasohail",
      "followers_url": "https://api.github.com/users/duasohail/followers",
      "following_url": "https://api.github.com/users/duasohail/following{/other_user}",
      "gists_url": "https://api.github.com/users/duasohail/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/duasohail/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/duasohail/subscriptions",
      "organizations_url": "https://api.github.com/users/duasohail/orgs",
      "repos_url": "https://api.github.com/users/duasohail/repos",
      "events_url": "https://api.github.com/users/duasohail/events{/privacy}",
      "received_events_url": "https://api.github.com/users/duasohail/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-03-08T16:54:51Z",
    "updated_at": "2020-03-10T10:39:49Z",
    "closed_at": "2020-03-08T20:35:25Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "npm ERR! code EJSONPARSE\r\nnpm ERR! file C:\\Users\\Dua Khan\\Desktop\\electron\\helloworld\\package.json\r\nnpm ERR! JSON.parse Failed to parse json\r\nnpm ERR! JSON.parse Unexpected end of JSON input while parsing near ''\r\nnpm ERR! JSON.parse Failed to parse package.json data.\r\nnpm ERR! JSON.parse package.json must be actual JSON, not just JavaScript.\r\n\r\nnpm ERR! A complete log of this run can be found in:\r\nnpm ERR!     C:\\Users\\Dua Khan\\AppData\\Roaming\\npm-cache\\_logs\\2020-03-08T16_41_43_759Z-d",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4209/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4209/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4208",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4208/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4208/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4208/events",
    "html_url": "https://github.com/expressjs/express/pull/4208",
    "id": 576996266,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzg0ODc0MTM0",
    "number": 4208,
    "title": "query: deprecate extended query parser",
    "user": {
      "login": "gireeshpunathil",
      "id": 6447530,
      "node_id": "MDQ6VXNlcjY0NDc1MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6447530?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gireeshpunathil",
      "html_url": "https://github.com/gireeshpunathil",
      "followers_url": "https://api.github.com/users/gireeshpunathil/followers",
      "following_url": "https://api.github.com/users/gireeshpunathil/following{/other_user}",
      "gists_url": "https://api.github.com/users/gireeshpunathil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gireeshpunathil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gireeshpunathil/subscriptions",
      "organizations_url": "https://api.github.com/users/gireeshpunathil/orgs",
      "repos_url": "https://api.github.com/users/gireeshpunathil/repos",
      "events_url": "https://api.github.com/users/gireeshpunathil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gireeshpunathil/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 95025092,
        "node_id": "MDU6TGFiZWw5NTAyNTA5Mg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/deprecate",
        "name": "deprecate",
        "color": "f7c6c7",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 30,
    "created_at": "2020-03-06T15:16:47Z",
    "updated_at": "2020-04-23T03:48:59Z",
    "closed_at": "2020-04-23T03:48:58Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4208",
      "html_url": "https://github.com/expressjs/express/pull/4208",
      "diff_url": "https://github.com/expressjs/express/pull/4208.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4208.patch",
      "merged_at": null
    },
    "body": "Refs: https://github.com/expressjs/express/pull/3621\r\n\r\n - I thought about checking the parser type before throwing deprecation, but then found that it wasn't necessary, as we are hard-coding it to `extended`\r\n - the `query` part in `var deprecate = require('depd')('query');` is my assumption about how it should be, let me know if that is not the case\r\n - feel free to propose changes to the message.\r\n\r\nthanks!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4208/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4208/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4207",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4207/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4207/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4207/events",
    "html_url": "https://github.com/expressjs/express/pull/4207",
    "id": 576872836,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzg0NzczNjI1",
    "number": 4207,
    "title": "Add test for nested json body",
    "user": {
      "login": "hidde-jan",
      "id": 171505,
      "node_id": "MDQ6VXNlcjE3MTUwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/171505?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hidde-jan",
      "html_url": "https://github.com/hidde-jan",
      "followers_url": "https://api.github.com/users/hidde-jan/followers",
      "following_url": "https://api.github.com/users/hidde-jan/following{/other_user}",
      "gists_url": "https://api.github.com/users/hidde-jan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hidde-jan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hidde-jan/subscriptions",
      "organizations_url": "https://api.github.com/users/hidde-jan/orgs",
      "repos_url": "https://api.github.com/users/hidde-jan/repos",
      "events_url": "https://api.github.com/users/hidde-jan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hidde-jan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 133578714,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/tests",
        "name": "tests",
        "color": "944008",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-03-06T11:31:51Z",
    "updated_at": "2020-03-06T12:37:22Z",
    "closed_at": "2020-03-06T11:58:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4207",
      "html_url": "https://github.com/expressjs/express/pull/4207",
      "diff_url": "https://github.com/expressjs/express/pull/4207.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4207.patch",
      "merged_at": null
    },
    "body": "Adding test. I'm getting the equivalent of `{ 'user[name]': 'toby' }` in an app I'm working on using express 4.16.4.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4207/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4207/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4206",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4206/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4206/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4206/events",
    "html_url": "https://github.com/expressjs/express/issues/4206",
    "id": 576791678,
    "node_id": "MDU6SXNzdWU1NzY3OTE2Nzg=",
    "number": 4206,
    "title": "Webhook, responding to a notification",
    "user": {
      "login": "NickSutton",
      "id": 24848258,
      "node_id": "MDQ6VXNlcjI0ODQ4MjU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/24848258?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NickSutton",
      "html_url": "https://github.com/NickSutton",
      "followers_url": "https://api.github.com/users/NickSutton/followers",
      "following_url": "https://api.github.com/users/NickSutton/following{/other_user}",
      "gists_url": "https://api.github.com/users/NickSutton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NickSutton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NickSutton/subscriptions",
      "organizations_url": "https://api.github.com/users/NickSutton/orgs",
      "repos_url": "https://api.github.com/users/NickSutton/repos",
      "events_url": "https://api.github.com/users/NickSutton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NickSutton/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-03-06T09:05:43Z",
    "updated_at": "2020-03-06T12:37:55Z",
    "closed_at": "2020-03-06T09:38:07Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Can the JSON response include the original message SID, that a delivery update relates to?\r\n\r\nFor example, a WhatsApp message is delivered to the user and twilio posts updates via web hooks as to when that message is sent, delivered and read etc. Can the JSON response from those notifications include the messageSID of the sent message, so that we may know which message has been sent/delivered/read etc?\r\n\r\nIf multiple messages are sent to one telephone number, then using the telephone number as the identifying object on the api isn't that reliable. Any ideas? thanks",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4206/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4206/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4205",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4205/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4205/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4205/events",
    "html_url": "https://github.com/expressjs/express/pull/4205",
    "id": 576175499,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzg0MjEyOTM1",
    "number": 4205,
    "title": "Fix regexp handing logic in router. Closes #4204",
    "user": {
      "login": "drussilla",
      "id": 668735,
      "node_id": "MDQ6VXNlcjY2ODczNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/668735?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drussilla",
      "html_url": "https://github.com/drussilla",
      "followers_url": "https://api.github.com/users/drussilla/followers",
      "following_url": "https://api.github.com/users/drussilla/following{/other_user}",
      "gists_url": "https://api.github.com/users/drussilla/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drussilla/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drussilla/subscriptions",
      "organizations_url": "https://api.github.com/users/drussilla/orgs",
      "repos_url": "https://api.github.com/users/drussilla/repos",
      "events_url": "https://api.github.com/users/drussilla/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drussilla/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 8497,
        "node_id": "MDU6TGFiZWw4NDk3",
        "url": "https://api.github.com/repos/expressjs/express/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/18",
      "html_url": "https://github.com/expressjs/express/milestone/18",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/18/labels",
      "id": 5234171,
      "node_id": "MDk6TWlsZXN0b25lNTIzNDE3MQ==",
      "number": 18,
      "title": "4.18",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 15,
      "state": "closed",
      "created_at": "2020-03-24T23:16:48Z",
      "updated_at": "2022-04-24T22:50:58Z",
      "due_on": null,
      "closed_at": "2022-04-24T22:50:58Z"
    },
    "comments": 7,
    "created_at": "2020-03-05T11:11:24Z",
    "updated_at": "2020-05-21T02:16:43Z",
    "closed_at": "2020-05-21T02:16:34Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4205",
      "html_url": "https://github.com/expressjs/express/pull/4205",
      "diff_url": "https://github.com/expressjs/express/pull/4205.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4205.patch",
      "merged_at": "2020-05-21T02:16:34Z"
    },
    "body": "It closes #4204. When regexp matches path not from the beginning, `trim_prefx` validates if path breaks on a path separator in a wrong way.\r\n\r\nHere is a small illustration of the problem:\r\n```\r\npath:       /test/api/123\r\nlayerPath:  /api/123\r\nc:                  ^\r\n```\r\n\r\nafter the fix:\r\n```\r\npath:       /test/api/123\r\nstartIndex:      ^\r\nlayerPath:       /api/123\r\nc:                       ^\r\n```\r\nThis PR fixes his behaviors by testing matched layerPath not from the begging of the path but from the start of the match.\r\n\r\nI have also added a unit test to cover this case.\r\n\r\nExisting logic should not be affected, because in case of a match from the beginning of the path, the `startIndex` variable will be 0 and we will end up an old logic.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4205/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4205/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4204",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4204/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4204/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4204/events",
    "html_url": "https://github.com/expressjs/express/issues/4204",
    "id": 576167692,
    "node_id": "MDU6SXNzdWU1NzYxNjc2OTI=",
    "number": 4204,
    "title": "Router with a regexp doesn't handle request in the correct layer",
    "user": {
      "login": "drussilla",
      "id": 668735,
      "node_id": "MDQ6VXNlcjY2ODczNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/668735?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drussilla",
      "html_url": "https://github.com/drussilla",
      "followers_url": "https://api.github.com/users/drussilla/followers",
      "following_url": "https://api.github.com/users/drussilla/following{/other_user}",
      "gists_url": "https://api.github.com/users/drussilla/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drussilla/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drussilla/subscriptions",
      "organizations_url": "https://api.github.com/users/drussilla/orgs",
      "repos_url": "https://api.github.com/users/drussilla/repos",
      "events_url": "https://api.github.com/users/drussilla/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drussilla/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 8497,
        "node_id": "MDU6TGFiZWw4NDk3",
        "url": "https://api.github.com/repos/expressjs/express/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/18",
      "html_url": "https://github.com/expressjs/express/milestone/18",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/18/labels",
      "id": 5234171,
      "node_id": "MDk6TWlsZXN0b25lNTIzNDE3MQ==",
      "number": 18,
      "title": "4.18",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 15,
      "state": "closed",
      "created_at": "2020-03-24T23:16:48Z",
      "updated_at": "2022-04-24T22:50:58Z",
      "due_on": null,
      "closed_at": "2022-04-24T22:50:58Z"
    },
    "comments": 7,
    "created_at": "2020-03-05T10:57:55Z",
    "updated_at": "2021-11-17T02:52:45Z",
    "closed_at": "2021-11-17T02:52:45Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "In case we define a layer that matches path with a regexp not from the beginning of the path, the router doesn't handle it in the correct way.\r\nHere is a minimum reproducible example: \r\n```javascript\r\nvar app = express();\r\n\r\napp.use(/\\/api.*/, function(req, res){\r\n  res.end('api')\r\n});\r\n\r\napp.use(function(req, res){\r\n  res.end('error')\r\n});\r\n\r\nrequest(app)\r\n.get('/test/api/123')\r\n.expect('api', done);\r\n```\r\nThis test is gonna fail becuase instead of `api` response, we will get `error`\r\n\r\nThis is happening because in the `trim_prefix` function, the router has a small bug: https://github.com/expressjs/express/blob/e1b45ebd050b6f06aa38cda5aaf0c21708b0c71e/lib/router/index.js#L291\r\nIt always tests for the `/` or `.` character from the beginning of the path, even though in this example, the `layerPath` variable is set to `/api/123`. \r\n\r\nThe funny thing, this will work correctly if you have the same amount of characters after the last `/` symbol as in the prefix (everything before the matched layerPath). So if you try `/test/api/1234` it will work correctly. \r\n\r\nI am preparing a pull request to fix this behavior.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4204/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4204/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4203",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4203/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4203/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4203/events",
    "html_url": "https://github.com/expressjs/express/issues/4203",
    "id": 573845625,
    "node_id": "MDU6SXNzdWU1NzM4NDU2MjU=",
    "number": 4203,
    "title": "PDF is coming as blank when send as response from express",
    "user": {
      "login": "ashishgupta2505",
      "id": 61580433,
      "node_id": "MDQ6VXNlcjYxNTgwNDMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/61580433?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ashishgupta2505",
      "html_url": "https://github.com/ashishgupta2505",
      "followers_url": "https://api.github.com/users/ashishgupta2505/followers",
      "following_url": "https://api.github.com/users/ashishgupta2505/following{/other_user}",
      "gists_url": "https://api.github.com/users/ashishgupta2505/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ashishgupta2505/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ashishgupta2505/subscriptions",
      "organizations_url": "https://api.github.com/users/ashishgupta2505/orgs",
      "repos_url": "https://api.github.com/users/ashishgupta2505/repos",
      "events_url": "https://api.github.com/users/ashishgupta2505/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ashishgupta2505/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-03-02T09:44:18Z",
    "updated_at": "2020-04-20T06:45:20Z",
    "closed_at": "2020-03-02T20:00:35Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "If I am directly calling a third perty api( looker api) from postman I am getting the pdf as download with data.\r\nBut When I am calling through my api consuming looker api it is downloading only blank pdf.\r\nBut I can see the binary data in my response.\r\n\r\nPFB code I am using.\r\n\r\n\r\nexport async function downloadPDF(\r\n    req: express.Request,\r\n    res: express.Response\r\n): Promise<any> {\r\nconst response = await createPdf(TaskID, lookerToken.access_token);\r\n                    res.set({ 'Content-Type': 'application/pdf', 'Access-Control-Allow-Origin': '*' });\r\n                    res.status(200).send(response.body);\r\n                    return res;\r\n}\r\n\r\nexport async function createPdf(TaskID, lookerToken): Promise<any> {\r\n    return new Promise((resolve) => {\r\n        const url = \"someurl\" + TaskID + '/results'; \r\n        const headers = {\r\n            'Authorization': 'token ' + lookerToken\r\n        };\r\n        axios({\r\n            headers,\r\n            method: 'get',\r\n            url: url,           \r\n            responseType: 'blob'\r\n        }).then((response: any) => {\r\n            resolve({\r\n                body: response.data\r\n                //statusCode: response.status,\r\n            });\r\n        })\r\n    });\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4203/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4203/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4202",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4202/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4202/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4202/events",
    "html_url": "https://github.com/expressjs/express/pull/4202",
    "id": 573391591,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzgxOTMxNTg2",
    "number": 4202,
    "title": "Resolve path in sendFile",
    "user": {
      "login": "Rafostar",
      "id": 40623528,
      "node_id": "MDQ6VXNlcjQwNjIzNTI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/40623528?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Rafostar",
      "html_url": "https://github.com/Rafostar",
      "followers_url": "https://api.github.com/users/Rafostar/followers",
      "following_url": "https://api.github.com/users/Rafostar/following{/other_user}",
      "gists_url": "https://api.github.com/users/Rafostar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Rafostar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Rafostar/subscriptions",
      "organizations_url": "https://api.github.com/users/Rafostar/orgs",
      "repos_url": "https://api.github.com/users/Rafostar/repos",
      "events_url": "https://api.github.com/users/Rafostar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Rafostar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-02-29T19:08:23Z",
    "updated_at": "2020-02-29T19:17:33Z",
    "closed_at": "2020-02-29T19:17:33Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4202",
      "html_url": "https://github.com/expressjs/express/pull/4202",
      "diff_url": "https://github.com/expressjs/express/pull/4202.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4202.patch",
      "merged_at": null
    },
    "body": "Currently only `res.download` resolves full file path and passes it to `sendFile` method. This commit moves the resolve function to the `sendFile`, allowing sending non-attachment files without providing full file path too.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4202/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4202/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4201",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4201/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4201/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4201/events",
    "html_url": "https://github.com/expressjs/express/pull/4201",
    "id": 572560145,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzgxMjMwMDMw",
    "number": 4201,
    "title": "docs: request for triager role for manisuec",
    "user": {
      "login": "manisuec",
      "id": 6031883,
      "node_id": "MDQ6VXNlcjYwMzE4ODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6031883?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/manisuec",
      "html_url": "https://github.com/manisuec",
      "followers_url": "https://api.github.com/users/manisuec/followers",
      "following_url": "https://api.github.com/users/manisuec/following{/other_user}",
      "gists_url": "https://api.github.com/users/manisuec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/manisuec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/manisuec/subscriptions",
      "organizations_url": "https://api.github.com/users/manisuec/orgs",
      "repos_url": "https://api.github.com/users/manisuec/repos",
      "events_url": "https://api.github.com/users/manisuec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/manisuec/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-02-28T06:42:04Z",
    "updated_at": "2020-03-10T03:21:30Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4201",
      "html_url": "https://github.com/expressjs/express/pull/4201",
      "diff_url": "https://github.com/expressjs/express/pull/4201.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4201.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4201/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4201/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4200",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4200/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4200/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4200/events",
    "html_url": "https://github.com/expressjs/express/issues/4200",
    "id": 571204176,
    "node_id": "MDU6SXNzdWU1NzEyMDQxNzY=",
    "number": 4200,
    "title": "Outdated documentation",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-02-26T09:51:58Z",
    "updated_at": "2020-02-26T16:24:15Z",
    "closed_at": "2020-02-26T16:24:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "https://expressjs.com/en/guide/routing.html\r\n\r\nThis page says express uses path-to-regexp while it was removed in 5.0.0.alpha-7",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4200/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4200/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4199",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4199/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4199/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4199/events",
    "html_url": "https://github.com/expressjs/express/issues/4199",
    "id": 570774094,
    "node_id": "MDU6SXNzdWU1NzA3NzQwOTQ=",
    "number": 4199,
    "title": "Does a middleware work on any router object?",
    "user": {
      "login": "GabrielLeonte",
      "id": 38123199,
      "node_id": "MDQ6VXNlcjM4MTIzMTk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/38123199?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GabrielLeonte",
      "html_url": "https://github.com/GabrielLeonte",
      "followers_url": "https://api.github.com/users/GabrielLeonte/followers",
      "following_url": "https://api.github.com/users/GabrielLeonte/following{/other_user}",
      "gists_url": "https://api.github.com/users/GabrielLeonte/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GabrielLeonte/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GabrielLeonte/subscriptions",
      "organizations_url": "https://api.github.com/users/GabrielLeonte/orgs",
      "repos_url": "https://api.github.com/users/GabrielLeonte/repos",
      "events_url": "https://api.github.com/users/GabrielLeonte/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GabrielLeonte/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-02-25T19:14:13Z",
    "updated_at": "2020-02-25T19:28:24Z",
    "closed_at": "2020-02-25T19:27:52Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "So i apply some middlewares on the main app object.  If i create a router in another file, import it inside the main app and use `app.use(router)`, where router is  the name of the secondary router object, every middleware applied on the main app object will be used for that router too, right?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4199/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4199/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4198",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4198/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4198/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4198/events",
    "html_url": "https://github.com/expressjs/express/issues/4198",
    "id": 570457918,
    "node_id": "MDU6SXNzdWU1NzA0NTc5MTg=",
    "number": 4198,
    "title": "does express support async and await?",
    "user": {
      "login": "phantom9999",
      "id": 6202605,
      "node_id": "MDQ6VXNlcjYyMDI2MDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6202605?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phantom9999",
      "html_url": "https://github.com/phantom9999",
      "followers_url": "https://api.github.com/users/phantom9999/followers",
      "following_url": "https://api.github.com/users/phantom9999/following{/other_user}",
      "gists_url": "https://api.github.com/users/phantom9999/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phantom9999/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phantom9999/subscriptions",
      "organizations_url": "https://api.github.com/users/phantom9999/orgs",
      "repos_url": "https://api.github.com/users/phantom9999/repos",
      "events_url": "https://api.github.com/users/phantom9999/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phantom9999/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-02-25T10:14:35Z",
    "updated_at": "2020-05-08T08:24:00Z",
    "closed_at": "2020-02-25T14:09:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "dose express support async and await for next function?\r\n\r\nthis is my code:\r\n\r\n```\r\nconst express = require('express');\r\nconst app = express();\r\n\r\nasync function sleep(timeout) {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, timeout);\r\n    });\r\n}\r\n\r\napp.use(async (req, res, next) => {\r\n    await sleep(100);\r\n    console.log(\"router prefix\");\r\n    await sleep(100);\r\n    await next();\r\n    await sleep(100);\r\n    console.log(\"router post\");\r\n    await sleep(100);\r\n});\r\n\r\napp.use(async (req, res, next) => {\r\n    await sleep(100);\r\n    console.log(\"log prefix\");\r\n    await sleep(100);\r\n    await next();\r\n    await sleep(100);\r\n    console.log(\"log post\");\r\n    await sleep(100);\r\n});\r\n\r\napp.get('/', async (req, res) => {\r\n    await sleep(100);\r\n    console.log(\"process prefix\");\r\n    await sleep(100);\r\n    res.send({});\r\n    await sleep(100);\r\n    console.log(\"process post\");\r\n    await sleep(100);\r\n});\r\n\r\napp.listen(3000, function () {\r\n    console.log('Example app listening on port 3000!');\r\n});\r\n```\r\nthe output is that:\r\n```\r\nrouter prefix\r\nlog prefix\r\nrouter post\r\nprocess prefix\r\nlog post\r\nprocess post\r\n```\r\nrather than : \r\n```\r\nrouter prefix\r\nlog prefix\r\nprocess prefix\r\nprocess post\r\nlog post\r\nrouter post\r\n```\r\n\r\nis it a bug, or something wrong with my code?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4198/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4198/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4196",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4196/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4196/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4196/events",
    "html_url": "https://github.com/expressjs/express/pull/4196",
    "id": 569623146,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc4Nzk5Njk5",
    "number": 4196,
    "title": "router: add async route handler support",
    "user": {
      "login": "chokch",
      "id": 61107253,
      "node_id": "MDQ6VXNlcjYxMTA3MjUz",
      "avatar_url": "https://avatars.githubusercontent.com/u/61107253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chokch",
      "html_url": "https://github.com/chokch",
      "followers_url": "https://api.github.com/users/chokch/followers",
      "following_url": "https://api.github.com/users/chokch/following{/other_user}",
      "gists_url": "https://api.github.com/users/chokch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chokch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chokch/subscriptions",
      "organizations_url": "https://api.github.com/users/chokch/orgs",
      "repos_url": "https://api.github.com/users/chokch/repos",
      "events_url": "https://api.github.com/users/chokch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chokch/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55587817,
        "node_id": "MDU6TGFiZWw1NTU4NzgxNw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/needs%20tests",
        "name": "needs tests",
        "color": "e11d21",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-02-24T03:55:42Z",
    "updated_at": "2020-02-24T04:14:19Z",
    "closed_at": "2020-02-24T04:09:12Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4196",
      "html_url": "https://github.com/expressjs/express/pull/4196",
      "diff_url": "https://github.com/expressjs/express/pull/4196.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4196.patch",
      "merged_at": null
    },
    "body": "While the async/await feature is still highly experimental and not\r\nofficial, it does have preliminary support in tools like babel. There\r\nare even blog posts [1] about how to use the async/await feature with\r\nexpress routes.\r\n\r\nHowever, these posts along with issue #2789 and #2788 show that using\r\nasync/await is still a bit of a manual process and not clear. This\r\nchange inspects the return value of a route handler to see if it is\r\npotentially a pomise. If the return value appears to be a promise then\r\nwe attach to the error handler of the promise via .catch()\r\n\r\nNow a user who is using babel can write the following without needing\r\nany wrap functions as most examples to date require.\r\n\r\n```js\r\napp.get('/', async (req, res, next) => {\r\n    let user = await User.findById(); // assuming .findById() returns a primise\r\n    let org = await Org.findById();\r\n    res.json({\r\n        user: user,\r\n        org: org,\r\n    });\r\n});\r\n```\r\n\r\n[1] https://strongloop.com/strongblog/async-error-handling-expressjs-es7-promises-generators/",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4196/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4196/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4193",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4193/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4193/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4193/events",
    "html_url": "https://github.com/expressjs/express/issues/4193",
    "id": 568976802,
    "node_id": "MDU6SXNzdWU1Njg5NzY4MDI=",
    "number": 4193,
    "title": "req.route undefined when using app.use()",
    "user": {
      "login": "thernstig",
      "id": 30827238,
      "node_id": "MDQ6VXNlcjMwODI3MjM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/30827238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thernstig",
      "html_url": "https://github.com/thernstig",
      "followers_url": "https://api.github.com/users/thernstig/followers",
      "following_url": "https://api.github.com/users/thernstig/following{/other_user}",
      "gists_url": "https://api.github.com/users/thernstig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thernstig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thernstig/subscriptions",
      "organizations_url": "https://api.github.com/users/thernstig/orgs",
      "repos_url": "https://api.github.com/users/thernstig/repos",
      "events_url": "https://api.github.com/users/thernstig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thernstig/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 11,
    "created_at": "2020-02-21T14:08:37Z",
    "updated_at": "2020-04-06T10:18:36Z",
    "closed_at": "2020-02-21T14:52:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "[The documentation for req.path](https://expressjs.com/en/4x/api.html#req.route) says:\r\n\r\n```javascript\r\napp.get('/user/:id?', function userIdHandler (req, res) {\r\n  console.log(req.route)\r\n  res.send('GET')\r\n})\r\n\r\n// Gives\r\n{ path: '/user/:id?',\r\n  stack:\r\n   [ { handle: [Function: userIdHandler],\r\n       name: 'userIdHandler',\r\n       params: undefined,\r\n       path: undefined,\r\n       keys: [],\r\n       regexp: /^\\/?$/i,\r\n       method: 'get' } ],\r\n  methods: { get: true } }\r\n```\r\n\r\nHowever, there is no indication that req.use should not work with this. http://expressjs.com/en/guide/using-middleware.html clearly states that even in the cases of using `.use` the term \"path\" is still used for where you mount.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4193/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4193/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4192",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4192/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4192/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4192/events",
    "html_url": "https://github.com/expressjs/express/pull/4192",
    "id": 568083263,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc3NTc2OTcx",
    "number": 4192,
    "title": "docs: fix typo in request documentation",
    "user": {
      "login": "fbrandt-dev",
      "id": 39065498,
      "node_id": "MDQ6VXNlcjM5MDY1NDk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/39065498?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fbrandt-dev",
      "html_url": "https://github.com/fbrandt-dev",
      "followers_url": "https://api.github.com/users/fbrandt-dev/followers",
      "following_url": "https://api.github.com/users/fbrandt-dev/following{/other_user}",
      "gists_url": "https://api.github.com/users/fbrandt-dev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fbrandt-dev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fbrandt-dev/subscriptions",
      "organizations_url": "https://api.github.com/users/fbrandt-dev/orgs",
      "repos_url": "https://api.github.com/users/fbrandt-dev/repos",
      "events_url": "https://api.github.com/users/fbrandt-dev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fbrandt-dev/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/18",
      "html_url": "https://github.com/expressjs/express/milestone/18",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/18/labels",
      "id": 5234171,
      "node_id": "MDk6TWlsZXN0b25lNTIzNDE3MQ==",
      "number": 18,
      "title": "4.18",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 15,
      "state": "closed",
      "created_at": "2020-03-24T23:16:48Z",
      "updated_at": "2022-04-24T22:50:58Z",
      "due_on": null,
      "closed_at": "2022-04-24T22:50:58Z"
    },
    "comments": 0,
    "created_at": "2020-02-20T06:36:13Z",
    "updated_at": "2020-05-20T22:15:09Z",
    "closed_at": "2020-05-20T22:15:08Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4192",
      "html_url": "https://github.com/expressjs/express/pull/4192",
      "diff_url": "https://github.com/expressjs/express/pull/4192.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4192.patch",
      "merged_at": "2020-05-20T22:15:08Z"
    },
    "body": "Fix of a typo  in the documentation for req.param",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4192/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4192/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4191",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4191/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4191/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4191/events",
    "html_url": "https://github.com/expressjs/express/issues/4191",
    "id": 566666389,
    "node_id": "MDU6SXNzdWU1NjY2NjYzODk=",
    "number": 4191,
    "title": "Bug using a different port for express().listen",
    "user": {
      "login": "nuxeric",
      "id": 48699932,
      "node_id": "MDQ6VXNlcjQ4Njk5OTMy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48699932?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nuxeric",
      "html_url": "https://github.com/nuxeric",
      "followers_url": "https://api.github.com/users/nuxeric/followers",
      "following_url": "https://api.github.com/users/nuxeric/following{/other_user}",
      "gists_url": "https://api.github.com/users/nuxeric/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nuxeric/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nuxeric/subscriptions",
      "organizations_url": "https://api.github.com/users/nuxeric/orgs",
      "repos_url": "https://api.github.com/users/nuxeric/repos",
      "events_url": "https://api.github.com/users/nuxeric/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nuxeric/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2020-02-18T05:58:25Z",
    "updated_at": "2020-02-20T01:52:35Z",
    "closed_at": "2020-02-20T01:34:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi I am trying to start my node/express server port 3001 but it doesn't seem to be working. When I change the port number to 3000 it works perfectly fine. After I run the command with sudo, e.g. sudo node index.js it starts working with the specified port (3001). Here is my index.js file.\r\n\r\n(By \"working\" I mean that I can send a GET / POST request to the various routes, when it \"doesn't work\" I don't get any response back even though the server is running). Postman says \"There was an error connecting to http://localhost:3001/api/user/posts.\" \r\n\r\nHere is my code:\r\nindex.js\r\n```javascript\r\nconst express = require('express');\r\n\r\n//import routes\r\nconst postRoute = require('./routes/posts');\r\n\r\nconst app = express();\r\n\r\n// middleware\r\napp.use(express.json());\r\n\r\n//route middlewares\r\napp.use('/api/user', postRoute);\r\n\r\napp.listen(3001, () => console.log('Server Running...'))\r\n```\r\n\r\n\r\n./routes/posts.js\r\n```javascript\r\nconst router = require('express').Router();\r\n\r\nrouter.get(\"/posts\", (req, res) => {\r\n    res.send(\"hello sir!\"); \r\n});\r\n\r\n\r\nmodule.exports = router;\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4191/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4191/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4186",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4186/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4186/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4186/events",
    "html_url": "https://github.com/expressjs/express/issues/4186",
    "id": 565384693,
    "node_id": "MDU6SXNzdWU1NjUzODQ2OTM=",
    "number": 4186,
    "title": "Zone.js for async error handling",
    "user": {
      "login": "ywarezk",
      "id": 2714362,
      "node_id": "MDQ6VXNlcjI3MTQzNjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2714362?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ywarezk",
      "html_url": "https://github.com/ywarezk",
      "followers_url": "https://api.github.com/users/ywarezk/followers",
      "following_url": "https://api.github.com/users/ywarezk/following{/other_user}",
      "gists_url": "https://api.github.com/users/ywarezk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ywarezk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ywarezk/subscriptions",
      "organizations_url": "https://api.github.com/users/ywarezk/orgs",
      "repos_url": "https://api.github.com/users/ywarezk/repos",
      "events_url": "https://api.github.com/users/ywarezk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ywarezk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 18291,
        "node_id": "MDU6TGFiZWwxODI5MQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2020-02-14T15:09:06Z",
    "updated_at": "2021-03-02T21:10:46Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Currently when i create a new express application.\r\nThat application has a default error handling.\r\nSo code like this:\r\n\r\n```\r\nconst express = require(\"express\");\r\n\r\nconst app = express();\r\n\r\napp.get(\"*\", function() {\r\n    throw new Error(\"something happened\");\r\n})\r\n\r\napp.listen(3000, function() {\r\n    console.log(\"we are now listening to port 3000\");\r\n});\r\n```\r\n\r\nWill cause the default express error handler to kick in.\r\nThe js process does not crash and everything works as expected.\r\n\r\nFor async error the behaviour is different and my question is why?\r\nwith **Zone.js** we can now do a similar behaviour.\r\nFor example:\r\n\r\n```\r\nconst express = require(\"express\");\r\n\r\nconst app = express();\r\n\r\napp.get(\"*\", function() {\r\n    setTimeout(() => {\r\n        throw new Error(\"something happened\");\r\n    }, 500);    \r\n})\r\n\r\napp.listen(3000, function() {\r\n    console.log(\"we are now listening to port 3000\");\r\n});\r\n```\r\n\r\nthe above code will crash the process.\r\n\r\nAccording to express docs.\r\nwe can handle sync error but the async error you will have to call **next** with the error.\r\nSo the above code should be like so:\r\n\r\n```\r\napp.get(\"*\", function(req, res, next) {\r\n    setTimeout(() => {\r\n        next(new Error(\"something happened\"));\r\n    }, 500);    \r\n})\r\n```\r\n\r\nSo this behaviour seems non ideal to me, cause in my opinion, with **zone.js** in the picture we can reach a much better results.\r\nI would love to open a discussion on the matter...\r\nThe ideal is similar behaviour with sync and async errors (which is quite possible with zone.js to identify error that originate from async code inside express middleware functions).\r\nso to summarise I would see the async error handling working like this:\r\n- if we are using next(new Error()) then great let's keep the same behaviour. \r\n- if not, determine with zone.js if we have exception in our async code that originated from one of our middleware functions, and pop the default error handler (and of course the process will not crash).\r\n- This will result in much stable apps (process won't be close on async errors) and another added bonus is better debugging, and better error messages and stack traces of the exceptions in our async code.\r\n\r\n\r\n ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4186/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4186/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4185",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4185/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4185/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4185/events",
    "html_url": "https://github.com/expressjs/express/pull/4185",
    "id": 565083721,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc1MTk2Mzg4",
    "number": 4185,
    "title": "docs: add Ryan Hinchey as a triager",
    "user": {
      "login": "ryhinchey",
      "id": 3943764,
      "node_id": "MDQ6VXNlcjM5NDM3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3943764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryhinchey",
      "html_url": "https://github.com/ryhinchey",
      "followers_url": "https://api.github.com/users/ryhinchey/followers",
      "following_url": "https://api.github.com/users/ryhinchey/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryhinchey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryhinchey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryhinchey/subscriptions",
      "organizations_url": "https://api.github.com/users/ryhinchey/orgs",
      "repos_url": "https://api.github.com/users/ryhinchey/repos",
      "events_url": "https://api.github.com/users/ryhinchey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryhinchey/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2020-02-14T03:39:07Z",
    "updated_at": "2020-07-11T00:35:59Z",
    "closed_at": "2020-07-11T00:35:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/4185",
      "html_url": "https://github.com/expressjs/express/pull/4185",
      "diff_url": "https://github.com/expressjs/express/pull/4185.diff",
      "patch_url": "https://github.com/expressjs/express/pull/4185.patch",
      "merged_at": null
    },
    "body": "The following orgs:\r\n`jshttp`\r\n`pillarjs`\r\n`express`",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4185/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4185/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4184",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4184/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4184/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4184/events",
    "html_url": "https://github.com/expressjs/express/issues/4184",
    "id": 565003255,
    "node_id": "MDU6SXNzdWU1NjUwMDMyNTU=",
    "number": 4184,
    "title": "CORS issues despite adding options to allow headers",
    "user": {
      "login": "ER-GAIBI",
      "id": 17891517,
      "node_id": "MDQ6VXNlcjE3ODkxNTE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/17891517?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ER-GAIBI",
      "html_url": "https://github.com/ER-GAIBI",
      "followers_url": "https://api.github.com/users/ER-GAIBI/followers",
      "following_url": "https://api.github.com/users/ER-GAIBI/following{/other_user}",
      "gists_url": "https://api.github.com/users/ER-GAIBI/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ER-GAIBI/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ER-GAIBI/subscriptions",
      "organizations_url": "https://api.github.com/users/ER-GAIBI/orgs",
      "repos_url": "https://api.github.com/users/ER-GAIBI/repos",
      "events_url": "https://api.github.com/users/ER-GAIBI/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ER-GAIBI/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-02-13T23:07:30Z",
    "updated_at": "2020-02-15T22:00:40Z",
    "closed_at": "2020-02-15T22:00:40Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi, \r\n\r\nI need your help and suggestions please : \r\n\r\nI am working on a wep application based on Angular and express js.\r\nI am sending a GET request from interceptor to verify the web token, but i got a CORS problem. I searched on the net before creating this issue, and all suggestion are about adding options to allow headers, but without result untill now.\r\n\r\nhere is my code : \r\n**_FRONT END_**\r\n\r\n**service.ts**\r\n```\r\n...\r\npublic url = 'http://localhost:3000';\r\ngetServers() {\r\n        return this.http.get(this.url + '/marketServerUk');\r\n    }\r\n...\r\n```\r\n\r\n**interceptor.ts**\r\n```\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler } from '@angular/common/http';\r\nimport {UserServiceService} from '../services/user-service.service';\r\n\r\n@Injectable()\r\n\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    constructor(private userService: UserServiceService) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n        const authToken = this.userService.getToken();\r\n        req = req.clone({\r\n            setHeaders: {\r\n                Authorization: 'Bearer ' + authToken\r\n            }\r\n        });\r\n        return next.handle(req);\r\n    }\r\n}\r\n\r\n```\r\n**_BACK END_**\r\n\r\n**router.js**\r\n```\r\nrouter.get('/marketServerUk', verifyToken,  async (req, res, next) => {\r\n    console.log('test');\r\n    try {\r\n        res.setHeader('Access-Control-Allow-Headers', 'authorization');\r\n        res.setHeader('Access-Control-Allow-Origin', '*');\r\n        let results = await db.allMarketServersForUk();\r\n        await res.json(results);\r\n    } catch (e) {\r\n        console.log(e);\r\n        res.sendStatus(500);\r\n    }\r\n});\r\n\r\nfunction verifyToken(req, res, next) {\r\n    console.log('test');\r\n    try {\r\n        const bearerHeader = req.headers;\r\n        if (typeof bearerHeader !== 'undefined') {\r\n            req.token = bearerHeader;\r\n            next();\r\n        }\r\n    } catch (e) {\r\n        console.log(e);\r\n        res.sendStatus(403);\r\n    }\r\n}\r\n```\r\n\r\n**Error message :** \r\n\r\n`Access to XMLHttpRequest at 'http://localhost:3000/technicalServiceForUk' from origin 'http://localhost:4200' has been blocked by CORS policy: Request header field authorization is not allowed by Access-Control-Allow-Headers in preflight response.`\r\n\r\n**Note That  :**\r\n\r\n**When I remove the interceptor from the front end, the http request is working fine.\r\nThe moesif extension is already installed.\r\nThe web token is stored on local storage and sent on Request Headers, No Response Headers.\r\nI put a** `console.log('test')` **on the backend side and nothing is shown on the console.**\r\n\r\n![image](https://user-images.githubusercontent.com/17891517/74487003-ae1b5100-4ebe-11ea-82c6-07a9594674bc.png)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4184/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4184/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4183",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4183/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4183/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4183/events",
    "html_url": "https://github.com/expressjs/express/issues/4183",
    "id": 563317444,
    "node_id": "MDU6SXNzdWU1NjMzMTc0NDQ=",
    "number": 4183,
    "title": "Empty response",
    "user": {
      "login": "alvaaro99",
      "id": 39096026,
      "node_id": "MDQ6VXNlcjM5MDk2MDI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/39096026?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alvaaro99",
      "html_url": "https://github.com/alvaaro99",
      "followers_url": "https://api.github.com/users/alvaaro99/followers",
      "following_url": "https://api.github.com/users/alvaaro99/following{/other_user}",
      "gists_url": "https://api.github.com/users/alvaaro99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alvaaro99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alvaaro99/subscriptions",
      "organizations_url": "https://api.github.com/users/alvaaro99/orgs",
      "repos_url": "https://api.github.com/users/alvaaro99/repos",
      "events_url": "https://api.github.com/users/alvaaro99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alvaaro99/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-02-11T16:17:31Z",
    "updated_at": "2020-02-11T20:02:36Z",
    "closed_at": "2020-02-11T20:02:36Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello, I have a server to which you send a photo and a parameter (level), this is responsible for dividing the photo into as many pieces as the level specified. Each piece of the photo in part of an array. To send it to the client I convert all the pieces into base64.\r\n\r\n\r\n![Screenshot](https://user-images.githubusercontent.com/39096026/74255091-ab1f3580-4cf1-11ea-99b1-0b01073c24c5.png)\r\n\r\n\r\nOn line 22 the information is displayed by console correctly, but on line 23 the answer is empty\r\n\r\n![Screenshot](https://user-images.githubusercontent.com/39096026/74255274-e883c300-4cf1-11ea-9f88-3243b5e344bc.png)\r\n\r\n\r\nI've tried with res.send (), res.json () and res.send ({})",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4183/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4183/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/4182",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/4182/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/4182/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/4182/events",
    "html_url": "https://github.com/expressjs/express/issues/4182",
    "id": 562154142,
    "node_id": "MDU6SXNzdWU1NjIxNTQxNDI=",
    "number": 4182,
    "title": "express.static is not working ",
    "user": {
      "login": "kaushalmarakana",
      "id": 22539583,
      "node_id": "MDQ6VXNlcjIyNTM5NTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/22539583?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kaushalmarakana",
      "html_url": "https://github.com/kaushalmarakana",
      "followers_url": "https://api.github.com/users/kaushalmarakana/followers",
      "following_url": "https://api.github.com/users/kaushalmarakana/following{/other_user}",
      "gists_url": "https://api.github.com/users/kaushalmarakana/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kaushalmarakana/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kaushalmarakana/subscriptions",
      "organizations_url": "https://api.github.com/users/kaushalmarakana/orgs",
      "repos_url": "https://api.github.com/users/kaushalmarakana/repos",
      "events_url": "https://api.github.com/users/kaushalmarakana/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kaushalmarakana/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 548077790,
        "node_id": "MDU6TGFiZWw1NDgwNzc3OTA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:express-static",
        "name": "module:express-static",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-02-09T10:17:48Z",
    "updated_at": "2020-02-09T15:53:35Z",
    "closed_at": "2020-02-09T13:43:52Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am tired of this issue. I would be thankful if anyone can guide me regarding this problem. I have created a project using express-generator CLI. I think that's why I am getting this problem.\r\n\r\nI tried all of below things \r\n\r\n1 ] app.use(express.static('uploads'));\r\n=> then I hit http://localhost:3000/uploads\r\n=> I got 404 error\r\n\r\n2 ] app.use(express.static(path.join(__dirname, 'uploads')));\r\n=> then I hit http://localhost:3000/uploads\r\n=> I got 404 error\r\n\r\n3 ] app.use('/static', express.static(path.join(__dirname, 'uploads')));\r\n=> then I hit http://localhost:3000/static\r\n=> I got 404 error\r\n\r\nRequired Response => uploads folder contains images and I want to show image by URL like http://localhost:3000/uploads/xyz.png, So it would be accessible by public as like it is an image URI.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/4182/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/4182/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  }
]