[
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/1129154636",
    "html_url": "https://github.com/expressjs/express/issues/4910#issuecomment-1129154636",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/4910",
    "id": 1129154636,
    "node_id": "IC_kwDOAAOeZ85DTYhM",
    "user": {
      "login": "Segmentational",
      "id": 60639231,
      "node_id": "MDQ6VXNlcjYwNjM5MjMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/60639231?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Segmentational",
      "html_url": "https://github.com/Segmentational",
      "followers_url": "https://api.github.com/users/Segmentational/followers",
      "following_url": "https://api.github.com/users/Segmentational/following{/other_user}",
      "gists_url": "https://api.github.com/users/Segmentational/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Segmentational/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Segmentational/subscriptions",
      "organizations_url": "https://api.github.com/users/Segmentational/orgs",
      "repos_url": "https://api.github.com/users/Segmentational/repos",
      "events_url": "https://api.github.com/users/Segmentational/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Segmentational/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-17T17:53:55Z",
    "updated_at": "2022-05-17T17:53:55Z",
    "author_association": "NONE",
    "body": "> [...] which is more efficient long term\r\n\r\nI'd be careful with this idea; while I'm of belief efficiency comes down to the team and what's therefore best for the team, the community is much more strongly opinionated (the Node.js community that is).\r\n\r\nNow regarding your issue, that `TypeError` actually comes from the `router` package, located:\r\n- https://github.com/pillarjs/router/blob/master/lib/route.js#L215\r\n\r\nA few approaches are available; I elected to use *reflection* (see below).\r\n\r\nAs a disclaimer, and after giving this method a shot myself, I strongly advise against using classes.\r\n\r\n```javascript\r\nconst express = require(\"express\");\r\n\r\nconst app = express();\r\n\r\nclass UserRouter {\r\n    constructor() {\r\n        this.router = express.Router();\r\n        \r\n        this.routes = [\r\n            this.base\r\n        ];\r\n    }\r\n\r\n    static methods = (instance) => {\r\n        const state = {\r\n            instance, properties: new Set()\r\n        };\r\n\r\n        do {\r\n            Object.getOwnPropertyNames(state.instance).map(item => state.properties.add(item))\r\n        } while ((state.instance = Object.getPrototypeOf(state.instance)));\r\n\r\n        return [...state.properties.keys()].filter(item => typeof instance[item] === 'function')\r\n    }\r\n\r\n    static initialize = () => {\r\n        const instance = new UserRouter();\r\n\r\n        instance.routes.forEach(($) => {\r\n            Reflect.set($, \"router\", true);\r\n        });\r\n\r\n        const methods = UserRouter.methods(instance);\r\n\r\n        methods.forEach(($) => {\r\n            const callable = instance[$];\r\n            if (callable[\"router\"] === true) {\r\n                callable(instance.router);\r\n            }\r\n        });\r\n\r\n        return instance.router;\r\n    }\r\n\r\n    base (router = this?.router) {\r\n        router.get(\"/\", (req, res) => {\r\n            res.send({\r\n                message: \"Hello world\"\r\n            })\r\n        });\r\n    }\r\n}\r\n\r\napp.use(\"/\", UserRouter.initialize());\r\napp.listen(3000, \"localhost\", () => {\r\n    console.log(\"Listening on http://localhost:3000\");\r\n});\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/1129154636/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/1129162562",
    "html_url": "https://github.com/expressjs/express/issues/4910#issuecomment-1129162562",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/4910",
    "id": 1129162562,
    "node_id": "IC_kwDOAAOeZ85DTadC",
    "user": {
      "login": "Segmentational",
      "id": 60639231,
      "node_id": "MDQ6VXNlcjYwNjM5MjMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/60639231?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Segmentational",
      "html_url": "https://github.com/Segmentational",
      "followers_url": "https://api.github.com/users/Segmentational/followers",
      "following_url": "https://api.github.com/users/Segmentational/following{/other_user}",
      "gists_url": "https://api.github.com/users/Segmentational/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Segmentational/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Segmentational/subscriptions",
      "organizations_url": "https://api.github.com/users/Segmentational/orgs",
      "repos_url": "https://api.github.com/users/Segmentational/repos",
      "events_url": "https://api.github.com/users/Segmentational/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Segmentational/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-17T18:03:20Z",
    "updated_at": "2022-05-17T18:03:20Z",
    "author_association": "NONE",
    "body": "Lastly, as I recommended against using classes, this is because there needs to be a running list, per instance, of applicable functions to call. This is due to the router itself not updating until a method (\"get\", \"put\", etc. etc) is explicitly called.\r\n\r\nI tried my best to ease those efforts, but reflection was the only means I thought of (which requires that list in the first place).",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/1129162562/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/1129183283",
    "html_url": "https://github.com/expressjs/express/issues/4910#issuecomment-1129183283",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/4910",
    "id": 1129183283,
    "node_id": "IC_kwDOAAOeZ85DTfgz",
    "user": {
      "login": "jared-leddy",
      "id": 57743183,
      "node_id": "MDQ6VXNlcjU3NzQzMTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/57743183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jared-leddy",
      "html_url": "https://github.com/jared-leddy",
      "followers_url": "https://api.github.com/users/jared-leddy/followers",
      "following_url": "https://api.github.com/users/jared-leddy/following{/other_user}",
      "gists_url": "https://api.github.com/users/jared-leddy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jared-leddy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jared-leddy/subscriptions",
      "organizations_url": "https://api.github.com/users/jared-leddy/orgs",
      "repos_url": "https://api.github.com/users/jared-leddy/repos",
      "events_url": "https://api.github.com/users/jared-leddy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jared-leddy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-17T18:24:11Z",
    "updated_at": "2022-05-17T18:24:57Z",
    "author_association": "NONE",
    "body": "> I'd be careful with this idea...\r\n\r\nThanks for the reply. The idea was to use classes for OOP. With the solution example provided, this seems quite extensive for a \"seemingly simple\" solution. Starting to sound like Express, Typescript and classes are not the way to go. \r\n\r\n> I'd be careful with this idea...\r\n\r\n> Lastly, as I recommended against using classes...\r\n\r\nWith these in mind, I just might have to abandon classes. Which may also take me down a path to abandon Typescript too. I'm not clear on where the \"running list\" of functions is at. \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/1129183283/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/1129183905",
    "html_url": "https://github.com/expressjs/express/issues/4910#issuecomment-1129183905",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/4910",
    "id": 1129183905,
    "node_id": "IC_kwDOAAOeZ85DTfqh",
    "user": {
      "login": "silentjohnny",
      "id": 569663,
      "node_id": "MDQ6VXNlcjU2OTY2Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/569663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/silentjohnny",
      "html_url": "https://github.com/silentjohnny",
      "followers_url": "https://api.github.com/users/silentjohnny/followers",
      "following_url": "https://api.github.com/users/silentjohnny/following{/other_user}",
      "gists_url": "https://api.github.com/users/silentjohnny/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/silentjohnny/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/silentjohnny/subscriptions",
      "organizations_url": "https://api.github.com/users/silentjohnny/orgs",
      "repos_url": "https://api.github.com/users/silentjohnny/repos",
      "events_url": "https://api.github.com/users/silentjohnny/events{/privacy}",
      "received_events_url": "https://api.github.com/users/silentjohnny/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-17T18:24:55Z",
    "updated_at": "2022-05-17T18:24:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Why not return a router and 'attach' the class instance to your app?\r\n\r\nFor example, you could do something like this:\r\n\r\n```javascript\r\n// USERROUTER.JS FILE, CLASS EXAMPLE\r\nexport class UserRouter {\r\n    constructor() {\r\n        this.authController = new AuthController() // this should probably also go inside attach() to access app context\r\n    }\r\n\r\n    attach(app) {\r\n        // app is your global app, useful as a context to retrieve settings with app.get()\r\n        return express.Router()\r\n            .post('/register', this.register.bind(this))\r\n            .post('/login', this.login.bind(this))\r\n            .get('/logout', this.logout.bind(this))\r\n    }\r\n\r\n    register(req, res, next) {\r\n        return this.authController.register(req, res, next)\r\n    }\r\n\r\n    login(req, res, next) {\r\n        return this.authController.login(req, res, next)\r\n    }\r\n\r\n    logout(req, res, next) {\r\n        return this.authController.logout(req, res, next)\r\n    }\r\n\r\n}\r\n```\r\n\r\nThen, attach the router class:\r\n\r\n```javascript\r\n// APP.JS FILE\r\n// Mounted API Routes\r\nconst apiVersion = '1.0';\r\nconst apiRoutes = `/api/v${apiVersion}`;\r\napp.use(`${apiRoutes}/users`, new UserRouter.attach(app));\r\n```\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/1129183905/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/1129187482",
    "html_url": "https://github.com/expressjs/express/issues/4910#issuecomment-1129187482",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/4910",
    "id": 1129187482,
    "node_id": "IC_kwDOAAOeZ85DTgia",
    "user": {
      "login": "jared-leddy",
      "id": 57743183,
      "node_id": "MDQ6VXNlcjU3NzQzMTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/57743183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jared-leddy",
      "html_url": "https://github.com/jared-leddy",
      "followers_url": "https://api.github.com/users/jared-leddy/followers",
      "following_url": "https://api.github.com/users/jared-leddy/following{/other_user}",
      "gists_url": "https://api.github.com/users/jared-leddy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jared-leddy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jared-leddy/subscriptions",
      "organizations_url": "https://api.github.com/users/jared-leddy/orgs",
      "repos_url": "https://api.github.com/users/jared-leddy/repos",
      "events_url": "https://api.github.com/users/jared-leddy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jared-leddy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-17T18:28:49Z",
    "updated_at": "2022-05-17T18:28:49Z",
    "author_association": "NONE",
    "body": "> Why not return a router and 'attach' the class instance to your app?\r\n\r\n@silentjohnny interesting concept. Not exactly what I'm looking for, but it might work. Will give this a try and see how it goes. ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/1129187482/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/1328322016",
    "html_url": "https://github.com/expressjs/express/issues/4910#issuecomment-1328322016",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/4910",
    "id": 1328322016,
    "node_id": "IC_kwDOAAOeZ85PLJXg",
    "user": {
      "login": "moobi-kabelo",
      "id": 80452137,
      "node_id": "MDQ6VXNlcjgwNDUyMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/80452137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/moobi-kabelo",
      "html_url": "https://github.com/moobi-kabelo",
      "followers_url": "https://api.github.com/users/moobi-kabelo/followers",
      "following_url": "https://api.github.com/users/moobi-kabelo/following{/other_user}",
      "gists_url": "https://api.github.com/users/moobi-kabelo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/moobi-kabelo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/moobi-kabelo/subscriptions",
      "organizations_url": "https://api.github.com/users/moobi-kabelo/orgs",
      "repos_url": "https://api.github.com/users/moobi-kabelo/repos",
      "events_url": "https://api.github.com/users/moobi-kabelo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/moobi-kabelo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-27T19:25:37Z",
    "updated_at": "2022-11-27T19:25:37Z",
    "author_association": "NONE",
    "body": "this is my blog routes\r\n```javascript\r\nexport default class BlogRoutes {\r\n  constructor() {\r\n    this.blogController = new BlogController();\r\n    this.authenticationMiddleware = new AuthenticationMiddleware();\r\n    this.deviceDetector = new DeviceDetectorMiddleware();\r\n  }\r\n\r\n  /* initialize blog routes */\r\n  attach = (app) =>\r\n    express\r\n      .Router()\r\n      .post(\r\n        '/',\r\n        this.deviceDetector.isDeviceBot,\r\n        this.authenticationMiddleware.verifyApiKey,\r\n        this.addBlog.bind(this)\r\n      )\r\n      .get(\r\n        '/blog/:id',\r\n        this.authenticationMiddleware.verifyApiKey,\r\n        this.searchBlogById.bind(this)\r\n      )\r\n      .get(\r\n        '/',\r\n        this.authenticationMiddleware.verifyApiKey,\r\n        this.searchAllBlogs.bind(this)\r\n      )\r\n      .patch(\r\n        '/blog/:id',\r\n        this.authenticationMiddleware.verifyApiKey,\r\n        this.updateBlog.bind(this)\r\n      )\r\n      .delete(\r\n        '/blog/:id',\r\n        this.authenticationMiddleware.verifyApiKey,\r\n        this.deleteBlog.bind(this)\r\n      );\r\n\r\n  addBlog(req, res, next) {\r\n    return this.blogController.addBlog(req, res, next);\r\n  }\r\n\r\n  searchBlogById(req, res, next) {\r\n    return this.blogController.searchBlogById(req, res, next);\r\n  }\r\n\r\n  searchAllBlogs(req, res, next) {\r\n    return this.blogController.searchAllBlogs(req, res, next);\r\n  }\r\n\r\n  updateBlog(req, res, next) {\r\n    return this.blogController.updateBlog(req, res, next);\r\n  }\r\n\r\n  deleteBlog(req, res, next) {\r\n    return this.blogController.deleteBlog(req, res, next);\r\n  }\r\n}```\r\n\r\nthis is my app js\r\n```javascript\r\napp.use('/api/v1/blogs', new BlogRoutes.attach(app));\r\n```\r\nbut am getting an error\r\n\r\n```sh\r\nTypeError: BlogRoutes.attach is not a constructor\r\n    at file:///home/moobi-kabelo/Github/Afridek/beempowered/backend/app.js:44:26\r\n    at ModuleJob.run (node:internal/modules/esm/module_job:198:25)\r\n    at async Promise.all (index 0)\r\n    at async ESMLoader.import (node:internal/modules/esm/loader:409:24)\r\n    at async loadESM (node:internal/process/esm_loader:85:5)\r\n    at async handleMainPromise (node:internal/modules/run_main:61:12)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/1328322016/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/1328325940",
    "html_url": "https://github.com/expressjs/express/issues/4910#issuecomment-1328325940",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/4910",
    "id": 1328325940,
    "node_id": "IC_kwDOAAOeZ85PLKU0",
    "user": {
      "login": "jared-leddy",
      "id": 57743183,
      "node_id": "MDQ6VXNlcjU3NzQzMTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/57743183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jared-leddy",
      "html_url": "https://github.com/jared-leddy",
      "followers_url": "https://api.github.com/users/jared-leddy/followers",
      "following_url": "https://api.github.com/users/jared-leddy/following{/other_user}",
      "gists_url": "https://api.github.com/users/jared-leddy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jared-leddy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jared-leddy/subscriptions",
      "organizations_url": "https://api.github.com/users/jared-leddy/orgs",
      "repos_url": "https://api.github.com/users/jared-leddy/repos",
      "events_url": "https://api.github.com/users/jared-leddy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jared-leddy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-27T19:48:55Z",
    "updated_at": "2022-11-27T19:48:55Z",
    "author_association": "NONE",
    "body": "I moved on to Nest.js. It's basically a TypeScript bolt-on for Express. Closing ticket. ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/1328325940/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/1328353854",
    "html_url": "https://github.com/expressjs/express/issues/4910#issuecomment-1328353854",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/4910",
    "id": 1328353854,
    "node_id": "IC_kwDOAAOeZ85PLRI-",
    "user": {
      "login": "Romakita",
      "id": 1763311,
      "node_id": "MDQ6VXNlcjE3NjMzMTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1763311?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Romakita",
      "html_url": "https://github.com/Romakita",
      "followers_url": "https://api.github.com/users/Romakita/followers",
      "following_url": "https://api.github.com/users/Romakita/following{/other_user}",
      "gists_url": "https://api.github.com/users/Romakita/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Romakita/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Romakita/subscriptions",
      "organizations_url": "https://api.github.com/users/Romakita/orgs",
      "repos_url": "https://api.github.com/users/Romakita/repos",
      "events_url": "https://api.github.com/users/Romakita/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Romakita/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-27T22:19:54Z",
    "updated_at": "2022-11-27T22:20:18Z",
    "author_association": "NONE",
    "body": "@d3m0n-533d maybe I’m wrong, but the correct syntax should be:\r\n\r\nnew BlogRoutes().attach(app)\r\n\r\nsee you\r\nRomain",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/1328353854/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]