[
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3772",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3772/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3772/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3772/events",
    "html_url": "https://github.com/expressjs/express/issues/3772",
    "id": 373050648,
    "node_id": "MDU6SXNzdWUzNzMwNTA2NDg=",
    "number": 3772,
    "title": "Question: Params Routing with middleware.",
    "user": {
      "login": "bhaveshvyas007",
      "id": 24381393,
      "node_id": "MDQ6VXNlcjI0MzgxMzkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/24381393?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bhaveshvyas007",
      "html_url": "https://github.com/bhaveshvyas007",
      "followers_url": "https://api.github.com/users/bhaveshvyas007/followers",
      "following_url": "https://api.github.com/users/bhaveshvyas007/following{/other_user}",
      "gists_url": "https://api.github.com/users/bhaveshvyas007/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bhaveshvyas007/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bhaveshvyas007/subscriptions",
      "organizations_url": "https://api.github.com/users/bhaveshvyas007/orgs",
      "repos_url": "https://api.github.com/users/bhaveshvyas007/repos",
      "events_url": "https://api.github.com/users/bhaveshvyas007/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bhaveshvyas007/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-10-23T15:05:57Z",
    "updated_at": "2018-10-23T16:21:08Z",
    "closed_at": "2018-10-23T16:21:07Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have a router config as follows:\r\n.....\r\n.......\r\n_router.use(CheckAuthFn);_  // middleware to check if loggedin\r\n\r\nrouter.put('/users/update-profile',someFn);\r\nrouter.get('/refresh',someFn)\r\n**router.get('/:id',SomeFn) // Here is the issue, because of this route no route below this works, I cant write this route at bottom because I want to allow every logged in user to use this api, not just admins.**\r\n\r\n_router.use(CheckAdminFn);_ // middleware to check admin\r\n\r\nrouter.put('/terminate-user',someFn);\r\nrouter.put('/add-user',someFn);\r\nrouter.get('/users',someFn);\r\nrouter.get('/users/:id',someFn);",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3772/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3772/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3771",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3771/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3771/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3771/events",
    "html_url": "https://github.com/expressjs/express/issues/3771",
    "id": 373005961,
    "node_id": "MDU6SXNzdWUzNzMwMDU5NjE=",
    "number": 3771,
    "title": "Support for Node.js version 10.x",
    "user": {
      "login": "Hoishin",
      "id": 28832095,
      "node_id": "MDQ6VXNlcjI4ODMyMDk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/28832095?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Hoishin",
      "html_url": "https://github.com/Hoishin",
      "followers_url": "https://api.github.com/users/Hoishin/followers",
      "following_url": "https://api.github.com/users/Hoishin/following{/other_user}",
      "gists_url": "https://api.github.com/users/Hoishin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Hoishin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Hoishin/subscriptions",
      "organizations_url": "https://api.github.com/users/Hoishin/orgs",
      "repos_url": "https://api.github.com/users/Hoishin/repos",
      "events_url": "https://api.github.com/users/Hoishin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Hoishin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578718,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTg=",
        "url": "https://api.github.com/repos/expressjs/express/labels/investigate",
        "name": "investigate",
        "color": "bfdadc",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2018-10-23T13:40:33Z",
    "updated_at": "2018-10-26T12:27:25Z",
    "closed_at": "2018-10-23T17:18:32Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Running `npm test` in Node.js `v10.12.0` **sometimes** fails.\r\n\r\nIt would be great to know if these fails cam be ignored, or there are still unstable features in Node 10.x.\r\n\r\n- command I ran\r\n\r\n```sh\r\nwhile true; do npm test && sleep 2 || break; done\r\n```\r\n\r\n- errors I have encountered\r\n\r\n```\r\n  1) res\r\n       .links(obj)\r\n         should set Link header field:\r\n     Error: Parse Error\r\n      at Socket.socketOnData (_http_client.js:441:20)\r\n      at addChunk (_stream_readable.js:283:12)\r\n      at readableAddChunk (_stream_readable.js:264:11)\r\n      at Socket.Readable.push (_stream_readable.js:219:10)\r\n      at TCP.onStreamRead (internal/stream_base_commons.js:94:17)\r\n```\r\n\r\n```\r\n  1) res\r\n       .send(body, code)\r\n         should be supported for backwards compat:\r\n     Error: socket hang up\r\n      at createHangUpError (_http_client.js:322:15)\r\n      at Socket.socketOnEnd (_http_client.js:425:23)\r\n      at endReadableNT (_stream_readable.js:1094:12)\r\n      at process._tickCallback (internal/process/next_tick.js:63:19)\r\n```\r\n\r\n```\r\n  1) app.router\r\n       *\r\n         should work with several:\r\n     Error: socket hang up\r\n      at createHangUpError (_http_client.js:322:15)\r\n      at Socket.socketOnEnd (_http_client.js:425:23)\r\n      at endReadableNT (_stream_readable.js:1094:12)\r\n      at process._tickCallback (internal/process/next_tick.js:63:19)\r\n```\r\n\r\n```\r\n  1) req\r\n       .host\r\n         should return the Host when present:\r\n     Error: Parse Error\r\n      at Socket.socketOnData (_http_client.js:441:20)\r\n      at addChunk (_stream_readable.js:283:12)\r\n      at readableAddChunk (_stream_readable.js:264:11)\r\n      at Socket.Readable.push (_stream_readable.js:219:10)\r\n      at TCP.onStreamRead (internal/stream_base_commons.js:94:17)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3771/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3771/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3770",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3770/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3770/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3770/events",
    "html_url": "https://github.com/expressjs/express/pull/3770",
    "id": 372891582,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjI0OTU2OTA1",
    "number": 3770,
    "title": "Allow to bypass middleware to last layer with next('last')",
    "user": {
      "login": "BigFax",
      "id": 1742288,
      "node_id": "MDQ6VXNlcjE3NDIyODg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1742288?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BigFax",
      "html_url": "https://github.com/BigFax",
      "followers_url": "https://api.github.com/users/BigFax/followers",
      "following_url": "https://api.github.com/users/BigFax/following{/other_user}",
      "gists_url": "https://api.github.com/users/BigFax/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BigFax/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BigFax/subscriptions",
      "organizations_url": "https://api.github.com/users/BigFax/orgs",
      "repos_url": "https://api.github.com/users/BigFax/repos",
      "events_url": "https://api.github.com/users/BigFax/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BigFax/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 163600,
        "node_id": "MDU6TGFiZWwxNjM2MDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false,
        "description": null
      },
      {
        "id": 55587817,
        "node_id": "MDU6TGFiZWw1NTU4NzgxNw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/needs%20tests",
        "name": "needs tests",
        "color": "e11d21",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2018-10-23T09:12:10Z",
    "updated_at": "2022-10-06T14:16:29Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3770",
      "html_url": "https://github.com/expressjs/express/pull/3770",
      "diff_url": "https://github.com/expressjs/express/pull/3770.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3770.patch",
      "merged_at": null
    },
    "body": "It adds a built-in way to skip to the final route of a layers stack (see this closed issue #1662).\r\n\r\nBased on my experience, i was thinking it could be interesting to have this simple feature available.\r\n\r\nExample :\r\n\r\n```\r\nfunction middleware1 (req, res, next) { next('last'); // will call lastMiddleware }\r\nfunction middleware2 (req, res, next) { next('last'); // will call lastMiddleware }\r\nfunction middleware3 (req, res, next) { next('last'); // will call lastMiddleware }\r\nfunction middleware4 (req, res, next) { next('last'); // will call lastMiddleware }\r\nfunction lastMiddleware (req, res, next) { next('last'); // will call the next error middleware }\r\n\r\napp.get('/my_path', middleware1, middleware2, middleware3, middleware4, lastMiddleware);\r\n```\r\n\r\nIn case of errors, this can allow to break the middleware cycle and jump to the last middleware of the route directly without the need to put a condition `if (res.locals.err)` in each middleware to jump to the next one, or to call an error-handling middleware with `next(err);` and to manage everything there, as redirection, render, controller call depending of the error, or to use `next('route')` with a route duplication each time... (which are three solutions not always very convenient).\r\n\r\n(maybe there is already a way to do that ? I didn't find it yet. See [this question](https://stackoverflow.com/questions/24840545/is-it-possible-to-skip-route-middleware-in-node-express) and [my own question](https://stackoverflow.com/questions/52470387/express-node-right-way-to-send-error-messages-through-middleware-cycle))\r\n\r\n\r\nLet me know your thoughts about it.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3770/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3770/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3769",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3769/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3769/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3769/events",
    "html_url": "https://github.com/expressjs/express/issues/3769",
    "id": 372214221,
    "node_id": "MDU6SXNzdWUzNzIyMTQyMjE=",
    "number": 3769,
    "title": "What's the future plan for ExpressJS V5",
    "user": {
      "login": "zrfrank",
      "id": 27864196,
      "node_id": "MDQ6VXNlcjI3ODY0MTk2",
      "avatar_url": "https://avatars.githubusercontent.com/u/27864196?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zrfrank",
      "html_url": "https://github.com/zrfrank",
      "followers_url": "https://api.github.com/users/zrfrank/followers",
      "following_url": "https://api.github.com/users/zrfrank/following{/other_user}",
      "gists_url": "https://api.github.com/users/zrfrank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zrfrank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zrfrank/subscriptions",
      "organizations_url": "https://api.github.com/users/zrfrank/orgs",
      "repos_url": "https://api.github.com/users/zrfrank/repos",
      "events_url": "https://api.github.com/users/zrfrank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zrfrank/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-10-20T13:55:59Z",
    "updated_at": "2018-10-25T12:25:31Z",
    "closed_at": "2018-10-20T14:27:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Javascript specification and community is quickly updating to promise&async, and the Expressjs is still hardcore with callbacks.\r\n\r\nI'm wondering what's the future plan for the next version of Expressjs?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3769/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3769/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3768",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3768/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3768/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3768/events",
    "html_url": "https://github.com/expressjs/express/issues/3768",
    "id": 372103780,
    "node_id": "MDU6SXNzdWUzNzIxMDM3ODA=",
    "number": 3768,
    "title": "express get apis throwing 404",
    "user": {
      "login": "shobhitmshr002",
      "id": 5319187,
      "node_id": "MDQ6VXNlcjUzMTkxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5319187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shobhitmshr002",
      "html_url": "https://github.com/shobhitmshr002",
      "followers_url": "https://api.github.com/users/shobhitmshr002/followers",
      "following_url": "https://api.github.com/users/shobhitmshr002/following{/other_user}",
      "gists_url": "https://api.github.com/users/shobhitmshr002/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shobhitmshr002/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shobhitmshr002/subscriptions",
      "organizations_url": "https://api.github.com/users/shobhitmshr002/orgs",
      "repos_url": "https://api.github.com/users/shobhitmshr002/repos",
      "events_url": "https://api.github.com/users/shobhitmshr002/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shobhitmshr002/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-10-19T20:24:02Z",
    "updated_at": "2018-11-04T00:45:24Z",
    "closed_at": "2018-11-04T00:45:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "All the GET apis are returning 404 not found for all routes. My GET api code is\r\n\r\nconst router = new express.Router();\r\n/* All the Orders Route */\r\nrouter\r\n  .route('')\r\n  .get(readOrders)\r\n\r\n\r\nUsing node v 8.9.4\r\nand express 4.16.3\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3768/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3768/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3767",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3767/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3767/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3767/events",
    "html_url": "https://github.com/expressjs/express/pull/3767",
    "id": 371283320,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjIzNzY2NDEy",
    "number": 3767,
    "title": "Update index.js",
    "user": {
      "login": "renebaudisch",
      "id": 15980546,
      "node_id": "MDQ6VXNlcjE1OTgwNTQ2",
      "avatar_url": "https://avatars.githubusercontent.com/u/15980546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/renebaudisch",
      "html_url": "https://github.com/renebaudisch",
      "followers_url": "https://api.github.com/users/renebaudisch/followers",
      "following_url": "https://api.github.com/users/renebaudisch/following{/other_user}",
      "gists_url": "https://api.github.com/users/renebaudisch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/renebaudisch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/renebaudisch/subscriptions",
      "organizations_url": "https://api.github.com/users/renebaudisch/orgs",
      "repos_url": "https://api.github.com/users/renebaudisch/repos",
      "events_url": "https://api.github.com/users/renebaudisch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/renebaudisch/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-10-17T21:58:18Z",
    "updated_at": "2018-10-18T16:52:18Z",
    "closed_at": "2018-10-17T22:00:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3767",
      "html_url": "https://github.com/expressjs/express/pull/3767",
      "diff_url": "https://github.com/expressjs/express/pull/3767.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3767.patch",
      "merged_at": null
    },
    "body": "made param options in Router module optional, since it is defaulted to {}",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3767/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3767/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3766",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3766/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3766/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3766/events",
    "html_url": "https://github.com/expressjs/express/issues/3766",
    "id": 370431258,
    "node_id": "MDU6SXNzdWUzNzA0MzEyNTg=",
    "number": 3766,
    "title": "Add krauter to wiki::Home.md ## Others",
    "user": {
      "login": "brandon-d-mckay",
      "id": 25052651,
      "node_id": "MDQ6VXNlcjI1MDUyNjUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25052651?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brandon-d-mckay",
      "html_url": "https://github.com/brandon-d-mckay",
      "followers_url": "https://api.github.com/users/brandon-d-mckay/followers",
      "following_url": "https://api.github.com/users/brandon-d-mckay/following{/other_user}",
      "gists_url": "https://api.github.com/users/brandon-d-mckay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brandon-d-mckay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brandon-d-mckay/subscriptions",
      "organizations_url": "https://api.github.com/users/brandon-d-mckay/orgs",
      "repos_url": "https://api.github.com/users/brandon-d-mckay/repos",
      "events_url": "https://api.github.com/users/brandon-d-mckay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brandon-d-mckay/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-10-16T04:05:21Z",
    "updated_at": "2018-10-27T17:29:00Z",
    "closed_at": "2018-10-27T17:29:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi, \r\n\r\nI recently developed a module and was wondering if you'd want to add it to the wiki page. [krauter](https://github.com/brandon-d-mckay/krauter) is a convenient extension of the Express router, which allows you to simply put strings (and a few other types) directly into your routes and have them automatically generated into parameterized query middleware. This makes it really quick to set up a data-driven API and greatly reduces the amount of boilerplate code that you need to write to do so. It currently supports PostgreSQL ([*pg*](https://github.com/brianc/node-postgres)), MySQL ([*mysql*](https://github.com/mysqljs/mysql)), SQL Server ([*mssql*](https://github.com/tediousjs/node-mssql)), and SQLite ([*sqlite3*](https://github.com/mapbox/node-sqlite3)).\r\n\r\n[wiki::Home.md ## Other](https://github.com/expressjs/express/wiki#others)\r\n```gfm\r\n - [krauter](https://github.com/brandon-d-mckay/krauter) -- An extended Router that accepts strings/objects and generates middleware that performs parameterized database queries\r\n```\r\n\r\nLet me know if you have any questions/comments!\r\n\r\nThanks!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3766/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3766/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3765",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3765/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3765/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3765/events",
    "html_url": "https://github.com/expressjs/express/issues/3765",
    "id": 370109258,
    "node_id": "MDU6SXNzdWUzNzAxMDkyNTg=",
    "number": 3765,
    "title": "cant start express with meteor.js ...",
    "user": {
      "login": "pociej",
      "id": 3854675,
      "node_id": "MDQ6VXNlcjM4NTQ2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3854675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pociej",
      "html_url": "https://github.com/pociej",
      "followers_url": "https://api.github.com/users/pociej/followers",
      "following_url": "https://api.github.com/users/pociej/following{/other_user}",
      "gists_url": "https://api.github.com/users/pociej/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pociej/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pociej/subscriptions",
      "organizations_url": "https://api.github.com/users/pociej/orgs",
      "repos_url": "https://api.github.com/users/pociej/repos",
      "events_url": "https://api.github.com/users/pociej/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pociej/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-10-15T11:00:13Z",
    "updated_at": "2018-10-15T13:07:34Z",
    "closed_at": "2018-10-15T13:07:16Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Even such simple code \r\n```\r\nimport { express } from 'express'\r\nconst app = express();\r\napp('/', (req,res) => {\r\n  doWahateverYouWant(); \r\n}); \r\napp.listen(3000)\r\n```\r\n\r\nthrows : \r\n\r\n```\r\nW20181015-12:55:18.707(2)? (STDERR) TypeError: stream.listeners is not a function\r\nW20181015-12:55:18.707(2)? (STDERR)     at hasPipeDataListeners (/Users/greg/Projects/Meteor/project/node_modules/unpipe/index.js:22:26)\r\nW20181015-12:55:18.707(2)? (STDERR)     at unpipe (/Users/greg/Projects/Meteor/project/node_modules/unpipe/index.js:52:8)\r\nW20181015-12:55:18.707(2)? (STDERR)     at send (/Users/greg/Projects/Meteor/project/node_modules/finalhandler/index.js:306:3)\r\nW20181015-12:55:18.708(2)? (STDERR)     at /Users/greg/Projects/Meteor/project/node_modules/finalhandler/index.js:133:5\r\nW20181015-12:55:18.708(2)? (STDERR)     at Function.handle (/Users/greg/Projects/Meteor/project/node_modules/express/lib/application.js:170:5)\r\nW20181015-12:55:18.708(2)? (STDERR)     at app (/Users/greg/Projects/Meteor/project/node_modules/express/lib/express.js:39:9)\r\n```\r\n\r\nAny idea what could be that ? ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3765/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3765/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3764",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3764/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3764/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3764/events",
    "html_url": "https://github.com/expressjs/express/pull/3764",
    "id": 369914933,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjIyNzIzOTYx",
    "number": 3764,
    "title": "Mnjdby patch 2",
    "user": {
      "login": "mnjdby",
      "id": 16240765,
      "node_id": "MDQ6VXNlcjE2MjQwNzY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/16240765?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mnjdby",
      "html_url": "https://github.com/mnjdby",
      "followers_url": "https://api.github.com/users/mnjdby/followers",
      "following_url": "https://api.github.com/users/mnjdby/following{/other_user}",
      "gists_url": "https://api.github.com/users/mnjdby/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mnjdby/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mnjdby/subscriptions",
      "organizations_url": "https://api.github.com/users/mnjdby/orgs",
      "repos_url": "https://api.github.com/users/mnjdby/repos",
      "events_url": "https://api.github.com/users/mnjdby/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mnjdby/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-10-14T15:48:16Z",
    "updated_at": "2018-10-14T16:22:19Z",
    "closed_at": "2018-10-14T15:48:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3764",
      "html_url": "https://github.com/expressjs/express/pull/3764",
      "diff_url": "https://github.com/expressjs/express/pull/3764.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3764.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3764/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3764/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3763",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3763/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3763/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3763/events",
    "html_url": "https://github.com/expressjs/express/issues/3763",
    "id": 369315328,
    "node_id": "MDU6SXNzdWUzNjkzMTUzMjg=",
    "number": 3763,
    "title": "Cannot set more than one cookie to a single response",
    "user": {
      "login": "mkiddTempus",
      "id": 39068509,
      "node_id": "MDQ6VXNlcjM5MDY4NTA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/39068509?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkiddTempus",
      "html_url": "https://github.com/mkiddTempus",
      "followers_url": "https://api.github.com/users/mkiddTempus/followers",
      "following_url": "https://api.github.com/users/mkiddTempus/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkiddTempus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkiddTempus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkiddTempus/subscriptions",
      "organizations_url": "https://api.github.com/users/mkiddTempus/orgs",
      "repos_url": "https://api.github.com/users/mkiddTempus/repos",
      "events_url": "https://api.github.com/users/mkiddTempus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkiddTempus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-10-11T21:38:39Z",
    "updated_at": "2018-10-25T23:03:15Z",
    "closed_at": "2018-10-25T23:03:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Caveat: I'm limited in how much code I can show due to work restrictions.\r\n\r\nExpress: 4.16.3\r\nServerless: 1.30.0 (I just checked and see how out of date this is)\r\n\r\nI have an express application served via Serverless. Serveless is effectively acting as a proxy for all requests with a function definition (serverless.yml) as follows:\r\n\r\n```\r\nservice: service-lambda\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs8.10\r\n\r\nplugins:\r\n  - serverless-offline\r\n\r\nfunctions:\r\n  index:\r\n    handler: index.handler\r\n    events:\r\n    - http: ANY /\r\n    - http: 'ANY /{proxy+}'\r\n```\r\n\r\nAnd the Index.js is simply:\r\n```\r\nconst serverless = require('serverless-http');\r\nconst app = require('./app');\r\n\r\nmodule.exports.handler = serverless(app);\r\n```\r\nApp defines the express app as standard. I'm using cookieParser and it is set up prior to all my routes. All the routes check for the presence of a specific cookie and if it is not there the user is sent to okta for authentication then redirected back to a specific url. \r\n\r\nFor testing purposes that route is simply called /authenticated. Upon returning from okta and authenticating, this route authenticates the access token and attempts to apply cookies that include information returned as part of the verified JWT. \r\n\r\nIt then renders an ejs view called \"authenticated\".\r\n\r\nI have 3 cookies I'm trying to set thusly:\r\n```\r\nres.cookie('oscp', oscp[0]);\r\nres.cookie('ocid', ocid);\r\nres.cookie('accessToken', at);\r\n```\r\nI was expecting to see all three tokens but I'm only getting the last one. \r\n\r\nI did some googling and this bug previously existed but was fixed when Connect was removed I believed. I've tried setting them all at once via setHeader but that didn't work as well. \r\n\r\nI can also confirm that the cookies are being sent out with the response via the logs as you can see here:\r\n\r\n```\r\nServerless: [200]\r\n{\r\n  \"isBase64Encoded\": false,\r\n  \"statusCode\": 200,\r\n  \"headers\": {\r\n    \"set-cookie\": \"oscp=openid; Path=/\",\r\n    \"Set-cookie\": \"ocid=0oaghi5emxJaZojD90h7; Path=/\",\r\n    \"sEt-cookie\": \"ouid=00ufev7ma0qtC3pep0h7; Path=/\",\r\n    \"content-type\": \"text/html; charset=utf-8\",\r\n    \"content-length\": \"1418\",\r\n    \"etag\": \"W/\\\"58a-iDjFIYcKwbQzooCSb8pKYrQ6X4w\\\"\"\r\n  },\r\n  \"body\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n    <meta charset=\\\"utf-8\\\">\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1, shrink-to-fit=no\\\">\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\\\" integrity=\\\"sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO\\\" crossorigin=\\\"anonymous\\\">\\n    <title>more than one</title>\\n</head>\\n<body>\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-header border\\\">\\n            <div>TEST AUTHENTICATION</div>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n            <div>Query Code: LbujxbMv8MeQQ0V_-Gwm</div>\\n            <div>Query state:state-6a0cd73c-e8a7-415f-abff-e3ede4885461</div>\\n            <div><a href=\\\"/\\\">Go Home</a></div>\\n        </div>\\n    </div>\\n</div>\\n<script src=\\\"https://code.jquery.com/jquery-3.3.1.slim.min.js\\\" integrity=\\\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\\\" crossorigin=\\\"anonymous\\\"></script>\\n<script src=\\\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js\\\" integrity=\\\"sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49\\\" crossorigin=\\\"anonymous\\\"></script>\\n<script src=\\\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js\\\" integrity=\\\"sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy\\\" crossorigin=\\\"anonymous\\\"></script>\\n</body>\\n\"\r\n}\r\n```\r\n\r\nI have a workaround (basically re-verify the access token as the only cookie I can save) but I'm not a fan of it and checking with some coworkers (and the googling) I should be able to set multiple cookies in a row.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3763/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3763/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3762",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3762/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3762/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3762/events",
    "html_url": "https://github.com/expressjs/express/issues/3762",
    "id": 369174156,
    "node_id": "MDU6SXNzdWUzNjkxNzQxNTY=",
    "number": 3762,
    "title": "res.sendFile() throws ReferenceError on Azure ",
    "user": {
      "login": "RDJ14",
      "id": 16528494,
      "node_id": "MDQ6VXNlcjE2NTI4NDk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/16528494?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RDJ14",
      "html_url": "https://github.com/RDJ14",
      "followers_url": "https://api.github.com/users/RDJ14/followers",
      "following_url": "https://api.github.com/users/RDJ14/following{/other_user}",
      "gists_url": "https://api.github.com/users/RDJ14/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RDJ14/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RDJ14/subscriptions",
      "organizations_url": "https://api.github.com/users/RDJ14/orgs",
      "repos_url": "https://api.github.com/users/RDJ14/repos",
      "events_url": "https://api.github.com/users/RDJ14/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RDJ14/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-10-11T15:20:47Z",
    "updated_at": "2018-10-11T15:41:38Z",
    "closed_at": "2018-10-11T15:36:50Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Node version: v0.10.40\r\nExpress version: 4.16.4\r\n\r\nError:\r\n```\r\nApplication has thrown an uncaught exception and is terminated:\r\nReferenceError: setImmediate is not defined\r\n    at next (D:\\home\\site\\wwwroot\\node_modules\\express\\lib\\router\\index.js:202:7)\r\n    at Layer.handle [as handle_request] (D:\\home\\site\\wwwroot\\node_modules\\express\\lib\\router\\layer.js:97:5)\r\n    at D:\\home\\site\\wwwroot\\node_modules\\express\\lib\\router\\index.js:281:22\r\n    at param (D:\\home\\site\\wwwroot\\node_modules\\express\\lib\\router\\index.js:354:14)\r\n    at param (D:\\home\\site\\wwwroot\\node_modules\\express\\lib\\router\\index.js:365:14)\r\n    at Function.process_params (D:\\home\\site\\wwwroot\\node_modules\\express\\lib\\router\\index.js:410:3)\r\n    at next (D:\\home\\site\\wwwroot\\node_modules\\express\\lib\\router\\index.js:275:10)\r\n    at SendStream.error (D:\\home\\site\\wwwroot\\node_modules\\serve-static\\index.js:121:7)\r\n    at SendStream.emit (events.js:88:20)\r\n    at SendStream.error (D:\\home\\site\\wwwroot\\node_modules\\send\\index.js:270:17)\r\n```\r\n\r\nI am trying to use express and node to create a middle ware to serve some environment variables from a config.json that is written by octopus, and to log to SEQ. Some of these variables contain api keys to do logging so the idea is to pull out the non sensitive variables and serve them to the client side, and to do the logging from express using app.post() and app.get(). \r\n\r\nI'm not sure this is the best approach, but I am currently just trying to get the server.js to serve my index.html.\r\n\r\n```javascript\r\nconst http = require('http');\r\nconst express = require('express');\r\nconst path = require('path');\r\nconst fs = require('fs');\r\n\r\nvar port = process.env.port || 1337;\r\nvar app = express();\r\n\r\napp.use(express.static(__dirname + '/public'));\r\n\r\napp.use('/static', express.static(__dirname + '/public'));\r\napp.use('/Content', express.static(__dirname + '/public'));\r\n\r\napp.get('*', function(req, res){\r\n    res.sendFile(path.join(__dirname, '/public', 'index.html'));\r\n});\r\nvar server = http.createServer(app).listen(port);\r\n```\r\n\r\nWhen I attempt to hit the site I get a 500 error, and in the console on azure I get the above error. ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3762/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3762/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3761",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3761/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3761/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3761/events",
    "html_url": "https://github.com/expressjs/express/issues/3761",
    "id": 368823813,
    "node_id": "MDU6SXNzdWUzNjg4MjM4MTM=",
    "number": 3761,
    "title": "Is it possible to do html file splitting with expressjs?",
    "user": {
      "login": "Wqrld",
      "id": 13834197,
      "node_id": "MDQ6VXNlcjEzODM0MTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/13834197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Wqrld",
      "html_url": "https://github.com/Wqrld",
      "followers_url": "https://api.github.com/users/Wqrld/followers",
      "following_url": "https://api.github.com/users/Wqrld/following{/other_user}",
      "gists_url": "https://api.github.com/users/Wqrld/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Wqrld/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Wqrld/subscriptions",
      "organizations_url": "https://api.github.com/users/Wqrld/orgs",
      "repos_url": "https://api.github.com/users/Wqrld/repos",
      "events_url": "https://api.github.com/users/Wqrld/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Wqrld/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-10-10T19:46:38Z",
    "updated_at": "2018-10-10T20:08:38Z",
    "closed_at": "2018-10-10T20:08:38Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Im looking to switch over from php to expressjs but one feature that i would really miss would be the ability to just include the header file without having to copypaste it to all pages. Is there a feature do do this in nodejs? preferably with something that can also load scripts.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3761/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3761/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3760",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3760/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3760/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3760/events",
    "html_url": "https://github.com/expressjs/express/issues/3760",
    "id": 368605106,
    "node_id": "MDU6SXNzdWUzNjg2MDUxMDY=",
    "number": 3760,
    "title": "Error with \"www\"",
    "user": {
      "login": "aabb11sdio",
      "id": 44023750,
      "node_id": "MDQ6VXNlcjQ0MDIzNzUw",
      "avatar_url": "https://avatars.githubusercontent.com/u/44023750?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aabb11sdio",
      "html_url": "https://github.com/aabb11sdio",
      "followers_url": "https://api.github.com/users/aabb11sdio/followers",
      "following_url": "https://api.github.com/users/aabb11sdio/following{/other_user}",
      "gists_url": "https://api.github.com/users/aabb11sdio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aabb11sdio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aabb11sdio/subscriptions",
      "organizations_url": "https://api.github.com/users/aabb11sdio/orgs",
      "repos_url": "https://api.github.com/users/aabb11sdio/repos",
      "events_url": "https://api.github.com/users/aabb11sdio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aabb11sdio/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-10-10T10:44:57Z",
    "updated_at": "2018-10-11T01:58:28Z",
    "closed_at": "2018-10-11T01:58:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hey!\r\n\r\nIm trying to use the following code as a reverse proxy. So when I set my pc'ed proxy settings to that, it would redirect Any url to the file.html. But when I type www. in-front of the domain I get error \"ERR_EMPTY_RESPONSE\" Without the subdomain \"www\" It works fine. Why is this? And how do I fix it?\r\n\r\n  expressApp.set('port', 6968);\r\n  expressApp.use(bodyParser.json());\r\n  expressApp.use(bodyParser.urlencoded({ extended: true }));\r\n  expressApp.get('/', function (req, res) {\r\n    res.sendFile('./file.html', {root: __dirname});\r\n  });\r\n  var server = expressApp.listen(6968);",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3760/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3760/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3759",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3759/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3759/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3759/events",
    "html_url": "https://github.com/expressjs/express/issues/3759",
    "id": 367548560,
    "node_id": "MDU6SXNzdWUzNjc1NDg1NjA=",
    "number": 3759,
    "title": "Question: Can i use custom router?",
    "user": {
      "login": "amitguptagwl",
      "id": 7692328,
      "node_id": "MDQ6VXNlcjc2OTIzMjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7692328?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitguptagwl",
      "html_url": "https://github.com/amitguptagwl",
      "followers_url": "https://api.github.com/users/amitguptagwl/followers",
      "following_url": "https://api.github.com/users/amitguptagwl/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitguptagwl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitguptagwl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitguptagwl/subscriptions",
      "organizations_url": "https://api.github.com/users/amitguptagwl/orgs",
      "repos_url": "https://api.github.com/users/amitguptagwl/repos",
      "events_url": "https://api.github.com/users/amitguptagwl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitguptagwl/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-10-07T12:10:00Z",
    "updated_at": "2018-10-08T16:23:29Z",
    "closed_at": "2018-10-07T15:00:01Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have previously written a web router [anumargak](https://github.com/node-muneem/anumargak/). I was wondering if I can use it with express js. Please tell me if there is any way to register custom router?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3759/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3759/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3758",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3758/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3758/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3758/events",
    "html_url": "https://github.com/expressjs/express/issues/3758",
    "id": 367401673,
    "node_id": "MDU6SXNzdWUzNjc0MDE2NzM=",
    "number": 3758,
    "title": "docs: confusing documentation for req.originalUrl",
    "user": {
      "login": "niftylettuce",
      "id": 523141,
      "node_id": "MDQ6VXNlcjUyMzE0MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/523141?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/niftylettuce",
      "html_url": "https://github.com/niftylettuce",
      "followers_url": "https://api.github.com/users/niftylettuce/followers",
      "following_url": "https://api.github.com/users/niftylettuce/following{/other_user}",
      "gists_url": "https://api.github.com/users/niftylettuce/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/niftylettuce/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/niftylettuce/subscriptions",
      "organizations_url": "https://api.github.com/users/niftylettuce/orgs",
      "repos_url": "https://api.github.com/users/niftylettuce/repos",
      "events_url": "https://api.github.com/users/niftylettuce/events{/privacy}",
      "received_events_url": "https://api.github.com/users/niftylettuce/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-10-05T23:52:54Z",
    "updated_at": "2018-10-05T23:57:23Z",
    "closed_at": "2018-10-05T23:53:48Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The docs currently state (regarding `req.originalUrl`):\r\n\r\n> This property is much like req.url; however, it retains the original request URL, allowing you to rewrite req.url freely for internal routing purposes. For example, the “mounting” feature of app.use() will rewrite req.url to strip the mount point.\r\n\r\nShould the code (linked below) instead be `req.originalUrl = req.originalUrl || req.url.toString()`?\r\n\r\nAlso the docs should state something clearer and more concise, perhaps:\r\n\r\n> This property is set equal to the value of Node's HTTP request [message.url](https://nodejs.org/api/http.html#http_message_url) value, however it does not get mutated when `app.use()` is used to rewrite `req.url`.\r\n\r\nI took a look at the codebase and don't see `req.url` getting mutated anywhere.\r\n\r\nThoughts @dougwilson?\r\n\r\nRef: \r\n- https://expressjs.com/en/api.html#req.originalUrl\r\n- https://github.com/expressjs/express/blob/f3fa758af9664526ee18c58764590e48f559e6ae/lib/router/index.js#L172",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3758/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3758/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3757",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3757/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3757/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3757/events",
    "html_url": "https://github.com/expressjs/express/issues/3757",
    "id": 366703691,
    "node_id": "MDU6SXNzdWUzNjY3MDM2OTE=",
    "number": 3757,
    "title": "Switch JSON.stringify to fast-safe-stringify?",
    "user": {
      "login": "niftylettuce",
      "id": 523141,
      "node_id": "MDQ6VXNlcjUyMzE0MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/523141?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/niftylettuce",
      "html_url": "https://github.com/niftylettuce",
      "followers_url": "https://api.github.com/users/niftylettuce/followers",
      "following_url": "https://api.github.com/users/niftylettuce/following{/other_user}",
      "gists_url": "https://api.github.com/users/niftylettuce/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/niftylettuce/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/niftylettuce/subscriptions",
      "organizations_url": "https://api.github.com/users/niftylettuce/orgs",
      "repos_url": "https://api.github.com/users/niftylettuce/repos",
      "events_url": "https://api.github.com/users/niftylettuce/events{/privacy}",
      "received_events_url": "https://api.github.com/users/niftylettuce/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 18291,
        "node_id": "MDU6TGFiZWwxODI5MQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-10-04T09:38:36Z",
    "updated_at": "2018-10-27T17:30:26Z",
    "closed_at": "2018-10-27T17:30:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "@dougwilson can we switch `JSON.stringify` usage here (and perhaps remove that custom stringify function) to use [fast-safe-stringify](https://github.com/davidmarkclements/fast-safe-stringify) instead?\r\n\r\n<https://github.com/expressjs/express/blob/3d10279826f59bf68e28995ce423f7bc4d2f11cf/lib/response.js>\r\n\r\n(I made a similar PR to Koa at https://github.com/koajs/koa/pull/1256)",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3757/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3757/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3756",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3756/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3756/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3756/events",
    "html_url": "https://github.com/expressjs/express/issues/3756",
    "id": 366290775,
    "node_id": "MDU6SXNzdWUzNjYyOTA3NzU=",
    "number": 3756,
    "title": "Http requests drops on local machine periodically ",
    "user": {
      "login": "saiumesh-apty",
      "id": 35692863,
      "node_id": "MDQ6VXNlcjM1NjkyODYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/35692863?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/saiumesh-apty",
      "html_url": "https://github.com/saiumesh-apty",
      "followers_url": "https://api.github.com/users/saiumesh-apty/followers",
      "following_url": "https://api.github.com/users/saiumesh-apty/following{/other_user}",
      "gists_url": "https://api.github.com/users/saiumesh-apty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/saiumesh-apty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/saiumesh-apty/subscriptions",
      "organizations_url": "https://api.github.com/users/saiumesh-apty/orgs",
      "repos_url": "https://api.github.com/users/saiumesh-apty/repos",
      "events_url": "https://api.github.com/users/saiumesh-apty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/saiumesh-apty/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-10-03T11:22:28Z",
    "updated_at": "2018-10-03T16:56:52Z",
    "closed_at": "2018-10-03T16:56:51Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm running bare minimum express code as below \r\n\r\n**Machine: Windows 10\r\nNode: v8.12.0\r\nexpress: 4.16.3**\r\n\r\n``` js\r\nconst express = require('express');\r\nconst http = require('http');\r\n\r\n\r\nhttp.globalAgent.maxSockets = Infinity;\r\n\r\nconst app = express();\r\n\r\nconst port = 8080;\r\nconst server = http.createServer(app);\r\n\r\napp.use('/check', (req, res) => {\r\n  res.json({ status: 'done!!'  });\r\n});\r\n\r\n\r\nprocess.addListener(\"uncaughtException\", function (err) {\r\n    console.log(err);\r\n});\r\n\r\nserver.listen(port, () => {\r\n  console.log('server is Up!!');\r\n})\r\n```\r\nWhen I run with 3000 users using Jmeter server silently dropping some requests without any error output. \r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3756/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3756/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3755",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3755/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3755/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3755/events",
    "html_url": "https://github.com/expressjs/express/issues/3755",
    "id": 364427045,
    "node_id": "MDU6SXNzdWUzNjQ0MjcwNDU=",
    "number": 3755,
    "title": "static files are not loading.",
    "user": {
      "login": "prdk0",
      "id": 1553889,
      "node_id": "MDQ6VXNlcjE1NTM4ODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1553889?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prdk0",
      "html_url": "https://github.com/prdk0",
      "followers_url": "https://api.github.com/users/prdk0/followers",
      "following_url": "https://api.github.com/users/prdk0/following{/other_user}",
      "gists_url": "https://api.github.com/users/prdk0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prdk0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prdk0/subscriptions",
      "organizations_url": "https://api.github.com/users/prdk0/orgs",
      "repos_url": "https://api.github.com/users/prdk0/repos",
      "events_url": "https://api.github.com/users/prdk0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prdk0/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-09-27T11:22:35Z",
    "updated_at": "2018-10-05T03:13:25Z",
    "closed_at": "2018-10-05T03:13:25Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm using express\": \"~4.16.0, but static files are not loading but the html header files.\r\nIs there any tweek to do other than this `app.use(express.static(path.join(__dirname, 'public')));` ? ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3755/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3755/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3754",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3754/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3754/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3754/events",
    "html_url": "https://github.com/expressjs/express/issues/3754",
    "id": 364167624,
    "node_id": "MDU6SXNzdWUzNjQxNjc2MjQ=",
    "number": 3754,
    "title": " (HELP)Mongoose or Mongodb (MongoClient) which is the best to work with express",
    "user": {
      "login": "AlexandreUser",
      "id": 41487654,
      "node_id": "MDQ6VXNlcjQxNDg3NjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/41487654?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AlexandreUser",
      "html_url": "https://github.com/AlexandreUser",
      "followers_url": "https://api.github.com/users/AlexandreUser/followers",
      "following_url": "https://api.github.com/users/AlexandreUser/following{/other_user}",
      "gists_url": "https://api.github.com/users/AlexandreUser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AlexandreUser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AlexandreUser/subscriptions",
      "organizations_url": "https://api.github.com/users/AlexandreUser/orgs",
      "repos_url": "https://api.github.com/users/AlexandreUser/repos",
      "events_url": "https://api.github.com/users/AlexandreUser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AlexandreUser/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-09-26T19:03:36Z",
    "updated_at": "2018-09-26T19:09:19Z",
    "closed_at": "2018-09-26T19:09:14Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm making a server with express and mongoDB, so i have picked the \"mongodb\" package, now im working with user authentication and i see a lot of tutorials using \"mongoose\", should i switch my package, keep both or keep the \"mongodb\" package",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3754/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3754/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3753",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3753/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3753/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3753/events",
    "html_url": "https://github.com/expressjs/express/issues/3753",
    "id": 363945332,
    "node_id": "MDU6SXNzdWUzNjM5NDUzMzI=",
    "number": 3753,
    "title": "SyntaxError: Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
    "user": {
      "login": "nimit95",
      "id": 14093420,
      "node_id": "MDQ6VXNlcjE0MDkzNDIw",
      "avatar_url": "https://avatars.githubusercontent.com/u/14093420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nimit95",
      "html_url": "https://github.com/nimit95",
      "followers_url": "https://api.github.com/users/nimit95/followers",
      "following_url": "https://api.github.com/users/nimit95/following{/other_user}",
      "gists_url": "https://api.github.com/users/nimit95/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nimit95/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nimit95/subscriptions",
      "organizations_url": "https://api.github.com/users/nimit95/orgs",
      "repos_url": "https://api.github.com/users/nimit95/repos",
      "events_url": "https://api.github.com/users/nimit95/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nimit95/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2018-09-26T09:53:08Z",
    "updated_at": "2018-09-26T12:13:45Z",
    "closed_at": "2018-09-26T12:13:45Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "My node version is 4.3.2(npm 2.15.5) while installing the express version 3.3.4 I am facing this issue. Earlier it used to work fine. I guess recent changes in that version are causing the problem.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3753/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3753/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3752",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3752/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3752/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3752/events",
    "html_url": "https://github.com/expressjs/express/issues/3752",
    "id": 363628723,
    "node_id": "MDU6SXNzdWUzNjM2Mjg3MjM=",
    "number": 3752,
    "title": "Express middleware not honoured if there is a duplicate slash (//)",
    "user": {
      "login": "micophilip",
      "id": 3325832,
      "node_id": "MDQ6VXNlcjMzMjU4MzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3325832?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/micophilip",
      "html_url": "https://github.com/micophilip",
      "followers_url": "https://api.github.com/users/micophilip/followers",
      "following_url": "https://api.github.com/users/micophilip/following{/other_user}",
      "gists_url": "https://api.github.com/users/micophilip/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/micophilip/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/micophilip/subscriptions",
      "organizations_url": "https://api.github.com/users/micophilip/orgs",
      "repos_url": "https://api.github.com/users/micophilip/repos",
      "events_url": "https://api.github.com/users/micophilip/events{/privacy}",
      "received_events_url": "https://api.github.com/users/micophilip/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 13,
    "created_at": "2018-09-25T15:10:41Z",
    "updated_at": "2019-11-11T18:44:25Z",
    "closed_at": "2019-10-05T22:59:35Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello,\r\n\r\nI'm running express v 4.16.2 and I have a middleware routing that looks as follows:\r\n```\r\napp.use('/path/to/my/resource/*', middlewares.myMiddleware);\r\n```\r\nIf there's an extra `/` in certain spots, the middleware is bypassed. \r\n\r\nMiddleware is bypassed in the following cases:\r\n```\r\n/path/to/my//resource/resourceId\r\n/path/to//my/resource/resourceId\r\n```\r\nMiddleware is not bypassed in the following cases and works as expected:\r\n```\r\n//path/to/my/resource/resourceId\r\n/path//to/my/resource/resourceId\r\n/path/to/my/resource//resourceId\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3752/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3752/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3751",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3751/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3751/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3751/events",
    "html_url": "https://github.com/expressjs/express/issues/3751",
    "id": 363229695,
    "node_id": "MDU6SXNzdWUzNjMyMjk2OTU=",
    "number": 3751,
    "title": "Memory leak connected to EJS and PUG view engines",
    "user": {
      "login": "m-majetic",
      "id": 36574853,
      "node_id": "MDQ6VXNlcjM2NTc0ODUz",
      "avatar_url": "https://avatars.githubusercontent.com/u/36574853?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/m-majetic",
      "html_url": "https://github.com/m-majetic",
      "followers_url": "https://api.github.com/users/m-majetic/followers",
      "following_url": "https://api.github.com/users/m-majetic/following{/other_user}",
      "gists_url": "https://api.github.com/users/m-majetic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/m-majetic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/m-majetic/subscriptions",
      "organizations_url": "https://api.github.com/users/m-majetic/orgs",
      "repos_url": "https://api.github.com/users/m-majetic/repos",
      "events_url": "https://api.github.com/users/m-majetic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/m-majetic/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      },
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 12,
    "created_at": "2018-09-24T16:47:44Z",
    "updated_at": "2019-01-16T01:59:24Z",
    "closed_at": "2018-09-24T18:03:45Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "I have tested two simple apps.\r\nOne using the ejs templating engine and the other using pug.\r\nBoth apps were tested with Siege. One route, and 5 - 20 concurrent users.\r\n////////////////////////\r\nEJS\r\n////////////////////////\r\n![memleakservercode](https://user-images.githubusercontent.com/36574853/45965878-ed2ad700-c029-11e8-83f7-a543507a6ef2.jpeg)\r\n![memleakejscode](https://user-images.githubusercontent.com/36574853/45965885-f451e500-c029-11e8-92b0-e5ae85db553c.jpeg)\r\n![memleak](https://user-images.githubusercontent.com/36574853/45965889-f5831200-c029-11e8-87bf-fa419f01c6f7.jpeg)\r\n/////////////////////////////////\r\nPUG\r\n////////////////////////////////\r\n![pugmemleakserver](https://user-images.githubusercontent.com/36574853/45965909-059af180-c02a-11e8-8802-6b3fae504152.jpeg)\r\n![memleakpugfile](https://user-images.githubusercontent.com/36574853/45965919-10ee1d00-c02a-11e8-8b2d-d848317004fb.jpeg)\r\n![pugmemleakchrome2](https://user-images.githubusercontent.com/36574853/45965922-1481a400-c02a-11e8-9c9e-0dd4b7e3e7a1.jpeg)\r\n\r\nIn both tests I was using Express.js version 4.16.3, and latest versions of pug and ejs.\r\nEdit -- wrong version of express stated...",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3751/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3751/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3750",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3750/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3750/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3750/events",
    "html_url": "https://github.com/expressjs/express/issues/3750",
    "id": 362971531,
    "node_id": "MDU6SXNzdWUzNjI5NzE1MzE=",
    "number": 3750,
    "title": "Question about ES6 Map with Express",
    "user": {
      "login": "anonrig",
      "id": 1935246,
      "node_id": "MDQ6VXNlcjE5MzUyNDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1935246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anonrig",
      "html_url": "https://github.com/anonrig",
      "followers_url": "https://api.github.com/users/anonrig/followers",
      "following_url": "https://api.github.com/users/anonrig/following{/other_user}",
      "gists_url": "https://api.github.com/users/anonrig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anonrig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anonrig/subscriptions",
      "organizations_url": "https://api.github.com/users/anonrig/orgs",
      "repos_url": "https://api.github.com/users/anonrig/repos",
      "events_url": "https://api.github.com/users/anonrig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anonrig/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-09-23T19:46:56Z",
    "updated_at": "2018-09-23T19:55:23Z",
    "closed_at": "2018-09-23T19:49:02Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hey Express team!\r\n\r\nFirst of all, great work! Congrats to all of the maintainers of this OSS. While I tried to use some ES6 features such as Map and Set, I realized that the following code doesn't work as expected and tho didn't know the exact implementation of `res.json` I wanted to ask to all.\r\n\r\nMy question is: why does the following code returns `{}` to the client-side?\r\n\r\n```javascript\r\nrouter.get('/test', (req, res, next) => {\r\nconst response = new Map();\r\nresponse.set('hello', 'world');\r\nres.json(response);\r\n});\r\n```\r\n\r\nThanks!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3750/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3750/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3749",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3749/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3749/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3749/events",
    "html_url": "https://github.com/expressjs/express/issues/3749",
    "id": 361760093,
    "node_id": "MDU6SXNzdWUzNjE3NjAwOTM=",
    "number": 3749,
    "title": "res.download repeating file contents after 4 GB",
    "user": {
      "login": "MvRens",
      "id": 3259652,
      "node_id": "MDQ6VXNlcjMyNTk2NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3259652?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MvRens",
      "html_url": "https://github.com/MvRens",
      "followers_url": "https://api.github.com/users/MvRens/followers",
      "following_url": "https://api.github.com/users/MvRens/following{/other_user}",
      "gists_url": "https://api.github.com/users/MvRens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MvRens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MvRens/subscriptions",
      "organizations_url": "https://api.github.com/users/MvRens/orgs",
      "repos_url": "https://api.github.com/users/MvRens/repos",
      "events_url": "https://api.github.com/users/MvRens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MvRens/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-09-19T13:52:28Z",
    "updated_at": "2018-09-19T14:38:15Z",
    "closed_at": "2018-09-19T14:02:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I ran into an issue sending files over 4 GB. Comparing the file on the server to the one downloaded reveals that the content starts all over again (shout out to Beyond Compare for being able to visualize 2 6 GB files). \r\n\r\nConsidering the point where it resets it looks like an overflow of an unsigned 32-bits integer, so to get the obvious question out of the way: the application is running on Debian 64-bits, ext4, Node 10.0.0 and have verified that it's the 64-bits version using ```file /usr/bin/node```.\r\n\r\nTo confirm the issue wasn't anywhere else in my code I wrote a very simple test application which sends a 6 GB file:\r\n\r\n```javascript\r\nconst express = require('express');\r\nconst app = express();\r\n\r\napp.get('/', (req, res) =>\r\n{\r\n        res.download('/home/recv/bac7a55f35799974779b62a24e773939', 'test');\r\n});\r\n\r\nvar server = app.listen(3456, () => console.log('Running'));\r\n```\r\n\r\nI also tried res.sendFile, both failed; the file size is exactly right but the contents repeat.\r\n\r\nWhat is interesting however is that if I pipe the file directly it arrives intact:\r\n\r\n```javascript\r\napp.get('/', (req, res) =>\r\n{\r\n        res.setHeader('Content-Disposition', 'attachment; filename=\"test2\"');\r\n        fs.createReadStream('/home/recv/bac7a55f35799974779b62a24e773939').pipe(res);\r\n});\r\n```\r\n\r\nOf course Express does a lot more, and I'd rather not try to recreate that. I made an attempt to figure out why there is a difference from the source code but no luck yet. Perhaps someone with more inside knowledge can tell what is going on? I couldn't find any other report, so I'm certainly not ruling out that the issue is on my end.\r\n\r\nThanks for any help debugging this issue!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3749/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3749/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3748",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3748/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3748/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3748/events",
    "html_url": "https://github.com/expressjs/express/issues/3748",
    "id": 361233686,
    "node_id": "MDU6SXNzdWUzNjEyMzM2ODY=",
    "number": 3748,
    "title": "Global async wrapper - is this valid?",
    "user": {
      "login": "adamgiacomelli",
      "id": 8747447,
      "node_id": "MDQ6VXNlcjg3NDc0NDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8747447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamgiacomelli",
      "html_url": "https://github.com/adamgiacomelli",
      "followers_url": "https://api.github.com/users/adamgiacomelli/followers",
      "following_url": "https://api.github.com/users/adamgiacomelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamgiacomelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamgiacomelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamgiacomelli/subscriptions",
      "organizations_url": "https://api.github.com/users/adamgiacomelli/orgs",
      "repos_url": "https://api.github.com/users/adamgiacomelli/repos",
      "events_url": "https://api.github.com/users/adamgiacomelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamgiacomelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2018-09-18T10:16:40Z",
    "updated_at": "2018-10-27T03:18:10Z",
    "closed_at": "2018-10-27T03:18:10Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The issue we had was how to wrap all of the routes inside a router with an async wrapper (i.e. to have a global try/catch block on all controller functions) and we came up with this:\r\n```\r\nconst wrapper = fn => (req, res, next) => {\r\n  Promise.resolve(fn(req, res, next)).catch(next);\r\n};\r\n\r\nconst asyncMiddleware = (router) => {\r\n  const routes = router;\r\n\r\n  for (let f = 0; f < routes.stack.length; f += 1) {\r\n    for (let fs = 0; fs < routes.stack[f].route.stack.length; fs += 1) {\r\n      routes.stack[f].route.stack[fs].handle = wrapper(\r\n        routes.stack[f].route.stack[fs].handle,\r\n      );\r\n    }\r\n  }\r\n  return routes;\r\n};\r\n\r\nmodule.exports = asyncMiddleware;\r\n```\r\nThen we use the \"middleware\" like so:\r\n```\r\nrouter.use('/example', AsyncMiddleware(exampleRouter));\r\n```\r\nAnd we have effectively wrapped all of the routes inside exampleRouter in a catch block.\r\n\r\nI am wondering if this makes sense and/or if there is substantial problems to expect when express is upgraded/updated ... etc.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3748/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3748/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3747",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3747/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3747/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3747/events",
    "html_url": "https://github.com/expressjs/express/issues/3747",
    "id": 360544495,
    "node_id": "MDU6SXNzdWUzNjA1NDQ0OTU=",
    "number": 3747,
    "title": "How to regenerate req.query and req.params after rewriting req.url in Express4?",
    "user": {
      "login": "aguyinmontreal",
      "id": 19701656,
      "node_id": "MDQ6VXNlcjE5NzAxNjU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/19701656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aguyinmontreal",
      "html_url": "https://github.com/aguyinmontreal",
      "followers_url": "https://api.github.com/users/aguyinmontreal/followers",
      "following_url": "https://api.github.com/users/aguyinmontreal/following{/other_user}",
      "gists_url": "https://api.github.com/users/aguyinmontreal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aguyinmontreal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aguyinmontreal/subscriptions",
      "organizations_url": "https://api.github.com/users/aguyinmontreal/orgs",
      "repos_url": "https://api.github.com/users/aguyinmontreal/repos",
      "events_url": "https://api.github.com/users/aguyinmontreal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aguyinmontreal/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-09-15T14:23:55Z",
    "updated_at": "2018-09-15T15:15:41Z",
    "closed_at": "2018-09-15T15:15:29Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I understand `req.query` and `req.params` are automatically regenerated after we rewrite `req.url` in Express 5.\r\n\r\nThis is not the case in Express 4. So what is the recommended method in Express 4 to make sure `req.query` and `req.params` fit the rewrited `req.url` ?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3747/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3747/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3746",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3746/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3746/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3746/events",
    "html_url": "https://github.com/expressjs/express/issues/3746",
    "id": 360204725,
    "node_id": "MDU6SXNzdWUzNjAyMDQ3MjU=",
    "number": 3746,
    "title": "Reject request paths containing characters not allowing by HTTP spec",
    "user": {
      "login": "bajtos",
      "id": 1140553,
      "node_id": "MDQ6VXNlcjExNDA1NTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1140553?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bajtos",
      "html_url": "https://github.com/bajtos",
      "followers_url": "https://api.github.com/users/bajtos/followers",
      "following_url": "https://api.github.com/users/bajtos/following{/other_user}",
      "gists_url": "https://api.github.com/users/bajtos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bajtos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bajtos/subscriptions",
      "organizations_url": "https://api.github.com/users/bajtos/orgs",
      "repos_url": "https://api.github.com/users/bajtos/repos",
      "events_url": "https://api.github.com/users/bajtos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bajtos/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 18291,
        "node_id": "MDU6TGFiZWwxODI5MQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-09-14T08:24:27Z",
    "updated_at": "2018-09-17T12:18:41Z",
    "closed_at": "2018-09-17T12:18:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "See https://github.com/nodejs/node/issues/18405\r\n\r\nThe HTTP spec ([RFC 7230](https://tools.ietf.org/html/rfc7230)) has the following definition for the [`request-target`](https://tools.ietf.org/html/rfc7230#section-5.3) (URI) of a request:\r\n \r\n```\r\n request-target = origin-form\r\n                / absolute-form\r\n                / authority-form\r\n                / asterisk-form\r\n```\r\nWe can follow this further to find that each form has similar requirements, all defined [here](https://tools.ietf.org/html/rfc7230#section-2.7), which references [RFC 3986](https://tools.ietf.org/html/rfc3986#section-4.3). We then see the definitions of `authority` (hostname and port) and `path-abempty` (pathname).\r\n \r\n```\r\nauthority     = [ userinfo \"@\" ] host [ \":\" port ]\r\nuserinfo      = *( unreserved / pct-encoded / sub-delims / \":\" )\r\nhost          = IP-literal / IPv4address / reg-name\r\nport          = *DIGIT\r\nreg-name      = *( unreserved / pct-encoded / sub-delims )\r\n \r\npath-abempty  = *( \"/\" segment )\r\nsegment       = *pchar\r\npchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\r\n \r\nunreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\r\npct-encoded   = \"%\" HEXDIG HEXDIG\r\nsub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\r\n```\r\n\r\nThe specification restricts these values to specific sets of characters, and for good reason! \r\n\r\nHowever, both the `http` module in Node.js core and Express allow pretty much any characters. Based on the discussion in https://github.com/nodejs/node/issues/18405, Node.js core is not going to implement a stricter validation of incoming `request-target` values.\r\n\r\nCan we implement this validation in Express?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3746/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3746/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3745",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3745/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3745/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3745/events",
    "html_url": "https://github.com/expressjs/express/issues/3745",
    "id": 360056930,
    "node_id": "MDU6SXNzdWUzNjAwNTY5MzA=",
    "number": 3745,
    "title": "Node 4 is no longer supported because of a dependency",
    "user": {
      "login": "rochdev",
      "id": 1596303,
      "node_id": "MDQ6VXNlcjE1OTYzMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1596303?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rochdev",
      "html_url": "https://github.com/rochdev",
      "followers_url": "https://api.github.com/users/rochdev/followers",
      "following_url": "https://api.github.com/users/rochdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/rochdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rochdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rochdev/subscriptions",
      "organizations_url": "https://api.github.com/users/rochdev/orgs",
      "repos_url": "https://api.github.com/users/rochdev/repos",
      "events_url": "https://api.github.com/users/rochdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rochdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2018-09-13T20:36:33Z",
    "updated_at": "2018-09-14T00:43:15Z",
    "closed_at": "2018-09-13T20:39:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The `debug` transitive dependency pulled by (at least) the `send` dependency dropped support for Node 4. This causes `express` to no longer support Node 4 as well. This should either be fixed or the minimum version should be bumped to Node 6.\r\n\r\nSee https://github.com/visionmedia/debug/releases/tag/4.0.0",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3745/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3745/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3744",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3744/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3744/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3744/events",
    "html_url": "https://github.com/expressjs/express/issues/3744",
    "id": 360005078,
    "node_id": "MDU6SXNzdWUzNjAwMDUwNzg=",
    "number": 3744,
    "title": "npm ERR! code EJSONPARSE",
    "user": {
      "login": "CubecCubehead",
      "id": 43249517,
      "node_id": "MDQ6VXNlcjQzMjQ5NTE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/43249517?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CubecCubehead",
      "html_url": "https://github.com/CubecCubehead",
      "followers_url": "https://api.github.com/users/CubecCubehead/followers",
      "following_url": "https://api.github.com/users/CubecCubehead/following{/other_user}",
      "gists_url": "https://api.github.com/users/CubecCubehead/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CubecCubehead/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CubecCubehead/subscriptions",
      "organizations_url": "https://api.github.com/users/CubecCubehead/orgs",
      "repos_url": "https://api.github.com/users/CubecCubehead/repos",
      "events_url": "https://api.github.com/users/CubecCubehead/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CubecCubehead/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-09-13T18:06:36Z",
    "updated_at": "2018-09-13T18:10:38Z",
    "closed_at": "2018-09-13T18:08:13Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Help I am getting this error\r\n> C:\\Users\\Admin\\Desktop\\bot>npm install discord.io winston -save.\r\n> npm ERR! file C:\\Users\\Admin\\Desktop\\bot\\package.json\r\n> npm ERR! code EJSONPARSE\r\n> npm ERR! JSON.parse Failed to parse json\r\n>  pm ERR! JSON.parse Unexpected token � in JSON at position 0 while parsing near '��{\r\n> npm ERR! JSON.parse  \u001c n a m e \u001d ...'\r\n> npm ERR! JSON.parse Failed to parse package.json data.\r\n> npm ERR! JSON.parse package.json must be actual JSON, not just JavaScript.\r\n> \r\n> npm ERR! A complete log of this run can be found in:\r\n> npm ERR!     C:\\Users\\Admin\\AppData\\Roaming\\npm-cache\\_logs\\2018-09-13T17_55_13_036Z-debug.log\r\n> \r\n\r\n\r\nHere is the log:\r\n\r\n> 0 info it worked if it ends with ok\r\n> 1 verbose cli [ 'C:\\\\Program Files\\\\nodejs\\\\node.exe',\r\n> 1 verbose cli   'C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js',\r\n> 1 verbose cli   'install',\r\n> 1 verbose cli   'discord.io',\r\n> 1 verbose cli   'winston',\r\n> 1 verbose cli   '-save.' ]\r\n> 2 info using npm@6.4.1\r\n> 3 info using node@v10.10.0\r\n> 4 verbose npm-session c92302b61857a70f\r\n> 5 silly install loadCurrentTree\r\n> 6 silly install readLocalPackageData\r\n> 7 timing stage:rollbackFailedOptional Completed in 15ms\r\n> 8 timing stage:runTopLevelLifecycles Completed in 89ms\r\n> 9 verbose stack Error: Failed to parse json\r\n> 9 verbose stack Unexpected token � in JSON at position 0 while parsing near '��{ \r\n>  \r\n> 9 verbose stack  \u001c n a m e \u001d ...'\r\n> 9 verbose stack     at parseError (C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\read-package-json\\read-json.js:452:11)\r\n> 9 verbose stack     at parseJson (C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\read-package-json\\read-json.js:104:26)\r\n> 9 verbose stack     at C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\read-package-json\\read-json.js:51:5\r\n> 9 verbose stack     at C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\graceful-fs\\graceful-fs.js:78:16\r\n> 9 verbose stack     at FSReqWrap.readFileAfterClose [as oncomplete] (internal/fs/read_file_context.js:53:3)\r\n> 10 verbose cwd C:\\Users\\Admin\\Desktop\\bot\r\n> 11 verbose Windows_NT 10.0.17134\r\n> 12 verbose argv \"C:\\\\Program Files\\\\nodejs\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"discord.io\" \"winston\" \"-save.\"\r\n> 13 verbose node v10.10.0\r\n> 14 verbose npm  v6.4.1\r\n> 15 error file C:\\Users\\Admin\\Desktop\\bot\\package.json\r\n> 16 error code EJSONPARSE\r\n> 17 error JSON.parse Failed to parse json\r\n> 17 error JSON.parse Unexpected token � in JSON at position 0 while parsing near '��{ \r\n>  \r\n> 17 error JSON.parse  \u001c n a m e \u001d ...'\r\n> 18 error JSON.parse Failed to parse package.json data.\r\n> 18 error JSON.parse package.json must be actual JSON, not just JavaScript.\r\n> 19 verbose exit [ 1, true ]\r\n> \r\n\r\nWhat should I do?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3744/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3744/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3743",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3743/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3743/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3743/events",
    "html_url": "https://github.com/expressjs/express/issues/3743",
    "id": 359841305,
    "node_id": "MDU6SXNzdWUzNTk4NDEzMDU=",
    "number": 3743,
    "title": "Big Integers are being round",
    "user": {
      "login": "b72",
      "id": 9383665,
      "node_id": "MDQ6VXNlcjkzODM2NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9383665?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/b72",
      "html_url": "https://github.com/b72",
      "followers_url": "https://api.github.com/users/b72/followers",
      "following_url": "https://api.github.com/users/b72/following{/other_user}",
      "gists_url": "https://api.github.com/users/b72/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/b72/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/b72/subscriptions",
      "organizations_url": "https://api.github.com/users/b72/orgs",
      "repos_url": "https://api.github.com/users/b72/repos",
      "events_url": "https://api.github.com/users/b72/events{/privacy}",
      "received_events_url": "https://api.github.com/users/b72/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-09-13T10:44:50Z",
    "updated_at": "2018-09-13T12:49:31Z",
    "closed_at": "2018-09-13T12:49:20Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Big integers are being round up in js\r\nhere is my code\r\n        let bigint= 10156117730324999\r\n        console.log(bigint);\r\n       output is 10156117730325000\r\n\r\nhttps://jsfiddle.net/uk26sywg/",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3743/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3743/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3742",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3742/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3742/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3742/events",
    "html_url": "https://github.com/expressjs/express/pull/3742",
    "id": 359836897,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjE1MjM2Mjg0",
    "number": 3742,
    "title": "append async function error catch",
    "user": {
      "login": "mycrl",
      "id": 24816571,
      "node_id": "MDQ6VXNlcjI0ODE2NTcx",
      "avatar_url": "https://avatars.githubusercontent.com/u/24816571?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mycrl",
      "html_url": "https://github.com/mycrl",
      "followers_url": "https://api.github.com/users/mycrl/followers",
      "following_url": "https://api.github.com/users/mycrl/following{/other_user}",
      "gists_url": "https://api.github.com/users/mycrl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mycrl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mycrl/subscriptions",
      "organizations_url": "https://api.github.com/users/mycrl/orgs",
      "repos_url": "https://api.github.com/users/mycrl/repos",
      "events_url": "https://api.github.com/users/mycrl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mycrl/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-09-13T10:31:05Z",
    "updated_at": "2018-09-13T12:51:12Z",
    "closed_at": "2018-09-13T12:50:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3742",
      "html_url": "https://github.com/expressjs/express/pull/3742",
      "diff_url": "https://github.com/expressjs/express/pull/3742.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3742.patch",
      "merged_at": null
    },
    "body": "Solve the problem that asynchronous functions can't intercept errors.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3742/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3742/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3741",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3741/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3741/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3741/events",
    "html_url": "https://github.com/expressjs/express/pull/3741",
    "id": 359826246,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjE1MjI3ODg5",
    "number": 3741,
    "title": "append async error catch",
    "user": {
      "login": "mycrl",
      "id": 24816571,
      "node_id": "MDQ6VXNlcjI0ODE2NTcx",
      "avatar_url": "https://avatars.githubusercontent.com/u/24816571?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mycrl",
      "html_url": "https://github.com/mycrl",
      "followers_url": "https://api.github.com/users/mycrl/followers",
      "following_url": "https://api.github.com/users/mycrl/following{/other_user}",
      "gists_url": "https://api.github.com/users/mycrl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mycrl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mycrl/subscriptions",
      "organizations_url": "https://api.github.com/users/mycrl/orgs",
      "repos_url": "https://api.github.com/users/mycrl/repos",
      "events_url": "https://api.github.com/users/mycrl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mycrl/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-09-13T09:59:33Z",
    "updated_at": "2018-09-13T12:52:24Z",
    "closed_at": "2018-09-13T10:28:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3741",
      "html_url": "https://github.com/expressjs/express/pull/3741",
      "diff_url": "https://github.com/expressjs/express/pull/3741.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3741.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3741/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3741/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3740",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3740/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3740/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3740/events",
    "html_url": "https://github.com/expressjs/express/issues/3740",
    "id": 359822830,
    "node_id": "MDU6SXNzdWUzNTk4MjI4MzA=",
    "number": 3740,
    "title": "catch async function",
    "user": {
      "login": "mycrl",
      "id": 24816571,
      "node_id": "MDQ6VXNlcjI0ODE2NTcx",
      "avatar_url": "https://avatars.githubusercontent.com/u/24816571?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mycrl",
      "html_url": "https://github.com/mycrl",
      "followers_url": "https://api.github.com/users/mycrl/followers",
      "following_url": "https://api.github.com/users/mycrl/following{/other_user}",
      "gists_url": "https://api.github.com/users/mycrl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mycrl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mycrl/subscriptions",
      "organizations_url": "https://api.github.com/users/mycrl/orgs",
      "repos_url": "https://api.github.com/users/mycrl/repos",
      "events_url": "https://api.github.com/users/mycrl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mycrl/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-09-13T09:50:09Z",
    "updated_at": "2018-09-13T12:54:11Z",
    "closed_at": "2018-09-13T12:54:11Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "router layer.js\r\n\r\n```js\r\nLayer.prototype.handle_request = function handle(req, res, next) {\r\n  var fn = this.handle;\r\n\r\n  if (fn.length > 3) {\r\n    // not a standard request handler\r\n    return next();\r\n  }\r\n\r\n  try {\r\n    // catch async function\r\n    if (fn.constructor.toLocaleString().includes(\"AsyncFunction\")) {\r\n      fn(req, res, next).catch(next);\r\n    } else {\r\n      fn(req, res, next);\r\n    }\r\n  } catch (err) {\r\n    next(err);\r\n  }\r\n};\r\n```\r\n\r\nThis is very helpful！",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3740/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3740/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3739",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3739/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3739/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3739/events",
    "html_url": "https://github.com/expressjs/express/issues/3739",
    "id": 358346510,
    "node_id": "MDU6SXNzdWUzNTgzNDY1MTA=",
    "number": 3739,
    "title": "express router + html-webpack-plugin",
    "user": {
      "login": "brewster1134",
      "id": 217428,
      "node_id": "MDQ6VXNlcjIxNzQyOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/217428?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brewster1134",
      "html_url": "https://github.com/brewster1134",
      "followers_url": "https://api.github.com/users/brewster1134/followers",
      "following_url": "https://api.github.com/users/brewster1134/following{/other_user}",
      "gists_url": "https://api.github.com/users/brewster1134/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brewster1134/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brewster1134/subscriptions",
      "organizations_url": "https://api.github.com/users/brewster1134/orgs",
      "repos_url": "https://api.github.com/users/brewster1134/repos",
      "events_url": "https://api.github.com/users/brewster1134/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brewster1134/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-09-09T03:37:00Z",
    "updated_at": "2019-05-08T04:21:43Z",
    "closed_at": "2018-09-11T21:12:22Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "so i have been troubleshooting the plugin with this for awhile, but am now leaning more to it possibly being something i am doing wrong with my express setup.\r\n\r\nwhen i request the root route... the plugin is used, but the router is not\r\nwhen i request any other route... the router is used, but the plugin is not\r\n\r\nfor example...\r\n```js\r\nrouter.get('/', function() {console.log('this IS NOT logging when requesting http://localhost')});\r\nrouter.get('/foo', function() {console.log('this IS logging when requesting http://localhost/foo')});\r\n```\r\n\r\nmy setup is pretty straight forward\r\n\r\n###### webpack.config\r\n```coffee\r\nHtml = require 'html-webpack-plugin'\r\n\r\nmodule.exports = () ->\r\n  entry: path.resolve 'server', 'scripts', 'app.coffee'\r\n  plugins: [\r\n    new Html()\r\n  ]\r\n```\r\n\r\n###### express setup\r\n```coffee\r\n  router.get '/', ->\r\n    console.log 'NOT logged'\r\n\r\n  router.get '/foo', ->\r\n    console.log 'IS logged'\r\n```\r\n\r\ni have been unable to find any documentation regarding using these together, and i am fairly new to express. my post to stack overflow has not been commented on for awhile now, so i am turning to the express community to see if there is anything i am missing, or at least an approach to troubleshoot. i am still learning the ins and outs of express routing and how it engages middleware and plugins.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3739/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3739/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3738",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3738/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3738/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3738/events",
    "html_url": "https://github.com/expressjs/express/issues/3738",
    "id": 358340034,
    "node_id": "MDU6SXNzdWUzNTgzNDAwMzQ=",
    "number": 3738,
    "title": "How to disable HTML inlining ?",
    "user": {
      "login": "Songbird0",
      "id": 13397428,
      "node_id": "MDQ6VXNlcjEzMzk3NDI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/13397428?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Songbird0",
      "html_url": "https://github.com/Songbird0",
      "followers_url": "https://api.github.com/users/Songbird0/followers",
      "following_url": "https://api.github.com/users/Songbird0/following{/other_user}",
      "gists_url": "https://api.github.com/users/Songbird0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Songbird0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Songbird0/subscriptions",
      "organizations_url": "https://api.github.com/users/Songbird0/orgs",
      "repos_url": "https://api.github.com/users/Songbird0/repos",
      "events_url": "https://api.github.com/users/Songbird0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Songbird0/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-09-09T01:07:27Z",
    "updated_at": "2018-09-09T01:11:56Z",
    "closed_at": "2018-09-09T01:11:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi!\r\n\r\nHow to tell \"no inline for html documents\" to Express, please? I didn't find anything on the bug tracker about it.\r\n\r\n**EDIT**: I'm using Pug.\r\n\r\nThanks!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3738/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3738/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3737",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3737/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3737/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3737/events",
    "html_url": "https://github.com/expressjs/express/pull/3737",
    "id": 357198637,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjEzMjcwMTIw",
    "number": 3737,
    "title": "kupa mieci",
    "user": {
      "login": "tprus",
      "id": 122964,
      "node_id": "MDQ6VXNlcjEyMjk2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/122964?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tprus",
      "html_url": "https://github.com/tprus",
      "followers_url": "https://api.github.com/users/tprus/followers",
      "following_url": "https://api.github.com/users/tprus/following{/other_user}",
      "gists_url": "https://api.github.com/users/tprus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tprus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tprus/subscriptions",
      "organizations_url": "https://api.github.com/users/tprus/orgs",
      "repos_url": "https://api.github.com/users/tprus/repos",
      "events_url": "https://api.github.com/users/tprus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tprus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-09-05T12:08:30Z",
    "updated_at": "2018-09-09T01:19:49Z",
    "closed_at": "2018-09-05T12:09:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3737",
      "html_url": "https://github.com/expressjs/express/pull/3737",
      "diff_url": "https://github.com/expressjs/express/pull/3737.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3737.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3737/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3737/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3736",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3736/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3736/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3736/events",
    "html_url": "https://github.com/expressjs/express/issues/3736",
    "id": 356726369,
    "node_id": "MDU6SXNzdWUzNTY3MjYzNjk=",
    "number": 3736,
    "title": "wrong filename in content-disposition when using res.sendFile()",
    "user": {
      "login": "zhuyujiess",
      "id": 34830512,
      "node_id": "MDQ6VXNlcjM0ODMwNTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/34830512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zhuyujiess",
      "html_url": "https://github.com/zhuyujiess",
      "followers_url": "https://api.github.com/users/zhuyujiess/followers",
      "following_url": "https://api.github.com/users/zhuyujiess/following{/other_user}",
      "gists_url": "https://api.github.com/users/zhuyujiess/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zhuyujiess/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zhuyujiess/subscriptions",
      "organizations_url": "https://api.github.com/users/zhuyujiess/orgs",
      "repos_url": "https://api.github.com/users/zhuyujiess/repos",
      "events_url": "https://api.github.com/users/zhuyujiess/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zhuyujiess/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-09-04T09:28:49Z",
    "updated_at": "2019-02-12T23:47:04Z",
    "closed_at": "2018-09-04T22:42:13Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "here is my code:\r\n```\r\nvar path = require('path');\r\nvar fs = require('fs');\r\nvar app = require('express')();\r\nvar port = 4001;\r\napp.get('/:filename', function(req, res) {\r\n  var filePath = path.join(__dirname, 'code.jpg');\r\n  res.setHeader(\"Content-Type\",\"image/jpeg\");\r\n  res.setHeader(\"Content-Dispositon\",\"attachment; filename=\" + \"test.jpeg\");\r\n  res.sendFile(filePath);\r\n});\r\n\r\n\r\napp.listen(port, () => {\r\n\tconsole.log(`server start at ${port}`);\r\n}\r\n```\r\n\r\nwhen i type url like: http:// my machine ip:4001/test on browser address area, it will show the image .\r\nbut when I right click the image through my mouse, and choose save as image item, it doesn't show the correct name defined in content-disposition.\r\n\r\n![image](https://user-images.githubusercontent.com/34830512/45023305-b84de480-b068-11e8-92d6-69acb1332727.png)\r\n\r\nas the picture show, the response header content-diposition's filename is test.jpeg, but the download dialog show other name.\r\nhow should I solve the problem?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3736/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3736/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3735",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3735/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3735/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3735/events",
    "html_url": "https://github.com/expressjs/express/issues/3735",
    "id": 356294265,
    "node_id": "MDU6SXNzdWUzNTYyOTQyNjU=",
    "number": 3735,
    "title": "res.sendFile and res.download not working over HTTPS",
    "user": {
      "login": "KD33",
      "id": 25203566,
      "node_id": "MDQ6VXNlcjI1MjAzNTY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/25203566?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KD33",
      "html_url": "https://github.com/KD33",
      "followers_url": "https://api.github.com/users/KD33/followers",
      "following_url": "https://api.github.com/users/KD33/following{/other_user}",
      "gists_url": "https://api.github.com/users/KD33/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KD33/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KD33/subscriptions",
      "organizations_url": "https://api.github.com/users/KD33/orgs",
      "repos_url": "https://api.github.com/users/KD33/repos",
      "events_url": "https://api.github.com/users/KD33/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KD33/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-09-02T16:11:28Z",
    "updated_at": "2018-10-25T23:03:35Z",
    "closed_at": "2018-10-25T23:03:34Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have an node.js app using express set up on DigitalOcean that uses HTTPS. In my code, I have a few routes that use res.sendFile and res.download. When I visit these routes via HTTPS, the function does not execute (the function body is not triggered and the files are not sent/downloaded). However, when I visit via HTTP, the function body is executed and the respective files get sent/downloaded.\r\n\r\nThis happens both with Express and nginx, so I believe the issue to be with HTTPS.\r\n\r\nWhen I tried reverse proxying with nginx and sent a request to the routes via my command line, I got this error back:\r\n\r\n`{Error: write EPROTO 140735787848576:error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure:../deps/openssl/openssl/ssl/s23_clnt.c:802\r\n    at _errnoException (util.js:992:11)\r\n    at WriteWrap.afterWrite [as oncomplete] (net.js:864:14) code: 'EPROTO', errno: 'EPROTO', syscall: 'write' }`\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3735/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3735/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3734",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3734/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3734/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3734/events",
    "html_url": "https://github.com/expressjs/express/issues/3734",
    "id": 355899170,
    "node_id": "MDU6SXNzdWUzNTU4OTkxNzA=",
    "number": 3734,
    "title": "Express js array form field converting into String field name",
    "user": {
      "login": "sadikhasanpalsaniya",
      "id": 5129076,
      "node_id": "MDQ6VXNlcjUxMjkwNzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5129076?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sadikhasanpalsaniya",
      "html_url": "https://github.com/sadikhasanpalsaniya",
      "followers_url": "https://api.github.com/users/sadikhasanpalsaniya/followers",
      "following_url": "https://api.github.com/users/sadikhasanpalsaniya/following{/other_user}",
      "gists_url": "https://api.github.com/users/sadikhasanpalsaniya/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sadikhasanpalsaniya/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sadikhasanpalsaniya/subscriptions",
      "organizations_url": "https://api.github.com/users/sadikhasanpalsaniya/orgs",
      "repos_url": "https://api.github.com/users/sadikhasanpalsaniya/repos",
      "events_url": "https://api.github.com/users/sadikhasanpalsaniya/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sadikhasanpalsaniya/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-08-31T09:06:13Z",
    "updated_at": "2018-09-09T01:29:59Z",
    "closed_at": "2018-08-31T16:27:01Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In express js I want to post array form field but it converted to string.\r\n\r\nExample : HTML Form\r\n```html\r\n<form>\r\n  <input name=\"mobile\" value=\"99999999999\" />\r\n  <input name=\"name[]\" value=\"apple\" />\r\n  <input name=\"name[]\" value=\"mango\" />\r\n</form>\r\n```\r\n**Server Side**\r\n\r\nI got\r\n```\r\n[{\r\n     mobile: \"99999999999\",\r\n    'name[0]': \"apple\",\r\n    'name[1]': \"mango\"\r\n}]\r\n```\r\nI want key name without single quote. This happen only for array fields only\r\n```\r\n[{\r\n    mobile: \"99999999999\",\r\n    name[0]: \"apple\",\r\n    name[1]: \"mango\"\r\n}]\r\n```\r\nWhen I write **request.body.name** then it return **undefined**\r\nAnyone can guide me how I can resolve it. I tried so much but not getting success.\r\n\r\nI also asked on stackoverflow but there is no any proper answer https://stackoverflow.com/q/52109599/2893413",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3734/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3734/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3733",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3733/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3733/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3733/events",
    "html_url": "https://github.com/expressjs/express/issues/3733",
    "id": 355819408,
    "node_id": "MDU6SXNzdWUzNTU4MTk0MDg=",
    "number": 3733,
    "title": "Files corrupted on disk backup",
    "user": {
      "login": "SridharRamasami",
      "id": 34117222,
      "node_id": "MDQ6VXNlcjM0MTE3MjIy",
      "avatar_url": "https://avatars.githubusercontent.com/u/34117222?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SridharRamasami",
      "html_url": "https://github.com/SridharRamasami",
      "followers_url": "https://api.github.com/users/SridharRamasami/followers",
      "following_url": "https://api.github.com/users/SridharRamasami/following{/other_user}",
      "gists_url": "https://api.github.com/users/SridharRamasami/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SridharRamasami/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SridharRamasami/subscriptions",
      "organizations_url": "https://api.github.com/users/SridharRamasami/orgs",
      "repos_url": "https://api.github.com/users/SridharRamasami/repos",
      "events_url": "https://api.github.com/users/SridharRamasami/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SridharRamasami/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-08-31T02:40:47Z",
    "updated_at": "2018-08-31T04:55:28Z",
    "closed_at": "2018-08-31T04:54:48Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\r\nI have a system thats running a webserver (nodejs+express).  To make a disk backup, I shut down the webserver and then do a dd.  However, when I restore the resulting image on to a new SD card, the main server files are corrupted (they have log files written at the very top of the file)\r\n\r\nAnyone else with this problem?  Any hints, suggestion?\r\n\r\nThanks,",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3733/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3733/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3732",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3732/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3732/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3732/events",
    "html_url": "https://github.com/expressjs/express/pull/3732",
    "id": 355749956,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjEyMjA3OTEz",
    "number": 3732,
    "title": "Upgrading package.json",
    "user": {
      "login": "stenalpjolly",
      "id": 8219855,
      "node_id": "MDQ6VXNlcjgyMTk4NTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8219855?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stenalpjolly",
      "html_url": "https://github.com/stenalpjolly",
      "followers_url": "https://api.github.com/users/stenalpjolly/followers",
      "following_url": "https://api.github.com/users/stenalpjolly/following{/other_user}",
      "gists_url": "https://api.github.com/users/stenalpjolly/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stenalpjolly/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stenalpjolly/subscriptions",
      "organizations_url": "https://api.github.com/users/stenalpjolly/orgs",
      "repos_url": "https://api.github.com/users/stenalpjolly/repos",
      "events_url": "https://api.github.com/users/stenalpjolly/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stenalpjolly/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-08-30T20:53:47Z",
    "updated_at": "2018-08-30T20:59:48Z",
    "closed_at": "2018-08-30T20:54:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3732",
      "html_url": "https://github.com/expressjs/express/pull/3732",
      "diff_url": "https://github.com/expressjs/express/pull/3732.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3732.patch",
      "merged_at": null
    },
    "body": "With reference to fix: remove ReDoS regexp(https://github.com/visionmedia/debug/pull/504)",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3732/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3732/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3731",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3731/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3731/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3731/events",
    "html_url": "https://github.com/expressjs/express/issues/3731",
    "id": 355633671,
    "node_id": "MDU6SXNzdWUzNTU2MzM2NzE=",
    "number": 3731,
    "title": "Express crashes on named capture groups in regexes",
    "user": {
      "login": "einarmagnus",
      "id": 15872,
      "node_id": "MDQ6VXNlcjE1ODcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/15872?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/einarmagnus",
      "html_url": "https://github.com/einarmagnus",
      "followers_url": "https://api.github.com/users/einarmagnus/followers",
      "following_url": "https://api.github.com/users/einarmagnus/following{/other_user}",
      "gists_url": "https://api.github.com/users/einarmagnus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/einarmagnus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/einarmagnus/subscriptions",
      "organizations_url": "https://api.github.com/users/einarmagnus/orgs",
      "repos_url": "https://api.github.com/users/einarmagnus/repos",
      "events_url": "https://api.github.com/users/einarmagnus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/einarmagnus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-08-30T15:18:38Z",
    "updated_at": "2018-08-30T15:42:39Z",
    "closed_at": "2018-08-30T15:41:11Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I wanted to use regexes to discriminate between different paths and thought I'd use the new names capture group feature hoping that I'd get something similar to naming segments in a path.\r\n\r\nBasically I wanted something like this:\r\n```javascript\r\nconst express = require(\"express\");\r\nconst app = express();\r\n\r\napp\r\n    .get(\"/:number(\\\\d+)\", (rq, rs) => rs.send(\"number: \" + JSON.stringify(rq.params)))\r\n    .get(\"/:word(\\\\w+)\", (rq, rs) => rs.send(\"word: \" + JSON.stringify(rq.params)))\r\n\r\napp.listen(3000);\r\n```\r\n```\r\nGET /34\r\nnumber: {\"number\":\"34\"}\r\n```\r\n```\r\nGET /thirtyfour\r\nword: {\"word\":\"thirtyfour\"}\r\n```\r\n\r\nBut I wanted a more complex regex that I couldn't express with the simplified expressions allowed in string paths, so I tried this:\r\n\r\n```javascript\r\napp\r\n    .get(/^\\/(\\d+)$/, (rq, rs) => rs.send(\"number: \" + JSON.stringify(rq.params)))\r\n    .get(/^\\/(\\w+)$/, (rq, rs) => rs.send(\"word: \" + JSON.stringify(rq.params)))\r\n```\r\nwhich mostly works except now my params are not named:\r\n```\r\nGET /34\r\nnumber: {\"0\":\"34\"}\r\n```\r\n```\r\nGET /thirtyfour\r\nword: {\"0\":\"thirtyfour\"}\r\n```\r\nI wanted them named so I thought I'd use named capturing groups to name them, but that crashes express:\r\n```javascript\r\napp\r\n    .get(/^\\/(?<number>\\d+)$/, (rq, rs) => rs.send(\"number: \" + JSON.stringify(rq.params)))\r\n    .get(/^\\/(?<word>\\w+)$/, (rq, rs) => rs.send(\"word: \" + JSON.stringify(rq.params)))\r\n```\r\n```\r\nGET /34\r\n\r\n\r\nTypeError: Cannot read property 'name' of undefined\r\n    at Layer.match (/Users/einbos01/src/teaching/server/node_modules/express/lib/router/layer.js:147:20)\r\n    at matchLayer (/Users/einbos01/src/teaching/server/node_modules/express/lib/router/index.js:574:18)\r\n    at next (/Users/einbos01/src/teaching/server/node_modules/express/lib/router/index.js:220:15)\r\n    at expressInit (/Users/einbos01/src/teaching/server/node_modules/express/lib/middleware/init.js:40:5)\r\n    at Layer.handle [as handle_request] (/Users/einbos01/src/teaching/server/node_modules/express/lib/router/layer.js:95:5)\r\n    at trim_prefix (/Users/einbos01/src/teaching/server/node_modules/express/lib/router/index.js:317:13)\r\n    at /Users/einbos01/src/teaching/server/node_modules/express/lib/router/index.js:284:7\r\n    at Function.process_params (/Users/einbos01/src/teaching/server/node_modules/express/lib/router/index.js:335:12)\r\n    at next (/Users/einbos01/src/teaching/server/node_modules/express/lib/router/index.js:275:10)\r\n    at query (/Users/einbos01/src/teaching/server/node_modules/express/lib/middleware/query.js:45:5)\r\n\r\n```\r\nMy version of node handles them without problems but the logic in express chokes on them somehow and somewhy.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3731/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3731/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3730",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3730/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3730/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3730/events",
    "html_url": "https://github.com/expressjs/express/pull/3730",
    "id": 354712640,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjExNDA3ODYx",
    "number": 3730,
    "title": "Support http/2.",
    "user": {
      "login": "sogaani",
      "id": 20137651,
      "node_id": "MDQ6VXNlcjIwMTM3NjUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/20137651?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sogaani",
      "html_url": "https://github.com/sogaani",
      "followers_url": "https://api.github.com/users/sogaani/followers",
      "following_url": "https://api.github.com/users/sogaani/following{/other_user}",
      "gists_url": "https://api.github.com/users/sogaani/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sogaani/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sogaani/subscriptions",
      "organizations_url": "https://api.github.com/users/sogaani/orgs",
      "repos_url": "https://api.github.com/users/sogaani/repos",
      "events_url": "https://api.github.com/users/sogaani/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sogaani/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 98481977,
        "node_id": "MDU6TGFiZWw5ODQ4MTk3Nw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 553390440,
        "node_id": "MDU6TGFiZWw1NTMzOTA0NDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/needs%20rebase",
        "name": "needs rebase",
        "color": "e11d21",
        "default": false,
        "description": null
      },
      {
        "id": 1504452746,
        "node_id": "MDU6TGFiZWwxNTA0NDUyNzQ2",
        "url": "https://api.github.com/repos/expressjs/express/labels/top%20priority",
        "name": "top priority",
        "color": "1af221",
        "default": false,
        "description": "Issues which the TC deem our current highest priorities for the project"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 56,
    "created_at": "2018-08-28T12:39:55Z",
    "updated_at": "2023-05-20T11:14:07Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3730",
      "html_url": "https://github.com/expressjs/express/pull/3730",
      "diff_url": "https://github.com/expressjs/express/pull/3730.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3730.patch",
      "merged_at": null
    },
    "body": "This PR is rebased and added tests from https://github.com/expressjs/express/pull/3390\r\nWe need to disable some tests on http/2, as some node module have issue with http/2. PR pending on resolution of the following issues:\r\n\r\n- [ ] `// cookies with http2 has an issue` https://github.com/pillarjs/cookies/pull/99\r\n- [ ] `// vhost with http2 has an issue` https://github.com/expressjs/vhost/pull/29\r\n- [x] ~~`// HEAD with http2 does not support response body`~~\r\n       response.sendFile has an issu. See also https://github.com/expressjs/express/pull/3730#issuecomment-419728593\r\n       fixed by commit https://github.com/expressjs/express/pull/3730/commits/2a78f4cb36ff63a18f1264ce1a0848c9bfedbf2b\r\n- [x] supertest http2 support (supertest removed in https://github.com/visionmedia/superagent/commit/b08371c72fbdca40dda3ad39fe8bbbee4a2718d5)\r\n       Fixed by https://github.com/visionmedia/superagent/pull/1414\r\n       Currently this PR does not depend on above issue, but this PR and the superagent PR have deplicate codes. We can delete those code after landing PRs.\r\n- [x] http2ServerRequest.socket.destroy() has a bug (filed an issue ihttps://github.com/nodejs/node/issues/22855)\r\n       Fixed in https://github.com/nodejs/node/pull/22896\r\n       Maybe land on node 10.12.0",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3730/reactions",
      "total_count": 66,
      "+1": 66,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3730/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3729",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3729/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3729/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3729/events",
    "html_url": "https://github.com/expressjs/express/issues/3729",
    "id": 354565690,
    "node_id": "MDU6SXNzdWUzNTQ1NjU2OTA=",
    "number": 3729,
    "title": "ures or photos",
    "user": {
      "login": "amerej",
      "id": 19491145,
      "node_id": "MDQ6VXNlcjE5NDkxMTQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/19491145?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amerej",
      "html_url": "https://github.com/amerej",
      "followers_url": "https://api.github.com/users/amerej/followers",
      "following_url": "https://api.github.com/users/amerej/following{/other_user}",
      "gists_url": "https://api.github.com/users/amerej/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amerej/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amerej/subscriptions",
      "organizations_url": "https://api.github.com/users/amerej/orgs",
      "repos_url": "https://api.github.com/users/amerej/repos",
      "events_url": "https://api.github.com/users/amerej/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amerej/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-08-28T04:21:14Z",
    "updated_at": "2018-08-28T04:21:58Z",
    "closed_at": "2018-08-28T04:21:58Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3729/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3729/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3728",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3728/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3728/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3728/events",
    "html_url": "https://github.com/expressjs/express/issues/3728",
    "id": 353531678,
    "node_id": "MDU6SXNzdWUzNTM1MzE2Nzg=",
    "number": 3728,
    "title": "parseurl package.json: Unexpected end of JSON input",
    "user": {
      "login": "kmccmk9",
      "id": 678335,
      "node_id": "MDQ6VXNlcjY3ODMzNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/678335?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kmccmk9",
      "html_url": "https://github.com/kmccmk9",
      "followers_url": "https://api.github.com/users/kmccmk9/followers",
      "following_url": "https://api.github.com/users/kmccmk9/following{/other_user}",
      "gists_url": "https://api.github.com/users/kmccmk9/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kmccmk9/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kmccmk9/subscriptions",
      "organizations_url": "https://api.github.com/users/kmccmk9/orgs",
      "repos_url": "https://api.github.com/users/kmccmk9/repos",
      "events_url": "https://api.github.com/users/kmccmk9/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kmccmk9/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-08-23T20:00:10Z",
    "updated_at": "2018-08-23T20:10:09Z",
    "closed_at": "2018-08-23T20:09:51Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello,\r\n\r\nI seem to have run into an error that prevents my Node.JS App from running. It seems as though at some point during express' initialization, it uses the parseurl node module. The parse url node module's package.json is causing an \"Unexpected end of JSON input\". This could be a problem with the parseurl package or something trying to initialize the parseurl package. You can see full stack trace below and my dependencies section of my package.json.\r\n\r\n**Node.JS Version:** 8.9.0\r\n\r\n**Dependencies:**\r\n```\r\n\"dependencies\": {\r\n    \"atlassian-connect-express\": \"^3.0.2\",\r\n    \"axios\": \"^0.18.0\",\r\n    \"body-parser\": \"^1.18.3\",\r\n    \"bootstrap-vue\": \"^2.0.0-rc.11\",\r\n    \"connect-history-api-fallback\": \"^1.5.0\",\r\n    \"cookie-parser\": \"^1.4.3\",\r\n    \"cors\": \"^2.8.4\",\r\n    \"express\": \"^4.16.3\",\r\n    \"helmet\": \"^3.13.0\",\r\n    \"mermaid\": \"^8.0.0-rc.8\",\r\n    \"mongoose\": \"^5.2.7\",\r\n    \"mongoose-vermongo\": \"0.0.4\",\r\n    \"ncp\": \"^2.0.0\",\r\n    \"sqlite3\": \"^4.0.2\",\r\n    \"vue\": \"^2.5.17\",\r\n    \"vue-router\": \"^3.0.1\"\r\n  }\r\n```\r\n\r\n**Stack:**\r\n```\r\nApplication has thrown an uncaught exception and is terminated:\r\n\r\nSyntaxError: Error parsing D:\\home\\site\\wwwroot\\node_modules\\express\\node_modules\\parseurl\\package.json: Unexpected end of JSON input\r\n\r\n    at JSON.parse (<anonymous>)\r\n\r\n    at readPackage (module.js:120:52)\r\n\r\n    at tryPackage (module.js:130:13)\r\n\r\n    at Function.Module._findPath (module.js:212:20)\r\n\r\n    at Function.Module._resolveFilename (module.js:536:25)\r\n\r\n    at Function.Module._load (module.js:468:25)\r\n\r\n    at Module.require (module.js:587:17)\r\n\r\n    at require (internal/module.js:11:18)\r\n\r\n    at Object.<anonymous> (D:\\home\\site\\wwwroot\\node_modules\\express\\lib\\router\\index.js:23:16)\r\n\r\n    at Module._compile (module.js:643:30)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3728/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3728/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3727",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3727/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3727/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3727/events",
    "html_url": "https://github.com/expressjs/express/issues/3727",
    "id": 353352394,
    "node_id": "MDU6SXNzdWUzNTMzNTIzOTQ=",
    "number": 3727,
    "title": "If I have three or a lot routes, all use :id to match, how to judge the rendering specified page. What if there is a root page",
    "user": {
      "login": "Weipengzhou",
      "id": 13349980,
      "node_id": "MDQ6VXNlcjEzMzQ5OTgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/13349980?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Weipengzhou",
      "html_url": "https://github.com/Weipengzhou",
      "followers_url": "https://api.github.com/users/Weipengzhou/followers",
      "following_url": "https://api.github.com/users/Weipengzhou/following{/other_user}",
      "gists_url": "https://api.github.com/users/Weipengzhou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Weipengzhou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Weipengzhou/subscriptions",
      "organizations_url": "https://api.github.com/users/Weipengzhou/orgs",
      "repos_url": "https://api.github.com/users/Weipengzhou/repos",
      "events_url": "https://api.github.com/users/Weipengzhou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Weipengzhou/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2018-08-23T12:10:21Z",
    "updated_at": "2018-08-24T03:04:13Z",
    "closed_at": "2018-08-24T02:55:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "If I have three or a lot routes, all use :id to match, how to judge the rendering specified page. What if there is a root page.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3727/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3727/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3726",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3726/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3726/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3726/events",
    "html_url": "https://github.com/expressjs/express/issues/3726",
    "id": 353254930,
    "node_id": "MDU6SXNzdWUzNTMyNTQ5MzA=",
    "number": 3726,
    "title": "Replace route at runtime",
    "user": {
      "login": "beneiltis",
      "id": 1519429,
      "node_id": "MDQ6VXNlcjE1MTk0Mjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1519429?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beneiltis",
      "html_url": "https://github.com/beneiltis",
      "followers_url": "https://api.github.com/users/beneiltis/followers",
      "following_url": "https://api.github.com/users/beneiltis/following{/other_user}",
      "gists_url": "https://api.github.com/users/beneiltis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beneiltis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beneiltis/subscriptions",
      "organizations_url": "https://api.github.com/users/beneiltis/orgs",
      "repos_url": "https://api.github.com/users/beneiltis/repos",
      "events_url": "https://api.github.com/users/beneiltis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beneiltis/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2018-08-23T07:21:39Z",
    "updated_at": "2018-10-28T15:02:23Z",
    "closed_at": "2018-10-28T15:02:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hey all,\r\n\r\nis there any way to replace a route at runtime? I am changing the code inside the route but if I add it again it won't use the new code. \r\nIt would be very convenient to reload a specific route without restarting the whole application.\r\n\r\nWhat is the recommended way to do this?\r\n\r\nThanks in advance.\r\n\r\nCheers\r\nBene",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3726/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3726/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3725",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3725/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3725/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3725/events",
    "html_url": "https://github.com/expressjs/express/pull/3725",
    "id": 353181019,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjEwMzA0NzMz",
    "number": 3725,
    "title": "merge update",
    "user": {
      "login": "zzl81cn",
      "id": 6045659,
      "node_id": "MDQ6VXNlcjYwNDU2NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6045659?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zzl81cn",
      "html_url": "https://github.com/zzl81cn",
      "followers_url": "https://api.github.com/users/zzl81cn/followers",
      "following_url": "https://api.github.com/users/zzl81cn/following{/other_user}",
      "gists_url": "https://api.github.com/users/zzl81cn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zzl81cn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zzl81cn/subscriptions",
      "organizations_url": "https://api.github.com/users/zzl81cn/orgs",
      "repos_url": "https://api.github.com/users/zzl81cn/repos",
      "events_url": "https://api.github.com/users/zzl81cn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zzl81cn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-08-23T01:12:20Z",
    "updated_at": "2018-08-23T17:00:36Z",
    "closed_at": "2018-08-23T17:00:36Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3725",
      "html_url": "https://github.com/expressjs/express/pull/3725",
      "diff_url": "https://github.com/expressjs/express/pull/3725.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3725.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3725/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3725/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3724",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3724/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3724/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3724/events",
    "html_url": "https://github.com/expressjs/express/issues/3724",
    "id": 352977589,
    "node_id": "MDU6SXNzdWUzNTI5Nzc1ODk=",
    "number": 3724,
    "title": "Trying to return a middleware to make routing token based changes to the routing config",
    "user": {
      "login": "sp90",
      "id": 3041602,
      "node_id": "MDQ6VXNlcjMwNDE2MDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3041602?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sp90",
      "html_url": "https://github.com/sp90",
      "followers_url": "https://api.github.com/users/sp90/followers",
      "following_url": "https://api.github.com/users/sp90/following{/other_user}",
      "gists_url": "https://api.github.com/users/sp90/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sp90/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sp90/subscriptions",
      "organizations_url": "https://api.github.com/users/sp90/orgs",
      "repos_url": "https://api.github.com/users/sp90/repos",
      "events_url": "https://api.github.com/users/sp90/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sp90/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-08-22T14:24:35Z",
    "updated_at": "2018-08-23T23:16:54Z",
    "closed_at": "2018-08-22T14:28:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi, \r\n\r\nSo I'm trying to do something like below, is that even possible and what am i doing wrong?\r\n\r\n![screen shot 2018-08-22 at 16 22 43](https://user-images.githubusercontent.com/3041602/44469433-c55de300-a627-11e8-9ec1-b79ddabd6c94.png)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3724/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3724/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3723",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3723/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3723/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3723/events",
    "html_url": "https://github.com/expressjs/express/issues/3723",
    "id": 352706307,
    "node_id": "MDU6SXNzdWUzNTI3MDYzMDc=",
    "number": 3723,
    "title": "Static files",
    "user": {
      "login": "PiyushVB7",
      "id": 26825634,
      "node_id": "MDQ6VXNlcjI2ODI1NjM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/26825634?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PiyushVB7",
      "html_url": "https://github.com/PiyushVB7",
      "followers_url": "https://api.github.com/users/PiyushVB7/followers",
      "following_url": "https://api.github.com/users/PiyushVB7/following{/other_user}",
      "gists_url": "https://api.github.com/users/PiyushVB7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PiyushVB7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PiyushVB7/subscriptions",
      "organizations_url": "https://api.github.com/users/PiyushVB7/orgs",
      "repos_url": "https://api.github.com/users/PiyushVB7/repos",
      "events_url": "https://api.github.com/users/PiyushVB7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PiyushVB7/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-08-21T20:54:23Z",
    "updated_at": "2018-08-21T21:02:55Z",
    "closed_at": "2018-08-21T21:02:55Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "How can I use same static dir for all other directory",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3723/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3723/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3722",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3722/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3722/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3722/events",
    "html_url": "https://github.com/expressjs/express/pull/3722",
    "id": 352452696,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjA5NzU4NzMy",
    "number": 3722,
    "title": "updated routing path",
    "user": {
      "login": "nitinbhola27",
      "id": 30955423,
      "node_id": "MDQ6VXNlcjMwOTU1NDIz",
      "avatar_url": "https://avatars.githubusercontent.com/u/30955423?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nitinbhola27",
      "html_url": "https://github.com/nitinbhola27",
      "followers_url": "https://api.github.com/users/nitinbhola27/followers",
      "following_url": "https://api.github.com/users/nitinbhola27/following{/other_user}",
      "gists_url": "https://api.github.com/users/nitinbhola27/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nitinbhola27/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nitinbhola27/subscriptions",
      "organizations_url": "https://api.github.com/users/nitinbhola27/orgs",
      "repos_url": "https://api.github.com/users/nitinbhola27/repos",
      "events_url": "https://api.github.com/users/nitinbhola27/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nitinbhola27/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-08-21T09:15:20Z",
    "updated_at": "2018-09-18T00:15:29Z",
    "closed_at": "2018-09-13T22:19:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3722",
      "html_url": "https://github.com/expressjs/express/pull/3722",
      "diff_url": "https://github.com/expressjs/express/pull/3722.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3722.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3722/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3722/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3720",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3720/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3720/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3720/events",
    "html_url": "https://github.com/expressjs/express/issues/3720",
    "id": 351767962,
    "node_id": "MDU6SXNzdWUzNTE3Njc5NjI=",
    "number": 3720,
    "title": "Attempting to simply return an array in Express but always returning [] empty ",
    "user": {
      "login": "treeternity",
      "id": 37818908,
      "node_id": "MDQ6VXNlcjM3ODE4OTA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/37818908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/treeternity",
      "html_url": "https://github.com/treeternity",
      "followers_url": "https://api.github.com/users/treeternity/followers",
      "following_url": "https://api.github.com/users/treeternity/following{/other_user}",
      "gists_url": "https://api.github.com/users/treeternity/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/treeternity/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/treeternity/subscriptions",
      "organizations_url": "https://api.github.com/users/treeternity/orgs",
      "repos_url": "https://api.github.com/users/treeternity/repos",
      "events_url": "https://api.github.com/users/treeternity/events{/privacy}",
      "received_events_url": "https://api.github.com/users/treeternity/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-08-17T23:36:04Z",
    "updated_at": "2018-08-20T18:14:21Z",
    "closed_at": "2018-08-20T18:14:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi there, I am attempting to return \"checkins_each\" but it is returning a blank list [] every attempt at displaying it.  I think the checkins.list() is running in a new thread or something same with checkins.get() - is there a proper way to return checkins_each - it should have a few records in it?\r\n\r\n```\r\n// return data\r\n    var checkins = nano.use(settings.COUCHDB_PREFIX+'checkins');\r\n    var checkins_each = [];\r\n    checkins.list(function(err, body) {\r\n        if (!err) {\r\n            console.log('hi proximity loop')\r\n            body.rows.forEach(function(doc) {\r\n                console.log(doc.id);\r\n                checkins.get(doc.id, function(err,jsondoc) {\r\n                    console.log(JSON.stringify(jsondoc));\r\n                    if (jsondoc.profile_id != profile_id) {\r\n                        console.log('appending checkin');\r\n                        checkins_each.push(jsondoc);\r\n                    }\r\n                        \r\n                });\r\n            });\r\n            res.send({status: 'proximity', checkins: checkins_each});\r\n        } else {\r\n            console.log(\"error\", err);\r\n            res.send({status: 'fail', error: err});\r\n            \r\n        }\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3720/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3720/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3719",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3719/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3719/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3719/events",
    "html_url": "https://github.com/expressjs/express/issues/3719",
    "id": 350932994,
    "node_id": "MDU6SXNzdWUzNTA5MzI5OTQ=",
    "number": 3719,
    "title": "global vars lost when using import against require",
    "user": {
      "login": "arash-hacker",
      "id": 6451804,
      "node_id": "MDQ6VXNlcjY0NTE4MDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6451804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arash-hacker",
      "html_url": "https://github.com/arash-hacker",
      "followers_url": "https://api.github.com/users/arash-hacker/followers",
      "following_url": "https://api.github.com/users/arash-hacker/following{/other_user}",
      "gists_url": "https://api.github.com/users/arash-hacker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arash-hacker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arash-hacker/subscriptions",
      "organizations_url": "https://api.github.com/users/arash-hacker/orgs",
      "repos_url": "https://api.github.com/users/arash-hacker/repos",
      "events_url": "https://api.github.com/users/arash-hacker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arash-hacker/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2018-08-15T19:21:44Z",
    "updated_at": "2018-08-16T00:29:14Z",
    "closed_at": "2018-08-15T22:20:45Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "hi\r\nit's so weird when i using this code.  \r\n```\r\nimport router from './api/route';\r\n//var router=require('./api/route').default\r\n```\r\nwhen importing router my globals vars inside modules are undefined .  \r\nbut when using require it's ok !!! .   \r\n![screen shot - - at](https://user-images.githubusercontent.com/6451804/44168267-f0a37800-a0e5-11e8-972a-a0a5a21b9cb8.png)\r\n\r\nthe  'undefined' output is relate to import .  \r\nand when change to require it's ok !!!\r\nmy package.json .  \r\n```\r\n \"start\": \"nodemon ./src/index.js --exec babel-node --presets es2015\",\r\n\"express\": \"^4.16.3\",\r\n \"babel-cli\": \"^6.26.0\",\r\n \"babel-preset-es2015\": \"^6.24.1\",\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3719/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3719/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3718",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3718/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3718/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3718/events",
    "html_url": "https://github.com/expressjs/express/pull/3718",
    "id": 350656363,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjA4NDUzMzg1",
    "number": 3718,
    "title": "Update index.js",
    "user": {
      "login": "loganripplinger",
      "id": 31484824,
      "node_id": "MDQ6VXNlcjMxNDg0ODI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/31484824?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/loganripplinger",
      "html_url": "https://github.com/loganripplinger",
      "followers_url": "https://api.github.com/users/loganripplinger/followers",
      "following_url": "https://api.github.com/users/loganripplinger/following{/other_user}",
      "gists_url": "https://api.github.com/users/loganripplinger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/loganripplinger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/loganripplinger/subscriptions",
      "organizations_url": "https://api.github.com/users/loganripplinger/orgs",
      "repos_url": "https://api.github.com/users/loganripplinger/repos",
      "events_url": "https://api.github.com/users/loganripplinger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/loganripplinger/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-08-15T01:41:30Z",
    "updated_at": "2018-09-13T22:34:18Z",
    "closed_at": "2018-09-13T22:34:18Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3718",
      "html_url": "https://github.com/expressjs/express/pull/3718",
      "diff_url": "https://github.com/expressjs/express/pull/3718.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3718.patch",
      "merged_at": "2018-09-13T22:34:18Z"
    },
    "body": "Correct spelling error.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3718/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3718/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3717",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3717/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3717/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3717/events",
    "html_url": "https://github.com/expressjs/express/issues/3717",
    "id": 350576297,
    "node_id": "MDU6SXNzdWUzNTA1NzYyOTc=",
    "number": 3717,
    "title": "Error when using in a Vue project.  Webpack related?",
    "user": {
      "login": "gilfuser",
      "id": 9404458,
      "node_id": "MDQ6VXNlcjk0MDQ0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9404458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gilfuser",
      "html_url": "https://github.com/gilfuser",
      "followers_url": "https://api.github.com/users/gilfuser/followers",
      "following_url": "https://api.github.com/users/gilfuser/following{/other_user}",
      "gists_url": "https://api.github.com/users/gilfuser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gilfuser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gilfuser/subscriptions",
      "organizations_url": "https://api.github.com/users/gilfuser/orgs",
      "repos_url": "https://api.github.com/users/gilfuser/repos",
      "events_url": "https://api.github.com/users/gilfuser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gilfuser/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-08-14T20:00:31Z",
    "updated_at": "2018-08-14T20:05:15Z",
    "closed_at": "2018-08-14T20:05:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi.\r\nI'm facing a problem whenever I simply `const express = require('express')` in the main.js file inside a fresh made vue project configured through the vue cli, with webpack included. So, I'm not sure if I should report this issue here or there. Please excuse me if this shouldn't belong here.\r\nFirefox and Chrome give me different errors, both pointing to express.\r\nHere is the Chrome error:\r\n```\r\nresponse.js?7b38:42 Uncaught TypeError: Cannot read property 'prototype' of undefined\r\n    at eval (response.js?7b38:42)\r\n    at Object../node_modules/express/lib/response.js (app.js:3643)\r\n    at __webpack_require__ (app.js:768)\r\n    at fn (app.js:131)\r\n    at eval (express.js?28ec:22)\r\n    at Object../node_modules/express/lib/express.js (app.js:3595)\r\n    at __webpack_require__ (app.js:768)\r\n    at fn (app.js:131)\r\n    at eval (index.js?b97d:11)\r\n    at Object../node_modules/express/index.js (app.js:3560)\r\n```\r\nand here is the Firefox error:\r\n```\r\nTypeError: http.ServerResponse is undefined[Weitere Informationen] app.js line 3643 > eval:42:5\r\n<anonym>\r\nresponse.js:42\r\n./node_modules/express/lib/response.js\r\nhttp://localhost:8080/app.js:3643:1\r\n__webpack_require__\r\nhttp://localhost:8080/app.js:768:12\r\nfn\r\nhttp://localhost:8080/app.js:131:20\r\n<anonym>\r\nexpress.js:22\r\n./node_modules/express/lib/express.js\r\nhttp://localhost:8080/app.js:3595:1\r\n__webpack_require__\r\nhttp://localhost:8080/app.js:768:12\r\nfn\r\nhttp://localhost:8080/app.js:131:20\r\n<anonym>\r\nindex.js:11\r\n./node_modules/express/index.js\r\nhttp://localhost:8080/app.js:3560:1\r\n__webpack_require__\r\nhttp://localhost:8080/app.js:768:12\r\nfn\r\nhttp://localhost:8080/app.js:131:20\r\n<anonym>\r\nmain.js:8\r\n./src/main.js\r\nhttp://localhost:8080/app.js:6043:1\r\n__webpack_require__\r\nhttp://localhost:8080/app.js:768:12\r\nfn\r\nhttp://localhost:8080/app.js:131:20\r\n0\r\nhttp://localhost:8080/app.js:6128:18\r\n__webpack_require__\r\nhttp://localhost:8080/app.js:768:12\r\n<anonym>\r\nhttp://localhost:8080/app.js:904:18\r\n<anonym>\r\nhttp://localhost:8080/app.js:1:11\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3717/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3717/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3716",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3716/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3716/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3716/events",
    "html_url": "https://github.com/expressjs/express/issues/3716",
    "id": 350322584,
    "node_id": "MDU6SXNzdWUzNTAzMjI1ODQ=",
    "number": 3716,
    "title": "Request to add express middleware",
    "user": {
      "login": "ameerthehacker",
      "id": 15448192,
      "node_id": "MDQ6VXNlcjE1NDQ4MTky",
      "avatar_url": "https://avatars.githubusercontent.com/u/15448192?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ameerthehacker",
      "html_url": "https://github.com/ameerthehacker",
      "followers_url": "https://api.github.com/users/ameerthehacker/followers",
      "following_url": "https://api.github.com/users/ameerthehacker/following{/other_user}",
      "gists_url": "https://api.github.com/users/ameerthehacker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ameerthehacker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ameerthehacker/subscriptions",
      "organizations_url": "https://api.github.com/users/ameerthehacker/orgs",
      "repos_url": "https://api.github.com/users/ameerthehacker/repos",
      "events_url": "https://api.github.com/users/ameerthehacker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ameerthehacker/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2018-08-14T08:08:01Z",
    "updated_at": "2018-09-08T00:08:30Z",
    "closed_at": "2018-09-08T00:08:30Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have developed a middleware for express which would remove all unused css styles from the template before rendering which would greatly increase the performance of websites written in express.\r\n\r\nI  would love to add this to expressjs organization and maintain it. By that way I would love to join your team.\r\n\r\nhttps://github.com/ameerthehacker/express-slick-css",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3716/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3716/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3715",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3715/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3715/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3715/events",
    "html_url": "https://github.com/expressjs/express/issues/3715",
    "id": 350101782,
    "node_id": "MDU6SXNzdWUzNTAxMDE3ODI=",
    "number": 3715,
    "title": "error handler doesn't work if I remove next parameter",
    "user": {
      "login": "frederikhors",
      "id": 41120635,
      "node_id": "MDQ6VXNlcjQxMTIwNjM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/41120635?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frederikhors",
      "html_url": "https://github.com/frederikhors",
      "followers_url": "https://api.github.com/users/frederikhors/followers",
      "following_url": "https://api.github.com/users/frederikhors/following{/other_user}",
      "gists_url": "https://api.github.com/users/frederikhors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frederikhors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frederikhors/subscriptions",
      "organizations_url": "https://api.github.com/users/frederikhors/orgs",
      "repos_url": "https://api.github.com/users/frederikhors/repos",
      "events_url": "https://api.github.com/users/frederikhors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frederikhors/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2018-08-13T16:27:45Z",
    "updated_at": "2018-08-14T23:18:24Z",
    "closed_at": "2018-08-13T16:40:11Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm learning `Express.js` and using the generator I generated a new app with:\r\n\r\n```js\r\nnpm install express-generator -g && express myapp\r\n```\r\n\r\nAfter that I saw in `app.js` that there is this code:\r\n\r\n```js\r\n    // catch 404 and forward to error handler\r\n    app.use(function(req, res, next) {\r\n      next(createError(404));\r\n    });\r\n    \r\n    // error handler\r\n    app.use(function(err, req, res, next) {\r\n      // set locals, only providing error in development\r\n      res.locals.message = err.message;\r\n      res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\r\n    \r\n      // render the error page\r\n      res.status(err.status || 500);\r\n      res.render(\"error\");\r\n    });\r\n```\r\n\r\n[![enter image description here][1]][1]\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/gJBrW.png\r\n\r\nAs you can see in the image **`eslint` is complaining about `next` parameter**, declared and never used. I agree, but if I remove it `express` doesn't render the error page.\r\n\r\n**Why this behavior?**\r\n\r\nThis is dangerous for me because I can't trust anymore eslint or my coding degree? I'm surely missing something. **But what**?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3715/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3715/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3714",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3714/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3714/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3714/events",
    "html_url": "https://github.com/expressjs/express/pull/3714",
    "id": 349765723,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjA3NzkzNzQ2",
    "number": 3714,
    "title": "Move settings methods to app.settings and deprecate old versions",
    "user": {
      "login": "wesleytodd",
      "id": 1027776,
      "node_id": "MDQ6VXNlcjEwMjc3NzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1027776?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesleytodd",
      "html_url": "https://github.com/wesleytodd",
      "followers_url": "https://api.github.com/users/wesleytodd/followers",
      "following_url": "https://api.github.com/users/wesleytodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesleytodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesleytodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesleytodd/subscriptions",
      "organizations_url": "https://api.github.com/users/wesleytodd/orgs",
      "repos_url": "https://api.github.com/users/wesleytodd/repos",
      "events_url": "https://api.github.com/users/wesleytodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesleytodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-08-11T21:41:34Z",
    "updated_at": "2022-10-06T14:16:29Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3714",
      "html_url": "https://github.com/expressjs/express/pull/3714",
      "diff_url": "https://github.com/expressjs/express/pull/3714.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3714.patch",
      "merged_at": null
    },
    "body": "Started as a `5.x` PR, this is the deprecation version for the `4.x` branch.  See: #3218\r\n\r\nThe only thing I am worried about this this is that the `app.settings` object has changed.  It used to be a plain object, and is now an instance of `Settings`.  I think some purists would call that a breaking change.  The problem is that there is no way to provide the new functionality without changing that object.\r\n\r\nIf we had a faster major release cadence, we could deprecate in `5.0` (breaking direct `.settings` access) and remove in `6.0`.  But that might be YEARS, and speeding up majors is a different topic, one which I think we should do.  So IMO I think we have two options:\r\n\r\n1. Live with this as a breaking change in an undocumented api and release the deprecation warnings on the documented stuff\r\n2. Only do this in `5.0`.\r\n\r\nI am perfectly happy with either, but if I had a choice it would be 1 because it preps people who are using it for 5.0 and the churn on this api shouldn't be much and is worth it.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3714/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3714/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3713",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3713/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3713/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3713/events",
    "html_url": "https://github.com/expressjs/express/pull/3713",
    "id": 349730476,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjA3NzcyNTc3",
    "number": 3713,
    "title": "add prefix for routes",
    "user": {
      "login": "vforv",
      "id": 10942178,
      "node_id": "MDQ6VXNlcjEwOTQyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/10942178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vforv",
      "html_url": "https://github.com/vforv",
      "followers_url": "https://api.github.com/users/vforv/followers",
      "following_url": "https://api.github.com/users/vforv/following{/other_user}",
      "gists_url": "https://api.github.com/users/vforv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vforv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vforv/subscriptions",
      "organizations_url": "https://api.github.com/users/vforv/orgs",
      "repos_url": "https://api.github.com/users/vforv/repos",
      "events_url": "https://api.github.com/users/vforv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vforv/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 18291,
        "node_id": "MDU6TGFiZWwxODI5MQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1",
        "default": false,
        "description": null
      },
      {
        "id": 55587817,
        "node_id": "MDU6TGFiZWw1NTU4NzgxNw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/needs%20tests",
        "name": "needs tests",
        "color": "e11d21",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-08-11T12:23:48Z",
    "updated_at": "2018-08-11T14:54:40Z",
    "closed_at": "2018-08-11T13:43:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3713",
      "html_url": "https://github.com/expressjs/express/pull/3713",
      "diff_url": "https://github.com/expressjs/express/pull/3713.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3713.patch",
      "merged_at": null
    },
    "body": "Suggested solution for issue: https://github.com/expressjs/express/issues/3712",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3713/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3713/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3712",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3712/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3712/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3712/events",
    "html_url": "https://github.com/expressjs/express/issues/3712",
    "id": 349729471,
    "node_id": "MDU6SXNzdWUzNDk3Mjk0NzE=",
    "number": 3712,
    "title": "Prefix for router not showing in path",
    "user": {
      "login": "vforv",
      "id": 10942178,
      "node_id": "MDQ6VXNlcjEwOTQyMTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/10942178?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vforv",
      "html_url": "https://github.com/vforv",
      "followers_url": "https://api.github.com/users/vforv/followers",
      "following_url": "https://api.github.com/users/vforv/following{/other_user}",
      "gists_url": "https://api.github.com/users/vforv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vforv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vforv/subscriptions",
      "organizations_url": "https://api.github.com/users/vforv/orgs",
      "repos_url": "https://api.github.com/users/vforv/repos",
      "events_url": "https://api.github.com/users/vforv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vforv/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2018-08-11T12:04:27Z",
    "updated_at": "2018-08-11T14:55:20Z",
    "closed_at": "2018-08-11T13:42:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "So my router looks like this:\r\n\r\n```\r\nconst app = express();\r\napp.use('/login', router);\r\n\r\napp.listen(3000, () => {\r\n    app._router.stack.forEach((middleware: any) => {\r\n     console.log(middleware);\r\n    })\r\n})\r\n```\r\n\r\nwhen I console .log that middleware I get:\r\n\r\n```\r\nLayer {\r\n  handle:\r\n   { [Function: router]\r\n     params: {},\r\n     _params: [],\r\n     caseSensitive: undefined,\r\n     mergeParams: undefined,\r\n     strict: undefined,\r\n     stack: [ [Layer] ] },\r\n  name: 'router',\r\n  params: undefined,\r\n  path: undefined,\r\n  keys: [],\r\n  regexp:\r\n   { /^\\/login\\/?(?=\\/|$)/i fast_star: false, fast_slash: false },\r\n  route: undefined }\r\n```\r\n\r\nOnly part where I can see route path for the middleware is regexp but it is not easy to extract...\r\n\r\nIs there way I can get full route path from app?\r\nOr if there is some way to fix this?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3712/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3712/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3711",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3711/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3711/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3711/events",
    "html_url": "https://github.com/expressjs/express/issues/3711",
    "id": 349593073,
    "node_id": "MDU6SXNzdWUzNDk1OTMwNzM=",
    "number": 3711,
    "title": "Why doesn't the default error handler print in test environment?",
    "user": {
      "login": "acham1",
      "id": 13604807,
      "node_id": "MDQ6VXNlcjEzNjA0ODA3",
      "avatar_url": "https://avatars.githubusercontent.com/u/13604807?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/acham1",
      "html_url": "https://github.com/acham1",
      "followers_url": "https://api.github.com/users/acham1/followers",
      "following_url": "https://api.github.com/users/acham1/following{/other_user}",
      "gists_url": "https://api.github.com/users/acham1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/acham1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/acham1/subscriptions",
      "organizations_url": "https://api.github.com/users/acham1/orgs",
      "repos_url": "https://api.github.com/users/acham1/repos",
      "events_url": "https://api.github.com/users/acham1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/acham1/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-08-10T17:14:15Z",
    "updated_at": "2018-08-10T17:18:32Z",
    "closed_at": "2018-08-10T17:15:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "i.e. I'm just interested in learning the reasoning behind this conditional?\r\n\r\nhttps://github.com/expressjs/express/blob/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/lib/application.js#L628-L631\r\n\r\nThanks!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3711/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3711/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3710",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3710/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3710/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3710/events",
    "html_url": "https://github.com/expressjs/express/pull/3710",
    "id": 349250921,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjA3NDEyNDI1",
    "number": 3710,
    "title": "Add install size badge to README",
    "user": {
      "login": "styfle",
      "id": 229881,
      "node_id": "MDQ6VXNlcjIyOTg4MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/229881?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/styfle",
      "html_url": "https://github.com/styfle",
      "followers_url": "https://api.github.com/users/styfle/followers",
      "following_url": "https://api.github.com/users/styfle/following{/other_user}",
      "gists_url": "https://api.github.com/users/styfle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/styfle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/styfle/subscriptions",
      "organizations_url": "https://api.github.com/users/styfle/orgs",
      "repos_url": "https://api.github.com/users/styfle/repos",
      "events_url": "https://api.github.com/users/styfle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/styfle/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 21,
    "created_at": "2018-08-09T19:01:49Z",
    "updated_at": "2022-03-02T20:13:44Z",
    "closed_at": "2022-03-02T15:28:08Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3710",
      "html_url": "https://github.com/expressjs/express/pull/3710",
      "diff_url": "https://github.com/expressjs/express/pull/3710.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3710.patch",
      "merged_at": "2022-03-02T15:28:09Z"
    },
    "body": "This adds a new badge to the top of the `README.md` file to display the install size for `express` and it's dependencies.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3710/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3710/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3709",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3709/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3709/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3709/events",
    "html_url": "https://github.com/expressjs/express/issues/3709",
    "id": 349137161,
    "node_id": "MDU6SXNzdWUzNDkxMzcxNjE=",
    "number": 3709,
    "title": "Nodejs - acting as client to other services (windows authentication)",
    "user": {
      "login": "sagitsofan",
      "id": 1827994,
      "node_id": "MDQ6VXNlcjE4Mjc5OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1827994?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sagitsofan",
      "html_url": "https://github.com/sagitsofan",
      "followers_url": "https://api.github.com/users/sagitsofan/followers",
      "following_url": "https://api.github.com/users/sagitsofan/following{/other_user}",
      "gists_url": "https://api.github.com/users/sagitsofan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sagitsofan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sagitsofan/subscriptions",
      "organizations_url": "https://api.github.com/users/sagitsofan/orgs",
      "repos_url": "https://api.github.com/users/sagitsofan/repos",
      "events_url": "https://api.github.com/users/sagitsofan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sagitsofan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-08-09T13:51:48Z",
    "updated_at": "2018-08-09T16:35:19Z",
    "closed_at": "2018-08-09T16:35:19Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hey,\r\n\r\nNode.js Version: 6.11.3\r\nOS: Windows Server 12\r\nScope (install, code, runtime, meta, other?):\r\nModule (and version) (if relevant):\r\nI’m working a problem this week and looking for nodejs experience/insight. Problem:\r\n\r\nOur nodejs server running on prem on windows server 2016 has to make some rest calls to another on prem web service.\r\nThe other web service has windows authentication enabled through IIS.\r\nWe enabled windows authentication for our nodejs server but it still cannot communicate with the support service as it’s not passing through credentials (i.e., token info). Any REST request I make to the other on premise service is 401/unauthorized.\r\nSo we see if our server was not nodejs but asp, asp has an option on WebClient to UseDefaultCredentials which enables pass through of windows authentication info from client to server service; we do not see options for this in nodejs web requests. Any knowledge or guidance here? We see some statements about rolling your own NTLM support and some packages (e.g., passport, sspi) but they still seem to require reauthentication (i.e., instead of simply passing through credentials known similar to asp WebClient UseDefaultCredentials).\r\n\r\nAny thoughts? Thanks.\r\n\r\nReference from node js issue:\r\nhttps://github.com/nodejs/help/issues/1089",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3709/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3709/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3708",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3708/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3708/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3708/events",
    "html_url": "https://github.com/expressjs/express/pull/3708",
    "id": 348573750,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjA2ODkxNjUz",
    "number": 3708,
    "title": "Expose bodyParser.raw on express",
    "user": {
      "login": "amitzur",
      "id": 394320,
      "node_id": "MDQ6VXNlcjM5NDMyMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/394320?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitzur",
      "html_url": "https://github.com/amitzur",
      "followers_url": "https://api.github.com/users/amitzur/followers",
      "following_url": "https://api.github.com/users/amitzur/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitzur/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitzur/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitzur/subscriptions",
      "organizations_url": "https://api.github.com/users/amitzur/orgs",
      "repos_url": "https://api.github.com/users/amitzur/repos",
      "events_url": "https://api.github.com/users/amitzur/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitzur/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/17",
      "html_url": "https://github.com/expressjs/express/milestone/17",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/17/labels",
      "id": 3066819,
      "node_id": "MDk6TWlsZXN0b25lMzA2NjgxOQ==",
      "number": 17,
      "title": "4.17",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 15,
      "state": "closed",
      "created_at": "2018-01-26T16:25:16Z",
      "updated_at": "2019-05-17T01:58:27Z",
      "due_on": null,
      "closed_at": "2019-05-17T01:58:27Z"
    },
    "comments": 3,
    "created_at": "2018-08-08T04:47:54Z",
    "updated_at": "2019-05-09T01:04:23Z",
    "closed_at": "2019-05-09T01:04:22Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3708",
      "html_url": "https://github.com/expressjs/express/pull/3708",
      "diff_url": "https://github.com/expressjs/express/pull/3708.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3708.patch",
      "merged_at": "2019-05-09T01:04:22Z"
    },
    "body": "It's currently not possible to use the `bodyParser.raw` middleware through express. To have it one needs to use `bodyParser` directly. But alas, body-parser is not exposed through exports. So it's necessary to add it as a dependency to your project, which is clearly not desired as it might lead to multiple versions of `body-parser` (see #3706).\r\n\r\nThis PR just adds the `raw` middleware to the exports object, same as `json` and `urlencoded`.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3708/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3708/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3707",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3707/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3707/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3707/events",
    "html_url": "https://github.com/expressjs/express/issues/3707",
    "id": 348304599,
    "node_id": "MDU6SXNzdWUzNDgzMDQ1OTk=",
    "number": 3707,
    "title": "not loading js when page is not root",
    "user": {
      "login": "The-Code-Monkey",
      "id": 31218527,
      "node_id": "MDQ6VXNlcjMxMjE4NTI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/31218527?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/The-Code-Monkey",
      "html_url": "https://github.com/The-Code-Monkey",
      "followers_url": "https://api.github.com/users/The-Code-Monkey/followers",
      "following_url": "https://api.github.com/users/The-Code-Monkey/following{/other_user}",
      "gists_url": "https://api.github.com/users/The-Code-Monkey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/The-Code-Monkey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/The-Code-Monkey/subscriptions",
      "organizations_url": "https://api.github.com/users/The-Code-Monkey/orgs",
      "repos_url": "https://api.github.com/users/The-Code-Monkey/repos",
      "events_url": "https://api.github.com/users/The-Code-Monkey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/The-Code-Monkey/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2018-08-07T12:43:56Z",
    "updated_at": "2018-08-11T14:57:53Z",
    "closed_at": "2018-08-11T14:57:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "So i have a strange issue.\r\n\r\nI have a folder that has two folders in it a server folder and a client folder,\r\n\r\nthe client folder contains the unbuilt and built version of the app built in react with a react router and a single point of entry through the index.html file\r\n\r\nmy server looks in the client folder for the index.html which has a js and css file pointing towards the dist folder which is the minified js and css.\r\n\r\nso file structure is \r\n\r\n```\r\nclient\r\n    dist\r\n        css\r\n        js\r\n    index.html\r\n    ...\r\nserver\r\n    ...\r\n```\r\n\r\nserver file\r\n```\r\nconst express = require('express');\r\nconst { createServer } = require('http');\r\nconst io = require('socket.io');\r\nconst haiku = require('./haiku');\r\n\r\nconst app = express();\r\nconst server = createServer(app);\r\nconst userIds = {};\r\nconst noop = () => {};\r\n\r\napp.use('/', express.static(`${process.cwd()}/../client`));\r\n\r\n/**\r\n * Random ID until the ID is not in use\r\n */\r\nfunction randomID(callback) {\r\n  const id = haiku();\r\n  if (id in userIds) setTimeout(() => haiku(callback), 5);\r\n  else callback(id);\r\n}\r\n\r\n/**\r\n * Send data to friend\r\n */\r\nfunction sendTo(to, done, fail) {\r\n  const receiver = userIds[to];\r\n  if (receiver) {\r\n    const next = typeof done === 'function' ? done : noop;\r\n    next(receiver);\r\n  } else {\r\n    const next = typeof fail === 'function' ? fail : noop;\r\n    next();\r\n  }\r\n}\r\n\r\n/**\r\n * Initialize when a connection is made\r\n * @param {SocketIO.Socket} socket\r\n */\r\nfunction initSocket(socket) {\r\n  let id;\r\n  socket\r\n    .on('init', () => {\r\n      randomID((_id) => {\r\n        id = _id;\r\n        userIds[id] = socket;\r\n        socket.emit('init', { id });\r\n      });\r\n    })\r\n    .on('request', (data) => {\r\n      sendTo(data.to, to => to.emit('request', { from: id }));\r\n    })\r\n    .on('call', (data) => {\r\n      sendTo(\r\n        data.to,\r\n        to => to.emit('call', { ...data, from: id }),\r\n        () => socket.emit('failed')\r\n      );\r\n    })\r\n    .on('end', (data) => {\r\n      sendTo(data.to, to => to.emit('end'));\r\n    })\r\n    .on('disconnect', () => {\r\n      delete userIds[id];\r\n      console.log(id, 'disconnected');\r\n    });\r\n\r\n  return socket;\r\n}\r\n\r\nmodule.exports.run = (config) => {\r\n  server.listen(config.PORT);\r\n  console.log(`Server is listening at :${config.PORT}`);\r\n  io.listen(server, { log: true })\r\n    .on('connection', initSocket);\r\n};\r\n\r\n\r\n```\r\n\r\nindex.html\r\n```\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n\t<meta charset=\"utf-8\" />\r\n\t<meta name=\"viewport\" content=\"width=device-width, user-scalable=no\" />\r\n<link href=\"dist/css/app.min.css\" rel=\"stylesheet\"></head>\r\n\r\n<body>\r\n\t<div id=\"root\"></div>\r\n<script type=\"text/javascript\" src=\"dist/js/app.min.js\"></script></body>\r\n</html>\r\n```\r\n\r\nso via the network tab i can see if i go to /dashboard/stream it is loading the html but then saying 301 for the css and js which is strange because the dist folder is in the same folder as the html is\r\n\r\nwhat am i doing wrong. ive never touched express servers until now",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3707/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3707/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3706",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3706/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3706/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3706/events",
    "html_url": "https://github.com/expressjs/express/pull/3706",
    "id": 348302105,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjA2NjgzMTIw",
    "number": 3706,
    "title": "Update body-parser to latest version 1.18.3",
    "user": {
      "login": "amitzur",
      "id": 394320,
      "node_id": "MDQ6VXNlcjM5NDMyMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/394320?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitzur",
      "html_url": "https://github.com/amitzur",
      "followers_url": "https://api.github.com/users/amitzur/followers",
      "following_url": "https://api.github.com/users/amitzur/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitzur/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitzur/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitzur/subscriptions",
      "organizations_url": "https://api.github.com/users/amitzur/orgs",
      "repos_url": "https://api.github.com/users/amitzur/repos",
      "events_url": "https://api.github.com/users/amitzur/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitzur/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 133578716,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/deps",
        "name": "deps",
        "color": "444444",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2018-08-07T12:36:46Z",
    "updated_at": "2018-09-19T02:00:10Z",
    "closed_at": "2018-08-08T04:50:21Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3706",
      "html_url": "https://github.com/expressjs/express/pull/3706",
      "diff_url": "https://github.com/expressjs/express/pull/3706.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3706.patch",
      "merged_at": null
    },
    "body": "The implication of this change (other than getting the changes in `body-parser@1.18.3`) is smaller footprint in node_modules for projects which also require `body-parser` from its latest version.\r\nCurrently such projects will have 2 copies of `body-parser`.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3706/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3706/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3705",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3705/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3705/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3705/events",
    "html_url": "https://github.com/expressjs/express/pull/3705",
    "id": 347743464,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjA2MjY1NDcz",
    "number": 3705,
    "title": "Auth test errors in node >8",
    "user": {
      "login": "wesleytodd",
      "id": 1027776,
      "node_id": "MDQ6VXNlcjEwMjc3NzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1027776?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesleytodd",
      "html_url": "https://github.com/wesleytodd",
      "followers_url": "https://api.github.com/users/wesleytodd/followers",
      "following_url": "https://api.github.com/users/wesleytodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesleytodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesleytodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesleytodd/subscriptions",
      "organizations_url": "https://api.github.com/users/wesleytodd/orgs",
      "repos_url": "https://api.github.com/users/wesleytodd/repos",
      "events_url": "https://api.github.com/users/wesleytodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesleytodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-08-06T00:08:41Z",
    "updated_at": "2018-08-09T17:04:33Z",
    "closed_at": "2018-08-09T17:04:33Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3705",
      "html_url": "https://github.com/expressjs/express/pull/3705",
      "diff_url": "https://github.com/expressjs/express/pull/3705.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3705.patch",
      "merged_at": null
    },
    "body": "The tests on the 5.x branch were failing in node>8 because digest is now required.  This fixes that missing argument.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3705/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3705/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3704",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3704/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3704/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3704/events",
    "html_url": "https://github.com/expressjs/express/issues/3704",
    "id": 346599885,
    "node_id": "MDU6SXNzdWUzNDY1OTk4ODU=",
    "number": 3704,
    "title": "unable to get params from middleware into route",
    "user": {
      "login": "arifjaunpur",
      "id": 16599530,
      "node_id": "MDQ6VXNlcjE2NTk5NTMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/16599530?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arifjaunpur",
      "html_url": "https://github.com/arifjaunpur",
      "followers_url": "https://api.github.com/users/arifjaunpur/followers",
      "following_url": "https://api.github.com/users/arifjaunpur/following{/other_user}",
      "gists_url": "https://api.github.com/users/arifjaunpur/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arifjaunpur/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arifjaunpur/subscriptions",
      "organizations_url": "https://api.github.com/users/arifjaunpur/orgs",
      "repos_url": "https://api.github.com/users/arifjaunpur/repos",
      "events_url": "https://api.github.com/users/arifjaunpur/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arifjaunpur/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-08-01T13:28:20Z",
    "updated_at": "2018-08-01T13:31:33Z",
    "closed_at": "2018-08-01T13:30:06Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "\r\napp.js\r\n\r\n```\r\nconst adminRoutes = require('./routes/admin');\r\napp.use('/admin/customer/:customerId', (req, res, next) => {\r\n    console.log('middleware id=', req.params.customerId);\r\n    next();\r\n}, adminRoutes);\r\n```\r\n\r\nand here is routes/admin.js\r\n\r\n\r\nconst express = require('express');\r\nconst router = express.Router();\r\n\r\n\r\nrouter.post('/user', (req, res) => {\r\n    console.log('route id=', req.params.customerId);\r\n    res.json(req.params);\r\n});\r\n\r\nmodule.exports = router;\r\n\r\n\r\n\r\nI am getting following output \r\n\r\n```\r\nmiddleware id= 1\r\nroute id= undefined\r\n```\r\n\r\n\r\nwhile expected output is\r\n\r\n```\r\nmiddleware id= 1\r\nroute id= 1\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3704/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3704/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3703",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3703/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3703/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3703/events",
    "html_url": "https://github.com/expressjs/express/pull/3703",
    "id": 346275813,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjA1MTc5NzU2",
    "number": 3703,
    "title": "jsdoc optional param",
    "user": {
      "login": "NookieGrey",
      "id": 8101311,
      "node_id": "MDQ6VXNlcjgxMDEzMTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8101311?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NookieGrey",
      "html_url": "https://github.com/NookieGrey",
      "followers_url": "https://api.github.com/users/NookieGrey/followers",
      "following_url": "https://api.github.com/users/NookieGrey/following{/other_user}",
      "gists_url": "https://api.github.com/users/NookieGrey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NookieGrey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NookieGrey/subscriptions",
      "organizations_url": "https://api.github.com/users/NookieGrey/orgs",
      "repos_url": "https://api.github.com/users/NookieGrey/repos",
      "events_url": "https://api.github.com/users/NookieGrey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NookieGrey/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-07-31T17:01:16Z",
    "updated_at": "2018-07-31T17:11:15Z",
    "closed_at": "2018-07-31T17:11:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3703",
      "html_url": "https://github.com/expressjs/express/pull/3703",
      "diff_url": "https://github.com/expressjs/express/pull/3703.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3703.patch",
      "merged_at": null
    },
    "body": "This param is optional, so we can use new Router() without options, but in this case WebStorm is scolds",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3703/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3703/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3702",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3702/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3702/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3702/events",
    "html_url": "https://github.com/expressjs/express/issues/3702",
    "id": 346147436,
    "node_id": "MDU6SXNzdWUzNDYxNDc0MzY=",
    "number": 3702,
    "title": "repo needs more maintainers?",
    "user": {
      "login": "guyisra",
      "id": 1073521,
      "node_id": "MDQ6VXNlcjEwNzM1MjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1073521?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/guyisra",
      "html_url": "https://github.com/guyisra",
      "followers_url": "https://api.github.com/users/guyisra/followers",
      "following_url": "https://api.github.com/users/guyisra/following{/other_user}",
      "gists_url": "https://api.github.com/users/guyisra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/guyisra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/guyisra/subscriptions",
      "organizations_url": "https://api.github.com/users/guyisra/orgs",
      "repos_url": "https://api.github.com/users/guyisra/repos",
      "events_url": "https://api.github.com/users/guyisra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/guyisra/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-07-31T11:31:05Z",
    "updated_at": "2018-07-31T12:12:30Z",
    "closed_at": "2018-07-31T11:32:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "seems that progress is slowly grinding to a halt, and express 5.0 is almost a year untouched\r\n\r\ndo the current maintainers have time to keep maintaining this, or can we add more maintainers to keep the momentum going?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3702/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3702/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3701",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3701/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3701/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3701/events",
    "html_url": "https://github.com/expressjs/express/issues/3701",
    "id": 345961413,
    "node_id": "MDU6SXNzdWUzNDU5NjE0MTM=",
    "number": 3701,
    "title": "the part that serves static files redirects with a default 301",
    "user": {
      "login": "mks11",
      "id": 1414252,
      "node_id": "MDQ6VXNlcjE0MTQyNTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1414252?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mks11",
      "html_url": "https://github.com/mks11",
      "followers_url": "https://api.github.com/users/mks11/followers",
      "following_url": "https://api.github.com/users/mks11/following{/other_user}",
      "gists_url": "https://api.github.com/users/mks11/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mks11/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mks11/subscriptions",
      "organizations_url": "https://api.github.com/users/mks11/orgs",
      "repos_url": "https://api.github.com/users/mks11/repos",
      "events_url": "https://api.github.com/users/mks11/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mks11/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-07-30T22:30:57Z",
    "updated_at": "2018-07-30T22:38:56Z",
    "closed_at": "2018-07-30T22:38:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\r\nThe 'serve-static' package that express uses to serve static files differs from the idea of redirecting that express usage of redirect. The express 'redirect' uses 302 as default, but the static file server uses 301 as default. \r\n\r\nI don't know how but I ended up with the attached screen-shot, now assuming I don't have access to the user-agent, I can never clear this behavior. \r\n\r\n<img width=\"985\" alt=\"ask\" src=\"https://user-images.githubusercontent.com/1414252/43427179-18e95360-9476-11e8-9bce-668efde288cd.png\">\r\n\r\nThe bit that does this appending or trailing and redirection is here. Any comment / help is appreciated. \r\n\r\n`function createRedirectDirectoryListener () {\r\n  return function redirect (res) {\r\n    if (this.hasTrailingSlash()) {\r\n      this.error(404)\r\n      return\r\n    }\r\n\r\n    // get original URL\r\n    var originalUrl = parseUrl.original(this.req)\r\n\r\n    // append trailing slash\r\n    originalUrl.path = null\r\n    originalUrl.pathname = collapseLeadingSlashes(originalUrl.pathname + '/')\r\n\r\n    // reformat the URL\r\n    var loc = encodeUrl(url.format(originalUrl))\r\n    var doc = createHtmlDocument('Redirecting', 'Redirecting to <a href=\"' + escapeHtml(loc) + '\">' +\r\n      escapeHtml(loc) + '</a>')\r\n\r\n    // send redirect response\r\n    res.statusCode = 301\r\n    res.setHeader('Content-Type', 'text/html; charset=UTF-8')\r\n    res.setHeader('Content-Length', Buffer.byteLength(doc))\r\n    res.setHeader('Content-Security-Policy', \"default-src 'self'\")\r\n    res.setHeader('X-Content-Type-Options', 'nosniff')\r\n    res.setHeader('Location', loc)\r\n    res.end(doc)\r\n  }\r\n}`",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3701/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3701/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3700",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3700/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3700/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3700/events",
    "html_url": "https://github.com/expressjs/express/issues/3700",
    "id": 345468187,
    "node_id": "MDU6SXNzdWUzNDU0NjgxODc=",
    "number": 3700,
    "title": "Route parameters not working with Router object",
    "user": {
      "login": "siwalikm",
      "id": 20061595,
      "node_id": "MDQ6VXNlcjIwMDYxNTk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/20061595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/siwalikm",
      "html_url": "https://github.com/siwalikm",
      "followers_url": "https://api.github.com/users/siwalikm/followers",
      "following_url": "https://api.github.com/users/siwalikm/following{/other_user}",
      "gists_url": "https://api.github.com/users/siwalikm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/siwalikm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/siwalikm/subscriptions",
      "organizations_url": "https://api.github.com/users/siwalikm/orgs",
      "repos_url": "https://api.github.com/users/siwalikm/repos",
      "events_url": "https://api.github.com/users/siwalikm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/siwalikm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 13,
    "created_at": "2018-07-28T18:13:03Z",
    "updated_at": "2021-08-08T18:26:56Z",
    "closed_at": "2018-07-28T19:54:16Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "[Route parameters](https://expressjs.com/en/guide/routing.html#route-parameters) doesn't work as intended when passed to the Router object's instance.\r\n\r\nSomething like this, works =>\r\n```\r\napp.get('/users/:userId/books/:bookId', function (req, res) {\r\n  res.send(req.params);\r\n});\r\n```\r\nThough when I'm using the express Router object, this throws an error =>\r\n\r\n```\r\nvar router = express.Router();\r\nrouter.get('/users/:userId/books/:bookId', function (req, res) {\r\n  res.send(req.params);\r\n});\r\n```\r\nWhat am I missing or is this a bug?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3700/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3700/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3699",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3699/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3699/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3699/events",
    "html_url": "https://github.com/expressjs/express/issues/3699",
    "id": 343590964,
    "node_id": "MDU6SXNzdWUzNDM1OTA5NjQ=",
    "number": 3699,
    "title": "Camelize the response",
    "user": {
      "login": "AhmadRaza786",
      "id": 23386374,
      "node_id": "MDQ6VXNlcjIzMzg2Mzc0",
      "avatar_url": "https://avatars.githubusercontent.com/u/23386374?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AhmadRaza786",
      "html_url": "https://github.com/AhmadRaza786",
      "followers_url": "https://api.github.com/users/AhmadRaza786/followers",
      "following_url": "https://api.github.com/users/AhmadRaza786/following{/other_user}",
      "gists_url": "https://api.github.com/users/AhmadRaza786/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AhmadRaza786/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AhmadRaza786/subscriptions",
      "organizations_url": "https://api.github.com/users/AhmadRaza786/orgs",
      "repos_url": "https://api.github.com/users/AhmadRaza786/repos",
      "events_url": "https://api.github.com/users/AhmadRaza786/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AhmadRaza786/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-07-23T11:18:53Z",
    "updated_at": "2018-07-30T01:07:36Z",
    "closed_at": "2018-07-23T14:08:07Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am getting an object contains the properties, arrays of objects, etc. I just need to convert the complete object keys in camel case. Is it possible in express or I need to write my own parser for that ?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3699/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3699/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3698",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3698/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3698/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3698/events",
    "html_url": "https://github.com/expressjs/express/issues/3698",
    "id": 343319137,
    "node_id": "MDU6SXNzdWUzNDMzMTkxMzc=",
    "number": 3698,
    "title": "wrong JSDoc for .Router()",
    "user": {
      "login": "AlbertHambardzumyan",
      "id": 11527341,
      "node_id": "MDQ6VXNlcjExNTI3MzQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/11527341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AlbertHambardzumyan",
      "html_url": "https://github.com/AlbertHambardzumyan",
      "followers_url": "https://api.github.com/users/AlbertHambardzumyan/followers",
      "following_url": "https://api.github.com/users/AlbertHambardzumyan/following{/other_user}",
      "gists_url": "https://api.github.com/users/AlbertHambardzumyan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AlbertHambardzumyan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AlbertHambardzumyan/subscriptions",
      "organizations_url": "https://api.github.com/users/AlbertHambardzumyan/orgs",
      "repos_url": "https://api.github.com/users/AlbertHambardzumyan/repos",
      "events_url": "https://api.github.com/users/AlbertHambardzumyan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AlbertHambardzumyan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-07-21T11:10:44Z",
    "updated_at": "2018-09-13T22:45:29Z",
    "closed_at": "2018-09-13T22:45:29Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "According to the documentation [Router Doc](https://expressjs.com/en/api.html#express.router) the **options** of the **Router()** is optional. \r\nHowever, the [JSDoc](https://expressjs.com/en/api.html#express.router) does not apply that and the IDEs are highlighting it - `Invalid number of argumnets, expected 1`",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3698/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3698/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3697",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3697/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3697/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3697/events",
    "html_url": "https://github.com/expressjs/express/issues/3697",
    "id": 343177320,
    "node_id": "MDU6SXNzdWUzNDMxNzczMjA=",
    "number": 3697,
    "title": "Update documentation on routing with examples of middleware as second example",
    "user": {
      "login": "toymachiner62",
      "id": 485782,
      "node_id": "MDQ6VXNlcjQ4NTc4Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/485782?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toymachiner62",
      "html_url": "https://github.com/toymachiner62",
      "followers_url": "https://api.github.com/users/toymachiner62/followers",
      "following_url": "https://api.github.com/users/toymachiner62/following{/other_user}",
      "gists_url": "https://api.github.com/users/toymachiner62/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toymachiner62/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toymachiner62/subscriptions",
      "organizations_url": "https://api.github.com/users/toymachiner62/orgs",
      "repos_url": "https://api.github.com/users/toymachiner62/repos",
      "events_url": "https://api.github.com/users/toymachiner62/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toymachiner62/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-07-20T16:49:53Z",
    "updated_at": "2018-07-20T16:51:45Z",
    "closed_at": "2018-07-20T16:51:45Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In digging into the documentation a bit, i noticed there is no examples of using middleware as a second param on the router. \r\n\r\nhttps://expressjs.com/en/4x/api.html#router.METHOD\r\n\r\nFor example no examples with something like this:\r\n\r\n```js\r\nrouter.get('/foo', someMiddlewareFn, callbackFn)\r\n```\r\n\r\nCan you please update the docs with some examples like this?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3697/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3697/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3696",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3696/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3696/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3696/events",
    "html_url": "https://github.com/expressjs/express/issues/3696",
    "id": 342848168,
    "node_id": "MDU6SXNzdWUzNDI4NDgxNjg=",
    "number": 3696,
    "title": "Add support async handlers",
    "user": {
      "login": "maxcbc",
      "id": 11778762,
      "node_id": "MDQ6VXNlcjExNzc4NzYy",
      "avatar_url": "https://avatars.githubusercontent.com/u/11778762?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maxcbc",
      "html_url": "https://github.com/maxcbc",
      "followers_url": "https://api.github.com/users/maxcbc/followers",
      "following_url": "https://api.github.com/users/maxcbc/following{/other_user}",
      "gists_url": "https://api.github.com/users/maxcbc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maxcbc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maxcbc/subscriptions",
      "organizations_url": "https://api.github.com/users/maxcbc/orgs",
      "repos_url": "https://api.github.com/users/maxcbc/repos",
      "events_url": "https://api.github.com/users/maxcbc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maxcbc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-07-19T18:52:43Z",
    "updated_at": "2018-08-11T14:58:33Z",
    "closed_at": "2018-08-11T14:58:33Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi folks,\r\n\r\nI had an idea to support catching errors in an async function without an 'unhandledPromiseRejectionError'.\r\n\r\nThis gives developers the freedom to throw again but also means they don't have to do the following pattern.\r\n\r\n```javascript\r\nasync function (req, res, next) {\r\n  let result;\r\n  try {\r\n    result = await something();\r\n  } catch (err) {\r\n    next(err);\r\n  }\r\n  res.send(result);\r\n}\r\n```\r\n\r\nThey can instead do:\r\n```javascript\r\nasync function (req, res, next) {\r\n  res.send(await something());\r\n}\r\n```\r\n\r\nPR done as an idea: #3695 \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3696/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3696/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3695",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3695/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3695/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3695/events",
    "html_url": "https://github.com/expressjs/express/pull/3695",
    "id": 342846365,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjAyNjUwNTEz",
    "number": 3695,
    "title": "Add support for throwing in async handlers.",
    "user": {
      "login": "maxcbc",
      "id": 11778762,
      "node_id": "MDQ6VXNlcjExNzc4NzYy",
      "avatar_url": "https://avatars.githubusercontent.com/u/11778762?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maxcbc",
      "html_url": "https://github.com/maxcbc",
      "followers_url": "https://api.github.com/users/maxcbc/followers",
      "following_url": "https://api.github.com/users/maxcbc/following{/other_user}",
      "gists_url": "https://api.github.com/users/maxcbc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maxcbc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maxcbc/subscriptions",
      "organizations_url": "https://api.github.com/users/maxcbc/orgs",
      "repos_url": "https://api.github.com/users/maxcbc/repos",
      "events_url": "https://api.github.com/users/maxcbc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maxcbc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-07-19T18:47:16Z",
    "updated_at": "2018-07-19T23:19:57Z",
    "closed_at": "2018-07-19T18:58:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3695",
      "html_url": "https://github.com/expressjs/express/pull/3695",
      "diff_url": "https://github.com/expressjs/express/pull/3695.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3695.patch",
      "merged_at": null
    },
    "body": "Adds support for throwing in async handlers without an unhandledPromiseRejectionError warning.\r\n\r\nTested on 8.10.x and made so tests still pass on 0.10.x.\r\n\r\ncloses #3696",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3695/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3695/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3694",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3694/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3694/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3694/events",
    "html_url": "https://github.com/expressjs/express/issues/3694",
    "id": 342450170,
    "node_id": "MDU6SXNzdWUzNDI0NTAxNzA=",
    "number": 3694,
    "title": "please, i could use some help here please, because, i have tried npm cache  clean, npm cache verify, still getting issues trying to install 'npm install --save-dev nodemon' and below is my ",
    "user": {
      "login": "Gtstride",
      "id": 34355632,
      "node_id": "MDQ6VXNlcjM0MzU1NjMy",
      "avatar_url": "https://avatars.githubusercontent.com/u/34355632?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Gtstride",
      "html_url": "https://github.com/Gtstride",
      "followers_url": "https://api.github.com/users/Gtstride/followers",
      "following_url": "https://api.github.com/users/Gtstride/following{/other_user}",
      "gists_url": "https://api.github.com/users/Gtstride/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Gtstride/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Gtstride/subscriptions",
      "organizations_url": "https://api.github.com/users/Gtstride/orgs",
      "repos_url": "https://api.github.com/users/Gtstride/repos",
      "events_url": "https://api.github.com/users/Gtstride/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Gtstride/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-07-18T18:54:24Z",
    "updated_at": "2018-07-19T07:31:59Z",
    "closed_at": "2018-07-18T19:48:53Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "0 info it worked if it ends with ok\r\n1 verbose cli [ 'C:\\\\Program Files\\\\nodejs\\\\node.exe',\r\n1 verbose cli   'C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js',\r\n1 verbose cli   'cache',\r\n1 verbose cli   'clean' ]\r\n2 info using npm@6.1.0\r\n3 info using node@v10.6.0\r\n4 verbose npm-session c238d586237c8879\r\n5 verbose stack Error: As of npm@5, the npm cache self-heals from corruption issues and data extracted from the cache is guaranteed to be valid. If you want to make sure everything is consistent, use 'npm cache verify' instead.\r\n5 verbose stack\r\n5 verbose stack If you're sure you want to delete the entire cache, rerun this command with --force.\r\n5 verbose stack     at clean (C:\\Program Files\\nodejs\\node_modules\\npm\\lib\\cache.js:72:22)\r\n5 verbose stack     at EventEmitter.cache (C:\\Program Files\\nodejs\\node_modules\\npm\\lib\\cache.js:47:16)\r\n5 verbose stack     at Object.commandCache.(anonymous function) (C:\\Program Files\\nodejs\\node_modules\\npm\\lib\\npm.js:159:13)\r\n5 verbose stack     at EventEmitter.<anonymous> (C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js:123:30)\r\n5 verbose stack     at process._tickCallback (internal/process/next_tick.js:61:11)\r\n6 verbose cwd C:\\Users\\USER\\Desktop\\noteable\r\n7 verbose Windows_NT 10.0.17134\r\n8 verbose argv \"C:\\\\Program Files\\\\nodejs\\\\node.exe\" \"C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"cache\" \"clean\"\r\n9 verbose node v10.6.0\r\n10 verbose npm  v6.1.0\r\n11 error As of npm@5, the npm cache self-heals from corruption issues and data extracted from the cache is guaranteed to be valid. If you want to make sure everything is consistent, use 'npm cache verify' instead.\r\n11 error\r\n11 error If you're sure you want to delete the entire cache, rerun this command with --force.\r\n12 verbose exit [ 1, true ]\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3694/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3694/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3693",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3693/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3693/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3693/events",
    "html_url": "https://github.com/expressjs/express/issues/3693",
    "id": 342227090,
    "node_id": "MDU6SXNzdWUzNDIyMjcwOTA=",
    "number": 3693,
    "title": "Cookie Does Not Contain The “secure” and “HTTPOnly” Attribute",
    "user": {
      "login": "robin-chilliapple",
      "id": 17025274,
      "node_id": "MDQ6VXNlcjE3MDI1Mjc0",
      "avatar_url": "https://avatars.githubusercontent.com/u/17025274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/robin-chilliapple",
      "html_url": "https://github.com/robin-chilliapple",
      "followers_url": "https://api.github.com/users/robin-chilliapple/followers",
      "following_url": "https://api.github.com/users/robin-chilliapple/following{/other_user}",
      "gists_url": "https://api.github.com/users/robin-chilliapple/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/robin-chilliapple/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/robin-chilliapple/subscriptions",
      "organizations_url": "https://api.github.com/users/robin-chilliapple/orgs",
      "repos_url": "https://api.github.com/users/robin-chilliapple/repos",
      "events_url": "https://api.github.com/users/robin-chilliapple/events{/privacy}",
      "received_events_url": "https://api.github.com/users/robin-chilliapple/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-07-18T08:29:58Z",
    "updated_at": "2018-07-18T21:30:33Z",
    "closed_at": "2018-07-18T21:30:33Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "While running a Qualys Vulnerability Scan on a website which is being developed I got the following vulnerability:\r\n\r\nCookie Does Not Contain The \"HTTPOnly\" Attribute\r\n\r\nCookie Does Not Contain The \"secure\" Attribute\r\n\r\nMy application running in ExpressJS, NodeJS and nginx web server. I am using express-session and csurf token. I have already set both HTTPOnly and secure flag true. Configuration is the following:\r\n\r\n```\r\napp.use(bodyParser.json({limit: '50mb'}));\r\napp.use(bodyParser.urlencoded({extended: false, limit: '50mb'}));\r\napp.use(cookieParser());\r\n\r\napp.use(express.static(path.join(__dirname, \"/../public\")));\r\n\r\napp.enable(\"trust proxy\");\r\napp.use(expressSession({\r\n    store: new MongoStore({\r\n        url: `session_db`\r\n    }),\r\n    secret: `session_secret`,\r\n    resave: true,\r\n    saveUninitialized: true,\r\n    proxy: true,\r\n    rolling: true,\r\n    cookie: {\r\n        secure: true,\r\n        httpOnly: false,\r\n        maxAge: (72 * 60 * 60 * 1000)\r\n    },\r\n    unset: \"destroy\"\r\n}));\r\n\r\napp.use(passport.initialize());\r\napp.use(passport.session());\r\n\r\napp.use(flash());\r\n\r\napp.use(\"/api\", api);\r\n\r\napp.use( csrf({\r\n    cookie: {\r\n        secure: true,\r\n        httpOnly: true\r\n    }\r\n}));//csrf\r\n```\r\nAnd my nginx configuration is:\r\n\r\n```\r\n location / {\r\n                proxy_pass http://nodejs;\r\n                proxy_set_header Host $host ;\r\n                proxy_set_header X-Real-IP $remote_addr;\r\n                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\r\n                proxy_set_header X-Forwarded-Proto https;\r\n                proxy_cookie_path / \"/; HTTPOnly; Secure\";\r\n        }\r\n```\r\nHTTPOnly and secure both flags are ticked in browser cookies section. but when I scan it, It shows me above mentioned vulnerabilities.\r\n\r\ncan someone help me? is it possible to have this vulnerability?\r\n\r\nAwait your help friends",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3693/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3693/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3692",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3692/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3692/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3692/events",
    "html_url": "https://github.com/expressjs/express/pull/3692",
    "id": 341391226,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjAxNTQxMTI4",
    "number": 3692,
    "title": "Merge pull request #1 from expressjs/master",
    "user": {
      "login": "papac",
      "id": 9353811,
      "node_id": "MDQ6VXNlcjkzNTM4MTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9353811?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/papac",
      "html_url": "https://github.com/papac",
      "followers_url": "https://api.github.com/users/papac/followers",
      "following_url": "https://api.github.com/users/papac/following{/other_user}",
      "gists_url": "https://api.github.com/users/papac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/papac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/papac/subscriptions",
      "organizations_url": "https://api.github.com/users/papac/orgs",
      "repos_url": "https://api.github.com/users/papac/repos",
      "events_url": "https://api.github.com/users/papac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/papac/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-07-16T05:02:32Z",
    "updated_at": "2018-07-16T11:59:18Z",
    "closed_at": "2018-07-16T11:59:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3692",
      "html_url": "https://github.com/expressjs/express/pull/3692",
      "diff_url": "https://github.com/expressjs/express/pull/3692.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3692.patch",
      "merged_at": null
    },
    "body": "Update",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3692/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3692/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3691",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3691/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3691/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3691/events",
    "html_url": "https://github.com/expressjs/express/issues/3691",
    "id": 341247486,
    "node_id": "MDU6SXNzdWUzNDEyNDc0ODY=",
    "number": 3691,
    "title": "Router.get firing twice for the same route on page load",
    "user": {
      "login": "nove1398",
      "id": 2650410,
      "node_id": "MDQ6VXNlcjI2NTA0MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2650410?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nove1398",
      "html_url": "https://github.com/nove1398",
      "followers_url": "https://api.github.com/users/nove1398/followers",
      "following_url": "https://api.github.com/users/nove1398/following{/other_user}",
      "gists_url": "https://api.github.com/users/nove1398/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nove1398/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nove1398/subscriptions",
      "organizations_url": "https://api.github.com/users/nove1398/orgs",
      "repos_url": "https://api.github.com/users/nove1398/repos",
      "events_url": "https://api.github.com/users/nove1398/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nove1398/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-07-14T16:17:30Z",
    "updated_at": "2019-05-18T16:36:37Z",
    "closed_at": "2018-07-14T22:48:50Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "\r\n\r\nIn my router\r\n\r\nRouter.get('/login', IndexController.login); \r\n\r\nIn my controller\r\n\r\nexports.login = (req,res,next)=>{\r\n    console.log('login get');\r\n    res.render('main/login',{pageTitle: 'Login'});\r\n\r\n};\r\n\r\nThe console logs login get twice, meaning that this is called twice. If I remove the render call then it is logged only once. I have been trying to debug for several days now but still cant seem to figure this one out. When using a curl request from another terminal the log is seen only once as well, but using chrome/firefox/IE yields the double or sometimes triple log call. I don't see this behaviour with POST calls however. -EJS -EXPRESS -Node\r\n\r\nUPDATE In chrome dev tools, after inspecting the network tab, I only see 1 GET request being made for the page.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3691/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3691/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3690",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3690/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3690/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3690/events",
    "html_url": "https://github.com/expressjs/express/issues/3690",
    "id": 341050458,
    "node_id": "MDU6SXNzdWUzNDEwNTA0NTg=",
    "number": 3690,
    "title": "Express and bash command ",
    "user": {
      "login": "Odka33",
      "id": 22498710,
      "node_id": "MDQ6VXNlcjIyNDk4NzEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/22498710?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Odka33",
      "html_url": "https://github.com/Odka33",
      "followers_url": "https://api.github.com/users/Odka33/followers",
      "following_url": "https://api.github.com/users/Odka33/following{/other_user}",
      "gists_url": "https://api.github.com/users/Odka33/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Odka33/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Odka33/subscriptions",
      "organizations_url": "https://api.github.com/users/Odka33/orgs",
      "repos_url": "https://api.github.com/users/Odka33/repos",
      "events_url": "https://api.github.com/users/Odka33/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Odka33/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-07-13T14:55:31Z",
    "updated_at": "2018-07-17T18:34:39Z",
    "closed_at": "2018-07-17T18:34:11Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "app.get('/whois/:dns/:contact/', (req, res) => {\r\n    exec('whois '+req.params.dns+' | grep '+req.params.contact+'; #', (error, stdout, stderr) => {\r\n      res.send(`\r\n\r\ncommenter l'injection de commande bash avec un | . Je ne suis pas interessé par utilisé un module du type node-whois . \r\n\r\nRegex or other ?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3690/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3690/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3689",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3689/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3689/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3689/events",
    "html_url": "https://github.com/expressjs/express/issues/3689",
    "id": 340277399,
    "node_id": "MDU6SXNzdWUzNDAyNzczOTk=",
    "number": 3689,
    "title": "req.params error",
    "user": {
      "login": "liljosi",
      "id": 28731155,
      "node_id": "MDQ6VXNlcjI4NzMxMTU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/28731155?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/liljosi",
      "html_url": "https://github.com/liljosi",
      "followers_url": "https://api.github.com/users/liljosi/followers",
      "following_url": "https://api.github.com/users/liljosi/following{/other_user}",
      "gists_url": "https://api.github.com/users/liljosi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/liljosi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/liljosi/subscriptions",
      "organizations_url": "https://api.github.com/users/liljosi/orgs",
      "repos_url": "https://api.github.com/users/liljosi/repos",
      "events_url": "https://api.github.com/users/liljosi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/liljosi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-07-11T14:50:16Z",
    "updated_at": "2018-07-11T14:58:23Z",
    "closed_at": "2018-07-11T14:54:03Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I keep getting this error. TypeError: Cannot read property 'id' of undefined. The problem is that id is defined in my route but it seems as if nothing is there. It does not want to return the id being sent in the route.\r\n![screen shot 2018-07-11 at 9 48 49 am](https://user-images.githubusercontent.com/28731155/42580280-c68949da-84ef-11e8-85d2-7220b6255c2c.png)\r\n![screen shot 2018-07-11 at 9 49 04 am](https://user-images.githubusercontent.com/28731155/42580281-c6bb4106-84ef-11e8-8bc0-62b6c8024bbd.png)\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3689/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3689/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3688",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3688/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3688/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3688/events",
    "html_url": "https://github.com/expressjs/express/issues/3688",
    "id": 339184768,
    "node_id": "MDU6SXNzdWUzMzkxODQ3Njg=",
    "number": 3688,
    "title": "syntax error : Indentifier 'express' has already been declared..??",
    "user": {
      "login": "sonaskyla12",
      "id": 39699010,
      "node_id": "MDQ6VXNlcjM5Njk5MDEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/39699010?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sonaskyla12",
      "html_url": "https://github.com/sonaskyla12",
      "followers_url": "https://api.github.com/users/sonaskyla12/followers",
      "following_url": "https://api.github.com/users/sonaskyla12/following{/other_user}",
      "gists_url": "https://api.github.com/users/sonaskyla12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sonaskyla12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sonaskyla12/subscriptions",
      "organizations_url": "https://api.github.com/users/sonaskyla12/orgs",
      "repos_url": "https://api.github.com/users/sonaskyla12/repos",
      "events_url": "https://api.github.com/users/sonaskyla12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sonaskyla12/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-07-08T00:11:37Z",
    "updated_at": "2018-07-08T15:51:41Z",
    "closed_at": "2018-07-08T15:51:29Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "this is my server.js file code\r\nconst express = require('express');\r\nconst mongoose = require('mongoose');\r\nconst bodyParser = require('body-parser');\r\nconst passport = require('passport');\r\n\r\nconst users = require('./routes/api/users');\r\nconst profile = require('./routes/api/profile');\r\nconst posts = require('./routes/api/posts');\r\n\r\nconst app = express();\r\n\r\n// Body parser middleware\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\napp.use(bodyParser.json());\r\n\r\n// DB Config\r\nconst db = require('./config/keys').mongoURI;\r\n\r\n// Connect to MongoDB\r\nmongoose\r\n  .connect(db)\r\n  .then(() => console.log('MongoDB Connected'))\r\n  .catch(err => console.log(err));\r\n\r\n// Passport middleware\r\napp.use(passport.initialize());\r\n\r\n// Passport Config\r\nrequire('./config/passport')(passport);\r\n\r\n// Use Routes\r\napp.use('/api/users', users);\r\napp.use('/api/profile', profile);\r\napp.use('/api/posts', posts);\r\n\r\nconst port = process.env.PORT || 5000;\r\n\r\napp.listen(port, () => console.log(`Server running on port ${port}`));\r\nand i am getting this error\r\n dentifier 'express' has already been declared at new script (vm.js:74:7) at createscript (vm.js:246:10) at Object.runInThisContext(vm.js:298:10) at module._compile(internal/module/cjs/loader.js:713:10) ...\r\nearlier my code was running very well i was getting the response from postman then suddenly it was showing reference error : express not defined even though i have dependencies of express after that i have tried to reinstall it ....and also tried to reinstall globally",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3688/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3688/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3687",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3687/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3687/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3687/events",
    "html_url": "https://github.com/expressjs/express/issues/3687",
    "id": 338176791,
    "node_id": "MDU6SXNzdWUzMzgxNzY3OTE=",
    "number": 3687,
    "title": "DELETE route isn't being matched but the same GET route is",
    "user": {
      "login": "kriston13",
      "id": 1905786,
      "node_id": "MDQ6VXNlcjE5MDU3ODY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1905786?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kriston13",
      "html_url": "https://github.com/kriston13",
      "followers_url": "https://api.github.com/users/kriston13/followers",
      "following_url": "https://api.github.com/users/kriston13/following{/other_user}",
      "gists_url": "https://api.github.com/users/kriston13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kriston13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kriston13/subscriptions",
      "organizations_url": "https://api.github.com/users/kriston13/orgs",
      "repos_url": "https://api.github.com/users/kriston13/repos",
      "events_url": "https://api.github.com/users/kriston13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kriston13/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-07-04T08:23:48Z",
    "updated_at": "2018-07-08T15:59:25Z",
    "closed_at": "2018-07-08T15:59:25Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi!\r\n\r\nRunning `express v4.15.3`, and I'm running into a problem where my `DELETE` route isn't being matched.\r\n\r\nthese are my routes:\r\n```\r\nvar trainingRoutes = express.Router();\r\n\r\n// ROUTES\r\ntrainingRoutes.post('', createTrainingDataLine);\r\ntrainingRoutes.get('/searchterm/:searchTerm', findBySearchTerm); \r\ntrainingRoutes.get('', findWithQueryParams);\r\ntrainingRoutes.get('/id/:id', findById);\r\ntrainingRoutes.delete(\"/id/:id\", deleteById);\r\n```\r\n\r\nAll the non-`delete` routes work, including the `GET /id/:id` route.\r\n\r\nI've run this too with some debugging, and this is what I see when launching node with the `DEBUG=express:*` flag\r\n\r\n```\r\n$ DEBUG=express:* node server/server.js \r\n  express:router:route new '' +0ms\r\n  express:router:layer new '' +1ms\r\n  express:router:route post '' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/searchterm/:searchTerm' +0ms\r\n  express:router:layer new '/searchterm/:searchTerm' +0ms\r\n  express:router:route get '/searchterm/:searchTerm' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '' +0ms\r\n  express:router:layer new '' +0ms\r\n  express:router:route get '' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/id/:id' +0ms\r\n  express:router:layer new '/id/:id' +0ms\r\n  express:router:route get '/id/:id' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/id/:id' +0ms\r\n  express:router:layer new '/id/:id' +0ms\r\n  express:router:route delete '/id/:id' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:application set \"x-powered-by\" to true +2ms\r\n  express:application set \"etag\" to 'weak' +0ms\r\n  express:application set \"etag fn\" to [Function: generateETag] +0ms\r\n  express:application set \"env\" to 'development' +0ms\r\n  express:application set \"query parser\" to 'extended' +0ms\r\n  express:application set \"query parser fn\" to [Function: parseExtendedQueryString] +0ms\r\n  express:application set \"subdomain offset\" to 2 +0ms\r\n  express:application set \"trust proxy\" to false +0ms\r\n  express:application set \"trust proxy fn\" to [Function: trustNone] +0ms\r\n  express:application booting in development mode +0ms\r\n  express:application set \"view\" to [Function: View] +0ms\r\n  express:application set \"views\" to '<snip>/views' +0ms\r\n  express:application set \"jsonp callback name\" to 'callback' +0ms\r\n  express:router use '/' query +7ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/' expressInit +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/' jsonParser +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/' logger +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/trainingdata' router +0ms\r\n  express:router:layer new '/trainingdata' +0ms\r\n  express:router use '/swagger/api' serveStatic +1ms\r\n  express:router:layer new '/swagger/api' +0ms\r\n  express:router use '/explorer' serveStatic +0ms\r\n  express:router:layer new '/explorer' +0ms\r\n  express:router use '/' router +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route get '/' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/health' router +0ms\r\n  express:router:layer new '/health' +0ms\r\n  express:router use '/' <anonymous> +4ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/' <anonymous> +0ms\r\n  express:router:layer new '/' +0ms\r\n```\r\n\r\nThe lines for the `GET /id/:id` and `DELETE /id/:id` are... in the middle-ish, and pulled out here for reference:\r\n\r\n```\r\n  express:router:route new '/id/:id' +0ms\r\n  express:router:layer new '/id/:id' +0ms\r\n  express:router:route get '/id/:id' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/id/:id' +0ms\r\n  express:router:layer new '/id/:id' +0ms\r\n  express:router:route delete '/id/:id' +0ms\r\n```\r\nI haven't found anything else in here that looks like the same route.\r\n\r\nNow, when running... The logs I get for the `GET /trainingdata/id/:id` route is:\r\n\r\n```\r\n  express:router dispatching GET /trainingdata/id/5b3c7f880a7894d597a87310 +9m\r\n  express:router query  : /trainingdata/id/5b3c7f880a7894d597a87310 +0ms\r\n  express:router expressInit  : /trainingdata/id/5b3c7f880a7894d597a87310 +0ms\r\n  express:router jsonParser  : /trainingdata/id/5b3c7f880a7894d597a87310 +0ms\r\n  express:router logger  : /trainingdata/id/5b3c7f880a7894d597a87310 +0ms\r\n  express:router trim prefix (/trainingdata) from url /trainingdata/id/5b3c7f880a7894d597a87310 +0ms\r\n  express:router router /trainingdata : /trainingdata/id/5b3c7f880a7894d597a87310 +0ms\r\n  express:router dispatching GET /id/5b3c7f880a7894d597a87310 +0ms\r\n2018-07-04 08:15:52 info: \t::ffff:127.0.0.1 - - [04/Jul/2018:08:15:52 +0000] \"GET /trainingdata/id/5b3c7f880a7894d597a87310 HTTP/1.1\" 200 227 \"-\" \"Paw/3.1.7 (Macintosh; OS X/10.13.5) GCDHTTPRequest\"\r\n```\r\n\r\nSo it works its way through. and then gets it, and I see it logged in my logs (last line)\r\n\r\nBut with `DELETE /trainingdata/id/:id` - which is literally changing the method in my API player...\r\n```\r\n  express:router dispatching DELETE /trainingdata/id/5b3c7f880a7894d597a87310 +1m\r\n  express:router query  : /trainingdata/id/5b3c7f880a7894d597a87310 +0ms\r\n  express:router expressInit  : /trainingdata/id/5b3c7f880a7894d597a87310 +0ms\r\n  express:router jsonParser  : /trainingdata/id/5b3c7f880a7894d597a87310 +0ms\r\n  express:router logger  : /trainingdata/id/5b3c7f880a7894d597a87310 +0ms\r\n  express:router trim prefix (/trainingdata) from url /trainingdata/id/5b3c7f880a7894d597a87310 +0ms\r\n  express:router router /trainingdata : /trainingdata/id/5b3c7f880a7894d597a87310 +1ms\r\n  express:router dispatching DELETE /id/5b3c7f880a7894d597a87310 +0ms\r\n  express:router router  : /trainingdata/id/5b3c7f880a7894d597a87310 +0ms\r\n  express:router <anonymous>  : /trainingdata/id/5b3c7f880a7894d597a87310 +0ms\r\n  express:router <anonymous>  : /trainingdata/id/5b3c7f880a7894d597a87310 +0ms\r\n2018-07-04 08:17:04 info: \t::ffff:127.0.0.1 - - [04/Jul/2018:08:17:04 +0000] \"DELETE /trainingdata/id/5b3c7f880a7894d597a87310 HTTP/1.1\" 404 266 \"-\" \"Paw/3.1.7 (Macintosh; OS X/10.13.5) GCDHTTPRequest\"\r\n \r\nError: ENOENT: no such file or directory, stat '><snip>/public/500.html'\r\n```\r\n\r\nFor whatever reason, when it gets to `dispatching DELETE`, it's behaviour then differs, and it doesn't seem to be able to find it.\r\n\r\nI've also got very liberal commenting within the functions that I'm calling, so I'm sure the `deleteById` function is never called. :/\r\n\r\nI'd really appreciate some directions on how to further debug this. I've exhausted what I know!\r\n\r\nThank you\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3687/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3687/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3686",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3686/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3686/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3686/events",
    "html_url": "https://github.com/expressjs/express/issues/3686",
    "id": 337863765,
    "node_id": "MDU6SXNzdWUzMzc4NjM3NjU=",
    "number": 3686,
    "title": "next('router') is ignored.",
    "user": {
      "login": "0xff00ff",
      "id": 669518,
      "node_id": "MDQ6VXNlcjY2OTUxOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/669518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xff00ff",
      "html_url": "https://github.com/0xff00ff",
      "followers_url": "https://api.github.com/users/0xff00ff/followers",
      "following_url": "https://api.github.com/users/0xff00ff/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xff00ff/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xff00ff/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xff00ff/subscriptions",
      "organizations_url": "https://api.github.com/users/0xff00ff/orgs",
      "repos_url": "https://api.github.com/users/0xff00ff/repos",
      "events_url": "https://api.github.com/users/0xff00ff/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xff00ff/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-07-03T11:44:11Z",
    "updated_at": "2018-07-03T17:28:09Z",
    "closed_at": "2018-07-03T12:34:51Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "It seems to app is ignoring next('router').\r\nhttps://github.com/expressjs/express/blob/master/lib/router/index.js#L177 here is layerError is checking for any error or if err is equal to 'router'. \r\n\r\nand then below this variable used to skip next routes if layerError is equel to 'router'  https://github.com/expressjs/express/blob/master/lib/router/index.js#L195 but it newer will be equal to this, it will have error message or null;\r\n\r\nIs there a typo and should be:\r\n`var layerError = err;`\r\nor \r\n```\r\nif (layerError === null && err === 'router') {\r\n  setImmediate(done, null)\r\n  return\r\n}\r\n```\r\n?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3686/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3686/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3685",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3685/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3685/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3685/events",
    "html_url": "https://github.com/expressjs/express/issues/3685",
    "id": 337636047,
    "node_id": "MDU6SXNzdWUzMzc2MzYwNDc=",
    "number": 3685,
    "title": "Cannot find route.post  but when i use route.get, the route is found",
    "user": {
      "login": "aminub",
      "id": 16509395,
      "node_id": "MDQ6VXNlcjE2NTA5Mzk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/16509395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aminub",
      "html_url": "https://github.com/aminub",
      "followers_url": "https://api.github.com/users/aminub/followers",
      "following_url": "https://api.github.com/users/aminub/following{/other_user}",
      "gists_url": "https://api.github.com/users/aminub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aminub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aminub/subscriptions",
      "organizations_url": "https://api.github.com/users/aminub/orgs",
      "repos_url": "https://api.github.com/users/aminub/repos",
      "events_url": "https://api.github.com/users/aminub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aminub/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-07-02T19:30:59Z",
    "updated_at": "2018-08-11T14:58:58Z",
    "closed_at": "2018-08-11T14:58:58Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "```js\r\nconst express = require('express'),\r\n    router = express.Router(),\r\n    Blog = require('../models/blogs'),\r\n    config = require('../config/database');\r\n\r\n//get all blogs from the database and show them on the blogs view\r\nrouter.post('/blogs', (req, res) => {\r\n    res.render('blogs');\r\n});\r\n\r\n//add a new blog post (logged in users only)\r\nrouter.get('/new', (req, res, next) => {\r\n    res.render('index');\r\n});\r\n\r\n//export the router\r\nmodule.exports = router;\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3685/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3685/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3684",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3684/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3684/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3684/events",
    "html_url": "https://github.com/expressjs/express/pull/3684",
    "id": 337336821,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTk4NTUxNDYz",
    "number": 3684,
    "title": "add set option 'handler-wrapper' to wrap handlers on execution ( proposition )",
    "user": {
      "login": "howtoclient",
      "id": 15077303,
      "node_id": "MDQ6VXNlcjE1MDc3MzAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/15077303?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/howtoclient",
      "html_url": "https://github.com/howtoclient",
      "followers_url": "https://api.github.com/users/howtoclient/followers",
      "following_url": "https://api.github.com/users/howtoclient/following{/other_user}",
      "gists_url": "https://api.github.com/users/howtoclient/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/howtoclient/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/howtoclient/subscriptions",
      "organizations_url": "https://api.github.com/users/howtoclient/orgs",
      "repos_url": "https://api.github.com/users/howtoclient/repos",
      "events_url": "https://api.github.com/users/howtoclient/events{/privacy}",
      "received_events_url": "https://api.github.com/users/howtoclient/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-07-02T00:34:06Z",
    "updated_at": "2018-07-02T13:08:13Z",
    "closed_at": "2018-07-02T00:41:48Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3684",
      "html_url": "https://github.com/expressjs/express/pull/3684",
      "diff_url": "https://github.com/expressjs/express/pull/3684.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3684.patch",
      "merged_at": null
    },
    "body": "Could be used to set `async await` outside of express scope or could be used to send response using handlers result. Also could greatly improve `midleware` diversity and capabilities.\r\n\r\nskipping `midleware` since it feels unnecessary. \r\n\r\nWhat do you think?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3684/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3684/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3683",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3683/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3683/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3683/events",
    "html_url": "https://github.com/expressjs/express/pull/3683",
    "id": 337319429,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTk4NTQxMDI3",
    "number": 3683,
    "title": "Enable async ( non breaking change )",
    "user": {
      "login": "howtoclient",
      "id": 15077303,
      "node_id": "MDQ6VXNlcjE1MDc3MzAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/15077303?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/howtoclient",
      "html_url": "https://github.com/howtoclient",
      "followers_url": "https://api.github.com/users/howtoclient/followers",
      "following_url": "https://api.github.com/users/howtoclient/following{/other_user}",
      "gists_url": "https://api.github.com/users/howtoclient/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/howtoclient/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/howtoclient/subscriptions",
      "organizations_url": "https://api.github.com/users/howtoclient/orgs",
      "repos_url": "https://api.github.com/users/howtoclient/repos",
      "events_url": "https://api.github.com/users/howtoclient/events{/privacy}",
      "received_events_url": "https://api.github.com/users/howtoclient/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 98481977,
        "node_id": "MDU6TGFiZWw5ODQ4MTk3Nw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 11,
    "created_at": "2018-07-01T20:27:02Z",
    "updated_at": "2018-07-02T00:42:30Z",
    "closed_at": "2018-07-01T20:34:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3683",
      "html_url": "https://github.com/expressjs/express/pull/3683",
      "diff_url": "https://github.com/expressjs/express/pull/3683.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3683.patch",
      "merged_at": null
    },
    "body": "I added async function dettection.\r\nIt should work on very early version and this one does not care for function response but rather tests the function itself if its `AsyncFunction` or just a Function. Any old version should fallback to the simple function execution while newer versions will default to 'fn().catch(next)` method.\r\n(newer NodeJS use `AsyncFunction` instead of `Function` as constructor for `async function(){}`\r\n\r\n\r\nalso about the proper solution in express 5.0. Do you want me to merge master there since it seem like the router is missing.\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3683/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3683/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3682",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3682/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3682/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3682/events",
    "html_url": "https://github.com/expressjs/express/pull/3682",
    "id": 337317468,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTk4NTM5OTA1",
    "number": 3682,
    "title": "enable async/await on handlers ( old school )",
    "user": {
      "login": "howtoclient",
      "id": 15077303,
      "node_id": "MDQ6VXNlcjE1MDc3MzAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/15077303?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/howtoclient",
      "html_url": "https://github.com/howtoclient",
      "followers_url": "https://api.github.com/users/howtoclient/followers",
      "following_url": "https://api.github.com/users/howtoclient/following{/other_user}",
      "gists_url": "https://api.github.com/users/howtoclient/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/howtoclient/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/howtoclient/subscriptions",
      "organizations_url": "https://api.github.com/users/howtoclient/orgs",
      "repos_url": "https://api.github.com/users/howtoclient/repos",
      "events_url": "https://api.github.com/users/howtoclient/events{/privacy}",
      "received_events_url": "https://api.github.com/users/howtoclient/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 98481977,
        "node_id": "MDU6TGFiZWw5ODQ4MTk3Nw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-07-01T19:57:18Z",
    "updated_at": "2018-07-02T00:42:30Z",
    "closed_at": "2018-07-01T20:01:43Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3682",
      "html_url": "https://github.com/expressjs/express/pull/3682",
      "diff_url": "https://github.com/expressjs/express/pull/3682.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3682.patch",
      "merged_at": null
    },
    "body": "Same as the other pull request to allow async handlers for express.\r\nThis one is a simple old school solution in case support for older versions is needed...\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3682/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3682/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3681",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3681/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3681/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3681/events",
    "html_url": "https://github.com/expressjs/express/pull/3681",
    "id": 337316089,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTk4NTM5MDk0",
    "number": 3681,
    "title": "enable async/await on handlers",
    "user": {
      "login": "howtoclient",
      "id": 15077303,
      "node_id": "MDQ6VXNlcjE1MDc3MzAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/15077303?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/howtoclient",
      "html_url": "https://github.com/howtoclient",
      "followers_url": "https://api.github.com/users/howtoclient/followers",
      "following_url": "https://api.github.com/users/howtoclient/following{/other_user}",
      "gists_url": "https://api.github.com/users/howtoclient/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/howtoclient/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/howtoclient/subscriptions",
      "organizations_url": "https://api.github.com/users/howtoclient/orgs",
      "repos_url": "https://api.github.com/users/howtoclient/repos",
      "events_url": "https://api.github.com/users/howtoclient/events{/privacy}",
      "received_events_url": "https://api.github.com/users/howtoclient/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 98481977,
        "node_id": "MDU6TGFiZWw5ODQ4MTk3Nw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-07-01T19:36:18Z",
    "updated_at": "2018-07-02T00:42:30Z",
    "closed_at": "2018-07-01T20:01:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3681",
      "html_url": "https://github.com/expressjs/express/pull/3681",
      "diff_url": "https://github.com/expressjs/express/pull/3681.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3681.patch",
      "merged_at": null
    },
    "body": "In nodeJs 7.6 async/await was enabled\r\nthe newest version is 10.5.0\r\neven aws lambdas now support 8.x.x so i felt comfortable adding `async` and `await` to enable this functionality\r\n\r\nThis is a simple way to enable full async support rather then using wrappers.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3681/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3681/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3680",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3680/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3680/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3680/events",
    "html_url": "https://github.com/expressjs/express/issues/3680",
    "id": 336895746,
    "node_id": "MDU6SXNzdWUzMzY4OTU3NDY=",
    "number": 3680,
    "title": "header not set at client side in express js",
    "user": {
      "login": "sehbas04",
      "id": 39954470,
      "node_id": "MDQ6VXNlcjM5OTU0NDcw",
      "avatar_url": "https://avatars.githubusercontent.com/u/39954470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sehbas04",
      "html_url": "https://github.com/sehbas04",
      "followers_url": "https://api.github.com/users/sehbas04/followers",
      "following_url": "https://api.github.com/users/sehbas04/following{/other_user}",
      "gists_url": "https://api.github.com/users/sehbas04/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sehbas04/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sehbas04/subscriptions",
      "organizations_url": "https://api.github.com/users/sehbas04/orgs",
      "repos_url": "https://api.github.com/users/sehbas04/repos",
      "events_url": "https://api.github.com/users/sehbas04/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sehbas04/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-06-29T07:38:50Z",
    "updated_at": "2018-07-09T16:25:16Z",
    "closed_at": "2018-06-30T05:30:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello \r\nI am getting this kind of error,\r\n\r\nError [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client\r\n    at validateHeader (_http_outgoing.js:503:11)\r\n    at ServerResponse.setHeader (_http_outgoing.js:510:3)\r\n    at ServerResponse.header (E:\\Project\\plusweb\\node_modules\\express\\lib\\response.js:730:10)\r\n    at ServerResponse.location (E:\\Project\\plusweb\\node_modules\\express\\lib\\response.js:847:15)\r\n    at ServerResponse.redirect (E:\\Project\\plusweb\\node_modules\\express\\lib\\response.js:885:18)\r\n    at E:\\Project\\plusweb\\queries\\login.js:17:17\r\n    at tryCatcher (E:\\Project\\plusweb\\node_modules\\bluebird\\js\\release\\util.js:16:23)\r\n    at Promise._settlePromiseFromHandler (E:\\Project\\plusweb\\node_modules\\bluebird\\js\\release\\promise.js:512:31)\r\n    at Promise._settlePromise (E:\\Project\\plusweb\\node_modules\\bluebird\\js\\release\\promise.js:569:18)\r\n    at Promise._settlePromise0 (E:\\Project\\plusweb\\node_modules\\bluebird\\js\\release\\promise.js:614:10)\r\n    at Promise._settlePromises (E:\\Project\\plusweb\\node_modules\\bluebird\\js\\release\\promise.js:693:18)\r\n    at Async._drainQueue (E:\\Project\\plusweb\\node_modules\\bluebird\\js\\release\\async.js:133:16)\r\n    at Async._drainQueues (E:\\Project\\plusweb\\node_modules\\bluebird\\js\\release\\async.js:143:10)\r\n    at Immediate.Async.drainQueues [as _onImmediate] (E:\\Project\\plusweb\\node_modules\\bluebird\\js\\release\\async.js:17:14)\r\n    at runCallback (timers.js:763:18)\r\n    at tryOnImmediate (timers.js:734:5)\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3680/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3680/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3679",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3679/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3679/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3679/events",
    "html_url": "https://github.com/expressjs/express/issues/3679",
    "id": 336841696,
    "node_id": "MDU6SXNzdWUzMzY4NDE2OTY=",
    "number": 3679,
    "title": "Encoded special character ($) not being picked up by route",
    "user": {
      "login": "toymachiner62",
      "id": 485782,
      "node_id": "MDQ6VXNlcjQ4NTc4Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/485782?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toymachiner62",
      "html_url": "https://github.com/toymachiner62",
      "followers_url": "https://api.github.com/users/toymachiner62/followers",
      "following_url": "https://api.github.com/users/toymachiner62/following{/other_user}",
      "gists_url": "https://api.github.com/users/toymachiner62/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toymachiner62/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toymachiner62/subscriptions",
      "organizations_url": "https://api.github.com/users/toymachiner62/orgs",
      "repos_url": "https://api.github.com/users/toymachiner62/repos",
      "events_url": "https://api.github.com/users/toymachiner62/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toymachiner62/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-06-29T02:30:49Z",
    "updated_at": "2018-07-06T15:33:28Z",
    "closed_at": "2018-07-06T15:33:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have the route defined below if a rest client encodes the `$` it doesn't get picked up by the router and ultimately returns a 404\r\n\r\n```js\r\nrouter.get('/foo/:id/([\\$])everything', fetchEverythingHandler)\r\n```\r\n\r\nPostman request of `GET /foo/1/$everything` sends `GET /foo/1/$everything` across the wire and it gets handled by my router. \r\n\r\n[Insomnia](https://insomnia.rest/) request of `GET /foo/1/$everything` sends `GET /foo/1/%24everything` across the wire and it never gets handled by my router.\r\n\r\nHow can I handle a single route that catches `$` and `%24`?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3679/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3679/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3678",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3678/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3678/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3678/events",
    "html_url": "https://github.com/expressjs/express/pull/3678",
    "id": 336131313,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTk3NjU2ODUy",
    "number": 3678,
    "title": "Move removed middlewares to a variable",
    "user": {
      "login": "LinusU",
      "id": 189580,
      "node_id": "MDQ6VXNlcjE4OTU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/189580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LinusU",
      "html_url": "https://github.com/LinusU",
      "followers_url": "https://api.github.com/users/LinusU/followers",
      "following_url": "https://api.github.com/users/LinusU/following{/other_user}",
      "gists_url": "https://api.github.com/users/LinusU/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LinusU/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LinusU/subscriptions",
      "organizations_url": "https://api.github.com/users/LinusU/orgs",
      "repos_url": "https://api.github.com/users/LinusU/repos",
      "events_url": "https://api.github.com/users/LinusU/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LinusU/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-06-27T08:41:02Z",
    "updated_at": "2018-09-14T08:15:18Z",
    "closed_at": "2018-09-13T23:11:02Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3678",
      "html_url": "https://github.com/expressjs/express/pull/3678",
      "diff_url": "https://github.com/expressjs/express/pull/3678.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3678.patch",
      "merged_at": "2018-09-13T23:11:02Z"
    },
    "body": "Fixes #3558 & #3677",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3678/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3678/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3677",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3677/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3677/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3677/events",
    "html_url": "https://github.com/expressjs/express/issues/3677",
    "id": 335397528,
    "node_id": "MDU6SXNzdWUzMzUzOTc1Mjg=",
    "number": 3677,
    "title": "87th Line on express.js starts with ;",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-06-25T13:03:18Z",
    "updated_at": "2018-06-27T08:41:18Z",
    "closed_at": "2018-06-25T13:06:25Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "express is a great framework. I was going through the code and i found that 87th line starts with ';', i am very new to both nodejs and expressjs and i may be completely wrong. does the ; in line 87, is actually the semi colon for line 81? or the line 87 intentionally start with a semi colon?. I am very new to express JS and if it is intentional, can you kindly please explain the purpose of that starting ;, Thank you😀 ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3677/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3677/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3676",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3676/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3676/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3676/events",
    "html_url": "https://github.com/expressjs/express/pull/3676",
    "id": 335104549,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTk2OTA0NTIy",
    "number": 3676,
    "title": "Add SemVer stability badge to README",
    "user": {
      "login": "greysteil",
      "id": 1144873,
      "node_id": "MDQ6VXNlcjExNDQ4NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1144873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/greysteil",
      "html_url": "https://github.com/greysteil",
      "followers_url": "https://api.github.com/users/greysteil/followers",
      "following_url": "https://api.github.com/users/greysteil/following{/other_user}",
      "gists_url": "https://api.github.com/users/greysteil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/greysteil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/greysteil/subscriptions",
      "organizations_url": "https://api.github.com/users/greysteil/orgs",
      "repos_url": "https://api.github.com/users/greysteil/repos",
      "events_url": "https://api.github.com/users/greysteil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/greysteil/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 163600,
        "node_id": "MDU6TGFiZWwxNjM2MDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false,
        "description": null
      },
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 13,
    "created_at": "2018-06-23T14:24:12Z",
    "updated_at": "2018-07-03T20:15:14Z",
    "closed_at": "2018-06-25T19:56:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3676",
      "html_url": "https://github.com/expressjs/express/pull/3676",
      "diff_url": "https://github.com/expressjs/express/pull/3676.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3676.patch",
      "merged_at": null
    },
    "body": "Would you be up for adding a badge that shows how SemVer compliant / bug free new releases are? I was looking through the data we gather at Dependabot and realised we could put one together, so threw together the below:\r\n\r\n[![SemVer](https://api.dependabot.com/badges/compatibility_score?dependency-name=express&package-manager=npm_and_yarn&version-scheme=semver)](https://dependabot.com/compatibility-score.html?dependency-name=express&package-manager=npm_and_yarn&version-scheme=semver)\r\n\r\nIf you click through then there's a description of how it's calculated - basically it takes all of the relevant updates Dependabot has done for projects that use Express and checks what percentage of the time specs pass on the upgrade PR.\r\n\r\nThe score is slightly lower than 100% because some projects have flaky specs, but I'm working on filtering them out from the data, too :octocat:.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3676/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3676/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3675",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3675/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3675/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3675/events",
    "html_url": "https://github.com/expressjs/express/pull/3675",
    "id": 335082829,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTk2ODkwOTM5",
    "number": 3675,
    "title": "add app.listenPromise",
    "user": {
      "login": "caub",
      "id": 3134574,
      "node_id": "MDQ6VXNlcjMxMzQ1NzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3134574?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/caub",
      "html_url": "https://github.com/caub",
      "followers_url": "https://api.github.com/users/caub/followers",
      "following_url": "https://api.github.com/users/caub/following{/other_user}",
      "gists_url": "https://api.github.com/users/caub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/caub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/caub/subscriptions",
      "organizations_url": "https://api.github.com/users/caub/orgs",
      "repos_url": "https://api.github.com/users/caub/repos",
      "events_url": "https://api.github.com/users/caub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/caub/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 13,
    "created_at": "2018-06-23T08:55:02Z",
    "updated_at": "2018-08-12T18:31:13Z",
    "closed_at": "2018-08-11T15:14:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3675",
      "html_url": "https://github.com/expressjs/express/pull/3675",
      "diff_url": "https://github.com/expressjs/express/pull/3675.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3675.patch",
      "merged_at": null
    },
    "body": "Proposing this new method\r\n\r\nhttps://github.com/nodejs/node/issues/21482\r\n\r\nor maybe we could have a breaking change for express 5, where .listen return a Promise if no callback is given?\r\n\r\nI think it's be great, since doing: \r\n```js\r\nconst server = app.listen(process.env.PORT || 3000);\r\nconsole.log(server.address().port)\r\n```\r\nis unsafe (it can throw since .listen is async, and .address not necessarily available just after)\r\n\r\nbut I guess you'll want to preserve the API chaining style for .listen\r\n\r\nmaybe a `app.ready()` returning a Promise rather?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3675/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3675/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3674",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3674/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3674/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3674/events",
    "html_url": "https://github.com/expressjs/express/issues/3674",
    "id": 333767510,
    "node_id": "MDU6SXNzdWUzMzM3Njc1MTA=",
    "number": 3674,
    "title": "How come only bodyParser.json is exposed?",
    "user": {
      "login": "willowiscool",
      "id": 4335566,
      "node_id": "MDQ6VXNlcjQzMzU1NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4335566?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/willowiscool",
      "html_url": "https://github.com/willowiscool",
      "followers_url": "https://api.github.com/users/willowiscool/followers",
      "following_url": "https://api.github.com/users/willowiscool/following{/other_user}",
      "gists_url": "https://api.github.com/users/willowiscool/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/willowiscool/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/willowiscool/subscriptions",
      "organizations_url": "https://api.github.com/users/willowiscool/orgs",
      "repos_url": "https://api.github.com/users/willowiscool/repos",
      "events_url": "https://api.github.com/users/willowiscool/events{/privacy}",
      "received_events_url": "https://api.github.com/users/willowiscool/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-06-19T17:27:22Z",
    "updated_at": "2018-10-27T17:31:37Z",
    "closed_at": "2018-10-27T17:31:37Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This module depends on body-parser and exposes `bodyParser.json`. However, if someone wanted to get the pure text result of the output, or use another method from body-parser, they'd have to install it themselves. Why not just expose all of the functions and save the user an extra install? Or not expose anything, and make the module lighter?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3674/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3674/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3673",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3673/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3673/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3673/events",
    "html_url": "https://github.com/expressjs/express/issues/3673",
    "id": 333299039,
    "node_id": "MDU6SXNzdWUzMzMyOTkwMzk=",
    "number": 3673,
    "title": "Error Handling design question and best practices",
    "user": {
      "login": "officer-rosmarino",
      "id": 7102152,
      "node_id": "MDQ6VXNlcjcxMDIxNTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7102152?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/officer-rosmarino",
      "html_url": "https://github.com/officer-rosmarino",
      "followers_url": "https://api.github.com/users/officer-rosmarino/followers",
      "following_url": "https://api.github.com/users/officer-rosmarino/following{/other_user}",
      "gists_url": "https://api.github.com/users/officer-rosmarino/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/officer-rosmarino/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/officer-rosmarino/subscriptions",
      "organizations_url": "https://api.github.com/users/officer-rosmarino/orgs",
      "repos_url": "https://api.github.com/users/officer-rosmarino/repos",
      "events_url": "https://api.github.com/users/officer-rosmarino/events{/privacy}",
      "received_events_url": "https://api.github.com/users/officer-rosmarino/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-06-18T14:40:01Z",
    "updated_at": "2018-06-19T14:42:29Z",
    "closed_at": "2018-06-19T14:42:29Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi, I am sorry if this post doesn't follow the rules, but I'm having a hard time finding answers in other places.\r\nI have wandered around the web in order to find a solution to this dilemma.\r\n\r\nI am wondering what are the best practices when dealing with errors in Express.js. In particular, when a particular route is executed and error occurs that needs to be reported to the client, should I deal with the error there on the spot, or always pass it to the error middleware?\r\n\r\nFor instance, if I pass the error to a middleware, I would have something like this:\r\n\r\n```js\r\napp.post('/someapi', (req, res, next) => {\r\n    if(req.params.id == undefined) {\r\n       let err = new Error('ID is not defined');\r\n       return next(err);\r\n    }\r\n    // do something otherwise\r\n});\r\n\r\napp.use((err, req, res, next)=>{\r\n   res.status(err.status || 500).send(err);\r\n});\r\n```\r\n\r\nwhen, instead, if I would deal with the error on the spot, I would do something like this:\r\n\r\n```js\r\napp.post('/someapi', (req, res, next) => {\r\n    if(req.params.id == undefined) {\r\n       let err = new Error('ID is not defined');\r\n       return res.status(ErrorCode).send(err.message);\r\n    }\r\n    // do something otherwise\r\n});\r\n```\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3673/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3673/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3672",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3672/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3672/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3672/events",
    "html_url": "https://github.com/expressjs/express/issues/3672",
    "id": 332772090,
    "node_id": "MDU6SXNzdWUzMzI3NzIwOTA=",
    "number": 3672,
    "title": "ETC/HOSTS  makes node express slower",
    "user": {
      "login": "georgioupanayiotis",
      "id": 1752156,
      "node_id": "MDQ6VXNlcjE3NTIxNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1752156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/georgioupanayiotis",
      "html_url": "https://github.com/georgioupanayiotis",
      "followers_url": "https://api.github.com/users/georgioupanayiotis/followers",
      "following_url": "https://api.github.com/users/georgioupanayiotis/following{/other_user}",
      "gists_url": "https://api.github.com/users/georgioupanayiotis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/georgioupanayiotis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/georgioupanayiotis/subscriptions",
      "organizations_url": "https://api.github.com/users/georgioupanayiotis/orgs",
      "repos_url": "https://api.github.com/users/georgioupanayiotis/repos",
      "events_url": "https://api.github.com/users/georgioupanayiotis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/georgioupanayiotis/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 12,
    "created_at": "2018-06-15T13:25:01Z",
    "updated_at": "2018-06-15T14:49:09Z",
    "closed_at": "2018-06-15T14:49:09Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am using Macbook Pro 15 (2013) Retina display and the following scenario happened to me.\r\nIf I change my etc/hosts like this makes express server slower\r\n127.0.0.1\t\tlocalhost \r\n127.0.0.1\t\tnodejs.local\r\n\r\nBut is much better if I have it like this:\r\n127.0.0.1\t\tlocalhost  nodejs.local\r\n\r\nI used this simple express [example](https://github.com/georgioupanayiotis/nodescripts/blob/master/Secure%20tunnels%20to%20localhost/app.js)\r\n\r\n<img src=\"https://github.com/georgioupanayiotis/nodescripts/blob/master/slower-express-webserver.png?raw=true\" width=\"800\"> ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3672/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3672/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  }
]