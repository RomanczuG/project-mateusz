[
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3567",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3567/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3567/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3567/events",
    "html_url": "https://github.com/expressjs/express/issues/3567",
    "id": 297449749,
    "node_id": "MDU6SXNzdWUyOTc0NDk3NDk=",
    "number": 3567,
    "title": "One character route returns undefined",
    "user": {
      "login": "v1adko",
      "id": 11582927,
      "node_id": "MDQ6VXNlcjExNTgyOTI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/11582927?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/v1adko",
      "html_url": "https://github.com/v1adko",
      "followers_url": "https://api.github.com/users/v1adko/followers",
      "following_url": "https://api.github.com/users/v1adko/following{/other_user}",
      "gists_url": "https://api.github.com/users/v1adko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/v1adko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/v1adko/subscriptions",
      "organizations_url": "https://api.github.com/users/v1adko/orgs",
      "repos_url": "https://api.github.com/users/v1adko/repos",
      "events_url": "https://api.github.com/users/v1adko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/v1adko/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-02-15T13:42:20Z",
    "updated_at": "2018-02-15T21:21:57Z",
    "closed_at": "2018-02-15T15:12:37Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello everyone.\r\n\r\nI was trying to implement a pseudo url-shortener with some level of nesting, so I wanted to handle routes like these `https://host.com/a/id`, however Express returns \"undefined\" in request.url (and request.path, request.originalUrl) -> `/undefined/id`;\r\n\r\nIt also appears that the issue is only on the first level, `http://host.com/ab/c` or `http://host.com/ab/c/d` work fine.\r\n\r\nI have not found any mention of this restriction in the API documentation, and I think it would be better to throw an error or log a warning in this case, or at least document it if it's a design choice, so possible bug/missing doc here.\r\n\r\nExpress version: 4.16.2\r\nNode version: 8.9.0",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3567/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3567/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3566",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3566/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3566/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3566/events",
    "html_url": "https://github.com/expressjs/express/issues/3566",
    "id": 297243512,
    "node_id": "MDU6SXNzdWUyOTcyNDM1MTI=",
    "number": 3566,
    "title": "What are the plans for body parsing?",
    "user": {
      "login": "caaker",
      "id": 22432973,
      "node_id": "MDQ6VXNlcjIyNDMyOTcz",
      "avatar_url": "https://avatars.githubusercontent.com/u/22432973?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/caaker",
      "html_url": "https://github.com/caaker",
      "followers_url": "https://api.github.com/users/caaker/followers",
      "following_url": "https://api.github.com/users/caaker/following{/other_user}",
      "gists_url": "https://api.github.com/users/caaker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/caaker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/caaker/subscriptions",
      "organizations_url": "https://api.github.com/users/caaker/orgs",
      "repos_url": "https://api.github.com/users/caaker/repos",
      "events_url": "https://api.github.com/users/caaker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/caaker/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 98481977,
        "node_id": "MDU6TGFiZWw5ODQ4MTk3Nw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 16,
    "created_at": "2018-02-14T21:00:34Z",
    "updated_at": "2021-03-31T20:50:40Z",
    "closed_at": "2018-02-14T21:06:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I don't know the correct forum for addressing this concern.  So please point me in the right direction if this is not.\r\n\r\nAccording to the changelog for 4.16, express.json() has been added whereas before it was not available.\r\n\r\nSee here:\r\nhttp://expressjs.com/en/changelog/4x.html#4.16.0\r\n\r\n> The express.json() and express.urlencoded() middleware have been added to provide request body parsing support out-of-the-box. This uses the expressjs/body-parser module module underneath, so apps that are currently requiring the module separately can switch to the built-in parsers.\r\n\r\n\r\nHowever after upgrading to\r\n\r\n    \"express\": \"^5.0.0-alpha.2\",\r\n\r\nI can no longer use the built it express.json().\r\n\r\n> Error: Most middleware (like urlencoded) is no longer bundled with Express and must be installed separately. Please see https://github.com/senchalabs/connect#middleware.\r\n\r\n\r\nI'm trying to understand the back and forth and if there is going to be a final choice on whether or not to include it.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3566/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3566/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3565",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3565/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3565/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3565/events",
    "html_url": "https://github.com/expressjs/express/issues/3565",
    "id": 297015577,
    "node_id": "MDU6SXNzdWUyOTcwMTU1Nzc=",
    "number": 3565,
    "title": "Post request flood?",
    "user": {
      "login": "lgund",
      "id": 13957661,
      "node_id": "MDQ6VXNlcjEzOTU3NjYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/13957661?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lgund",
      "html_url": "https://github.com/lgund",
      "followers_url": "https://api.github.com/users/lgund/followers",
      "following_url": "https://api.github.com/users/lgund/following{/other_user}",
      "gists_url": "https://api.github.com/users/lgund/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lgund/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lgund/subscriptions",
      "organizations_url": "https://api.github.com/users/lgund/orgs",
      "repos_url": "https://api.github.com/users/lgund/repos",
      "events_url": "https://api.github.com/users/lgund/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lgund/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-02-14T08:47:11Z",
    "updated_at": "2018-02-15T11:22:28Z",
    "closed_at": "2018-02-15T11:22:27Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Introduction\r\n================\r\nI´ve a nodejs application with express that have some post and get request. The whole website works just fine without problems.\r\n\r\nProblem\r\n============\r\nIf I call the post request to much in time the site will crash. It will not respond to other requests. Doesn´t matter if it´s get or post request. I just can close the tab and open the site in a new one. Then it work again.\r\n\r\nMy Code\r\n===========\r\n\r\n## Client side ##\r\nIt´s a easy post request to set a client permission. There is no callback defined.\r\n\r\n    $.post(\r\n       '/clients/set/client/permission',\r\n       {\r\n          permName: globPermissionTable[permName],\r\n          value: checked,\r\n          id: '<%= data[0].id %>'\r\n       }\r\n    );\r\n\r\n----------\r\n\r\n## Server side ##\r\nJust a easy post segment. Even if I will uncomment all in the request it will be not response.\r\n\r\n    app.post('/clients/set/client/permission', function(req, res) {\r\n\t   // Permissioncheck\r\n\t   /*var permName = req.body.permName, val = req.body.value, id = req.body.id;\r\n\t   if(helper.checkParams([permName, val, id])) {\r\n\t\t     database.SetClientPermissions(parseInt(id), permName, (val === 'true') ? true : false);\r\n\t   };*/\r\n    });",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3565/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3565/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3564",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3564/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3564/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3564/events",
    "html_url": "https://github.com/expressjs/express/issues/3564",
    "id": 296876682,
    "node_id": "MDU6SXNzdWUyOTY4NzY2ODI=",
    "number": 3564,
    "title": "my fault",
    "user": {
      "login": "xmaop",
      "id": 1951444,
      "node_id": "MDQ6VXNlcjE5NTE0NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1951444?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xmaop",
      "html_url": "https://github.com/xmaop",
      "followers_url": "https://api.github.com/users/xmaop/followers",
      "following_url": "https://api.github.com/users/xmaop/following{/other_user}",
      "gists_url": "https://api.github.com/users/xmaop/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xmaop/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xmaop/subscriptions",
      "organizations_url": "https://api.github.com/users/xmaop/orgs",
      "repos_url": "https://api.github.com/users/xmaop/repos",
      "events_url": "https://api.github.com/users/xmaop/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xmaop/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-02-13T20:36:53Z",
    "updated_at": "2018-02-13T20:37:20Z",
    "closed_at": "2018-02-13T20:37:20Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3564/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3564/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3563",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3563/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3563/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3563/events",
    "html_url": "https://github.com/expressjs/express/pull/3563",
    "id": 296872233,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTY4OTQ2MDg5",
    "number": 3563,
    "title": "build: Node.js@9",
    "user": {
      "login": "hiroppy",
      "id": 3367801,
      "node_id": "MDQ6VXNlcjMzNjc4MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3367801?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hiroppy",
      "html_url": "https://github.com/hiroppy",
      "followers_url": "https://api.github.com/users/hiroppy/followers",
      "following_url": "https://api.github.com/users/hiroppy/following{/other_user}",
      "gists_url": "https://api.github.com/users/hiroppy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hiroppy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hiroppy/subscriptions",
      "organizations_url": "https://api.github.com/users/hiroppy/orgs",
      "repos_url": "https://api.github.com/users/hiroppy/repos",
      "events_url": "https://api.github.com/users/hiroppy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hiroppy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-02-13T20:20:29Z",
    "updated_at": "2018-02-13T20:37:57Z",
    "closed_at": "2018-02-13T20:22:12Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3563",
      "html_url": "https://github.com/expressjs/express/pull/3563",
      "diff_url": "https://github.com/expressjs/express/pull/3563.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3563.patch",
      "merged_at": null
    },
    "body": "We'll release Node@10 on Apr 2018 so will add 9(current).\r\nTravis seems to be OK. https://github.com/expressjs/express/blob/master/.travis.yml#L17",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3563/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3563/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3562",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3562/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3562/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3562/events",
    "html_url": "https://github.com/expressjs/express/pull/3562",
    "id": 296711312,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTY4ODI1MjQ4",
    "number": 3562,
    "title": "lint: add semicolons automatically",
    "user": {
      "login": "hiroppy",
      "id": 3367801,
      "node_id": "MDQ6VXNlcjMzNjc4MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3367801?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hiroppy",
      "html_url": "https://github.com/hiroppy",
      "followers_url": "https://api.github.com/users/hiroppy/followers",
      "following_url": "https://api.github.com/users/hiroppy/following{/other_user}",
      "gists_url": "https://api.github.com/users/hiroppy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hiroppy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hiroppy/subscriptions",
      "organizations_url": "https://api.github.com/users/hiroppy/orgs",
      "repos_url": "https://api.github.com/users/hiroppy/repos",
      "events_url": "https://api.github.com/users/hiroppy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hiroppy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-02-13T11:55:45Z",
    "updated_at": "2018-02-13T19:30:10Z",
    "closed_at": "2018-02-13T13:36:23Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3562",
      "html_url": "https://github.com/expressjs/express/pull/3562",
      "diff_url": "https://github.com/expressjs/express/pull/3562.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3562.patch",
      "merged_at": null
    },
    "body": "Used Eslint's fix option.\r\n\r\nAnd I would like to add a `\"semi\": [\"error\", \"always\"]` after #3561  is merged.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3562/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3562/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3561",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3561/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3561/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3561/events",
    "html_url": "https://github.com/expressjs/express/pull/3561",
    "id": 296651462,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTY4NzgxMjY0",
    "number": 3561,
    "title": "lint: rename .eslintrc to .eslintrc.yml",
    "user": {
      "login": "hiroppy",
      "id": 3367801,
      "node_id": "MDQ6VXNlcjMzNjc4MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3367801?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hiroppy",
      "html_url": "https://github.com/hiroppy",
      "followers_url": "https://api.github.com/users/hiroppy/followers",
      "following_url": "https://api.github.com/users/hiroppy/following{/other_user}",
      "gists_url": "https://api.github.com/users/hiroppy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hiroppy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hiroppy/subscriptions",
      "organizations_url": "https://api.github.com/users/hiroppy/orgs",
      "repos_url": "https://api.github.com/users/hiroppy/repos",
      "events_url": "https://api.github.com/users/hiroppy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hiroppy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-02-13T08:32:05Z",
    "updated_at": "2018-02-14T00:11:31Z",
    "closed_at": "2018-02-13T21:46:48Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3561",
      "html_url": "https://github.com/expressjs/express/pull/3561",
      "diff_url": "https://github.com/expressjs/express/pull/3561.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3561.patch",
      "merged_at": null
    },
    "body": "`.eslintrc` is deprecated. \r\nSee https://eslint.org/docs/user-guide/configuring#configuration-file-formats.\r\n\r\nI changed to `.eslintrc.yaml` because Node is using Yaml.(https://github.com/nodejs/node/pull/7699)\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3561/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3561/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3560",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3560/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3560/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3560/events",
    "html_url": "https://github.com/expressjs/express/issues/3560",
    "id": 296236770,
    "node_id": "MDU6SXNzdWUyOTYyMzY3NzA=",
    "number": 3560,
    "title": "Integrate Babel with Express 4.x",
    "user": {
      "login": "kibertoad",
      "id": 1847934,
      "node_id": "MDQ6VXNlcjE4NDc5MzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1847934?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kibertoad",
      "html_url": "https://github.com/kibertoad",
      "followers_url": "https://api.github.com/users/kibertoad/followers",
      "following_url": "https://api.github.com/users/kibertoad/following{/other_user}",
      "gists_url": "https://api.github.com/users/kibertoad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kibertoad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kibertoad/subscriptions",
      "organizations_url": "https://api.github.com/users/kibertoad/orgs",
      "repos_url": "https://api.github.com/users/kibertoad/repos",
      "events_url": "https://api.github.com/users/kibertoad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kibertoad/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 18291,
        "node_id": "MDU6TGFiZWwxODI5MQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1",
        "default": false,
        "description": null
      },
      {
        "id": 163600,
        "node_id": "MDU6TGFiZWwxNjM2MDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "kibertoad",
      "id": 1847934,
      "node_id": "MDQ6VXNlcjE4NDc5MzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1847934?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kibertoad",
      "html_url": "https://github.com/kibertoad",
      "followers_url": "https://api.github.com/users/kibertoad/followers",
      "following_url": "https://api.github.com/users/kibertoad/following{/other_user}",
      "gists_url": "https://api.github.com/users/kibertoad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kibertoad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kibertoad/subscriptions",
      "organizations_url": "https://api.github.com/users/kibertoad/orgs",
      "repos_url": "https://api.github.com/users/kibertoad/repos",
      "events_url": "https://api.github.com/users/kibertoad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kibertoad/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "kibertoad",
        "id": 1847934,
        "node_id": "MDQ6VXNlcjE4NDc5MzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1847934?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kibertoad",
        "html_url": "https://github.com/kibertoad",
        "followers_url": "https://api.github.com/users/kibertoad/followers",
        "following_url": "https://api.github.com/users/kibertoad/following{/other_user}",
        "gists_url": "https://api.github.com/users/kibertoad/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kibertoad/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kibertoad/subscriptions",
        "organizations_url": "https://api.github.com/users/kibertoad/orgs",
        "repos_url": "https://api.github.com/users/kibertoad/repos",
        "events_url": "https://api.github.com/users/kibertoad/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kibertoad/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 25,
    "created_at": "2018-02-11T23:21:32Z",
    "updated_at": "2020-04-04T15:26:21Z",
    "closed_at": "2020-04-04T15:26:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In order to address concerns raised in https://github.com/expressjs/express/issues/2755#issuecomment-279887674, we need a way to make Express 4.x compatible with ES6 changes, should Express 5.x start using it. Easiest way to achieve that is introducing Babel into Express.js build pipeline.\r\n\r\nScope of changes:\r\n\r\n1. Add Babel devDependency (pre-7.0 versions seem to support 0.10);\r\n2. Add npm script that would transpile code to ES5 into /dist folder;\r\n3. Add npm script that would copy over relevant files into /dist folder to replicate original structure of Express.js distribution package;\r\n4. Write a script (worst case scenario - provide instructions) for publishing transpiled version of Express.js.\r\n5. Bonus points if tests get automatically executed after transpiling and would stop entire process on fail.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3560/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3560/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3559",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3559/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3559/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3559/events",
    "html_url": "https://github.com/expressjs/express/issues/3559",
    "id": 296231820,
    "node_id": "MDU6SXNzdWUyOTYyMzE4MjA=",
    "number": 3559,
    "title": "Express.js Resets Connections",
    "user": {
      "login": "DanielRLevine",
      "id": 30180488,
      "node_id": "MDQ6VXNlcjMwMTgwNDg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/30180488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DanielRLevine",
      "html_url": "https://github.com/DanielRLevine",
      "followers_url": "https://api.github.com/users/DanielRLevine/followers",
      "following_url": "https://api.github.com/users/DanielRLevine/following{/other_user}",
      "gists_url": "https://api.github.com/users/DanielRLevine/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DanielRLevine/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DanielRLevine/subscriptions",
      "organizations_url": "https://api.github.com/users/DanielRLevine/orgs",
      "repos_url": "https://api.github.com/users/DanielRLevine/repos",
      "events_url": "https://api.github.com/users/DanielRLevine/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DanielRLevine/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-02-11T22:21:44Z",
    "updated_at": "2018-02-13T16:04:08Z",
    "closed_at": "2018-02-11T22:58:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have a really, really simple Express.js app, but when it experiences a high load of POST requests, it resets the connection for a few of them.\r\n\r\nHere is the app code:\r\n\r\n```\r\nvar http = require(\"http\");\r\nvar express = require(\"express\");\r\nvar BPromise = require(\"bluebird\");\r\n\r\nvar app = express();\r\n\r\nfunction my_route(req, res) {\r\n    var array = [];\r\n    for (var j = 0; j < 1000; ++j)\r\n        array.push(Math.random());\r\n    array.sort();\r\n\r\n    BPromise.resolve(true)\r\n    .then(function(){\r\n        res.send(true);\r\n    });\r\n}\r\n\r\napp.use(\"/\", my_route);\r\n\r\nvar server = http.createServer(app);\r\nserver.listen(1390, function() {\r\n    console.log(\"Launched server.\");\r\n});\r\n```\r\n\r\nI have this code running in cluster mode (via PM2) behind a very run-of-the-mill NGINX reverse proxy. To test the configuration, I am hammering it with enough POSTs to fill CPU utilization from a separate server running apache bench:\r\n\r\n`ab -n 600000 -p body.json -c 32 [my public ip address]`\r\n\r\nOut of the 600000 requests sent, maybe 1-4 come back with non-2xx responses every couple of trials. The Nginx logs have the following error:\r\n\r\n`recv() failed (104: Connection reset by peer) while reading response header from upstream`\r\n\r\nThe error that Nginx is providing tells me that the problem lies not with Nginx, but with Express, Node, or Bluebird.\r\n\r\nCan anyone help me figure out why Express is hanging up the phone? Thank you so much for your help!\r\n\r\nHere is my precise configuration:\r\n- **App Server:** Linux 4.4.0-112-generic x86_64; Ubuntu 16.04.3; 8 Cores w/ 15 GB of memory\r\n   - **Nginx:** 1.13.8\r\n   - **Node:** 8.9.4\r\n   - **Express:** 4.16.2\r\n   - **Bluebird:** 3.5.1\r\n- **Test Server:** Linux 4.4.0-112-generic x86_64; Ubuntu 16.04.3; 4 Cores w/ 4 GB of memory\r\n  - **Apache Bench:** 2.3\r\n\r\n**Nginx Files**\r\n/etc/nginx/nginx.conf:\r\n\r\n```\r\nuser                nginx;\r\nworker_processes    auto;\r\n\r\nerror_log           /var/log/nginx/error.log warn;\r\npid                 /var/run/nginx.pid;\r\n\r\nevents {\r\n    worker_connections  1024;\r\n}\r\n\r\nhttp {\r\n    include                 /etc/nginx/mime.types;\r\n    default_type            application/octet-stream;\r\n\r\n    log_format              main    '$remote_addr - $remote_user [$time_local] \"$request\" '\r\n                                    '$status $body_bytes_sent \"$http_referer\" '\r\n                                    '\"$http_user_agent\" \"$http_x_forwarded_for\"';\r\n\r\n    access_log              /var/log/nginx/access.log  main;\r\n\r\n    keepalive_timeout       0;\r\n\r\n    underscores_in_headers  on;\r\n\r\n    include                 /etc/nginx/conf.d/*.conf;\r\n}\r\n```\r\n\r\n/etc/nginx/conf.d/[my public ip address].conf:\r\n\r\n```\r\nupstream api_upstream\r\n{\r\n    server      localhost:1390;\r\n    keepalive   64;\r\n}\r\n\r\nserver\r\n{\r\n    listen          80 default_server;\r\n    server_name     [my public ip address];\r\n\r\n    location /\r\n    {\r\n        proxy_set_header    Host $host;\r\n        proxy_http_version  1.1;\r\n        proxy_set_header    Connection \"\";\r\n        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;\r\n        proxy_set_header    X-Forwarded-Proto $scheme;\r\n        proxy_pass          http://api_upstream/;\r\n    }\r\n}\r\n```\r\n\r\nThank you again!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3559/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3559/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3558",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3558/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3558/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3558/events",
    "html_url": "https://github.com/expressjs/express/issues/3558",
    "id": 296217942,
    "node_id": "MDU6SXNzdWUyOTYyMTc5NDI=",
    "number": 3558,
    "title": "wrongly placed colon",
    "user": {
      "login": "williamolojede",
      "id": 23551907,
      "node_id": "MDQ6VXNlcjIzNTUxOTA3",
      "avatar_url": "https://avatars.githubusercontent.com/u/23551907?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/williamolojede",
      "html_url": "https://github.com/williamolojede",
      "followers_url": "https://api.github.com/users/williamolojede/followers",
      "following_url": "https://api.github.com/users/williamolojede/following{/other_user}",
      "gists_url": "https://api.github.com/users/williamolojede/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/williamolojede/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/williamolojede/subscriptions",
      "organizations_url": "https://api.github.com/users/williamolojede/orgs",
      "repos_url": "https://api.github.com/users/williamolojede/repos",
      "events_url": "https://api.github.com/users/williamolojede/events{/privacy}",
      "received_events_url": "https://api.github.com/users/williamolojede/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-02-11T19:33:54Z",
    "updated_at": "2018-02-11T20:26:32Z",
    "closed_at": "2018-02-11T20:26:18Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I think this isn't any serious issue but there is a wrongly placed `;` on [line 87](https://github.com/expressjs/express/blob/d2e6e3381ccbabfe300166afc75c432aee961ece/lib/express.js#L87) of `lib/express.js` which should be at the end of [line 81](https://github.com/expressjs/express/blob/d2e6e3381ccbabfe300166afc75c432aee961ece/lib/express.js#L87). At first glance `;[` seemed like a pattern in javascript I don't know of. If i'm right i'll be glad to raise a PR to fix this tiny error.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3558/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3558/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3557",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3557/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3557/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3557/events",
    "html_url": "https://github.com/expressjs/express/issues/3557",
    "id": 295906656,
    "node_id": "MDU6SXNzdWUyOTU5MDY2NTY=",
    "number": 3557,
    "title": "Unable to use express with node v9.x",
    "user": {
      "login": "madhavanmalolan",
      "id": 2111253,
      "node_id": "MDQ6VXNlcjIxMTEyNTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2111253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/madhavanmalolan",
      "html_url": "https://github.com/madhavanmalolan",
      "followers_url": "https://api.github.com/users/madhavanmalolan/followers",
      "following_url": "https://api.github.com/users/madhavanmalolan/following{/other_user}",
      "gists_url": "https://api.github.com/users/madhavanmalolan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/madhavanmalolan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/madhavanmalolan/subscriptions",
      "organizations_url": "https://api.github.com/users/madhavanmalolan/orgs",
      "repos_url": "https://api.github.com/users/madhavanmalolan/repos",
      "events_url": "https://api.github.com/users/madhavanmalolan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/madhavanmalolan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-02-09T15:23:43Z",
    "updated_at": "2018-02-09T15:41:45Z",
    "closed_at": "2018-02-09T15:41:45Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have an Ubuntu box with node v 9.5.0 Npm 5.6.0\r\nI get the following error for any express command\r\n\r\n```\r\n$ express -h \r\nmodule.js:557\r\n    throw err;\r\n    ^\r\n\r\nError: Cannot find module 'commander'\r\n    at Function.Module._resolveFilename (module.js:555:15)\r\n    at Function.Module._load (module.js:482:25)\r\n    at Module.require (module.js:604:17)\r\n    at require (internal/module.js:11:18)\r\n    at Object.<anonymous> (/usr/lib/nodejs/express-generator/bin/express:3:15)\r\n    at Module._compile (module.js:660:30)\r\n    at Object.Module._extensions..js (module.js:671:10)\r\n    at Module.load (module.js:573:32)\r\n    at tryModuleLoad (module.js:513:12)\r\n    at Function.Module._load (module.js:505:3)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3557/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3557/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3556",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3556/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3556/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3556/events",
    "html_url": "https://github.com/expressjs/express/issues/3556",
    "id": 295871556,
    "node_id": "MDU6SXNzdWUyOTU4NzE1NTY=",
    "number": 3556,
    "title": "How to access NodeJS KeepAlive",
    "user": {
      "login": "markfermor",
      "id": 428098,
      "node_id": "MDQ6VXNlcjQyODA5OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/428098?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markfermor",
      "html_url": "https://github.com/markfermor",
      "followers_url": "https://api.github.com/users/markfermor/followers",
      "following_url": "https://api.github.com/users/markfermor/following{/other_user}",
      "gists_url": "https://api.github.com/users/markfermor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markfermor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markfermor/subscriptions",
      "organizations_url": "https://api.github.com/users/markfermor/orgs",
      "repos_url": "https://api.github.com/users/markfermor/repos",
      "events_url": "https://api.github.com/users/markfermor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markfermor/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-02-09T13:30:38Z",
    "updated_at": "2018-02-09T14:02:57Z",
    "closed_at": "2018-02-09T14:02:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm not sure how or if it's even possible to use https://nodejs.org/docs/latest-v8.x/api/http.html#http_request_setsocketkeepalive_enable_initialdelay\r\n\r\nI'm interested in being able to do something like\r\n```\r\n    if (req.headers['via'].incudes('random')) {\r\n      req.setSocketKeepAlive(true, 1000)\r\n    }\r\n```\r\n\r\nThe point being I'd like to be able to change the HTTP Keep Alive behaviour per request based on the content of the request being sent. Obviously the above doesn't work, is there a way to do it?\r\n\r\nI can use https://nodejs.org/docs/latest-v8.x/api/http.html#http_server_keepalivetimeout as a setting for any/all requests, but I'm wondering if I don't have to do that, and could instead do it on a per request basis?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3556/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3556/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3555",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3555/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3555/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3555/events",
    "html_url": "https://github.com/expressjs/express/issues/3555",
    "id": 295218898,
    "node_id": "MDU6SXNzdWUyOTUyMTg4OTg=",
    "number": 3555,
    "title": "node http code change could have major effect on express",
    "user": {
      "login": "WORMSS",
      "id": 1384537,
      "node_id": "MDQ6VXNlcjEzODQ1Mzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1384537?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WORMSS",
      "html_url": "https://github.com/WORMSS",
      "followers_url": "https://api.github.com/users/WORMSS/followers",
      "following_url": "https://api.github.com/users/WORMSS/following{/other_user}",
      "gists_url": "https://api.github.com/users/WORMSS/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WORMSS/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WORMSS/subscriptions",
      "organizations_url": "https://api.github.com/users/WORMSS/orgs",
      "repos_url": "https://api.github.com/users/WORMSS/repos",
      "events_url": "https://api.github.com/users/WORMSS/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WORMSS/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 18291,
        "node_id": "MDU6TGFiZWwxODI5MQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 11,
    "created_at": "2018-02-07T17:09:37Z",
    "updated_at": "2018-02-13T05:25:38Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "In node, commit nodejs/node@a899576c that landed yesterday can have major problems for express if someone does use the IncomingMessage option.\r\n\r\nOn line 31 of request https://github.com/expressjs/express/blob/master/lib/request.js#L31 express references http.IncomingMessage.prototype to extend it with all the express functionality.\r\n\r\nIf someone changes the http IncomingMessage class and doesn't extend IncomingMessage then the reqs will not have any of express functions.\r\n\r\nNot sure why someone would, but they have the option to replicate the whole class without having to extend the real one.\r\n\r\nI haven't tested this yet (I will need to learn how to build node).. but I wanted to give everyone the heads up.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3555/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3555/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3554",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3554/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3554/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3554/events",
    "html_url": "https://github.com/expressjs/express/issues/3554",
    "id": 295136518,
    "node_id": "MDU6SXNzdWUyOTUxMzY1MTg=",
    "number": 3554,
    "title": "Quwstion",
    "user": {
      "login": "Osslack",
      "id": 4053015,
      "node_id": "MDQ6VXNlcjQwNTMwMTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4053015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Osslack",
      "html_url": "https://github.com/Osslack",
      "followers_url": "https://api.github.com/users/Osslack/followers",
      "following_url": "https://api.github.com/users/Osslack/following{/other_user}",
      "gists_url": "https://api.github.com/users/Osslack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Osslack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Osslack/subscriptions",
      "organizations_url": "https://api.github.com/users/Osslack/orgs",
      "repos_url": "https://api.github.com/users/Osslack/repos",
      "events_url": "https://api.github.com/users/Osslack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Osslack/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-02-07T13:25:37Z",
    "updated_at": "2018-02-07T15:27:04Z",
    "closed_at": "2018-02-07T13:56:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Removed",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3554/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3554/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3553",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3553/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3553/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3553/events",
    "html_url": "https://github.com/expressjs/express/issues/3553",
    "id": 294721273,
    "node_id": "MDU6SXNzdWUyOTQ3MjEyNzM=",
    "number": 3553,
    "title": "Add VueXpress to wiki::Home.md ## Template Engines",
    "user": {
      "login": "do-web",
      "id": 862783,
      "node_id": "MDQ6VXNlcjg2Mjc4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/862783?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/do-web",
      "html_url": "https://github.com/do-web",
      "followers_url": "https://api.github.com/users/do-web/followers",
      "following_url": "https://api.github.com/users/do-web/following{/other_user}",
      "gists_url": "https://api.github.com/users/do-web/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/do-web/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/do-web/subscriptions",
      "organizations_url": "https://api.github.com/users/do-web/orgs",
      "repos_url": "https://api.github.com/users/do-web/repos",
      "events_url": "https://api.github.com/users/do-web/events{/privacy}",
      "received_events_url": "https://api.github.com/users/do-web/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-02-06T11:15:12Z",
    "updated_at": "2018-10-15T00:34:36Z",
    "closed_at": "2018-10-15T00:34:36Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "A server side rendering engine for express.js. Use .vue files as your express.js templates.\r\n\r\nhttps://github.com/vuexpress/vuexpress",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3553/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3553/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3552",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3552/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3552/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3552/events",
    "html_url": "https://github.com/expressjs/express/issues/3552",
    "id": 294540339,
    "node_id": "MDU6SXNzdWUyOTQ1NDAzMzk=",
    "number": 3552,
    "title": "Memory Leak",
    "user": {
      "login": "nickydonna",
      "id": 1228656,
      "node_id": "MDQ6VXNlcjEyMjg2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1228656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nickydonna",
      "html_url": "https://github.com/nickydonna",
      "followers_url": "https://api.github.com/users/nickydonna/followers",
      "following_url": "https://api.github.com/users/nickydonna/following{/other_user}",
      "gists_url": "https://api.github.com/users/nickydonna/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nickydonna/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nickydonna/subscriptions",
      "organizations_url": "https://api.github.com/users/nickydonna/orgs",
      "repos_url": "https://api.github.com/users/nickydonna/repos",
      "events_url": "https://api.github.com/users/nickydonna/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nickydonna/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 59,
    "created_at": "2018-02-05T20:59:57Z",
    "updated_at": "2020-07-11T15:14:15Z",
    "closed_at": "2018-04-14T16:17:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "We've been experiencing a memory leak in our node servers. Over the course of a day or so the memory in our servers started to fill until we got an alert and had to restart the app. We added new relic to check the node VM memory:\r\n\r\n![image](https://user-images.githubusercontent.com/1228656/35828034-e3d5a6d2-0a9c-11e8-8ef4-77bf69dc1090.png)\r\n\r\nUpon debugging and testing we've come to the conclusion that the leak could be in express. We did some test on a clean express server, printing the heap before and after a lot of request and we see the memory increasing but never going back to the initial value.\r\n\r\nWe tested on various versions of Node and two versions of express (4.16.2 and 4.14.1) and we had the same results.\r\n\r\nI'll add the last test setup so you can reproduce it.\r\n\r\nTested on OSX 10.12.6\r\nNode 7.6.0\r\nExpress 4.16.1\r\n\r\nCode \r\n```\r\nvar express = require('express');\r\n\r\nvar app = express();\r\n\r\napp.get('/', function(req, res) {\r\n  res.status(200).send('asdf');\r\n  res.end();\r\n});\r\n\r\nfunction generateHeapDumpAndStats() {\r\n  //1. Force garbage collection every time this function is called\r\n  try {\r\n    global.gc();\r\n  } catch (e) {\r\n    console.log(\"You must run program with 'node --expose-gc'\");\r\n    process.exit();\r\n  }\r\n\r\n  //2. Output Heap stats\r\n  var heapUsed = process.memoryUsage().heapUsed;\r\n  console.log('Program is using ' + heapUsed + ' bytes of Heap.');\r\n}\r\n\r\nconst PORT = process.env.PORT || 9000;\r\n\r\napp.listen(PORT, function() {\r\n  console.log(`App listening on port ${PORT}!`);\r\n});\r\n\r\nsetInterval(generateHeapDumpAndStats, 3000);\r\n\r\n```\r\n\r\nrun with `node --expose-gc server.js`\r\n\r\nautocannon command `autocannon -a100000 -c5  http://localhost:9000/`\r\n\r\nResults:\r\n\r\n<img width=\"745\" alt=\"screen shot 2018-02-05 at 17 54 44\" src=\"https://user-images.githubusercontent.com/1228656/35828372-01003654-0a9e-11e8-95ca-899450cf9f20.png\">\r\n\r\n\r\nThis is just one of the many test we made, all with similar results\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3552/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3552/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3551",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3551/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3551/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3551/events",
    "html_url": "https://github.com/expressjs/express/issues/3551",
    "id": 293890860,
    "node_id": "MDU6SXNzdWUyOTM4OTA4NjA=",
    "number": 3551,
    "title": "How do I send authorization header with remote redirect?",
    "user": {
      "login": "simonl65",
      "id": 14094202,
      "node_id": "MDQ6VXNlcjE0MDk0MjAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/14094202?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simonl65",
      "html_url": "https://github.com/simonl65",
      "followers_url": "https://api.github.com/users/simonl65/followers",
      "following_url": "https://api.github.com/users/simonl65/following{/other_user}",
      "gists_url": "https://api.github.com/users/simonl65/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simonl65/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simonl65/subscriptions",
      "organizations_url": "https://api.github.com/users/simonl65/orgs",
      "repos_url": "https://api.github.com/users/simonl65/repos",
      "events_url": "https://api.github.com/users/simonl65/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simonl65/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-02-02T13:38:01Z",
    "updated_at": "2020-05-04T22:37:04Z",
    "closed_at": "2018-02-02T16:00:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\r\n\r\nI understand that automatically copying the authorization header to a remote redirection has a potential security issue, but is there a way to allow this for a whitelist? My requirement is to send a JWT when redirecting from my login server back to my application server. My current code is similar to this (on my login server):\r\n\r\n```javascript\r\nres.header( 'x-authorization', \"Bearer \" + JWT );\r\nres.redirect(307, 'http://appServer:5001/?key=value' );\r\n```\r\n\r\nCheers,\r\nSimon",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3551/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3551/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3550",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3550/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3550/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3550/events",
    "html_url": "https://github.com/expressjs/express/issues/3550",
    "id": 293821248,
    "node_id": "MDU6SXNzdWUyOTM4MjEyNDg=",
    "number": 3550,
    "title": "Move view logic into separate npm package.",
    "user": {
      "login": "Ferrus91",
      "id": 6558072,
      "node_id": "MDQ6VXNlcjY1NTgwNzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6558072?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ferrus91",
      "html_url": "https://github.com/Ferrus91",
      "followers_url": "https://api.github.com/users/Ferrus91/followers",
      "following_url": "https://api.github.com/users/Ferrus91/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ferrus91/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ferrus91/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ferrus91/subscriptions",
      "organizations_url": "https://api.github.com/users/Ferrus91/orgs",
      "repos_url": "https://api.github.com/users/Ferrus91/repos",
      "events_url": "https://api.github.com/users/Ferrus91/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ferrus91/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 163600,
        "node_id": "MDU6TGFiZWwxNjM2MDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-02-02T09:17:17Z",
    "updated_at": "2020-04-16T00:05:19Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I a wondering if it might be possible to separate View.js into a separate npm repository. It is already possible to change the default View code, and the View.js file doesn't have any shared imports from other parts of the file. I would find it quite useful for a personal project to be able to use this separately.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3550/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3550/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3549",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3549/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3549/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3549/events",
    "html_url": "https://github.com/expressjs/express/issues/3549",
    "id": 293277458,
    "node_id": "MDU6SXNzdWUyOTMyNzc0NTg=",
    "number": 3549,
    "title": "Cannot process simple post process - getting Cannot POST error message",
    "user": {
      "login": "01Kuzma",
      "id": 569504,
      "node_id": "MDQ6VXNlcjU2OTUwNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/569504?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/01Kuzma",
      "html_url": "https://github.com/01Kuzma",
      "followers_url": "https://api.github.com/users/01Kuzma/followers",
      "following_url": "https://api.github.com/users/01Kuzma/following{/other_user}",
      "gists_url": "https://api.github.com/users/01Kuzma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/01Kuzma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/01Kuzma/subscriptions",
      "organizations_url": "https://api.github.com/users/01Kuzma/orgs",
      "repos_url": "https://api.github.com/users/01Kuzma/repos",
      "events_url": "https://api.github.com/users/01Kuzma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/01Kuzma/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-01-31T19:12:38Z",
    "updated_at": "2018-02-01T17:15:40Z",
    "closed_at": "2018-01-31T22:23:48Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi there!\r\nI'm trying to process data from simple contact form.\r\nI run React.js + Node.js + Nademailer + Express.js\r\nI've followed few tutorials, but I'm getting `Cannot POST /contact`\r\n\r\nThe Contact Form which is inside **FooterDiv.js** looks like:\r\n\r\n```\r\n    import React from 'react';\r\n    import ReactDOM from 'react-dom';\r\n    import { translate } from 'react-i18next';\r\n    import {NavLink} from 'react-router-dom';\r\n    import { ModalRoute } from 'react-router-modal';\r\n    import { Link } from 'react-router-dom';\r\n    \r\n    function Contact(props) {\r\n        const { t } = props;\r\n    \r\n        return (\r\n            <form className=\"contact-form\" method=\"post\" action=\"/contact\">\r\n                <div className=\"form-field\">\r\n                    <label htmlFor=\"name\">\r\n                        <div className=\"label-content\">{t('Name')}:</div>\r\n                        <input type=\"text\" name=\"name\" required />\r\n                    </label>\r\n                </div>\r\n    \r\n                <div className=\"form-field\">\r\n                    <label htmlFor=\"email\">\r\n                        <div className=\"label-content\">{t('Email')}:</div>\r\n                        <input type=\"email\" name=\"email\" required />\r\n                    </label>\r\n                </div>\r\n    \r\n                <div className=\"form-field\">\r\n                    <label htmlFor=\"message\">\r\n                        <div className=\"label-content\">{t('Message')}:</div>\r\n                        <textarea className=\"stretch\" name=\"message\" rows=\"5\" required />\r\n                    </label>\r\n                </div>\r\n    \r\n                <button type=\"submit\">{t('Send')}</button>\r\n    \r\n                <div>\r\n                    {window.location.hash === '#success' &&\r\n                        <div id=\"success\">\r\n                            <p>{t('Your message has been sent!')}</p>\r\n                        </div>\r\n                    }\r\n                    {window.location.hash === '#error' &&\r\n                        <div id=\"error\">\r\n                            <p>{t('An error occured while submitting the form.')}</p>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n    \r\n    \r\n    const ExtendedContact = translate()(Contact);\r\n    class FooterDiv extends React.Component {\r\n    \r\n        render() {\r\n            const { t, i18n } = this.props;\r\n    \r\n            var lang = this.props.lang;\r\n    \r\n            const changeLanguage = (lng) => {\r\n                i18n.changeLanguage(lng);\r\n            }\r\n    \r\n            return (\r\n                <div className=\"container\" id=\"contacts\">\r\n                    <ModalRoute component={ExtendedContact} path={`/:lng?/contact`} parentPath={`/${lang}/`} />\r\n                </div>            \r\n            )\r\n        }\r\n    }\r\n    \r\n    module.exports = translate()(FooterDiv);\r\n```\r\n\r\nThe **server.js**:\r\n\r\n```\r\n    var nodemailer = require('nodemailer');\r\n    var transporter = nodemailer.createTransport({\r\n        host: 'host',\r\n        port: 465,\r\n        secure: true, // use TLS\r\n        auth: {\r\n            user: \"mailer@\",\r\n            pass: \"pass\"\r\n        }\r\n    });\r\n    \r\n    var path = require('path');\r\n    var express = require('express');\r\n    var bodyParser = require('body-parser');\r\n    var app = express();\r\n    \r\n    const compression = require('compression');\r\n    \r\n    \r\n    app.use(express.static(__dirname + '/src'));\r\n    \r\n    \r\n    app.use(bodyParser.urlencoded({extended: false}));\r\n    app.use(bodyParser.json());\r\n    \r\n    \r\n    app.get('/', (req, res) => {\r\n        res.render('contact-form');\r\n        res.sendfile('index.html')\r\n      })\r\n    app.post('/:lang*?/contact', function(req, res) {\r\n        console.log('server contact');   \r\n        var lang = req.params.lang;\r\n        if (lang === undefined) {\r\n            lang = \"en\"\r\n        }\r\n    \r\n       var name = req.body.name;\r\n       var email = req.body.email;\r\n       var message = req.body.message;\r\n       var htmlData = name + email + message;\r\n       res.send(htmlData);\r\n       console.log(htmlData);  \r\n       \r\n      var mailOptions = {\r\n          from: '\"'+req.body.name+'\" <'+req.body.email+'>', // sender address\r\n          to: 'mail.com', // list of receivers\r\n          subject: 'Test Mail', // Subject line\r\n          text: req.body.message, // plaintext body\r\n          html: '<b>'+req.body.message+'</b>' // html body\r\n      };\r\n      \r\n      transporter.sendMail(mailOptions, function(error, info){\r\n          if(error){\r\n            console.log('Error occurred');\r\n            console.log(error.message);\r\n            res.redirect('/#error');\r\n          }\r\n          console.log('Message sent: ' + info.response);\r\n          res.redirect('/#success');\r\n    \r\n      });  \r\n      \r\n    });\r\n    \r\n    app.set('port', (process.env.PORT || 3000));\r\n    \r\n    app.listen(app.get('port'), function() {\r\n      console.log('Server started on: ' + app.get('port'));\r\n    });\r\n```\r\n\r\n\r\n**Here is my **WebPack** config**:\r\n\r\n```\r\n    const path = require('path');\r\n    const webpack = require('webpack');\r\n    const HtmlWebpackPlugin = require('html-webpack-plugin');\r\n    const ExtractTextPlugin = require('extract-text-webpack-plugin');\r\n    const autoprefixer = require('autoprefixer');\r\n    const staticSourcePath = path.join(__dirname, 'static');\r\n    const sourcePath = path.join(__dirname);\r\n    const buildPath = path.join(__dirname, 'dist');\r\n    const HtmlCriticalPlugin = require(\"html-critical-webpack-plugin\");\r\n    \r\n    module.exports = {\r\n    \r\n        devtool: 'source-map',\r\n        devServer: {\r\n            historyApiFallback: true,\r\n            contentBase: './src'\t\t\r\n        },\r\n    \t\r\n        entry: {\r\n            vendor:  ['...'],    \t\t    \t\t \t\t\r\n            base: ['...'],\r\n    \t\tentry: [\"babel-polyfill\", './src/index.js']\r\n        },\r\n        output: {\r\n            path: path.join(__dirname, 'dist'),\r\n            filename: '[name].[chunkhash].js',\r\n            publicPath: '/'\r\n        },\r\n        resolve: {\r\n            extensions: ['.webpack-loader.js', '.web-loader.js', '.loader.js', '.js', '.jsx'],\r\n            modules: [\r\n                 path.join(__dirname, 'node_modules')\r\n            ],        \r\n        },\r\n        plugins: [\r\n\r\n            new webpack.DefinePlugin({\r\n               ...\r\n        module: {\r\n    \r\n            rules: [{\r\n                    test: /\\.(js|jsx)$/,\r\n                    exclude: /node_modules/,\r\n                    use: {\r\n                        loader: 'babel-loader',\r\n                        options: {\r\n                            presets: ['env', 'react', 'stage-1'],\r\n                        }\r\n                    },\r\n                    include: sourcePath\r\n                },\t\r\n    \r\n                {\r\n                    test: /\\.(png|jpg|gif)$/,\r\n                    use: [{\r\n                        loader: 'url-loader?limit=10000&name=[path][name].[ext]?[hash]',\r\n                    }]\r\n                }\r\n    \r\n            ]\r\n        }\r\n    \r\n    };\r\n```\r\n\r\n The Port numbers of app and server are different\r\n \r\n**package.json**:\r\n\r\n```\r\n  \"main\": \"src/index.js\",\r\n  \"scripts\": {\r\n    \"start\": \"start npm run start:client && start npm run start:server\",\r\n    \"start:client\": \"webpack-dev-server\",\r\n    \"start:server\": \"node server.js\"\r\n  },\r\n  \"proxy\": {\r\n    \"/contact\": {\r\n      \"target\": \"http://localhost:3000\"\r\n    }\r\n  },\r\n\r\n\r\n```\r\n\r\n```\r\n**My structure:**\r\n\r\n    dist <folder> ----  For builds\r\n    node_modules <folder> ----       \r\n    src <folder> \r\n\t    ---components <folder>\r\n        ---css < folder > \r\n        ---fonts < folder >\r\n        ---icons < folder >\r\n        ---img < folder >\r\n        ---js < folder > - third party JS\r\n    .env\r\n    ga.js\r\n    i18n.js\r\n    index.html\r\n    index.js\r\n    myDetector.js\r\n    sitemap.xml\r\n    webpack.config.js\r\n    package.json     \r\n    package-lock.json  \r\n    server.js\r\n\r\n```\r\n \r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3549/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3549/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3548",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3548/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3548/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3548/events",
    "html_url": "https://github.com/expressjs/express/issues/3548",
    "id": 292817417,
    "node_id": "MDU6SXNzdWUyOTI4MTc0MTc=",
    "number": 3548,
    "title": "npm error : Failed to parse package.json data",
    "user": {
      "login": "shahraZd",
      "id": 35964511,
      "node_id": "MDQ6VXNlcjM1OTY0NTEx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35964511?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shahraZd",
      "html_url": "https://github.com/shahraZd",
      "followers_url": "https://api.github.com/users/shahraZd/followers",
      "following_url": "https://api.github.com/users/shahraZd/following{/other_user}",
      "gists_url": "https://api.github.com/users/shahraZd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shahraZd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shahraZd/subscriptions",
      "organizations_url": "https://api.github.com/users/shahraZd/orgs",
      "repos_url": "https://api.github.com/users/shahraZd/repos",
      "events_url": "https://api.github.com/users/shahraZd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shahraZd/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-01-30T15:09:06Z",
    "updated_at": "2018-07-18T16:31:59Z",
    "closed_at": "2018-01-31T20:34:47Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "Can anyone help me please i tried `npm cache clean` but didn't work for me... this is what my package.json looks like \r\n`\r\n{\r\n    \"name\": \"app-name\",\r\n    \"version\": \"0.1.0\",\r\n    \"description\": \"My Description\",\r\n    \"engines\": {\r\n      \"node\": \"6.11.1\"\r\n    },\r\n    \"main\": \"server.js\",\r\n    \"scripts\": {\r\n      \"start\": \"node server.js\"\r\n    },\r\n    \"dependencies\": {\r\n      \"body-parser\": \"^1.15.2\",\r\n      \"cors\": \"^2.8.0\",\r\n      \"del\": \"2.2.0\",\r\n      \"express\": \"^4.14.0\",\r\n      \"http\": \"0.0.0\",\r\n      \"method-override\": \"^2.3.6\",\r\n      \"morgan\": \"^1.7.0\"\r\n    }\r\n  }\r\n`\r\nand this is the error occured after `npm install`\r\n`\r\nnpm ERR! file C:\\Users\\Toshiba\\Desktop\\ionicproj\\server\\package.json\r\nnpm ERR! code EJSONPARSE\r\nnpm ERR! Failed to parse json\r\nnpm ERR! Unexpected token   in JSON at position 4 while parsing near '{npm ERR!     \"name\": \"app-name\"...'\r\nnpm ERR! File: C:\\Users\\Toshiba\\Desktop\\ionicproj\\server\\package.json\r\nnpm ERR! Failed to parse package.json data.\r\nnpm ERR! package.json must be actual JSON, not just JavaScript.\r\nnpm ERR!\r\nnpm ERR! Tell the package author to fix their package.json file. JSON.parse\r\n\r\nnpm ERR! A complete log of this run can be found in:\r\nnpm ERR!     C:\\Users\\Toshiba\\AppData\\Roaming\\npm-cache\\_logs\\2018-01-30T14_34_29_827Z-debug.log\r\n`",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3548/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3548/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3547",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3547/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3547/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3547/events",
    "html_url": "https://github.com/expressjs/express/issues/3547",
    "id": 292730121,
    "node_id": "MDU6SXNzdWUyOTI3MzAxMjE=",
    "number": 3547,
    "title": "How can I return HTML to the browser following POST?",
    "user": {
      "login": "rscharfer",
      "id": 4295997,
      "node_id": "MDQ6VXNlcjQyOTU5OTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4295997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rscharfer",
      "html_url": "https://github.com/rscharfer",
      "followers_url": "https://api.github.com/users/rscharfer/followers",
      "following_url": "https://api.github.com/users/rscharfer/following{/other_user}",
      "gists_url": "https://api.github.com/users/rscharfer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rscharfer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rscharfer/subscriptions",
      "organizations_url": "https://api.github.com/users/rscharfer/orgs",
      "repos_url": "https://api.github.com/users/rscharfer/repos",
      "events_url": "https://api.github.com/users/rscharfer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rscharfer/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2018-01-30T10:29:25Z",
    "updated_at": "2018-02-14T00:46:39Z",
    "closed_at": "2018-02-14T00:46:34Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello, I am not sure this is the right place for this, but I'll try.  I am using (or attempting to use) Express to send HTML back to the browser when a POST request is made. \r\n\r\n`app.post('/course_1', (req,res) => {\r\n\tres.render('postResponseHTML');\r\n})`\r\n\r\nThe Express server seems to be doing its job, but for whatever reason, the browser is not rendering the HTML.\r\n\r\n![norendered](https://user-images.githubusercontent.com/4295997/35561584-09c79f4e-05b1-11e8-8149-01f48b23a52e.PNG)\r\n\r\n\r\nThe POST is made with a fetch request on the client side.  It's supposed to both submit info to the server from a form and then return HTML which will eventually basically say \"thank you.\"\r\n \r\n` fetch(\"/course_1\", {\r\n            method:'POST',\r\n            body:JSON.stringify(form),\r\n            headers:{\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\":\"text/html\"\r\n            },\r\n          credentials: 'same-origin',\r\n        })\r\n        .then((res)=>{\r\n            return res.text()\r\n        }).then(text=>console.log(text)) `\r\n\r\n\r\nAm I just thinking about this incorrectly or is this a bug?\r\n\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3547/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3547/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3546",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3546/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3546/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3546/events",
    "html_url": "https://github.com/expressjs/express/issues/3546",
    "id": 291573498,
    "node_id": "MDU6SXNzdWUyOTE1NzM0OTg=",
    "number": 3546,
    "title": "Test",
    "user": {
      "login": "s3y",
      "id": 935600,
      "node_id": "MDQ6VXNlcjkzNTYwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/935600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s3y",
      "html_url": "https://github.com/s3y",
      "followers_url": "https://api.github.com/users/s3y/followers",
      "following_url": "https://api.github.com/users/s3y/following{/other_user}",
      "gists_url": "https://api.github.com/users/s3y/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s3y/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s3y/subscriptions",
      "organizations_url": "https://api.github.com/users/s3y/orgs",
      "repos_url": "https://api.github.com/users/s3y/repos",
      "events_url": "https://api.github.com/users/s3y/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s3y/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-01-25T13:41:23Z",
    "updated_at": "2018-01-25T17:46:07Z",
    "closed_at": "2018-01-25T14:09:35Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Deleted",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3546/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3546/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3545",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3545/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3545/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3545/events",
    "html_url": "https://github.com/expressjs/express/issues/3545",
    "id": 291280221,
    "node_id": "MDU6SXNzdWUyOTEyODAyMjE=",
    "number": 3545,
    "title": "How to instantiate objects from another model?",
    "user": {
      "login": "mikely-fernanda",
      "id": 9144567,
      "node_id": "MDQ6VXNlcjkxNDQ1Njc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9144567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikely-fernanda",
      "html_url": "https://github.com/mikely-fernanda",
      "followers_url": "https://api.github.com/users/mikely-fernanda/followers",
      "following_url": "https://api.github.com/users/mikely-fernanda/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikely-fernanda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikely-fernanda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikely-fernanda/subscriptions",
      "organizations_url": "https://api.github.com/users/mikely-fernanda/orgs",
      "repos_url": "https://api.github.com/users/mikely-fernanda/repos",
      "events_url": "https://api.github.com/users/mikely-fernanda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikely-fernanda/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-01-24T16:47:59Z",
    "updated_at": "2018-02-14T00:44:57Z",
    "closed_at": "2018-02-14T00:44:53Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Folks, does anyone know how to instantiate objects from another model, being inside a model, eg:\r\n(Gente, alguém sabe como fazer para instanciar objetos de outro model, estando dentro de um model, por ex.:) [PORTUGUÊS BRASILEIRO!!!]\r\n\r\nvar loopback = require('loopback');\r\nvar app = loopback();\r\nvar other_model = app.models('other_model'); // ORRR ==> other_model = app.models.other_model;\r\n\r\nmodule.exports = function(MyModel){\r\n     ...\r\n}\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3545/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3545/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3544",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3544/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3544/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3544/events",
    "html_url": "https://github.com/expressjs/express/issues/3544",
    "id": 291005276,
    "node_id": "MDU6SXNzdWUyOTEwMDUyNzY=",
    "number": 3544,
    "title": "How can I get 2 types of data from a website using \"router.get()\"?",
    "user": {
      "login": "MariusAlba",
      "id": 10845997,
      "node_id": "MDQ6VXNlcjEwODQ1OTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10845997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MariusAlba",
      "html_url": "https://github.com/MariusAlba",
      "followers_url": "https://api.github.com/users/MariusAlba/followers",
      "following_url": "https://api.github.com/users/MariusAlba/following{/other_user}",
      "gists_url": "https://api.github.com/users/MariusAlba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MariusAlba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MariusAlba/subscriptions",
      "organizations_url": "https://api.github.com/users/MariusAlba/orgs",
      "repos_url": "https://api.github.com/users/MariusAlba/repos",
      "events_url": "https://api.github.com/users/MariusAlba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MariusAlba/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-01-23T21:48:58Z",
    "updated_at": "2018-01-23T22:05:34Z",
    "closed_at": "2018-01-23T22:05:29Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello fellow developers.\r\nI am doing scraping on a website and want to display 2 types of data(json format) using the \"Express\" and \"Cheerio\". But I can only get one type of data(json format)\r\n\r\nMy question is, how can I get 2 type of data from the same site but different URL links?\r\nExample :\r\nurl1 : \"https//wiki/\"\r\nurl2 : \"https//wiki/about\"\r\n\r\nMy code:\r\n\r\n```\r\nvar router = express.Router();\r\nvar superagent = require('superagent');\r\nvar cheerio = require('cheerio');\r\n\r\nlet url = 'https://www.cph.dk/flyinformation/ankomster';\r\n\r\nrouter.get('/', function(req, res, next) {\r\n\r\nlet query= {\r\nkeyword:'paris'\r\n}\r\n\r\nsuperagent\r\n.get(url)\r\n.query(query)\r\n.end(function(err, response){\r\nif (err){\r\nres.json({\r\nconfirmation: 'fail',\r\nmessage: err\r\n});\r\n\r\nreturn\r\n}\r\n\r\nvar te = cheerio.load(response.text)\r\nlet ankomster = []\r\nlet flight1 = {}\r\nte('div').each(function(i, element){\r\n\r\nlet className = element.attribs.class\r\nif (className == 'stylish-table__cell flights__table__col--destination'){\r\n\r\nlet div = element.children[2]\r\n\r\n\r\nlet anchor = div.parent.children[1].children[2].parent.children[1].parent.children[1]\r\nlet content = anchor.children[0].data\r\nconsole.log(element.children[0].parent.parent.children[5])\r\n\r\nflight1 = content\r\nif(Object.keys(flight1).length > 0){\r\nankomster.push('Ankomster')\r\nankomster.push(flight1)\r\nflight1 = {}\r\n}\r\n// }\r\n}\r\n})\r\n\r\nres.json(ankomster)\r\n\r\n})\r\n\r\n});\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3544/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3544/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3543",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3543/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3543/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3543/events",
    "html_url": "https://github.com/expressjs/express/pull/3543",
    "id": 290646420,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTY0NDM5Mzgx",
    "number": 3543,
    "title": "Change forEach loop to for loop, reverse, pre-decrement",
    "user": {
      "login": "estrada9166",
      "id": 15656860,
      "node_id": "MDQ6VXNlcjE1NjU2ODYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/15656860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/estrada9166",
      "html_url": "https://github.com/estrada9166",
      "followers_url": "https://api.github.com/users/estrada9166/followers",
      "following_url": "https://api.github.com/users/estrada9166/following{/other_user}",
      "gists_url": "https://api.github.com/users/estrada9166/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/estrada9166/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/estrada9166/subscriptions",
      "organizations_url": "https://api.github.com/users/estrada9166/orgs",
      "repos_url": "https://api.github.com/users/estrada9166/repos",
      "events_url": "https://api.github.com/users/estrada9166/events{/privacy}",
      "received_events_url": "https://api.github.com/users/estrada9166/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2018-01-22T22:58:01Z",
    "updated_at": "2018-09-24T18:21:41Z",
    "closed_at": "2018-09-24T18:21:41Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3543",
      "html_url": "https://github.com/expressjs/express/pull/3543",
      "diff_url": "https://github.com/expressjs/express/pull/3543.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3543.patch",
      "merged_at": null
    },
    "body": "Based on this [benchmark on JsPerf](https://jsperf.com/for-vs-foreach/37), changed the for loop for `for loop, reverse, pre-decrement`",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3543/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3543/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3542",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3542/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3542/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3542/events",
    "html_url": "https://github.com/expressjs/express/pull/3542",
    "id": 290597199,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTY0NDAzMTM3",
    "number": 3542,
    "title": "Add missing semicolons",
    "user": {
      "login": "estrada9166",
      "id": 15656860,
      "node_id": "MDQ6VXNlcjE1NjU2ODYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/15656860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/estrada9166",
      "html_url": "https://github.com/estrada9166",
      "followers_url": "https://api.github.com/users/estrada9166/followers",
      "following_url": "https://api.github.com/users/estrada9166/following{/other_user}",
      "gists_url": "https://api.github.com/users/estrada9166/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/estrada9166/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/estrada9166/subscriptions",
      "organizations_url": "https://api.github.com/users/estrada9166/orgs",
      "repos_url": "https://api.github.com/users/estrada9166/repos",
      "events_url": "https://api.github.com/users/estrada9166/events{/privacy}",
      "received_events_url": "https://api.github.com/users/estrada9166/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-01-22T20:04:01Z",
    "updated_at": "2018-01-22T20:27:07Z",
    "closed_at": "2018-01-22T20:06:58Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3542",
      "html_url": "https://github.com/expressjs/express/pull/3542",
      "diff_url": "https://github.com/expressjs/express/pull/3542.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3542.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3542/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3542/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3541",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3541/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3541/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3541/events",
    "html_url": "https://github.com/expressjs/express/pull/3541",
    "id": 290570821,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTY0MzgzNzg2",
    "number": 3541,
    "title": "EJSON support to parse requests and serialize responses in express",
    "user": {
      "login": "jmulet",
      "id": 5049732,
      "node_id": "MDQ6VXNlcjUwNDk3MzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5049732?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmulet",
      "html_url": "https://github.com/jmulet",
      "followers_url": "https://api.github.com/users/jmulet/followers",
      "following_url": "https://api.github.com/users/jmulet/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmulet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmulet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmulet/subscriptions",
      "organizations_url": "https://api.github.com/users/jmulet/orgs",
      "repos_url": "https://api.github.com/users/jmulet/repos",
      "events_url": "https://api.github.com/users/jmulet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmulet/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-01-22T18:37:18Z",
    "updated_at": "2018-01-22T18:39:20Z",
    "closed_at": "2018-01-22T18:39:11Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3541",
      "html_url": "https://github.com/expressjs/express/pull/3541",
      "diff_url": "https://github.com/expressjs/express/pull/3541.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3541.patch",
      "merged_at": null
    },
    "body": "Is (meteor) EJSON \"extended json\" supported in express? I'm going to explain what I mean.\r\n\r\nI have found straightforward to modify the json bodyparser in order to parse bodies with EJSON.parse.\r\n\r\nHowever, I am struggling when I try to serialize the responses. I have discovered that the method response.json internally uses JSON.stringify. This method is \"hard-coded\" which makes any modification very difficult.\r\n\r\nSo far I have tried to write a middleware which \"proxies\" the method response.json by setting the content-type and converting the object to text with EJSON.stringify. This seems an uggly solution and I am wondering if is there a more elegant solution.\r\n\r\nThanks. ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3541/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3541/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3540",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3540/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3540/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3540/events",
    "html_url": "https://github.com/expressjs/express/pull/3540",
    "id": 290325689,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTY0MjA2NjIx",
    "number": 3540,
    "title": "Update equality (==)  operators for identically (===) operators",
    "user": {
      "login": "estrada9166",
      "id": 15656860,
      "node_id": "MDQ6VXNlcjE1NjU2ODYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/15656860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/estrada9166",
      "html_url": "https://github.com/estrada9166",
      "followers_url": "https://api.github.com/users/estrada9166/followers",
      "following_url": "https://api.github.com/users/estrada9166/following{/other_user}",
      "gists_url": "https://api.github.com/users/estrada9166/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/estrada9166/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/estrada9166/subscriptions",
      "organizations_url": "https://api.github.com/users/estrada9166/orgs",
      "repos_url": "https://api.github.com/users/estrada9166/repos",
      "events_url": "https://api.github.com/users/estrada9166/events{/privacy}",
      "received_events_url": "https://api.github.com/users/estrada9166/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 133578714,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/tests",
        "name": "tests",
        "color": "944008",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2018-01-22T01:16:51Z",
    "updated_at": "2018-02-14T00:31:49Z",
    "closed_at": "2018-02-14T00:31:49Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3540",
      "html_url": "https://github.com/expressjs/express/pull/3540",
      "diff_url": "https://github.com/expressjs/express/pull/3540.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3540.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3540/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3540/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3539",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3539/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3539/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3539/events",
    "html_url": "https://github.com/expressjs/express/issues/3539",
    "id": 290200044,
    "node_id": "MDU6SXNzdWUyOTAyMDAwNDQ=",
    "number": 3539,
    "title": "npm start <filename>",
    "user": {
      "login": "nitikabhanot",
      "id": 24915475,
      "node_id": "MDQ6VXNlcjI0OTE1NDc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/24915475?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nitikabhanot",
      "html_url": "https://github.com/nitikabhanot",
      "followers_url": "https://api.github.com/users/nitikabhanot/followers",
      "following_url": "https://api.github.com/users/nitikabhanot/following{/other_user}",
      "gists_url": "https://api.github.com/users/nitikabhanot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nitikabhanot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nitikabhanot/subscriptions",
      "organizations_url": "https://api.github.com/users/nitikabhanot/orgs",
      "repos_url": "https://api.github.com/users/nitikabhanot/repos",
      "events_url": "https://api.github.com/users/nitikabhanot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nitikabhanot/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-01-20T15:29:26Z",
    "updated_at": "2018-02-14T00:44:35Z",
    "closed_at": "2018-02-14T00:44:29Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "var express = require('express');\r\n\r\nI am just using this much code in my server.js file and after running\r\n\r\nnpm install express successfully. I ran\r\nnpm start server.js then it throws error as:\r\n\r\nmeanproject@1.0.0 start D:\\dinkar\\node_js_installed\\npm_setup\r\nnode server.js \"server.js\"\r\n\r\nD:\\dinkar\\node_js_installed\\npm_setup\\server.js:1\r\n(function (exports, require, module, __filename, __dirname) { ��v\r\n^\r\n\r\nSyntaxError: Invalid or unexpected token\r\nat createScript (vm.js:80:10)\r\nat Object.runInThisContext (vm.js:139:10)\r\nat Module._compile (module.js:599:28)\r\nat Object.Module._extensions..js (module.js:646:10)\r\nat Module.load (module.js:554:32)\r\nat tryModuleLoad (module.js:497:12)\r\nat Function.Module._load (module.js:489:3)\r\nat Function.Module.runMain (module.js:676:10)\r\nat startup (bootstrap_node.js:187:16)\r\nat bootstrap_node.js:608:3\r\nnpm ERR! code ELIFECYCLE\r\nnpm ERR! errno 1\r\nnpm ERR! meanproject@1.0.0 start: node server.js \"server.js\"\r\nnpm ERR! Exit status 1\r\nnpm ERR!\r\nnpm ERR! Failed at the meanproject@1.0.0 start script.\r\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\r\n\r\nnpm ERR! A complete log of this run can be found in:\r\nnpm ERR! C:\\Users\\NITIKA\\AppData\\Roaming\\npm-cache_logs\\2018-01-19T19_51_14_091Z-debug.log\r\nWhy this is happening on simple code? Is something missing in it!\r\nThanks for any kind of suggestions",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3539/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3539/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3538",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3538/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3538/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3538/events",
    "html_url": "https://github.com/expressjs/express/pull/3538",
    "id": 289438474,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTYzNTcxMTQ3",
    "number": 3538,
    "title": "Example updated to ES6 syntax",
    "user": {
      "login": "ImranMH",
      "id": 11268532,
      "node_id": "MDQ6VXNlcjExMjY4NTMy",
      "avatar_url": "https://avatars.githubusercontent.com/u/11268532?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ImranMH",
      "html_url": "https://github.com/ImranMH",
      "followers_url": "https://api.github.com/users/ImranMH/followers",
      "following_url": "https://api.github.com/users/ImranMH/following{/other_user}",
      "gists_url": "https://api.github.com/users/ImranMH/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ImranMH/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ImranMH/subscriptions",
      "organizations_url": "https://api.github.com/users/ImranMH/orgs",
      "repos_url": "https://api.github.com/users/ImranMH/repos",
      "events_url": "https://api.github.com/users/ImranMH/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ImranMH/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-01-17T22:34:53Z",
    "updated_at": "2023-01-03T09:13:18Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3538",
      "html_url": "https://github.com/expressjs/express/pull/3538",
      "diff_url": "https://github.com/expressjs/express/pull/3538.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3538.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3538/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3538/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3537",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3537/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3537/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3537/events",
    "html_url": "https://github.com/expressjs/express/pull/3537",
    "id": 288914932,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTYzMTg0MTgz",
    "number": 3537,
    "title": "Minor proposal",
    "user": {
      "login": "kant",
      "id": 32717,
      "node_id": "MDQ6VXNlcjMyNzE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/32717?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kant",
      "html_url": "https://github.com/kant",
      "followers_url": "https://api.github.com/users/kant/followers",
      "following_url": "https://api.github.com/users/kant/following{/other_user}",
      "gists_url": "https://api.github.com/users/kant/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kant/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kant/subscriptions",
      "organizations_url": "https://api.github.com/users/kant/orgs",
      "repos_url": "https://api.github.com/users/kant/repos",
      "events_url": "https://api.github.com/users/kant/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kant/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-01-16T13:54:42Z",
    "updated_at": "2018-09-13T22:18:22Z",
    "closed_at": "2018-09-13T22:18:22Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3537",
      "html_url": "https://github.com/expressjs/express/pull/3537",
      "diff_url": "https://github.com/expressjs/express/pull/3537.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3537.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3537/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3537/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3536",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3536/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3536/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3536/events",
    "html_url": "https://github.com/expressjs/express/issues/3536",
    "id": 288732367,
    "node_id": "MDU6SXNzdWUyODg3MzIzNjc=",
    "number": 3536,
    "title": "Feature request: ability to set settings per response",
    "user": {
      "login": "bradvogel",
      "id": 821706,
      "node_id": "MDQ6VXNlcjgyMTcwNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/821706?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bradvogel",
      "html_url": "https://github.com/bradvogel",
      "followers_url": "https://api.github.com/users/bradvogel/followers",
      "following_url": "https://api.github.com/users/bradvogel/following{/other_user}",
      "gists_url": "https://api.github.com/users/bradvogel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bradvogel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bradvogel/subscriptions",
      "organizations_url": "https://api.github.com/users/bradvogel/orgs",
      "repos_url": "https://api.github.com/users/bradvogel/repos",
      "events_url": "https://api.github.com/users/bradvogel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bradvogel/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 163600,
        "node_id": "MDU6TGFiZWwxNjM2MDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2018-01-15T22:27:55Z",
    "updated_at": "2020-08-02T22:17:33Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'd like to implement middleware that returns formatted json in the response when `pretty_ouput` is present on the query. I attempted this with the following code:\r\n\r\n```js\r\n  // This code does not work as expected.\r\n  app.use(function(req, res, next) {\r\n    // Querystring `pretty_output` should prettify json output.\r\n    if (req.query['pretty_ouput']) {\r\n      app.set('json spaces', 2); // I'd like to set this only for this one request.\r\n    }\r\n    next();\r\n  });\r\n```\r\n\r\nHowever, subsequent requests without the `pretty_ouput` querystring are also formatted.\r\n\r\nIs there a way to set the setting `json spaces` for only one request? Ideally I could call `res.set('json spaces', 2)` that would set this option for only this one response. I'd think this would be generically useful for any Express option.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3536/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3536/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3535",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3535/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3535/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3535/events",
    "html_url": "https://github.com/expressjs/express/issues/3535",
    "id": 288718835,
    "node_id": "MDU6SXNzdWUyODg3MTg4MzU=",
    "number": 3535,
    "title": "npm ERR! Failed to parse package.json data.",
    "user": {
      "login": "brachael",
      "id": 32996487,
      "node_id": "MDQ6VXNlcjMyOTk2NDg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/32996487?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brachael",
      "html_url": "https://github.com/brachael",
      "followers_url": "https://api.github.com/users/brachael/followers",
      "following_url": "https://api.github.com/users/brachael/following{/other_user}",
      "gists_url": "https://api.github.com/users/brachael/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brachael/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brachael/subscriptions",
      "organizations_url": "https://api.github.com/users/brachael/orgs",
      "repos_url": "https://api.github.com/users/brachael/repos",
      "events_url": "https://api.github.com/users/brachael/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brachael/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-01-15T21:18:54Z",
    "updated_at": "2018-01-15T21:47:07Z",
    "closed_at": "2018-01-15T21:47:07Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "PS C:\\Users\\Bracha\\Desktop\\DM> npm install\r\nnpm ERR! file C:\\Users\\Bracha\\Desktop\\DM\\package.json\r\nnpm ERR! code EJSONPARSE\r\nnpm ERR! Failed to parse json\r\nnpm ERR! Unexpected token < in JSON at position 603 while parsing near '...router\": \"^4.2.4\",\r\nnpm ERR! <<<<<<< HEAD\r\nnpm ERR!     \"a...'\r\nnpm ERR! File: C:\\Users\\Bracha\\Desktop\\DM\\package.json\r\nnpm ERR! Failed to parse package.json data.\r\nnpm ERR! package.json must be actual JSON, not just JavaScript.\r\nnpm ERR!\r\nnpm ERR! Tell the package author to fix their package.json file. JSON.parse\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3535/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3535/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3534",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3534/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3534/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3534/events",
    "html_url": "https://github.com/expressjs/express/issues/3534",
    "id": 288417826,
    "node_id": "MDU6SXNzdWUyODg0MTc4MjY=",
    "number": 3534,
    "title": "Cannot Start Application",
    "user": {
      "login": "oduwareosahon",
      "id": 21036564,
      "node_id": "MDQ6VXNlcjIxMDM2NTY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/21036564?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/oduwareosahon",
      "html_url": "https://github.com/oduwareosahon",
      "followers_url": "https://api.github.com/users/oduwareosahon/followers",
      "following_url": "https://api.github.com/users/oduwareosahon/following{/other_user}",
      "gists_url": "https://api.github.com/users/oduwareosahon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/oduwareosahon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/oduwareosahon/subscriptions",
      "organizations_url": "https://api.github.com/users/oduwareosahon/orgs",
      "repos_url": "https://api.github.com/users/oduwareosahon/repos",
      "events_url": "https://api.github.com/users/oduwareosahon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/oduwareosahon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2018-01-14T15:46:52Z",
    "updated_at": "2018-01-15T16:20:04Z",
    "closed_at": "2018-01-15T16:20:04Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi, \r\nI am new to Express.js and I built a simple application following the guide in the link below:\r\nhttp://mherman.org/blog/2016/03/13/designing-a-restful-api-with-node-and-postgres/#.WltsxqinHIW\r\n\r\nThe initial step of creating an empty project with express (express node-postgres-promises) and running the \"npm install\" followed by \"npm start\" was successful.\r\n\r\n However, after going through the steps to create the application, I tried running it on a Linux Machine with \"npm start\" and I keep getting this error (\"npm install\" was successful):\r\n#\r\n# A fatal error has been detected by the Java Runtime Environment:\r\n#\r\n#  SIGBUS (0x7) at pc=0x00007efff1012f02, pid=1005653, tid=0x00007f002a8b1720\r\n#\r\n# JRE version:  (8.0_144-b01) (build )\r\n# Java VM: Java HotSpot(TM) 64-Bit Server VM (25.144-b01 mixed mode linux-amd64 compressed oops)\r\n# Problematic frame:\r\n# j  java.lang.Object.<clinit>()V+0\r\n#\r\n# Failed to write core dump. Core dumps have been disabled. To enable core dumping, try \"ulimit -c unlimited\" before starting Java again\r\n#\r\n# An error report file with more information is saved as:\r\n# /home/nohaso/node_apps/node-postgres-promises/hs_err_pid1005653.log\r\n#\r\n# If you would like to submit a bug report, please visit:\r\n#   http://bugreport.java.com/bugreport/crash.jsp\r\n#\r\n\r\nThe entire log is attached:\r\n[hs_err_pid1005653.log](https://github.com/expressjs/express/files/1629489/hs_err_pid1005653.log)\r\n\r\nPlease could someone help me with this error.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3534/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3534/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3533",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3533/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3533/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3533/events",
    "html_url": "https://github.com/expressjs/express/issues/3533",
    "id": 288378228,
    "node_id": "MDU6SXNzdWUyODgzNzgyMjg=",
    "number": 3533,
    "title": "EADDRINUSE :::5000. Port is in use, but it's not?",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2018-01-14T03:02:38Z",
    "updated_at": "2018-06-25T17:25:42Z",
    "closed_at": "2018-01-15T15:01:36Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "So I got this error:\r\n```\r\n[DIRECTORY]\\Dev>node .\r\nevents.js:183\r\n      throw er; // Unhandled 'error' event\r\n      ^\r\n\r\nError: listen EADDRINUSE :::5000\r\n    at Object._errnoException (util.js:1024:11)\r\n    at _exceptionWithHostPort (util.js:1046:20)\r\n    at Server.setupListenHandle [as _listen2] (net.js:1351:14)\r\n    at listenInCluster (net.js:1392:12)\r\n    at Server.listen (net.js:1476:7)\r\n    at Function.listen ([DIRECTORY]\\Dev\\node_modules\\express\\lib\\application.js:618:24)\r\n    at Object.<anonymous> ([DIRECTORY]\\Dev\\Server.js:50:5)\r\n    at Module._compile (module.js:635:30)\r\n    at Object.Module._extensions..js (module.js:646:10)\r\n    at Module.load (module.js:554:32)\r\n```\r\nFrom the research I have done, this is because there is a node process still running. There are no node processes running. If I restart my pc, this issue solves. However, I no longer get any console output and the server is not listening as I cannot connect to it.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3533/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3533/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3532",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3532/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3532/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3532/events",
    "html_url": "https://github.com/expressjs/express/issues/3532",
    "id": 288205706,
    "node_id": "MDU6SXNzdWUyODgyMDU3MDY=",
    "number": 3532,
    "title": "Headers Authorization forbidden",
    "user": {
      "login": "Giancarlo1974",
      "id": 15945433,
      "node_id": "MDQ6VXNlcjE1OTQ1NDMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/15945433?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Giancarlo1974",
      "html_url": "https://github.com/Giancarlo1974",
      "followers_url": "https://api.github.com/users/Giancarlo1974/followers",
      "following_url": "https://api.github.com/users/Giancarlo1974/following{/other_user}",
      "gists_url": "https://api.github.com/users/Giancarlo1974/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Giancarlo1974/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Giancarlo1974/subscriptions",
      "organizations_url": "https://api.github.com/users/Giancarlo1974/orgs",
      "repos_url": "https://api.github.com/users/Giancarlo1974/repos",
      "events_url": "https://api.github.com/users/Giancarlo1974/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Giancarlo1974/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-01-12T18:22:27Z",
    "updated_at": "2019-06-25T19:24:15Z",
    "closed_at": "2018-01-15T14:33:12Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "I have created an example for test this bug\r\n\r\nhttps://stackoverflow.com/questions/48231093/how-enable-headers-authorization-into-express",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3532/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3532/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3531",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3531/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3531/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3531/events",
    "html_url": "https://github.com/expressjs/express/issues/3531",
    "id": 288079334,
    "node_id": "MDU6SXNzdWUyODgwNzkzMzQ=",
    "number": 3531,
    "title": "Request object intercepted by AWS ELB healthcheck",
    "user": {
      "login": "mattwoodage",
      "id": 1794057,
      "node_id": "MDQ6VXNlcjE3OTQwNTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1794057?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattwoodage",
      "html_url": "https://github.com/mattwoodage",
      "followers_url": "https://api.github.com/users/mattwoodage/followers",
      "following_url": "https://api.github.com/users/mattwoodage/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattwoodage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattwoodage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattwoodage/subscriptions",
      "organizations_url": "https://api.github.com/users/mattwoodage/orgs",
      "repos_url": "https://api.github.com/users/mattwoodage/repos",
      "events_url": "https://api.github.com/users/mattwoodage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattwoodage/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-01-12T10:48:30Z",
    "updated_at": "2018-01-15T15:06:30Z",
    "closed_at": "2018-01-15T15:06:30Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I've discovered a strange issue causing our express application to fail intermittently - about 1 in 30 refreshes.\r\n\r\nMy react app reads originalUrl from express's req object.  When it breaks it's because this value doesn't match the url of the page i'm looking at.   I traced the break back through react and to the very top of my server code to the initialisation of express and found that the req object at this point was unexpected.\r\n\r\nOn a successful load, if I browsed to /xxx/yyy/zzz   (actual path names changed to protect client)\r\nThe req.url value was /xxx/yyy/zzz and the req.headers user-agent matched my browser\r\n\r\nOn a failed load,\r\nThe req.url object was /xxx and the req.headers object contained:\r\n`'user-agent': 'ELB-HealthChecker/2.0'`\r\n\r\nELB HealthChecker had been set to point to /xxx\r\n\r\nApparently HealthChecker runs once every 30 seconds to check that your application is running.\r\nThis meant that it was running through the express initialisation, and on to our react router and matching on the last route and attempting to process it.\r\n\r\nAdding the following directly after initialising express seems to have solved the problem...\r\n\r\n```\r\napp.get('/xxx', (req, res, next) => {\r\n  res.send('healthcheck') \r\n})\r\n```\r\n\r\nIt means that the healthcheck request matches '/xxx' exactly and returns 'healthcheck' instantly without going any further.  \r\n\r\nBut why?  \r\n\r\nIf I make a client request to the node server, why is my request getting replaced/intercepted/confused(?) with a separate request from ELB HealthCheck?  The above change will mean healthcheck resolves much much faster - but how can it affect the client request?\r\n\r\nHas anyone else experienced this? I'm a node/react developer - I will try to find out more about ELB HealthCheck",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3531/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3531/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3530",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3530/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3530/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3530/events",
    "html_url": "https://github.com/expressjs/express/issues/3530",
    "id": 288053457,
    "node_id": "MDU6SXNzdWUyODgwNTM0NTc=",
    "number": 3530,
    "title": "Unable to set charset when downloading file",
    "user": {
      "login": "aGoncharuks",
      "id": 16766554,
      "node_id": "MDQ6VXNlcjE2NzY2NTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/16766554?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aGoncharuks",
      "html_url": "https://github.com/aGoncharuks",
      "followers_url": "https://api.github.com/users/aGoncharuks/followers",
      "following_url": "https://api.github.com/users/aGoncharuks/following{/other_user}",
      "gists_url": "https://api.github.com/users/aGoncharuks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aGoncharuks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aGoncharuks/subscriptions",
      "organizations_url": "https://api.github.com/users/aGoncharuks/orgs",
      "repos_url": "https://api.github.com/users/aGoncharuks/repos",
      "events_url": "https://api.github.com/users/aGoncharuks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aGoncharuks/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-01-12T09:17:08Z",
    "updated_at": "2022-05-20T16:43:10Z",
    "closed_at": "2018-01-19T15:30:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\r\n\r\nI faced a problem being unable to set charset to downloaded file.\r\nHere is what I need to achieve when typing  \"file -i myfile.txt\" in terminal after downloading file from Nodejs server using res.download() method:\r\n\r\n`myfile.txt: text/plain; charset=iso-8859-1`\r\n\r\nHere is what I see instead:\r\n\r\n`myfile.txt: text/plain; charset=utf-8`\r\n\r\nExpress.js version is 4.13.3.\r\n\r\nNode.js version used in project is older than 6.4.0, so there is no 'latin-1' charset support out of the box. I'm encoding file content in iso-8859-1 with [iconv-lite](https://www.npmjs.com/package/iconv-lite) library, but have tried other methods as well. It seems like problem is not in file content encoding that is set correctly, but in file itself being marked as if it was encoded in utf-8 when downloaded to file system.\r\n\r\nI've tried another way to download file to have more control over headers by replacing res.download() with res.send with these headers set prior:\r\n\r\n`res.set('content-type', 'text/plain; charset=iso-8859-1')`\r\n`res.set('content-disposition', 'attachment; filename=myfile.txt');`\r\n\r\nBut result is is same. I found some explanation here: https://github.com/expressjs/express/issues/2238#issuecomment-49028518. Unfortunately saving file as binary is not an option, software that will open this file later is unable to read it as binary, it requires strictly one format: \"text/plain; charset=iso-8859-1\"\r\n\r\nI later found this in change log: \r\n[4.15.3 / 2017-05-16](https://github.com/expressjs/express/blob/master/History.md#4153--2017-05-16)\r\nFix error when res.set cannot add charset to Content-Type\r\n\r\nSo I upgraded express to 4.15.3 and tried doing the same again. I can see that lines of code that were added to response.js file in 4.15.3 version fix are executed and charset is being set to iso-8859-1, at least that's what I see when logging res object right after them. But unfortunately viewing file info after in terminal after downloading it shows the same: \r\n\r\n`myfile.txt: text/plain; charset=utf-8`\r\n\r\nIt's hard to believe there is no way to set charset for downloaded file. I'm probably missing something. Hope you can help me with this problem. Thanks in advance!\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3530/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3530/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3529",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3529/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3529/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3529/events",
    "html_url": "https://github.com/expressjs/express/issues/3529",
    "id": 287813496,
    "node_id": "MDU6SXNzdWUyODc4MTM0OTY=",
    "number": 3529,
    "title": "Warning: a promise was created in a handler, but was not returned from it",
    "user": {
      "login": "moltar",
      "id": 491247,
      "node_id": "MDQ6VXNlcjQ5MTI0Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/491247?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/moltar",
      "html_url": "https://github.com/moltar",
      "followers_url": "https://api.github.com/users/moltar/followers",
      "following_url": "https://api.github.com/users/moltar/following{/other_user}",
      "gists_url": "https://api.github.com/users/moltar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/moltar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/moltar/subscriptions",
      "organizations_url": "https://api.github.com/users/moltar/orgs",
      "repos_url": "https://api.github.com/users/moltar/repos",
      "events_url": "https://api.github.com/users/moltar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/moltar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 11,
    "created_at": "2018-01-11T14:54:21Z",
    "updated_at": "2018-02-05T21:28:27Z",
    "closed_at": "2018-02-05T21:28:27Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This line seems to cause a warning when `BLUEBIRD_WARNINGS` is `on`.\r\n\r\nhttps://github.com/expressjs/express/blob/d2e6e3381ccbabfe300166afc75c432aee961ece/lib/router/index.js#L284\r\n\r\nThe code doesn't even seem to use promises, so I am not sure what's up with it.\r\n\r\n> (node:49047) Warning: a promise was created in a handler at Users/.../node_modules/express/lib/router/index.js:284:7 but was not returned from it, see http://goo.gl/rRqMUw\r\n    at Function.Promise.attempt.Promise.try (/Users/.../node_modules/bluebird/js/release/method.js:29:9)",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3529/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3529/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3528",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3528/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3528/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3528/events",
    "html_url": "https://github.com/expressjs/express/issues/3528",
    "id": 286769126,
    "node_id": "MDU6SXNzdWUyODY3NjkxMjY=",
    "number": 3528,
    "title": "Express listens on IPv6 by default",
    "user": {
      "login": "damianperera",
      "id": 15967502,
      "node_id": "MDQ6VXNlcjE1OTY3NTAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/15967502?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianperera",
      "html_url": "https://github.com/damianperera",
      "followers_url": "https://api.github.com/users/damianperera/followers",
      "following_url": "https://api.github.com/users/damianperera/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianperera/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianperera/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianperera/subscriptions",
      "organizations_url": "https://api.github.com/users/damianperera/orgs",
      "repos_url": "https://api.github.com/users/damianperera/repos",
      "events_url": "https://api.github.com/users/damianperera/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianperera/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-01-08T14:50:24Z",
    "updated_at": "2018-09-14T16:45:07Z",
    "closed_at": "2018-01-08T16:33:11Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "ExpressJS recently began acting weirdly by defaulting to IPv6 (tcp6) on CentOS 7.x. I'm using [PM2](http://pm2.keymetrics.io) to run Node, and all firewalls were disabled.\r\n\r\nFollowing are the results of the `ss -tnlp` and the `netstat -tnlp` commands when only `app.listen(3000)` is used:\r\n![screen shot 2018-01-08 at 8 06 51 pm](https://user-images.githubusercontent.com/15967502/34675388-7fa82fa2-f4af-11e7-909e-6844698a68b5.png)\r\n![screen shot 2018-01-08 at 8 09 08 pm](https://user-images.githubusercontent.com/15967502/34675551-f3ef4e40-f4af-11e7-93a5-befae72c1c50.png)\r\n\r\nSetting the `host` individually to `app.listen(3000, \"127.0.0.1\")` and `app.listen(3000, \"0.0.0.0\")` forces the app to use IPv4 however it refuses connections, as can be seen from the below screenshot:\r\n![screen shot 2018-01-08 at 8 14 08 pm](https://user-images.githubusercontent.com/15967502/34675753-96b4346a-f4b0-11e7-8d7d-8f0780d81d38.png)\r\n\r\nFollowing are the results when executing `netstat -tnlp` after forcing IPv4:\r\n![screen shot 2018-01-08 at 8 13 36 pm](https://user-images.githubusercontent.com/15967502/34675703-70f8bc50-f4b0-11e7-956a-18c3efd0004a.png)\r\n\r\n**NodeJS version:** v6.12.2\r\n**Express version:** 4.16.2\r\n**NPM version:** 5.6.0\r\n**PM2 version:** 2.9.1",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3528/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3528/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3527",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3527/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3527/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3527/events",
    "html_url": "https://github.com/expressjs/express/issues/3527",
    "id": 286577087,
    "node_id": "MDU6SXNzdWUyODY1NzcwODc=",
    "number": 3527,
    "title": "Append template-literal to template engine default list",
    "user": {
      "login": "Drulac",
      "id": 17110977,
      "node_id": "MDQ6VXNlcjE3MTEwOTc3",
      "avatar_url": "https://avatars.githubusercontent.com/u/17110977?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Drulac",
      "html_url": "https://github.com/Drulac",
      "followers_url": "https://api.github.com/users/Drulac/followers",
      "following_url": "https://api.github.com/users/Drulac/following{/other_user}",
      "gists_url": "https://api.github.com/users/Drulac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Drulac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Drulac/subscriptions",
      "organizations_url": "https://api.github.com/users/Drulac/orgs",
      "repos_url": "https://api.github.com/users/Drulac/repos",
      "events_url": "https://api.github.com/users/Drulac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Drulac/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-01-07T15:30:38Z",
    "updated_at": "2018-10-15T00:31:32Z",
    "closed_at": "2018-10-15T00:31:31Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "[Template Literal](https://github.com/Drulac/template-literal) is fastest, smallest and simplest template engine, because it use JS's literal template feature,\r\n\r\nYou can find here a simple wrapper for Express templating engine system : https://github.com/Drulac/express-tl/\r\n\r\nIt's 910 times faster than edge,  55 times faster than EJS, 20 times faster than doT and 6 times faster than zup. So it may be better to use it in most of common cases 😀 \r\n  ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3527/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3527/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3526",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3526/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3526/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3526/events",
    "html_url": "https://github.com/expressjs/express/issues/3526",
    "id": 286145213,
    "node_id": "MDU6SXNzdWUyODYxNDUyMTM=",
    "number": 3526,
    "title": "RE DoS in one of the dependency",
    "user": {
      "login": "Berkmann18",
      "id": 8260834,
      "node_id": "MDQ6VXNlcjgyNjA4MzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8260834?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Berkmann18",
      "html_url": "https://github.com/Berkmann18",
      "followers_url": "https://api.github.com/users/Berkmann18/followers",
      "following_url": "https://api.github.com/users/Berkmann18/following{/other_user}",
      "gists_url": "https://api.github.com/users/Berkmann18/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Berkmann18/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Berkmann18/subscriptions",
      "organizations_url": "https://api.github.com/users/Berkmann18/orgs",
      "repos_url": "https://api.github.com/users/Berkmann18/repos",
      "events_url": "https://api.github.com/users/Berkmann18/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Berkmann18/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-01-04T23:26:15Z",
    "updated_at": "2018-01-04T23:43:35Z",
    "closed_at": "2018-01-04T23:27:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "** Removed ** Report by following https://github.com/expressjs/express/blob/master/Security.md",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3526/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3526/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3525",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3525/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3525/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3525/events",
    "html_url": "https://github.com/expressjs/express/pull/3525",
    "id": 285569174,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTYwODI3MTA2",
    "number": 3525,
    "title": "Update License to 2018",
    "user": {
      "login": "flxwu",
      "id": 16862997,
      "node_id": "MDQ6VXNlcjE2ODYyOTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/16862997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/flxwu",
      "html_url": "https://github.com/flxwu",
      "followers_url": "https://api.github.com/users/flxwu/followers",
      "following_url": "https://api.github.com/users/flxwu/following{/other_user}",
      "gists_url": "https://api.github.com/users/flxwu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/flxwu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/flxwu/subscriptions",
      "organizations_url": "https://api.github.com/users/flxwu/orgs",
      "repos_url": "https://api.github.com/users/flxwu/repos",
      "events_url": "https://api.github.com/users/flxwu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/flxwu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-01-02T23:56:19Z",
    "updated_at": "2018-02-06T12:14:52Z",
    "closed_at": "2018-01-02T23:57:15Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3525",
      "html_url": "https://github.com/expressjs/express/pull/3525",
      "diff_url": "https://github.com/expressjs/express/pull/3525.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3525.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3525/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3525/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3524",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3524/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3524/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3524/events",
    "html_url": "https://github.com/expressjs/express/pull/3524",
    "id": 285568833,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTYwODI2ODUy",
    "number": 3524,
    "title": "Fix README gratipay",
    "user": {
      "login": "flxwu",
      "id": 16862997,
      "node_id": "MDQ6VXNlcjE2ODYyOTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/16862997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/flxwu",
      "html_url": "https://github.com/flxwu",
      "followers_url": "https://api.github.com/users/flxwu/followers",
      "following_url": "https://api.github.com/users/flxwu/following{/other_user}",
      "gists_url": "https://api.github.com/users/flxwu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/flxwu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/flxwu/subscriptions",
      "organizations_url": "https://api.github.com/users/flxwu/orgs",
      "repos_url": "https://api.github.com/users/flxwu/repos",
      "events_url": "https://api.github.com/users/flxwu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/flxwu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-01-02T23:53:58Z",
    "updated_at": "2018-01-03T00:42:17Z",
    "closed_at": "2018-01-03T00:42:17Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3524",
      "html_url": "https://github.com/expressjs/express/pull/3524",
      "diff_url": "https://github.com/expressjs/express/pull/3524.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3524.patch",
      "merged_at": null
    },
    "body": "Since gratipay has sadly ended its service by the end of 2017, the erroring badges should be removed as well.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3524/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3524/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3523",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3523/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3523/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3523/events",
    "html_url": "https://github.com/expressjs/express/issues/3523",
    "id": 285557582,
    "node_id": "MDU6SXNzdWUyODU1NTc1ODI=",
    "number": 3523,
    "title": "Setting multiple cookies won't work (sometimes)",
    "user": {
      "login": "sylvio",
      "id": 113960,
      "node_id": "MDQ6VXNlcjExMzk2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/113960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sylvio",
      "html_url": "https://github.com/sylvio",
      "followers_url": "https://api.github.com/users/sylvio/followers",
      "following_url": "https://api.github.com/users/sylvio/following{/other_user}",
      "gists_url": "https://api.github.com/users/sylvio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sylvio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sylvio/subscriptions",
      "organizations_url": "https://api.github.com/users/sylvio/orgs",
      "repos_url": "https://api.github.com/users/sylvio/repos",
      "events_url": "https://api.github.com/users/sylvio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sylvio/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2018-01-02T22:44:50Z",
    "updated_at": "2018-01-03T01:33:13Z",
    "closed_at": "2018-01-02T23:29:43Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am seeing the same issue described here: http://www.connecto.io/blog/nodejs-express-how-to-set-multiple-cookies-in-the-same-response-object/\r\n\r\nHas anybody noticed this? It's been around for a while now. ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3523/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3523/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3522",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3522/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3522/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3522/events",
    "html_url": "https://github.com/expressjs/express/pull/3522",
    "id": 285435107,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTYwNzMwMjQ0",
    "number": 3522,
    "title": "5.x",
    "user": {
      "login": "kumarcs",
      "id": 25985488,
      "node_id": "MDQ6VXNlcjI1OTg1NDg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/25985488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kumarcs",
      "html_url": "https://github.com/kumarcs",
      "followers_url": "https://api.github.com/users/kumarcs/followers",
      "following_url": "https://api.github.com/users/kumarcs/following{/other_user}",
      "gists_url": "https://api.github.com/users/kumarcs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kumarcs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kumarcs/subscriptions",
      "organizations_url": "https://api.github.com/users/kumarcs/orgs",
      "repos_url": "https://api.github.com/users/kumarcs/repos",
      "events_url": "https://api.github.com/users/kumarcs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kumarcs/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-01-02T13:54:47Z",
    "updated_at": "2018-01-02T13:55:56Z",
    "closed_at": "2018-01-02T13:55:45Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3522",
      "html_url": "https://github.com/expressjs/express/pull/3522",
      "diff_url": "https://github.com/expressjs/express/pull/3522.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3522.patch",
      "merged_at": null
    },
    "body": "In Readme file there is a line \"before installing download . . . \" under installation heading there should be \"before running commands . . . \"",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3522/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3522/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3521",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3521/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3521/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3521/events",
    "html_url": "https://github.com/expressjs/express/pull/3521",
    "id": 285324174,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTYwNjU3Nzcw",
    "number": 3521,
    "title": "Intro declaration cleanup",
    "user": {
      "login": "knoxcard",
      "id": 7561190,
      "node_id": "MDQ6VXNlcjc1NjExOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7561190?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/knoxcard",
      "html_url": "https://github.com/knoxcard",
      "followers_url": "https://api.github.com/users/knoxcard/followers",
      "following_url": "https://api.github.com/users/knoxcard/following{/other_user}",
      "gists_url": "https://api.github.com/users/knoxcard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/knoxcard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/knoxcard/subscriptions",
      "organizations_url": "https://api.github.com/users/knoxcard/orgs",
      "repos_url": "https://api.github.com/users/knoxcard/repos",
      "events_url": "https://api.github.com/users/knoxcard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/knoxcard/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-01-01T19:22:59Z",
    "updated_at": "2018-01-01T19:35:27Z",
    "closed_at": "2018-01-01T19:35:27Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3521",
      "html_url": "https://github.com/expressjs/express/pull/3521",
      "diff_url": "https://github.com/expressjs/express/pull/3521.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3521.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3521/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3521/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3520",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3520/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3520/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3520/events",
    "html_url": "https://github.com/expressjs/express/issues/3520",
    "id": 285233249,
    "node_id": "MDU6SXNzdWUyODUyMzMyNDk=",
    "number": 3520,
    "title": "Trying to install express-generator globally but getting EACCES",
    "user": {
      "login": "stephepush",
      "id": 16627348,
      "node_id": "MDQ6VXNlcjE2NjI3MzQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16627348?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephepush",
      "html_url": "https://github.com/stephepush",
      "followers_url": "https://api.github.com/users/stephepush/followers",
      "following_url": "https://api.github.com/users/stephepush/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephepush/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephepush/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephepush/subscriptions",
      "organizations_url": "https://api.github.com/users/stephepush/orgs",
      "repos_url": "https://api.github.com/users/stephepush/repos",
      "events_url": "https://api.github.com/users/stephepush/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephepush/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-12-31T01:02:17Z",
    "updated_at": "2017-12-31T04:31:49Z",
    "closed_at": "2017-12-31T04:31:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi, I'm following a  [MDN guide on how to setup a Node/Express environment](https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/development_environment), but when I try to run express through the command line, I get `bash: express: command not found`, even though I have express installed globally and locally in my project. Express-generator won't install globally (it has installed in my project, but doesn't work), and when I try to install I get the following:\r\n\r\n`npm WARN checkPermissions Missing write access to /usr/local/Cellar/node/9.3.0_1/lib/node_modules/express-generator\r\nnpm ERR! path /usr/local/Cellar/node/9.3.0_1/lib/node_modules/express-generator\r\nnpm ERR! code EACCES\r\nnpm ERR! errno -13\r\nnpm ERR! syscall access\r\nnpm ERR! Error: EACCES: permission denied, access '/usr/local/Cellar/node/9.3.0_1/lib/node_modules/express-generator'\r\nnpm ERR!  { Error: EACCES: permission denied, access '/usr/local/Cellar/node/9.3.0_1/lib/node_modules/express-generator'\r\nnpm ERR!   stack: 'Error: EACCES: permission denied, access \\'/usr/local/Cellar/node/9.3.0_1/lib/node_modules/express-generator\\'',\r\nnpm ERR!   errno: -13,\r\nnpm ERR!   code: 'EACCES',\r\n\r\nnpm ERR!   syscall: 'access',\r\nnpm ERR!   path: '/usr/local/Cellar/node/9.3.0_1/lib/node_modules/express-generator' }\r\nnpm ERR!\r\nnpm ERR! Please try running this command again as root/Administrator.\r\n\r\nnpm ERR! A complete log of this run can be found in:\r\nnpm ERR!     /Users/stephe/.npm/_logs/2017-12-31T00_36_51_307Z-debug.log\r\nStephe-Mac:mozillaNode stephe$ npm install express-generator\r\nnpm WARN mozillanode@1.0.0 No repository field.`\r\n\r\nI'm using OSX sierra,  recently setup a separate account to make projects, and I'm using Homebrew as a package manager...",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3520/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3520/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3519",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3519/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3519/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3519/events",
    "html_url": "https://github.com/expressjs/express/pull/3519",
    "id": 285032508,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTYwNDcxNzc4",
    "number": 3519,
    "title": "Added comments - URL Request for apiKey",
    "user": {
      "login": "stevenanthonyrevo",
      "id": 8505293,
      "node_id": "MDQ6VXNlcjg1MDUyOTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8505293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stevenanthonyrevo",
      "html_url": "https://github.com/stevenanthonyrevo",
      "followers_url": "https://api.github.com/users/stevenanthonyrevo/followers",
      "following_url": "https://api.github.com/users/stevenanthonyrevo/following{/other_user}",
      "gists_url": "https://api.github.com/users/stevenanthonyrevo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stevenanthonyrevo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stevenanthonyrevo/subscriptions",
      "organizations_url": "https://api.github.com/users/stevenanthonyrevo/orgs",
      "repos_url": "https://api.github.com/users/stevenanthonyrevo/repos",
      "events_url": "https://api.github.com/users/stevenanthonyrevo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stevenanthonyrevo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-12-29T04:32:37Z",
    "updated_at": "2018-02-13T21:49:47Z",
    "closed_at": "2018-02-13T21:49:47Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3519",
      "html_url": "https://github.com/expressjs/express/pull/3519",
      "diff_url": "https://github.com/expressjs/express/pull/3519.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3519.patch",
      "merged_at": null
    },
    "body": "A small update on this file's comments.\r\nI noticed it was missing an explanation for the apiKey parameters. I've added these urls for quick reference for valid access to the api.\r\n\r\nHope this helps out!  ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3519/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3519/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3518",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3518/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3518/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3518/events",
    "html_url": "https://github.com/expressjs/express/issues/3518",
    "id": 285022020,
    "node_id": "MDU6SXNzdWUyODUwMjIwMjA=",
    "number": 3518,
    "title": "Async/await (promise) support?",
    "user": {
      "login": "olalonde",
      "id": 416585,
      "node_id": "MDQ6VXNlcjQxNjU4NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/416585?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/olalonde",
      "html_url": "https://github.com/olalonde",
      "followers_url": "https://api.github.com/users/olalonde/followers",
      "following_url": "https://api.github.com/users/olalonde/following{/other_user}",
      "gists_url": "https://api.github.com/users/olalonde/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/olalonde/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/olalonde/subscriptions",
      "organizations_url": "https://api.github.com/users/olalonde/orgs",
      "repos_url": "https://api.github.com/users/olalonde/repos",
      "events_url": "https://api.github.com/users/olalonde/events{/privacy}",
      "received_events_url": "https://api.github.com/users/olalonde/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-12-29T02:15:13Z",
    "updated_at": "2017-12-29T02:50:25Z",
    "closed_at": "2017-12-29T02:18:22Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Is there any roadmap to add native support for promise returning middleware? This feature request has been ongoing for years...",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3518/reactions",
      "total_count": 5,
      "+1": 5,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3518/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3517",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3517/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3517/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3517/events",
    "html_url": "https://github.com/expressjs/express/issues/3517",
    "id": 284624423,
    "node_id": "MDU6SXNzdWUyODQ2MjQ0MjM=",
    "number": 3517,
    "title": "Performance implications if next is not called in the middleware?",
    "user": {
      "login": "ShrawanLakhe",
      "id": 5616157,
      "node_id": "MDQ6VXNlcjU2MTYxNTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5616157?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ShrawanLakhe",
      "html_url": "https://github.com/ShrawanLakhe",
      "followers_url": "https://api.github.com/users/ShrawanLakhe/followers",
      "following_url": "https://api.github.com/users/ShrawanLakhe/following{/other_user}",
      "gists_url": "https://api.github.com/users/ShrawanLakhe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ShrawanLakhe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ShrawanLakhe/subscriptions",
      "organizations_url": "https://api.github.com/users/ShrawanLakhe/orgs",
      "repos_url": "https://api.github.com/users/ShrawanLakhe/repos",
      "events_url": "https://api.github.com/users/ShrawanLakhe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ShrawanLakhe/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-12-27T00:03:01Z",
    "updated_at": "2017-12-27T00:18:16Z",
    "closed_at": "2017-12-27T00:18:16Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In the middleware function, to move on to the succeeding  middleware function, we need to invoke the next  function. As we all know, if we  omit the call the next() function, the request will be hanging. In these scenarios, is there are any performance implications due to this? If yes, then what are those issues? What might be the issues if we do not explicitly call next function and requests are left hanging?\r\n\r\nThank you.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3517/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3517/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3516",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3516/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3516/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3516/events",
    "html_url": "https://github.com/expressjs/express/issues/3516",
    "id": 284291608,
    "node_id": "MDU6SXNzdWUyODQyOTE2MDg=",
    "number": 3516,
    "title": "Cookie cannot be set when using fetch without including credentials",
    "user": {
      "login": "marswong",
      "id": 10388933,
      "node_id": "MDQ6VXNlcjEwMzg4OTMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/10388933?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marswong",
      "html_url": "https://github.com/marswong",
      "followers_url": "https://api.github.com/users/marswong/followers",
      "following_url": "https://api.github.com/users/marswong/following{/other_user}",
      "gists_url": "https://api.github.com/users/marswong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marswong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marswong/subscriptions",
      "organizations_url": "https://api.github.com/users/marswong/orgs",
      "repos_url": "https://api.github.com/users/marswong/repos",
      "events_url": "https://api.github.com/users/marswong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marswong/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-12-23T07:18:31Z",
    "updated_at": "2018-01-05T02:30:47Z",
    "closed_at": "2018-01-05T02:30:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**express version**: 4.16.2\r\n\r\njust set a cookie in a `POST` request's response:\r\n\r\n```javascript\r\nres.cookie('blabla', 'blabla', { maxAge: Infinity })\r\n```\r\n\r\nweird, `set-cookie` seems cannot work any more, it could work one week ago.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3516/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3516/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3515",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3515/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3515/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3515/events",
    "html_url": "https://github.com/expressjs/express/issues/3515",
    "id": 284277761,
    "node_id": "MDU6SXNzdWUyODQyNzc3NjE=",
    "number": 3515,
    "title": "finalhandler: cannot read property 'headersSent' of undefined",
    "user": {
      "login": "marcus-sa",
      "id": 8391194,
      "node_id": "MDQ6VXNlcjgzOTExOTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8391194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcus-sa",
      "html_url": "https://github.com/marcus-sa",
      "followers_url": "https://api.github.com/users/marcus-sa/followers",
      "following_url": "https://api.github.com/users/marcus-sa/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcus-sa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcus-sa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcus-sa/subscriptions",
      "organizations_url": "https://api.github.com/users/marcus-sa/orgs",
      "repos_url": "https://api.github.com/users/marcus-sa/repos",
      "events_url": "https://api.github.com/users/marcus-sa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcus-sa/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2017-12-23T01:30:17Z",
    "updated_at": "2019-02-16T15:15:36Z",
    "closed_at": "2017-12-23T17:22:50Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "I keep getting this error and I have no clue on how to solve it.\r\nUsing the latest Express version.\r\n\r\n```\r\n/home/sentinel/Gitlab/stormcms-engine-v2/node_modules/finalhandler/index.js:239\r\n[1]   return typeof res.headersSent !== 'boolean'\r\n[1]                     ^\r\n[1] \r\n[1] TypeError: Cannot read property 'headersSent' of undefined\r\n[1]     at headersSent (/home/sentinel/Gitlab/stormcms-engine-v2/node_modules/finalhandler/index.js:239:21)\r\n[1]     at /home/sentinel/Gitlab/stormcms-engine-v2/node_modules/finalhandler/index.js:92:17\r\n[1]     at /home/sentinel/Gitlab/stormcms-engine-v2/node_modules/express/lib/router/index.js:635:15\r\n[1]     at next (/home/sentinel/Gitlab/stormcms-engine-v2/node_modules/express/lib/router/index.js:210:14)\r\n[1]     at Function.handle (/home/sentinel/Gitlab/stormcms-engine-v2/node_modules/express/lib/router/index.js:174:3)\r\n[1]     at Function.handle (/home/sentinel/Gitlab/stormcms-engine-v2/node_modules/express/lib/application.js:174:10)\r\n[1]     at app (/home/sentinel/Gitlab/stormcms-engine-v2/node_modules/express/lib/express.js:39:9)\r\n[1]     at Object.<anonymous> (/home/sentinel/Gitlab/stormcms-engine-v2/src/server.js:104:1)\r\n[1]     at Module._compile (module.js:635:30)\r\n[1]     at loader (/home/sentinel/Gitlab/stormcms-engine-v2/node_modules/babel-register/lib/node.js:144:5)\r\n[1]     at Object.require.extensions.(anonymous function) [as .js] (/home/sentinel/Gitlab/stormcms-engine-v2/node_modules/babel-register/lib/node.js:154:7)\r\n[1]     at Module.load (module.js:554:32)\r\n[1]     at tryModuleLoad (module.js:497:12)\r\n[1]     at Module._load (module.js:489:3)\r\n[1]     at Function.module._load (/home/sentinel/Gitlab/stormcms-engine-v2/node_modules/piping/lib/piping.js:218:16)\r\n[1]     at Module.require (module.js:579:17)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3515/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3515/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3514",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3514/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3514/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3514/events",
    "html_url": "https://github.com/expressjs/express/issues/3514",
    "id": 283362311,
    "node_id": "MDU6SXNzdWUyODMzNjIzMTE=",
    "number": 3514,
    "title": "Https Cause App to Crash",
    "user": {
      "login": "jamalabo1",
      "id": 25992049,
      "node_id": "MDQ6VXNlcjI1OTkyMDQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/25992049?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamalabo1",
      "html_url": "https://github.com/jamalabo1",
      "followers_url": "https://api.github.com/users/jamalabo1/followers",
      "following_url": "https://api.github.com/users/jamalabo1/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamalabo1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamalabo1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamalabo1/subscriptions",
      "organizations_url": "https://api.github.com/users/jamalabo1/orgs",
      "repos_url": "https://api.github.com/users/jamalabo1/repos",
      "events_url": "https://api.github.com/users/jamalabo1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamalabo1/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-12-19T20:39:19Z",
    "updated_at": "2017-12-21T12:25:31Z",
    "closed_at": "2017-12-21T12:25:31Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "```\r\n \r\nvar https = require('https');\r\nvar express = require('express');\r\nvar app = express();\r\nvar options {\r\n // ssl options\r\n};\r\napp.get('/', (req,res) => {\r\nres.send('Hello');\r\n});\r\nvar server = https.createServer(options, app);\r\nserver.listen(3000);\r\n \r\n```\r\n\r\n My Code is similar to this and when to run it using nodemon it crash with Message:\r\n**[nodemon] app crashed - waiting for file changes before starting...**\r\nAnd when run it with `node app.js`\r\n**Segmentation fault**\r\n\r\n\r\nwhen I tried to do HTTP server it works \r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3514/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3514/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3513",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3513/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3513/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3513/events",
    "html_url": "https://github.com/expressjs/express/issues/3513",
    "id": 283173201,
    "node_id": "MDU6SXNzdWUyODMxNzMyMDE=",
    "number": 3513,
    "title": "handle 405",
    "user": {
      "login": "wangfengming",
      "id": 11853824,
      "node_id": "MDQ6VXNlcjExODUzODI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/11853824?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wangfengming",
      "html_url": "https://github.com/wangfengming",
      "followers_url": "https://api.github.com/users/wangfengming/followers",
      "following_url": "https://api.github.com/users/wangfengming/following{/other_user}",
      "gists_url": "https://api.github.com/users/wangfengming/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wangfengming/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wangfengming/subscriptions",
      "organizations_url": "https://api.github.com/users/wangfengming/orgs",
      "repos_url": "https://api.github.com/users/wangfengming/repos",
      "events_url": "https://api.github.com/users/wangfengming/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wangfengming/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2017-12-19T10:19:04Z",
    "updated_at": "2020-06-23T15:56:39Z",
    "closed_at": "2020-06-23T15:56:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "How to handle 405?\r\nHere is a simple way:\r\n\r\ninsert the code on https://github.com/expressjs/express/blob/master/lib/router/index.js#L253\r\n```javascript\r\n        if (method !== 'OPTIONS') req.notAllowedRoute = route\r\n```\r\n\r\nthen I can handle 405 by:\r\n```javascript\r\nconst notAllowedHandler = (req, res, next) => {\r\n    if (req.notAllowedRoute) {\r\n        res.header('Allow', Object.keys(req.notAllowedRoute.methods).join(', ').toUpperCase())\r\n        res.status(405)\r\n    } else {\r\n        next()\r\n    }\r\n}\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3513/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3513/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3512",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3512/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3512/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3512/events",
    "html_url": "https://github.com/expressjs/express/issues/3512",
    "id": 282692179,
    "node_id": "MDU6SXNzdWUyODI2OTIxNzk=",
    "number": 3512,
    "title": "get RawBody without parseBody()",
    "user": {
      "login": "FarhanMS123",
      "id": 16165479,
      "node_id": "MDQ6VXNlcjE2MTY1NDc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16165479?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FarhanMS123",
      "html_url": "https://github.com/FarhanMS123",
      "followers_url": "https://api.github.com/users/FarhanMS123/followers",
      "following_url": "https://api.github.com/users/FarhanMS123/following{/other_user}",
      "gists_url": "https://api.github.com/users/FarhanMS123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FarhanMS123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FarhanMS123/subscriptions",
      "organizations_url": "https://api.github.com/users/FarhanMS123/orgs",
      "repos_url": "https://api.github.com/users/FarhanMS123/repos",
      "events_url": "https://api.github.com/users/FarhanMS123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FarhanMS123/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-12-17T13:02:23Z",
    "updated_at": "2017-12-19T15:11:13Z",
    "closed_at": "2017-12-19T04:38:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello, i want to get body request without `parseBody()`. \r\ni tried to get `[req, res]` and i cant find what i want.\r\nHow cat i got `body` without `parseBody()`?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3512/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3512/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3511",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3511/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3511/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3511/events",
    "html_url": "https://github.com/expressjs/express/issues/3511",
    "id": 282479585,
    "node_id": "MDU6SXNzdWUyODI0Nzk1ODU=",
    "number": 3511,
    "title": "Simplified routing files",
    "user": {
      "login": "andrewboerema",
      "id": 1569403,
      "node_id": "MDQ6VXNlcjE1Njk0MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1569403?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewboerema",
      "html_url": "https://github.com/andrewboerema",
      "followers_url": "https://api.github.com/users/andrewboerema/followers",
      "following_url": "https://api.github.com/users/andrewboerema/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewboerema/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewboerema/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewboerema/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewboerema/orgs",
      "repos_url": "https://api.github.com/users/andrewboerema/repos",
      "events_url": "https://api.github.com/users/andrewboerema/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewboerema/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 163600,
        "node_id": "MDU6TGFiZWwxNjM2MDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-12-15T16:28:11Z",
    "updated_at": "2018-10-27T17:34:44Z",
    "closed_at": "2018-10-27T17:34:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm considering working on a simplified routing capability where you could set a routing directory (default to <base>/routes) and express would use the directory structure and file names to build the route. Ex:\r\n\r\n```\r\n/routes/people/index.js\r\n\r\nrouter.get('/', (req, res) => { /* Handles /people */ route});\r\nrouter.get('/:id', (req, res) => { /* Handles /people/<id> */ route});\r\n```\r\n\r\nThe filename can also be part of the scheme\r\n\r\n```\r\n/routes/api/people.js\r\n\r\nrouter.get('/', (req, res) => { /* Handles /api/people */ route});\r\nrouter.get('/:id', (req, res) => { /* Handles /api/people/<id> */ route});`\r\n```\r\nI'm going to work on a PR, but I thought I'd ask for some feedback.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3511/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3511/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3510",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3510/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3510/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3510/events",
    "html_url": "https://github.com/expressjs/express/issues/3510",
    "id": 282139428,
    "node_id": "MDU6SXNzdWUyODIxMzk0Mjg=",
    "number": 3510,
    "title": "Showing a registration form through dynamic link for user registration ",
    "user": {
      "login": "miki996",
      "id": 23620141,
      "node_id": "MDQ6VXNlcjIzNjIwMTQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/23620141?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/miki996",
      "html_url": "https://github.com/miki996",
      "followers_url": "https://api.github.com/users/miki996/followers",
      "following_url": "https://api.github.com/users/miki996/following{/other_user}",
      "gists_url": "https://api.github.com/users/miki996/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/miki996/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/miki996/subscriptions",
      "organizations_url": "https://api.github.com/users/miki996/orgs",
      "repos_url": "https://api.github.com/users/miki996/repos",
      "events_url": "https://api.github.com/users/miki996/events{/privacy}",
      "received_events_url": "https://api.github.com/users/miki996/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-12-14T15:30:07Z",
    "updated_at": "2017-12-14T17:55:42Z",
    "closed_at": "2017-12-14T17:08:43Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\r\n\r\nI am trying to find a way how can i show a user registration form with a custom generated link from the admin panel. \r\n\r\nI wrote the code for the dynamic link but the issue is cannot show a form instead of the admin panel contents. \r\n\r\nThis is my code for the routing:\r\n```\r\napp.get('/register-client', function(req, res){\r\n    var newClient = CreateNewClientID();\r\n    req.session.userID = newClient.userID;    \r\n    return res.redirect('/?id=' + newClient.userID);\r\n});\r\n```\r\n\r\nThis is the code for the function which is creating unique user ID. \r\n\r\nI tried to create another route and render a new view but when i try to redirect for example to localhost/register-client/?id=343m123-12o3m124o-12m3om12 i am getting errors saying localhost redirected you too many times.\r\n```\r\nfunction CreateNewClientID(){\r\n\r\n  var uniqueID = require('really-unique-id');\r\n  \r\n    const low = require('lowdb');\r\n    const FileSync = require('lowdb/adapters/FileSync');\r\n  \r\n    const adapter = new FileSync('db.json');\r\n    const db = low(adapter);\r\n\r\n  \r\n      \r\n\r\n    var newClient = {\r\n      userID: uniqueID().toString(),\r\n      CreatedAt: moment(),\r\n      LastLogin: \"No login detected\",\r\n      Expiry: moment().add(14, 'days')\r\n    };\r\n\r\n    db.get('Users').push(newClient).write();\r\n    console.log(\"New user with ID only has been created\");\r\n    return newClient;\r\n \r\n}\r\n```\r\n\r\nAny help will be much appreciated",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3510/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3510/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3509",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3509/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3509/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3509/events",
    "html_url": "https://github.com/expressjs/express/issues/3509",
    "id": 281747892,
    "node_id": "MDU6SXNzdWUyODE3NDc4OTI=",
    "number": 3509,
    "title": "Add \"update\" to the Route object (IRoute interface)",
    "user": {
      "login": "sperlis",
      "id": 675015,
      "node_id": "MDQ6VXNlcjY3NTAxNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/675015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sperlis",
      "html_url": "https://github.com/sperlis",
      "followers_url": "https://api.github.com/users/sperlis/followers",
      "following_url": "https://api.github.com/users/sperlis/following{/other_user}",
      "gists_url": "https://api.github.com/users/sperlis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sperlis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sperlis/subscriptions",
      "organizations_url": "https://api.github.com/users/sperlis/orgs",
      "repos_url": "https://api.github.com/users/sperlis/repos",
      "events_url": "https://api.github.com/users/sperlis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sperlis/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-12-13T13:23:17Z",
    "updated_at": "2017-12-13T13:36:28Z",
    "closed_at": "2017-12-13T13:36:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "the UPDATE HTTP method is becoming more popular for partial updates (vs. the full update intended by PUT). \r\nWhile PUT and UPDATE are currently interchangeable, it sounds to me like it would be a nice addition:\r\napp.route(<resouce>).get().post().put()._update_().delete();",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3509/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3509/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3508",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3508/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3508/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3508/events",
    "html_url": "https://github.com/expressjs/express/issues/3508",
    "id": 281422699,
    "node_id": "MDU6SXNzdWUyODE0MjI2OTk=",
    "number": 3508,
    "title": "Why I get \"301\" Moved permanently when I set \"/manage\" as path",
    "user": {
      "login": "jiladahe1997",
      "id": 22068145,
      "node_id": "MDQ6VXNlcjIyMDY4MTQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/22068145?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jiladahe1997",
      "html_url": "https://github.com/jiladahe1997",
      "followers_url": "https://api.github.com/users/jiladahe1997/followers",
      "following_url": "https://api.github.com/users/jiladahe1997/following{/other_user}",
      "gists_url": "https://api.github.com/users/jiladahe1997/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jiladahe1997/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jiladahe1997/subscriptions",
      "organizations_url": "https://api.github.com/users/jiladahe1997/orgs",
      "repos_url": "https://api.github.com/users/jiladahe1997/repos",
      "events_url": "https://api.github.com/users/jiladahe1997/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jiladahe1997/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-12-12T15:20:49Z",
    "updated_at": "2017-12-13T13:38:37Z",
    "closed_at": "2017-12-13T13:38:37Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When I set \"/manage\" as path :\r\n``` javascript\r\nrouter.get(\"/manage\",function(req,res,next){\r\n\tvar option = {\r\n\t\troot : path.dirname(__dirname),\r\n\t}\r\n\tres.sendFile(\"build/manage.html\",option);\r\n})\r\n```\r\nand use it in my *app.js* , but when I open **localhost:3000/manage** , I got a status \"301 Moved permanently\" . And I was redirected to  **localhost:3000/manage/**\r\n\r\nHowever , if I just change */manage* to other path , like \"/index\".\r\n``` javascript\r\nrouter.get(\"/index\",function(req,res,next){\r\n\tvar option = {\r\n\t\troot : path.dirname(__dirname),\r\n\t}\r\n\tres.sendFile(\"build/manage.html\",option);\r\n})\r\n```\r\n\r\nThen also open  **localhost:3000/index** , I just got status \"200 OK \" , and was **NOT**  redirected to  **localhost:3000/index/**\r\n\r\nHere is the status \"301 Moved permanently\" response header :\r\n\r\n>HTTP/1.1 301 Moved Permanentl\r\nX-Powered-By: Express\r\nContent-Type: text/html; charset=UTF-8\r\nContent-Length: 171\r\nContent-Security-Policy: default-src 'self'\r\nX-Content-Type-Options: nosniff\r\nLocation: /manage/\r\nDate: Tue, 12 Dec 2017 15:23:38 GMT\r\nConnection: keep-alive\r\n\r\nI think that's very strange ,and wonder why .\r\nThanks for reading ! \r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3508/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3508/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3507",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3507/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3507/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3507/events",
    "html_url": "https://github.com/expressjs/express/pull/3507",
    "id": 281116358,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTU3NjM0Mzcy",
    "number": 3507,
    "title": "res.send: if number, not override statusCode if already defined by res.status(code)",
    "user": {
      "login": "igorprado",
      "id": 2054758,
      "node_id": "MDQ6VXNlcjIwNTQ3NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2054758?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/igorprado",
      "html_url": "https://github.com/igorprado",
      "followers_url": "https://api.github.com/users/igorprado/followers",
      "following_url": "https://api.github.com/users/igorprado/following{/other_user}",
      "gists_url": "https://api.github.com/users/igorprado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/igorprado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/igorprado/subscriptions",
      "organizations_url": "https://api.github.com/users/igorprado/orgs",
      "repos_url": "https://api.github.com/users/igorprado/repos",
      "events_url": "https://api.github.com/users/igorprado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/igorprado/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-12-11T18:10:35Z",
    "updated_at": "2017-12-11T18:13:28Z",
    "closed_at": "2017-12-11T18:13:19Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3507",
      "html_url": "https://github.com/expressjs/express/pull/3507",
      "diff_url": "https://github.com/expressjs/express/pull/3507.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3507.patch",
      "merged_at": null
    },
    "body": "Fixes #3506",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3507/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3507/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3506",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3506/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3506/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3506/events",
    "html_url": "https://github.com/expressjs/express/issues/3506",
    "id": 281115896,
    "node_id": "MDU6SXNzdWUyODExMTU4OTY=",
    "number": 3506,
    "title": "res.send(number) to not override statusCode if already defined by res.status(code)",
    "user": {
      "login": "igorprado",
      "id": 2054758,
      "node_id": "MDQ6VXNlcjIwNTQ3NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2054758?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/igorprado",
      "html_url": "https://github.com/igorprado",
      "followers_url": "https://api.github.com/users/igorprado/followers",
      "following_url": "https://api.github.com/users/igorprado/following{/other_user}",
      "gists_url": "https://api.github.com/users/igorprado/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/igorprado/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/igorprado/subscriptions",
      "organizations_url": "https://api.github.com/users/igorprado/orgs",
      "repos_url": "https://api.github.com/users/igorprado/repos",
      "events_url": "https://api.github.com/users/igorprado/events{/privacy}",
      "received_events_url": "https://api.github.com/users/igorprado/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-12-11T18:08:53Z",
    "updated_at": "2017-12-11T18:13:42Z",
    "closed_at": "2017-12-11T18:13:03Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The problem:\r\n\r\n```\r\nres.status(200).send(1000)\r\n```\r\n\r\nreturns\r\n\r\n```\r\ninvalid status code: 1000\r\n```\r\n\r\nThis prevents sending a number as response without converting to string before. If `statusCode` was set by `res.status(code)`, it should handle the number without override the statusCode.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3506/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3506/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3505",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3505/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3505/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3505/events",
    "html_url": "https://github.com/expressjs/express/issues/3505",
    "id": 281093012,
    "node_id": "MDU6SXNzdWUyODEwOTMwMTI=",
    "number": 3505,
    "title": "Able to get URLSearchParams or URL from request",
    "user": {
      "login": "jimmywarting",
      "id": 1148376,
      "node_id": "MDQ6VXNlcjExNDgzNzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1148376?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimmywarting",
      "html_url": "https://github.com/jimmywarting",
      "followers_url": "https://api.github.com/users/jimmywarting/followers",
      "following_url": "https://api.github.com/users/jimmywarting/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimmywarting/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimmywarting/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimmywarting/subscriptions",
      "organizations_url": "https://api.github.com/users/jimmywarting/orgs",
      "repos_url": "https://api.github.com/users/jimmywarting/repos",
      "events_url": "https://api.github.com/users/jimmywarting/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimmywarting/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-12-11T17:04:21Z",
    "updated_at": "2018-10-27T17:36:24Z",
    "closed_at": "2018-10-27T17:36:19Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "`req.query` is okey, but i wish to use the URLSearchParams instead... Reason: It's a standard and works also in browsers so you know how it operates, plus it handles duplicated params in a good way i think\r\n\r\nNot saying that we should parse `application/x-www-form-urlencoded` forms but instead parse the url.\r\n\r\nURLSearchParams can be achieved in two ways either from URL or URLSearchParams constructors\r\nMy suggestion is that we utilize one or both of them and assign it to request\r\n\r\nFound out that the simplest way was just to do\r\n```js\r\nconst {URLSearchParams} = require('url')\r\napp.set('query parser', str => new URLSearchParams(str))\r\n```\r\n\r\nThis ofc overrides the default behavior, and could conflict with others middlewares \r\nbut like the URL constructor and other html DOM Anchor links we could assign it to `req.searchParams`\r\n\r\nOr if `req.url` where a instance of URL that would make me happy, then you can always get it throught `req.url.searchParams.get('something')` But this might be a breaking change :(\r\n\r\nWhat do you think?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3505/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3505/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3504",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3504/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3504/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3504/events",
    "html_url": "https://github.com/expressjs/express/issues/3504",
    "id": 280595571,
    "node_id": "MDU6SXNzdWUyODA1OTU1NzE=",
    "number": 3504,
    "title": "Return 204 instead 200 for empty file",
    "user": {
      "login": "drnextgis",
      "id": 866124,
      "node_id": "MDQ6VXNlcjg2NjEyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/866124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drnextgis",
      "html_url": "https://github.com/drnextgis",
      "followers_url": "https://api.github.com/users/drnextgis/followers",
      "following_url": "https://api.github.com/users/drnextgis/following{/other_user}",
      "gists_url": "https://api.github.com/users/drnextgis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drnextgis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drnextgis/subscriptions",
      "organizations_url": "https://api.github.com/users/drnextgis/orgs",
      "repos_url": "https://api.github.com/users/drnextgis/repos",
      "events_url": "https://api.github.com/users/drnextgis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drnextgis/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2017-12-08T19:41:00Z",
    "updated_at": "2017-12-08T20:35:12Z",
    "closed_at": "2017-12-08T20:35:11Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm using express for publishing static files and faced with an error which reported by one of the client libraries:\r\n\r\n```\r\nError: http status 200 returned without content.\r\n```\r\n\r\nWhat is the right way to cope with this issue. It looks like I have to handle such cases manually?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3504/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3504/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3503",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3503/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3503/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3503/events",
    "html_url": "https://github.com/expressjs/express/issues/3503",
    "id": 280440403,
    "node_id": "MDU6SXNzdWUyODA0NDA0MDM=",
    "number": 3503,
    "title": "Can't stream response with application/json content type",
    "user": {
      "login": "Getz85",
      "id": 5981479,
      "node_id": "MDQ6VXNlcjU5ODE0Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5981479?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Getz85",
      "html_url": "https://github.com/Getz85",
      "followers_url": "https://api.github.com/users/Getz85/followers",
      "following_url": "https://api.github.com/users/Getz85/following{/other_user}",
      "gists_url": "https://api.github.com/users/Getz85/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Getz85/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Getz85/subscriptions",
      "organizations_url": "https://api.github.com/users/Getz85/orgs",
      "repos_url": "https://api.github.com/users/Getz85/repos",
      "events_url": "https://api.github.com/users/Getz85/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Getz85/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-12-08T10:20:48Z",
    "updated_at": "2017-12-08T16:22:08Z",
    "closed_at": "2017-12-08T16:22:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi, \r\n\r\nI have a problem with the response stream functionality.\r\n\r\nI use [this stackoverflow answer](https://stackoverflow.com/a/20891215/291541) to stream my mongodb result (an array of object) directly to the express response. But the content type of the response is \"text/plain\", while I want a \"application/json\" content type.\r\n\r\nSo I tried to set the type:\r\n\r\n`cursor.stream().pipe(JSONStream.stringify()).pipe(res.type('json'));`\r\n\r\nUnfortunately, the response is now always empty, without an error.\r\n\r\nHow can I send an \"application/json\" response using stream for an array of objects?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3503/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3503/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3502",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3502/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3502/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3502/events",
    "html_url": "https://github.com/expressjs/express/issues/3502",
    "id": 280170516,
    "node_id": "MDU6SXNzdWUyODAxNzA1MTY=",
    "number": 3502,
    "title": "Tribute Page Project...(ul issue) ",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-12-07T15:26:51Z",
    "updated_at": "2017-12-07T16:00:50Z",
    "closed_at": "2017-12-07T15:52:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm fairly new to coding and am currently doing a  Tribute Page Project. I'm just having issues centering my text along the bullet points. I CANNOT USE CSS to change any of my html so any help would be appreciated, Thanks! Here's the code.........\r\n\r\n\r\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n<div class = \"container\">\r\n  <div class = \"jumbotron text-center\">\r\n    <div class=\"row\">\r\n      <div class = \"col-xs-12\">\r\n  <h1 class= \"text-center\">Dr. Norman Borlaug</h1>\r\n  <h4 class= \"text-center\"><em>A man who saved a billion lives</em></h4>\r\n  <img src=\"https://borlaug.cfans.umn.edu/sites/borlaug.cfans.umn.edu/files/styles/hero_800x300/public/norman_borlaug_and_wheat_breeding_trainees_1972_1.jpg?itok=c2FzZXIY\" alt=\"NormanBorlaug\">\r\n  \r\n<div>\r\n  \r\n    <p><em>Dr. Norman Borlaug, third from left, trains biologists in Mexico on how to increase wheat yields - part of his life-long war on hunger.</em></p>\r\n </div>\r\n<body>\r\n <ul class=\"text-center\">\r\n    <h2>Here's a time line of Dr. Blorlaug's life:</h2>\r\n     <li><strong>1914</strong>-Born in Cresco, Iowa\r\n</li>\r\n    <li><strong>1933</strong>-Leaves his family's farm to attend the University of Minnesota, thanks to a Depression era program known as the \"National Youth Administration\"</li>\r\n    <li><strong>1935</strong>-Has to stop school and save up more money. Works in the Civilian Conservation Corps, helping starving Americans. \"I saw how food changed them\", he said. \"All of this left scars on me.\"</li>\r\n    <li><strong>1937</strong>-Finishes university and takes a job in the US Forestry Service</li>\r\n    <li><strong>1938</strong>-Marries wife of 69 years Margret Gibson. Gets laid off due to budget cuts. Inspired by Elvin Charles Stakman, he returns to school study under Stakman, who teaches him about breeding pest-resistent plants.</li>\r\n    <li><strong>1941</strong>-Tries to enroll in the military after the Pearl Harbor attack, but is rejected. Instead, the military asked his lab to work on waterproof glue, DDT to control malaria, disenfectants, and other applied science.</li>\r\n    <li><strong>1942</strong>-Receives a Ph.D. in Genetics and Plant Pathology</li>\r\n    <li><strong>1944</strong>-Rejects a 100% salary increase from Dupont, leaves behind his pregnant wife, and flies to Mexico to head a new plant pathology program. Over the next 16 years, his team breeds 6,000 different strains of disease resistent wheat - including different varieties for each major climate on Earth.</li>\r\n    <li><strong>1945</strong>-Discovers a way to grown wheat twice each season, doubling wheat yields</li>\r\n    <li><strong>1953</strong>-crosses a short, sturdy dwarf breed of wheat with a high-yeidling American breed, creating a strain that responds well to fertalizer. It goes on to provide 95% of Mexico's wheat.</li>\r\n    <li><strong>1962</strong>-Visits Delhi and brings his high-yielding strains of wheat to the Indian subcontinent in time to help mitigate mass starvation due to a rapidly expanding population</li>\r\n    <li><strong>1970</strong>-receives the Nobel Peace Prize</li>\r\n    <li><strong>1983</strong>-helps seven African countries dramatically increase their maize and sorghum yields</li>\r\n    <li><strong>1984</strong>-becomes a distinguished professor at Texas A&M University</li>\r\n    <li><strong>2005</strong>- states \"we will have to double the world food supply by 2050.\" Argues that genetically modified crops are the only way we can meet the demand, as we run out of arable land. Says that GM crops are not inherently dangerous because \"we've been genetically modifying plants and animals for a long time. Long before we called it science, people were selecting the best breeds.\"</li>\r\n    <li><strong>2009</strong>-dies at the age of 95.</li>\r\n  </ul>\r\n  \r\n  <h5>\"Borlaug's life and achievment are testimony to the far-reaching contribution that one man's towering intellect, persistence and scientific vision can make to human peace and progress.\"</h5>\r\n  <p><em>-Indian Prime Minister Manmohan Singh</em></p>\r\n    \r\n <h5>If you have time, you should read more about this incredibly amazing human being on his <a href=\"https://en.wikipedia.org/wiki/Norman_Borlaug\" target=\"_blank\">Wikipedia entry</a></h5>\r\n       </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n</body>\r\n<footer class= \"text-center\">\r\n    <span><i class=\"fa fa-wikipedia-w\" aria-hidden=\"true\"></i></span>\r\n    <span><i class=\"fa fa-facebook\" aria-hidden=\"true\"></i></span>\r\n  <span><i class=\"fa fa-instagram\" aria-hidden=\"true\"></i></span>\r\n  <br>\r\n    Written and coded by<a href=\"https://www.linkedin.com/in/desisteib\" target=\"_blank\"> DesiWeb </a>\r\n\r\n</footer>\r\n   \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3502/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3502/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3501",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3501/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3501/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3501/events",
    "html_url": "https://github.com/expressjs/express/issues/3501",
    "id": 279723063,
    "node_id": "MDU6SXNzdWUyNzk3MjMwNjM=",
    "number": 3501,
    "title": "Global middleware called with a route does not propagate errors to the route error-handling middleware.",
    "user": {
      "login": "ajxs",
      "id": 11038167,
      "node_id": "MDQ6VXNlcjExMDM4MTY3",
      "avatar_url": "https://avatars.githubusercontent.com/u/11038167?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajxs",
      "html_url": "https://github.com/ajxs",
      "followers_url": "https://api.github.com/users/ajxs/followers",
      "following_url": "https://api.github.com/users/ajxs/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajxs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajxs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajxs/subscriptions",
      "organizations_url": "https://api.github.com/users/ajxs/orgs",
      "repos_url": "https://api.github.com/users/ajxs/repos",
      "events_url": "https://api.github.com/users/ajxs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajxs/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2017-12-06T11:44:21Z",
    "updated_at": "2019-12-29T05:43:57Z",
    "closed_at": "2019-12-29T05:31:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I've encountered some behavior in Express that I find somewhat unclear.\r\nConsider the following example:\r\n\r\n```javascript\r\n\"use strict\";\r\n\r\nconst express = require(\"express\");\r\nconst app = express();\r\n\r\n\r\napp.use((req, res, next) => {\r\n\tconsole.log(`Entry at ${Date.now()}`);\r\n\tnext(\"This error will be NOT caught by 'errorHandler'...\");\r\n});\r\n\r\n\r\nconst errorHandler = (err, req, res, next) => {\r\n\tconsole.log(`caught error ${err}`);\r\n\tres.status(500).json({error: err});\r\n};\r\n\r\n\r\napp.get(\"/test\", (req, res, next) => {\r\n\t\tnext(\"An error thrown here will be caught by 'errorHandler'...\");\r\n\t},\r\n\t(req, res, next) => {\r\n\t\tnext();\r\n\t},\r\n\terrorHandler,\r\n\t(req, res) => {\r\n\t\tres.status(200).end(\"Ending request.\");\r\n\t});\r\n\r\n\r\nlet server = app.listen(3450, () => {\r\n\tconsole.log(`Server listening on http://localhost:${server.address().port}\\x1b[0m`);\r\n});\r\n\r\nmodule.exports = app;\r\n\r\n```\r\n\r\nAny errors thrown in the global middlware declared at `app.use((req, res, next) => {...` do not propagate down into specific route error handlers, despite being called with each route. I find this behavior a little misleading.\r\nIf I called the `test` route, and an error was thrown in the global middleware function, the behavior I'd expect in this scenario would be an error thrown at this level being caught by the `errorHandler` function in the `test` route. Is this a bug, or the intended behavior?\r\nObviously I can mitigate this by placing an error handler after the first function in the global scope, but I'd rather these errors propagate further down the stack. Am I missing something here, is there a better way this should be done?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3501/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3501/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3500",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3500/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3500/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3500/events",
    "html_url": "https://github.com/expressjs/express/issues/3500",
    "id": 279669390,
    "node_id": "MDU6SXNzdWUyNzk2NjkzOTA=",
    "number": 3500,
    "title": "linux ubuntu14.04 express not installed!!!",
    "user": {
      "login": "GithubRyze",
      "id": 10280935,
      "node_id": "MDQ6VXNlcjEwMjgwOTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10280935?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GithubRyze",
      "html_url": "https://github.com/GithubRyze",
      "followers_url": "https://api.github.com/users/GithubRyze/followers",
      "following_url": "https://api.github.com/users/GithubRyze/following{/other_user}",
      "gists_url": "https://api.github.com/users/GithubRyze/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GithubRyze/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GithubRyze/subscriptions",
      "organizations_url": "https://api.github.com/users/GithubRyze/orgs",
      "repos_url": "https://api.github.com/users/GithubRyze/repos",
      "events_url": "https://api.github.com/users/GithubRyze/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GithubRyze/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-12-06T08:41:48Z",
    "updated_at": "2017-12-06T16:30:29Z",
    "closed_at": "2017-12-06T16:30:29Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "``rdsw3@rdsw3-OptiPlex-7010:~$ npm install -g express\r\n+ express@4.16.2\r\nupdated 1 package in 5.86s\r\nrdsw3@rdsw3-OptiPlex-7010:~$ express -h\r\nThe program 'express' is currently not installed. You can install it by typing:\r\nsudo apt-get install node-express\r\nrdsw3@rdsw3-OptiPlex-7010:~$ npm install -g express-generator\r\n/home/rdsw3/nodejs/bin/express -> /home/rdsw3/nodejs/lib/node_modules/express-generator/bin/express-cli.js\r\n+ express-generator@4.15.5\r\nupdated 1 package in 3.615s\r\nrdsw3@rdsw3-OptiPlex-7010:~$ express -h\r\nThe program 'express' is currently not installed. You can install it by typing:\r\nsudo apt-get install node-express\r\n\r\nplease help me!!!!!!\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3500/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3500/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3499",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3499/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3499/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3499/events",
    "html_url": "https://github.com/expressjs/express/issues/3499",
    "id": 279634608,
    "node_id": "MDU6SXNzdWUyNzk2MzQ2MDg=",
    "number": 3499,
    "title": "Is there interest in having app.extend?",
    "user": {
      "login": "brunoscopelliti",
      "id": 3489757,
      "node_id": "MDQ6VXNlcjM0ODk3NTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3489757?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brunoscopelliti",
      "html_url": "https://github.com/brunoscopelliti",
      "followers_url": "https://api.github.com/users/brunoscopelliti/followers",
      "following_url": "https://api.github.com/users/brunoscopelliti/following{/other_user}",
      "gists_url": "https://api.github.com/users/brunoscopelliti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brunoscopelliti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brunoscopelliti/subscriptions",
      "organizations_url": "https://api.github.com/users/brunoscopelliti/orgs",
      "repos_url": "https://api.github.com/users/brunoscopelliti/repos",
      "events_url": "https://api.github.com/users/brunoscopelliti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brunoscopelliti/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 18291,
        "node_id": "MDU6TGFiZWwxODI5MQ==",
        "url": "https://api.github.com/repos/expressjs/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1",
        "default": false,
        "description": null
      },
      {
        "id": 163600,
        "node_id": "MDU6TGFiZWwxNjM2MDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-12-06T05:46:04Z",
    "updated_at": "2020-04-15T07:00:59Z",
    "closed_at": "2020-04-15T07:00:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Sorry if this was asked before, but I didn't find anything.\r\n\r\n`app.set` always replace the whole field.\r\n```js\r\napp.set(\"foo\", \"bar\");\r\napp.set(\"foo\", \"lol\");\r\napp.get(\"foo\"); // lol\r\n```\r\n\r\nSometimes we might want to only update certain properties.\r\n```js\r\napp.set(\"foo\", { a: 1, b: 1 });\r\napp.set(\"foo\", { b: 2 });\r\napp.get(\"foo\"); // { b: 2 }\r\n```\r\n\r\nI would like the above snippet to act like:\r\n```js\r\napp.set(\"foo\", { a: 1, b: 1 });\r\napp.set(\"foo\", Object.assign({}, app.get(\"foo\"), { b: 2 }));\r\napp.get(\"foo\"); // { a: 1, b: 2 }\r\n```\r\n\r\nIs there any interest in having a such utility exposed such as `app.extend` (or whatever else), so that it would be possible to write:\r\n```js\r\napp.set(\"foo\", { a: 1, b: 1 });\r\napp.extend(\"foo\", { b: 2 });\r\napp.get(\"foo\"); // { a: 1, b: 2 }\r\n```\r\n\r\nEventually I could submit a PR.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3499/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3499/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3498",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3498/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3498/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3498/events",
    "html_url": "https://github.com/expressjs/express/issues/3498",
    "id": 279478775,
    "node_id": "MDU6SXNzdWUyNzk0Nzg3NzU=",
    "number": 3498,
    "title": "Rendering public/index.html file instead of index.pug. Why?",
    "user": {
      "login": "GianCastle",
      "id": 6842883,
      "node_id": "MDQ6VXNlcjY4NDI4ODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6842883?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GianCastle",
      "html_url": "https://github.com/GianCastle",
      "followers_url": "https://api.github.com/users/GianCastle/followers",
      "following_url": "https://api.github.com/users/GianCastle/following{/other_user}",
      "gists_url": "https://api.github.com/users/GianCastle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GianCastle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GianCastle/subscriptions",
      "organizations_url": "https://api.github.com/users/GianCastle/orgs",
      "repos_url": "https://api.github.com/users/GianCastle/repos",
      "events_url": "https://api.github.com/users/GianCastle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GianCastle/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-12-05T18:19:51Z",
    "updated_at": "2018-10-27T17:45:11Z",
    "closed_at": "2018-10-27T17:45:11Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**_First of all, thank you for this awesome framework!_**\r\n\r\nHello, guys. I have a bit misunderstanding about this. Consider this situation...\r\n\r\n```\r\nconst express = require('express');\r\nconst app = express();\r\n\r\napp.set('view engine', 'pug');\r\napp.use(express.static('public'));\r\n\r\napp.get('/', (req, res, next) => res.render('index.pug'))\r\n   .listen(3000);\r\n```\r\n\r\nThen, on views/index.pug...\r\n```\r\nhtml(lang=\"en\")\r\n    head\r\n        meta(charset=\"UTF-8\")\r\n        meta(name=\"viewport\", content=\"width=device-width, initial-scale=1.0\")\r\n        meta(http-equiv=\"X-UA-Compatible\", content=\"ie=edge\")\r\n        title Document\r\n    body\r\n        h1 HTML from views/ directory\r\n````\r\n\r\nFinally, on public/index...\r\n```\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\r\n    <title>Document</title>\r\n</head>\r\n<body>\r\n    <h1>HTML from public/</h1>     \r\n</body>\r\n</html>\r\n```\r\nWhy the browser renders the public index file instead of views/index.pug file?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3498/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3498/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3497",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3497/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3497/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3497/events",
    "html_url": "https://github.com/expressjs/express/issues/3497",
    "id": 279413610,
    "node_id": "MDU6SXNzdWUyNzk0MTM2MTA=",
    "number": 3497,
    "title": "undefined: undefined added to http request headers if http.request used inside express",
    "user": {
      "login": "mnezh",
      "id": 29859919,
      "node_id": "MDQ6VXNlcjI5ODU5OTE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/29859919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mnezh",
      "html_url": "https://github.com/mnezh",
      "followers_url": "https://api.github.com/users/mnezh/followers",
      "following_url": "https://api.github.com/users/mnezh/following{/other_user}",
      "gists_url": "https://api.github.com/users/mnezh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mnezh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mnezh/subscriptions",
      "organizations_url": "https://api.github.com/users/mnezh/orgs",
      "repos_url": "https://api.github.com/users/mnezh/repos",
      "events_url": "https://api.github.com/users/mnezh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mnezh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2017-12-05T15:19:40Z",
    "updated_at": "2018-10-09T23:48:22Z",
    "closed_at": "2017-12-06T13:16:58Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "If I use node http(s) library in my express endpoint implementation to query external service, it adds lots of 'undefined: undefined' trailing garbage to my headers.\r\nIf I execute the following code outside of express:\r\n```\r\nlet resp = ''\r\nhttps.get({\r\n  protocol: 'https:',\r\n  host: 'my-favorite-app-behind-cloudfront',\r\n  path: '/my-favorite-endpoint',\r\n  headers: {\r\n    'Authorization': 'Bearer some-token',\r\n    'x-my-favorite-header': 'my-value'\r\n  }\r\n}, (res) => {\r\n  res.setEncoding('utf8')\r\n  res.on('data', (chunk) => {\r\n    resp += chunk\r\n  })\r\n  res.on('end', () => {\r\n    console.log(res.req._header);\r\n  })\r\n}\r\n).on('error', (err) => {\r\n  console.log(err)\r\n})\r\n```\r\nI get expected output:\r\n```\r\nGET /products HTTP/1.1\r\nAuthorization: Bearer some-token\r\nx-my-favorite-header: my-value\r\nHost: my-favorite-app-behind-cloudfront\r\nConnection: close\r\n```\r\n\r\nBut when I do the same in my express endpoint handler, I'm getting this:\r\n```\r\nGET /products HTTP/1.1\r\nAuthorization: Bearer some-token\r\nx-my-favorite-header: my-value\r\nHost: my-favorite-app-behind-cloudfront\r\nundefined: undefined\r\n[...ditto 42 times...]\r\nundefined: undefined\r\nConnection: close\r\n```\r\n\r\nExpress.js version: 4.15.5 and 4.16.x\r\nNode.js version: 8.9.1\r\nOS: Darwin Kernel Version 16.7.0: Wed Oct  4 00:17:00 PDT 2017; root:xnu-3789.71.6~1/RELEASE_X86_64",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3497/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3497/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3496",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3496/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3496/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3496/events",
    "html_url": "https://github.com/expressjs/express/issues/3496",
    "id": 278893075,
    "node_id": "MDU6SXNzdWUyNzg4OTMwNzU=",
    "number": 3496,
    "title": "Simple question on Express",
    "user": {
      "login": "Dutch-TS-Dev",
      "id": 19747468,
      "node_id": "MDQ6VXNlcjE5NzQ3NDY4",
      "avatar_url": "https://avatars.githubusercontent.com/u/19747468?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dutch-TS-Dev",
      "html_url": "https://github.com/Dutch-TS-Dev",
      "followers_url": "https://api.github.com/users/Dutch-TS-Dev/followers",
      "following_url": "https://api.github.com/users/Dutch-TS-Dev/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dutch-TS-Dev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dutch-TS-Dev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dutch-TS-Dev/subscriptions",
      "organizations_url": "https://api.github.com/users/Dutch-TS-Dev/orgs",
      "repos_url": "https://api.github.com/users/Dutch-TS-Dev/repos",
      "events_url": "https://api.github.com/users/Dutch-TS-Dev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dutch-TS-Dev/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-12-04T07:11:03Z",
    "updated_at": "2018-02-07T04:59:32Z",
    "closed_at": "2018-02-07T04:59:32Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi all, \r\n\r\nI used the app generator to help me set up a basic Express environment, and got the code below called app.js. I did so using the following instructions: http://expressjs.com/en/starter/generator.html\r\nI have some very basic questions about this code. Being a front end I am used to a Head/body format with scripts and stylesheets loaded at the top, \r\n\r\n- this app.js file... is this some kind of \"master\" file that controls all proceedings on each page that I create?\r\n- What is happening here? app.use(express.static(path.join(__dirname, 'public'))); \r\nI found in the express docs that .use \"Mounts the specified middleware function or functions at the specified path: the middleware function is executed when the base of the requested path matches path \"\r\nDoes this mean that, if a user goes to a specific URL (that is defined in the second parameter) a function of your choosing gets called?\r\n\r\nI hope somebody can help me with these questions :) \r\n\r\nMany thanks\r\n\r\n```js\r\nvar express = require('express');\r\nvar path = require('path');\r\nvar favicon = require('serve-favicon');\r\nvar logger = require('morgan');\r\nvar cookieParser = require('cookie-parser');\r\nvar bodyParser = require('body-parser');\r\n\r\nvar index = require('./routes/index');\r\nvar users = require('./routes/users');\r\n\r\nvar app = express();\r\n\r\n\r\n// view engine setup\r\napp.set('views', path.join(__dirname, 'views'));\r\napp.set('view engine', 'pug');\r\n\r\n// uncomment after placing your favicon in /public\r\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\r\napp.use(logger('dev'));\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\napp.use(express.static(path.join(__dirname, 'public')));\r\n\r\napp.use('/', index);\r\napp.use('/users', users);\r\n\r\n// catch 404 and forward to error handler\r\napp.use(function(req, res, next) {\r\n  var err = new Error('Not Found');\r\n  err.status = 404;\r\n  next(err);\r\n});\r\n\r\n// error handler\r\napp.use(function(err, req, res, next) {\r\n  // set locals, only providing error in development\r\n  res.locals.message = err.message;\r\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\r\n\r\n  // render the error page\r\n  res.status(err.status || 500);\r\n  res.render('error');\r\n});\r\n\r\nmodule.exports = app;\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3496/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3496/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3495",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3495/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3495/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3495/events",
    "html_url": "https://github.com/expressjs/express/pull/3495",
    "id": 278809340,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTU2MDc0OTE3",
    "number": 3495,
    "title": "req.hostname: check first comma-delimited host",
    "user": {
      "login": "iconoeugen",
      "id": 3206281,
      "node_id": "MDQ6VXNlcjMyMDYyODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3206281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iconoeugen",
      "html_url": "https://github.com/iconoeugen",
      "followers_url": "https://api.github.com/users/iconoeugen/followers",
      "following_url": "https://api.github.com/users/iconoeugen/following{/other_user}",
      "gists_url": "https://api.github.com/users/iconoeugen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iconoeugen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iconoeugen/subscriptions",
      "organizations_url": "https://api.github.com/users/iconoeugen/orgs",
      "repos_url": "https://api.github.com/users/iconoeugen/repos",
      "events_url": "https://api.github.com/users/iconoeugen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iconoeugen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/17",
      "html_url": "https://github.com/expressjs/express/milestone/17",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/17/labels",
      "id": 3066819,
      "node_id": "MDk6TWlsZXN0b25lMzA2NjgxOQ==",
      "number": 17,
      "title": "4.17",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 15,
      "state": "closed",
      "created_at": "2018-01-26T16:25:16Z",
      "updated_at": "2019-05-17T01:58:27Z",
      "due_on": null,
      "closed_at": "2019-05-17T01:58:27Z"
    },
    "comments": 9,
    "created_at": "2017-12-03T19:02:37Z",
    "updated_at": "2018-10-28T22:49:43Z",
    "closed_at": "2018-10-28T22:49:13Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3495",
      "html_url": "https://github.com/expressjs/express/pull/3495",
      "diff_url": "https://github.com/expressjs/express/pull/3495.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3495.patch",
      "merged_at": "2018-10-28T22:49:13Z"
    },
    "body": "Fixes #3494 ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3495/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3495/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3494",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3494/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3494/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3494/events",
    "html_url": "https://github.com/expressjs/express/issues/3494",
    "id": 278809220,
    "node_id": "MDU6SXNzdWUyNzg4MDkyMjA=",
    "number": 3494,
    "title": "req.hostname: check first comma-delimited host",
    "user": {
      "login": "iconoeugen",
      "id": 3206281,
      "node_id": "MDQ6VXNlcjMyMDYyODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3206281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iconoeugen",
      "html_url": "https://github.com/iconoeugen",
      "followers_url": "https://api.github.com/users/iconoeugen/followers",
      "following_url": "https://api.github.com/users/iconoeugen/following{/other_user}",
      "gists_url": "https://api.github.com/users/iconoeugen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iconoeugen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iconoeugen/subscriptions",
      "organizations_url": "https://api.github.com/users/iconoeugen/orgs",
      "repos_url": "https://api.github.com/users/iconoeugen/repos",
      "events_url": "https://api.github.com/users/iconoeugen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iconoeugen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/17",
      "html_url": "https://github.com/expressjs/express/milestone/17",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/17/labels",
      "id": 3066819,
      "node_id": "MDk6TWlsZXN0b25lMzA2NjgxOQ==",
      "number": 17,
      "title": "4.17",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 15,
      "state": "closed",
      "created_at": "2018-01-26T16:25:16Z",
      "updated_at": "2019-05-17T01:58:27Z",
      "due_on": null,
      "closed_at": "2019-05-17T01:58:27Z"
    },
    "comments": 11,
    "created_at": "2017-12-03T19:01:22Z",
    "updated_at": "2019-05-17T00:51:35Z",
    "closed_at": "2019-05-17T00:51:35Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "I have a nodejs application using express that is deployed on Openshift that brings a HAProxy LB that adds `X-Forwarded` headers and an Apache HTTP that acts as WAF (web application firewall - mod_security) in front of app. The Apache extends the `X-Forwarded` headers so I end up with:\r\n```\r\n'x-forwarded-host': 'first.example.com:3000, second.example.com:3000'\r\n```\r\nBut this doesn't work with `req.hostname` as it currently assumes there's only one proxy.\r\n\r\nSee also #1646",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3494/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3494/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3493",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3493/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3493/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3493/events",
    "html_url": "https://github.com/expressjs/express/pull/3493",
    "id": 278675342,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTU2MDA5NDg2",
    "number": 3493,
    "title": "Integrate TravisBuddy",
    "user": {
      "login": "bluzi",
      "id": 13808883,
      "node_id": "MDQ6VXNlcjEzODA4ODgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/13808883?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bluzi",
      "html_url": "https://github.com/bluzi",
      "followers_url": "https://api.github.com/users/bluzi/followers",
      "following_url": "https://api.github.com/users/bluzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/bluzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bluzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bluzi/subscriptions",
      "organizations_url": "https://api.github.com/users/bluzi/orgs",
      "repos_url": "https://api.github.com/users/bluzi/repos",
      "events_url": "https://api.github.com/users/bluzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bluzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 17,
    "created_at": "2017-12-02T11:02:07Z",
    "updated_at": "2022-02-02T05:10:03Z",
    "closed_at": "2022-02-02T05:10:03Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3493",
      "html_url": "https://github.com/expressjs/express/pull/3493",
      "diff_url": "https://github.com/expressjs/express/pull/3493.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3493.patch",
      "merged_at": null
    },
    "body": "TravisBuddy will comment on pull requests in your public repository everytime a test failed in one of them. The comment will include only the part of the build log that applies to your testing framework, so your contirbutors won't have to enter Travis's website and search the long and annoying build log for the reason the tests failed.\r\n\r\nHere's an example: https://github.com/bluzi/express/pull/1",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3493/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3493/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3492",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3492/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3492/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3492/events",
    "html_url": "https://github.com/expressjs/express/issues/3492",
    "id": 278626699,
    "node_id": "MDU6SXNzdWUyNzg2MjY2OTk=",
    "number": 3492,
    "title": "Getting undefined on req.body",
    "user": {
      "login": "shoaib086",
      "id": 32226195,
      "node_id": "MDQ6VXNlcjMyMjI2MTk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/32226195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoaib086",
      "html_url": "https://github.com/shoaib086",
      "followers_url": "https://api.github.com/users/shoaib086/followers",
      "following_url": "https://api.github.com/users/shoaib086/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoaib086/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoaib086/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoaib086/subscriptions",
      "organizations_url": "https://api.github.com/users/shoaib086/orgs",
      "repos_url": "https://api.github.com/users/shoaib086/repos",
      "events_url": "https://api.github.com/users/shoaib086/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoaib086/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-12-01T23:27:09Z",
    "updated_at": "2018-02-14T02:12:24Z",
    "closed_at": "2018-02-14T02:12:20Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "`var express    = require('express');   \r\nvar app        = express();               \r\nvar bodyParser = require('body-parser');\r\nvar mysql = require('mysql');\r\nvar md5 = require('MD5');\r\nvar con = mysql.createConnection({\r\n  host: \"localhost\",\r\n  user: \"shoaib\",\r\n  password: \"\",\r\n  database: \"watch\"\r\n});\r\n\r\ncon.connect(function(err) {\r\n  if (err) throw err;\r\n  console.log(\"Connected!\");\r\n});\r\n\r\n\r\nvar urlencodedParser = bodyParser.urlencoded({ extended: false })\r\nvar port = process.env.PORT || 8080;        \r\nvar router = express.Router();  \r\nrouter.post('/',urlencodedParser,function(req, res) {\r\n res.setHeader('Content-Type', 'application/x-www-form-urlencoded');\r\n  con.connect(function(err) {\r\n  \tvar query = \"Select * From user Where email=? AND password=?\";\r\n  \t var table = [req.body.email,req.body.password ];\r\n  \t console.log(req.body[0]);\r\n\r\n        query = mysql.format(query, table);\r\n        con.query(query, function (err, rows) {\r\n            if (err) {\r\n                res.json({ \"Error\": true, \"Message\": \"Error executing MySQL query\" });\r\n            } else if(rows!=0) {\r\n                res.json({ \"Error\": false, \"Message\": \"Success\",\"Users\": rows });\r\n            } else {\r\n                res.json({ \"Error\": true,});\r\n            }\r\n        });\r\n    });\r\n  });\r\n\r\napp.use('/api', router);\r\napp.listen(port);\r\nconsole.log('Magic happens on port ' + port);`",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3492/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3492/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3491",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3491/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3491/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3491/events",
    "html_url": "https://github.com/expressjs/express/issues/3491",
    "id": 278169976,
    "node_id": "MDU6SXNzdWUyNzgxNjk5NzY=",
    "number": 3491,
    "title": "static serving images wont work in prod",
    "user": {
      "login": "lloydst",
      "id": 29729189,
      "node_id": "MDQ6VXNlcjI5NzI5MTg5",
      "avatar_url": "https://avatars.githubusercontent.com/u/29729189?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lloydst",
      "html_url": "https://github.com/lloydst",
      "followers_url": "https://api.github.com/users/lloydst/followers",
      "following_url": "https://api.github.com/users/lloydst/following{/other_user}",
      "gists_url": "https://api.github.com/users/lloydst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lloydst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lloydst/subscriptions",
      "organizations_url": "https://api.github.com/users/lloydst/orgs",
      "repos_url": "https://api.github.com/users/lloydst/repos",
      "events_url": "https://api.github.com/users/lloydst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lloydst/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-11-30T15:50:44Z",
    "updated_at": "2017-11-30T17:05:50Z",
    "closed_at": "2017-11-30T17:05:50Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "```js\r\napp.use('/images', express.static(path.join(__dirname,'/.server/public/img')));\r\n```\r\nin development i can acces the img. i want by : `<host>/images/<imgName>.extention`\r\nbut can't in production builds,\r\n\r\nserver.js\r\n```js\r\nconst express = require('express')\r\nconst app = express();\r\nconst path = require('path')\r\nconst api = require('./server/routes/api')\r\nconst mongoose = require('mongoose')\r\nconst dotenv = require('dotenv').config()\r\nvar cookieParser = require('cookie-parser');\r\nvar bodyParser = require('body-parser');\r\n\r\nconst MURI = process.env.MURI || 'mongodb://localhost/portfolio';\r\nmongoose.connect( MURI, {useMongoClient: true})\r\nvar db = mongoose.connection;\r\n\r\ndb.on('error', console.error.bind(console, 'MongoDB connection error:'));\r\n\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\napp.use('/',express.static(path.join(__dirname, 'dist')))\r\napp.use('/projects/jscalc', express.static(path.join(__dirname,'./server/views/htmlcalc')));\r\napp.use('/projects/jqcalc', express.static(path.join(__dirname,'./server/views/jquerycalc')));\r\napp.use('/projects/angularcalc', express.static(path.join(__dirname,'./server/views/angularjscalc')));\r\napp.use('/projects/bomberman', express.static(path.join(__dirname,'./server/views/bomberman')));\r\napp.use('/projects/hangman', express.static(path.join(__dirname,'./server/views/hangman')));\r\napp.use('/images', express.static(path.join(__dirname,'/.server/public/img'))); // to select a img <host>/images/<img-name+type>\r\napp.use('/api',api)\r\napp.use('*',express.static(path.join(__dirname, 'dist')))\r\n\r\nconst port = process.env.PORT||3000;\r\napp.listen(process.env.PORT||3000, function(){\r\n  console.log('Example app listening on port ' + port +'!')\r\n})\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3491/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3491/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3490",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3490/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3490/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3490/events",
    "html_url": "https://github.com/expressjs/express/issues/3490",
    "id": 277780891,
    "node_id": "MDU6SXNzdWUyNzc3ODA4OTE=",
    "number": 3490,
    "title": "No way to disable charset in Content-Type header?",
    "user": {
      "login": "tomasruud",
      "id": 5978545,
      "node_id": "MDQ6VXNlcjU5Nzg1NDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5978545?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tomasruud",
      "html_url": "https://github.com/tomasruud",
      "followers_url": "https://api.github.com/users/tomasruud/followers",
      "following_url": "https://api.github.com/users/tomasruud/following{/other_user}",
      "gists_url": "https://api.github.com/users/tomasruud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tomasruud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tomasruud/subscriptions",
      "organizations_url": "https://api.github.com/users/tomasruud/orgs",
      "repos_url": "https://api.github.com/users/tomasruud/repos",
      "events_url": "https://api.github.com/users/tomasruud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tomasruud/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-11-29T14:46:52Z",
    "updated_at": "2023-05-06T12:18:44Z",
    "closed_at": "2017-11-29T15:22:14Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "I'm developing an API that will replace another API implemented in another language. Because the clients for this API are implemented badly, they don't accept content types other than \"application/json\" this means that \"application/json; charset=utf-8\" breaks them. \r\n\r\nCurrently, I've been trying to use this middleware before my routes to prevent the charset from being appended:\r\n```js\r\napp.use((req, res, next) => {\r\n  res.setHeader('Content-Type', 'application/json');\r\n  return next();\r\n});\r\n```\r\nI usually end responses like this `res.status(404).json('Not found')`, but with the middleware I'm using, it doesn't seem to work. I've tried to look at the Express code, and from what I can tell, if I use the Express function `set()`, `header()` or `type()` the charset automatically gets appended. So when I use the native `setHeader()` function I thought that would work. When I use the native method, it doesn't seem like it should be overridden, because the `res.json()` function checks if the header is already set before trying to set it, which also uses the native `getHeader()` function.\r\n\r\nIs there any way I can get around this, without changing how reponses are sent or am I doing something wrong?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3490/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3490/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3489",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3489/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3489/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3489/events",
    "html_url": "https://github.com/expressjs/express/issues/3489",
    "id": 277652320,
    "node_id": "MDU6SXNzdWUyNzc2NTIzMjA=",
    "number": 3489,
    "title": "webpack can not pack the express",
    "user": {
      "login": "txiaocao",
      "id": 3929991,
      "node_id": "MDQ6VXNlcjM5Mjk5OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3929991?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/txiaocao",
      "html_url": "https://github.com/txiaocao",
      "followers_url": "https://api.github.com/users/txiaocao/followers",
      "following_url": "https://api.github.com/users/txiaocao/following{/other_user}",
      "gists_url": "https://api.github.com/users/txiaocao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/txiaocao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/txiaocao/subscriptions",
      "organizations_url": "https://api.github.com/users/txiaocao/orgs",
      "repos_url": "https://api.github.com/users/txiaocao/repos",
      "events_url": "https://api.github.com/users/txiaocao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/txiaocao/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-11-29T07:15:57Z",
    "updated_at": "2018-04-10T08:32:20Z",
    "closed_at": "2017-11-29T07:22:20Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "```bash\r\n2017-11-29 15:13:57.319 [WARN ] @kemao-node-basis/project-tools/libs/WebpackTaskBase - \r\n[\"ServerPack\",\"./node_modules/express/lib/view.js\\n81:13-25 Critical dependency: the request of a \r\ndependency is an expression\\n    at CommonJsRequireContextDependency.getWarnings \r\n(C:\\\\disk0\\\\repository\\\\kemao\\\\kemao-node-basis\\\\project-\r\ntools\\\\node_modules\\\\webpack\\\\lib\\\\dependencies\\\\ContextDependency.js:39:18)\\n    at \r\nCompilation.reportDependencyErrorsAndWarnings (C:\\\\disk0\\\\repository\\\\kemao\\\\kemao-node-\r\nbasis\\\\project-tools\\\\node_modules\\\\webpack\\\\lib\\\\Compilation.js:703:24)\\n    at Compilation.finish \r\n(C:\\\\disk0\\\\repository\\\\kemao\\\\kemao-node-basis\\\\project-\r\ntools\\\\node_modules\\\\webpack\\\\lib\\\\Compilation.js:561:9)\\n    at applyPluginsParallel.err \r\n(C:\\\\disk0\\\\repository\\\\kemao\\\\kemao-node-basis\\\\project-\r\ntools\\\\node_modules\\\\webpack\\\\lib\\\\Compiler.js:506:17)\\n    at C:\\\\disk0\\\\repository\\\\kemao\\\\kemao-\r\nnode-basis\\\\project-tools\\\\node_modules\\\\tapable\\\\lib\\\\Tapable.js:289:11\\n    at _addModuleChain \r\n(C:\\\\disk0\\\\repository\\\\kemao\\\\kemao-node-basis\\\\project-\r\ntools\\\\node_modules\\\\webpack\\\\lib\\\\Compilation.js:507:11)\\n    at processModuleDependencies.err \r\n(C:\\\\disk0\\\\repository\\\\kemao\\\\kemao-node-basis\\\\project-tools\\\\node_modules\\\\webpack\\\\lib\\\\Compilation.js:477:14)\\n    at _combinedTickCallback \r\n(internal/process/next_tick.js:131:7)\\n    at process._tickDomainCallback \r\n(internal/process/next_tick.js:218:9)\\n @ ./node_modules/express/lib/view.js\\n @ \r\n./node_modules/express/lib/application.js\\n @ ./node_modules/express/lib/express.js\\n @ \r\n./node_modules/express/index.js\\n @ ./node_modules/@kemao-node-basis/lark/server/web/Router.js\\n \r\n@ ./node_modules/@kemao-node-basis/lark/server/web/index.js\\n @ ./test/src/server/index.ts\"]\r\n\r\n\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3489/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3489/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3488",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3488/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3488/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3488/events",
    "html_url": "https://github.com/expressjs/express/issues/3488",
    "id": 277442607,
    "node_id": "MDU6SXNzdWUyNzc0NDI2MDc=",
    "number": 3488,
    "title": "Git Bash start error....",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2017-11-28T16:10:48Z",
    "updated_at": "2018-05-11T17:54:09Z",
    "closed_at": "2018-05-11T17:54:09Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I've tried several times to resolve the issue that I'm having.... npm chache along with other options but every time I try starting the get bash I get this error ....can someone help me please?\r\n\r\n$ npm start\r\nnpm ERR! file C:\\Projects\\nodekb\\package.json\r\nnpm ERR! code EJSONPARSE\r\nnpm ERR! Failed to parse json\r\nnpm ERR! Unexpected token } in JSON at position 149 while parsing near '...start\": \"app.js\",\r\nnpm ERR!   },\r\nnpm ERR!   \"author\": \"Desi...'\r\nnpm ERR! File: C:\\Projects\\nodekb\\package.json\r\nnpm ERR! Failed to parse package.json data.\r\nnpm ERR! package.json must be actual JSON, not just JavaScript.\r\nnpm ERR!\r\nnpm ERR! Tell the package author to fix their package.json file. JSON.parse\r\n\r\nnpm ERR! A complete log of this run can be found in:\r\nnpm ERR!     C:\\Users\\stei0\\AppData\\Roaming\\npm-cache\\_logs\\2017-11-28T15_54_32_265Z-debug.log\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3488/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3488/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3487",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3487/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3487/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3487/events",
    "html_url": "https://github.com/expressjs/express/issues/3487",
    "id": 276250213,
    "node_id": "MDU6SXNzdWUyNzYyNTAyMTM=",
    "number": 3487,
    "title": "NuxtServerError: connect ECONNREFUSED ip:80",
    "user": {
      "login": "duqigit",
      "id": 25985156,
      "node_id": "MDQ6VXNlcjI1OTg1MTU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/25985156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/duqigit",
      "html_url": "https://github.com/duqigit",
      "followers_url": "https://api.github.com/users/duqigit/followers",
      "following_url": "https://api.github.com/users/duqigit/following{/other_user}",
      "gists_url": "https://api.github.com/users/duqigit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/duqigit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/duqigit/subscriptions",
      "organizations_url": "https://api.github.com/users/duqigit/orgs",
      "repos_url": "https://api.github.com/users/duqigit/repos",
      "events_url": "https://api.github.com/users/duqigit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/duqigit/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2017-11-23T02:11:43Z",
    "updated_at": "2017-11-23T03:11:44Z",
    "closed_at": "2017-11-23T03:11:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "![9gf nfv 5 w2razo1 rm](https://user-images.githubusercontent.com/25985156/33156635-9b14aaa6-d036-11e7-973f-f407aa4660c1.png)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3487/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3487/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3486",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3486/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3486/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3486/events",
    "html_url": "https://github.com/expressjs/express/issues/3486",
    "id": 276142803,
    "node_id": "MDU6SXNzdWUyNzYxNDI4MDM=",
    "number": 3486,
    "title": "different mime type for .bmp files since 4.16.0",
    "user": {
      "login": "Janpot",
      "id": 2109932,
      "node_id": "MDQ6VXNlcjIxMDk5MzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2109932?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Janpot",
      "html_url": "https://github.com/Janpot",
      "followers_url": "https://api.github.com/users/Janpot/followers",
      "following_url": "https://api.github.com/users/Janpot/following{/other_user}",
      "gists_url": "https://api.github.com/users/Janpot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Janpot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Janpot/subscriptions",
      "organizations_url": "https://api.github.com/users/Janpot/orgs",
      "repos_url": "https://api.github.com/users/Janpot/repos",
      "events_url": "https://api.github.com/users/Janpot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Janpot/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/17",
      "html_url": "https://github.com/expressjs/express/milestone/17",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/17/labels",
      "id": 3066819,
      "node_id": "MDk6TWlsZXN0b25lMzA2NjgxOQ==",
      "number": 17,
      "title": "4.17",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 15,
      "state": "closed",
      "created_at": "2018-01-26T16:25:16Z",
      "updated_at": "2019-05-17T01:58:27Z",
      "due_on": null,
      "closed_at": "2019-05-17T01:58:27Z"
    },
    "comments": 18,
    "created_at": "2017-11-22T17:05:11Z",
    "updated_at": "2019-05-17T00:51:36Z",
    "closed_at": "2019-05-17T00:51:36Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Mime type for `.bmp` files use to be `image/bmp` in `express < 4.15.0`. Now it is `image/x-ms-bmp`.\r\n\r\nI've been looking at the `mime` package and it looks like between version `1.3.5` and `2.0.0` it resolves to `image/x-ms-bmp`. in version `> 2.0.0` it resolves to `image/bmp` again",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3486/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3486/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3485",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3485/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3485/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3485/events",
    "html_url": "https://github.com/expressjs/express/issues/3485",
    "id": 275806475,
    "node_id": "MDU6SXNzdWUyNzU4MDY0NzU=",
    "number": 3485,
    "title": "Auto file extension lookup with multiple view engines",
    "user": {
      "login": "svenyonson",
      "id": 369966,
      "node_id": "MDQ6VXNlcjM2OTk2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/369966?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svenyonson",
      "html_url": "https://github.com/svenyonson",
      "followers_url": "https://api.github.com/users/svenyonson/followers",
      "following_url": "https://api.github.com/users/svenyonson/following{/other_user}",
      "gists_url": "https://api.github.com/users/svenyonson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svenyonson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svenyonson/subscriptions",
      "organizations_url": "https://api.github.com/users/svenyonson/orgs",
      "repos_url": "https://api.github.com/users/svenyonson/repos",
      "events_url": "https://api.github.com/users/svenyonson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svenyonson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-11-21T17:57:59Z",
    "updated_at": "2017-11-22T02:42:45Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "It is possible to select a default view extension with `app.set('view engine', 'html');`. This is fine when you only use one view engine - you can only set this once. But if I then add a second view engine, I must specify the file extension when calling render on these views. Express should be smart enough to lookup the view name with all of the registered view engines:\r\n\r\n    app.engine('html', cons.underscore);\r\n    app.engine('pug', require('pug').__express);\r\n\r\nThis should suffice for both registering the view engines and adding to the list of extensions to search for when referencing a view name without an extension\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3485/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3485/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3484",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3484/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3484/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3484/events",
    "html_url": "https://github.com/expressjs/express/pull/3484",
    "id": 275128167,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTUzNDc4NzQw",
    "number": 3484,
    "title": "Added Korean support page.",
    "user": {
      "login": "swtpumpkin",
      "id": 30548814,
      "node_id": "MDQ6VXNlcjMwNTQ4ODE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/30548814?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/swtpumpkin",
      "html_url": "https://github.com/swtpumpkin",
      "followers_url": "https://api.github.com/users/swtpumpkin/followers",
      "following_url": "https://api.github.com/users/swtpumpkin/following{/other_user}",
      "gists_url": "https://api.github.com/users/swtpumpkin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/swtpumpkin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/swtpumpkin/subscriptions",
      "organizations_url": "https://api.github.com/users/swtpumpkin/orgs",
      "repos_url": "https://api.github.com/users/swtpumpkin/repos",
      "events_url": "https://api.github.com/users/swtpumpkin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/swtpumpkin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-11-19T03:09:26Z",
    "updated_at": "2017-11-19T03:22:04Z",
    "closed_at": "2017-11-19T03:22:04Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3484",
      "html_url": "https://github.com/expressjs/express/pull/3484",
      "diff_url": "https://github.com/expressjs/express/pull/3484.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3484.patch",
      "merged_at": null
    },
    "body": "The Korean page was in the old version, but it seems that the path is not correct.\r\nSo I added a new Korean connection page.\r\nhttp://expressjs.com/ko/",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3484/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3484/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3483",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3483/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3483/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3483/events",
    "html_url": "https://github.com/expressjs/express/pull/3483",
    "id": 275118794,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTUzNDczMTk2",
    "number": 3483,
    "title": "add a semicolon in the end of line.",
    "user": {
      "login": "swtpumpkin",
      "id": 30548814,
      "node_id": "MDQ6VXNlcjMwNTQ4ODE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/30548814?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/swtpumpkin",
      "html_url": "https://github.com/swtpumpkin",
      "followers_url": "https://api.github.com/users/swtpumpkin/followers",
      "following_url": "https://api.github.com/users/swtpumpkin/following{/other_user}",
      "gists_url": "https://api.github.com/users/swtpumpkin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/swtpumpkin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/swtpumpkin/subscriptions",
      "organizations_url": "https://api.github.com/users/swtpumpkin/orgs",
      "repos_url": "https://api.github.com/users/swtpumpkin/repos",
      "events_url": "https://api.github.com/users/swtpumpkin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/swtpumpkin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-11-18T23:36:38Z",
    "updated_at": "2017-11-19T02:37:30Z",
    "closed_at": "2017-11-18T23:54:30Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3483",
      "html_url": "https://github.com/expressjs/express/pull/3483",
      "diff_url": "https://github.com/expressjs/express/pull/3483.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3483.patch",
      "merged_at": null
    },
    "body": "I added spacing to fit the coding convention.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3483/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3483/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3482",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3482/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3482/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3482/events",
    "html_url": "https://github.com/expressjs/express/issues/3482",
    "id": 274926108,
    "node_id": "MDU6SXNzdWUyNzQ5MjYxMDg=",
    "number": 3482,
    "title": "Rare error with Express and NGINX.",
    "user": {
      "login": "itsacorn",
      "id": 13553020,
      "node_id": "MDQ6VXNlcjEzNTUzMDIw",
      "avatar_url": "https://avatars.githubusercontent.com/u/13553020?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/itsacorn",
      "html_url": "https://github.com/itsacorn",
      "followers_url": "https://api.github.com/users/itsacorn/followers",
      "following_url": "https://api.github.com/users/itsacorn/following{/other_user}",
      "gists_url": "https://api.github.com/users/itsacorn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/itsacorn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/itsacorn/subscriptions",
      "organizations_url": "https://api.github.com/users/itsacorn/orgs",
      "repos_url": "https://api.github.com/users/itsacorn/repos",
      "events_url": "https://api.github.com/users/itsacorn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/itsacorn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-11-17T16:44:38Z",
    "updated_at": "2018-01-23T14:13:29Z",
    "closed_at": "2018-01-23T14:13:29Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello everyone. I've got a pretty annoying and gamebreaking issue, with Express 4.15.4 behind NGINX. This error also occurs without proxy.\r\n```\r\nTypeError: str.charCodeAt is not a function\r\n    at parseTokenList (/server/web/main/node_modules/fresh/index.js:117:17)\r\n    at fresh (/server/web/main/node_modules/fresh/index.js:60:19)\r\n    at IncomingMessage.fresh (/server/web/main/node_modules/express/lib/request.js:469:12)\r\n    at ServerResponse.send (/server/web/main/node_modules/express/lib/response.js:196:10)\r\n    at done (/server/web/main/node_modules/express/lib/response.js:967:10)\r\n    at tryHandleCache (/server/web/main/node_modules/ejs/lib/ejs.js:228:10)\r\n    at View.exports.renderFile [as engine] (/server/web/main/node_modules/ejs/lib/ejs.js:437:10)\r\n    at View.render (/server/web/main/node_modules/express/lib/view.js:127:8)\r\n    at tryRender (/server/web/main/node_modules/express/lib/application.js:640:10)\r\n    at Function.render (/server/web/main/node_modules/express/lib/application.js:592:3)\r\n```\r\nIt rarely shows instead of my .ejs page, and then PM2 restarts the server. This happens on a pure Express install aswell, without EJS and so on. I manually updated `fresh` to 0.5.2, however i was getting a similar issue on 0.5.0:\r\n```\r\nTypeError: noneMatch.split is not a function\r\n    at fresh (/server/web/main/node_modules/fresh/index.js:61:40)\r\n    at IncomingMessage.fresh (/server/web/main/node_modules/express/lib/request.js:469:12)\r\n    at ServerResponse.send (/server/web/main/node_modules/express/lib/response.js:196:10)\r\n    at ServerResponse.json (/server/web/main/node_modules/express/lib/response.js:256:15)\r\n    at ServerResponse.send (/server/web/main/node_modules/express/lib/response.js:158:21)\r\n    at app.get (/server/web/main/main.js:23:6)\r\n    at Layer.handle [as handle_request] (/server/web/main/node_modules/express/lib/router/layer.js:95:5)\r\n    at next (/server/web/main/node_modules/express/lib/router/route.js:137:13)\r\n    at Route.dispatch (/server/web/main/node_modules/express/lib/router/route.js:112:3)\r\n    at Layer.handle [as handle_request] (/server/web/main/node_modules/express/lib/router/layer.js:95:5)\r\n```\r\n\r\nHere is my Express app: \r\n```\r\nconst express = require(\"express\"),\r\n    app = express(),\r\n    path = require(\"path\"),\r\n    chalk = require(\"chalk\"),\r\n    fs = require(\"fs-extra\")\r\n\r\nconsole.log(`${chalk.blue(\"INFO\")} [${new Date(new Date().getTime() + 2 * 3600 * 1000).toUTCString().replace( / GMT$/, \"\").split(\", \").pop()}] Restart successful.`)\r\n\r\napp.set(\"view engine\", \"ejs\")\r\napp.set(\"views\", \"views\")\r\napp.use(require('express-partials')())\r\napp.use(\"/static\", express.static(path.join(__dirname, \"static\")))\r\napp.use(\"/nm\", express.static(path.join(__dirname, \"node_modules\")))\r\n\r\napp.get(\"*\", (req, res) => {\r\n    res.render(\"wip.ejs\", {title: \"Work in Progress\", location: \"wip\"})\r\n})\r\n\r\napp.listen(\"8081\")\r\n```\r\n\r\nI would like to add that this issue does NOT occur with Ghost blog running behind the same proxy.\r\nEDIT: After a restart, this happens much more often. Like half of the time....",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3482/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3482/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3481",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3481/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3481/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3481/events",
    "html_url": "https://github.com/expressjs/express/issues/3481",
    "id": 274784328,
    "node_id": "MDU6SXNzdWUyNzQ3ODQzMjg=",
    "number": 3481,
    "title": "Failed to install express with npm(npm ERR! Unexpected end of JSON input while parsing near '...\"express\",\"version\":\"')",
    "user": {
      "login": "WOOOFEI",
      "id": 21849553,
      "node_id": "MDQ6VXNlcjIxODQ5NTUz",
      "avatar_url": "https://avatars.githubusercontent.com/u/21849553?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WOOOFEI",
      "html_url": "https://github.com/WOOOFEI",
      "followers_url": "https://api.github.com/users/WOOOFEI/followers",
      "following_url": "https://api.github.com/users/WOOOFEI/following{/other_user}",
      "gists_url": "https://api.github.com/users/WOOOFEI/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WOOOFEI/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WOOOFEI/subscriptions",
      "organizations_url": "https://api.github.com/users/WOOOFEI/orgs",
      "repos_url": "https://api.github.com/users/WOOOFEI/repos",
      "events_url": "https://api.github.com/users/WOOOFEI/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WOOOFEI/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-11-17T08:13:56Z",
    "updated_at": "2017-11-19T11:25:35Z",
    "closed_at": "2017-11-19T11:25:35Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "![image](https://user-images.githubusercontent.com/21849553/32937062-cfa2ea28-cbb1-11e7-88d1-2e2e4992cb99.png)\r\n\r\n![image](https://user-images.githubusercontent.com/21849553/32937174-3c3cfcb4-cbb2-11e7-82f9-f535090a6528.png)\r\n\r\n😫I never failed to install express before",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3481/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3481/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3480",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3480/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3480/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3480/events",
    "html_url": "https://github.com/expressjs/express/issues/3480",
    "id": 274707527,
    "node_id": "MDU6SXNzdWUyNzQ3MDc1Mjc=",
    "number": 3480,
    "title": "[help wanted] path specific app.use",
    "user": {
      "login": "rustyforeal",
      "id": 28752347,
      "node_id": "MDQ6VXNlcjI4NzUyMzQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/28752347?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rustyforeal",
      "html_url": "https://github.com/rustyforeal",
      "followers_url": "https://api.github.com/users/rustyforeal/followers",
      "following_url": "https://api.github.com/users/rustyforeal/following{/other_user}",
      "gists_url": "https://api.github.com/users/rustyforeal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rustyforeal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rustyforeal/subscriptions",
      "organizations_url": "https://api.github.com/users/rustyforeal/orgs",
      "repos_url": "https://api.github.com/users/rustyforeal/repos",
      "events_url": "https://api.github.com/users/rustyforeal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rustyforeal/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 12,
    "created_at": "2017-11-17T00:03:49Z",
    "updated_at": "2017-11-19T03:58:26Z",
    "closed_at": "2017-11-19T03:58:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "There seems to be no documentation as to how to develop path specific middleware?\r\n\r\nI have 2 routes and want to have 2 different app.use() for each of these 2 routes.\r\nsomething like the below makes the middleware for '/' get executed on the call to route '/api'\r\n\r\n\r\n\r\n`myWebApp.use('/', function(req, res, next) {\r\n if (req.method != 'GET') {\r\n  res.sendStatus(403);\r\n}\r\nelse { next();}\r\n});\r\nmyWebApp.get('/', function(req, res) {\r\n res.end('works');\r\n});\r\n\r\nmyWebApp.use('/api', function(req, res, next) {\r\n  if (req.method !=POST) {\r\n   res.sendStatus(403);\r\n}\r\nelse { next(); }});\r\n\r\nmyWebApp.post('/api`, function(req, res) {\r\n res.json( { car: 'bmw'});\r\n});\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3480/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3480/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3479",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3479/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3479/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3479/events",
    "html_url": "https://github.com/expressjs/express/pull/3479",
    "id": 274361559,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTUyOTI3NzUx",
    "number": 3479,
    "title": "docs: remove unnecessary version of express-generator",
    "user": {
      "login": "marswong",
      "id": 10388933,
      "node_id": "MDQ6VXNlcjEwMzg4OTMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/10388933?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marswong",
      "html_url": "https://github.com/marswong",
      "followers_url": "https://api.github.com/users/marswong/followers",
      "following_url": "https://api.github.com/users/marswong/following{/other_user}",
      "gists_url": "https://api.github.com/users/marswong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marswong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marswong/subscriptions",
      "organizations_url": "https://api.github.com/users/marswong/orgs",
      "repos_url": "https://api.github.com/users/marswong/repos",
      "events_url": "https://api.github.com/users/marswong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marswong/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-11-16T01:15:00Z",
    "updated_at": "2017-11-16T01:18:03Z",
    "closed_at": "2017-11-16T01:16:53Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3479",
      "html_url": "https://github.com/expressjs/express/pull/3479",
      "diff_url": "https://github.com/expressjs/express/pull/3479.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3479.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3479/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3479/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3478",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3478/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3478/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3478/events",
    "html_url": "https://github.com/expressjs/express/issues/3478",
    "id": 274233364,
    "node_id": "MDU6SXNzdWUyNzQyMzMzNjQ=",
    "number": 3478,
    "title": "express  Sometimes you can't request it ",
    "user": {
      "login": "dengchq",
      "id": 8044658,
      "node_id": "MDQ6VXNlcjgwNDQ2NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8044658?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dengchq",
      "html_url": "https://github.com/dengchq",
      "followers_url": "https://api.github.com/users/dengchq/followers",
      "following_url": "https://api.github.com/users/dengchq/following{/other_user}",
      "gists_url": "https://api.github.com/users/dengchq/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dengchq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dengchq/subscriptions",
      "organizations_url": "https://api.github.com/users/dengchq/orgs",
      "repos_url": "https://api.github.com/users/dengchq/repos",
      "events_url": "https://api.github.com/users/dengchq/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dengchq/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-11-15T17:06:34Z",
    "updated_at": "2017-11-19T03:29:46Z",
    "closed_at": "2017-11-19T03:29:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "express It's normal at first，You can't make a request for a while\r\n\r\nrouter.get('/test/login', (req, res) => {\r\n    zlzpService.login(req.query.account, req.query.stamp)\r\n        .then((result) => {\r\n            res.send(result);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            res.send(err);\r\n        });\r\n});\r\n\r\nWho can help me，thanks",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3478/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3478/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3477",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3477/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3477/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3477/events",
    "html_url": "https://github.com/expressjs/express/issues/3477",
    "id": 273717556,
    "node_id": "MDU6SXNzdWUyNzM3MTc1NTY=",
    "number": 3477,
    "title": "route.get cannot match url",
    "user": {
      "login": "jimczj",
      "id": 13499146,
      "node_id": "MDQ6VXNlcjEzNDk5MTQ2",
      "avatar_url": "https://avatars.githubusercontent.com/u/13499146?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimczj",
      "html_url": "https://github.com/jimczj",
      "followers_url": "https://api.github.com/users/jimczj/followers",
      "following_url": "https://api.github.com/users/jimczj/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimczj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimczj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimczj/subscriptions",
      "organizations_url": "https://api.github.com/users/jimczj/orgs",
      "repos_url": "https://api.github.com/users/jimczj/repos",
      "events_url": "https://api.github.com/users/jimczj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimczj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-11-14T09:15:55Z",
    "updated_at": "2017-11-14T13:11:43Z",
    "closed_at": "2017-11-14T13:11:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This is the code in index.js\r\n```\r\nvar express = require('express');\r\nvar router = express.Router();\r\n\r\n/* GET home page. */\r\nrouter.get('/', function(req, res, next) {\r\n  res.render('index', { title: 'Express' });\r\n});\r\n\r\nrouter.get('/test', function(req, res, next, value) {\r\n\r\n    res.json({test:'test1'});\r\n});\r\n\r\nrouter.get('/test', function(req, res, next) {\r\n    res.json({test: 'test2'});\r\n});\r\n\r\nmodule.exports = router;\r\n```\r\n## Expected behavior\r\nreturn `{test:'test1'}` and ` value = undefined ` or throw  an Error。\r\n\r\n## Actual behavior\r\nreturn  `{test:'test2'}` and no error，if I remove \r\n```\r\nrouter.get('/test', function(req, res, next) {\r\n    res.json({test: 'test2'});\r\n});\r\n```\r\njust get a 404，it is hard to debug.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3477/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3477/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3476",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3476/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3476/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3476/events",
    "html_url": "https://github.com/expressjs/express/issues/3476",
    "id": 272701504,
    "node_id": "MDU6SXNzdWUyNzI3MDE1MDQ=",
    "number": 3476,
    "title": "Use of http2 API from master node.core in express application",
    "user": {
      "login": "uttampawar",
      "id": 8977402,
      "node_id": "MDQ6VXNlcjg5Nzc0MDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8977402?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/uttampawar",
      "html_url": "https://github.com/uttampawar",
      "followers_url": "https://api.github.com/users/uttampawar/followers",
      "following_url": "https://api.github.com/users/uttampawar/following{/other_user}",
      "gists_url": "https://api.github.com/users/uttampawar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/uttampawar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/uttampawar/subscriptions",
      "organizations_url": "https://api.github.com/users/uttampawar/orgs",
      "repos_url": "https://api.github.com/users/uttampawar/repos",
      "events_url": "https://api.github.com/users/uttampawar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/uttampawar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2017-11-09T19:56:55Z",
    "updated_at": "2018-11-06T18:27:12Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm trying to port https://github.com/Node-DC/Node-DC-EIS application (currently in node.js benchmarking) to use http2 api from Node.js core to track and understand performance impact of new api. I know how \"spdy\" module is used in express app, is this going to be similar? Or is there any guideline or migration document/readme available? What branch of express I should use for my work? This can also help test http2 support in express if that is something is important to expressjs project.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3476/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3476/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3475",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3475/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3475/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3475/events",
    "html_url": "https://github.com/expressjs/express/pull/3475",
    "id": 272239798,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTUxNDEzMzU4",
    "number": 3475,
    "title": "Fixed unexpected behaviour of parseExtendedQueryString function",
    "user": {
      "login": "ps1dr3x",
      "id": 10249616,
      "node_id": "MDQ6VXNlcjEwMjQ5NjE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/10249616?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ps1dr3x",
      "html_url": "https://github.com/ps1dr3x",
      "followers_url": "https://api.github.com/users/ps1dr3x/followers",
      "following_url": "https://api.github.com/users/ps1dr3x/following{/other_user}",
      "gists_url": "https://api.github.com/users/ps1dr3x/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ps1dr3x/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ps1dr3x/subscriptions",
      "organizations_url": "https://api.github.com/users/ps1dr3x/orgs",
      "repos_url": "https://api.github.com/users/ps1dr3x/repos",
      "events_url": "https://api.github.com/users/ps1dr3x/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ps1dr3x/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2017-11-08T15:28:58Z",
    "updated_at": "2018-02-06T08:48:57Z",
    "closed_at": "2017-11-08T15:30:22Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3475",
      "html_url": "https://github.com/expressjs/express/pull/3475",
      "diff_url": "https://github.com/expressjs/express/pull/3475.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3475.patch",
      "merged_at": null
    },
    "body": "There is a default arrays length limit in qs.parse (qs module), undocumented in Express' docs, that causes the trasformation of a query string parameter to Object instead of Array if it's length is > 20.\r\nSetting arrayLimit option to Infinity prevents this unexpected behaviour.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3475/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3475/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3474",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3474/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3474/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3474/events",
    "html_url": "https://github.com/expressjs/express/issues/3474",
    "id": 271935127,
    "node_id": "MDU6SXNzdWUyNzE5MzUxMjc=",
    "number": 3474,
    "title": "Add squirrelly template engine",
    "user": {
      "login": "nebrelbug",
      "id": 25597854,
      "node_id": "MDQ6VXNlcjI1NTk3ODU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25597854?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nebrelbug",
      "html_url": "https://github.com/nebrelbug",
      "followers_url": "https://api.github.com/users/nebrelbug/followers",
      "following_url": "https://api.github.com/users/nebrelbug/following{/other_user}",
      "gists_url": "https://api.github.com/users/nebrelbug/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nebrelbug/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nebrelbug/subscriptions",
      "organizations_url": "https://api.github.com/users/nebrelbug/orgs",
      "repos_url": "https://api.github.com/users/nebrelbug/repos",
      "events_url": "https://api.github.com/users/nebrelbug/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nebrelbug/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2017-11-07T18:26:28Z",
    "updated_at": "2018-10-27T01:56:27Z",
    "closed_at": "2018-10-15T00:29:25Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "[Squirrelly](https://github.com/nebrelbug/squirrelly) is not listed as a compatible template engine in either the wiki or website.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3474/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3474/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3473",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3473/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3473/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3473/events",
    "html_url": "https://github.com/expressjs/express/issues/3473",
    "id": 271700354,
    "node_id": "MDU6SXNzdWUyNzE3MDAzNTQ=",
    "number": 3473,
    "title": "req.query returns is not object ，is getQuery function",
    "user": {
      "login": "czjs2",
      "id": 3423319,
      "node_id": "MDQ6VXNlcjM0MjMzMTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3423319?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/czjs2",
      "html_url": "https://github.com/czjs2",
      "followers_url": "https://api.github.com/users/czjs2/followers",
      "following_url": "https://api.github.com/users/czjs2/following{/other_user}",
      "gists_url": "https://api.github.com/users/czjs2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/czjs2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/czjs2/subscriptions",
      "organizations_url": "https://api.github.com/users/czjs2/orgs",
      "repos_url": "https://api.github.com/users/czjs2/repos",
      "events_url": "https://api.github.com/users/czjs2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/czjs2/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2017-11-07T03:41:05Z",
    "updated_at": "2017-11-16T03:30:15Z",
    "closed_at": "2017-11-16T03:30:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The official document says,req.query,\r\nThis property is an object containing a property for each query string parameter in the route. If there is no query string, it is the empty object, {}.\r\n\r\nWhen I run my application ,\r\n\r\n    app.use(function(req, res, next) {\r\n         req.query \r\n        console.log(req.query); // undefined\r\n        console.log(req.query()); // \"a=3&b=2\"\r\n         next();\r\n    });\r\n\r\nthen req.query is a function   named getQuery() , not an object,why?\r\nmy express version is 4.16.2.\r\n\r\nI found the cause of the problem,Because the ‘bpmn’ package required.Here's my test code：\r\n\r\nconst express = require('express');\r\nconst http = require('http');\r\nconst bpmn = require('bpmn');\r\n\r\nlet app = express();\r\napp.use(function(req, res, next) {\r\nconsole.log(req.query); //[Function: getQuery]\r\nnext();\r\n});\r\nhttp.createServer(app).listen(8888, '0.0.0.0');\r\n\r\n//node V8.9.0\r\n//dependencies: \"bpmn\": \"^0.2.2\",\"express\": \"^4.16.2\"",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3473/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3473/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3472",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3472/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3472/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3472/events",
    "html_url": "https://github.com/expressjs/express/issues/3472",
    "id": 271041518,
    "node_id": "MDU6SXNzdWUyNzEwNDE1MTg=",
    "number": 3472,
    "title": "Setting req.query",
    "user": {
      "login": "arb",
      "id": 1591483,
      "node_id": "MDQ6VXNlcjE1OTE0ODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591483?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arb",
      "html_url": "https://github.com/arb",
      "followers_url": "https://api.github.com/users/arb/followers",
      "following_url": "https://api.github.com/users/arb/following{/other_user}",
      "gists_url": "https://api.github.com/users/arb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arb/subscriptions",
      "organizations_url": "https://api.github.com/users/arb/orgs",
      "repos_url": "https://api.github.com/users/arb/repos",
      "events_url": "https://api.github.com/users/arb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arb/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2017-11-03T16:37:04Z",
    "updated_at": "2017-11-14T20:40:58Z",
    "closed_at": "2017-11-14T20:40:58Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In my validation package celebrate, I run joi against the parsed query string. If there are any transformations applied (default value, convert `\"1\"` to `1`, etc.) I want to set that result back to `req.query` so any downstream functions are working with the validated and updated query object.\r\n\r\nIn versions 3 and 4 of express, it's as simple as `req.query = UPDATED_QUERY`. In version 5, because of [this change](https://github.com/expressjs/express/commit/dcc4eaabe86a4309437db2a853c5ef788a854699) it's not as simple anymore.\r\n\r\nWhat is the recommended way for doing this in version 5?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3472/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3472/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3471",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3471/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3471/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3471/events",
    "html_url": "https://github.com/expressjs/express/issues/3471",
    "id": 270894549,
    "node_id": "MDU6SXNzdWUyNzA4OTQ1NDk=",
    "number": 3471,
    "title": "Error while rendering the files inside a sub-directory with the name having '-'",
    "user": {
      "login": "SachinBhandari",
      "id": 17112076,
      "node_id": "MDQ6VXNlcjE3MTEyMDc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/17112076?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SachinBhandari",
      "html_url": "https://github.com/SachinBhandari",
      "followers_url": "https://api.github.com/users/SachinBhandari/followers",
      "following_url": "https://api.github.com/users/SachinBhandari/following{/other_user}",
      "gists_url": "https://api.github.com/users/SachinBhandari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SachinBhandari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SachinBhandari/subscriptions",
      "organizations_url": "https://api.github.com/users/SachinBhandari/orgs",
      "repos_url": "https://api.github.com/users/SachinBhandari/repos",
      "events_url": "https://api.github.com/users/SachinBhandari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SachinBhandari/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-11-03T07:15:37Z",
    "updated_at": "2017-11-03T09:08:52Z",
    "closed_at": "2017-11-03T09:08:52Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3471/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3471/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3470",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3470/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3470/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3470/events",
    "html_url": "https://github.com/expressjs/express/issues/3470",
    "id": 270861166,
    "node_id": "MDU6SXNzdWUyNzA4NjExNjY=",
    "number": 3470,
    "title": "Using a req. to store a reference to a helper that will be available to all controllers",
    "user": {
      "login": "fpereira1",
      "id": 868423,
      "node_id": "MDQ6VXNlcjg2ODQyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/868423?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fpereira1",
      "html_url": "https://github.com/fpereira1",
      "followers_url": "https://api.github.com/users/fpereira1/followers",
      "following_url": "https://api.github.com/users/fpereira1/following{/other_user}",
      "gists_url": "https://api.github.com/users/fpereira1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fpereira1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fpereira1/subscriptions",
      "organizations_url": "https://api.github.com/users/fpereira1/orgs",
      "repos_url": "https://api.github.com/users/fpereira1/repos",
      "events_url": "https://api.github.com/users/fpereira1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fpereira1/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-11-03T02:08:13Z",
    "updated_at": "2018-05-28T16:04:25Z",
    "closed_at": "2018-05-28T16:04:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am adding a sort of event tracking to our express app, the usual way of going about this\r\nwas to require the tracker at the top of the controller file and use it within the controller logic. For example:\r\n\r\ncontroller.js\r\n\r\n    const User = require('./models/user.js');\r\n    const tracker = require('./helpers/tracker.js');\r\n\r\n    module.exports.uploadFile = function(req, res, next) {\r\n\r\n      const userId = req.user.id;\r\n      User.findOne({ _id: userId })\r\n        .then(function(user) {\r\n            tracker.track('Uploaded a file', {\r\n               name: user.name\r\n            });\r\n\r\n            return res.send({ ok: 1 });\r\n        });\r\n        \r\n    }\r\n\r\nThis example works fine.\r\n\r\nMy second approach is to store the tracker in the `req` variable so that I don't need to require the file on all my controller files. For example:\r\n\r\napp.js\r\n\r\n    const tracker = require('./helpers/tracker.js');\r\n    app.use(function(req, res, next) {\r\n        req.tracker = tracker;\r\n        return next();\r\n    });\r\n\r\ncontroller.js\r\n\r\n    const User = require('./models/user.js');\r\n    module.exports.uploadFile = function(req, res, next) {\r\n\r\n      const userId = req.user.id;\r\n      User.findOne({ _id: userId })\r\n        .then(function(user) {\r\n            req.tracker.track('Uploaded a file', {\r\n               name: user.name\r\n            });\r\n            return res.send({ ok: 1 });\r\n        });\r\n        \r\n    }\r\n\r\nThe second example makes more sense to me, but are there any reason (performance?) that this isn't a good idea?\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3470/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3470/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3469",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3469/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3469/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3469/events",
    "html_url": "https://github.com/expressjs/express/issues/3469",
    "id": 270571150,
    "node_id": "MDU6SXNzdWUyNzA1NzExNTA=",
    "number": 3469,
    "title": "Now version of nodeJS has been LTS, so does express have some plan to update?",
    "user": {
      "login": "wildfire0304",
      "id": 20740658,
      "node_id": "MDQ6VXNlcjIwNzQwNjU4",
      "avatar_url": "https://avatars.githubusercontent.com/u/20740658?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wildfire0304",
      "html_url": "https://github.com/wildfire0304",
      "followers_url": "https://api.github.com/users/wildfire0304/followers",
      "following_url": "https://api.github.com/users/wildfire0304/following{/other_user}",
      "gists_url": "https://api.github.com/users/wildfire0304/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wildfire0304/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wildfire0304/subscriptions",
      "organizations_url": "https://api.github.com/users/wildfire0304/orgs",
      "repos_url": "https://api.github.com/users/wildfire0304/repos",
      "events_url": "https://api.github.com/users/wildfire0304/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wildfire0304/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-11-02T08:34:16Z",
    "updated_at": "2017-11-02T13:10:29Z",
    "closed_at": "2017-11-02T13:10:09Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "We all feel bad about callback, and expect  await/async feature in express ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3469/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3469/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3468",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3468/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3468/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3468/events",
    "html_url": "https://github.com/expressjs/express/issues/3468",
    "id": 270487756,
    "node_id": "MDU6SXNzdWUyNzA0ODc3NTY=",
    "number": 3468,
    "title": "req.secure is false on AWS API Gateway + AWS Lambda with HTTPS",
    "user": {
      "login": "rucas",
      "id": 2831131,
      "node_id": "MDQ6VXNlcjI4MzExMzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2831131?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rucas",
      "html_url": "https://github.com/rucas",
      "followers_url": "https://api.github.com/users/rucas/followers",
      "following_url": "https://api.github.com/users/rucas/following{/other_user}",
      "gists_url": "https://api.github.com/users/rucas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rucas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rucas/subscriptions",
      "organizations_url": "https://api.github.com/users/rucas/orgs",
      "repos_url": "https://api.github.com/users/rucas/repos",
      "events_url": "https://api.github.com/users/rucas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rucas/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-11-01T23:41:07Z",
    "updated_at": "2017-11-03T10:15:39Z",
    "closed_at": "2017-11-03T10:15:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have a simple express app on AWS Lambda + API Gateway and whenever I use `req.secure` on https I get `false` is there anyway to get `req.secure` to `true`?\r\n\r\nI can see the `x-forwarded-proto: \"https\"` being passed to the express server",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3468/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3468/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  }
]