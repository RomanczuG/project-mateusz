[
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/635669949",
    "html_url": "https://github.com/expressjs/express/issues/4298#issuecomment-635669949",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/4298",
    "id": 635669949,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTY2OTk0OQ==",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-28T23:28:58Z",
    "updated_at": "2020-05-28T23:28:58Z",
    "author_association": "MEMBER",
    "body": "Hi @CullenShane , the `req.params` property is only populated in the middleware/handler that has those parameters defined on the path. I assume you defined your error handler with no parameters (`app.use((err, res, res, next) => ...)` vs `app.use('/:param1', (err, req, res, next) => ...)` which is why the `req.params` is empty, due to the error handler having no parameters defined.\r\n\r\nBut ultimately, without providing the full code and instructions for how to reproduce the issue, we're just making guesses, so not 100% sure if the behavior you are experiencing is expected vs unexpected. If you can provide a reproduceable test-case we can run to see the issue demonstrated, we can make an accurate evaluation.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/635669949/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/635730512",
    "html_url": "https://github.com/expressjs/express/issues/4298#issuecomment-635730512",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/4298",
    "id": 635730512,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTczMDUxMg==",
    "user": {
      "login": "busticated",
      "id": 367674,
      "node_id": "MDQ6VXNlcjM2NzY3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/367674?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/busticated",
      "html_url": "https://github.com/busticated",
      "followers_url": "https://api.github.com/users/busticated/followers",
      "following_url": "https://api.github.com/users/busticated/following{/other_user}",
      "gists_url": "https://api.github.com/users/busticated/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/busticated/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/busticated/subscriptions",
      "organizations_url": "https://api.github.com/users/busticated/orgs",
      "repos_url": "https://api.github.com/users/busticated/repos",
      "events_url": "https://api.github.com/users/busticated/events{/privacy}",
      "received_events_url": "https://api.github.com/users/busticated/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-29T03:06:05Z",
    "updated_at": "2020-05-29T03:10:26Z",
    "author_association": "NONE",
    "body": "hi @dougwilson - thanks for taking a look and thanks for all the work you do (and have done over the years) maintaining express and friends üôè:pray::pray:\r\n\r\n@CullenShane and i were pairing on this one earlier so i figured i'd chime in w/ more detail. \r\n\r\nbasically, we have a fairly simple app that runs some middleware for all routes to capture data after a response is finished:\r\n\r\n```js\r\nconst onFinished = require('on-finished');\r\nmodule.exports = ({ logFoo }) => {\r\n    return (req, res, next) => {\r\n        onFinished(res, () => logFoo(req.params.foo));\r\n        next();\r\n    };\r\n};\r\n```\r\n\r\n...which hosts an endpoint like:\r\n\r\n```js\r\napp.get('/v1/stuff/:foo/config', configFooStuff);\r\n```\r\n\r\n...which ultimately calls `res.format()` like:\r\n\r\n```js\r\nconfigFooStuff(req, res) {\r\n    res.format({\r\n        'application/json': async () => {\r\n            //...\r\n        },\r\n        'application/schema+json': () => {\r\n            //...\r\n        }\r\n    });\r\n}\r\n```\r\n\r\nwhen the `Accept` header specifies something we aren't handling (e.g. `text/html`), we end up with `Uncaught TypeError: Cannot read property 'params' of undefined`. when handling a format we do support (e.g. `application/json`), `req.params` is an object w/ a valid `.foo` property and everything works as expected. further, if we add an explicit `default` handler to our `res.format()` call - e.g.:\r\n\r\n```js\r\n'default': () => {\r\n    res.status(406).json({ error: 'Not Acceptable' });\r\n}\r\n```\r\n\r\n...things work but `req.params` is an empty object.\r\n\r\nso the main question is why would `req.params` be `undefined` when `res.format()` doesn't use a `default` handler? willing to bet we're just missing something given how exercised this code must be but ü§∑‚Äç‚ôÇÔ∏è\r\n\r\nthanks again!\r\n\r\nedit: fix typos and minor derpage ü§¶ ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/635730512/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/635731614",
    "html_url": "https://github.com/expressjs/express/issues/4298#issuecomment-635731614",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/4298",
    "id": 635731614,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTczMTYxNA==",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-29T03:10:40Z",
    "updated_at": "2020-05-29T03:10:40Z",
    "author_association": "MEMBER",
    "body": "Ah, very interesting. Even more so given you are seeing the error `Uncaught TypeError: Cannot read property 'params' of undefined occurring... I am not sure how you can possibly seeing such an error with the code you gave above. I would love it if I could run it and try it out, to get that same condition to see what is happening. Is it possible you can write up a really simple app that I can call that demonstrates the issue (reproduces the error)?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/635731614/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/635731981",
    "html_url": "https://github.com/expressjs/express/issues/4298#issuecomment-635731981",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/4298",
    "id": 635731981,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTczMTk4MQ==",
    "user": {
      "login": "busticated",
      "id": 367674,
      "node_id": "MDQ6VXNlcjM2NzY3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/367674?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/busticated",
      "html_url": "https://github.com/busticated",
      "followers_url": "https://api.github.com/users/busticated/followers",
      "following_url": "https://api.github.com/users/busticated/following{/other_user}",
      "gists_url": "https://api.github.com/users/busticated/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/busticated/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/busticated/subscriptions",
      "organizations_url": "https://api.github.com/users/busticated/orgs",
      "repos_url": "https://api.github.com/users/busticated/repos",
      "events_url": "https://api.github.com/users/busticated/events{/privacy}",
      "received_events_url": "https://api.github.com/users/busticated/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-29T03:12:17Z",
    "updated_at": "2020-05-29T03:12:17Z",
    "author_association": "NONE",
    "body": ">Is it possible you can write up a really simple app that I can call that demonstrates the issue (reproduces the error)?\r\n\r\ncool, yeah that's probably the best next-step. we'll try to pull something together in the next day or two. \r\n\r\nthanks again üôè:+1:",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/635731981/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/636018076",
    "html_url": "https://github.com/expressjs/express/issues/4298#issuecomment-636018076",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/4298",
    "id": 636018076,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNjAxODA3Ng==",
    "user": {
      "login": "busticated",
      "id": 367674,
      "node_id": "MDQ6VXNlcjM2NzY3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/367674?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/busticated",
      "html_url": "https://github.com/busticated",
      "followers_url": "https://api.github.com/users/busticated/followers",
      "following_url": "https://api.github.com/users/busticated/following{/other_user}",
      "gists_url": "https://api.github.com/users/busticated/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/busticated/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/busticated/subscriptions",
      "organizations_url": "https://api.github.com/users/busticated/orgs",
      "repos_url": "https://api.github.com/users/busticated/repos",
      "events_url": "https://api.github.com/users/busticated/events{/privacy}",
      "received_events_url": "https://api.github.com/users/busticated/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-29T14:54:09Z",
    "updated_at": "2020-05-29T14:54:09Z",
    "author_association": "NONE",
    "body": "re-reading this with fresh eyes, i see i messed up the error detail ü§¶‚Äç‚ôÇÔ∏èüôÑ\r\n\r\nit's actually:\r\n\r\n```\r\nUncaught TypeError: Cannot read property 'foo' of undefined\r\n```\r\n\r\niow, `req.params` is `undefined` when we expected it always at least be an empty object.\r\n\r\nregardless, we'll put together a simplified demo that reproduces the issue :+1:",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/636018076/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/636021784",
    "html_url": "https://github.com/expressjs/express/issues/4298#issuecomment-636021784",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/4298",
    "id": 636021784,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNjAyMTc4NA==",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-29T15:00:37Z",
    "updated_at": "2020-05-29T15:00:37Z",
    "author_association": "MEMBER",
    "body": "> req.params is undefined when we expected it always at least be an empty object.\r\n\r\nAh, thank you, that does help üëç . I can say, at least, that `req.params` will always be `undefined` when the request cycle is not currently \"in\" a middleware or handler in Express. This means that when the request first comes in from Node.js it will be undefined, and also during any \"in between time\" between middlewares. When a request enters a middleware/handler, before user code is executed, Express will set up `req.params` property, but once that middleware/handler calls `next()` or throws an error, the property is removed so the next middleware/handler can populate it, if needed.\r\n\r\nIt will always be an object if the request is actively \"in\" a middleware/handler, even if it's an empty object. Since it is `undefined` for you, it means (assuming there is not some code actually setting it to `undefined` somewhere) that the request is not inside a middleware/handler of Express at all... which would be strange based on your description above.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/636021784/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/639904045",
    "html_url": "https://github.com/expressjs/express/issues/4298#issuecomment-639904045",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/4298",
    "id": 639904045,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzOTkwNDA0NQ==",
    "user": {
      "login": "busticated",
      "id": 367674,
      "node_id": "MDQ6VXNlcjM2NzY3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/367674?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/busticated",
      "html_url": "https://github.com/busticated",
      "followers_url": "https://api.github.com/users/busticated/followers",
      "following_url": "https://api.github.com/users/busticated/following{/other_user}",
      "gists_url": "https://api.github.com/users/busticated/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/busticated/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/busticated/subscriptions",
      "organizations_url": "https://api.github.com/users/busticated/orgs",
      "repos_url": "https://api.github.com/users/busticated/repos",
      "events_url": "https://api.github.com/users/busticated/events{/privacy}",
      "received_events_url": "https://api.github.com/users/busticated/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-05T23:55:47Z",
    "updated_at": "2020-06-05T23:55:47Z",
    "author_association": "NONE",
    "body": "hm. well, after all that all i can say with confidence is that this _does not_ reproduce the issue:\r\n\r\n```js\r\n// filename: repro.js\r\nconst onFinished = require('on-finished');\r\nconst express = require('express');\r\nconst app = express();\r\n\r\n\r\napp.use((req, res, next) => {\r\n\tonFinished(res, () => console.log('FOO IS:', req.params.foo));\r\n\tnext();\r\n});\r\n\r\napp.get('/v1/stuff/:foo/config', (req, res) => {\r\n\tres.format({\r\n\t\t'application/json': () => {\r\n\t\t\tres.status(200).json({ ok: true });\r\n\t\t},\r\n\t\t'application/schema+json': () => {\r\n\t\t\tres.status(200).type('application/schema+json').send('ok');\r\n\t\t}\r\n\t});\r\n});\r\n\r\napp.listen(9001);\r\n\r\nmodule.exports = app;\r\n```\r\n\r\nstart the server:\r\n\r\n```sh\r\n./node repro.js\r\n```\r\n\r\nhit the endpoint:\r\n\r\n```sh\r\ncurl http://localhost:9001/v1/stuff/12345/config -H \"Accept: text/html\"\r\n```\r\n\r\nso, i think we have more digging to do :pray::wave:",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/639904045/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/656758077",
    "html_url": "https://github.com/expressjs/express/issues/4298#issuecomment-656758077",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/4298",
    "id": 656758077,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Njc1ODA3Nw==",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-10T16:12:06Z",
    "updated_at": "2020-07-10T16:12:06Z",
    "author_association": "MEMBER",
    "body": "Thanks for that update @busticated . I just wanted to post here to see if you found anything additional at all or not so far.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/656758077/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/656767756",
    "html_url": "https://github.com/expressjs/express/issues/4298#issuecomment-656767756",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/4298",
    "id": 656767756,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Njc2Nzc1Ng==",
    "user": {
      "login": "busticated",
      "id": 367674,
      "node_id": "MDQ6VXNlcjM2NzY3NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/367674?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/busticated",
      "html_url": "https://github.com/busticated",
      "followers_url": "https://api.github.com/users/busticated/followers",
      "following_url": "https://api.github.com/users/busticated/following{/other_user}",
      "gists_url": "https://api.github.com/users/busticated/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/busticated/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/busticated/subscriptions",
      "organizations_url": "https://api.github.com/users/busticated/orgs",
      "repos_url": "https://api.github.com/users/busticated/repos",
      "events_url": "https://api.github.com/users/busticated/events{/privacy}",
      "received_events_url": "https://api.github.com/users/busticated/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-10T16:32:01Z",
    "updated_at": "2020-07-10T16:32:01Z",
    "author_association": "NONE",
    "body": "thanks for the ping @dougwilson :pray: no, we haven't been able to dig much further into this one yet. feel free to close it if that helps improve your signal-to-noise ratio üòÅ \r\n\r\nthe one thing i did turn up is that - in our app at least - we get the same error / issue when invoking Express' default error handler ([docs](https://expressjs.com/en/guide/error-handling.html#the-default-error-handler)) - that is, `req.params` is not an object and we get `Uncaught TypeError: Cannot read property 'foo' of undefined`.\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/656767756/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/comments/656770286",
    "html_url": "https://github.com/expressjs/express/issues/4298#issuecomment-656770286",
    "issue_url": "https://api.github.com/repos/expressjs/express/issues/4298",
    "id": 656770286,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Njc3MDI4Ng==",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-10T16:37:23Z",
    "updated_at": "2020-07-10T16:37:23Z",
    "author_association": "MEMBER",
    "body": "> the one thing i did turn up is that - in our app at least - we get the same error / issue when invoking Express' default error handler (docs) - that is, req.params is not an object and we get Uncaught TypeError: Cannot read property 'foo' of undefined.\r\n\r\nAs for this, that is definately expected, as `req.params` is only populated _while_ the request/response lifecycle is within a handler that defined parameters. Once it leaves the handler and re-enters into the routing system, `req.params` is cleared in order to populate again for the next route. In order for a request/response to have reached the default error handler, it had to have left a handler (or never entered one) and gone back into the routing system.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/comments/656770286/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]