[
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3671",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3671/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3671/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3671/events",
    "html_url": "https://github.com/expressjs/express/issues/3671",
    "id": 332638522,
    "node_id": "MDU6SXNzdWUzMzI2Mzg1MjI=",
    "number": 3671,
    "title": "Question about middleware in Routers",
    "user": {
      "login": "rsinensis",
      "id": 6966865,
      "node_id": "MDQ6VXNlcjY5NjY4NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6966865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rsinensis",
      "html_url": "https://github.com/rsinensis",
      "followers_url": "https://api.github.com/users/rsinensis/followers",
      "following_url": "https://api.github.com/users/rsinensis/following{/other_user}",
      "gists_url": "https://api.github.com/users/rsinensis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rsinensis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rsinensis/subscriptions",
      "organizations_url": "https://api.github.com/users/rsinensis/orgs",
      "repos_url": "https://api.github.com/users/rsinensis/repos",
      "events_url": "https://api.github.com/users/rsinensis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rsinensis/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-06-15T03:55:22Z",
    "updated_at": "2018-06-15T04:03:16Z",
    "closed_at": "2018-06-15T04:03:07Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "middleware auth\r\n```js\r\nexports.isClient = (req, res, next) => {\r\n    if (!req.user) {\r\n        return res.json({\r\n            \"code\": 400,\r\n            \"msg\": \"no auth user\"\r\n        });\r\n    }\r\n    next();\r\n}\r\n\r\nexports.isAdmin = (req, res, next) => {\r\n    if (!req.user || !req.user.isAdmin) {\r\n        return res.json({\r\n            \"code\": 400,\r\n            \"msg\": \"no auth admin\"\r\n        });\r\n    }\r\n    next();\r\n}\r\n```\r\n\r\narticle admin router\r\n```js\r\nconst express = require('express');\r\nconst router = express.Router();\r\nconst authMiddleware = require('../middlewares/auth');\r\nconst articleController = require('../controllers/article');\r\n\r\nrouter.use(authMiddleware.isAdmin);\r\n\r\nrouter.get('/api/admin/articles', articleController.getArticles);\r\nrouter.post('/api/admin/articles', articleController.postArticle);\r\nrouter.delete('/api/admin/articles', articleController.deleteArticles);\r\nrouter.get('/api/admin/articles/:id', articleController.getArticle);\r\nrouter.put('/api/admin/articles/:id', articleController.putArticle);\r\n\r\nmodule.exports = router;\r\n```\r\n\r\narticle client router\r\n```js\r\nconst express = require('express');\r\nconst router = express.Router();\r\nconst authMiddleware = require('../middlewares/auth');\r\nconst articleController = require('../controllers/article');\r\n\r\nrouter.use(authMiddleware.isClient);\r\n\r\nrouter.get('/api/client/articles', articleController.getArticles);\r\n\r\nmodule.exports = router;\r\n```\r\n\r\n```js\r\nconst articleClientRouter = require('./routers/articleClient');\r\nconst articleAdminRouter = require('./routers/articleAdmin');\r\n\r\napp.use('/', articleClientRouter);\r\napp.use('/', articleAdminRouter);\r\n```\r\n\r\nWhen I use client user to access /api/client/articles\r\n```\r\n\"/api/client/articles\" -> isClient -> isAdmin -> \"no auth admin\"\r\n```\r\nWhy go through the isAdmin? the router places the middleware not according to the path, but according to the controller(articleController.getArticles)?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3671/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3671/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3670",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3670/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3670/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3670/events",
    "html_url": "https://github.com/expressjs/express/issues/3670",
    "id": 332439141,
    "node_id": "MDU6SXNzdWUzMzI0MzkxNDE=",
    "number": 3670,
    "title": "The object req goes away once I pass a param to my proxyChooser method",
    "user": {
      "login": "c0debreaker",
      "id": 3783931,
      "node_id": "MDQ6VXNlcjM3ODM5MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3783931?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/c0debreaker",
      "html_url": "https://github.com/c0debreaker",
      "followers_url": "https://api.github.com/users/c0debreaker/followers",
      "following_url": "https://api.github.com/users/c0debreaker/following{/other_user}",
      "gists_url": "https://api.github.com/users/c0debreaker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/c0debreaker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/c0debreaker/subscriptions",
      "organizations_url": "https://api.github.com/users/c0debreaker/orgs",
      "repos_url": "https://api.github.com/users/c0debreaker/repos",
      "events_url": "https://api.github.com/users/c0debreaker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/c0debreaker/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-06-14T14:55:11Z",
    "updated_at": "2018-06-14T15:11:12Z",
    "closed_at": "2018-06-14T14:59:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This code works\r\n```\r\nproxyChooser = function (pathname, req) {\r\n  return req.cookies.airlineCode === globalAirlineCode;\r\n};\r\n \r\nacmeProxy = {\r\n  agent: new HttpsProxyAgent('http://proxy.example.com:3128'),\r\n  target: 'http://acme.example.com',\r\n  ws: true,\r\n  logLevel: 'silent'\r\n};\r\n \r\napp.use('/api', function (req, res, next) {\r\n  var acode = 'acme';\r\n  if (req.cookies.airlineCode === acode) {\r\n    globalAirlineCode = acode;\r\n    return next();\r\n  }\r\n  next();\r\n}, proxy(proxyChooser, acmeProxy));\r\n```\r\n\r\nUntil I change my `app.use` to this\r\n```\r\napp.use('/api', function (req, res, next) {\r\n  var acode = 'acme';\r\n  if (req.cookies.airlineCode === acode) {\r\n    globalAirlineCode = acode;\r\n    return next();\r\n  }\r\n  next();\r\n}, proxy(proxyChooser('acme'), acmeProxy));\r\n```\r\n\r\nI really need to pass a string to the proxyChooser so I can fix the validation.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3670/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3670/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3669",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3669/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3669/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3669/events",
    "html_url": "https://github.com/expressjs/express/issues/3669",
    "id": 331760534,
    "node_id": "MDU6SXNzdWUzMzE3NjA1MzQ=",
    "number": 3669,
    "title": "req.is always returns null for application/vnd.api+json",
    "user": {
      "login": "canterberry",
      "id": 4053794,
      "node_id": "MDQ6VXNlcjQwNTM3OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4053794?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/canterberry",
      "html_url": "https://github.com/canterberry",
      "followers_url": "https://api.github.com/users/canterberry/followers",
      "following_url": "https://api.github.com/users/canterberry/following{/other_user}",
      "gists_url": "https://api.github.com/users/canterberry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/canterberry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/canterberry/subscriptions",
      "organizations_url": "https://api.github.com/users/canterberry/orgs",
      "repos_url": "https://api.github.com/users/canterberry/repos",
      "events_url": "https://api.github.com/users/canterberry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/canterberry/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2018-06-12T21:28:27Z",
    "updated_at": "2018-06-13T02:57:40Z",
    "closed_at": "2018-06-13T02:56:03Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Express version: 4.16.3\r\n\r\nThis content type is mandatory for [JSON API 1.0 specification](https://jsonapi.org) compliance.\r\n\r\n```\r\ntypeis('application/vnd.api+json', 'application/vnd.api+json');// returns \"application/vnd.api+json\"\r\n\r\nreq.get('Content-Type');// returns \"application/vnd.api+json\"\r\n\r\nreq.is(\"application/vnd.api+json\");// returns false\r\n```\r\n\r\nWorkaround is to use `req.get('Content-Type')` and perform a string comparison.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3669/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3669/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3668",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3668/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3668/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3668/events",
    "html_url": "https://github.com/expressjs/express/issues/3668",
    "id": 331543018,
    "node_id": "MDU6SXNzdWUzMzE1NDMwMTg=",
    "number": 3668,
    "title": "Middleware doesn't see headers",
    "user": {
      "login": "thedjdoorn",
      "id": 10856000,
      "node_id": "MDQ6VXNlcjEwODU2MDAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/10856000?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thedjdoorn",
      "html_url": "https://github.com/thedjdoorn",
      "followers_url": "https://api.github.com/users/thedjdoorn/followers",
      "following_url": "https://api.github.com/users/thedjdoorn/following{/other_user}",
      "gists_url": "https://api.github.com/users/thedjdoorn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thedjdoorn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thedjdoorn/subscriptions",
      "organizations_url": "https://api.github.com/users/thedjdoorn/orgs",
      "repos_url": "https://api.github.com/users/thedjdoorn/repos",
      "events_url": "https://api.github.com/users/thedjdoorn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thedjdoorn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-06-12T11:13:20Z",
    "updated_at": "2018-06-12T13:59:45Z",
    "closed_at": "2018-06-12T13:59:45Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am working on this Angular app that uses NodeJS/express as backend. Whenever a call is made from the frontend, the authorization token (which is a token generated by [jsonwebtoken](https://www.npmjs.com/package/jsonwebtoken)) is put in the _Authorization_ header. I've got this teeny-tiny problem where the middleware can't see the Authorization header.\r\n\r\n**Yes,** I did make sure the client is allowed to use those headers\r\n``` javascript\r\napp.use(function (req, res, next) {\r\n  res.header('Access-Control-Allow-Origin', '*/*');\r\n  res.header('Access-Control-Expose-Headers','Authorization');\r\n  res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept, Authorization');\r\n  res.header('Access-Control-Allow-Methods', 'GET, PUT, POST, DELETE');\r\n  res.header('Access-Control-Allow-Credentials', 'true');\r\n  next();\r\n});\r\n```\r\n\r\n**Yes,** I'm pretty sure my middleware function is correct\r\n``` javascript\r\nrouter.use((req,res,next) => {\r\n  let decoded = jwt.verify(req.get('Authorization'), req.app.get('key'));\r\n  req.type = decoded.type;\r\n  req.user = decoded.id;\r\n  next();\r\n});\r\n```\r\nPlease note that this middleware function has also been tried app-wide, without any result.\r\n\r\nNow here are two things that make this issue a little bit more interesting:\r\n\r\n1. If I make an API call from SuperTest, the middleware works just fine.\r\n(This is the point where you're going to be like _\"Bro this sounds like an Angular issue\"_ but...)\r\n2. The Authorization header works just fine in GET/POST functions defined on the router.\r\n\r\nCan somebody explain to me what on earth is happening?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3668/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3668/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3667",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3667/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3667/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3667/events",
    "html_url": "https://github.com/expressjs/express/issues/3667",
    "id": 330956910,
    "node_id": "MDU6SXNzdWUzMzA5NTY5MTA=",
    "number": 3667,
    "title": "When running examples in docker - can't kill'em using CTRL+C",
    "user": {
      "login": "lakruzz",
      "id": 155492,
      "node_id": "MDQ6VXNlcjE1NTQ5Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/155492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lakruzz",
      "html_url": "https://github.com/lakruzz",
      "followers_url": "https://api.github.com/users/lakruzz/followers",
      "following_url": "https://api.github.com/users/lakruzz/following{/other_user}",
      "gists_url": "https://api.github.com/users/lakruzz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lakruzz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lakruzz/subscriptions",
      "organizations_url": "https://api.github.com/users/lakruzz/orgs",
      "repos_url": "https://api.github.com/users/lakruzz/repos",
      "events_url": "https://api.github.com/users/lakruzz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lakruzz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 8636393,
        "node_id": "MDU6TGFiZWw4NjM2Mzkz",
        "url": "https://api.github.com/repos/expressjs/express/labels/wontfix",
        "name": "wontfix",
        "color": "ffffff",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-06-10T10:21:26Z",
    "updated_at": "2018-06-10T13:15:38Z",
    "closed_at": "2018-06-10T12:18:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm running `node` and `npm` from a docker container - without actually installing the tools locally. The following works fine:\r\n\r\n```shell\r\ngit clone https://github.com/expressjs/express.git\r\ncd expressjs\r\ndocker run -it --rm -p 3000:3000 -v $(pwd):/app:rw -w /app node:10  npm install\r\ndocker run -it --rm -p 3000:3000 -v $(pwd):/app:rw -w /app node:10  node examples/mvc/\r\n```\r\n(now browse to port 3000 on your docker host IP)\r\n\r\nHowever, as discussed in [node/issues#4182](https://github.com/nodejs/node/issues/4182) hitting `<CTRL>+C` doesn't stop the process running in the docker host, the docker host receives it and passes it on (that's what the `-i` + `-t` switches to `docker run` does) but the express server ignores it. \r\n\r\nConsequently the behaviour is different from running the same example with a native `node` installation:\r\n\r\n```shell\r\n...\r\nnode examples/mvc/\r\n```\r\n\r\nAdding the following snippet to (in this example to [`expressjs/examples/mvc/index.js`](https://github.com/expressjs/express/blob/master/examples/mvc/index.js) solves the issue:\r\n\r\n```node\r\n// Some plumbing that's required if the process is running inside a docker\r\n// container and you want to be able to kill it from the outside using CTRL+C\r\nprocess.on('SIGINT', function() {\r\n    process.exit();\r\n});\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3667/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3667/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3666",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3666/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3666/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3666/events",
    "html_url": "https://github.com/expressjs/express/issues/3666",
    "id": 329905161,
    "node_id": "MDU6SXNzdWUzMjk5MDUxNjE=",
    "number": 3666,
    "title": "Route path leaking into Mongoose code in route handler",
    "user": {
      "login": "cjrutherford",
      "id": 9447239,
      "node_id": "MDQ6VXNlcjk0NDcyMzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9447239?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cjrutherford",
      "html_url": "https://github.com/cjrutherford",
      "followers_url": "https://api.github.com/users/cjrutherford/followers",
      "following_url": "https://api.github.com/users/cjrutherford/following{/other_user}",
      "gists_url": "https://api.github.com/users/cjrutherford/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cjrutherford/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cjrutherford/subscriptions",
      "organizations_url": "https://api.github.com/users/cjrutherford/orgs",
      "repos_url": "https://api.github.com/users/cjrutherford/repos",
      "events_url": "https://api.github.com/users/cjrutherford/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cjrutherford/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2018-06-06T14:55:46Z",
    "updated_at": "2018-06-06T16:20:34Z",
    "closed_at": "2018-06-06T16:20:34Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm not entirely sure that this is caused from Express or Mongoose, but I have a feeling that the mongoose code is correct, and the express is not. \r\n\r\n**Background**\r\n\r\nNode Version: 8.11.2\r\nExpress Version: 4.6.13\r\nMongoose Version: 5.1.3\r\n\r\n**Problem Code**\r\n```\r\nrouter.get('/list', (req,res) => {\r\n  Insider.find({}, {id: 1}, (err, insiders) => {\r\n    if(err){\r\n      return res.status(400).json(err);\r\n    }\r\n    return res.json(insiders);\r\n  });\r\n});\r\n```\r\nOR \r\n```\r\nrouter.get('/list', (req,res) => {\r\n  Insider.find({},{id:1}).then(insiders => {\r\n    if(!insiders) return res.status(400).json({error: \"unable to locate insiders\"});\r\n    res.json(insiders);\r\n  }).catch(err => res.status(400).json(err));\r\n});\r\n```\r\n\r\nRegardless of the setup, the route never returns, and logs this error to the app:\r\n\r\n> Cast to ObjectId failed for value \"list\" at path \"_id\" for model \"insiders\"\r\n  CastError: Cast to ObjectId failed for value \"list\" at path \"_id\" for model \"insiders\"\r\n      at new CastError (C:\\Users\\rutherfordc\\Documents\\GitHub\\ccs-express-mgo\\node_modules\\mongoose\\lib\\error\\cast.js:27:11)\r\n      at ObjectId.cast (C:\\Users\\rutherfordc\\Documents\\GitHub\\ccs-express-mgo\\node_modules\\mongoose\\lib\\schema\\objectid.js:158:13)\r\n      at ObjectId.SchemaType.applySetters (C:\\Users\\rutherfordc\\Documents\\GitHub\\ccs-express-mgo\\node_modules\\mongoose\\lib\\schematype.js:724:12)\r\n      at ObjectId.SchemaType._castForQuery (C:\\Users\\rutherfordc\\Documents\\GitHub\\ccs-express-mgo\\node_modules\\mongoose\\lib\\schematype.js:1113:15)\r\n      at ObjectId.SchemaType.castForQuery (C:\\Users\\rutherfordc\\Documents\\GitHub\\ccs-express-mgo\\node_modules\\mongoose\\lib\\schematype.js:1103:15)\r\n      at ObjectId.SchemaType.castForQueryWrapper (C:\\Users\\rutherfordc\\Documents\\GitHub\\ccs-express-mgo\\node_modules\\mongoose\\lib\\schematype.js:1082:15)\r\n      at cast (C:\\Users\\rutherfordc\\Documents\\GitHub\\ccs-express-mgo\\node_modules\\mongoose\\lib\\cast.js:300:32)\r\n      at model.Query.Query.cast (C:\\Users\\rutherfordc\\Documents\\GitHub\\ccs-express-mgo\\node_modules\\mongoose\\lib\\query.js:3309:12)\r\n      at model.Query.Query._castConditions (C:\\Users\\rutherfordc\\Documents\\GitHub\\ccs-express-mgo\\node_modules\\mongoose\\lib\\query.js:1293:10)\r\n      at model.Query.Query._findOne (C:\\Users\\rutherfordc\\Documents\\GitHub\\ccs-express-mgo\\node_modules\\mongoose\\lib\\query.js:1518:8)\r\n      at process.nextTick (C:\\Users\\rutherfordc\\Documents\\GitHub\\ccs-express-mgo\\node_modules\\kareem\\index.js:333:33)\r\n      at process._tickCallback (internal/process/next_tick.js:112:11)\r\n\r\n\r\nI've confirmed that it's the route path that is leaking. (example: changing the route path to `/path` causes \"path\" to be in >Cast to ObjectId failed for value \"path\" at path \"_id\" for model \"insiders\"\r\n\r\nEDIT: Typo in code.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3666/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3666/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3665",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3665/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3665/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3665/events",
    "html_url": "https://github.com/expressjs/express/issues/3665",
    "id": 329407380,
    "node_id": "MDU6SXNzdWUzMjk0MDczODA=",
    "number": 3665,
    "title": "Router Bug: The business logic error but tell me route 404 cannot found",
    "user": {
      "login": "NextZeus",
      "id": 10203487,
      "node_id": "MDQ6VXNlcjEwMjAzNDg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10203487?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NextZeus",
      "html_url": "https://github.com/NextZeus",
      "followers_url": "https://api.github.com/users/NextZeus/followers",
      "following_url": "https://api.github.com/users/NextZeus/following{/other_user}",
      "gists_url": "https://api.github.com/users/NextZeus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NextZeus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NextZeus/subscriptions",
      "organizations_url": "https://api.github.com/users/NextZeus/orgs",
      "repos_url": "https://api.github.com/users/NextZeus/repos",
      "events_url": "https://api.github.com/users/NextZeus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NextZeus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2018-06-05T11:06:49Z",
    "updated_at": "2018-06-14T09:10:02Z",
    "closed_at": "2018-06-14T06:20:09Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "```\r\n// redis.js\r\nvar ioredis = require('ioredis');\r\nfunction Redis() {\r\n    this.client = null;\r\n}\r\n\r\nRedis.prototype.init = function(){\r\n    self.client = new ioredis({\r\n        \"port\": 6379,\r\n        \"host\": \"127.0.0.1\"\r\n    });\r\n}\r\n\r\nmodule.exports = Redis;\r\n\r\n\r\n//app.js\r\n\r\nvar router = require('./router/index.js');\r\napp.use('/', router);\r\n\r\n\r\n//index.js\r\n\r\nlet router = require('express').Router();\r\nlet redis = require('./redis.js');\r\n\r\nrouter.post('/a/b', function(req, res){\r\n    // redis command usage error but tell me '/a/b' route not found\r\n     return redis.client.hincr(key, field, value )\r\n        .then(() => {\r\n            return res.status(200).json({status: 'ok'});\r\n        })\r\n        .catch(error => {\r\n            //not catched the error \r\n            return res.status(200).json({status:'fail'});\r\n        });\r\n})\r\nmodule.exports = router;\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3665/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3665/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3664",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3664/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3664/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3664/events",
    "html_url": "https://github.com/expressjs/express/issues/3664",
    "id": 329384322,
    "node_id": "MDU6SXNzdWUzMjkzODQzMjI=",
    "number": 3664,
    "title": "How Express use index.html as home page?",
    "user": {
      "login": "yzfdjzwl",
      "id": 21030370,
      "node_id": "MDQ6VXNlcjIxMDMwMzcw",
      "avatar_url": "https://avatars.githubusercontent.com/u/21030370?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yzfdjzwl",
      "html_url": "https://github.com/yzfdjzwl",
      "followers_url": "https://api.github.com/users/yzfdjzwl/followers",
      "following_url": "https://api.github.com/users/yzfdjzwl/following{/other_user}",
      "gists_url": "https://api.github.com/users/yzfdjzwl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yzfdjzwl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yzfdjzwl/subscriptions",
      "organizations_url": "https://api.github.com/users/yzfdjzwl/orgs",
      "repos_url": "https://api.github.com/users/yzfdjzwl/repos",
      "events_url": "https://api.github.com/users/yzfdjzwl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yzfdjzwl/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-06-05T09:57:31Z",
    "updated_at": "2018-06-06T09:08:43Z",
    "closed_at": "2018-06-05T13:21:53Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "By default, I wonder express how to use `index.html` as home page.\r\n\r\nI look up sources, can't find where did it happen. Very thanks!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3664/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3664/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3663",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3663/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3663/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3663/events",
    "html_url": "https://github.com/expressjs/express/issues/3663",
    "id": 329151459,
    "node_id": "MDU6SXNzdWUzMjkxNTE0NTk=",
    "number": 3663,
    "title": "Router bypass callbacks not working with `Router.use`",
    "user": {
      "login": "csvn",
      "id": 8770194,
      "node_id": "MDQ6VXNlcjg3NzAxOTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8770194?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/csvn",
      "html_url": "https://github.com/csvn",
      "followers_url": "https://api.github.com/users/csvn/followers",
      "following_url": "https://api.github.com/users/csvn/following{/other_user}",
      "gists_url": "https://api.github.com/users/csvn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/csvn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/csvn/subscriptions",
      "organizations_url": "https://api.github.com/users/csvn/orgs",
      "repos_url": "https://api.github.com/users/csvn/repos",
      "events_url": "https://api.github.com/users/csvn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/csvn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-06-04T17:38:52Z",
    "updated_at": "2018-06-04T19:37:36Z",
    "closed_at": "2018-06-04T17:50:04Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello, when I use the code below, I expected `'SUCCESS'` to be rendered, but I get `'ERROR'`. If I change the `router.use` to `router.get` it works as expected. Removing `'/'` from `app.use()` does not seem to matter either.\r\n\r\n```javascript\r\nconst express = require('express');\r\nconst app = express();\r\n\r\napp.use('/', (req, res, next) => {\r\n  next('route');\r\n}, (req, res) => {\r\n  res.status(500).send('ERROR');\r\n});\r\n\r\napp.get('/', (req, res) => {\r\n  res.send('SUCCESS');\r\n});\r\n\r\napp.listen(8080, () => console.log('Server running on port 8080.'));\r\n```\r\n\r\nI could not find any related issues or any reason for this behavior on the docs, but please let me know if I missed anything in the bug report or docs.\r\n\r\n## Versions\r\n\r\n**express@4.16.3**  \r\n**node@10.3.0**",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3663/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3663/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3662",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3662/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3662/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3662/events",
    "html_url": "https://github.com/expressjs/express/issues/3662",
    "id": 329109610,
    "node_id": "MDU6SXNzdWUzMjkxMDk2MTA=",
    "number": 3662,
    "title": "how to use express with typescript?",
    "user": {
      "login": "ReExia",
      "id": 22864474,
      "node_id": "MDQ6VXNlcjIyODY0NDc0",
      "avatar_url": "https://avatars.githubusercontent.com/u/22864474?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ReExia",
      "html_url": "https://github.com/ReExia",
      "followers_url": "https://api.github.com/users/ReExia/followers",
      "following_url": "https://api.github.com/users/ReExia/following{/other_user}",
      "gists_url": "https://api.github.com/users/ReExia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ReExia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ReExia/subscriptions",
      "organizations_url": "https://api.github.com/users/ReExia/orgs",
      "repos_url": "https://api.github.com/users/ReExia/repos",
      "events_url": "https://api.github.com/users/ReExia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ReExia/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2018-06-04T15:38:21Z",
    "updated_at": "2018-06-04T16:35:09Z",
    "closed_at": "2018-06-04T16:17:11Z",
    "author_association": "NONE",
    "active_lock_reason": "spam",
    "body": "how to use express with typescript? can express support typescript?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3662/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3662/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3661",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3661/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3661/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3661/events",
    "html_url": "https://github.com/expressjs/express/issues/3661",
    "id": 328729068,
    "node_id": "MDU6SXNzdWUzMjg3MjkwNjg=",
    "number": 3661,
    "title": "static serving etag not changing while file has changed on disk",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-06-02T09:20:57Z",
    "updated_at": "2018-06-02T15:31:48Z",
    "closed_at": "2018-06-02T15:31:48Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\r\nI'm having trouble while trying to understand the beheaviour of static files serving in express, especially the use of Etag.\r\n[MDN says about Etag](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag) : \r\n\r\n> If the resource at a given URL changes, a new Etag value must be generated. Etags are therefore similar to fingerprints and might also be used for tracking purposes by some servers. A comparison of them allows to quickly determine whether two representations of a resource are the same, but they might also be set to persist indefinitely by a tracking server\r\n\r\nBut this is not the beheaviour I am having. This is what happens : \r\nWhen I edit the react build file In the static directory (meaning, add/remove text, save, build), this Is not taken in consideration by express and the Etag of the resource does not change.\r\n\r\nHere is how I declare the static use : \r\n`app.use('/client', express.static('client', {maxAge: '1d'}));\r\n`\r\nCould someone explain why the Etag does not change when the file has changed on disk ?\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3661/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3661/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3660",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3660/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3660/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3660/events",
    "html_url": "https://github.com/expressjs/express/issues/3660",
    "id": 326526822,
    "node_id": "MDU6SXNzdWUzMjY1MjY4MjI=",
    "number": 3660,
    "title": "using '*' with express.static redirects all the urls",
    "user": {
      "login": "vdegenne",
      "id": 2827383,
      "node_id": "MDQ6VXNlcjI4MjczODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2827383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vdegenne",
      "html_url": "https://github.com/vdegenne",
      "followers_url": "https://api.github.com/users/vdegenne/followers",
      "following_url": "https://api.github.com/users/vdegenne/following{/other_user}",
      "gists_url": "https://api.github.com/users/vdegenne/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vdegenne/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vdegenne/subscriptions",
      "organizations_url": "https://api.github.com/users/vdegenne/orgs",
      "repos_url": "https://api.github.com/users/vdegenne/repos",
      "events_url": "https://api.github.com/users/vdegenne/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vdegenne/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2018-05-25T13:35:20Z",
    "updated_at": "2019-05-10T03:04:57Z",
    "closed_at": "2018-05-26T18:36:56Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "I am facing quite an unexpected behavior. I am using express for my back-end REST api and to serve the statics which is a Polymer front-end application. If I use\r\n\r\n```javascript\r\napp.use(express.static('public/build'));\r\n// or\r\napp.use('/', express.static('public/build'));\r\n```\r\nand start my node app, and request `http://localhost:3000/`, the application works normally. Again it is a Polymer application that means if I click on local links the page is not refreshing because it's using the `history` api, so for instance if I click `<a href=\"/about\">about</a>` the application will just load the appropriate view and will request appropriate data using an Ajax mechanism. That means the application seems to work normally but If I refresh the page say while the URL is `http://localhost:3000/about` express won't have a clue what `/about` route is and will just output `Cannot GET /about` on the page.\r\n\r\nMy Polymer apps need to be able to handle every URLs because there is also a 404 view, so it's ok to direct all routes to the same statics. My first thought was to write : \r\n\r\n```javascript\r\napp.use('*', express.static('public/build'));\r\n```\r\nBut now I encounter this issue where express tries to redirect (301) all my URLs,\r\n\r\n<img src=\"https://cdn1.imggmi.com/uploads/2018/5/25/7ec0b6824b5cc89deb03e41026996b1c-full.png\">\r\n\r\nit redirects all URLs even the static files like scripts and try to add a trailing slashes, which results in a complete fails to load my application..",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3660/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3660/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3659",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3659/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3659/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3659/events",
    "html_url": "https://github.com/expressjs/express/issues/3659",
    "id": 325389051,
    "node_id": "MDU6SXNzdWUzMjUzODkwNTE=",
    "number": 3659,
    "title": "http.ServerResponse is undefined",
    "user": {
      "login": "EleosOS",
      "id": 24414799,
      "node_id": "MDQ6VXNlcjI0NDE0Nzk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/24414799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EleosOS",
      "html_url": "https://github.com/EleosOS",
      "followers_url": "https://api.github.com/users/EleosOS/followers",
      "following_url": "https://api.github.com/users/EleosOS/following{/other_user}",
      "gists_url": "https://api.github.com/users/EleosOS/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EleosOS/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EleosOS/subscriptions",
      "organizations_url": "https://api.github.com/users/EleosOS/orgs",
      "repos_url": "https://api.github.com/users/EleosOS/repos",
      "events_url": "https://api.github.com/users/EleosOS/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EleosOS/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 11,
    "created_at": "2018-05-22T17:18:53Z",
    "updated_at": "2021-11-01T05:46:24Z",
    "closed_at": "2018-05-22T20:30:11Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hey there, I got this error (like #3592) when trying to compile a react app which was created by create-react-app. It uses express to get socket.io running.\r\n\r\nNode.js: 8.11.1\r\nExpress: 4.16.3\r\n\r\n![graphic](https://user-images.githubusercontent.com/24414799/40378701-9e483afc-5df4-11e8-9b3b-be837abdbd69.png)\r\n\r\nI've uploaded the code and instructions how to run the app [here.](https://github.com/EleosOS/chatOS)",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3659/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3659/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3658",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3658/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3658/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3658/events",
    "html_url": "https://github.com/expressjs/express/issues/3658",
    "id": 324785981,
    "node_id": "MDU6SXNzdWUzMjQ3ODU5ODE=",
    "number": 3658,
    "title": "add websocket router support",
    "user": {
      "login": "yiakwy",
      "id": 8510840,
      "node_id": "MDQ6VXNlcjg1MTA4NDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8510840?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yiakwy",
      "html_url": "https://github.com/yiakwy",
      "followers_url": "https://api.github.com/users/yiakwy/followers",
      "following_url": "https://api.github.com/users/yiakwy/following{/other_user}",
      "gists_url": "https://api.github.com/users/yiakwy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yiakwy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yiakwy/subscriptions",
      "organizations_url": "https://api.github.com/users/yiakwy/orgs",
      "repos_url": "https://api.github.com/users/yiakwy/repos",
      "events_url": "https://api.github.com/users/yiakwy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yiakwy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-05-21T04:44:06Z",
    "updated_at": "2021-10-29T18:28:05Z",
    "closed_at": "2018-05-21T11:45:58Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi, here is a solution by adding faked wbsocket router method to \"Application\", and \"Router\". \r\n\r\n> https://github.com/amekkawi/express-ws-routes/issues/8. \r\n\r\nHis solution is really nice. But there is no people maintaining it. It does not work in new version of express anymore. \r\n\r\nCould any developers help me to figure out how to modify the code so that we can use it again?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3658/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3658/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3657",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3657/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3657/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3657/events",
    "html_url": "https://github.com/expressjs/express/issues/3657",
    "id": 323812596,
    "node_id": "MDU6SXNzdWUzMjM4MTI1OTY=",
    "number": 3657,
    "title": "Curried Default Error Handler Failing",
    "user": {
      "login": "JesterXL",
      "id": 424737,
      "node_id": "MDQ6VXNlcjQyNDczNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/424737?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JesterXL",
      "html_url": "https://github.com/JesterXL",
      "followers_url": "https://api.github.com/users/JesterXL/followers",
      "following_url": "https://api.github.com/users/JesterXL/following{/other_user}",
      "gists_url": "https://api.github.com/users/JesterXL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JesterXL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JesterXL/subscriptions",
      "organizations_url": "https://api.github.com/users/JesterXL/orgs",
      "repos_url": "https://api.github.com/users/JesterXL/repos",
      "events_url": "https://api.github.com/users/JesterXL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JesterXL/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2018-05-16T22:40:14Z",
    "updated_at": "2018-05-18T16:28:34Z",
    "closed_at": "2018-05-17T01:48:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "It appears that Express checks the function's arity to identify if it's an error-handler route. It works with a function, and works with an arrow function, but does not work with a Lodash curried function. I believe this is possibly because `theFunction.length` will print out 0 for curried functions, whereas `function` and `()=>` will print out a true arity. However, I can't seem to find where in the code y'all are checking for this. I've tried to manually setting the `theFunction.length` to 3 or 4 to hack it, but no dice. Any pointers?\r\n\r\nWorks when you hit `localhost:3000/error`:\r\n```javascript\r\nconst express = require('express')\r\nconst curry = require('lodash/fp/curry')\r\nconst app = express()\r\n\r\napp.get('/', (req, res) => res.send('Hello World!'))\r\napp.get('/error', (req, res, next) => {\r\n    next(new Error('boom'))\r\n})\r\n\r\nfunction genericErrorHandler(err, req, res, next) {\r\n    console.log(\"err message:\", err.message)\r\n    res.status(500).send('Something broke!');\r\n}\r\napp.use(genericErrorHandler)\r\n\r\napp.listen(3000, () => console.log('Example app listening on port 3000!'))\r\n```\r\n\r\nDoesn't work:\r\n```javascript\r\nconst express = require('express')\r\nconst curry = require('lodash/fp/curry')\r\nconst app = express()\r\n\r\napp.get('/', (req, res) => res.send('Hello World!'))\r\napp.get('/error', (req, res, next) => {\r\n    next(new Error('boom'))\r\n})\r\n\r\nconst genericErrorHandler = curry((prefix, err, req, res, next) => {\r\n    console.log(`${prefix} err message:`, err.message)\r\n    res.status(500).send('Something broke!');\r\n})\r\nconst curried = genericErrorHandler('🐮')\r\ncurried.length = 4 // I tried, heh\r\napp.use(curried);\r\n\r\napp.listen(3000, () => console.log('Example app listening on port 3000!'))\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3657/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3657/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3656",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3656/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3656/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3656/events",
    "html_url": "https://github.com/expressjs/express/pull/3656",
    "id": 323699958,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTg4NDkzNTk3",
    "number": 3656,
    "title": "Update build matrix",
    "user": {
      "login": "felixbuenemann",
      "id": 909587,
      "node_id": "MDQ6VXNlcjkwOTU4Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/909587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/felixbuenemann",
      "html_url": "https://github.com/felixbuenemann",
      "followers_url": "https://api.github.com/users/felixbuenemann/followers",
      "following_url": "https://api.github.com/users/felixbuenemann/following{/other_user}",
      "gists_url": "https://api.github.com/users/felixbuenemann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/felixbuenemann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/felixbuenemann/subscriptions",
      "organizations_url": "https://api.github.com/users/felixbuenemann/orgs",
      "repos_url": "https://api.github.com/users/felixbuenemann/repos",
      "events_url": "https://api.github.com/users/felixbuenemann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/felixbuenemann/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/17",
      "html_url": "https://github.com/expressjs/express/milestone/17",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/17/labels",
      "id": 3066819,
      "node_id": "MDk6TWlsZXN0b25lMzA2NjgxOQ==",
      "number": 17,
      "title": "4.17",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 15,
      "state": "closed",
      "created_at": "2018-01-26T16:25:16Z",
      "updated_at": "2019-05-17T01:58:27Z",
      "due_on": null,
      "closed_at": "2019-05-17T01:58:27Z"
    },
    "comments": 1,
    "created_at": "2018-05-16T16:39:42Z",
    "updated_at": "2018-11-10T14:43:10Z",
    "closed_at": "2018-10-27T06:00:52Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3656",
      "html_url": "https://github.com/expressjs/express/pull/3656",
      "diff_url": "https://github.com/expressjs/express/pull/3656.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3656.patch",
      "merged_at": "2018-10-27T06:00:52Z"
    },
    "body": "This updates the Travis CI and Appveyor build matrix to the latest versions available on both platforms and adds builds against Node 11.x nightlies on Travis.\r\n\r\nCloses #3617 because of similar changes for Node v9.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3656/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3656/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3655",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3655/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3655/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3655/events",
    "html_url": "https://github.com/expressjs/express/pull/3655",
    "id": 323130921,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTg4MDYxNTk5",
    "number": 3655,
    "title": "Bump body-parser to remove Node 10 deprecations",
    "user": {
      "login": "felixbuenemann",
      "id": 909587,
      "node_id": "MDQ6VXNlcjkwOTU4Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/909587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/felixbuenemann",
      "html_url": "https://github.com/felixbuenemann",
      "followers_url": "https://api.github.com/users/felixbuenemann/followers",
      "following_url": "https://api.github.com/users/felixbuenemann/following{/other_user}",
      "gists_url": "https://api.github.com/users/felixbuenemann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/felixbuenemann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/felixbuenemann/subscriptions",
      "organizations_url": "https://api.github.com/users/felixbuenemann/orgs",
      "repos_url": "https://api.github.com/users/felixbuenemann/repos",
      "events_url": "https://api.github.com/users/felixbuenemann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/felixbuenemann/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 133578716,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTY=",
        "url": "https://api.github.com/repos/expressjs/express/labels/deps",
        "name": "deps",
        "color": "444444",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 19,
    "created_at": "2018-05-15T09:13:20Z",
    "updated_at": "2018-09-19T16:39:01Z",
    "closed_at": "2018-09-19T16:38:47Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3655",
      "html_url": "https://github.com/expressjs/express/pull/3655",
      "diff_url": "https://github.com/expressjs/express/pull/3655.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3655.patch",
      "merged_at": "2018-09-19T16:38:47Z"
    },
    "body": "This gets rid of `new Buffer()` deprecation warnings on Node v10 by bumping body-parser to the 1.18.3 version that was recently released by @dougwilson.\r\n\r\nAlso bumped qs to 6.5.2 to avoid duplicate versions.\r\n\r\nSee expressjs/body-parser#312 for details.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3655/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3655/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3654",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3654/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3654/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3654/events",
    "html_url": "https://github.com/expressjs/express/issues/3654",
    "id": 322900694,
    "node_id": "MDU6SXNzdWUzMjI5MDA2OTQ=",
    "number": 3654,
    "title": "Support question - where does req.fresh come from",
    "user": {
      "login": "ORESoftware",
      "id": 11139560,
      "node_id": "MDQ6VXNlcjExMTM5NTYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/11139560?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ORESoftware",
      "html_url": "https://github.com/ORESoftware",
      "followers_url": "https://api.github.com/users/ORESoftware/followers",
      "following_url": "https://api.github.com/users/ORESoftware/following{/other_user}",
      "gists_url": "https://api.github.com/users/ORESoftware/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ORESoftware/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ORESoftware/subscriptions",
      "organizations_url": "https://api.github.com/users/ORESoftware/orgs",
      "repos_url": "https://api.github.com/users/ORESoftware/repos",
      "events_url": "https://api.github.com/users/ORESoftware/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ORESoftware/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-05-14T16:59:34Z",
    "updated_at": "2018-05-14T21:03:02Z",
    "closed_at": "2018-05-14T21:03:01Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am trying to work on this issue, this is the context:\r\nhttps://github.com/expressjs/serve-static/issues/107#issuecomment-388875912\r\n\r\nLooking at the codebase:\r\nhttps://github.com/expressjs/express/blob/master/lib/response.js#L206\r\n\r\nBasically need to figure out how etags would work with a cached file in memory. According to the current code, if `req.fresh` is truthy, we can send a 304, but where is `req.fresh` being set?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3654/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3654/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3653",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3653/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3653/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3653/events",
    "html_url": "https://github.com/expressjs/express/issues/3653",
    "id": 322492688,
    "node_id": "MDU6SXNzdWUzMjI0OTI2ODg=",
    "number": 3653,
    "title": "Question about check the shipping format",
    "user": {
      "login": "cjpatoilo",
      "id": 1542831,
      "node_id": "MDQ6VXNlcjE1NDI4MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1542831?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cjpatoilo",
      "html_url": "https://github.com/cjpatoilo",
      "followers_url": "https://api.github.com/users/cjpatoilo/followers",
      "following_url": "https://api.github.com/users/cjpatoilo/following{/other_user}",
      "gists_url": "https://api.github.com/users/cjpatoilo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cjpatoilo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cjpatoilo/subscriptions",
      "organizations_url": "https://api.github.com/users/cjpatoilo/orgs",
      "repos_url": "https://api.github.com/users/cjpatoilo/repos",
      "events_url": "https://api.github.com/users/cjpatoilo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cjpatoilo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-05-12T08:08:27Z",
    "updated_at": "2018-05-12T12:41:12Z",
    "closed_at": "2018-05-12T12:40:55Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi guys,\r\n\r\nIs there possible to check if sending the post was through a HTML form or an ajax call?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3653/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3653/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3652",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3652/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3652/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3652/events",
    "html_url": "https://github.com/expressjs/express/issues/3652",
    "id": 322486936,
    "node_id": "MDU6SXNzdWUzMjI0ODY5MzY=",
    "number": 3652,
    "title": "Missing first space in res.send",
    "user": {
      "login": "siyangqiu",
      "id": 6004624,
      "node_id": "MDQ6VXNlcjYwMDQ2MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6004624?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/siyangqiu",
      "html_url": "https://github.com/siyangqiu",
      "followers_url": "https://api.github.com/users/siyangqiu/followers",
      "following_url": "https://api.github.com/users/siyangqiu/following{/other_user}",
      "gists_url": "https://api.github.com/users/siyangqiu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/siyangqiu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/siyangqiu/subscriptions",
      "organizations_url": "https://api.github.com/users/siyangqiu/orgs",
      "repos_url": "https://api.github.com/users/siyangqiu/repos",
      "events_url": "https://api.github.com/users/siyangqiu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/siyangqiu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-05-12T06:19:53Z",
    "updated_at": "2018-05-12T18:18:07Z",
    "closed_at": "2018-05-12T18:15:22Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In the default express generator project using: \r\n> express --view=pug myapp\r\n\r\nThe default page at localhost:3000/users returns:\r\n> respondwith a resource\r\n\r\nThere isn't a space between *respond* and *with*\r\n\r\nIt seems that the first space after the first word is always skipped. I'm a bit inexperienced with Express, so I can't tell if this is a result of some line of code in the default project or something deeper in the framework (i.e. something in the 'res.send' function).\r\n\r\n> router.get('/', function(req, res, next) {\r\n>      res.send('respond with a resource');\r\n> });",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3652/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3652/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3651",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3651/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3651/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3651/events",
    "html_url": "https://github.com/expressjs/express/issues/3651",
    "id": 322434802,
    "node_id": "MDU6SXNzdWUzMjI0MzQ4MDI=",
    "number": 3651,
    "title": "optimization - static assets check if file exists, but use a static map of fs in memory instead?",
    "user": {
      "login": "ORESoftware",
      "id": 11139560,
      "node_id": "MDQ6VXNlcjExMTM5NTYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/11139560?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ORESoftware",
      "html_url": "https://github.com/ORESoftware",
      "followers_url": "https://api.github.com/users/ORESoftware/followers",
      "following_url": "https://api.github.com/users/ORESoftware/following{/other_user}",
      "gists_url": "https://api.github.com/users/ORESoftware/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ORESoftware/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ORESoftware/subscriptions",
      "organizations_url": "https://api.github.com/users/ORESoftware/orgs",
      "repos_url": "https://api.github.com/users/ORESoftware/repos",
      "events_url": "https://api.github.com/users/ORESoftware/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ORESoftware/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2018-05-11T21:07:12Z",
    "updated_at": "2018-05-11T22:17:29Z",
    "closed_at": "2018-05-11T21:17:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have an optimization idea that might not have been implemented yet.\r\n\r\nI was looking at the 'serve-static' repo - if the `express.static` middleware comes before your API routes, I believe 'serve-static' is always going to try to read the file from the fs, and if the file doesn't exist the middleware will then call `next()`.\r\n\r\n**That means there is basically always going to be a fs read before your API routes gets hit.** \r\n\r\ninstead, why not create a map of the filesystem in memory, if a server route (path) is not in the map, don't even bother trying to read it in the 'serve-static' middleware, just call next() immediately.\r\n\r\nIs this optimization already in place?\r\nI think it would be AWESOME if users could pass an option to `express.static` that said the FS is static, therefore create a map of it in memory.\r\n\r\nhopefully this makes sense. \r\nI have some Express middleware that implemented this idea, although it's pretty simple stuff, you probably get it.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3651/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3651/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3650",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3650/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3650/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3650/events",
    "html_url": "https://github.com/expressjs/express/issues/3650",
    "id": 322290733,
    "node_id": "MDU6SXNzdWUzMjIyOTA3MzM=",
    "number": 3650,
    "title": "body-parser deprecated undefined extended: provide extended option",
    "user": {
      "login": "tiendq",
      "id": 815910,
      "node_id": "MDQ6VXNlcjgxNTkxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/815910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tiendq",
      "html_url": "https://github.com/tiendq",
      "followers_url": "https://api.github.com/users/tiendq/followers",
      "following_url": "https://api.github.com/users/tiendq/following{/other_user}",
      "gists_url": "https://api.github.com/users/tiendq/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tiendq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tiendq/subscriptions",
      "organizations_url": "https://api.github.com/users/tiendq/orgs",
      "repos_url": "https://api.github.com/users/tiendq/repos",
      "events_url": "https://api.github.com/users/tiendq/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tiendq/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 572472845,
        "node_id": "MDU6TGFiZWw1NzI0NzI4NDU=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:body-parser",
        "name": "module:body-parser",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2018-05-11T13:09:56Z",
    "updated_at": "2019-11-07T18:56:52Z",
    "closed_at": "2018-05-11T13:16:58Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "`express.urlencoded([options])` documentation says that `extended` option is `true` by default. But `node` shows a deprecated warning.\r\n\r\n```javascript\r\nlet express = require('express');\r\nlet router = express.Router();\r\n\r\nrouter.post(\"/create\", express.urlencoded(), function (request, response) {\r\n});\r\n```\r\n\r\n`body-parser deprecated undefined extended: provide extended option`\r\n\r\nThere is no warning if I set `extended` explicitly:\r\n\r\n`express.urlencoded({ extended: true })`\r\n\r\nNodeJS v10.0.0\r\nexpress 4.16.3",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3650/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3650/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3649",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3649/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3649/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3649/events",
    "html_url": "https://github.com/expressjs/express/issues/3649",
    "id": 321924949,
    "node_id": "MDU6SXNzdWUzMjE5MjQ5NDk=",
    "number": 3649,
    "title": "Upload page for Download Page Example",
    "user": {
      "login": "ImTotallyNotMessi",
      "id": 29573484,
      "node_id": "MDQ6VXNlcjI5NTczNDg0",
      "avatar_url": "https://avatars.githubusercontent.com/u/29573484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ImTotallyNotMessi",
      "html_url": "https://github.com/ImTotallyNotMessi",
      "followers_url": "https://api.github.com/users/ImTotallyNotMessi/followers",
      "following_url": "https://api.github.com/users/ImTotallyNotMessi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ImTotallyNotMessi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ImTotallyNotMessi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ImTotallyNotMessi/subscriptions",
      "organizations_url": "https://api.github.com/users/ImTotallyNotMessi/orgs",
      "repos_url": "https://api.github.com/users/ImTotallyNotMessi/repos",
      "events_url": "https://api.github.com/users/ImTotallyNotMessi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ImTotallyNotMessi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-05-10T13:08:36Z",
    "updated_at": "2018-05-10T15:32:05Z",
    "closed_at": "2018-05-10T15:31:16Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "[Download Example](https://github.com/expressjs/express/blob/master/examples/downloads/index.js)\r\nIs there a way where i can make an upload file page. Im looking to have an upload/download page on my website\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3649/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3649/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3648",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3648/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3648/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3648/events",
    "html_url": "https://github.com/expressjs/express/pull/3648",
    "id": 321886835,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTg3MTU4MzUw",
    "number": 3648,
    "title": "Fix router constructor jsdoc comment",
    "user": {
      "login": "tonyspb",
      "id": 1548340,
      "node_id": "MDQ6VXNlcjE1NDgzNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1548340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tonyspb",
      "html_url": "https://github.com/tonyspb",
      "followers_url": "https://api.github.com/users/tonyspb/followers",
      "following_url": "https://api.github.com/users/tonyspb/following{/other_user}",
      "gists_url": "https://api.github.com/users/tonyspb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tonyspb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tonyspb/subscriptions",
      "organizations_url": "https://api.github.com/users/tonyspb/orgs",
      "repos_url": "https://api.github.com/users/tonyspb/repos",
      "events_url": "https://api.github.com/users/tonyspb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tonyspb/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-05-10T10:38:04Z",
    "updated_at": "2018-05-10T15:29:07Z",
    "closed_at": "2018-05-10T15:28:57Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3648",
      "html_url": "https://github.com/expressjs/express/pull/3648",
      "diff_url": "https://github.com/expressjs/express/pull/3648.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3648.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3648/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3648/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3647",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3647/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3647/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3647/events",
    "html_url": "https://github.com/expressjs/express/issues/3647",
    "id": 321028368,
    "node_id": "MDU6SXNzdWUzMjEwMjgzNjg=",
    "number": 3647,
    "title": "Can't throw error in router middleware ",
    "user": {
      "login": "keyiis",
      "id": 7766085,
      "node_id": "MDQ6VXNlcjc3NjYwODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7766085?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/keyiis",
      "html_url": "https://github.com/keyiis",
      "followers_url": "https://api.github.com/users/keyiis/followers",
      "following_url": "https://api.github.com/users/keyiis/following{/other_user}",
      "gists_url": "https://api.github.com/users/keyiis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/keyiis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/keyiis/subscriptions",
      "organizations_url": "https://api.github.com/users/keyiis/orgs",
      "repos_url": "https://api.github.com/users/keyiis/repos",
      "events_url": "https://api.github.com/users/keyiis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/keyiis/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-05-08T03:17:07Z",
    "updated_at": "2018-06-14T15:00:30Z",
    "closed_at": "2018-06-14T15:00:30Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I used ajax post data to express server,i want throw error to errorhandle in  router middleware when error was happen,but still thorw error, `next();` not excute,very strange! below is my code\r\n```\r\nclientRouter.use('/api', (req, res, next)=>{\r\n    if(1){ \r\n        next(); // not excute!\r\n     }else{ \r\n        next(new Error('111')); //alaways excute!\r\n     }   \r\n}, apiRouter);\r\n```\r\nerrorhandel in app.js\r\n```\r\napp.use((err, req, res, next) => {\r\n  log.error(\"req.xhr:\", req.xhr); //alaways false!\r\n  // set locals, only providing error in development\r\n  res.locals.message = err.message;\r\n  res.locals.error = (APP_ENV === 'development' ? err : {});\r\n  if (req.xhr) {\r\n    res.send(<ApiResponse>{\r\n      status:false,\r\n      err: (APP_ENV === 'development' ? err.toString() :'err happen!') \r\n    });\r\n  } else {\r\n    // render the error page\r\n    res.status(err.status || 500);\r\n    res.render('error');\r\n  }\r\n});\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3647/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3647/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3646",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3646/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3646/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3646/events",
    "html_url": "https://github.com/expressjs/express/issues/3646",
    "id": 320702311,
    "node_id": "MDU6SXNzdWUzMjA3MDIzMTE=",
    "number": 3646,
    "title": "Unhandled rejection ReplyError: CROSSSLOT Keys in request don't hash to the same slot",
    "user": {
      "login": "anuradhag",
      "id": 4667339,
      "node_id": "MDQ6VXNlcjQ2NjczMzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4667339?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anuradhag",
      "html_url": "https://github.com/anuradhag",
      "followers_url": "https://api.github.com/users/anuradhag/followers",
      "following_url": "https://api.github.com/users/anuradhag/following{/other_user}",
      "gists_url": "https://api.github.com/users/anuradhag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anuradhag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anuradhag/subscriptions",
      "organizations_url": "https://api.github.com/users/anuradhag/orgs",
      "repos_url": "https://api.github.com/users/anuradhag/repos",
      "events_url": "https://api.github.com/users/anuradhag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anuradhag/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2018-05-07T07:31:24Z",
    "updated_at": "2018-06-14T15:01:39Z",
    "closed_at": "2018-06-14T15:01:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello there,\r\n\r\nI am using ioredis to enable redis cluster usage to set and purge keys. On purging keys, I get the above error. The purge happens anyway. When I use the redis instance in expressjs middleware I get this error otherwise I dont.\r\n\r\nI am using 4.10.x as the express version.\r\n\r\nThanks for the help.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3646/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3646/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3645",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3645/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3645/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3645/events",
    "html_url": "https://github.com/expressjs/express/issues/3645",
    "id": 320567942,
    "node_id": "MDU6SXNzdWUzMjA1Njc5NDI=",
    "number": 3645,
    "title": "Question about routing and params",
    "user": {
      "login": "AlbuquerqueRafael",
      "id": 13631723,
      "node_id": "MDQ6VXNlcjEzNjMxNzIz",
      "avatar_url": "https://avatars.githubusercontent.com/u/13631723?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AlbuquerqueRafael",
      "html_url": "https://github.com/AlbuquerqueRafael",
      "followers_url": "https://api.github.com/users/AlbuquerqueRafael/followers",
      "following_url": "https://api.github.com/users/AlbuquerqueRafael/following{/other_user}",
      "gists_url": "https://api.github.com/users/AlbuquerqueRafael/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AlbuquerqueRafael/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AlbuquerqueRafael/subscriptions",
      "organizations_url": "https://api.github.com/users/AlbuquerqueRafael/orgs",
      "repos_url": "https://api.github.com/users/AlbuquerqueRafael/repos",
      "events_url": "https://api.github.com/users/AlbuquerqueRafael/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AlbuquerqueRafael/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-05-06T06:52:20Z",
    "updated_at": "2018-05-06T13:31:55Z",
    "closed_at": "2018-05-06T13:31:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Well, I'm having a problem with routing in ExpressJS.\r\n\r\nWhen I write my router this way:\r\n\r\n![image](https://user-images.githubusercontent.com/13631723/39670446-f6d67966-50db-11e8-8b19-f3625bc08610.png)\r\n\r\nAnd try to access: http://127.0.0.1:3000/v1/publicacao/search/ (My endpoint for my search function), \r\nI receive: \"Cast to ObjectId failed for value \"search\" at path \"_id\" for model \"Publication\"\"\r\n\r\nBut when I write my router this way:\r\n![image](https://user-images.githubusercontent.com/13631723/39670572-44b249ec-50de-11e8-9752-a8e8c5ae3243.png)\r\n\r\nAnd try to access: http://127.0.0.1:3000/v1/publicacao/search/ (The endpoint for search function),\r\nI receive: \"gg\"\r\n\r\nIn other words, the router is identifying \"everything\" that was not previous matched as a route parameter and entering on:\r\nrouter.get(':id', .. \r\n\r\nThere is something that I can do to avoid that? Or this is simply a Javascript/ExpressJS \"thing\"?\r\n\r\nThanks in advance!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3645/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3645/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3644",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3644/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3644/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3644/events",
    "html_url": "https://github.com/expressjs/express/issues/3644",
    "id": 320519510,
    "node_id": "MDU6SXNzdWUzMjA1MTk1MTA=",
    "number": 3644,
    "title": "HTTP/2 in express for node v10",
    "user": {
      "login": "matt212",
      "id": 1698139,
      "node_id": "MDQ6VXNlcjE2OTgxMzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1698139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matt212",
      "html_url": "https://github.com/matt212",
      "followers_url": "https://api.github.com/users/matt212/followers",
      "following_url": "https://api.github.com/users/matt212/following{/other_user}",
      "gists_url": "https://api.github.com/users/matt212/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matt212/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matt212/subscriptions",
      "organizations_url": "https://api.github.com/users/matt212/orgs",
      "repos_url": "https://api.github.com/users/matt212/repos",
      "events_url": "https://api.github.com/users/matt212/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matt212/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-05-05T15:49:20Z",
    "updated_at": "2018-05-05T15:55:05Z",
    "closed_at": "2018-05-05T15:54:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "hi,\r\nsince now node v10 supports HTTP/2.\r\nit would be feasible option to implement the same in express for routes ,render, session management for intern releases.\r\n\r\nhttps://nodejs.org/api/http2.html",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3644/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3644/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3643",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3643/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3643/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3643/events",
    "html_url": "https://github.com/expressjs/express/issues/3643",
    "id": 320475481,
    "node_id": "MDU6SXNzdWUzMjA0NzU0ODE=",
    "number": 3643,
    "title": "Is that possible to extend the next(), i.e. insert another middleware inside a middleware?",
    "user": {
      "login": "leoyli",
      "id": 8866555,
      "node_id": "MDQ6VXNlcjg4NjY1NTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8866555?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leoyli",
      "html_url": "https://github.com/leoyli",
      "followers_url": "https://api.github.com/users/leoyli/followers",
      "following_url": "https://api.github.com/users/leoyli/following{/other_user}",
      "gists_url": "https://api.github.com/users/leoyli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leoyli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leoyli/subscriptions",
      "organizations_url": "https://api.github.com/users/leoyli/orgs",
      "repos_url": "https://api.github.com/users/leoyli/repos",
      "events_url": "https://api.github.com/users/leoyli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leoyli/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-05-05T03:24:08Z",
    "updated_at": "2018-05-05T04:10:25Z",
    "closed_at": "2018-05-05T04:10:18Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "For simplification, assume I have two modularized, independent middleware.\r\n\r\n```\r\nfunction middlewareA (req, res, next) {\r\n  (...)\r\n  return next();\r\n}\r\n\r\nfunction middlewareC (req, res, next) {\r\n  (...)\r\n  return next();\r\n}\r\n```\r\n\r\nIf I want to chain two middleware, normally I would do:\r\n```\r\nconst { Router } = require('express');\r\nconst someRouter = new Router();\r\nconst wrapAsync = //(a special wrapper for catching errors and bubbling)\r\nsomeRouter\r\n  .use(wrapAsync(middlewareA))\r\n  .use(wrapAsync(middlewareC));\r\n```\r\n\r\nHowever, for some reason, I want to extend the calling of `next()` inside `middlewareA` but I'm not able to added the middleware directly into `someRouter`, saying I have another `middlewareB1` to be inserted.  I have an ugly way to do it:\r\n```\r\nfunction middlewareA (req, res, next) {\r\n  (...)\r\n  return middlewareB1(req, res, wrapAsync(middlewareC(req, res, next)));\r\n}\r\n```\r\n\r\nWhat bother me is If I have N extra middleware (i.e. `middlewareB1` ~ `middlewareBN`) want to be inserted between `middlewareA` and `middlewareC`, then apparently I will then have a huge long long line of code... Although I think I might came up with a `for` loop for this kind of job, but before I dive into the implementation, I just wonder if anyone have a similar experiences.  Does anyone come up a good way to insert multiple middleware functions in another middleware?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3643/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3643/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3641",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3641/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3641/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3641/events",
    "html_url": "https://github.com/expressjs/express/issues/3641",
    "id": 320191238,
    "node_id": "MDU6SXNzdWUzMjAxOTEyMzg=",
    "number": 3641,
    "title": "req.xhr not work in cross origin",
    "user": {
      "login": "keyiis",
      "id": 7766085,
      "node_id": "MDQ6VXNlcjc3NjYwODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7766085?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/keyiis",
      "html_url": "https://github.com/keyiis",
      "followers_url": "https://api.github.com/users/keyiis/followers",
      "following_url": "https://api.github.com/users/keyiis/following{/other_user}",
      "gists_url": "https://api.github.com/users/keyiis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/keyiis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/keyiis/subscriptions",
      "organizations_url": "https://api.github.com/users/keyiis/orgs",
      "repos_url": "https://api.github.com/users/keyiis/repos",
      "events_url": "https://api.github.com/users/keyiis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/keyiis/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-05-04T08:29:19Z",
    "updated_at": "2018-05-08T11:51:37Z",
    "closed_at": "2018-05-08T11:51:37Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I used client post data to server by ajax,my client is desktop app,the req.xhr still false on server side\r\n**client**\r\n```\r\n $.ajax({\r\n                        type: 'POST',\r\n                        data: JSON.stringify({ user: user }),\r\n                        contentType: 'application/json',\r\n                        url: 'http://127.0.0.1:3000/client/login',\r\n                        success: response => {\r\n                            console.log(response);\r\n                            localforage.setItem('token', response.token);\r\n                        }\r\n                    });\r\n```\r\n**server**\r\n```\r\napp.use('/', (req, res, next) => {\r\n  res.setHeader('Access-Control-Allow-Origin', req.headers.origin || '*');\r\n  res.setHeader('Access-Control-Allow-Headers', \"Origin,X-Requested-With,content-type,Accept,x-access-token\");\r\n  next();\r\n}, indexRouter);\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3641/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3641/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3640",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3640/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3640/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3640/events",
    "html_url": "https://github.com/expressjs/express/issues/3640",
    "id": 319567743,
    "node_id": "MDU6SXNzdWUzMTk1Njc3NDM=",
    "number": 3640,
    "title": "how can I get the params of a parent rout in a child route?",
    "user": {
      "login": "slim-hmidi",
      "id": 31925861,
      "node_id": "MDQ6VXNlcjMxOTI1ODYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/31925861?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/slim-hmidi",
      "html_url": "https://github.com/slim-hmidi",
      "followers_url": "https://api.github.com/users/slim-hmidi/followers",
      "following_url": "https://api.github.com/users/slim-hmidi/following{/other_user}",
      "gists_url": "https://api.github.com/users/slim-hmidi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/slim-hmidi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/slim-hmidi/subscriptions",
      "organizations_url": "https://api.github.com/users/slim-hmidi/orgs",
      "repos_url": "https://api.github.com/users/slim-hmidi/repos",
      "events_url": "https://api.github.com/users/slim-hmidi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/slim-hmidi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-05-02T14:07:55Z",
    "updated_at": "2018-05-02T15:39:39Z",
    "closed_at": "2018-05-02T15:39:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have a nested route in nodejs and I'm trying to create a post api like this:\r\n```js\r\napp.post('/api/products/:product_id/price_perid', async (req, res) =>{\r\n  await Product\r\n  .query()\r\n  .insert({\r\n     product_id: req.params.product_id,\r\n     period: req.body.period\r\n  })\r\n})\r\n```\r\nWhen I checked the database, I found the product_id=null. I don't know if it is true to mix req.params and req.body in a post ROUTE. The insertion works well if I send the product_id in the body and using req.body.product_id. \r\nreq.params: `{}`\r\nreq.baseUrl: `api/products/:product_id`\r\nreq.url: `/price_perid`\r\n\r\nIs it possible to mix `req.params` and `req.body` in post api?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3640/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3640/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3639",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3639/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3639/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3639/events",
    "html_url": "https://github.com/expressjs/express/issues/3639",
    "id": 319124801,
    "node_id": "MDU6SXNzdWUzMTkxMjQ4MDE=",
    "number": 3639,
    "title": "Support Q: pre-compile handlebars template(s)",
    "user": {
      "login": "ORESoftware",
      "id": 11139560,
      "node_id": "MDQ6VXNlcjExMTM5NTYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/11139560?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ORESoftware",
      "html_url": "https://github.com/ORESoftware",
      "followers_url": "https://api.github.com/users/ORESoftware/followers",
      "following_url": "https://api.github.com/users/ORESoftware/following{/other_user}",
      "gists_url": "https://api.github.com/users/ORESoftware/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ORESoftware/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ORESoftware/subscriptions",
      "organizations_url": "https://api.github.com/users/ORESoftware/orgs",
      "repos_url": "https://api.github.com/users/ORESoftware/repos",
      "events_url": "https://api.github.com/users/ORESoftware/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ORESoftware/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2018-05-01T06:05:20Z",
    "updated_at": "2018-05-01T19:14:52Z",
    "closed_at": "2018-05-01T06:19:36Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have this question on SO:\r\nhttps://stackoverflow.com/questions/50111841/precompile-handlebars-templates-on-express-server\r\n\r\nwith handlebars, you can \"pre-compile\" templates. I am guessing that it just makes it that much quicker to render the template with data, something like this:\r\n\r\n```js\r\nconst Handlebars = require('handlebars');\r\nconst string = fs.readFileSync('index.hbs');\r\nconst render = Handlebars.compile(string);\r\n```\r\n\r\n// you could then cache that render function and use it like so:\r\n```js\r\nrender({the:'data'});\r\n```\r\n\r\nso I know that Express is caching the template, because I am using\r\n```js\r\napp.set('view cache', true);\r\n```\r\nhowever, how can I configure Express to pre-compile Handlebars templates, if it's not already doing that out-of-the-box?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3639/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3639/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3638",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3638/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3638/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3638/events",
    "html_url": "https://github.com/expressjs/express/issues/3638",
    "id": 318741284,
    "node_id": "MDU6SXNzdWUzMTg3NDEyODQ=",
    "number": 3638,
    "title": "Add support for easy creating of HTTP proxies",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-04-29T19:09:44Z",
    "updated_at": "2018-04-29T19:20:01Z",
    "closed_at": "2018-04-29T19:17:34Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "So the Express class would have Express.Proxy subclass.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3638/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3638/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3637",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3637/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3637/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3637/events",
    "html_url": "https://github.com/expressjs/express/issues/3637",
    "id": 318724318,
    "node_id": "MDU6SXNzdWUzMTg3MjQzMTg=",
    "number": 3637,
    "title": "Send response from outside route",
    "user": {
      "login": "gijo-varghese",
      "id": 23092846,
      "node_id": "MDQ6VXNlcjIzMDkyODQ2",
      "avatar_url": "https://avatars.githubusercontent.com/u/23092846?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gijo-varghese",
      "html_url": "https://github.com/gijo-varghese",
      "followers_url": "https://api.github.com/users/gijo-varghese/followers",
      "following_url": "https://api.github.com/users/gijo-varghese/following{/other_user}",
      "gists_url": "https://api.github.com/users/gijo-varghese/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gijo-varghese/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gijo-varghese/subscriptions",
      "organizations_url": "https://api.github.com/users/gijo-varghese/orgs",
      "repos_url": "https://api.github.com/users/gijo-varghese/repos",
      "events_url": "https://api.github.com/users/gijo-varghese/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gijo-varghese/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-04-29T15:07:33Z",
    "updated_at": "2018-04-29T16:08:51Z",
    "closed_at": "2018-04-29T15:17:11Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I've route `'/endpoint'` that accept a request, send it to a WebSocket client, and wait for its response. Is it possible to send the response outside the route function?\r\n\r\n\r\n```\r\nio.on('connection', (socket) => {\r\n    socket.on('res', (data) => {\r\n        console.log(data)\r\n         // response event received. lets send back to /endpoint\r\n    });\r\n});\r\n\r\napp.get('/endpoint', (req, res) => {\r\n    io.emit('req', { data: 'hello' });\r\n   // wait for event 'res' in socket io \r\n});\r\n```\r\n\r\nStackoverflow:\r\nhttps://stackoverflow.com/questions/50087400/forward-request-to-ws-client-and-wait-for-response-express/50087724",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3637/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3637/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3636",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3636/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3636/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3636/events",
    "html_url": "https://github.com/expressjs/express/issues/3636",
    "id": 318481043,
    "node_id": "MDU6SXNzdWUzMTg0ODEwNDM=",
    "number": 3636,
    "title": "axios response data incorrect",
    "user": {
      "login": "auahmed",
      "id": 4032097,
      "node_id": "MDQ6VXNlcjQwMzIwOTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4032097?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/auahmed",
      "html_url": "https://github.com/auahmed",
      "followers_url": "https://api.github.com/users/auahmed/followers",
      "following_url": "https://api.github.com/users/auahmed/following{/other_user}",
      "gists_url": "https://api.github.com/users/auahmed/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/auahmed/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/auahmed/subscriptions",
      "organizations_url": "https://api.github.com/users/auahmed/orgs",
      "repos_url": "https://api.github.com/users/auahmed/repos",
      "events_url": "https://api.github.com/users/auahmed/events{/privacy}",
      "received_events_url": "https://api.github.com/users/auahmed/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 17,
    "created_at": "2018-04-27T16:58:30Z",
    "updated_at": "2019-06-25T19:23:26Z",
    "closed_at": "2018-04-27T17:51:26Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "Was hoping i can get some assistance on this.\r\nI am calling another API which returned an attachment to me.\r\nIf i was to call that API normally by using postman or anything i can download the ZIP successfully and unzip the contents.\r\nBut when i implement it to express my data is not right.\r\n\r\nAs seen below the issue is because when i try writing the returned data to a file it is not right.\r\nThe content-length is actually supposed to be 24109 but when i look at the response data length i only have 23062. \r\nIs this because of some sort of body parser that i need to implement?\r\n\r\nI have the following code:\r\n````\r\nconst express = require('express')\r\nconst axios = require('axios');\r\nconst app = express()\r\n\r\nconst generate = () => {\r\n  return axios.post('http://localhost:8050/api/json', {\r\n      host: 'lightapi.net',\r\n      service: 'codegen',\r\n      action: \"generate\",\r\n      version: '0.0.1',\r\n      data: [{\"framework\":\"swagger\"}]\r\n  }, {\r\n      responseType: 'blob',\r\n  });\r\n};\r\n\r\napp.get('/', (req, res) => {\r\n  generate().then((response) => {\r\n    console.log('########### HEADERS: ', response.headers);\r\n    console.log('########### AXIOS: ', response.data.length);\r\n  });\r\n  res.send('Hello World!');\r\n});\r\n\r\napp.listen(9000, () => console.log('Example app listening on port 9000!'))\r\n````\r\n\r\nand i get the following response:\r\n````\r\n########### HEADERS:  { connection: 'close',\r\n  server: 'L',\r\n  'content-type': 'application/zip',\r\n  'content-length': '24109',\r\n  'content-disposition': 'attachment',\r\n  date: 'Fri, 27 Apr 2018 16:48:05 GMT' }\r\n########### AXIOS:  23062\r\n````",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3636/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3636/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3635",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3635/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3635/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3635/events",
    "html_url": "https://github.com/expressjs/express/issues/3635",
    "id": 318415945,
    "node_id": "MDU6SXNzdWUzMTg0MTU5NDU=",
    "number": 3635,
    "title": "How to res.send data 2 times?",
    "user": {
      "login": "botaniQQQ",
      "id": 3118010,
      "node_id": "MDQ6VXNlcjMxMTgwMTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3118010?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/botaniQQQ",
      "html_url": "https://github.com/botaniQQQ",
      "followers_url": "https://api.github.com/users/botaniQQQ/followers",
      "following_url": "https://api.github.com/users/botaniQQQ/following{/other_user}",
      "gists_url": "https://api.github.com/users/botaniQQQ/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/botaniQQQ/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/botaniQQQ/subscriptions",
      "organizations_url": "https://api.github.com/users/botaniQQQ/orgs",
      "repos_url": "https://api.github.com/users/botaniQQQ/repos",
      "events_url": "https://api.github.com/users/botaniQQQ/events{/privacy}",
      "received_events_url": "https://api.github.com/users/botaniQQQ/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-04-27T13:46:45Z",
    "updated_at": "2018-07-19T20:21:05Z",
    "closed_at": "2018-04-27T13:50:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello.\r\n\r\nI want to show the user a loading line, and then when the data from the database is received, show the full page.\r\n```\r\nvar express = require('express');\r\nvar app = express();\r\n\r\napp.get('/', function (req, res) {\r\n  res.send('Loading ...');\r\n  setTimeout(function() {\r\n    console.log('Get database data ...');\r\n    res.send('Hello World!');\r\n  }, 3000);\r\n});\r\n\r\napp.listen(30000, function () {\r\n  console.log('Example app listening on port 30000!');\r\n});\r\n```\r\nSuch code leads to an error.\r\n```\r\nExample app listening on port 30000!\r\nGet database data ...\r\n_http_outgoing.js:491\r\n    throw new Error('Can\\'t set headers after they are sent.');\r\n    ^\r\n\r\nError: Can't set headers after they are sent.\r\n    at validateHeader (_http_outgoing.js:491:11)\r\n    at ServerResponse.setHeader (_http_outgoing.js:498:3)\r\n    at ServerResponse.header (/home/express/node_modules/express/lib/response.js:767:10)\r\n    at ServerResponse.send (/home/express/node_modules/express/lib/response.js:170:12)\r\n    at Timeout._onTimeout (/home/express/app.js:8:9)\r\n    at ontimeout (timers.js:482:11)\r\n    at tryOnTimeout (timers.js:317:5)\r\n    at Timer.listOnTimeout (timers.js:277:5)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3635/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3635/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3634",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3634/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3634/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3634/events",
    "html_url": "https://github.com/expressjs/express/pull/3634",
    "id": 317864683,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTg0MjE2OTg5",
    "number": 3634,
    "title": "Update Readme.md",
    "user": {
      "login": "chatoo2412",
      "id": 3435149,
      "node_id": "MDQ6VXNlcjM0MzUxNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3435149?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chatoo2412",
      "html_url": "https://github.com/chatoo2412",
      "followers_url": "https://api.github.com/users/chatoo2412/followers",
      "following_url": "https://api.github.com/users/chatoo2412/following{/other_user}",
      "gists_url": "https://api.github.com/users/chatoo2412/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chatoo2412/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chatoo2412/subscriptions",
      "organizations_url": "https://api.github.com/users/chatoo2412/orgs",
      "repos_url": "https://api.github.com/users/chatoo2412/repos",
      "events_url": "https://api.github.com/users/chatoo2412/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chatoo2412/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-04-26T03:28:16Z",
    "updated_at": "2018-05-04T04:26:50Z",
    "closed_at": "2018-04-26T03:29:55Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3634",
      "html_url": "https://github.com/expressjs/express/pull/3634",
      "diff_url": "https://github.com/expressjs/express/pull/3634.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3634.patch",
      "merged_at": null
    },
    "body": "Please respect the project name.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3634/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3634/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3633",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3633/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3633/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3633/events",
    "html_url": "https://github.com/expressjs/express/issues/3633",
    "id": 317785417,
    "node_id": "MDU6SXNzdWUzMTc3ODU0MTc=",
    "number": 3633,
    "title": "Router does not pass authentication header in a redirect",
    "user": {
      "login": "rosano",
      "id": 1680612,
      "node_id": "MDQ6VXNlcjE2ODA2MTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1680612?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rosano",
      "html_url": "https://github.com/rosano",
      "followers_url": "https://api.github.com/users/rosano/followers",
      "following_url": "https://api.github.com/users/rosano/following{/other_user}",
      "gists_url": "https://api.github.com/users/rosano/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rosano/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rosano/subscriptions",
      "organizations_url": "https://api.github.com/users/rosano/orgs",
      "repos_url": "https://api.github.com/users/rosano/repos",
      "events_url": "https://api.github.com/users/rosano/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rosano/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-04-25T20:39:35Z",
    "updated_at": "2018-04-25T21:19:58Z",
    "closed_at": "2018-04-25T20:52:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am making a POST request to my Express-based API, and I notice that when I redirect, the authentication header does not get passed on, while any other headers (even nonsense ones) will make it past the redirect. Is this the intended behaviour?\r\n\r\nThe client makes a POST request\r\n\r\n```javascript\r\nvar requestPackage = require('request');\r\n\r\nrequestPackage.post({\r\n\turl: 'API_URL',\r\n\tauth: {\r\n\t\tbearer: 'API_TOKEN',\r\n\t},\r\n\theaders: {\r\n\t\t'lorem-ipsum': 'DOLOR SIT AMET'\r\n\t},\r\n\tjson: {\r\n\t\t'nunc tristique felis': 'id fringilla feugiat',\r\n\t},\r\n});\r\n```\r\n\r\nand the server performs the redirect (using status code 307 so that the headers get passed through)\r\n\r\n```javascript\r\nvar expressRouter = require('express').Router();\r\n\r\nexpressRouter.post('/API_PATH_ALPHA', function (req, res, next) {\r\n\tconsole.log({\r\n\t\tcustomHeader: req.headers['lorem-ipsum'],\r\n\t\tauthorisazion: req.headers.authorization,\r\n\t});\r\n\r\n\treturn res.redirect(307, '/API_PATH_BETA');\r\n});\r\n\r\nexpressRouter.post('/API_PATH_BETA', function (req, res, next) {\r\n\tconsole.log({\r\n\t\tcustomHeader: req.headers['lorem-ipsum'],\r\n\t\tauthorisazion: req.headers.authorization, // undefined\r\n\t});\r\n\r\n\treturn res.type('txt').send('Hello');\r\n});\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3633/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3633/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3631",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3631/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3631/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3631/events",
    "html_url": "https://github.com/expressjs/express/issues/3631",
    "id": 316459641,
    "node_id": "MDU6SXNzdWUzMTY0NTk2NDE=",
    "number": 3631,
    "title": "run app.render asynchronously",
    "user": {
      "login": "AbdelrahmanHafez",
      "id": 19984935,
      "node_id": "MDQ6VXNlcjE5OTg0OTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/19984935?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AbdelrahmanHafez",
      "html_url": "https://github.com/AbdelrahmanHafez",
      "followers_url": "https://api.github.com/users/AbdelrahmanHafez/followers",
      "following_url": "https://api.github.com/users/AbdelrahmanHafez/following{/other_user}",
      "gists_url": "https://api.github.com/users/AbdelrahmanHafez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AbdelrahmanHafez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AbdelrahmanHafez/subscriptions",
      "organizations_url": "https://api.github.com/users/AbdelrahmanHafez/orgs",
      "repos_url": "https://api.github.com/users/AbdelrahmanHafez/repos",
      "events_url": "https://api.github.com/users/AbdelrahmanHafez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AbdelrahmanHafez/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-04-21T04:08:54Z",
    "updated_at": "2018-04-22T00:56:14Z",
    "closed_at": "2018-04-21T19:10:32Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Is there a way to run app.render asynchronously?\r\n\r\nI tried promisifying it using `bluebird` but I get an error\r\n```\r\n    let render = Promise.promisify(req.app.render);\r\n    html = await render('email', { email: 'someone@gmail.com' });\r\n```\r\noutput:\r\n\r\n `TypeError: Cannot read property 'cache' of undefined`",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3631/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3631/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3630",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3630/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3630/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3630/events",
    "html_url": "https://github.com/expressjs/express/issues/3630",
    "id": 316428596,
    "node_id": "MDU6SXNzdWUzMTY0Mjg1OTY=",
    "number": 3630,
    "title": "Question about parameters in Routers",
    "user": {
      "login": "Jtaks",
      "id": 6249932,
      "node_id": "MDQ6VXNlcjYyNDk5MzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6249932?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Jtaks",
      "html_url": "https://github.com/Jtaks",
      "followers_url": "https://api.github.com/users/Jtaks/followers",
      "following_url": "https://api.github.com/users/Jtaks/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jtaks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Jtaks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jtaks/subscriptions",
      "organizations_url": "https://api.github.com/users/Jtaks/orgs",
      "repos_url": "https://api.github.com/users/Jtaks/repos",
      "events_url": "https://api.github.com/users/Jtaks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Jtaks/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-04-20T22:24:50Z",
    "updated_at": "2019-02-20T17:49:38Z",
    "closed_at": "2019-02-20T17:49:38Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have this api project with a files structure similar to the following:\r\n\r\n```\r\napp.js                /\r\n |- books\r\n    |- index.js       /books\r\n    |- p-id\r\n       |- index.js    /books/:id\r\n```\r\n\r\nEach index.js file exports an express.Router() that uses the next 'path extension' like so:\r\n\r\n```js\r\n/* books index.js */\r\nconst { Router } = require('express')\r\nconst pid = require('./p-id')\r\n\r\nconst route = () => {\r\n  const router = Router()\r\n  router.get('/', /* GET method */)\r\n  router.use('/:id', pid)\r\n  return router\r\n}\r\n\r\nmodule.exports = route\r\n```\r\n\r\nHowever when I visit `/books/123`, req.params is always empty:\r\n\r\n```js\r\n/* p-id index.js */\r\nconst { Router } = require('express')\r\n\r\nconst route = () => {\r\n  const router = Router()\r\n  router.get('/', (req, res) => res.json({ params: req.params }))  // req.params == {}\r\n  return router\r\n}\r\n\r\nmodule.exports = route\r\n```\r\n\r\nI came across #3084 which mentioned using `Router({ mergeParams: true })`. If I do so in `p-id index.js` my parameters show up. Is the option needed because it is travelling through each router to get to the final route `/books/:id` and dropping the param at `/books` along the way? Why are the options only needed at `/books/:id` and not also at `/`?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3630/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3630/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3629",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3629/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3629/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3629/events",
    "html_url": "https://github.com/expressjs/express/issues/3629",
    "id": 316373733,
    "node_id": "MDU6SXNzdWUzMTYzNzM3MzM=",
    "number": 3629,
    "title": "Adding database models to the request object?",
    "user": {
      "login": "edahlseng",
      "id": 6352776,
      "node_id": "MDQ6VXNlcjYzNTI3NzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6352776?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/edahlseng",
      "html_url": "https://github.com/edahlseng",
      "followers_url": "https://api.github.com/users/edahlseng/followers",
      "following_url": "https://api.github.com/users/edahlseng/following{/other_user}",
      "gists_url": "https://api.github.com/users/edahlseng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/edahlseng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/edahlseng/subscriptions",
      "organizations_url": "https://api.github.com/users/edahlseng/orgs",
      "repos_url": "https://api.github.com/users/edahlseng/repos",
      "events_url": "https://api.github.com/users/edahlseng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/edahlseng/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-04-20T18:49:03Z",
    "updated_at": "2018-05-07T15:57:08Z",
    "closed_at": "2018-05-05T15:57:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have a question about what the request object can be used for within Express. In particular, I'm considering creating a middleware that adds a database model to the request object, something like this:\r\n\r\n```javascript\r\nconst express = require('express');\r\nconst db = require('./databaseModel.js');\r\n\r\nconst app = express();\r\n\r\napp.use((req, res, next) => {\r\n    req.db = db;\r\n    next();\r\n}\r\n\r\napp.get('/store', (req, res) => {\r\n    req.db.getAllStoreItems()\r\n    .then(storeItems => res.send(storeItems))\r\n    .catch(error => res.sendStatus(500));\r\n}\r\n```\r\n\r\nIs this an appropriate use of the request object? I'm considering this approach because it will make it easier to test my route controllers (I can just pass in a mocked database without needing to monkey patch the models), but I haven't seen this usage pattern much online so I'm not sure if there are performance implications/other gotchas that I'm not considering.\r\n\r\nThanks for the help!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3629/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3629/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3628",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3628/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3628/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3628/events",
    "html_url": "https://github.com/expressjs/express/issues/3628",
    "id": 316356898,
    "node_id": "MDU6SXNzdWUzMTYzNTY4OTg=",
    "number": 3628,
    "title": "what's the best way to do complex conditions on routes? ",
    "user": {
      "login": "GuyMograbi",
      "id": 287367,
      "node_id": "MDQ6VXNlcjI4NzM2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/287367?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GuyMograbi",
      "html_url": "https://github.com/GuyMograbi",
      "followers_url": "https://api.github.com/users/GuyMograbi/followers",
      "following_url": "https://api.github.com/users/GuyMograbi/following{/other_user}",
      "gists_url": "https://api.github.com/users/GuyMograbi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GuyMograbi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GuyMograbi/subscriptions",
      "organizations_url": "https://api.github.com/users/GuyMograbi/orgs",
      "repos_url": "https://api.github.com/users/GuyMograbi/repos",
      "events_url": "https://api.github.com/users/GuyMograbi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GuyMograbi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-04-20T17:50:08Z",
    "updated_at": "2018-05-05T15:58:49Z",
    "closed_at": "2018-05-05T15:58:40Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I often find myself in need to use a middleware based on subdomain or query parameter. \r\n\r\nright now, I am using a general middleware to do so. for example\r\n\r\n```\r\napp.use((req, res, next)=> {\r\n   if (req.query && ... ){...} else {next()}\r\n})\r\n```\r\n\r\nI was hoping maybe there's an easier way to achieve this. \r\nCan I configure express to also look at the query parameter and the domain while comparing routes? \r\nThen I can do \r\n\r\n```\r\napp.use(/some.sub.domain.com/, .. );\r\napp.use(/query=parameter/, ... )\r\n```\r\n\r\nor something of that sort. \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3628/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3628/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3626",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3626/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3626/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3626/events",
    "html_url": "https://github.com/expressjs/express/issues/3626",
    "id": 315604680,
    "node_id": "MDU6SXNzdWUzMTU2MDQ2ODA=",
    "number": 3626,
    "title": "req.fresh send 304?  shouldn't that be req.stale send 304?",
    "user": {
      "login": "waffledonkey",
      "id": 12648350,
      "node_id": "MDQ6VXNlcjEyNjQ4MzUw",
      "avatar_url": "https://avatars.githubusercontent.com/u/12648350?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/waffledonkey",
      "html_url": "https://github.com/waffledonkey",
      "followers_url": "https://api.github.com/users/waffledonkey/followers",
      "following_url": "https://api.github.com/users/waffledonkey/following{/other_user}",
      "gists_url": "https://api.github.com/users/waffledonkey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/waffledonkey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/waffledonkey/subscriptions",
      "organizations_url": "https://api.github.com/users/waffledonkey/orgs",
      "repos_url": "https://api.github.com/users/waffledonkey/repos",
      "events_url": "https://api.github.com/users/waffledonkey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/waffledonkey/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-04-18T19:05:42Z",
    "updated_at": "2018-04-18T19:09:19Z",
    "closed_at": "2018-04-18T19:09:04Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Am I completely misreading the docs or is response.js line 206 incorrect (should be req.stale)\r\n```\r\n205: // freshness\r\n206: if (req.fresh) this.statusCode = 304;\r\n```\r\n\r\n[req.fresh](http://expressjs.com/en/4x/api.html#req.fresh)\r\nIndicates whether the request is “fresh.” It is the opposite of req.stale.\r\n\r\nIt is true if the cache-control request header doesn’t have a no-cache directive and any of the following are true:\r\n\r\nThe if-modified-since request header is specified and last-modified request header is equal to or earlier than the modified response header. \r\nThe if-none-match request header is *.\r\nThe **if-none-match request header**, after being parsed into its directives, **does not match the etag response header**.\r\n\r\nI've never seen the second condition but the first and last seem like they should result in 200 not 304.  I think the docs are written correctly, but the code in send() is not.\r\n\r\nThank you for your time and consideration (and all you've done/are doing... bravo!)",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3626/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3626/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3625",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3625/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3625/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3625/events",
    "html_url": "https://github.com/expressjs/express/pull/3625",
    "id": 315246237,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTgyMzA2ODk2",
    "number": 3625,
    "title": "If XFH header has multiple values while proxying, use oldest",
    "user": {
      "login": "zionts",
      "id": 6365997,
      "node_id": "MDQ6VXNlcjYzNjU5OTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6365997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zionts",
      "html_url": "https://github.com/zionts",
      "followers_url": "https://api.github.com/users/zionts/followers",
      "following_url": "https://api.github.com/users/zionts/following{/other_user}",
      "gists_url": "https://api.github.com/users/zionts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zionts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zionts/subscriptions",
      "organizations_url": "https://api.github.com/users/zionts/orgs",
      "repos_url": "https://api.github.com/users/zionts/repos",
      "events_url": "https://api.github.com/users/zionts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zionts/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-04-17T21:42:31Z",
    "updated_at": "2018-04-17T21:56:41Z",
    "closed_at": "2018-04-17T21:55:36Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3625",
      "html_url": "https://github.com/expressjs/express/pull/3625",
      "diff_url": "https://github.com/expressjs/express/pull/3625.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3625.patch",
      "merged_at": null
    },
    "body": "If an express server is sitting behind multiple proxies, it's\r\n    conceivable that multiple X-Forwarded-Host headers might get set. In\r\n    that case, Express should not crash and instead take the oldest\r\n    (left-most) header value to use as the host.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3625/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3625/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3624",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3624/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3624/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3624/events",
    "html_url": "https://github.com/expressjs/express/issues/3624",
    "id": 314721738,
    "node_id": "MDU6SXNzdWUzMTQ3MjE3Mzg=",
    "number": 3624,
    "title": "installation fails on docker image.",
    "user": {
      "login": "danilohgds",
      "id": 12349622,
      "node_id": "MDQ6VXNlcjEyMzQ5NjIy",
      "avatar_url": "https://avatars.githubusercontent.com/u/12349622?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danilohgds",
      "html_url": "https://github.com/danilohgds",
      "followers_url": "https://api.github.com/users/danilohgds/followers",
      "following_url": "https://api.github.com/users/danilohgds/following{/other_user}",
      "gists_url": "https://api.github.com/users/danilohgds/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danilohgds/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danilohgds/subscriptions",
      "organizations_url": "https://api.github.com/users/danilohgds/orgs",
      "repos_url": "https://api.github.com/users/danilohgds/repos",
      "events_url": "https://api.github.com/users/danilohgds/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danilohgds/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-04-16T16:06:33Z",
    "updated_at": "2018-04-16T16:40:37Z",
    "closed_at": "2018-04-16T16:13:16Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi guys, \r\n\r\nCan you help me with the following issue ? Npm install on Alpine based images results in the following error:\r\n```\r\nnpm ERR! Linux 4.9.87-linuxkit-aufs\r\nnpm ERR! argv \"/usr/local/bin/node\" \"/usr/local/bin/npm\" \"install\"\r\nnpm ERR! node v6.9.5\r\nnpm ERR! npm  v3.10.10\r\nnpm ERR! path /opt/app/node_modules/express/node_modules/array-flatten\r\nnpm ERR! code ENOENT\r\nnpm ERR! errno -2\r\nnpm ERR! syscall rename\r\n\r\nnpm ERR! enoent ENOENT: no such file or directory, rename '/opt/app/node_modules/express/node_modules/array-flatten' -> '/opt/app/node_modules/array-flatten'\r\nnpm ERR! enoent ENOENT: no such file or directory, rename '/opt/app/node_modules/express/node_modules/array-flatten' -> '/opt/app/node_modules/array-flatten'\r\nnpm ERR! enoent This is most likely not a problem with npm itself\r\nnpm ERR! enoent and is related to npm not being able to find a file.\r\nnpm ERR! enoent\r\n```\r\nAny clues why ? ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3624/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3624/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3623",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3623/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3623/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3623/events",
    "html_url": "https://github.com/expressjs/express/pull/3623",
    "id": 314688925,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTgxODkwNjUz",
    "number": 3623,
    "title": "Add app.createRouter function",
    "user": {
      "login": "czaarek99",
      "id": 8447807,
      "node_id": "MDQ6VXNlcjg0NDc4MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8447807?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/czaarek99",
      "html_url": "https://github.com/czaarek99",
      "followers_url": "https://api.github.com/users/czaarek99/followers",
      "following_url": "https://api.github.com/users/czaarek99/following{/other_user}",
      "gists_url": "https://api.github.com/users/czaarek99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/czaarek99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/czaarek99/subscriptions",
      "organizations_url": "https://api.github.com/users/czaarek99/orgs",
      "repos_url": "https://api.github.com/users/czaarek99/repos",
      "events_url": "https://api.github.com/users/czaarek99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/czaarek99/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2018-04-16T14:47:01Z",
    "updated_at": "2020-04-16T06:37:24Z",
    "closed_at": "2020-04-16T06:37:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3623",
      "html_url": "https://github.com/expressjs/express/pull/3623",
      "diff_url": "https://github.com/expressjs/express/pull/3623.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3623.patch",
      "merged_at": null
    },
    "body": "Implement PR #3622 but against 4.x master branch instead",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3623/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3623/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3622",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3622/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3622/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3622/events",
    "html_url": "https://github.com/expressjs/express/pull/3622",
    "id": 314651717,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTgxODYxMTYx",
    "number": 3622,
    "title": "Add app.createRouter function",
    "user": {
      "login": "czaarek99",
      "id": 8447807,
      "node_id": "MDQ6VXNlcjg0NDc4MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8447807?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/czaarek99",
      "html_url": "https://github.com/czaarek99",
      "followers_url": "https://api.github.com/users/czaarek99/followers",
      "following_url": "https://api.github.com/users/czaarek99/following{/other_user}",
      "gists_url": "https://api.github.com/users/czaarek99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/czaarek99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/czaarek99/subscriptions",
      "organizations_url": "https://api.github.com/users/czaarek99/orgs",
      "repos_url": "https://api.github.com/users/czaarek99/repos",
      "events_url": "https://api.github.com/users/czaarek99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/czaarek99/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-04-16T13:30:05Z",
    "updated_at": "2018-04-16T14:48:10Z",
    "closed_at": "2018-04-16T14:48:10Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3622",
      "html_url": "https://github.com/expressjs/express/pull/3622",
      "diff_url": "https://github.com/expressjs/express/pull/3622.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3622.patch",
      "merged_at": null
    },
    "body": "Added the functionality from #2564 \r\n(Initial PR here: #3620)",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3622/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3622/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3621",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3621/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3621/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3621/events",
    "html_url": "https://github.com/expressjs/express/pull/3621",
    "id": 314396742,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTgxNjg3Mzkw",
    "number": 3621,
    "title": "Change default setting of query parser from extended to simple",
    "user": {
      "login": "czaarek99",
      "id": 8447807,
      "node_id": "MDQ6VXNlcjg0NDc4MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8447807?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/czaarek99",
      "html_url": "https://github.com/czaarek99",
      "followers_url": "https://api.github.com/users/czaarek99/followers",
      "following_url": "https://api.github.com/users/czaarek99/following{/other_user}",
      "gists_url": "https://api.github.com/users/czaarek99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/czaarek99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/czaarek99/subscriptions",
      "organizations_url": "https://api.github.com/users/czaarek99/orgs",
      "repos_url": "https://api.github.com/users/czaarek99/repos",
      "events_url": "https://api.github.com/users/czaarek99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/czaarek99/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 98481977,
        "node_id": "MDU6TGFiZWw5ODQ4MTk3Nw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/5.x",
        "name": "5.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/11",
      "html_url": "https://github.com/expressjs/express/milestone/11",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/11/labels",
      "id": 739972,
      "node_id": "MDk6TWlsZXN0b25lNzM5OTcy",
      "number": 11,
      "title": "5.0",
      "description": "",
      "creator": {
        "login": "Fishrock123",
        "id": 1093990,
        "node_id": "MDQ6VXNlcjEwOTM5OTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1093990?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fishrock123",
        "html_url": "https://github.com/Fishrock123",
        "followers_url": "https://api.github.com/users/Fishrock123/followers",
        "following_url": "https://api.github.com/users/Fishrock123/following{/other_user}",
        "gists_url": "https://api.github.com/users/Fishrock123/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Fishrock123/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Fishrock123/subscriptions",
        "organizations_url": "https://api.github.com/users/Fishrock123/orgs",
        "repos_url": "https://api.github.com/users/Fishrock123/repos",
        "events_url": "https://api.github.com/users/Fishrock123/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Fishrock123/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 8,
      "closed_issues": 12,
      "state": "open",
      "created_at": "2014-08-01T16:41:47Z",
      "updated_at": "2023-03-04T23:52:31Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 24,
    "created_at": "2018-04-15T08:31:11Z",
    "updated_at": "2021-12-18T05:09:55Z",
    "closed_at": "2021-12-18T05:09:55Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3621",
      "html_url": "https://github.com/expressjs/express/pull/3621",
      "diff_url": "https://github.com/expressjs/express/pull/3621.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3621.patch",
      "merged_at": "2021-12-18T05:09:55Z"
    },
    "body": "Implemented the change discussed in #3361 ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3621/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3621/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3620",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3620/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3620/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3620/events",
    "html_url": "https://github.com/expressjs/express/pull/3620",
    "id": 314343404,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTgxNjU2MjQ2",
    "number": 3620,
    "title": "Add app.createRouter function",
    "user": {
      "login": "czaarek99",
      "id": 8447807,
      "node_id": "MDQ6VXNlcjg0NDc4MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8447807?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/czaarek99",
      "html_url": "https://github.com/czaarek99",
      "followers_url": "https://api.github.com/users/czaarek99/followers",
      "following_url": "https://api.github.com/users/czaarek99/following{/other_user}",
      "gists_url": "https://api.github.com/users/czaarek99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/czaarek99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/czaarek99/subscriptions",
      "organizations_url": "https://api.github.com/users/czaarek99/orgs",
      "repos_url": "https://api.github.com/users/czaarek99/repos",
      "events_url": "https://api.github.com/users/czaarek99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/czaarek99/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 55587817,
        "node_id": "MDU6TGFiZWw1NTU4NzgxNw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/needs%20tests",
        "name": "needs tests",
        "color": "e11d21",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2018-04-14T16:45:09Z",
    "updated_at": "2018-04-16T13:28:21Z",
    "closed_at": "2018-04-16T13:28:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3620",
      "html_url": "https://github.com/expressjs/express/pull/3620",
      "diff_url": "https://github.com/expressjs/express/pull/3620.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3620.patch",
      "merged_at": null
    },
    "body": "Added the functionality from #2564 ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3620/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3620/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3619",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3619/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3619/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3619/events",
    "html_url": "https://github.com/expressjs/express/issues/3619",
    "id": 312977892,
    "node_id": "MDU6SXNzdWUzMTI5Nzc4OTI=",
    "number": 3619,
    "title": "TypeError: View is not a constructor",
    "user": {
      "login": "luca-viggiani",
      "id": 25035914,
      "node_id": "MDQ6VXNlcjI1MDM1OTE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25035914?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luca-viggiani",
      "html_url": "https://github.com/luca-viggiani",
      "followers_url": "https://api.github.com/users/luca-viggiani/followers",
      "following_url": "https://api.github.com/users/luca-viggiani/following{/other_user}",
      "gists_url": "https://api.github.com/users/luca-viggiani/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luca-viggiani/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luca-viggiani/subscriptions",
      "organizations_url": "https://api.github.com/users/luca-viggiani/orgs",
      "repos_url": "https://api.github.com/users/luca-viggiani/repos",
      "events_url": "https://api.github.com/users/luca-viggiani/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luca-viggiani/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 8636393,
        "node_id": "MDU6TGFiZWw4NjM2Mzkz",
        "url": "https://api.github.com/repos/expressjs/express/labels/wontfix",
        "name": "wontfix",
        "color": "ffffff",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2018-04-10T15:35:01Z",
    "updated_at": "2018-04-14T16:10:45Z",
    "closed_at": "2018-04-14T16:09:59Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi, I'm getting this error when I try to render an ejs page... I guess the error is on my side, so can you please help me debug?\r\n\r\n**error**:\r\n```\r\nTypeError: View is not a constructor\r\n    at Function.render (/home/luca/Projects/stk/node_modules/express/lib/application.js:570:12)\r\n    at ServerResponse.render (/home/luca/Projects/stk/node_modules/express/lib/response.js:1008:7)\r\n    at app.get (/home/luca/Projects/stk/index.js:28:37)\r\n    at Layer.handle [as handle_request] (/home/luca/Projects/stk/node_modules/express/lib/router/layer.js:95:5)\r\n    at next (/home/luca/Projects/stk/node_modules/express/lib/router/route.js:137:13)\r\n    at Route.dispatch (/home/luca/Projects/stk/node_modules/express/lib/router/route.js:112:3)\r\n    at Layer.handle [as handle_request] (/home/luca/Projects/stk/node_modules/express/lib/router/layer.js:95:5)\r\n    at /home/luca/Projects/stk/node_modules/express/lib/router/index.js:281:22\r\n    at Function.process_params (/home/luca/Projects/stk/node_modules/express/lib/router/index.js:335:12)\r\n    at next (/home/luca/Projects/stk/node_modules/express/lib/router/index.js:275:10)\r\n```\r\n\r\n**my code:**\r\n```\r\nconst express         = require(\"express\"),\r\n           ejs                 = require(\"ejs\"),\r\n           app                = express();\r\n\r\napp.set('view engine', 'ejs');\r\napp.get(\"/login\", (req, res) => res.render(\"login.ejs\"));\r\n```\r\n\r\n\r\n\r\nlogin.ejs is located in views folder of my project\r\n\r\nExpress version is: \"4.16.3\", ejs version is: \"2.5.8\"\r\n\r\nThanks in advance\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3619/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3619/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3618",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3618/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3618/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3618/events",
    "html_url": "https://github.com/expressjs/express/issues/3618",
    "id": 312908583,
    "node_id": "MDU6SXNzdWUzMTI5MDg1ODM=",
    "number": 3618,
    "title": "Can you keep your main express .js file any directory and run with node?",
    "user": {
      "login": "AbhimanyuAryan",
      "id": 8083613,
      "node_id": "MDQ6VXNlcjgwODM2MTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8083613?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AbhimanyuAryan",
      "html_url": "https://github.com/AbhimanyuAryan",
      "followers_url": "https://api.github.com/users/AbhimanyuAryan/followers",
      "following_url": "https://api.github.com/users/AbhimanyuAryan/following{/other_user}",
      "gists_url": "https://api.github.com/users/AbhimanyuAryan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AbhimanyuAryan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AbhimanyuAryan/subscriptions",
      "organizations_url": "https://api.github.com/users/AbhimanyuAryan/orgs",
      "repos_url": "https://api.github.com/users/AbhimanyuAryan/repos",
      "events_url": "https://api.github.com/users/AbhimanyuAryan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AbhimanyuAryan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-04-10T12:51:23Z",
    "updated_at": "2018-05-06T14:42:27Z",
    "closed_at": "2018-05-06T14:42:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "It was earlier working but then I moved `/server.js` to `/server/controllers/oauth.controller.js`\r\n\r\nNow I believe it's not able to fetch the routes from `client directory` which is two level above where oauth.controller.js is kept\r\n\r\n**Error** while visiting 127.0.0.1:4568     \r\n\r\n    >node oauth.controller.js                                 ✗ authentication (origin/authentication)\r\n    server is listening on 4568\r\n    ForbiddenError: Forbidden\r\n        at SendStream.error (/Users/abhimanyuaryan/portal/node_modules/send/index.js:270:31)\r\n        at SendStream.pipe (/Users/abhimanyuaryan/portal/node_modules/send/index.js:554:12)\r\n        at sendfile (/Users/abhimanyuaryan/portal/node_modules/express/lib/response.js:1099:8)\r\n        at ServerResponse.sendFile (/Users/abhimanyuaryan/portal/node_modules/express/lib/response.js:429:3)\r\n        at app.get (/Users/abhimanyuaryan/portal/server/controllers/oauth.controller.js:72:7)\r\n        at Layer.handle [as handle_request] (/Users/abhimanyuaryan/portal/node_modules/express/lib/router/layer.js:95:5)\r\n        at next (/Users/abhimanyuaryan/portal/node_modules/express/lib/router/route.js:137:13)\r\n        at Route.dispatch (/Users/abhimanyuaryan/portal/node_modules/express/lib/router/route.js:112:3)\r\n        at Layer.handle [as handle_request] (/Users/abhimanyuaryan/portal/node_modules/express/lib/router/layer.js:95:5)\r\n        at /Users/abhimanyuaryan/portal/node_modules/express/lib/router/index.js:281:22\r\n\r\n\r\n**/server/controllers/oauth.controllers.js**\r\n\r\n    let Express = require('express')\r\n    let bodyParser = require('body-parser')\r\n    let session = require('express-session')\r\n    let passport = require('passport')\r\n    let GithubStrategy = require('passport-github2').Strategy\r\n    \r\n    let GITHUB_CLIENT_ID = \"xxxxxxxxxxxxxxxxx\"\r\n    let GITHUB_CLIENT_SECRET = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\r\n    \r\n    // flow #4\r\n    passport.serializeUser((user, done) => {\r\n    \tdone(null, user);\r\n    })\r\n    \r\n    // flow #6\r\n    passport.deserializeUser((user, done) => {\r\n    \tdone(null, user);\r\n    })\r\n    \r\n    passport.use(new GithubStrategy({\r\n    \tclientID: GITHUB_CLIENT_ID,\r\n    \tclientSecret: GITHUB_CLIENT_SECRET,\r\n    \tcallbackURL: \"http://127.0.0.1:4568/auth/github/callback\"\r\n      },\r\n      (accessToken, refreshToken,  profile, done) => {\r\n      \t// console.log(profile)\r\n      \t/*\r\n    \tflow #3\r\n    \tProfile is the json result from github, it contains helpful information like id, username, email etc.\r\n    \tYou can decide to use profile.id as your internal userId too.\r\n    \tHere you can call your database and check if the user already exist and create a new record if it doesn't \r\n    \texists. We are not going to include this logic here to keep things simple but you can manage\r\n    \tthe profile data if whatever way you want\r\n      \t*/\r\n      \t// for simplicity we are only going to return the whole profile\r\n      \treturn done(null, profile)\r\n      }\r\n    ))\r\n    \r\n    let app = Express()\r\n    app.use(bodyParser.json())\r\n    app.use(bodyParser.urlencoded({extended: true}))\r\n    app.use(Express.static(__dirname + '../../client', {dotfiles:'allow'}))\r\n    app.use(session({\r\n    \tsecret: 'top secret key',\r\n    \tresave: false,\r\n    \tsaveUninitialized: true\r\n    }))\r\n    app.use(passport.initialize())\r\n    app.use(passport.session())\r\n    \r\n    // Explorting modules to external file\r\n    var exports = module.exports = {};\r\n    \r\n    // function that will check if the user is authenticated\r\n    exports.isAuthenticated = (req, res, next) => {\r\n    \tif(req.isAuthenticated()){\r\n    \t\treturn next()\r\n    \t}\r\n    \tres.redirect('/login')\r\n    }\r\n    \r\n    // you can put 'isAuthenticated function in any get/post call, here is an example'\r\n    app.get('/', exports.isAuthenticated,\r\n    \t(req, res) => {\r\n    \t\tres.sendFile(__dirname + '../../client/secret.html')\r\n    \t}\r\n    )\r\n    \r\n    app.get('/login',\r\n    \t(req, res) => {\r\n    \t\tres.sendFile(__dirname + '../../client/login.html')\r\n    \t}\r\n    )\r\n    \r\n    app.get('/logout', \r\n    \t(req, res) => {\r\n    \t\treq.logout()\r\n    \t\tres.sendFile(__dirname + '../../client/login.html')\r\n    \t}\r\n    )\r\n    \r\n    // 'Sign in with Github' link click will arrive here and from here we call Github API with passport. authenticate\r\n    app.get('/auth/github',\r\n    \t//flow #1\r\n    \tpassport.authenticate('github', {scope: [ 'user:email']}),\r\n    \t(req, res) => {\r\n    \t}\r\n    )\r\n    \r\n    //github responses will arrive here and if its failure we will to /login\r\n    // if its successful we will redirect to ('/')\r\n    app.get('/auth/github/callback',\r\n    \t// flow #2\r\n    \tpassport.authenticate('github', {failureRedirect: '/login'}),\r\n    \t(req, res) => {\r\n    \t\t// flow #5\r\n    \t\tres.redirect('/')\r\n    \t}\r\n    )\r\n    \r\n    console.log('server is listening on 4568')\r\n    app.listen(4568)\r\n\r\n\r\nDirectly Hirarchy\r\n[![enter image description here][1]][1]\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/YHwjm.png",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3618/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3618/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3617",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3617/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3617/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3617/events",
    "html_url": "https://github.com/expressjs/express/pull/3617",
    "id": 312895789,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTgwNTgxODE0",
    "number": 3617,
    "title": "remove nodejs 9 in nightly ",
    "user": {
      "login": "nacimgoura",
      "id": 9990521,
      "node_id": "MDQ6VXNlcjk5OTA1MjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9990521?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nacimgoura",
      "html_url": "https://github.com/nacimgoura",
      "followers_url": "https://api.github.com/users/nacimgoura/followers",
      "following_url": "https://api.github.com/users/nacimgoura/following{/other_user}",
      "gists_url": "https://api.github.com/users/nacimgoura/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nacimgoura/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nacimgoura/subscriptions",
      "organizations_url": "https://api.github.com/users/nacimgoura/orgs",
      "repos_url": "https://api.github.com/users/nacimgoura/repos",
      "events_url": "https://api.github.com/users/nacimgoura/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nacimgoura/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/17",
      "html_url": "https://github.com/expressjs/express/milestone/17",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/17/labels",
      "id": 3066819,
      "node_id": "MDk6TWlsZXN0b25lMzA2NjgxOQ==",
      "number": 17,
      "title": "4.17",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 15,
      "state": "closed",
      "created_at": "2018-01-26T16:25:16Z",
      "updated_at": "2019-05-17T01:58:27Z",
      "due_on": null,
      "closed_at": "2019-05-17T01:58:27Z"
    },
    "comments": 4,
    "created_at": "2018-04-10T12:14:00Z",
    "updated_at": "2018-10-27T05:22:53Z",
    "closed_at": "2018-10-27T05:22:53Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3617",
      "html_url": "https://github.com/expressjs/express/pull/3617",
      "diff_url": "https://github.com/expressjs/express/pull/3617.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3617.patch",
      "merged_at": "2018-10-27T05:22:53Z"
    },
    "body": "NodeJS 9 is no longer nightly. This is the current non-LTS version of nodejs.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3617/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3617/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3616",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3616/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3616/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3616/events",
    "html_url": "https://github.com/expressjs/express/issues/3616",
    "id": 312264417,
    "node_id": "MDU6SXNzdWUzMTIyNjQ0MTc=",
    "number": 3616,
    "title": "NPM Failed to parse json",
    "user": {
      "login": "aidenappl",
      "id": 25751249,
      "node_id": "MDQ6VXNlcjI1NzUxMjQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/25751249?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aidenappl",
      "html_url": "https://github.com/aidenappl",
      "followers_url": "https://api.github.com/users/aidenappl/followers",
      "following_url": "https://api.github.com/users/aidenappl/following{/other_user}",
      "gists_url": "https://api.github.com/users/aidenappl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aidenappl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aidenappl/subscriptions",
      "organizations_url": "https://api.github.com/users/aidenappl/orgs",
      "repos_url": "https://api.github.com/users/aidenappl/repos",
      "events_url": "https://api.github.com/users/aidenappl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aidenappl/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-04-08T02:32:18Z",
    "updated_at": "2018-04-08T02:44:21Z",
    "closed_at": "2018-04-08T02:44:10Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hey there, does anyone by chance know why i'm getting this error when I do sudo npm install?? Thanks!\r\n\r\n`ubuntu@ip-172-26-3-197:~$ sudo npm install\r\nnpm ERR! file /home/ubuntu/package.json\r\nnpm ERR! code EJSONPARSE\r\nnpm ERR! Failed to parse json\r\nnpm ERR! Unexpected string in JSON at position 232 while parsing '{\r\nnpm ERR!   \"name\": \"learnmore\",\r\nnpm ERR!   \"version\": \"1'\r\nnpm ERR! File: /home/ubuntu/package.json\r\nnpm ERR! Failed to parse package.json data.\r\nnpm ERR! package.json must be actual JSON, not just JavaScript.\r\nnpm ERR! \r\nnpm ERR! Tell the package author to fix their package.json file. JSON.parse\r\n\r\nnpm ERR! A complete log of this run can be found in:\r\nnpm ERR!     /home/ubuntu/.npm/_logs/2018-04-08T02_28_21_871Z-debug.log`",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3616/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3616/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3615",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3615/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3615/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3615/events",
    "html_url": "https://github.com/expressjs/express/issues/3615",
    "id": 311467297,
    "node_id": "MDU6SXNzdWUzMTE0NjcyOTc=",
    "number": 3615,
    "title": "req.is('json') returns null while content-type: json is present",
    "user": {
      "login": "georgyfarniev",
      "id": 28708635,
      "node_id": "MDQ6VXNlcjI4NzA4NjM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/28708635?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/georgyfarniev",
      "html_url": "https://github.com/georgyfarniev",
      "followers_url": "https://api.github.com/users/georgyfarniev/followers",
      "following_url": "https://api.github.com/users/georgyfarniev/following{/other_user}",
      "gists_url": "https://api.github.com/users/georgyfarniev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/georgyfarniev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/georgyfarniev/subscriptions",
      "organizations_url": "https://api.github.com/users/georgyfarniev/orgs",
      "repos_url": "https://api.github.com/users/georgyfarniev/repos",
      "events_url": "https://api.github.com/users/georgyfarniev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/georgyfarniev/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-04-05T04:15:35Z",
    "updated_at": "2018-04-05T12:19:30Z",
    "closed_at": "2018-04-05T12:19:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Minimal example, tested with express 4.16.3, node v9.4.0, Windows 10: \r\n\r\n```\r\nconst request = require('superagent')\r\nconst express = require('express')\r\nconst app = express()\r\n\r\napp.get('/', (req, res) => {\r\n  console.log('Header value:', req.headers['content-type'])\r\n  console.log('req.is value:', req.is('json'))\r\n  res.sendStatus(200)\r\n})\r\n\r\napp.listen(3333, async () => request.get('localhost:3333').type('json'))\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3615/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3615/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3614",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3614/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3614/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3614/events",
    "html_url": "https://github.com/expressjs/express/issues/3614",
    "id": 310740467,
    "node_id": "MDU6SXNzdWUzMTA3NDA0Njc=",
    "number": 3614,
    "title": "Problem defining routes inside of an async function",
    "user": {
      "login": "0505gonzalez",
      "id": 719669,
      "node_id": "MDQ6VXNlcjcxOTY2OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/719669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0505gonzalez",
      "html_url": "https://github.com/0505gonzalez",
      "followers_url": "https://api.github.com/users/0505gonzalez/followers",
      "following_url": "https://api.github.com/users/0505gonzalez/following{/other_user}",
      "gists_url": "https://api.github.com/users/0505gonzalez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0505gonzalez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0505gonzalez/subscriptions",
      "organizations_url": "https://api.github.com/users/0505gonzalez/orgs",
      "repos_url": "https://api.github.com/users/0505gonzalez/repos",
      "events_url": "https://api.github.com/users/0505gonzalez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0505gonzalez/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-04-03T08:27:55Z",
    "updated_at": "2018-04-03T08:30:49Z",
    "closed_at": "2018-04-03T08:30:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi all,\r\n\r\nI encountered a strange issue when defining routes in an async function that uses await. In the simplified example below, I define a GET endpoint and an error handler that formats the error. The error handler will not run if there is an await statement in the defineRoutes function. \r\n\r\n```\r\nconst express = require('express');\r\n\r\nconst app = express();\r\n\r\ndefineRoutes(app);\r\n\r\napp.use((err, req, res, next) => {\r\n    res.status(400).send({ error_code: 'FAILED' });\r\n});\r\n\r\napp.listen(8080);\r\n\r\nasync function defineRoutes(app) {\r\n    await \"\"; // Removing this line allows the error handler to run properly\r\n\r\n    app.get('/test', (req, res, next) => {\r\n        return next(new Error('Something happened'));\r\n    });\r\n}\r\n```\r\n\r\nDefining the error handler within the defineRoutes function works fine:\r\n```\r\n'use strict';\r\n\r\nconst express = require('express');\r\n\r\nconst app = express();\r\n\r\ndefineRoutes(app);\r\n\r\napp.listen(8080);\r\n\r\nasync function defineRoutes(app) {\r\n    await \"\";\r\n\r\n    app.get('/test', (req, res, next) => {\r\n        return next(new Error('Something happened'));\r\n    });\r\n\r\n    app.use((err, req, res, next) => {\r\n        res.status(400).send({ error_code: 'FAILED' });\r\n    });\r\n}\r\n``` \r\n\r\nCan anyone shed some light as to what is going on?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3614/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3614/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3613",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3613/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3613/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3613/events",
    "html_url": "https://github.com/expressjs/express/pull/3613",
    "id": 310487548,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTc4ODQxMjU1",
    "number": 3613,
    "title": "Add \"view options\" settings for rendering engines",
    "user": {
      "login": "nvlled",
      "id": 916556,
      "node_id": "MDQ6VXNlcjkxNjU1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/916556?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nvlled",
      "html_url": "https://github.com/nvlled",
      "followers_url": "https://api.github.com/users/nvlled/followers",
      "following_url": "https://api.github.com/users/nvlled/following{/other_user}",
      "gists_url": "https://api.github.com/users/nvlled/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nvlled/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nvlled/subscriptions",
      "organizations_url": "https://api.github.com/users/nvlled/orgs",
      "repos_url": "https://api.github.com/users/nvlled/repos",
      "events_url": "https://api.github.com/users/nvlled/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nvlled/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 163600,
        "node_id": "MDU6TGFiZWwxNjM2MDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false,
        "description": null
      },
      {
        "id": 55587817,
        "node_id": "MDU6TGFiZWw1NTU4NzgxNw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/needs%20tests",
        "name": "needs tests",
        "color": "e11d21",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-04-02T13:40:24Z",
    "updated_at": "2022-10-06T14:16:29Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3613",
      "html_url": "https://github.com/expressjs/express/pull/3613",
      "diff_url": "https://github.com/expressjs/express/pull/3613.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3613.patch",
      "merged_at": null
    },
    "body": "Avoids cluttering app.locals, and is consistent\r\nwith the assignment of the \"view engine\" settings:\r\n```js\r\napp.set(\"view options\", {\r\n    basedir: \"somedir\"\r\n});\r\napp.set(\"view engine\", \"pug\");\r\n```\r\nThe intent is also stated more clearly in comparison to:\r\n```js\r\napp.locals.basedir = \"somedir\"\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3613/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3613/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3612",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3612/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3612/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3612/events",
    "html_url": "https://github.com/expressjs/express/issues/3612",
    "id": 310398447,
    "node_id": "MDU6SXNzdWUzMTAzOTg0NDc=",
    "number": 3612,
    "title": "npm install issue  (ENOENT)",
    "user": {
      "login": "drsmog",
      "id": 7422971,
      "node_id": "MDQ6VXNlcjc0MjI5NzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7422971?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drsmog",
      "html_url": "https://github.com/drsmog",
      "followers_url": "https://api.github.com/users/drsmog/followers",
      "following_url": "https://api.github.com/users/drsmog/following{/other_user}",
      "gists_url": "https://api.github.com/users/drsmog/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drsmog/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drsmog/subscriptions",
      "organizations_url": "https://api.github.com/users/drsmog/orgs",
      "repos_url": "https://api.github.com/users/drsmog/repos",
      "events_url": "https://api.github.com/users/drsmog/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drsmog/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2018-04-02T05:25:46Z",
    "updated_at": "2018-05-08T11:09:53Z",
    "closed_at": "2018-04-14T16:14:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "cant install. any ideas ?\r\n```\r\nC:\\Users\\isvanidze\\Desktop\\testexpress\r\nλ npm install express\r\nnpm WARN enoent ENOENT: no such file or directory, open 'C:\\Users\\isvanidze\\Desktop\\testexpress\\package.json'\r\nnpm WARN testexpress No description\r\nnpm WARN testexpress No repository field.\r\nnpm WARN testexpress No README data\r\nnpm WARN testexpress No license field.\r\n\r\nnpm ERR! path C:\\Users\\isvanidze\\Desktop\\testexpress\\node_modules\\content-type\r\nnpm ERR! code ENOENT\r\nnpm ERR! errno -4058\r\nnpm ERR! syscall rename\r\nnpm ERR! enoent ENOENT: no such file or directory, rename 'C:\\Users\\isvanidze\\Desktop\\testexpress\\node_modules\\content-type' -> 'C:\\Users\\isvanidze\\Desktop\\testexpress\\node_modules\\.content-type.DELETE'\r\nnpm ERR! enoent This is related to npm not being able to find a file.\r\nnpm ERR! enoent\r\n\r\nnpm ERR! A complete log of this run can be found in:\r\nnpm ERR!     C:\\Users\\isvanidze\\AppData\\Roaming\\npm-cache\\_logs\\2018-04-02T05_24_00_738Z-debug.log\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3612/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3612/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3611",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3611/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3611/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3611/events",
    "html_url": "https://github.com/expressjs/express/issues/3611",
    "id": 310282343,
    "node_id": "MDU6SXNzdWUzMTAyODIzNDM=",
    "number": 3611,
    "title": "Ubuntu+express network hang after several minutes",
    "user": {
      "login": "songzhuang",
      "id": 12578871,
      "node_id": "MDQ6VXNlcjEyNTc4ODcx",
      "avatar_url": "https://avatars.githubusercontent.com/u/12578871?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/songzhuang",
      "html_url": "https://github.com/songzhuang",
      "followers_url": "https://api.github.com/users/songzhuang/followers",
      "following_url": "https://api.github.com/users/songzhuang/following{/other_user}",
      "gists_url": "https://api.github.com/users/songzhuang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/songzhuang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/songzhuang/subscriptions",
      "organizations_url": "https://api.github.com/users/songzhuang/orgs",
      "repos_url": "https://api.github.com/users/songzhuang/repos",
      "events_url": "https://api.github.com/users/songzhuang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/songzhuang/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2018-04-01T00:24:50Z",
    "updated_at": "2018-04-05T00:45:26Z",
    "closed_at": "2018-04-05T00:42:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello,\r\n\r\nI am running Node.js (ver 9+) express (version 4.16) on Ubuntu 16.04.  The router is used as a captive portal, in that anyone connecting to the router will be redirected to the webserver.  This is done via iptables.\r\n\r\nThe webserver has a login page.  After login the internet is opened for the client via iptables.\r\n\r\nI have tried connecting using 2 devices.  Things work well for about 10 minutes. Then the network just hangs.  The router becomes unreachable from the linux box ie cannot ping gateway.\r\n\r\nI am at a loss as to how to even narrow down the problem.  Things I have tried:  \r\n\r\n1) catch and print every error in the webserver.  use callbacks consistently.  These show no errors and the webserver does not crash.\r\n2) check memory and cpu usage using top.  These are also ok, with very low cpu usage (peak usage 1 percent) and memory usage of about 1 percent\r\n3) tcpdump.  when the network drops, I can see a bunch of who-has tell.  I am new to tcpdump.\r\n4) on failure ifconfig shows the correct static ip for the ubuntu web server.  But pinging the router fails.\r\n\r\nIts kind of a vague problem, where I am not even able to narrow it down.  Any help, pointers appreciated.  If you need any information, please let me know.\r\n\r\nIve been struggling with this problem for about 2 weeks now.\r\n\r\nThanks much,\r\nSridhar ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3611/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3611/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3610",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3610/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3610/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3610/events",
    "html_url": "https://github.com/expressjs/express/pull/3610",
    "id": 310097019,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTc4NTgzMTU2",
    "number": 3610,
    "title": "Handling promises at router layer",
    "user": {
      "login": "davidbayo10",
      "id": 6841248,
      "node_id": "MDQ6VXNlcjY4NDEyNDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6841248?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidbayo10",
      "html_url": "https://github.com/davidbayo10",
      "followers_url": "https://api.github.com/users/davidbayo10/followers",
      "following_url": "https://api.github.com/users/davidbayo10/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidbayo10/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidbayo10/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidbayo10/subscriptions",
      "organizations_url": "https://api.github.com/users/davidbayo10/orgs",
      "repos_url": "https://api.github.com/users/davidbayo10/repos",
      "events_url": "https://api.github.com/users/davidbayo10/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidbayo10/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-03-30T15:40:02Z",
    "updated_at": "2018-03-30T16:18:32Z",
    "closed_at": "2018-03-30T15:43:36Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3610",
      "html_url": "https://github.com/expressjs/express/pull/3610",
      "diff_url": "https://github.com/expressjs/express/pull/3610.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3610.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3610/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3610/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3609",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3609/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3609/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3609/events",
    "html_url": "https://github.com/expressjs/express/issues/3609",
    "id": 309567950,
    "node_id": "MDU6SXNzdWUzMDk1Njc5NTA=",
    "number": 3609,
    "title": "freelance required to code here a pull request",
    "user": {
      "login": "nitzanav",
      "id": 1374797,
      "node_id": "MDQ6VXNlcjEzNzQ3OTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1374797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nitzanav",
      "html_url": "https://github.com/nitzanav",
      "followers_url": "https://api.github.com/users/nitzanav/followers",
      "following_url": "https://api.github.com/users/nitzanav/following{/other_user}",
      "gists_url": "https://api.github.com/users/nitzanav/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nitzanav/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nitzanav/subscriptions",
      "organizations_url": "https://api.github.com/users/nitzanav/orgs",
      "repos_url": "https://api.github.com/users/nitzanav/repos",
      "events_url": "https://api.github.com/users/nitzanav/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nitzanav/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-03-28T23:27:51Z",
    "updated_at": "2018-03-29T00:07:28Z",
    "closed_at": "2018-03-29T00:07:14Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "--removed--",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3609/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3609/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3608",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3608/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3608/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3608/events",
    "html_url": "https://github.com/expressjs/express/issues/3608",
    "id": 309362232,
    "node_id": "MDU6SXNzdWUzMDkzNjIyMzI=",
    "number": 3608,
    "title": "Switching multiple router instances at runtime",
    "user": {
      "login": "moecre",
      "id": 1425946,
      "node_id": "MDQ6VXNlcjE0MjU5NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1425946?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/moecre",
      "html_url": "https://github.com/moecre",
      "followers_url": "https://api.github.com/users/moecre/followers",
      "following_url": "https://api.github.com/users/moecre/following{/other_user}",
      "gists_url": "https://api.github.com/users/moecre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/moecre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/moecre/subscriptions",
      "organizations_url": "https://api.github.com/users/moecre/orgs",
      "repos_url": "https://api.github.com/users/moecre/repos",
      "events_url": "https://api.github.com/users/moecre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/moecre/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-03-28T13:15:49Z",
    "updated_at": "2018-05-05T15:59:41Z",
    "closed_at": "2018-05-05T15:59:32Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Regarding question #2596 it's possible to switch a router instance during runtime to react to route changes. Especially in a hot module replacement environment this is amazing! Thanks for that hint! It works great!\r\n\r\n...but only if a don't work with virtual hosts. In our setup we create multiple router instances. One for every configured virtual host. Than we're using [expressjs/vhost](https://github.com/expressjs/vhost) middleware to check onto which router we have to \"redirect\" the request. If routes will be changed during runtime we recreate every router instance like we do it with just one host (one router) but these changes won't be visible in the apps.\r\n\r\nDoes the router replacement on express side only work with one instance per runtime?\r\n\r\nWe're on express version 4.16.2.\r\n\r\n```\r\nvar routing = function (vhost) {\r\n                return function (req, res, next) {\r\n                    _vhosts[vhost][\"router\"](req, res, next);\r\n                }\r\n            };\r\nappHttp.use(routing(thisVhost));\r\n```\r\n\r\n`_vhosts[vhost][\"router\"]` contains a router instance for every virtual host. If there is no virtual host there will be a \"*\" entry and therefore only one router instance.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3608/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3608/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3607",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3607/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3607/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3607/events",
    "html_url": "https://github.com/expressjs/express/issues/3607",
    "id": 309214879,
    "node_id": "MDU6SXNzdWUzMDkyMTQ4Nzk=",
    "number": 3607,
    "title": "`router.use` vs function",
    "user": {
      "login": "James2516",
      "id": 25133127,
      "node_id": "MDQ6VXNlcjI1MTMzMTI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/25133127?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/James2516",
      "html_url": "https://github.com/James2516",
      "followers_url": "https://api.github.com/users/James2516/followers",
      "following_url": "https://api.github.com/users/James2516/following{/other_user}",
      "gists_url": "https://api.github.com/users/James2516/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/James2516/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/James2516/subscriptions",
      "organizations_url": "https://api.github.com/users/James2516/orgs",
      "repos_url": "https://api.github.com/users/James2516/repos",
      "events_url": "https://api.github.com/users/James2516/events{/privacy}",
      "received_events_url": "https://api.github.com/users/James2516/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-03-28T04:11:20Z",
    "updated_at": "2018-04-14T16:12:50Z",
    "closed_at": "2018-04-14T16:12:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "    router.use((req, res, next) => { // export as single route in a file\r\n      if (req.isAuthenticated()) {\r\n        next();\r\n        return;\r\n      }\r\n      res.sendStatus(401);\r\n    });\r\n    \r\n    const authenticate = (req, res, next) => {\r\n      if (req.isAuthenticated()) {\r\n        next();\r\n        return;\r\n      }\r\n      res.sendStatus(401);\r\n    };\r\nThe above are 2 ways of writing the authentication route for use in another route (like below). Which way is preferred and why?\r\n\r\n    router.post('/', authenticate, (req, res, next) => {});\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3607/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3607/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3606",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3606/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3606/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3606/events",
    "html_url": "https://github.com/expressjs/express/issues/3606",
    "id": 308994838,
    "node_id": "MDU6SXNzdWUzMDg5OTQ4Mzg=",
    "number": 3606,
    "title": "Nodejs post request timeouts net::ERR_EMPTY_RESPONSE",
    "user": {
      "login": "achirashamal",
      "id": 28665549,
      "node_id": "MDQ6VXNlcjI4NjY1NTQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/28665549?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achirashamal",
      "html_url": "https://github.com/achirashamal",
      "followers_url": "https://api.github.com/users/achirashamal/followers",
      "following_url": "https://api.github.com/users/achirashamal/following{/other_user}",
      "gists_url": "https://api.github.com/users/achirashamal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achirashamal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achirashamal/subscriptions",
      "organizations_url": "https://api.github.com/users/achirashamal/orgs",
      "repos_url": "https://api.github.com/users/achirashamal/repos",
      "events_url": "https://api.github.com/users/achirashamal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achirashamal/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      },
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2018-03-27T14:30:42Z",
    "updated_at": "2018-12-06T22:22:27Z",
    "closed_at": "2018-03-28T16:06:30Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "I'm having a sign-In Http service as follow\r\n```\r\nrouter.post('/signin', function(req, res) {                \r\n                req.setTimeout(0);    \r\n                User.findOne({email: req.body.email}, function(err, user) {\r\n                  if (err) {\r\n                   return res.json({success: false, msg: err});\r\n                  };        \r\n                  if (!user) {\r\n                   return res.json({success: false, msg: 'Authentication faild. User not found.'});\r\n                  } else {\r\n                    // check if password matches        \r\n                    user.comparePassword(req.body.password, function (err, isMatch) {\r\n\r\n                      if (isMatch && !err) {                            \r\n                        // if user is found and password is right create a token\r\n                        var token = jwt.sign(user, config.secret,{ expiresIn:100000});\r\n                        // return the information including token as JSON\r\n                        return res.json({success: true, token: 'JWT ' + token,role:user.role});\r\n                      } else {\r\n                        return res.json({success: false, msg: 'Authentication failed. Wrong password.'});\r\n                      }\r\n                    });\r\n                  }\r\n                });\r\n              });\r\n```\r\nBut when I call the service from Angular front-end It says\r\n\r\n`/api/signin net::ERR_EMPTY_RESPONSE`\r\n\r\nOther requests are working fine (including other post requests).\r\nThis is my server congigurations\r\n\r\n```\r\napp.use(function(req, res, next) {\r\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\r\n  res.header('Access-Control-Allow-Methods', '*');\r\n  res.header('Access-Control-Allow-Headers', 'Origin, Accept, Accept-Version, Content-Length, Content-MD5, Content-Type, Date, X-Api-Version, X-Response-Time, X-PINGOTHER, X-CSRF-Token,Authorization');\r\n  next();\r\n});\r\n```\r\nCan any one help me on this?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3606/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3606/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3605",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3605/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3605/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3605/events",
    "html_url": "https://github.com/expressjs/express/issues/3605",
    "id": 308791152,
    "node_id": "MDU6SXNzdWUzMDg3OTExNTI=",
    "number": 3605,
    "title": "Addition to the FAQ section",
    "user": {
      "login": "nickgrealy",
      "id": 1669373,
      "node_id": "MDQ6VXNlcjE2NjkzNzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1669373?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nickgrealy",
      "html_url": "https://github.com/nickgrealy",
      "followers_url": "https://api.github.com/users/nickgrealy/followers",
      "following_url": "https://api.github.com/users/nickgrealy/following{/other_user}",
      "gists_url": "https://api.github.com/users/nickgrealy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nickgrealy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nickgrealy/subscriptions",
      "organizations_url": "https://api.github.com/users/nickgrealy/orgs",
      "repos_url": "https://api.github.com/users/nickgrealy/repos",
      "events_url": "https://api.github.com/users/nickgrealy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nickgrealy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-03-27T01:36:52Z",
    "updated_at": "2018-03-27T02:05:31Z",
    "closed_at": "2018-03-27T01:52:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I was attempting to create a 404 handler in my express server, and was reading [the FAQ section](http://expressjs.com/en/starter/faq.html#how-do-i-handle-404-responses). It recommends...\r\n\r\n> add a middleware function at the very bottom of the stack (below all other functions)\r\n\r\ni.e.\r\n```javascript\r\napp.use(function (req, res, next) {\r\n  res.status(404).send(\"Sorry can't find that!\")\r\n})\r\n```\r\n\r\nHowever, this only works in the case of a linear server definition. \r\n\r\nI was dynamically adding `app.use` routes at runtime, and the 404 handler would proceed/supersede these new routes, meaning they would never be invoked.\r\n\r\nI found this [stackoverflow answer](https://stackoverflow.com/a/36606799/782034), which instructed me to use a `router` for my dynamic links (which did the trick).\r\n\r\nI was hoping we could add this recommendation back into the FAQ section. Something like (in **bold**):\r\n\r\n> ## How do I handle 404 responses?\r\n> In Express, 404 responses are not the result of an error, so the error-handler middleware will not capture them. This behavior is because a 404 response simply indicates the absence of additional work to do; in other words, Express has executed all middleware functions and routes, and found that none of them responded. All you need to do is add a middleware function at the very bottom of the stack (below all other functions) to handle a 404 response.  **Adding routes dynamically at runtime, should be performed on an instance of `express.Router()`, to avoid being superseded by the middleware function**:",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3605/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3605/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3604",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3604/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3604/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3604/events",
    "html_url": "https://github.com/expressjs/express/issues/3604",
    "id": 308325491,
    "node_id": "MDU6SXNzdWUzMDgzMjU0OTE=",
    "number": 3604,
    "title": "Support catching rejected promises in middleware functions",
    "user": {
      "login": "ORESoftware",
      "id": 11139560,
      "node_id": "MDQ6VXNlcjExMTM5NTYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/11139560?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ORESoftware",
      "html_url": "https://github.com/ORESoftware",
      "followers_url": "https://api.github.com/users/ORESoftware/followers",
      "following_url": "https://api.github.com/users/ORESoftware/following{/other_user}",
      "gists_url": "https://api.github.com/users/ORESoftware/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ORESoftware/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ORESoftware/subscriptions",
      "organizations_url": "https://api.github.com/users/ORESoftware/orgs",
      "repos_url": "https://api.github.com/users/ORESoftware/repos",
      "events_url": "https://api.github.com/users/ORESoftware/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ORESoftware/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2018-03-25T06:11:38Z",
    "updated_at": "2018-03-25T19:36:40Z",
    "closed_at": "2018-03-25T19:08:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I discovered this:\r\n\r\nhttps://medium.com/@the1mills/hacking-express-to-support-returned-promises-in-middleware-9487251ca124\r\n\r\nseems to work so far. I looked at the latest releases of Express 4 and 5, and doesn't seem to be supported.\r\n\r\nWould it be possible to handle returned promises in middleware functions - at least if the promise is rejected? \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3604/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3604/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3603",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3603/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3603/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3603/events",
    "html_url": "https://github.com/expressjs/express/issues/3603",
    "id": 308232036,
    "node_id": "MDU6SXNzdWUzMDgyMzIwMzY=",
    "number": 3603,
    "title": "How to chage first route function to the second one?",
    "user": {
      "login": "FarhanMS123",
      "id": 16165479,
      "node_id": "MDQ6VXNlcjE2MTY1NDc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16165479?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FarhanMS123",
      "html_url": "https://github.com/FarhanMS123",
      "followers_url": "https://api.github.com/users/FarhanMS123/followers",
      "following_url": "https://api.github.com/users/FarhanMS123/following{/other_user}",
      "gists_url": "https://api.github.com/users/FarhanMS123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FarhanMS123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FarhanMS123/subscriptions",
      "organizations_url": "https://api.github.com/users/FarhanMS123/orgs",
      "repos_url": "https://api.github.com/users/FarhanMS123/repos",
      "events_url": "https://api.github.com/users/FarhanMS123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FarhanMS123/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2018-03-24T05:51:03Z",
    "updated_at": "2018-03-28T17:28:23Z",
    "closed_at": "2018-03-25T04:49:31Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "### Edited\r\nWhen I set a routes. It set an object under app. It is `app.router` and `app.router.stack`\r\nHow can I use it?\r\n\r\n--------------------------------------------------------------------------------\r\n\r\n### Before\r\nI tried to code express in node.\r\n```\r\nH:/NodeJS/web > node\r\n> var express = require(\"express\");\r\n> var app = express();\r\n> var app_listen = app.listen(1056);\r\n> app.get(\"/*\", function(req, res, next){res.send(\"sample 1\");});\r\n```\r\nwhile i tried in browser it gave me \"sample 1\". Then I tried to code it again\r\n```\r\n> app.get(\"/*\", function(req, res, next){res.send(\"sample 2\");});\r\n```\r\nAnd, went I tried access it. It still gave me \"sample 1\". \r\nHow can I change the first function to the second one?\r\nThank you.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3603/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3603/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3602",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3602/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3602/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3602/events",
    "html_url": "https://github.com/expressjs/express/issues/3602",
    "id": 307432677,
    "node_id": "MDU6SXNzdWUzMDc0MzI2Nzc=",
    "number": 3602,
    "title": "The template engine callback does not work",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-03-21T21:57:06Z",
    "updated_at": "2018-04-18T17:00:13Z",
    "closed_at": "2018-03-21T23:09:57Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "My express version 4.15.5.\r\nI took the instruction from here: http://expressjs.com/en/4x/api.html#app.engine\r\nMy code:\r\n```js\r\napp.set('views', path.join(__dirname, 'views'));\r\napp.engine('swine', require('pug').__express);\r\n```\r\nWhen I opened the start page, there was an error:\r\n```\r\nError: No default engine was specified and no extension was provided.\r\n    at new View (/home/user/nodejs/server/node_modules/express/lib/view.js:61:11)\r\n    at Function.render (/home/user/nodejs/server/node_modules/express/lib/application.js:570:12)\r\n    at ServerResponse.render (/home/user/nodejs/server/node_modules/express/lib/response.js:971:7)\r\n    at /home/user/nodejs/server/app.js:128:6\r\n    at Layer.handle_error (/home/user/nodejs/server/node_modules/express/lib/router/layer.js:71:5)\r\n    at trim_prefix (/home/user/nodejs/server/node_modules/express/lib/router/index.js:315:13)\r\n    at /home/user/nodejs/server/node_modules/express/lib/router/index.js:284:7\r\n    at Function.process_params (/home/user/nodejs/server/node_modules/express/lib/router/index.js:335:12)\r\n    at next (/home/user/nodejs/server/node_modules/express/lib/router/index.js:275:10)\r\n    at Layer.handle_error (/home/user/nodejs/server/node_modules/express/lib/router/layer.js:67:12)\r\n```\r\nThe template file for views/index.swine is present! I ask help",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3602/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3602/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3601",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3601/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3601/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3601/events",
    "html_url": "https://github.com/expressjs/express/issues/3601",
    "id": 307379801,
    "node_id": "MDU6SXNzdWUzMDczNzk4MDE=",
    "number": 3601,
    "title": "Can not print mountpath from module",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-03-21T19:05:53Z",
    "updated_at": "2018-03-21T23:21:19Z",
    "closed_at": "2018-03-21T23:20:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The code in the file routes/rap.js:\r\n```js\r\nvar express = require('express');\r\nvar router = express.Router({\r\n\tcaseSensitive: false\r\n});\r\nvar path = require('path');\r\n\r\nrouter.use(express.static(path.join(__dirname, '../rap'), {\r\n\textensions: ['txt']\r\n}));\r\n\r\nrouter.get('/', (req, res) => {\r\n\tres.send('rap');\r\n});\r\n\r\nrouter.get('/path', (req, res) => {\r\n\tres.send(req.originalUrl);\r\n\tconsole.log(router.mountpath);\r\n\tconsole.log(this.mountpath);\r\n});\r\n\r\nmodule.exports = router;\r\n```\r\nBut the code in the app.js:\r\n\r\n```js\r\napp.use('/ra*p', require('./routes/rap'));\r\n```\r\n\r\nAnd I see in the console when I go along the path / rap / path such a picture:\r\n\r\n```\r\nundefined\r\nundefined\r\n```\r\n\r\nHow to make everything okay displayed?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3601/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3601/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3600",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3600/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3600/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3600/events",
    "html_url": "https://github.com/expressjs/express/pull/3600",
    "id": 307204389,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTc2NDQ0NTY1",
    "number": 3600,
    "title": "add `async await` syntax support to Router",
    "user": {
      "login": "logig",
      "id": 15779888,
      "node_id": "MDQ6VXNlcjE1Nzc5ODg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/15779888?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/logig",
      "html_url": "https://github.com/logig",
      "followers_url": "https://api.github.com/users/logig/followers",
      "following_url": "https://api.github.com/users/logig/following{/other_user}",
      "gists_url": "https://api.github.com/users/logig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/logig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/logig/subscriptions",
      "organizations_url": "https://api.github.com/users/logig/orgs",
      "repos_url": "https://api.github.com/users/logig/repos",
      "events_url": "https://api.github.com/users/logig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/logig/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-03-21T11:18:23Z",
    "updated_at": "2018-03-22T01:08:45Z",
    "closed_at": "2018-03-22T00:19:52Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3600",
      "html_url": "https://github.com/expressjs/express/pull/3600",
      "diff_url": "https://github.com/expressjs/express/pull/3600.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3600.patch",
      "merged_at": null
    },
    "body": "add `async await` error handle support to Router.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3600/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3600/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3599",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3599/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3599/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3599/events",
    "html_url": "https://github.com/expressjs/express/pull/3599",
    "id": 306797424,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTc2MTM4OTgw",
    "number": 3599,
    "title": "Document options as optional in Router constructor",
    "user": {
      "login": "LinusU",
      "id": 189580,
      "node_id": "MDQ6VXNlcjE4OTU4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/189580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LinusU",
      "html_url": "https://github.com/LinusU",
      "followers_url": "https://api.github.com/users/LinusU/followers",
      "following_url": "https://api.github.com/users/LinusU/following{/other_user}",
      "gists_url": "https://api.github.com/users/LinusU/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LinusU/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LinusU/subscriptions",
      "organizations_url": "https://api.github.com/users/LinusU/orgs",
      "repos_url": "https://api.github.com/users/LinusU/repos",
      "events_url": "https://api.github.com/users/LinusU/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LinusU/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2018-03-20T10:01:11Z",
    "updated_at": "2018-05-08T09:20:39Z",
    "closed_at": "2018-05-07T20:36:47Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3599",
      "html_url": "https://github.com/expressjs/express/pull/3599",
      "diff_url": "https://github.com/expressjs/express/pull/3599.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3599.patch",
      "merged_at": "2018-05-07T20:36:47Z"
    },
    "body": "Fixes #3598",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3599/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3599/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3598",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3598/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3598/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3598/events",
    "html_url": "https://github.com/expressjs/express/issues/3598",
    "id": 306769700,
    "node_id": "MDU6SXNzdWUzMDY3Njk3MDA=",
    "number": 3598,
    "title": "Discrepancy in JSDoc and implementation in express.Router(), parameter required by documentation is actually optional",
    "user": {
      "login": "pubmikeb",
      "id": 17231333,
      "node_id": "MDQ6VXNlcjE3MjMxMzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/17231333?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pubmikeb",
      "html_url": "https://github.com/pubmikeb",
      "followers_url": "https://api.github.com/users/pubmikeb/followers",
      "following_url": "https://api.github.com/users/pubmikeb/following{/other_user}",
      "gists_url": "https://api.github.com/users/pubmikeb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pubmikeb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pubmikeb/subscriptions",
      "organizations_url": "https://api.github.com/users/pubmikeb/orgs",
      "repos_url": "https://api.github.com/users/pubmikeb/repos",
      "events_url": "https://api.github.com/users/pubmikeb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pubmikeb/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-03-20T08:31:16Z",
    "updated_at": "2018-05-07T20:36:47Z",
    "closed_at": "2018-05-07T20:36:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "At the very beginning of my router (Express.js) there are the following lines of code:\r\n\r\n```\r\n\"use strict\";\r\n\r\nlet express = require('express');\r\nlet router = express.Router();\r\n```\r\n\r\nIntelliJ IDEA returns warning Invalid number of arguments regarding `let router = express.Router();`.\r\nI checked the official [documentation of Express.js](https://expressjs.com/en/guide/routing.html) (see express.Router), and there is the same line of code.\r\n\r\nThe IntelliJ IDEA response:\r\n\r\n> JSDoc defines special syntax for documenting which parameters are optional and IDEA respects this syntax.\r\n> \r\n> The function in express.js is documented here as **_having a non-optional parameter_**, while the **_implementation makes it optional_**.\r\n\r\nPlease, have a look if there is a need to synchronize the documentation and implementation.\r\n\r\nDetails:\r\n[https://youtrack.jetbrains.com/issue/WEB-31658](https://youtrack.jetbrains.com/issue/WEB-31658)",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3598/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3598/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3597",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3597/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3597/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3597/events",
    "html_url": "https://github.com/expressjs/express/issues/3597",
    "id": 306717187,
    "node_id": "MDU6SXNzdWUzMDY3MTcxODc=",
    "number": 3597,
    "title": "Serving Static Files in Express Failing with Certain Path Syntax",
    "user": {
      "login": "teddy-owen",
      "id": 21692984,
      "node_id": "MDQ6VXNlcjIxNjkyOTg0",
      "avatar_url": "https://avatars.githubusercontent.com/u/21692984?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/teddy-owen",
      "html_url": "https://github.com/teddy-owen",
      "followers_url": "https://api.github.com/users/teddy-owen/followers",
      "following_url": "https://api.github.com/users/teddy-owen/following{/other_user}",
      "gists_url": "https://api.github.com/users/teddy-owen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/teddy-owen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/teddy-owen/subscriptions",
      "organizations_url": "https://api.github.com/users/teddy-owen/orgs",
      "repos_url": "https://api.github.com/users/teddy-owen/repos",
      "events_url": "https://api.github.com/users/teddy-owen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/teddy-owen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-03-20T03:33:48Z",
    "updated_at": "2018-08-11T15:00:40Z",
    "closed_at": "2018-08-11T15:00:40Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "![question](https://user-images.githubusercontent.com/21692984/37634621-af1d159a-2bb4-11e8-9515-16f61a4815ce.PNG)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3597/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3597/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3596",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3596/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3596/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3596/events",
    "html_url": "https://github.com/expressjs/express/issues/3596",
    "id": 306712513,
    "node_id": "MDU6SXNzdWUzMDY3MTI1MTM=",
    "number": 3596,
    "title": "Response.send() throwing TypeError",
    "user": {
      "login": "trouve-antoine",
      "id": 7144597,
      "node_id": "MDQ6VXNlcjcxNDQ1OTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7144597?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/trouve-antoine",
      "html_url": "https://github.com/trouve-antoine",
      "followers_url": "https://api.github.com/users/trouve-antoine/followers",
      "following_url": "https://api.github.com/users/trouve-antoine/following{/other_user}",
      "gists_url": "https://api.github.com/users/trouve-antoine/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/trouve-antoine/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/trouve-antoine/subscriptions",
      "organizations_url": "https://api.github.com/users/trouve-antoine/orgs",
      "repos_url": "https://api.github.com/users/trouve-antoine/repos",
      "events_url": "https://api.github.com/users/trouve-antoine/events{/privacy}",
      "received_events_url": "https://api.github.com/users/trouve-antoine/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2018-03-20T03:06:29Z",
    "updated_at": "2018-04-14T16:16:17Z",
    "closed_at": "2018-04-14T16:16:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "(also on stack overflow: https://stackoverflow.com/questions/49374802/express-response-send-throwing-typeerror)\r\n\r\nI have this simple express code:\r\n\r\n    const api = Router()\r\n\r\n    api.post('/some-point', async (req, res, next) => {\r\n      const someStuffToSend = await Promise.resolve(\"hello\");\r\n      res.json({ someStuffToSend });\r\n    })\r\n\r\nIt works well on my dev environment, but on the prod I get the error bellow:\r\n\r\n    TypeError: argument entity must be string, Buffer, or fs.Stats\r\n        at etag (/[...]/node_modules/etag/index.js:83:11)\r\n        at generateETag ([...]/node_modules/express/lib/utils.js:280:12)\r\n        at ServerResponse.send ([...]/node_modules/express/lib/response.js:200:17)\r\n        at ServerResponse.json ([...]/node_modules/express/lib/response.js:267:15)\r\n        at api.post (/the/code/above)\r\n\r\nI checked at `node_modules/etag/index.js:83:11` and saw\r\n\r\n    if (!isStats && typeof entity !== 'string' && !Buffer.isBuffer(entity)) {\r\n      throw new TypeError('argument entity must be string, Buffer, or fs.Stats')\r\n    }\r\n\r\nBefore this code I added a printf to check the type of entity:\r\n\r\n    console.log(\"Entity contains\", entity, \"is of type\", typeof entity, \"with constructor\", entity.constructor, \"and is it a buffer?\", Buffer.isBuffer(entity))\r\n\r\nWhich got me the output bellow:\r\n\r\n    Entity contains <Buffer 7b 22 70 72 65 64 69 63 74 69 6f 6e 5f 69 64 22 3a 22 63 4b 57 41 64 41 46 43 77 6e 55 43 22 2c 22 69 6e 69 74 69 61 6c 5f 70 72 65 64 69 63 74 69 6f ... > is of type object with constructor function Buffer(arg, encodingOrOffset, length) {\r\n      if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\r\n        return new Buffer(arg, encodingOrOffset, length)\r\n      }\r\n\r\n      // Common case.\r\n      if (typeof arg === 'number') {\r\n        if (typeof encodingOrOffset === 'string') {\r\n          throw new Error(\r\n            'If encoding is specified then the first argument must be a string'\r\n          )\r\n        }\r\n        return allocUnsafe(this, arg)\r\n      }\r\n      return from(this, arg, encodingOrOffset, length)\r\n    } and is it a buffer? false\r\n\r\nSo it looks like the entity is a buffer, but not recognized as such. If I comment the test out, it crashed at a different location\r\n\r\n    TypeError [ERR_INVALID_ARG_TYPE]: The first argument must be one of type string or Buffer\r\n        at ServerResponse.end (_http_outgoing.js:747:13)\r\n        at ServerResponse.send ([...]/node_modules/express/lib/response.js:221:10)\r\n        at ServerResponse.json ([...]/node_modules/express/lib/response.js:267:15)\r\n        at api.post (/the/code/above)\r\n\r\nIf you check at `/node_modules/express/lib/response.js:221:10` you see\r\n\r\n    this.end(chunk, encoding);\r\n\r\nwhere encoding is from a few lines above (l. 189, I checked with a printf)\r\n\r\n    chunk = Buffer.from(chunk, encoding)\r\n\r\nI could hack the lib out to make that work, but I suspect some broken `node_modules` folder. However the error persists even after a `rm package-lock.json; rm -rf node_modules; npm i`.\r\n\r\nAny clue on how to solve this would be very appreciated?\r\n\r\nBelow are my version numbers:\r\n\r\n- node 9.8.0 (also tried with 8.4.0), installed locally with nvm\r\n- npm 5.6.0\r\n- express 4.16.3\r\n- ts-node 5.0.1\r\n- typescript 2.7.2\r\n\r\n**Note**\r\n\r\nI tried removed the `node_modules` folder then `npm i` the packages one by one:\r\n\r\n    npm i aws-sdk body-parser bunyan check-types deepcopy duck-type express fast-csv glob handlebars http-auth md5 moment moment-timezone multer node-stream object-path randomstring\r\n\r\nStill get the same error. ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3596/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3596/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3595",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3595/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3595/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3595/events",
    "html_url": "https://github.com/expressjs/express/issues/3595",
    "id": 306456520,
    "node_id": "MDU6SXNzdWUzMDY0NTY1MjA=",
    "number": 3595,
    "title": "Express 4.16.3",
    "user": {
      "login": "donovan-graham",
      "id": 1104135,
      "node_id": "MDQ6VXNlcjExMDQxMzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1104135?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/donovan-graham",
      "html_url": "https://github.com/donovan-graham",
      "followers_url": "https://api.github.com/users/donovan-graham/followers",
      "following_url": "https://api.github.com/users/donovan-graham/following{/other_user}",
      "gists_url": "https://api.github.com/users/donovan-graham/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/donovan-graham/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/donovan-graham/subscriptions",
      "organizations_url": "https://api.github.com/users/donovan-graham/orgs",
      "repos_url": "https://api.github.com/users/donovan-graham/repos",
      "events_url": "https://api.github.com/users/donovan-graham/events{/privacy}",
      "received_events_url": "https://api.github.com/users/donovan-graham/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-03-19T13:12:38Z",
    "updated_at": "2018-03-19T13:25:33Z",
    "closed_at": "2018-03-19T13:24:45Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "** removed **",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3595/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3595/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3594",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3594/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3594/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3594/events",
    "html_url": "https://github.com/expressjs/express/issues/3594",
    "id": 306301764,
    "node_id": "MDU6SXNzdWUzMDYzMDE3NjQ=",
    "number": 3594,
    "title": "Server start and stop",
    "user": {
      "login": "bertolo1988",
      "id": 4508759,
      "node_id": "MDQ6VXNlcjQ1MDg3NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4508759?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bertolo1988",
      "html_url": "https://github.com/bertolo1988",
      "followers_url": "https://api.github.com/users/bertolo1988/followers",
      "following_url": "https://api.github.com/users/bertolo1988/following{/other_user}",
      "gists_url": "https://api.github.com/users/bertolo1988/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bertolo1988/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bertolo1988/subscriptions",
      "organizations_url": "https://api.github.com/users/bertolo1988/orgs",
      "repos_url": "https://api.github.com/users/bertolo1988/repos",
      "events_url": "https://api.github.com/users/bertolo1988/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bertolo1988/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-03-19T00:35:30Z",
    "updated_at": "2018-03-19T01:11:57Z",
    "closed_at": "2018-03-19T01:04:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Consider this 2 functions that start and stop an http server using express.\r\n\r\n```javascript\r\nasync function start(options) {\r\n    app = express()\r\n    return new Promise((resolve, reject) => {\r\n        httpServer = app.listen(options.port, err => {\r\n            if (err) {\r\n                return reject(err)\r\n            }\r\n            else {\r\n                return resolve(httpServer)\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\nasync function stop() {\r\n    return new Promise((resolve, reject) => {\r\n            httpServer.close(err => {\r\n                if (err) {\r\n                    reject(err)\r\n                }\r\n                else {\r\n                    resolve()\r\n                }\r\n        })\r\n    })\r\n}\r\n\r\n```\r\n\r\nIf i do `server.start().then(server.stop()) ` httpServer won't exist by the time i try to `httpServer.close`.\r\n\r\nI am using a `setTimeout` around `httpServer.close` it to make it work. \r\n\r\nCould this be fixed?\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3594/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3594/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3593",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3593/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3593/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3593/events",
    "html_url": "https://github.com/expressjs/express/issues/3593",
    "id": 306280420,
    "node_id": "MDU6SXNzdWUzMDYyODA0MjA=",
    "number": 3593,
    "title": "Possible to modify and add properties/methods to `app`?",
    "user": {
      "login": "kevinkassimo",
      "id": 15007517,
      "node_id": "MDQ6VXNlcjE1MDA3NTE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/15007517?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinkassimo",
      "html_url": "https://github.com/kevinkassimo",
      "followers_url": "https://api.github.com/users/kevinkassimo/followers",
      "following_url": "https://api.github.com/users/kevinkassimo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinkassimo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinkassimo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinkassimo/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinkassimo/orgs",
      "repos_url": "https://api.github.com/users/kevinkassimo/repos",
      "events_url": "https://api.github.com/users/kevinkassimo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinkassimo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-03-18T20:44:52Z",
    "updated_at": "2018-03-18T22:36:02Z",
    "closed_at": "2018-03-18T22:36:02Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi, I am seeking for a way such that I would modify `app` created from `express()` such that I could later use `app.myCustomizedMethod()`. From my brief inspection of the source code, this seems not achievable with middleware and `app.use()`. Is there a way, or possibly request for a feature, that I could do this, possibly similar to handlers accessing `req.app` or `res.app`, but for middleware instead? (`req.app` and `res.app` won't work since I could only access and modify when requests comes in)",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3593/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3593/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3592",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3592/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3592/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3592/events",
    "html_url": "https://github.com/expressjs/express/issues/3592",
    "id": 306135081,
    "node_id": "MDU6SXNzdWUzMDYxMzUwODE=",
    "number": 3592,
    "title": "Error : http. ServerRespone and http.IncomingMessage often undefined or not object",
    "user": {
      "login": "El-Mahbub",
      "id": 20553210,
      "node_id": "MDQ6VXNlcjIwNTUzMjEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20553210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/El-Mahbub",
      "html_url": "https://github.com/El-Mahbub",
      "followers_url": "https://api.github.com/users/El-Mahbub/followers",
      "following_url": "https://api.github.com/users/El-Mahbub/following{/other_user}",
      "gists_url": "https://api.github.com/users/El-Mahbub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/El-Mahbub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/El-Mahbub/subscriptions",
      "organizations_url": "https://api.github.com/users/El-Mahbub/orgs",
      "repos_url": "https://api.github.com/users/El-Mahbub/repos",
      "events_url": "https://api.github.com/users/El-Mahbub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/El-Mahbub/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-03-17T07:13:35Z",
    "updated_at": "2018-05-22T17:35:13Z",
    "closed_at": "2018-04-14T16:16:38Z",
    "author_association": "NONE",
    "active_lock_reason": "resolved",
    "body": "When i importing express often showing an error undefined or not object on http. ServerRespone and http.IncomingMessage.\r\n\r\n![server-response](https://user-images.githubusercontent.com/20553210/37552731-429723ac-29ed-11e8-8382-b831188d382b.png)\r\n![er](https://user-images.githubusercontent.com/20553210/37552734-47d8974c-29ed-11e8-9744-9f1da5c00820.png)\r\n\r\nHow i can fix this ? I am using react js :-)",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3592/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3592/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3591",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3591/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3591/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3591/events",
    "html_url": "https://github.com/expressjs/express/issues/3591",
    "id": 306118869,
    "node_id": "MDU6SXNzdWUzMDYxMTg4Njk=",
    "number": 3591,
    "title": "Custom param matching example not working",
    "user": {
      "login": "patrickhulce",
      "id": 2301202,
      "node_id": "MDQ6VXNlcjIzMDEyMDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2301202?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/patrickhulce",
      "html_url": "https://github.com/patrickhulce",
      "followers_url": "https://api.github.com/users/patrickhulce/followers",
      "following_url": "https://api.github.com/users/patrickhulce/following{/other_user}",
      "gists_url": "https://api.github.com/users/patrickhulce/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/patrickhulce/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/patrickhulce/subscriptions",
      "organizations_url": "https://api.github.com/users/patrickhulce/orgs",
      "repos_url": "https://api.github.com/users/patrickhulce/repos",
      "events_url": "https://api.github.com/users/patrickhulce/events{/privacy}",
      "received_events_url": "https://api.github.com/users/patrickhulce/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      },
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2018-03-17T01:52:30Z",
    "updated_at": "2018-03-17T02:26:32Z",
    "closed_at": "2018-03-17T02:03:50Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm trying to get the custom param matching example in the docs working, but it doesn't seem to be doing anything, is it no longer supported? I'm looking at the snippet below from [router.param section](https://expressjs.com/en/4x/api.html#router.param)\r\n\r\n```js\r\nrouter.param('id', function (candidate) {\r\n  return !isNaN(parseFloat(candidate)) && isFinite(candidate);\r\n});\r\n```\r\n\r\nInstead it just hangs forever, leading me to think it's still treating it like middleware because next() obviously wasn't called.\r\n\r\nMy goal is to get a route to be triggered only if the param matches a custom validation function, a simplified version of what I'm trying to accomplish is something like\r\n\r\n```js\r\nrouter.get('/:primeNumber', ...)\r\nrouter.get('/15', ...)\r\nrouter.get('/4', ...)\r\n...\r\n```\r\n\r\nthese lines seem like they don't do anything with the return value of the provided function, but I could be reading it wrong?\r\nhttps://github.com/expressjs/express/blob/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/lib/router/index.js#L403-L407\r\n\r\nAny tips would be much appreciated thanks!\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3591/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3591/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3590",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3590/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3590/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3590/events",
    "html_url": "https://github.com/expressjs/express/pull/3590",
    "id": 305949963,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTc1NTQ5NjEx",
    "number": 3590,
    "title": "Fixed issue: TypeError: View is not a constructor",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578711,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTE=",
        "url": "https://api.github.com/repos/expressjs/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-03-16T14:31:11Z",
    "updated_at": "2018-03-18T21:27:30Z",
    "closed_at": "2018-03-18T21:27:22Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3590",
      "html_url": "https://github.com/expressjs/express/pull/3590",
      "diff_url": "https://github.com/expressjs/express/pull/3590.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3590.patch",
      "merged_at": null
    },
    "body": "![viewisnotaconstructor](https://user-images.githubusercontent.com/34168440/37526202-c2a6462a-2954-11e8-9ed9-905115eb13fa.PNG)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3590/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3590/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3589",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3589/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3589/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3589/events",
    "html_url": "https://github.com/expressjs/express/issues/3589",
    "id": 305058354,
    "node_id": "MDU6SXNzdWUzMDUwNTgzNTQ=",
    "number": 3589,
    "title": ".wasm MIME type issue?",
    "user": {
      "login": "cwervo",
      "id": 5826638,
      "node_id": "MDQ6VXNlcjU4MjY2Mzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5826638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cwervo",
      "html_url": "https://github.com/cwervo",
      "followers_url": "https://api.github.com/users/cwervo/followers",
      "following_url": "https://api.github.com/users/cwervo/following{/other_user}",
      "gists_url": "https://api.github.com/users/cwervo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cwervo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cwervo/subscriptions",
      "organizations_url": "https://api.github.com/users/cwervo/orgs",
      "repos_url": "https://api.github.com/users/cwervo/repos",
      "events_url": "https://api.github.com/users/cwervo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cwervo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-03-14T08:09:03Z",
    "updated_at": "2018-03-14T12:45:19Z",
    "closed_at": "2018-03-14T12:45:19Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I know that in version 4.16.3 you updated mime-types to version 2.1.18 (via an update to `accepts`), \r\nbut it seems like Express still can't serve`.wasm` files.\r\n\r\nIf I do:\r\n```\r\nconst express = require('express')\r\nconst app = express()\r\napp.use(express.static('docs'))\r\napp.listen(8000, () => console.log('Serving at http://localhost:8000!'))\r\n```\r\n\r\nand have a `.wasm` file in the `docs` folder I'm serving I get an error:\r\n\r\n```\r\nIncorrect response MIME type. Expected 'application/wasm'.\r\n```\r\n\r\nAdding `express.static.mime.types['wasm'] = 'application/wasm'` fixes the issue for now, just wondering when this will be fixed in the project by default?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3589/reactions",
      "total_count": 8,
      "+1": 8,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3589/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3588",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3588/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3588/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3588/events",
    "html_url": "https://github.com/expressjs/express/issues/3588",
    "id": 304966398,
    "node_id": "MDU6SXNzdWUzMDQ5NjYzOTg=",
    "number": 3588,
    "title": "Phantom console.error",
    "user": {
      "login": "jwerre",
      "id": 747587,
      "node_id": "MDQ6VXNlcjc0NzU4Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/747587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jwerre",
      "html_url": "https://github.com/jwerre",
      "followers_url": "https://api.github.com/users/jwerre/followers",
      "following_url": "https://api.github.com/users/jwerre/following{/other_user}",
      "gists_url": "https://api.github.com/users/jwerre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jwerre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jwerre/subscriptions",
      "organizations_url": "https://api.github.com/users/jwerre/orgs",
      "repos_url": "https://api.github.com/users/jwerre/repos",
      "events_url": "https://api.github.com/users/jwerre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jwerre/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-03-13T23:04:04Z",
    "updated_at": "2018-03-13T23:34:02Z",
    "closed_at": "2018-03-13T23:33:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm getting a strange output in my error logs, just a random \"200\" on it's own line without a stack trace or anything. I tracked it down to:\r\n\r\n    EventEmitter.logerror (lib/application.js:606:43)\r\n\r\nAny ideas what could be causing this?\r\n\r\nThanks",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3588/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3588/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3587",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3587/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3587/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3587/events",
    "html_url": "https://github.com/expressjs/express/pull/3587",
    "id": 304642922,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTc0NTY4ODg5",
    "number": 3587,
    "title": "res.format(): call default using `obj` as the context",
    "user": {
      "login": "shesek",
      "id": 877904,
      "node_id": "MDQ6VXNlcjg3NzkwNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/877904?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shesek",
      "html_url": "https://github.com/shesek",
      "followers_url": "https://api.github.com/users/shesek/followers",
      "following_url": "https://api.github.com/users/shesek/following{/other_user}",
      "gists_url": "https://api.github.com/users/shesek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shesek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shesek/subscriptions",
      "organizations_url": "https://api.github.com/users/shesek/orgs",
      "repos_url": "https://api.github.com/users/shesek/repos",
      "events_url": "https://api.github.com/users/shesek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shesek/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/18",
      "html_url": "https://github.com/expressjs/express/milestone/18",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/18/labels",
      "id": 5234171,
      "node_id": "MDk6TWlsZXN0b25lNTIzNDE3MQ==",
      "number": 18,
      "title": "4.18",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 15,
      "state": "closed",
      "created_at": "2020-03-24T23:16:48Z",
      "updated_at": "2022-04-24T22:50:58Z",
      "due_on": null,
      "closed_at": "2022-04-24T22:50:58Z"
    },
    "comments": 4,
    "created_at": "2018-03-13T06:30:18Z",
    "updated_at": "2022-03-26T05:55:54Z",
    "closed_at": "2022-03-26T05:55:54Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3587",
      "html_url": "https://github.com/expressjs/express/pull/3587",
      "diff_url": "https://github.com/expressjs/express/pull/3587.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3587.patch",
      "merged_at": "2022-03-26T05:55:54Z"
    },
    "body": "... so that it may refer to the other handlers via `this`. This is useful for cases where you want to delegate the `default` behavior to one of the other registered handlers, e.g.:\r\n\r\n```js\r\napp.get('/:item', (req, res) => res.format({\r\n  json() { res.send(req.item) }\r\n, text() { res.send(req.item.toString()) }\r\n, xml()  { res.send(req.item.toXML()) }\r\n, default() { this.json() }\r\n}))\r\n```\r\n\r\nWithout this, I have to pre-declare the default `json` handler separately, making it inconsistent with how the non-default handlers are declared and making the overall code more complex:\r\n\r\n```js\r\napp.get('/:item', (req, res) => {\r\n  function sendJSON() { res.send(req.item) }\r\n  res.format({\r\n    json: sendJSON\r\n  , text() { res.send(req.item.toString()) }\r\n  , xml()  { res.send(req.item.toXML()) }\r\n  , default: sendJSON\r\n  })\r\n})\r\n```\r\n\r\nThe regular (non-`default`) handlers are already called with the `obj` as their context, so this would match their behavior too.",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3587/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3587/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3586",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3586/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3586/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3586/events",
    "html_url": "https://github.com/expressjs/express/issues/3586",
    "id": 303288657,
    "node_id": "MDU6SXNzdWUzMDMyODg2NTc=",
    "number": 3586,
    "title": "Error: Coordinates out of range",
    "user": {
      "login": "jvaldezch",
      "id": 605927,
      "node_id": "MDQ6VXNlcjYwNTkyNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/605927?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jvaldezch",
      "html_url": "https://github.com/jvaldezch",
      "followers_url": "https://api.github.com/users/jvaldezch/followers",
      "following_url": "https://api.github.com/users/jvaldezch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jvaldezch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jvaldezch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jvaldezch/subscriptions",
      "organizations_url": "https://api.github.com/users/jvaldezch/orgs",
      "repos_url": "https://api.github.com/users/jvaldezch/repos",
      "events_url": "https://api.github.com/users/jvaldezch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jvaldezch/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-03-07T22:46:03Z",
    "updated_at": "2018-03-08T01:56:20Z",
    "closed_at": "2018-03-08T01:16:34Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm getting an error when trying to setup a dynamic map\r\n\r\n```\r\napp.get('/tileserver/:layer/:z/:x/:y/tile.png', function (req, res, next) {\r\n    const layer = req.params.layer;\r\n    const z = req.params.z;\r\n    const x = req.params.x;\r\n    const y = req.params.y;\r\n\r\n    const stra = tilestrata();\r\n    stra.layer(layer)\r\n        .route('tile@2x.png')\r\n            .use(disk.cache({dir: '../cache/basemap'}))\r\n            .use(mapnik({\r\n                pathname: 'maps/example.xml',\r\n                tileSize: 512,\r\n                layer: 'all',\r\n                scale: 2\r\n            }))\r\n        .route('tile.png')\r\n            .use(disk.cache({dir: '.../cache/basemap'}))\r\n            .use(dependency(layer, 'tile@2x.png'))\r\n            .use(sharp(function(image, sharp) {\r\n                return image.resize(256);\r\n            }));\r\n    stra.listen();    \r\n    stra.getTile(layer, 'tile.png', z, x, y, function(err, img){\r\n        //stra.close();\r\n        if (err) {\r\n            console.log(err);\r\n            res.statusCode = 401;\r\n            res.send('None shall pass');\r\n        } else {\r\n            res.writeHead(200, {\r\n                'Content-Type': 'image/png',\r\n                'Content-Length': img.length\r\n            });\r\n            res.end(img); \r\n        }\r\n    });\r\n});\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3586/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3586/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3585",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3585/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3585/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3585/events",
    "html_url": "https://github.com/expressjs/express/issues/3585",
    "id": 303207502,
    "node_id": "MDU6SXNzdWUzMDMyMDc1MDI=",
    "number": 3585,
    "title": "Express in electron app, cannot find module debug error",
    "user": {
      "login": "hakankaraduman",
      "id": 8139393,
      "node_id": "MDQ6VXNlcjgxMzkzOTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8139393?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hakankaraduman",
      "html_url": "https://github.com/hakankaraduman",
      "followers_url": "https://api.github.com/users/hakankaraduman/followers",
      "following_url": "https://api.github.com/users/hakankaraduman/following{/other_user}",
      "gists_url": "https://api.github.com/users/hakankaraduman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hakankaraduman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hakankaraduman/subscriptions",
      "organizations_url": "https://api.github.com/users/hakankaraduman/orgs",
      "repos_url": "https://api.github.com/users/hakankaraduman/repos",
      "events_url": "https://api.github.com/users/hakankaraduman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hakankaraduman/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 553390819,
        "node_id": "MDU6TGFiZWw1NTMzOTA4MTk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/awaiting%20more%20info",
        "name": "awaiting more info",
        "color": "cc317c",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-03-07T18:21:01Z",
    "updated_at": "2018-04-18T16:41:05Z",
    "closed_at": "2018-04-14T16:17:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Error log is below\r\n```\r\nA JavaScript error occurred in the main process\r\nUncaught Exception:\r\nError: Cannot find module 'debug'\r\n    at Module._resolveFilename (module.js:470:15)\r\n    at Function.Module._resolveFilename (/home/hakan/Desktop/HardwarePlayer-linux-armv7l/resources/electron.asar/common/reset-search-paths.js:35:12)\r\n    at Function.Module._load (module.js:418:25)\r\n    at Module.require (module.js:498:17)\r\n    at require (internal/module.js:20:19)\r\n    at Object.<anonymous> (/home/hakan/Desktop/HardwarePlayer-linux-armv7l/resources/app/node_modules/finalhandler/index.js:14:13)\r\n    at Object.<anonymous> (/home/hakan/Desktop/HardwarePlayer-linux-armv7l/resources/app/node_modules/finalhandler/index.js:316:3)\r\n    at Module._compile (module.js:571:32)\r\n    at Object.Module._extensions..js (module.js:580:10)\r\n    at Module.load (module.js:488:32)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3585/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3585/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3584",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3584/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3584/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3584/events",
    "html_url": "https://github.com/expressjs/express/issues/3584",
    "id": 303057489,
    "node_id": "MDU6SXNzdWUzMDMwNTc0ODk=",
    "number": 3584,
    "title": "Express 'cannot GET' will cause an http headers sent error in app.use",
    "user": {
      "login": "RonanQuigley",
      "id": 33596237,
      "node_id": "MDQ6VXNlcjMzNTk2MjM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/33596237?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RonanQuigley",
      "html_url": "https://github.com/RonanQuigley",
      "followers_url": "https://api.github.com/users/RonanQuigley/followers",
      "following_url": "https://api.github.com/users/RonanQuigley/following{/other_user}",
      "gists_url": "https://api.github.com/users/RonanQuigley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RonanQuigley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RonanQuigley/subscriptions",
      "organizations_url": "https://api.github.com/users/RonanQuigley/orgs",
      "repos_url": "https://api.github.com/users/RonanQuigley/repos",
      "events_url": "https://api.github.com/users/RonanQuigley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RonanQuigley/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 19,
    "created_at": "2018-03-07T11:13:04Z",
    "updated_at": "2018-03-15T12:48:36Z",
    "closed_at": "2018-03-15T12:48:36Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "So this might not be an issue with express' internal workings, as I did post this up on stackoverflow initially thinking that this issue was purely arising from how I am approaching using express, but after experimenting with multiple setups I'm not so sure what's what. Currently I have a setup for hot reloading as follows:\r\n\r\n```\r\n// server.js\r\nconst app = express();\r\n\r\napp.use(function (req, res, next) {\r\n    require('./server/index')(req, res, next);\r\n    require('./server/foo')(req, res, next); // another url page\r\n});\r\n```\r\nEach require file inside app.use follows the following example template:\r\n\r\n```\r\nconst router = express.Router();\r\n\r\nrouter.get('whatever endpoint' you want, (req, res) => {\r\n  console.log('whatever endpoint you want');\r\n  res.send('whatever message you want');\r\n});\r\n\r\nmodule.exports = router;\r\n```\r\n\r\nMy understanding is that app.use with just a callback will apply to every possible route. And if a user navigates to a route that doesn't exist, say '/bar' for example, express' cannot GET/ should be displayed at whatever the incorrect endpoint was.\r\n\r\nWhat actually happens however, is that express crashes with the ERR_HTTP_HEADERS_SENT error. So of course that's bad, so to get around that, I would just apply my own catch-all inside the above app.use at the end of the function as follows:\r\n\r\n```\r\n//server.js\r\napp.use(function (req, res, next) {\r\n    require('./server/index')(req, res, next);\r\n    require('./server/foo')(req, res, next); \r\n    require('./server/catch-all')(req, res, next);\r\n});\r\n\r\n//catch-all.js\r\nrouter.get('*', (req, res) => {    \r\n  console.log('catch all');\r\n  if(!res.headersSent){ // this is necessary to prevent the ERR_HTTP_HEADERS_SENT error\r\n    res.redirect('/');\r\n  }\r\n})\r\n```\r\n\r\nThis fixes all of the issues, but I've noticed that the catch-all console.log is always called twice; once for when the rest of the require statements have been called and it has not found a match, hence using the catch-all endpoint. The second is for when the redirect to the main page happens.\r\n\r\nIf my understanding is correct, since app.use() is being called for every single request, this causes the double call effect when invoked by the redirect handler? If so, if we omit the catch-all, and go back to what was originally done at the top of this post, why does express crash with the ERR_HTTP_HEADERS_SENT error? Is it again because of the app.use being called for every route, including routes that aren't defined and being handled by cannot GET? \r\n\r\nIf this is the case, and this is the crux of what I'm trying to get at, shouldn't express internally recognise that the cannot get / error handler has already been called? It seems like it's attempting to send two responses that both say cannot GET whatever page the error is on, hence the ERR_HTTP_HEADERS_SENT error.\r\n\r\nThe alternative is splitting the above into two separate app.use calls, that _only_ handle specific routes:\r\n\r\n```\r\napp.use('/', require('./server/index'));\r\napp.use('/foo', require('./server/foo'));\r\n```\r\n\r\nHowever, if you have numerous routes, having loads of app.use calls littering your code becomes repetitive, and your docs state both options as being valid. Is it just a case of it needing to be done this way by design or am I perhaps missing another possible option? \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3584/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3584/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3583",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3583/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3583/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3583/events",
    "html_url": "https://github.com/expressjs/express/issues/3583",
    "id": 302762253,
    "node_id": "MDU6SXNzdWUzMDI3NjIyNTM=",
    "number": 3583,
    "title": "cookie-signature dependency has timing vulnerability",
    "user": {
      "login": "drewjenkins",
      "id": 5521743,
      "node_id": "MDQ6VXNlcjU1MjE3NDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5521743?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drewjenkins",
      "html_url": "https://github.com/drewjenkins",
      "followers_url": "https://api.github.com/users/drewjenkins/followers",
      "following_url": "https://api.github.com/users/drewjenkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/drewjenkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drewjenkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drewjenkins/subscriptions",
      "organizations_url": "https://api.github.com/users/drewjenkins/orgs",
      "repos_url": "https://api.github.com/users/drewjenkins/repos",
      "events_url": "https://api.github.com/users/drewjenkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drewjenkins/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2018-03-06T16:07:09Z",
    "updated_at": "2018-03-15T02:44:09Z",
    "closed_at": "2018-03-06T16:32:45Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "See https://snyk.io/vuln/npm:cookie-signature:20180111 for details.\r\n\r\nTo resolve, upgrade the cookie-parser dependency to 1.1.0 or above",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3583/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3583/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3582",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3582/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3582/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3582/events",
    "html_url": "https://github.com/expressjs/express/pull/3582",
    "id": 302046603,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTcyNjk2MTA5",
    "number": 3582,
    "title": "Better error handling for sendFile",
    "user": {
      "login": "thevoidf",
      "id": 16736836,
      "node_id": "MDQ6VXNlcjE2NzM2ODM2",
      "avatar_url": "https://avatars.githubusercontent.com/u/16736836?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thevoidf",
      "html_url": "https://github.com/thevoidf",
      "followers_url": "https://api.github.com/users/thevoidf/followers",
      "following_url": "https://api.github.com/users/thevoidf/following{/other_user}",
      "gists_url": "https://api.github.com/users/thevoidf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thevoidf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thevoidf/subscriptions",
      "organizations_url": "https://api.github.com/users/thevoidf/orgs",
      "repos_url": "https://api.github.com/users/thevoidf/repos",
      "events_url": "https://api.github.com/users/thevoidf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thevoidf/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/expressjs/express/milestones/17",
      "html_url": "https://github.com/expressjs/express/milestone/17",
      "labels_url": "https://api.github.com/repos/expressjs/express/milestones/17/labels",
      "id": 3066819,
      "node_id": "MDk6TWlsZXN0b25lMzA2NjgxOQ==",
      "number": 17,
      "title": "4.17",
      "description": "",
      "creator": {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 15,
      "state": "closed",
      "created_at": "2018-01-26T16:25:16Z",
      "updated_at": "2019-05-17T01:58:27Z",
      "due_on": null,
      "closed_at": "2019-05-17T01:58:27Z"
    },
    "comments": 4,
    "created_at": "2018-03-04T00:58:54Z",
    "updated_at": "2018-10-27T17:26:17Z",
    "closed_at": "2018-10-27T17:26:17Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3582",
      "html_url": "https://github.com/expressjs/express/pull/3582",
      "diff_url": "https://github.com/expressjs/express/pull/3582.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3582.patch",
      "merged_at": "2018-10-27T17:26:17Z"
    },
    "body": "so you don't get confusing errors like: function substring not found or something",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3582/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3582/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3581",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3581/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3581/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3581/events",
    "html_url": "https://github.com/expressjs/express/issues/3581",
    "id": 301642064,
    "node_id": "MDU6SXNzdWUzMDE2NDIwNjQ=",
    "number": 3581,
    "title": "Connecting to a database in app.js",
    "user": {
      "login": "shipagency",
      "id": 36870314,
      "node_id": "MDQ6VXNlcjM2ODcwMzE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/36870314?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shipagency",
      "html_url": "https://github.com/shipagency",
      "followers_url": "https://api.github.com/users/shipagency/followers",
      "following_url": "https://api.github.com/users/shipagency/following{/other_user}",
      "gists_url": "https://api.github.com/users/shipagency/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shipagency/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shipagency/subscriptions",
      "organizations_url": "https://api.github.com/users/shipagency/orgs",
      "repos_url": "https://api.github.com/users/shipagency/repos",
      "events_url": "https://api.github.com/users/shipagency/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shipagency/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-03-02T03:32:40Z",
    "updated_at": "2018-03-02T03:40:33Z",
    "closed_at": "2018-03-02T03:34:36Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am writing a new app, and one of the requirements is that I use the \"straight\" express boilerplate that include `bin/www` and an `app.js`.\r\n\r\nI normally just merge the two of them for convenience.  Now that I can't, I am wondering...\r\n\r\nHow can I connect to a DB (which is an async operation) from `app.js`?\r\n\r\nWhat follows is the full app.js. This does NOT work, because as soon as this line happens:\r\n\r\n    var connection = await mysql.createConnectionP({\r\n\r\nThe anonymous function returns an unresolved promise. So the assigned \"app\" is incomplete, since the code to set it effectively hasn't yet run.\r\n\r\nWhat is the best practice to connect asynchronously to a database keeping the app.js/www duo?\r\n\r\nI *could* connect to the database in `www`, but then I need to re-export it to `app.js` and...\r\n\r\n    var express = require('express')\r\n    var path = require('path')\r\n    var favicon = require('serve-favicon')\r\n    var logger = require('morgan')\r\n    var cookieParser = require('cookie-parser')\r\n    var bodyParser = require('body-parser')\r\n    var promisify = require('util').promisify\r\n\r\n    var index = require('./routes/index')\r\n    var users = require('./routes/users')\r\n\r\n    var app = express()\r\n\r\n    var prpl = require('prpl-server')\r\n    var jsonreststores = require('jsonreststores')\r\n    var mysql = require('mysql')\r\n\r\n    mysql.createConnectionP = promisify(mysql.createConnection)\r\n    console.log(\"1\")\r\n\r\n    ;(async () => {\r\n      var connection = await mysql.createConnectionP({\r\n        host: 'localhost',\r\n        user: 'root',\r\n        password: 'ppp',\r\n        database: 'sasit'\r\n      })\r\n\r\n      connection.connectP = promisify(connection.connect)\r\n      connection.queryP = promisify(connection.query)\r\n      connection.endP = promisify(connection.end)\r\n\r\n      await connection.connectP()\r\n\r\n      var res = await connection.queryP('SELECT 1 + 1 AS solution')\r\n      console.log('The solution is: ', res[0].solution)\r\n\r\n      await connection.end()\r\n\r\n      // view engine setup\r\n      app.set('views', path.join(__dirname, 'views'))\r\n      app.set('view engine', 'jade')\r\n\r\n      // uncomment after placing your favicon in /public\r\n      // app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\r\n      app.use(logger('dev'))\r\n      app.use(bodyParser.json())\r\n      app.use(bodyParser.urlencoded({ extended: false }))\r\n      app.use(cookieParser())\r\n      // app.use(express.static(path.join(__dirname, 'public')));\r\n\r\n      // app.use('/', index);\r\n      // app.use('/users', users);\r\n\r\n      app.get('/*', prpl.makeHandler('./public/build', {\r\n        builds: [\r\n          {name: 'es6-unbundled', browserCapabilities: ['es2015', 'push']},\r\n          {name: 'es6-bundled', browserCapabilities: ['es2015']},\r\n          {name: 'es5-bundled'}\r\n        ]\r\n      }))\r\n\r\n      // catch 404 and forward to error handler\r\n      app.use(function (req, res, next) {\r\n        var err = new Error('Not Found')\r\n        err.status = 404\r\n        next(err)\r\n      })\r\n\r\n      // error handler\r\n      app.use(function (err, req, res, next) {\r\n        // set locals, only providing error in development\r\n        res.locals.message = err.message\r\n        res.locals.error = req.app.get('env') === 'development' ? err : {}\r\n\r\n        // render the error page\r\n        res.status(err.status || 500)\r\n        res.render('error')\r\n      })\r\n    })()\r\n    module.exports = app\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3581/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3581/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3580",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3580/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3580/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3580/events",
    "html_url": "https://github.com/expressjs/express/issues/3580",
    "id": 301641461,
    "node_id": "MDU6SXNzdWUzMDE2NDE0NjE=",
    "number": 3580,
    "title": "Does the route of Express support alias?",
    "user": {
      "login": "daolou",
      "id": 22312092,
      "node_id": "MDQ6VXNlcjIyMzEyMDky",
      "avatar_url": "https://avatars.githubusercontent.com/u/22312092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/daolou",
      "html_url": "https://github.com/daolou",
      "followers_url": "https://api.github.com/users/daolou/followers",
      "following_url": "https://api.github.com/users/daolou/following{/other_user}",
      "gists_url": "https://api.github.com/users/daolou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/daolou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daolou/subscriptions",
      "organizations_url": "https://api.github.com/users/daolou/orgs",
      "repos_url": "https://api.github.com/users/daolou/repos",
      "events_url": "https://api.github.com/users/daolou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/daolou/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2018-03-02T03:28:39Z",
    "updated_at": "2018-03-02T11:35:56Z",
    "closed_at": "2018-03-02T11:35:56Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "# Does the route of Express support alias?\r\n### If it doesn't support alisas.\r\n### Will it be updated to solve it,in the future?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3580/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3580/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3579",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3579/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3579/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3579/events",
    "html_url": "https://github.com/expressjs/express/pull/3579",
    "id": 301613768,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTcyMzk0Nzcy",
    "number": 3579,
    "title": "Update downloads-url to point to graph of downloads",
    "user": {
      "login": "cheapsteak",
      "id": 743976,
      "node_id": "MDQ6VXNlcjc0Mzk3Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/743976?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cheapsteak",
      "html_url": "https://github.com/cheapsteak",
      "followers_url": "https://api.github.com/users/cheapsteak/followers",
      "following_url": "https://api.github.com/users/cheapsteak/following{/other_user}",
      "gists_url": "https://api.github.com/users/cheapsteak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cheapsteak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cheapsteak/subscriptions",
      "organizations_url": "https://api.github.com/users/cheapsteak/orgs",
      "repos_url": "https://api.github.com/users/cheapsteak/repos",
      "events_url": "https://api.github.com/users/cheapsteak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cheapsteak/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442612,
        "node_id": "MDU6TGFiZWw1NTQ0MjYxMg==",
        "url": "https://api.github.com/repos/expressjs/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9",
        "default": false,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-03-02T00:46:23Z",
    "updated_at": "2020-03-25T22:27:34Z",
    "closed_at": "2020-03-25T20:24:24Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3579",
      "html_url": "https://github.com/expressjs/express/pull/3579",
      "diff_url": "https://github.com/expressjs/express/pull/3579.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3579.patch",
      "merged_at": "2020-03-25T20:24:33Z"
    },
    "body": "The \"npm\" badge and \"downloads\" badge currently both point to npmjs.org\r\n\r\nI was wondering if you might find it amenable to having it point to its download chart instead?\r\n\r\nEither just [express by itself](https://npmcharts.com/compare/express?minimal=true) or alongside [other server frameworks](https://npmcharts.com/compare/express,koa,hapi?minimal=true)\r\n\r\nWasn't sure whether it'd be better to make an issue to ask first, decided to error on the side of a PR to make it potentially less work if it's desirable to add :)",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3579/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3579/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3578",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3578/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3578/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3578/events",
    "html_url": "https://github.com/expressjs/express/issues/3578",
    "id": 300995480,
    "node_id": "MDU6SXNzdWUzMDA5OTU0ODA=",
    "number": 3578,
    "title": "testing",
    "user": {
      "login": "macqbat",
      "id": 338931,
      "node_id": "MDQ6VXNlcjMzODkzMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/338931?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/macqbat",
      "html_url": "https://github.com/macqbat",
      "followers_url": "https://api.github.com/users/macqbat/followers",
      "following_url": "https://api.github.com/users/macqbat/following{/other_user}",
      "gists_url": "https://api.github.com/users/macqbat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/macqbat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/macqbat/subscriptions",
      "organizations_url": "https://api.github.com/users/macqbat/orgs",
      "repos_url": "https://api.github.com/users/macqbat/repos",
      "events_url": "https://api.github.com/users/macqbat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/macqbat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-02-28T11:52:09Z",
    "updated_at": "2018-02-28T15:40:20Z",
    "closed_at": "2018-02-28T15:40:20Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "** removed by @dougwilson **",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3578/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3578/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3577",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3577/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3577/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3577/events",
    "html_url": "https://github.com/expressjs/express/issues/3577",
    "id": 300520571,
    "node_id": "MDU6SXNzdWUzMDA1MjA1NzE=",
    "number": 3577,
    "title": "Issue with ExpressJS and timeout",
    "user": {
      "login": "icecomagency",
      "id": 1122304,
      "node_id": "MDQ6VXNlcjExMjIzMDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1122304?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/icecomagency",
      "html_url": "https://github.com/icecomagency",
      "followers_url": "https://api.github.com/users/icecomagency/followers",
      "following_url": "https://api.github.com/users/icecomagency/following{/other_user}",
      "gists_url": "https://api.github.com/users/icecomagency/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/icecomagency/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/icecomagency/subscriptions",
      "organizations_url": "https://api.github.com/users/icecomagency/orgs",
      "repos_url": "https://api.github.com/users/icecomagency/repos",
      "events_url": "https://api.github.com/users/icecomagency/events{/privacy}",
      "received_events_url": "https://api.github.com/users/icecomagency/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-02-27T07:29:57Z",
    "updated_at": "2018-03-01T01:43:00Z",
    "closed_at": "2018-03-01T01:43:00Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I get an issue with ExpressJS. I get an error message when uploading large files...\r\n\r\n**Error message :**\r\n\r\n> Bad Gateway\r\n> The proxy server received an invalid response from an upstream server.\r\n> Apache/2.4.7 (Ubuntu) Server at xxxxxxxxx Port 80\r\n\r\nEverything works when the connexion of the user is above 3G...\r\n\r\nIs there any configuration to do on my Apache or about ExpressJS options ?",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3577/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3577/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3576",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3576/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3576/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3576/events",
    "html_url": "https://github.com/expressjs/express/issues/3576",
    "id": 300360313,
    "node_id": "MDU6SXNzdWUzMDAzNjAzMTM=",
    "number": 3576,
    "title": "Cannot res.send / res.json a javascript set",
    "user": {
      "login": "erictraub",
      "id": 16905822,
      "node_id": "MDQ6VXNlcjE2OTA1ODIy",
      "avatar_url": "https://avatars.githubusercontent.com/u/16905822?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/erictraub",
      "html_url": "https://github.com/erictraub",
      "followers_url": "https://api.github.com/users/erictraub/followers",
      "following_url": "https://api.github.com/users/erictraub/following{/other_user}",
      "gists_url": "https://api.github.com/users/erictraub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/erictraub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/erictraub/subscriptions",
      "organizations_url": "https://api.github.com/users/erictraub/orgs",
      "repos_url": "https://api.github.com/users/erictraub/repos",
      "events_url": "https://api.github.com/users/erictraub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/erictraub/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-02-26T19:13:07Z",
    "updated_at": "2018-02-26T19:16:30Z",
    "closed_at": "2018-02-26T19:16:20Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am trying to res.send or res.json a javascript set.  The set should have items in it but is empty when it gets to the client.  Here is my code:\r\n\r\n```\r\napp.get('/test-endpoint', function(req, res) {\r\n    let set1 = new Set();\r\n    set1.add('SOME ITEM');\r\n    console.log('Set 1:', set1);  // logs out set1 correctly in the terminal (Set 1 Set: { 'SOME ITEM' })\r\n\r\n    res.json(set1);  // when this gets to the client side it is an empty set ({})\r\n});\r\n```\r\nIs this a problem with res.json / res.send?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3576/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3576/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3574",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3574/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3574/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3574/events",
    "html_url": "https://github.com/expressjs/express/pull/3574",
    "id": 299968046,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTcxMTk0Nzcx",
    "number": 3574,
    "title": "making route and router configurable to automatically send 405 responses (fix for #2414)",
    "user": {
      "login": "gajananpp",
      "id": 16310205,
      "node_id": "MDQ6VXNlcjE2MzEwMjA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/16310205?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gajananpp",
      "html_url": "https://github.com/gajananpp",
      "followers_url": "https://api.github.com/users/gajananpp/followers",
      "following_url": "https://api.github.com/users/gajananpp/following{/other_user}",
      "gists_url": "https://api.github.com/users/gajananpp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gajananpp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gajananpp/subscriptions",
      "organizations_url": "https://api.github.com/users/gajananpp/orgs",
      "repos_url": "https://api.github.com/users/gajananpp/repos",
      "events_url": "https://api.github.com/users/gajananpp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gajananpp/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      },
      {
        "id": 55442290,
        "node_id": "MDU6TGFiZWw1NTQ0MjI5MA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/duplicate",
        "name": "duplicate",
        "color": "cccccc",
        "default": true,
        "description": null
      },
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      },
      {
        "id": 326593574,
        "node_id": "MDU6TGFiZWwzMjY1OTM1NzQ=",
        "url": "https://api.github.com/repos/expressjs/express/labels/module:router",
        "name": "module:router",
        "color": "bfe5bf",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "node_id": "MDQ6VXNlcjY3NTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dougwilson",
        "id": 67512,
        "node_id": "MDQ6VXNlcjY3NTEy",
        "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dougwilson",
        "html_url": "https://github.com/dougwilson",
        "followers_url": "https://api.github.com/users/dougwilson/followers",
        "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
        "organizations_url": "https://api.github.com/users/dougwilson/orgs",
        "repos_url": "https://api.github.com/users/dougwilson/repos",
        "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dougwilson/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-02-24T19:58:13Z",
    "updated_at": "2018-02-24T23:37:46Z",
    "closed_at": "2018-02-24T23:30:39Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3574",
      "html_url": "https://github.com/expressjs/express/pull/3574",
      "diff_url": "https://github.com/expressjs/express/pull/3574.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3574.patch",
      "merged_at": null
    },
    "body": "Hi,\r\n\r\nThis PR resolves issue #2414 by making route and router configurable as suggested by @dougwilson in this issue.\r\n\r\nMaking POST request to following route will respond with 405 Method not allowed\r\n```javascript\r\n// route-specific\r\napp.route('/', { automatic405: true })\r\n.get(handler)\r\n```\r\nAlso all the routes on router can be configured and particular routes can made to override router's configuration\r\n```javascript\r\n// router-wide default\r\nvar router = express.Router({ automatic405: true })\r\n\r\n// can be overridden\r\nrouter.route(path, { automatic405: false })\r\n.get(handler)\r\n``` \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3574/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3574/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3573",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3573/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3573/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3573/events",
    "html_url": "https://github.com/expressjs/express/issues/3573",
    "id": 299918469,
    "node_id": "MDU6SXNzdWUyOTk5MTg0Njk=",
    "number": 3573,
    "title": "why semicolon is after 2 lines?",
    "user": {
      "login": "jingsong-liu",
      "id": 10648096,
      "node_id": "MDQ6VXNlcjEwNjQ4MDk2",
      "avatar_url": "https://avatars.githubusercontent.com/u/10648096?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jingsong-liu",
      "html_url": "https://github.com/jingsong-liu",
      "followers_url": "https://api.github.com/users/jingsong-liu/followers",
      "following_url": "https://api.github.com/users/jingsong-liu/following{/other_user}",
      "gists_url": "https://api.github.com/users/jingsong-liu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jingsong-liu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jingsong-liu/subscriptions",
      "organizations_url": "https://api.github.com/users/jingsong-liu/orgs",
      "repos_url": "https://api.github.com/users/jingsong-liu/repos",
      "events_url": "https://api.github.com/users/jingsong-liu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jingsong-liu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-02-24T06:55:20Z",
    "updated_at": "2018-02-24T14:33:42Z",
    "closed_at": "2018-02-24T14:33:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "https://github.com/expressjs/express/blob/f3c5f7ee29e9b935e95e628e002ee9eaebda176a/lib/express.js#L87",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3573/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3573/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3572",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3572/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3572/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3572/events",
    "html_url": "https://github.com/expressjs/express/issues/3572",
    "id": 298858925,
    "node_id": "MDU6SXNzdWUyOTg4NTg5MjU=",
    "number": 3572,
    "title": "how to make the many sub-folder in the folders as static at once ",
    "user": {
      "login": "pradeepnidiganti",
      "id": 16553048,
      "node_id": "MDQ6VXNlcjE2NTUzMDQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/16553048?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pradeepnidiganti",
      "html_url": "https://github.com/pradeepnidiganti",
      "followers_url": "https://api.github.com/users/pradeepnidiganti/followers",
      "following_url": "https://api.github.com/users/pradeepnidiganti/following{/other_user}",
      "gists_url": "https://api.github.com/users/pradeepnidiganti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pradeepnidiganti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pradeepnidiganti/subscriptions",
      "organizations_url": "https://api.github.com/users/pradeepnidiganti/orgs",
      "repos_url": "https://api.github.com/users/pradeepnidiganti/repos",
      "events_url": "https://api.github.com/users/pradeepnidiganti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pradeepnidiganti/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2018-02-21T06:46:27Z",
    "updated_at": "2018-10-08T23:18:57Z",
    "closed_at": "2018-03-01T19:38:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "for the particular folder we are giving as like this in express server\r\n**.use(express.static('images'))**\r\nthen how to create the multiple folders as static at once in the express server",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3572/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3572/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3571",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3571/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3571/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3571/events",
    "html_url": "https://github.com/expressjs/express/issues/3571",
    "id": 298086503,
    "node_id": "MDU6SXNzdWUyOTgwODY1MDM=",
    "number": 3571,
    "title": "Add `constants` to avoid hard-coded `app.get()` params",
    "user": {
      "login": "pd4d10",
      "id": 9524411,
      "node_id": "MDQ6VXNlcjk1MjQ0MTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9524411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pd4d10",
      "html_url": "https://github.com/pd4d10",
      "followers_url": "https://api.github.com/users/pd4d10/followers",
      "following_url": "https://api.github.com/users/pd4d10/following{/other_user}",
      "gists_url": "https://api.github.com/users/pd4d10/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pd4d10/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pd4d10/subscriptions",
      "organizations_url": "https://api.github.com/users/pd4d10/orgs",
      "repos_url": "https://api.github.com/users/pd4d10/repos",
      "events_url": "https://api.github.com/users/pd4d10/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pd4d10/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 163600,
        "node_id": "MDU6TGFiZWwxNjM2MDA=",
        "url": "https://api.github.com/repos/expressjs/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2018-02-18T13:54:38Z",
    "updated_at": "2018-02-21T17:00:44Z",
    "closed_at": "2018-02-21T17:00:43Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Params of `app.get()` is hard-coded currently, such as\r\n\r\n```js\r\napp.get('trust proxy')\r\n```\r\n\r\nThe `trust proxy` is hard-coded, so if we make a spell mistake, it can't be detected by static type checking.\r\n\r\nHow about adding a `constants` map so we could change it to something like\r\n\r\n```js\r\nimport { constants } from 'express'\r\napp.get(constants.TRUST_PROXY)\r\n```\r\n\r\nWe could make `constants.TRUST_PROXY === 'trust proxy'` for backward compatibility.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3571/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3571/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3570",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3570/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3570/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3570/events",
    "html_url": "https://github.com/expressjs/express/issues/3570",
    "id": 297677793,
    "node_id": "MDU6SXNzdWUyOTc2Nzc3OTM=",
    "number": 3570,
    "title": "Middleware to Create Models",
    "user": {
      "login": "coreyperkins",
      "id": 429696,
      "node_id": "MDQ6VXNlcjQyOTY5Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/429696?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/coreyperkins",
      "html_url": "https://github.com/coreyperkins",
      "followers_url": "https://api.github.com/users/coreyperkins/followers",
      "following_url": "https://api.github.com/users/coreyperkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/coreyperkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/coreyperkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/coreyperkins/subscriptions",
      "organizations_url": "https://api.github.com/users/coreyperkins/orgs",
      "repos_url": "https://api.github.com/users/coreyperkins/repos",
      "events_url": "https://api.github.com/users/coreyperkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/coreyperkins/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-02-16T04:18:52Z",
    "updated_at": "2018-02-16T16:42:35Z",
    "closed_at": "2018-02-16T16:42:35Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am wondering what the normal way is for dynamically creating Models (defined by their own module) from the req.body object. My models would have a certain set of properties and only need to have those properties be assigned from the req.body. Any junk passed up would need to be ignored.\r\n\r\nI know I could do this manually but I'd rather have an automated tool or middleware that could magically do the conversion. Is this too big of a pipe dream?\r\n\r\nThanks!",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3570/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3570/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3569",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3569/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3569/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3569/events",
    "html_url": "https://github.com/expressjs/express/pull/3569",
    "id": 297676798,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTY5NTQ0NjE3",
    "number": 3569,
    "title": "Auto file extension lookup with multiple view engines",
    "user": {
      "login": "boycce",
      "id": 2629988,
      "node_id": "MDQ6VXNlcjI2Mjk5ODg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2629988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/boycce",
      "html_url": "https://github.com/boycce",
      "followers_url": "https://api.github.com/users/boycce/followers",
      "following_url": "https://api.github.com/users/boycce/following{/other_user}",
      "gists_url": "https://api.github.com/users/boycce/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/boycce/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/boycce/subscriptions",
      "organizations_url": "https://api.github.com/users/boycce/orgs",
      "repos_url": "https://api.github.com/users/boycce/repos",
      "events_url": "https://api.github.com/users/boycce/events{/privacy}",
      "received_events_url": "https://api.github.com/users/boycce/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2018-02-16T04:09:16Z",
    "updated_at": "2022-02-28T18:03:07Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3569",
      "html_url": "https://github.com/expressjs/express/pull/3569",
      "diff_url": "https://github.com/expressjs/express/pull/3569.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3569.patch",
      "merged_at": null
    },
    "body": "When there is no file extension defined, express will now try to use any extension that is registered with an engine. The default extension set by `app.set('view engine')` is still observed first.\r\n\r\nRelated issue: #3485",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3569/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3569/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/3568",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/3568/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/3568/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/3568/events",
    "html_url": "https://github.com/expressjs/express/pull/3568",
    "id": 297676285,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTY5NTQ0MjU2",
    "number": 3568,
    "title": "Added app.extend()",
    "user": {
      "login": "boycce",
      "id": 2629988,
      "node_id": "MDQ6VXNlcjI2Mjk5ODg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2629988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/boycce",
      "html_url": "https://github.com/boycce",
      "followers_url": "https://api.github.com/users/boycce/followers",
      "following_url": "https://api.github.com/users/boycce/following{/other_user}",
      "gists_url": "https://api.github.com/users/boycce/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/boycce/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/boycce/subscriptions",
      "organizations_url": "https://api.github.com/users/boycce/orgs",
      "repos_url": "https://api.github.com/users/boycce/repos",
      "events_url": "https://api.github.com/users/boycce/events{/privacy}",
      "received_events_url": "https://api.github.com/users/boycce/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578713,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTM=",
        "url": "https://api.github.com/repos/expressjs/express/labels/pr",
        "name": "pr",
        "color": "006b75",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 18,
    "created_at": "2018-02-16T04:04:16Z",
    "updated_at": "2020-04-15T06:59:49Z",
    "closed_at": "2020-04-15T06:59:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/3568",
      "html_url": "https://github.com/expressjs/express/pull/3568",
      "diff_url": "https://github.com/expressjs/express/pull/3568.diff",
      "patch_url": "https://github.com/expressjs/express/pull/3568.patch",
      "merged_at": null
    },
    "body": "Added `app.extend()`, which provides an easy way to update certain properties of a setting.\r\nExample:\r\n```\r\napp.set('foo', { 'bar' : 1 })\r\napp.extend('foo', { 'baz' : 1 });\r\napp.get('foo');\r\n// => { \"bar\" : 1, \"baz\" : 1 }\r\n```\r\n\r\nRelated issue #3499 ",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/3568/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/3568/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  }
]