[
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1447",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1447/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1447/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1447/events",
    "html_url": "https://github.com/expressjs/express/issues/1447",
    "id": 9304489,
    "node_id": "MDU6SXNzdWU5MzA0NDg5",
    "number": 1447,
    "title": "utils#pathRegexp fails with inline regexes that have asterisks",
    "user": {
      "login": "samholmes",
      "id": 517469,
      "node_id": "MDQ6VXNlcjUxNzQ2OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/517469?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/samholmes",
      "html_url": "https://github.com/samholmes",
      "followers_url": "https://api.github.com/users/samholmes/followers",
      "following_url": "https://api.github.com/users/samholmes/following{/other_user}",
      "gists_url": "https://api.github.com/users/samholmes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/samholmes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/samholmes/subscriptions",
      "organizations_url": "https://api.github.com/users/samholmes/orgs",
      "repos_url": "https://api.github.com/users/samholmes/repos",
      "events_url": "https://api.github.com/users/samholmes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/samholmes/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2012-12-15T06:44:49Z",
    "updated_at": "2013-01-19T00:17:02Z",
    "closed_at": "2012-12-15T23:25:05Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "If you were to feed `\"/hello/(world*)\"` into utils.js's pathRegexp function, you'd get out `/^\\/hello(?:\\/world(.*))\\/?$/i` which is not the expected `\"/^\\/hello(?:\\/world*)\\/?$/i\"` result.\n\npathRegexps must be more effective at extracting the inline regex portions of a path first, then converting the rest of the path to regex before injecting the inline regexes back into the final output.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1447/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1447/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1446",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1446/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1446/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1446/events",
    "html_url": "https://github.com/expressjs/express/pull/1446",
    "id": 9274383,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzM2Njg4MQ==",
    "number": 1446,
    "title": "ensuring that all callbacks passed to Router#route are functions and are defined",
    "user": {
      "login": "thlorenz",
      "id": 192891,
      "node_id": "MDQ6VXNlcjE5Mjg5MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/192891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thlorenz",
      "html_url": "https://github.com/thlorenz",
      "followers_url": "https://api.github.com/users/thlorenz/followers",
      "following_url": "https://api.github.com/users/thlorenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/thlorenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thlorenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thlorenz/subscriptions",
      "organizations_url": "https://api.github.com/users/thlorenz/orgs",
      "repos_url": "https://api.github.com/users/thlorenz/repos",
      "events_url": "https://api.github.com/users/thlorenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thlorenz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 13,
    "created_at": "2012-12-14T02:26:59Z",
    "updated_at": "2014-06-12T06:10:26Z",
    "closed_at": "2012-12-15T23:00:26Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1446",
      "html_url": "https://github.com/expressjs/express/pull/1446",
      "diff_url": "https://github.com/expressjs/express/pull/1446.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1446.patch",
      "merged_at": null
    },
    "body": "Currently express does not check passed callbacks for problems, which can result in bugs that are very hard to track down e.g.,:\n\n``` js\nvar validate = require('./validate');\n\n// Oops - misspelled hasCorrectParams\napp.get('/foo', validate.hasCorectParams, function (req, res) {\n  // ...\n});\n```\n\nAt this point this fails silently. Since `next` doesn't get called, the last handler never gets called either.\n\nI adapted `Router#route` to throw an error if any of the passed callbacks are `null`, `undefined` or not a `function` in order to give immediate feedback for these kind of bugs.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1446/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1446/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1445",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1445/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1445/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1445/events",
    "html_url": "https://github.com/expressjs/express/issues/1445",
    "id": 9237313,
    "node_id": "MDU6SXNzdWU5MjM3MzEz",
    "number": 1445,
    "title": "firing app.param on an optional param?",
    "user": {
      "login": "braco",
      "id": 2449172,
      "node_id": "MDQ6VXNlcjI0NDkxNzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2449172?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/braco",
      "html_url": "https://github.com/braco",
      "followers_url": "https://api.github.com/users/braco/followers",
      "following_url": "https://api.github.com/users/braco/following{/other_user}",
      "gists_url": "https://api.github.com/users/braco/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/braco/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/braco/subscriptions",
      "organizations_url": "https://api.github.com/users/braco/orgs",
      "repos_url": "https://api.github.com/users/braco/repos",
      "events_url": "https://api.github.com/users/braco/events{/privacy}",
      "received_events_url": "https://api.github.com/users/braco/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2012-12-13T00:04:04Z",
    "updated_at": "2012-12-19T21:24:06Z",
    "closed_at": "2012-12-19T21:24:06Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm trying to validate a param that may or may not exist. I want to see if the URL slug matches the ideal slug in the database.\n\ncoffeescript & zappajs follows:\n\n```\n@app.param \"categoryOID\", (...) -> req.category = database record\n@app.param \"slug\", (..., value) -> redirect(.../req.category.slug) unless value is req.category.slug\n@get '/category/:categoryOID/:slug?': -> ...\n```\n\nThis would ideally match both:\n\n```\n/category/id/\n/category/id/wrong-slug\n```\n\nand forward to /category/id/correct-slug\n\nHowever, if a user goes to /category/id/ without a slug, app.param(\"slug\") will never fire. It looks like this is  [Intentional (#682)](https://github.com/visionmedia/express/issues/682). \n\nslug is used across different collections,\n\n```\n/product/id/slug\n/category/id/slug\n/company/id/slug\netc\n```\n\nso it would be nice to define it within the parameter itself.\n\nIs there a better way to handle this?\n\n```\n@get '/category/:categoryOID/:slug=false?': ->\n@get '/category/:categoryOID/:slug?!': ->\n@app.param \"slug\", { always: true }, (....), -> ...\n```\n\nbut why not just let the user handle it?\n\n```\n@app.param \"slug\", (...., value), -> return next() unless value\n\n```\n\nI can think of quite a few reasons why you'd want to leave a param as optional and run something on the (lack of) param regardless.\n\nedit: for anyone searching, I solved this for now by doing:\n\n```\n@app.param \"categoryOID\" ... # get category record\n@app.param \"productOID\" ... # get product record\n@app.param [\"categoryOID\", \"productOID\"] ...\n    # slug logic here\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1445/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1445/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1444",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1444/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1444/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1444/events",
    "html_url": "https://github.com/expressjs/express/issues/1444",
    "id": 9228796,
    "node_id": "MDU6SXNzdWU5MjI4Nzk2",
    "number": 1444,
    "title": "express doesn't correctly handle routes of strings that look like regex",
    "user": {
      "login": "myok12",
      "id": 601042,
      "node_id": "MDQ6VXNlcjYwMTA0Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/601042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/myok12",
      "html_url": "https://github.com/myok12",
      "followers_url": "https://api.github.com/users/myok12/followers",
      "following_url": "https://api.github.com/users/myok12/following{/other_user}",
      "gists_url": "https://api.github.com/users/myok12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/myok12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/myok12/subscriptions",
      "organizations_url": "https://api.github.com/users/myok12/orgs",
      "repos_url": "https://api.github.com/users/myok12/repos",
      "events_url": "https://api.github.com/users/myok12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/myok12/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2012-12-12T19:27:53Z",
    "updated_at": "2012-12-16T02:04:59Z",
    "closed_at": "2012-12-15T22:58:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "If a string route contains a regex-like text, say `/hello\\dworld`, I believe it should be handled as an exact path; requests to `/hello\\dworld` should be handled by the route, while `hello5world` should not.\nIt appears that express doesn't escape the **\\** and registers the route verbose, thus flipping the expectations. Of course, this should have been the case if I were to use a RegExp object to register the route. The same probably happens on any **\\X**.\nIf the reason for this is that **\\** is invalid in a URL, it should be handled the same as any other non-url-conforming char would (probably still registering and not throwing an error), but should not be represented differently as a regex just because that's how it's implemented under the hood.\n\nA full example:\n\n```\nvar express = require(\"express\");\nvar app = express();\napp.get(\"/without_regex_syntax\", function (req, res, next) {\n    res.send(200, \"OK\");\n});\napp.get(\"/with_regex_number_syntax\\\\d\", function (req, res, next) {\n    res.send(200, \"OK\");\n});\napp.get(/.*/, function (req, res, next) {\n    res.send(404);\n});\napp.listen(3000);\n\nvar http = require(\"http\");\nvar assert = require(\"assert\");\n\n//no regex - should work\nhttp.get({\n     host:\"localhost\",\n     port:3000,\n     path:\"/without_regex_syntax\"\n    }, function (res) {\n        if (res.statusCode !== 200) {\n            console.error(\"Got\" + res.statusCode + \". Should have matched the url since it was registered with a simple string\");\n        }\n    }\n);\n\n//with a url that regex - should work\nhttp.get({\n     host:\"localhost\",\n     port:3000,\n     path:\"/with_regex_number_syntax\\\\d\"\n    }, function (res) {\n        if (res.statusCode !== 200) {\n            console.error(\"Got \" + res.statusCode +\n                \".Bug - should have matched the url since it was using the same string literal as was registered\"\n            );\n        }\n    }\n);\n\n//with a url that accidently matches the regex - should not work\nhttp.get({\n     host:\"localhost\",\n     port:3000,\n     path:\"/with_regex_number_syntax3\"\n    }, function (res) {\n        if (res.statusCode !== 404) {\n            console.error(\"Got \" + res.statusCode +\n                \".Bug - should have not matched the url since it was registered\" +\n                \" with a regex literal that actually matched the regex expression\"\n            );\n        }\n    }\n);\n```\n\nSpits out: \n\n```\nGot 404.Bug - should have matched the url since it was using the same string literal as was registered\nGot 200.Bug - should have not matched the url since it was registered with a regex literal that actually matched the regex expression\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1444/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1444/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1443",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1443/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1443/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1443/events",
    "html_url": "https://github.com/expressjs/express/pull/1443",
    "id": 9222847,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzM0MDc2Nw==",
    "number": 1443,
    "title": "Configuration Option for HTTPS Support",
    "user": {
      "login": "Elzair",
      "id": 2352818,
      "node_id": "MDQ6VXNlcjIzNTI4MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2352818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Elzair",
      "html_url": "https://github.com/Elzair",
      "followers_url": "https://api.github.com/users/Elzair/followers",
      "following_url": "https://api.github.com/users/Elzair/following{/other_user}",
      "gists_url": "https://api.github.com/users/Elzair/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Elzair/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Elzair/subscriptions",
      "organizations_url": "https://api.github.com/users/Elzair/orgs",
      "repos_url": "https://api.github.com/users/Elzair/repos",
      "events_url": "https://api.github.com/users/Elzair/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Elzair/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2012-12-12T16:57:44Z",
    "updated_at": "2014-08-02T01:33:55Z",
    "closed_at": "2013-01-09T20:51:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1443",
      "html_url": "https://github.com/expressjs/express/pull/1443",
      "diff_url": "https://github.com/expressjs/express/pull/1443.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1443.patch",
      "merged_at": null
    },
    "body": "I added configuration options '-S, --ssl' to bin/express to easily enable HTTPS support.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1443/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1443/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1442",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1442/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1442/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1442/events",
    "html_url": "https://github.com/expressjs/express/pull/1442",
    "id": 9204850,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzMzMTY0OA==",
    "number": 1442,
    "title": "Added Live Run Button to ReadMe",
    "user": {
      "login": "ykumar6",
      "id": 1085792,
      "node_id": "MDQ6VXNlcjEwODU3OTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1085792?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ykumar6",
      "html_url": "https://github.com/ykumar6",
      "followers_url": "https://api.github.com/users/ykumar6/followers",
      "following_url": "https://api.github.com/users/ykumar6/following{/other_user}",
      "gists_url": "https://api.github.com/users/ykumar6/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ykumar6/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ykumar6/subscriptions",
      "organizations_url": "https://api.github.com/users/ykumar6/orgs",
      "repos_url": "https://api.github.com/users/ykumar6/repos",
      "events_url": "https://api.github.com/users/ykumar6/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ykumar6/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2012-12-12T03:24:28Z",
    "updated_at": "2014-06-17T20:59:46Z",
    "closed_at": "2013-04-08T21:03:27Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1442",
      "html_url": "https://github.com/expressjs/express/pull/1442",
      "diff_url": "https://github.com/expressjs/express/pull/1442.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1442.patch",
      "merged_at": null
    },
    "body": "Run Button added to ReadMe file so developers can play with express in the browser\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1442/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1442/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1441",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1441/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1441/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1441/events",
    "html_url": "https://github.com/expressjs/express/issues/1441",
    "id": 9199053,
    "node_id": "MDU6SXNzdWU5MTk5MDUz",
    "number": 1441,
    "title": "@3.0.4 broken?",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2012-12-11T22:38:11Z",
    "updated_at": "2012-12-16T23:19:08Z",
    "closed_at": "2012-12-11T23:06:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Fails to open  express/node_modules/connect/package.json\n\nNode 0.8.15\nnpm 1.1.66\ncode ENOENT\nerrno 34\n\nManaged to install @3.0.3 w/o a problem on the same system.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1441/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1441/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1440",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1440/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1440/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1440/events",
    "html_url": "https://github.com/expressjs/express/issues/1440",
    "id": 9164558,
    "node_id": "MDU6SXNzdWU5MTY0NTU4",
    "number": 1440,
    "title": "either I am exceedingly dumb or req.files is broken",
    "user": {
      "login": "jescalan",
      "id": 556932,
      "node_id": "MDQ6VXNlcjU1NjkzMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/556932?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jescalan",
      "html_url": "https://github.com/jescalan",
      "followers_url": "https://api.github.com/users/jescalan/followers",
      "following_url": "https://api.github.com/users/jescalan/following{/other_user}",
      "gists_url": "https://api.github.com/users/jescalan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jescalan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jescalan/subscriptions",
      "organizations_url": "https://api.github.com/users/jescalan/orgs",
      "repos_url": "https://api.github.com/users/jescalan/repos",
      "events_url": "https://api.github.com/users/jescalan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jescalan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2012-12-11T00:13:33Z",
    "updated_at": "2012-12-11T00:20:07Z",
    "closed_at": "2012-12-11T00:16:43Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I really apologize if I'm leaving something out and am totally stupid, but I've checked and checked over again a number of times, and the file upload functionality is just not working over here. I made a super minimal app to demonstate. Just generated a new express app with the most up-to-date version (3.0.4) and added the least i could to make a file upload work.\n\nHere's my app.js file\n\n```\nvar express = require('express')\n  , routes = require('./routes')\n  , http = require('http')\n  , path = require('path');\n\nvar app = express();\n\napp.configure(function(){\n  app.set('port', process.env.PORT || 3000);\n  app.set('views', __dirname + '/views');\n  app.set('view engine', 'jade');\n  app.use(express.favicon());\n  app.use(express.logger('dev'));\n  app.use(express.bodyParser());\n  app.use(express.methodOverride());\n  app.use(app.router);\n  app.use(express.static(path.join(__dirname, 'public')));\n});\n\napp.configure('development', function(){\n  app.use(express.errorHandler());\n});\n\napp.get('/', routes.index);\napp.post('/upload', function(req, res){ console.log(req.files) });\n\nhttp.createServer(app).listen(app.get('port'), function(){\n  console.log(\"Express server listening on port \" + app.get('port'));\n});\n```\n\nAnd here's my index.jade view file\n\n```\nextends layout\n\nblock content\n  h1= title\n  p Welcome to #{title}\n  form(method='post', action='/upload')\n    input(type='file', name='photo')\n    input(type='submit')\n```\n\nEvery time I try to upload an image, it logs out `undefined`. Can anyone help a brotha out on this one?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1440/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1440/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1439",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1439/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1439/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1439/events",
    "html_url": "https://github.com/expressjs/express/issues/1439",
    "id": 9047106,
    "node_id": "MDU6SXNzdWU5MDQ3MTA2",
    "number": 1439,
    "title": "Express doesn't work with node-codein",
    "user": {
      "login": "Silviu-Marian",
      "id": 1747499,
      "node_id": "MDQ6VXNlcjE3NDc0OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1747499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Silviu-Marian",
      "html_url": "https://github.com/Silviu-Marian",
      "followers_url": "https://api.github.com/users/Silviu-Marian/followers",
      "following_url": "https://api.github.com/users/Silviu-Marian/following{/other_user}",
      "gists_url": "https://api.github.com/users/Silviu-Marian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Silviu-Marian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Silviu-Marian/subscriptions",
      "organizations_url": "https://api.github.com/users/Silviu-Marian/orgs",
      "repos_url": "https://api.github.com/users/Silviu-Marian/repos",
      "events_url": "https://api.github.com/users/Silviu-Marian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Silviu-Marian/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-12-06T09:10:44Z",
    "updated_at": "2012-12-06T12:53:23Z",
    "closed_at": "2012-12-06T12:53:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Forwarding https://github.com/ketamynx/node-codein/issues/3 maybe you guys can have a look.\n\nSteps to reproduce the problem:\n1. create the file `app.js`\n\n```\nrequire(\"node-codein\");\nrequire('express').express();\n\nprocess.on('uncaughtException', function(e){ \n    console.log(e.stack);\n});\n\n```\n1. open `node.exe app.js`\n2. firing up `chrome --app=http://localhost:55281`\n3. in that console, write `global`, press Enter\n4. and it prints out the following\n\n```\nTypeError: Cannot read property 'accept' of undefined\nTypeError: Cannot read property 'accept' of undefined\n    at IncomingMessage.req.get.req.header (c:\\program files\\nodejs\\node_modules\\\nexpress\\lib\\request.js:54:26)\n    at IncomingMessage.accepted (c:\\program files\\nodejs\\node_modules\\express\\li\nb\\request.js:182:21)\n    at Object.stringify (native)\n    at jsencr (k:\\www\\dev\\node-codein\\debugger.js:7:51)\n    at IncomingMessage.dbg.execute (k:\\www\\dev\\node-codein\\debugger.js:162:11)\n    at IncomingMessage.EventEmitter.emit (events.js:93:17)\n    at IncomingMessage._emitEnd (http.js:366:10)\n    at HTTPParser.parserOnMessageComplete [as onMessageComplete] (http.js:149:23\n)\n    at Socket.socket.ondata (http.js:1704:22)\n    at TCP.onread (net.js:403:27)\n```\n\nCan somebody please trace the problem down? \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1439/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1439/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1438",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1438/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1438/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1438/events",
    "html_url": "https://github.com/expressjs/express/pull/1438",
    "id": 8935201,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzIwNTQ3OQ==",
    "number": 1438,
    "title": "Plugins",
    "user": {
      "login": "buschtoens",
      "id": 834636,
      "node_id": "MDQ6VXNlcjgzNDYzNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/834636?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/buschtoens",
      "html_url": "https://github.com/buschtoens",
      "followers_url": "https://api.github.com/users/buschtoens/followers",
      "following_url": "https://api.github.com/users/buschtoens/following{/other_user}",
      "gists_url": "https://api.github.com/users/buschtoens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/buschtoens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/buschtoens/subscriptions",
      "organizations_url": "https://api.github.com/users/buschtoens/orgs",
      "repos_url": "https://api.github.com/users/buschtoens/repos",
      "events_url": "https://api.github.com/users/buschtoens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/buschtoens/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2012-12-03T03:06:06Z",
    "updated_at": "2014-06-13T03:11:07Z",
    "closed_at": "2012-12-04T21:50:49Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1438",
      "html_url": "https://github.com/expressjs/express/pull/1438",
      "diff_url": "https://github.com/expressjs/express/pull/1438.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1438.patch",
      "merged_at": null
    },
    "body": "Sometimes middleware just isn't enough. Sometimes you _need_ to extend express.\nThis PR implements a clean way to do so.\n\n``` javascript\nfunction nyancat(exclamation) {\n  this.nyan = function() {\n    console.log(\"-> \" + exclamation);\n  };\n}\n\napp.plugin(nyancat, \"Nyan!\"); // -> Nyan!\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1438/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1438/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1437",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1437/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1437/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1437/events",
    "html_url": "https://github.com/expressjs/express/issues/1437",
    "id": 8932786,
    "node_id": "MDU6SXNzdWU4OTMyNzg2",
    "number": 1437,
    "title": "thoughts on next(status_code, message) function signature?",
    "user": {
      "login": "defunctzombie",
      "id": 84792,
      "node_id": "MDQ6VXNlcjg0Nzky",
      "avatar_url": "https://avatars.githubusercontent.com/u/84792?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/defunctzombie",
      "html_url": "https://github.com/defunctzombie",
      "followers_url": "https://api.github.com/users/defunctzombie/followers",
      "following_url": "https://api.github.com/users/defunctzombie/following{/other_user}",
      "gists_url": "https://api.github.com/users/defunctzombie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/defunctzombie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/defunctzombie/subscriptions",
      "organizations_url": "https://api.github.com/users/defunctzombie/orgs",
      "repos_url": "https://api.github.com/users/defunctzombie/repos",
      "events_url": "https://api.github.com/users/defunctzombie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/defunctzombie/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 11,
    "created_at": "2012-12-03T00:37:35Z",
    "updated_at": "2013-11-20T00:18:00Z",
    "closed_at": "2013-11-20T00:18:00Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Thoughts on supporting `next(status_code, message)` function call syntax.\n\nThe major advantage I see here over `next(error_object)` is that it would create a common way for middleware to indicate a particular error (status and message) without having to resort to extending error objects or adding additional code to build an error object.\n\nThe reasoning here is that I see (in the connect code) many places where `utils.error(status)` is called with the intent of making an error object for the next function call.\n\nOne downside is that you can no longer just pass a number for the call to next since it will try to use it to make an error object. Other object types would still be ignored so you could still call next with random things as you can now (although probably discouraged).\n\nAnother downside is that (similar to the utils.error calls in connect) you loose the callsite information of where the error came from. I think that is ok as my initial thinking is that this is for < 5xx errors and you might not care about call site as much.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1437/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1437/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1436",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1436/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1436/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1436/events",
    "html_url": "https://github.com/expressjs/express/issues/1436",
    "id": 8925921,
    "node_id": "MDU6SXNzdWU4OTI1OTIx",
    "number": 1436,
    "title": "Examples functional",
    "user": {
      "login": "jamlfy",
      "id": 1652887,
      "node_id": "MDQ6VXNlcjE2NTI4ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1652887?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamlfy",
      "html_url": "https://github.com/jamlfy",
      "followers_url": "https://api.github.com/users/jamlfy/followers",
      "following_url": "https://api.github.com/users/jamlfy/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamlfy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamlfy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamlfy/subscriptions",
      "organizations_url": "https://api.github.com/users/jamlfy/orgs",
      "repos_url": "https://api.github.com/users/jamlfy/repos",
      "events_url": "https://api.github.com/users/jamlfy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamlfy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 55442643,
        "node_id": "MDU6TGFiZWw1NTQ0MjY0Mw==",
        "url": "https://api.github.com/repos/expressjs/express/labels/examples",
        "name": "examples",
        "color": "5319e7",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2012-12-02T17:50:10Z",
    "updated_at": "2013-10-05T00:14:24Z",
    "closed_at": "2013-09-10T10:03:38Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "A couple of days ago I was watching the examples. However there are examples I came across that does not work.\n\nhttps://github.com/visionmedia/express/tree/master/examples\n\nAlthough this great give examples, but there are some that do not work. like vhost in localhost. What can we do to fix and show that it really works?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1436/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1436/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1435",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1435/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1435/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1435/events",
    "html_url": "https://github.com/expressjs/express/issues/1435",
    "id": 8924908,
    "node_id": "MDU6SXNzdWU4OTI0OTA4",
    "number": 1435,
    "title": "Using md5 instead of crc32 for ETags",
    "user": {
      "login": "rlidwka",
      "id": 999113,
      "node_id": "MDQ6VXNlcjk5OTExMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/999113?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rlidwka",
      "html_url": "https://github.com/rlidwka",
      "followers_url": "https://api.github.com/users/rlidwka/followers",
      "following_url": "https://api.github.com/users/rlidwka/following{/other_user}",
      "gists_url": "https://api.github.com/users/rlidwka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rlidwka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rlidwka/subscriptions",
      "organizations_url": "https://api.github.com/users/rlidwka/orgs",
      "repos_url": "https://api.github.com/users/rlidwka/repos",
      "events_url": "https://api.github.com/users/rlidwka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rlidwka/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2012-12-02T16:53:49Z",
    "updated_at": "2014-07-29T04:18:20Z",
    "closed_at": "2014-05-31T02:17:56Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Currently express.js uses crc32 for ETags and generates them only if a body is larger than 1024 bytes.\n\nI wanted cryptographically secure ETags for my app, so I did some benchmarks: http://kocharin.ru/snapshot4.png (shitty benchmark: https://gist.github.com/4189717)\n\nIt turns out that native md5 implementation with openssl is as fast as crc32.js when we deal with 1024-bytes strings (7µs vs 9µs), and it is two times faster when we deal with large files (0.8ms vs 1.8ms on 2MB file). It sucks with 10-bytes string because of the C++ barrier, but we don't calculate them on 10-bytes responses, do we? \n\nSo, I'd suggest to change default ETag algorithm to `require('crypto').createHash('md5').update(string).digest('hex')` because it's faster, more secure and supported by node.js core team. Also, this way you can get rid of crc dependency in express (though it's still used in connect and seem to make sense there).\n\nPS: tested on node-0.8.14\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1435/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1435/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1434",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1434/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1434/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1434/events",
    "html_url": "https://github.com/expressjs/express/issues/1434",
    "id": 8877774,
    "node_id": "MDU6SXNzdWU4ODc3Nzc0",
    "number": 1434,
    "title": "Workaround for express2-partials with parameters in express3",
    "user": {
      "login": "heilingbrunner",
      "id": 1827209,
      "node_id": "MDQ6VXNlcjE4MjcyMDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1827209?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/heilingbrunner",
      "html_url": "https://github.com/heilingbrunner",
      "followers_url": "https://api.github.com/users/heilingbrunner/followers",
      "following_url": "https://api.github.com/users/heilingbrunner/following{/other_user}",
      "gists_url": "https://api.github.com/users/heilingbrunner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/heilingbrunner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/heilingbrunner/subscriptions",
      "organizations_url": "https://api.github.com/users/heilingbrunner/orgs",
      "repos_url": "https://api.github.com/users/heilingbrunner/repos",
      "events_url": "https://api.github.com/users/heilingbrunner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/heilingbrunner/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-11-30T23:17:54Z",
    "updated_at": "2012-12-06T00:44:17Z",
    "closed_at": "2012-12-06T00:44:17Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am migrating from express2 to express3. Until now i used partials with parameters to generate html with specific ids (partial (template, {id:'1'}). How can i manage this in express3 with includes or else\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1434/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1434/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1433",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1433/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1433/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1433/events",
    "html_url": "https://github.com/expressjs/express/issues/1433",
    "id": 8876626,
    "node_id": "MDU6SXNzdWU4ODc2NjI2",
    "number": 1433,
    "title": "validate a large req.body ",
    "user": {
      "login": "jagooding",
      "id": 364998,
      "node_id": "MDQ6VXNlcjM2NDk5OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/364998?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jagooding",
      "html_url": "https://github.com/jagooding",
      "followers_url": "https://api.github.com/users/jagooding/followers",
      "following_url": "https://api.github.com/users/jagooding/following{/other_user}",
      "gists_url": "https://api.github.com/users/jagooding/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jagooding/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jagooding/subscriptions",
      "organizations_url": "https://api.github.com/users/jagooding/orgs",
      "repos_url": "https://api.github.com/users/jagooding/repos",
      "events_url": "https://api.github.com/users/jagooding/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jagooding/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2012-11-30T22:33:04Z",
    "updated_at": "2012-12-04T00:50:42Z",
    "closed_at": "2012-12-04T00:50:42Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "So I don't have any problems, I'm just wondering if there is  a better way to do something like this already in place such as a middleware, and if there isn't , I'll go ahead and implement the functionality myself, with any ideas or suggestions.\n\nSo when taking JSON post, and making sure its okay, I just run through it like so in the code example below, which isn't really important, but the following idea is the basically what is going on, check if a req.body paramter is set, check if it is empty, if there is an error, add it to the error count, then if there are no errors, do whatever it is you intend to do, otherwise send a 400 bad request back with the specific errors, and a copy of a proper request.\n\nNow obviously if you want to validate anything more than a couple things in the body, this gets stupid and repetitive REAL quick. So basically, One, am I missing something really obvious in node / express that allows me to do this already, and Two, if not any ideas or suggestions on how to best implement this, so you compare the values in the req.body with a kind of template, and then report back specific errors, not just a general, it doesn't match. The reason I don't want a general, \"the user posted body and proper template don't match error!\" is because it doesn't really help the developer on the other end of the API if they get general doesn't match error, especially if you are submitting a JSON body with say 10 or 20 fields.\n\nPOST\n{ \"UserName\": \"John\", \"Email\": \"example@example.com\"}\n\nthen code wise:\n\n``` javascript\nvar ProperUserPostObject = {};\nProperUserPostObject.UserName = \"String\";\nProperUserPostObject.Email = \"String - Must be Valid Email\";\n\nvar myObject = {};\n            myObject.numErrors = 0;\n            myObject.errors = {};\n            myObject.properPostJson = ProperUserPostObject;\n\n//only making copies because you cant req.body.foobar.trim(), it will throw an error in node\nvar UserName, Email;\n\n if (req.body.UserName) {\n                UserName = req.body.UserName;\n                if(UserName.trim())\n                {\n                   //do stuff\n                }\n                else\n                {\n                    myObject.numErrors += 1;\n                    myObject.errors.UserName = \"Empty\";\n                }\n            }\n            else {\n                myObject.numErrors += 1;\n                myObject.errors.UserName = \"Empty or Undefined\";\n            }\n if (req.body.Email) {\netc...\n\nif (myObject.numErrors == 0) {\n             // do other stuff\n            }\n            else {\n                res.json(400, myObject);\n            }\n```\n\nThanks ahead of time.\n\n~John\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1433/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1433/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1432",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1432/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1432/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1432/events",
    "html_url": "https://github.com/expressjs/express/issues/1432",
    "id": 8837875,
    "node_id": "MDU6SXNzdWU4ODM3ODc1",
    "number": 1432,
    "title": "Routing with a RegEx pattern in app.get() result in a \"TypeError: Object /RegEx/ has no method 'concat'\"",
    "user": {
      "login": "juanmac",
      "id": 1013345,
      "node_id": "MDQ6VXNlcjEwMTMzNDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1013345?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juanmac",
      "html_url": "https://github.com/juanmac",
      "followers_url": "https://api.github.com/users/juanmac/followers",
      "following_url": "https://api.github.com/users/juanmac/following{/other_user}",
      "gists_url": "https://api.github.com/users/juanmac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juanmac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juanmac/subscriptions",
      "organizations_url": "https://api.github.com/users/juanmac/orgs",
      "repos_url": "https://api.github.com/users/juanmac/repos",
      "events_url": "https://api.github.com/users/juanmac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juanmac/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2012-11-30T01:15:28Z",
    "updated_at": "2012-12-04T16:14:23Z",
    "closed_at": "2012-12-04T16:14:23Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I want to use a couple of RegEx patterns in <code>app.get()</code> to match some routes but result in a <code>TypeError</code>. Taking the example code in the \"official\" documentation of expressjs: http://expressjs.com/api.html#app.VERB:\n\n``` javascript\napp.get(/^\\/commits\\/(\\w+)(?:\\.\\.(\\w+))?$/, function(req, res){\n  var from = req.params[0];\n  var to = req.params[1] || 'HEAD';\n  res.send('commit range ' + from + '..' + to);\n});\n```\n\nresult in the following error:\n\n<pre>TypeError: Object /^\\/commits\\/(\\w+)(?:\\.\\.(\\w+))?$/ has no method 'concat'\n    at Object.exports.pathRegexp (/home/jumc/node_modules/express/lib/utils.js:268:6)\n    at new Route (/home/jumc/node_modules/express/lib/router/route.js:35:23)\n    at Router.route (/home/jumc/node_modules/express/lib/router/index.js:250:15)\n    at Function.methods.forEach.app.(anonymous function) [as get] (/home/jumc/node_modules/express/lib/application.js:413:31)\n    at integrantes.get.js:31:5\n    at /home/jumc/node/app.js:65:6\n    at Array.forEach (native)\n    at Object.<anonymous> (/home/jumc/node/app.js:63:24)\n    at Module._compile (module.js:449:26)\n    at Object.Module._extensions..js (module.js:467:10)\n</pre>\n\n\nAlso the app.param() seems to not accept regular expressions as I commented on this issue: https://github.com/visionmedia/express/issues/1263#issuecomment-10868509\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1432/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1432/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1431",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1431/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1431/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1431/events",
    "html_url": "https://github.com/expressjs/express/issues/1431",
    "id": 8808502,
    "node_id": "MDU6SXNzdWU4ODA4NTAy",
    "number": 1431,
    "title": "Express server won't start, keeps throwing weird error. ",
    "user": {
      "login": "darokel",
      "id": 616080,
      "node_id": "MDQ6VXNlcjYxNjA4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/616080?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darokel",
      "html_url": "https://github.com/darokel",
      "followers_url": "https://api.github.com/users/darokel/followers",
      "following_url": "https://api.github.com/users/darokel/following{/other_user}",
      "gists_url": "https://api.github.com/users/darokel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darokel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darokel/subscriptions",
      "organizations_url": "https://api.github.com/users/darokel/orgs",
      "repos_url": "https://api.github.com/users/darokel/repos",
      "events_url": "https://api.github.com/users/darokel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darokel/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2012-11-29T12:41:40Z",
    "updated_at": "2013-02-27T03:05:26Z",
    "closed_at": "2012-11-29T12:48:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I just installed the latest Express and initialised a sample app. However, when I try to start up the server I keep getting the following error:\n\n<code>\nnode app.js     \n\nevents.js:71\n        throw arguments[1]; // Unhandled 'error' event\n                       ^\nError: listen EADDRINUSE\n    at errnoException (net.js:769:11)\n    at Server._listen2 (net.js:909:14)\n    at listen (net.js:936:10)\n    at Server.listen (net.js:985:5)\n    at Object.<anonymous> (/Users/david/Sites/Node/authentication/app.js:33:24)\n    at Module._compile (module.js:449:26)\n    at Object.Module._extensions..js (module.js:467:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Module.runMain (module.js:492:10)\n</code>\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1431/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1431/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1430",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1430/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1430/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1430/events",
    "html_url": "https://github.com/expressjs/express/issues/1430",
    "id": 8792874,
    "node_id": "MDU6SXNzdWU4NzkyODc0",
    "number": 1430,
    "title": "Simple: i cannot say what's happen...",
    "user": {
      "login": "thalesfsp",
      "id": 750360,
      "node_id": "MDQ6VXNlcjc1MDM2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/750360?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thalesfsp",
      "html_url": "https://github.com/thalesfsp",
      "followers_url": "https://api.github.com/users/thalesfsp/followers",
      "following_url": "https://api.github.com/users/thalesfsp/following{/other_user}",
      "gists_url": "https://api.github.com/users/thalesfsp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thalesfsp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thalesfsp/subscriptions",
      "organizations_url": "https://api.github.com/users/thalesfsp/orgs",
      "repos_url": "https://api.github.com/users/thalesfsp/repos",
      "events_url": "https://api.github.com/users/thalesfsp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thalesfsp/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 17,
    "created_at": "2012-11-29T01:28:37Z",
    "updated_at": "2012-12-06T17:27:33Z",
    "closed_at": "2012-11-29T01:49:01Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "OK:\n\n``` javascript\nif (email.length === 0 && senha.length === 0) {\n    res.send({status : 'campos vazios'});\n} else if (email.length === 0) {\n    res.send({status : 'campo de e-mail vazio'});\n} else if (senha.length === 0) {\n    res.send({status : 'campo de senha vazio'});\n} else if (!regexEmail.test(email)) {\n    res.send({status : 'formato de email inválido'});\n} else {\n        res.cookie('empresa', {email : email});\n    res.send({status : 'ok', url : '/usuario'});\n}\n```\n\nNOK: the 'else' is crazy bypassed!\n\n``` javascript\nif (email.length === 0 && senha.length === 0) {\n    res.send({status : 'campos vazios'});\n} else if (email.length === 0) {\n    res.send({status : 'campo de e-mail vazio'});\n} else if (senha.length === 0) {\n    res.send({status : 'campo de senha vazio'});\n} else if (!regexEmail.test(email)) {\n    res.send({status : 'formato de email inválido'});\n} else {\n    if (email === 'asd@asd.com' && senha === 'asdasd') {\n        res.cookie('empresa', {email : email});\n        res.send({status : 'ok', url : '/usuario'});\n    } else {\n        res.send({status : 'usuário não encontrado'});\n    }\n}\n```\n\nstack: node + express + jade + jquery ($.ajax POST)\n\nIf someone want to help, i can join.me\nThanks\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1430/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1430/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1429",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1429/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1429/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1429/events",
    "html_url": "https://github.com/expressjs/express/issues/1429",
    "id": 8588981,
    "node_id": "MDU6SXNzdWU4NTg4OTgx",
    "number": 1429,
    "title": "Object #<IncomingMessage> has no method 'redirect'",
    "user": {
      "login": "emilbayes",
      "id": 416524,
      "node_id": "MDQ6VXNlcjQxNjUyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/416524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/emilbayes",
      "html_url": "https://github.com/emilbayes",
      "followers_url": "https://api.github.com/users/emilbayes/followers",
      "following_url": "https://api.github.com/users/emilbayes/following{/other_user}",
      "gists_url": "https://api.github.com/users/emilbayes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/emilbayes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/emilbayes/subscriptions",
      "organizations_url": "https://api.github.com/users/emilbayes/orgs",
      "repos_url": "https://api.github.com/users/emilbayes/repos",
      "events_url": "https://api.github.com/users/emilbayes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/emilbayes/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2012-11-22T22:40:21Z",
    "updated_at": "2012-11-22T23:00:44Z",
    "closed_at": "2012-11-22T23:00:44Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The following line of Coffeescript:\n\n```\nSimpleMath = exports? and exports or @SimpleMath = {}\n```\n\nWill cause an error in Express:\n\n```\n    TypeError: Object #<IncomingMessage> has no method 'redirect'\n    at Object.handle (/project/server.coffee:48:16)\n    at next (/project/node_modules/express/node_modules/connect/lib/proto.js:185:17)\n    at pass (/project/node_modules/express/lib/router/index.js:108:24)\n    at nextRoute (/project/node_modules/express/lib/router/index.js:101:7)\n    at callbacks (/project/node_modules/express/lib/router/index.js:165:11)\n    at callbacks (/project/node_modules/express/lib/router/index.js:168:9)\n    at param (/project/node_modules/express/lib/router/index.js:136:11)\n    at pass (/project/node_modules/express/lib/router/index.js:143:5)\n    at Router._dispatch (/project/node_modules/express/lib/router/index.js:171:5)\n    at Object.router (/project/node_modules/express/lib/router/index.js:33:10)\n```\n\nWhat the coffeescript does is that if exports doesn't exist (Browser) it will attach SimpleMath to the local scope, otherwise it will export it (Server) [Source: http://coffeescriptcookbook.com/chapters/syntax/code_reuse_on_client_and_server ]\n\nThe coffeescript lives in a `required()` javascript file and the error is thrown in a route:\n\n```\nSimpleMath = require('./SimpleMath');\n\napp.post('/contact', function(req, res){\n\n    var sMath = new SimpleMath();\n}\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1429/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1429/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1428",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1428/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1428/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1428/events",
    "html_url": "https://github.com/expressjs/express/issues/1428",
    "id": 8586620,
    "node_id": "MDU6SXNzdWU4NTg2NjIw",
    "number": 1428,
    "title": "call .configure fn with 'app' argument",
    "user": {
      "login": "stagas",
      "id": 283907,
      "node_id": "MDQ6VXNlcjI4MzkwNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/283907?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stagas",
      "html_url": "https://github.com/stagas",
      "followers_url": "https://api.github.com/users/stagas/followers",
      "following_url": "https://api.github.com/users/stagas/following{/other_user}",
      "gists_url": "https://api.github.com/users/stagas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stagas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stagas/subscriptions",
      "organizations_url": "https://api.github.com/users/stagas/orgs",
      "repos_url": "https://api.github.com/users/stagas/repos",
      "events_url": "https://api.github.com/users/stagas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stagas/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2012-11-22T20:23:18Z",
    "updated_at": "2013-09-10T09:53:35Z",
    "closed_at": "2013-09-10T09:53:35Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "production.js:\n\n``` js\nmodule.exports = function (app) {\n  app.use(...)\n}\n```\n\napp.js:\n\n``` js\napp.configure('production', require('./production'))\n```\n\nit is possible now with `var app = this` in the function but I think it's nicer to have `app` in arguments. It could also be `function (app, express)` so I don't need to re-require express in the module to use the middleware.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1428/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1428/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1427",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1427/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1427/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1427/events",
    "html_url": "https://github.com/expressjs/express/pull/1427",
    "id": 8577158,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzA5NjY0NA==",
    "number": 1427,
    "title": "use path.join on app.configure settings",
    "user": {
      "login": "fredericosilva",
      "id": 927601,
      "node_id": "MDQ6VXNlcjkyNzYwMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/927601?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fredericosilva",
      "html_url": "https://github.com/fredericosilva",
      "followers_url": "https://api.github.com/users/fredericosilva/followers",
      "following_url": "https://api.github.com/users/fredericosilva/following{/other_user}",
      "gists_url": "https://api.github.com/users/fredericosilva/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fredericosilva/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fredericosilva/subscriptions",
      "organizations_url": "https://api.github.com/users/fredericosilva/orgs",
      "repos_url": "https://api.github.com/users/fredericosilva/repos",
      "events_url": "https://api.github.com/users/fredericosilva/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fredericosilva/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-11-22T13:24:10Z",
    "updated_at": "2014-06-17T06:47:58Z",
    "closed_at": "2013-10-15T04:17:32Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1427",
      "html_url": "https://github.com/expressjs/express/pull/1427",
      "diff_url": "https://github.com/expressjs/express/pull/1427.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1427.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1427/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1427/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1426",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1426/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1426/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1426/events",
    "html_url": "https://github.com/expressjs/express/pull/1426",
    "id": 8540475,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzA4MDk4MA==",
    "number": 1426,
    "title": "change crc generator because of license issue",
    "user": {
      "login": "piscis",
      "id": 326163,
      "node_id": "MDQ6VXNlcjMyNjE2Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/326163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/piscis",
      "html_url": "https://github.com/piscis",
      "followers_url": "https://api.github.com/users/piscis/followers",
      "following_url": "https://api.github.com/users/piscis/following{/other_user}",
      "gists_url": "https://api.github.com/users/piscis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/piscis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/piscis/subscriptions",
      "organizations_url": "https://api.github.com/users/piscis/orgs",
      "repos_url": "https://api.github.com/users/piscis/repos",
      "events_url": "https://api.github.com/users/piscis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/piscis/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-11-21T12:12:37Z",
    "updated_at": "2014-07-26T04:45:05Z",
    "closed_at": "2012-11-21T16:45:42Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1426",
      "html_url": "https://github.com/expressjs/express/pull/1426",
      "diff_url": "https://github.com/expressjs/express/pull/1426.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1426.patch",
      "merged_at": "2012-11-21T16:45:42Z"
    },
    "body": "Hi,\n\nat the moment I´m in the process of introducing express as a open source software module to our company. In this process I need to check that the software I´m going to introduce has a valid licence statement.\n\nIt turns out that one of the modules express depends on (node-crc) might have a license issue. There are more information here: https://github.com/alexgorbatchev/node-crc/issues/2\n\nI also did some tests against node-crc and other implementations and discovered that compared to CRC32 implementation in PHP the check-sums are different. I´m not an expert on CRC checks but I thing it has something to do with the CRC table that is used.\n\nHere is a gist with my checks: https://gist.github.com/4124412\n\nAs you can see in example 1 and 2 buffer-crc32 generates the same check-sums like the PHP implementation (both tested on 64bit).\n\nIt would be very nice if this issue could be resolved by switching over to buffer-crc32.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1426/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1426/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1425",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1425/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1425/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1425/events",
    "html_url": "https://github.com/expressjs/express/pull/1425",
    "id": 8533670,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzA3ODIxNw==",
    "number": 1425,
    "title": "Escape URLs in text/plain res.redirect response",
    "user": {
      "login": "gmethvin",
      "id": 171663,
      "node_id": "MDQ6VXNlcjE3MTY2Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/171663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmethvin",
      "html_url": "https://github.com/gmethvin",
      "followers_url": "https://api.github.com/users/gmethvin/followers",
      "following_url": "https://api.github.com/users/gmethvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmethvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmethvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmethvin/subscriptions",
      "organizations_url": "https://api.github.com/users/gmethvin/orgs",
      "repos_url": "https://api.github.com/users/gmethvin/repos",
      "events_url": "https://api.github.com/users/gmethvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmethvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2012-11-21T07:24:59Z",
    "updated_at": "2014-06-19T06:04:25Z",
    "closed_at": "2012-11-21T16:42:33Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1425",
      "html_url": "https://github.com/expressjs/express/pull/1425",
      "diff_url": "https://github.com/expressjs/express/pull/1425.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1425.patch",
      "merged_at": "2012-11-21T16:42:33Z"
    },
    "body": "Escape the URL printed by res.redirect using URL encoding. This\nprevents some browsers (primarily old versions of IE) from attempting\nto sniff the Content-Type and evaluate it as HTML, which causes a\ncross-site scripting vulnerability.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1425/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1425/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1424",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1424/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1424/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1424/events",
    "html_url": "https://github.com/expressjs/express/issues/1424",
    "id": 8514594,
    "node_id": "MDU6SXNzdWU4NTE0NTk0",
    "number": 1424,
    "title": "req.signedCookies not retrieving the signed cookie",
    "user": {
      "login": "RobDuhm",
      "id": 2846579,
      "node_id": "MDQ6VXNlcjI4NDY1Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2846579?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RobDuhm",
      "html_url": "https://github.com/RobDuhm",
      "followers_url": "https://api.github.com/users/RobDuhm/followers",
      "following_url": "https://api.github.com/users/RobDuhm/following{/other_user}",
      "gists_url": "https://api.github.com/users/RobDuhm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RobDuhm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RobDuhm/subscriptions",
      "organizations_url": "https://api.github.com/users/RobDuhm/orgs",
      "repos_url": "https://api.github.com/users/RobDuhm/repos",
      "events_url": "https://api.github.com/users/RobDuhm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RobDuhm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2012-11-20T18:13:14Z",
    "updated_at": "2012-11-20T22:53:33Z",
    "closed_at": "2012-11-20T22:32:34Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have the following configuration in my `app.js` file:  \n<code>\napp.configure(function(){\n  app.set('port', process.env.PORT || 3000);\n  app.set('views', __dirname + '/views');\n  app.set('view engine', 'jade');\n  app.use(express.favicon());\n  app.use(express.logger('dev'));\n  app.use(express.cookieParser('secret'));\n  app.use(express.bodyParser());\n  app.use(express.methodOverride());\n  app.use(expressValidator);\n  app.use(express.session());\n  app.use(app.router);\n  app.use(express.static(path.join(__dirname, 'public')));\n});\n<code>\napp.get('/', function(req, res) {\n  if (!req.signedCookies.cat) {\n    res.cookie('cat', 'boo', {signed: true});\n    console.log('setting cookie');\n    res.writeHead(200, {'Content-Type':'text/plain'});\n    return res.end('cookie set');\n  }\n<code>\n  res.end('signed cookie: ' + req.signedCookies.cat);\n});\n\nWhen I use the browser to hit `localhost:3000` I get the first desired response `cookie set`.\nI check the browser cookies and the cookie has been set.\nWhen I use the same browser to hit `localhost:3000` again I get the same response 'cookie set'.\nThe request does not seem to pickup on the cookie.\n\nSo in another file I copied/paste the exact above code and switched ports to 3080.\nWhen that goes through the second response produces `signed cookie: boo'.\n\nThen if I refresh `localhost:3000` the response is `signed cookie: boo`.\nWhy does this happen? Is there caching going on that shouldn't?\n\nThis happens for chrome, opera and firefox browsers.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1424/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1424/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1423",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1423/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1423/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1423/events",
    "html_url": "https://github.com/expressjs/express/pull/1423",
    "id": 8459191,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzA0NDg1OA==",
    "number": 1423,
    "title": "app.set('explicit routing')",
    "user": {
      "login": "hunterloftis",
      "id": 364501,
      "node_id": "MDQ6VXNlcjM2NDUwMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/364501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hunterloftis",
      "html_url": "https://github.com/hunterloftis",
      "followers_url": "https://api.github.com/users/hunterloftis/followers",
      "following_url": "https://api.github.com/users/hunterloftis/following{/other_user}",
      "gists_url": "https://api.github.com/users/hunterloftis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hunterloftis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hunterloftis/subscriptions",
      "organizations_url": "https://api.github.com/users/hunterloftis/orgs",
      "repos_url": "https://api.github.com/users/hunterloftis/repos",
      "events_url": "https://api.github.com/users/hunterloftis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hunterloftis/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2012-11-19T04:29:10Z",
    "updated_at": "2014-08-14T09:52:49Z",
    "closed_at": "2012-12-17T23:30:46Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1423",
      "html_url": "https://github.com/expressjs/express/pull/1423",
      "diff_url": "https://github.com/expressjs/express/pull/1423.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1423.patch",
      "merged_at": null
    },
    "body": "Patch for #1404\n\nIncludes tests & implementation.\n\nLeaves implicit .use() behavior alone for existing projects; won't break anything.\n\n``` js\napp.set('explicit routing', true);\napp.get('/', log('route'));\napp.use(log('middleware'));\napp.use(app.router);\n\n//   GET /   -->  'middleware', 'route'\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1423/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1423/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1422",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1422/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1422/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1422/events",
    "html_url": "https://github.com/expressjs/express/pull/1422",
    "id": 8456663,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzA0Mzg3MQ==",
    "number": 1422,
    "title": "Example of Facebook's BigPipe",
    "user": {
      "login": "jonathanong",
      "id": 643505,
      "node_id": "MDQ6VXNlcjY0MzUwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/643505?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanong",
      "html_url": "https://github.com/jonathanong",
      "followers_url": "https://api.github.com/users/jonathanong/followers",
      "following_url": "https://api.github.com/users/jonathanong/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanong/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanong/orgs",
      "repos_url": "https://api.github.com/users/jonathanong/repos",
      "events_url": "https://api.github.com/users/jonathanong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanong/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2012-11-18T23:58:58Z",
    "updated_at": "2014-08-04T06:29:51Z",
    "closed_at": "2012-11-19T08:38:58Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1422",
      "html_url": "https://github.com/expressjs/express/pull/1422",
      "diff_url": "https://github.com/expressjs/express/pull/1422.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1422.patch",
      "merged_at": null
    },
    "body": "https://www.facebook.com/note.php?note_id=389414033919\n\nNot really `express` (more like `connect`) but it took me a day to figure this out. Hopefully it'll help other people.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1422/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1422/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1421",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1421/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1421/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1421/events",
    "html_url": "https://github.com/expressjs/express/pull/1421",
    "id": 8455148,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzA0MzYzNw==",
    "number": 1421,
    "title": "Add application setting to disable ETag",
    "user": {
      "login": "kavu",
      "id": 1994,
      "node_id": "MDQ6VXNlcjE5OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1994?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kavu",
      "html_url": "https://github.com/kavu",
      "followers_url": "https://api.github.com/users/kavu/followers",
      "following_url": "https://api.github.com/users/kavu/following{/other_user}",
      "gists_url": "https://api.github.com/users/kavu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kavu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kavu/subscriptions",
      "organizations_url": "https://api.github.com/users/kavu/orgs",
      "repos_url": "https://api.github.com/users/kavu/repos",
      "events_url": "https://api.github.com/users/kavu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kavu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 25,
    "created_at": "2012-11-18T22:42:06Z",
    "updated_at": "2014-06-14T01:38:35Z",
    "closed_at": "2012-12-06T23:15:34Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1421",
      "html_url": "https://github.com/expressjs/express/pull/1421",
      "diff_url": "https://github.com/expressjs/express/pull/1421.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1421.patch",
      "merged_at": null
    },
    "body": "Add application setting `app.disable('etag');` to disable ETag. Manual ETag addition via `res.set('etag', 'somestring);'` still works.\n\nPlease, check this feature.\n\nBtw, it's my first experience in Express and JS BDD, so, please, if there are any issues or mistakes (for ex., I am not sure about proper spec placement), let me know, maybe I'll can fix 'em.\n\nThanks!\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1421/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1421/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1420",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1420/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1420/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1420/events",
    "html_url": "https://github.com/expressjs/express/issues/1420",
    "id": 8437427,
    "node_id": "MDU6SXNzdWU4NDM3NDI3",
    "number": 1420,
    "title": "Understanding app.set and app.get",
    "user": {
      "login": "pixelfreak",
      "id": 833548,
      "node_id": "MDQ6VXNlcjgzMzU0OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/833548?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pixelfreak",
      "html_url": "https://github.com/pixelfreak",
      "followers_url": "https://api.github.com/users/pixelfreak/followers",
      "following_url": "https://api.github.com/users/pixelfreak/following{/other_user}",
      "gists_url": "https://api.github.com/users/pixelfreak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pixelfreak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pixelfreak/subscriptions",
      "organizations_url": "https://api.github.com/users/pixelfreak/orgs",
      "repos_url": "https://api.github.com/users/pixelfreak/repos",
      "events_url": "https://api.github.com/users/pixelfreak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pixelfreak/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2012-11-17T02:02:27Z",
    "updated_at": "2013-09-08T05:00:29Z",
    "closed_at": "2013-09-08T05:00:29Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I am using Express vhost to run 2 different sites/apps on a single server. I am trying to set global environment variables that are specific to each sites and I am using `app.set` and `app.get`. The thing is, whenever I am accessing the variable, it is always pulling one of the site's variable, never the other.\n\nAm I not supposed to use `app.set` & `app.get` this way? How else should I define a global environment variable specific to an app in a vhost setup? I have tried `app.settings` as well and the same thing happens.\n\nThanks!\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1420/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1420/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1419",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1419/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1419/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1419/events",
    "html_url": "https://github.com/expressjs/express/issues/1419",
    "id": 8409100,
    "node_id": "MDU6SXNzdWU4NDA5MTAw",
    "number": 1419,
    "title": "response.set is incorrect when trying to set multiple values for a header",
    "user": {
      "login": "vgeshel",
      "id": 100214,
      "node_id": "MDQ6VXNlcjEwMDIxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/100214?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vgeshel",
      "html_url": "https://github.com/vgeshel",
      "followers_url": "https://api.github.com/users/vgeshel/followers",
      "following_url": "https://api.github.com/users/vgeshel/following{/other_user}",
      "gists_url": "https://api.github.com/users/vgeshel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vgeshel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vgeshel/subscriptions",
      "organizations_url": "https://api.github.com/users/vgeshel/orgs",
      "repos_url": "https://api.github.com/users/vgeshel/repos",
      "events_url": "https://api.github.com/users/vgeshel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vgeshel/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2012-11-16T02:10:26Z",
    "updated_at": "2013-01-24T04:29:18Z",
    "closed_at": "2013-01-24T04:29:18Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "node's setHeader allows you to pass an array of values which will generate multiple header lines : http://nodejs.org/api/http.html#http_response_setheader_name_value\n\nBut in Express's response.js, the value parameter of the set function (aka header) is cast to string which breaks that behavior and doesn't leave a way to set multiple values for a header using Express's own API (though res.setHeader still works)\n\n```\nres.set = \nres.header = function(field, val){\n  if (2 == arguments.length) {\n    this.setHeader(field, '' + val);\n  } else {\n    for (var key in field) {\n      this.setHeader(key, '' + field[key]);\n    }\n  }\n  return this;\n};\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1419/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1419/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1418",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1418/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1418/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1418/events",
    "html_url": "https://github.com/expressjs/express/issues/1418",
    "id": 8384054,
    "node_id": "MDU6SXNzdWU4Mzg0MDU0",
    "number": 1418,
    "title": "require('express').version != real version",
    "user": {
      "login": "eckz",
      "id": 567737,
      "node_id": "MDQ6VXNlcjU2NzczNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/567737?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eckz",
      "html_url": "https://github.com/eckz",
      "followers_url": "https://api.github.com/users/eckz/followers",
      "following_url": "https://api.github.com/users/eckz/following{/other_user}",
      "gists_url": "https://api.github.com/users/eckz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eckz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eckz/subscriptions",
      "organizations_url": "https://api.github.com/users/eckz/orgs",
      "repos_url": "https://api.github.com/users/eckz/repos",
      "events_url": "https://api.github.com/users/eckz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eckz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-11-15T11:14:37Z",
    "updated_at": "2012-11-15T16:58:49Z",
    "closed_at": "2012-11-15T16:58:49Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In the last released version, 3.0.1\nI see `require('express').version === '3.0.0'`\nWhen it should be `'3.0.1'`\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1418/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1418/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1417",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1417/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1417/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1417/events",
    "html_url": "https://github.com/expressjs/express/issues/1417",
    "id": 8343173,
    "node_id": "MDU6SXNzdWU4MzQzMTcz",
    "number": 1417,
    "title": "302 redirect instead of 301",
    "user": {
      "login": "arunoda",
      "id": 50838,
      "node_id": "MDQ6VXNlcjUwODM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/50838?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arunoda",
      "html_url": "https://github.com/arunoda",
      "followers_url": "https://api.github.com/users/arunoda/followers",
      "following_url": "https://api.github.com/users/arunoda/following{/other_user}",
      "gists_url": "https://api.github.com/users/arunoda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arunoda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arunoda/subscriptions",
      "organizations_url": "https://api.github.com/users/arunoda/orgs",
      "repos_url": "https://api.github.com/users/arunoda/repos",
      "events_url": "https://api.github.com/users/arunoda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arunoda/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2012-11-14T02:12:41Z",
    "updated_at": "2013-09-07T21:52:26Z",
    "closed_at": "2013-09-07T21:52:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\n\nWhat is the reason to set 302 as the default redirect?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1417/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1417/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1416",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1416/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1416/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1416/events",
    "html_url": "https://github.com/expressjs/express/issues/1416",
    "id": 8341270,
    "node_id": "MDU6SXNzdWU4MzQxMjcw",
    "number": 1416,
    "title": "Error with connect middleware for GET with contentType",
    "user": {
      "login": "tonysherbondy",
      "id": 899305,
      "node_id": "MDQ6VXNlcjg5OTMwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/899305?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tonysherbondy",
      "html_url": "https://github.com/tonysherbondy",
      "followers_url": "https://api.github.com/users/tonysherbondy/followers",
      "following_url": "https://api.github.com/users/tonysherbondy/following{/other_user}",
      "gists_url": "https://api.github.com/users/tonysherbondy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tonysherbondy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tonysherbondy/subscriptions",
      "organizations_url": "https://api.github.com/users/tonysherbondy/orgs",
      "repos_url": "https://api.github.com/users/tonysherbondy/repos",
      "events_url": "https://api.github.com/users/tonysherbondy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tonysherbondy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 22,
    "created_at": "2012-11-14T00:29:21Z",
    "updated_at": "2013-07-26T10:36:36Z",
    "closed_at": "2012-11-14T02:22:30Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Express 3.0.3\njQuery 1.7.2\n\nCreate default app with express.  Perform $.ajax({url: '/users', contentType: \"application/json; charset=utf-8\", dataType: 'json'}).  Get the following error: \nError: invalid json\n    at Object.exports.error (/Users/sherbond/git/temp/express3crash/node_modules/express/node_modules/connect/lib/utils.js:43:13)\n    at IncomingMessage.module.exports (/Users/sherbond/git/temp/express3crash/node_modules/express/node_modules/connect/lib/middleware/json.js:67:71)\n    at IncomingMessage.EventEmitter.emit (events.js:93:17)\n    at IncomingMessage._emitEnd (http.js:366:10)\n    at HTTPParser.parserOnMessageComplete [as onMessageComplete](http.js:149:23)\n    at Socket.socket.ondata (http.js:1704:22)\n    at TCP.onread (net.js:403:27)\n\nThis was working before express upgrade, last express 2.5.11.  Works if you remove contentType, but some servers our front-end connect to need the contentType there for GET requests.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1416/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1416/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1415",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1415/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1415/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1415/events",
    "html_url": "https://github.com/expressjs/express/issues/1415",
    "id": 8314240,
    "node_id": "MDU6SXNzdWU4MzE0MjQw",
    "number": 1415,
    "title": "file uploads in express 3",
    "user": {
      "login": "bazjapan",
      "id": 108936,
      "node_id": "MDQ6VXNlcjEwODkzNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/108936?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bazjapan",
      "html_url": "https://github.com/bazjapan",
      "followers_url": "https://api.github.com/users/bazjapan/followers",
      "following_url": "https://api.github.com/users/bazjapan/following{/other_user}",
      "gists_url": "https://api.github.com/users/bazjapan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bazjapan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bazjapan/subscriptions",
      "organizations_url": "https://api.github.com/users/bazjapan/orgs",
      "repos_url": "https://api.github.com/users/bazjapan/repos",
      "events_url": "https://api.github.com/users/bazjapan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bazjapan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2012-11-13T07:20:21Z",
    "updated_at": "2014-01-11T10:51:41Z",
    "closed_at": "2012-11-14T09:47:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello, When uploading files, I notice that in express 3 there is now a files object within the request.\nIn the file object itself there is a reference to the temporary saved path and also a property called _writestream. \nWhat is the recommended approach for moving the saved file from the temp location to another directory on disk?\nWould I need to create a new file stream?\n\nAny pointers much appreciated.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1415/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1415/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1414",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1414/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1414/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1414/events",
    "html_url": "https://github.com/expressjs/express/issues/1414",
    "id": 8305792,
    "node_id": "MDU6SXNzdWU4MzA1Nzky",
    "number": 1414,
    "title": "req.session not parsing correctly?",
    "user": {
      "login": "thepixelmonk",
      "id": 857940,
      "node_id": "MDQ6VXNlcjg1Nzk0MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/857940?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thepixelmonk",
      "html_url": "https://github.com/thepixelmonk",
      "followers_url": "https://api.github.com/users/thepixelmonk/followers",
      "following_url": "https://api.github.com/users/thepixelmonk/following{/other_user}",
      "gists_url": "https://api.github.com/users/thepixelmonk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thepixelmonk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thepixelmonk/subscriptions",
      "organizations_url": "https://api.github.com/users/thepixelmonk/orgs",
      "repos_url": "https://api.github.com/users/thepixelmonk/repos",
      "events_url": "https://api.github.com/users/thepixelmonk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thepixelmonk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2012-11-12T22:32:52Z",
    "updated_at": "2012-11-13T04:01:17Z",
    "closed_at": "2012-11-13T03:36:50Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "My connect.sess cookie looks like:\n\n```\n{ 'connect.sess': 's:j:{\"passport\":{\"user\":\"1\"},\"oauth:twitter\":{\"oauth_token\":\"xxxxxxxxxxxxx\",\"oauth_token_secret\":\"xxxxxxxxxx\"}}.+RY+PmG6OYGFC2YkUtSQ1bEI0R7y/PBMPebm7QIE3uU' }\n```\n\nYet my req.session only returns:\n\n```\n{ passport: { user: '1' } }\n```\n\nAny ideas?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1414/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1414/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1413",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1413/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1413/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1413/events",
    "html_url": "https://github.com/expressjs/express/issues/1413",
    "id": 8300040,
    "node_id": "MDU6SXNzdWU4MzAwMDQw",
    "number": 1413,
    "title": "sub-app example",
    "user": {
      "login": "seandunaway",
      "id": 768947,
      "node_id": "MDQ6VXNlcjc2ODk0Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/768947?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seandunaway",
      "html_url": "https://github.com/seandunaway",
      "followers_url": "https://api.github.com/users/seandunaway/followers",
      "following_url": "https://api.github.com/users/seandunaway/following{/other_user}",
      "gists_url": "https://api.github.com/users/seandunaway/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seandunaway/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seandunaway/subscriptions",
      "organizations_url": "https://api.github.com/users/seandunaway/orgs",
      "repos_url": "https://api.github.com/users/seandunaway/repos",
      "events_url": "https://api.github.com/users/seandunaway/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seandunaway/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2012-11-12T19:20:57Z",
    "updated_at": "2013-01-20T04:07:08Z",
    "closed_at": "2013-01-20T04:07:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "an example showing how to mount sub apps (with routes) as middleware would be saweet.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1413/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1413/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1412",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1412/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1412/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1412/events",
    "html_url": "https://github.com/expressjs/express/pull/1412",
    "id": 8281351,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjk2MTQ5Nw==",
    "number": 1412,
    "title": "Add a 'jsonp force 200' setting to force an HTTP 200 JSONP response",
    "user": {
      "login": "chuyeow",
      "id": 213,
      "node_id": "MDQ6VXNlcjIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chuyeow",
      "html_url": "https://github.com/chuyeow",
      "followers_url": "https://api.github.com/users/chuyeow/followers",
      "following_url": "https://api.github.com/users/chuyeow/following{/other_user}",
      "gists_url": "https://api.github.com/users/chuyeow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chuyeow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chuyeow/subscriptions",
      "organizations_url": "https://api.github.com/users/chuyeow/orgs",
      "repos_url": "https://api.github.com/users/chuyeow/repos",
      "events_url": "https://api.github.com/users/chuyeow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chuyeow/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2012-11-12T06:32:06Z",
    "updated_at": "2014-06-20T11:55:28Z",
    "closed_at": "2012-11-15T08:43:21Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1412",
      "html_url": "https://github.com/expressjs/express/pull/1412",
      "diff_url": "https://github.com/expressjs/express/pull/1412.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1412.patch",
      "merged_at": null
    },
    "body": "```\napp.enable('jsonp force 200');\napp.use(function(req, res){\n  res.statusCode = 500;\n  res.jsonp({ error: 'message' });\n});\n```\n\nand\n\n```\ncurl -is http://localhost:3000/?callback=something\n\nHTTP/1.1 200 OK\n\nsomething && something({\n  \"error\": \"message\"\n});\n```\n\nThis is useful because browsers are unable to respond to non-200 JSONP responses. A good way to inform browsers of the actual HTTP status code is to include it in the JSON response, e.g.\n\n```\ncb && cb({\"code\":400,\"message\":\"Invalid params\"})`.\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1412/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1412/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1411",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1411/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1411/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1411/events",
    "html_url": "https://github.com/expressjs/express/issues/1411",
    "id": 8259603,
    "node_id": "MDU6SXNzdWU4MjU5NjAz",
    "number": 1411,
    "title": "\"Getting started\" section of the express guide is misleading",
    "user": {
      "login": "BruceFletcher",
      "id": 22562,
      "node_id": "MDQ6VXNlcjIyNTYy",
      "avatar_url": "https://avatars.githubusercontent.com/u/22562?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BruceFletcher",
      "html_url": "https://github.com/BruceFletcher",
      "followers_url": "https://api.github.com/users/BruceFletcher/followers",
      "following_url": "https://api.github.com/users/BruceFletcher/following{/other_user}",
      "gists_url": "https://api.github.com/users/BruceFletcher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BruceFletcher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BruceFletcher/subscriptions",
      "organizations_url": "https://api.github.com/users/BruceFletcher/orgs",
      "repos_url": "https://api.github.com/users/BruceFletcher/repos",
      "events_url": "https://api.github.com/users/BruceFletcher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BruceFletcher/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-11-10T07:35:29Z",
    "updated_at": "2012-11-11T00:16:34Z",
    "closed_at": "2012-11-11T00:16:34Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Near the end of the 'getting started' section of http://expressjs.com/guide.html is the statement, \"The req and res are the exact same objects that node provides to you, thus you may invoke res.pipe(), req.on('data', callback) and anything else you would do without Express involved.\"\n\nIt then proceeds to show an example of calling res.send('Hello World'), which is not possible on \"the exact same objects that node provides to you\", because res.send() is an express function.  The response object is augmented, it's not exactly the same.\n\nThis is a problem in a getting started guide because the first thing I did was to look at nodejs.org for send() documentation.  It took me a good half hour to figure out that I was looking in the wrong place.  Not a great way to start out with express.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1411/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1411/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1410",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1410/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1410/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1410/events",
    "html_url": "https://github.com/expressjs/express/issues/1410",
    "id": 8220341,
    "node_id": "MDU6SXNzdWU4MjIwMzQx",
    "number": 1410,
    "title": "Node App works, nothing shows on browser",
    "user": {
      "login": "dkarigithu",
      "id": 472600,
      "node_id": "MDQ6VXNlcjQ3MjYwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/472600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dkarigithu",
      "html_url": "https://github.com/dkarigithu",
      "followers_url": "https://api.github.com/users/dkarigithu/followers",
      "following_url": "https://api.github.com/users/dkarigithu/following{/other_user}",
      "gists_url": "https://api.github.com/users/dkarigithu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dkarigithu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dkarigithu/subscriptions",
      "organizations_url": "https://api.github.com/users/dkarigithu/orgs",
      "repos_url": "https://api.github.com/users/dkarigithu/repos",
      "events_url": "https://api.github.com/users/dkarigithu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dkarigithu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2012-11-08T21:55:15Z",
    "updated_at": "2013-02-08T19:30:31Z",
    "closed_at": "2013-02-08T19:30:31Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I've been coding for the past hour, with no issue and about 20 minutes ago, I've been unable to reload my app on node. I keep refreshing the page and receive a 200 http error. Any else encountered the same issue?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1410/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1410/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1409",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1409/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1409/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1409/events",
    "html_url": "https://github.com/expressjs/express/issues/1409",
    "id": 8203884,
    "node_id": "MDU6SXNzdWU4MjAzODg0",
    "number": 1409,
    "title": "express version",
    "user": {
      "login": "Laboratory",
      "id": 1676506,
      "node_id": "MDQ6VXNlcjE2NzY1MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1676506?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laboratory",
      "html_url": "https://github.com/Laboratory",
      "followers_url": "https://api.github.com/users/Laboratory/followers",
      "following_url": "https://api.github.com/users/Laboratory/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laboratory/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laboratory/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laboratory/subscriptions",
      "organizations_url": "https://api.github.com/users/Laboratory/orgs",
      "repos_url": "https://api.github.com/users/Laboratory/repos",
      "events_url": "https://api.github.com/users/Laboratory/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laboratory/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-11-08T13:18:30Z",
    "updated_at": "2012-11-08T17:16:20Z",
    "closed_at": "2012-11-08T17:16:20Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Hey.\nNow npm express version is `3.0.1`.\nBut in `lib/express.js` Framework version is `3.0.0`.\nPlease fix.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1409/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1409/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1408",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1408/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1408/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1408/events",
    "html_url": "https://github.com/expressjs/express/pull/1408",
    "id": 8203674,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjkyODE5Mw==",
    "number": 1408,
    "title": "delete unused variables",
    "user": {
      "login": "Laboratory",
      "id": 1676506,
      "node_id": "MDQ6VXNlcjE2NzY1MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1676506?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laboratory",
      "html_url": "https://github.com/Laboratory",
      "followers_url": "https://api.github.com/users/Laboratory/followers",
      "following_url": "https://api.github.com/users/Laboratory/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laboratory/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laboratory/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laboratory/subscriptions",
      "organizations_url": "https://api.github.com/users/Laboratory/orgs",
      "repos_url": "https://api.github.com/users/Laboratory/repos",
      "events_url": "https://api.github.com/users/Laboratory/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laboratory/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2012-11-08T13:09:44Z",
    "updated_at": "2014-08-08T17:24:09Z",
    "closed_at": "2012-11-08T17:20:09Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1408",
      "html_url": "https://github.com/expressjs/express/pull/1408",
      "diff_url": "https://github.com/expressjs/express/pull/1408.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1408.patch",
      "merged_at": "2012-11-08T17:20:09Z"
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1408/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1408/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1407",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1407/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1407/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1407/events",
    "html_url": "https://github.com/expressjs/express/issues/1407",
    "id": 8199010,
    "node_id": "MDU6SXNzdWU4MTk5MDEw",
    "number": 1407,
    "title": "Skip formidable from bodyparsers",
    "user": {
      "login": "fatshotty",
      "id": 238659,
      "node_id": "MDQ6VXNlcjIzODY1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/238659?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fatshotty",
      "html_url": "https://github.com/fatshotty",
      "followers_url": "https://api.github.com/users/fatshotty/followers",
      "following_url": "https://api.github.com/users/fatshotty/following{/other_user}",
      "gists_url": "https://api.github.com/users/fatshotty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fatshotty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fatshotty/subscriptions",
      "organizations_url": "https://api.github.com/users/fatshotty/orgs",
      "repos_url": "https://api.github.com/users/fatshotty/repos",
      "events_url": "https://api.github.com/users/fatshotty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fatshotty/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2012-11-08T09:46:44Z",
    "updated_at": "2013-09-23T15:57:08Z",
    "closed_at": "2012-11-08T15:41:48Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello,\n\nis it possibile to skip Formidable in the body parser?\nI mean, I have my own endpoint for handling upload requests. So I don't need the internal Formidable\nhandler.\n\nIs it possibile to disable or skip Formidable parser?\n\nThanks\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1407/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1407/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1406",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1406/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1406/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1406/events",
    "html_url": "https://github.com/expressjs/express/pull/1406",
    "id": 8196832,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjkyNTEzNw==",
    "number": 1406,
    "title": "remove connect.static.send import from response.js",
    "user": {
      "login": "DmitryBochkarev",
      "id": 1196822,
      "node_id": "MDQ6VXNlcjExOTY4MjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1196822?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DmitryBochkarev",
      "html_url": "https://github.com/DmitryBochkarev",
      "followers_url": "https://api.github.com/users/DmitryBochkarev/followers",
      "following_url": "https://api.github.com/users/DmitryBochkarev/following{/other_user}",
      "gists_url": "https://api.github.com/users/DmitryBochkarev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DmitryBochkarev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DmitryBochkarev/subscriptions",
      "organizations_url": "https://api.github.com/users/DmitryBochkarev/orgs",
      "repos_url": "https://api.github.com/users/DmitryBochkarev/repos",
      "events_url": "https://api.github.com/users/DmitryBochkarev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DmitryBochkarev/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2012-11-08T07:44:05Z",
    "updated_at": "2014-08-06T14:52:00Z",
    "closed_at": "2012-11-08T17:20:21Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1406",
      "html_url": "https://github.com/expressjs/express/pull/1406",
      "diff_url": "https://github.com/expressjs/express/pull/1406.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1406.patch",
      "merged_at": "2012-11-08T17:20:20Z"
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1406/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1406/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1405",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1405/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1405/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1405/events",
    "html_url": "https://github.com/expressjs/express/pull/1405",
    "id": 8186967,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjkyMDI5Mw==",
    "number": 1405,
    "title": "Binary generates 1 page app by default",
    "user": {
      "login": "juzerali",
      "id": 1373803,
      "node_id": "MDQ6VXNlcjEzNzM4MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1373803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juzerali",
      "html_url": "https://github.com/juzerali",
      "followers_url": "https://api.github.com/users/juzerali/followers",
      "following_url": "https://api.github.com/users/juzerali/following{/other_user}",
      "gists_url": "https://api.github.com/users/juzerali/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juzerali/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juzerali/subscriptions",
      "organizations_url": "https://api.github.com/users/juzerali/orgs",
      "repos_url": "https://api.github.com/users/juzerali/repos",
      "events_url": "https://api.github.com/users/juzerali/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juzerali/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2012-11-07T21:37:32Z",
    "updated_at": "2014-07-05T00:19:48Z",
    "closed_at": "2012-11-15T11:04:06Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1405",
      "html_url": "https://github.com/expressjs/express/pull/1405",
      "diff_url": "https://github.com/expressjs/express/pull/1405.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1405.patch",
      "merged_at": null
    },
    "body": "Resolves #1323. Binary now generates 1 page app by default. Provided a switch -Y to generate directory structure.\n\n```\nUsage: express [options]\n\nOptions:\n\n-h, --help          output usage information\n-V, --version       output the version number\n-s, --sessions      add session support\n-e, --ejs           add ejs engine support (defaults to jade)\n-J, --jshtml        add jshtml engine support (defaults to jade)\n-H, --hogan         add hogan.js engine support\n-c, --css <engine>  add stylesheet <engine> support (less|stylus) (defaults to plain css)\n-f, --force         force on non-empty directory\n-Y, --struct        Make directory structure, if not used all the server code will be in app.js\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1405/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1405/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1404",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1404/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1404/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1404/events",
    "html_url": "https://github.com/expressjs/express/issues/1404",
    "id": 8167644,
    "node_id": "MDU6SXNzdWU4MTY3NjQ0",
    "number": 1404,
    "title": "Implicit .use(router) call when defining routes",
    "user": {
      "login": "eldargab",
      "id": 762157,
      "node_id": "MDQ6VXNlcjc2MjE1Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/762157?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eldargab",
      "html_url": "https://github.com/eldargab",
      "followers_url": "https://api.github.com/users/eldargab/followers",
      "following_url": "https://api.github.com/users/eldargab/following{/other_user}",
      "gists_url": "https://api.github.com/users/eldargab/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eldargab/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eldargab/subscriptions",
      "organizations_url": "https://api.github.com/users/eldargab/orgs",
      "repos_url": "https://api.github.com/users/eldargab/repos",
      "events_url": "https://api.github.com/users/eldargab/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eldargab/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2012-11-07T11:49:22Z",
    "updated_at": "2013-05-28T14:24:05Z",
    "closed_at": "2012-11-07T17:22:24Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "It was pretty unexpected\nhttps://github.com/visionmedia/express/blob/master/lib/application.js#L409\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1404/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1404/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1403",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1403/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1403/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1403/events",
    "html_url": "https://github.com/expressjs/express/issues/1403",
    "id": 8166673,
    "node_id": "MDU6SXNzdWU4MTY2Njcz",
    "number": 1403,
    "title": "Missing implied OPTIONS handling",
    "user": {
      "login": "zerodivisi0n",
      "id": 687694,
      "node_id": "MDQ6VXNlcjY4NzY5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/687694?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zerodivisi0n",
      "html_url": "https://github.com/zerodivisi0n",
      "followers_url": "https://api.github.com/users/zerodivisi0n/followers",
      "following_url": "https://api.github.com/users/zerodivisi0n/following{/other_user}",
      "gists_url": "https://api.github.com/users/zerodivisi0n/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zerodivisi0n/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zerodivisi0n/subscriptions",
      "organizations_url": "https://api.github.com/users/zerodivisi0n/orgs",
      "repos_url": "https://api.github.com/users/zerodivisi0n/repos",
      "events_url": "https://api.github.com/users/zerodivisi0n/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zerodivisi0n/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2012-11-07T11:05:01Z",
    "updated_at": "2012-11-08T21:52:45Z",
    "closed_at": "2012-11-08T21:52:45Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Express 2 has a built in handling of OPTIONS requests. [Here it is](https://github.com/visionmedia/express/blob/2.x/lib/router/index.js#L216).\nHowever, this code is not included in the Express 3. Why? These requests returns 404.\n\nThis complicates the development of cross-domain API backends. Chrome ignores these responses, but Firefox returns AJAX error.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1403/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1403/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1402",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1402/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1402/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1402/events",
    "html_url": "https://github.com/expressjs/express/issues/1402",
    "id": 8117285,
    "node_id": "MDU6SXNzdWU4MTE3Mjg1",
    "number": 1402,
    "title": "Code error in npm",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2012-11-05T20:18:31Z",
    "updated_at": "2013-02-11T22:30:32Z",
    "closed_at": "2013-02-11T22:30:32Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "while the code in github is correct, retrieving data from npm contains the following code error:\n\nline 467 of lib/application.js\n\nutils.(opts, this.locals);\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1402/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1402/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1401",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1401/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1401/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1401/events",
    "html_url": "https://github.com/expressjs/express/issues/1401",
    "id": 8115637,
    "node_id": "MDU6SXNzdWU4MTE1NjM3",
    "number": 1401,
    "title": "connect.json should be exposed, just like other middleware",
    "user": {
      "login": "tommedema",
      "id": 331833,
      "node_id": "MDQ6VXNlcjMzMTgzMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331833?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tommedema",
      "html_url": "https://github.com/tommedema",
      "followers_url": "https://api.github.com/users/tommedema/followers",
      "following_url": "https://api.github.com/users/tommedema/following{/other_user}",
      "gists_url": "https://api.github.com/users/tommedema/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tommedema/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tommedema/subscriptions",
      "organizations_url": "https://api.github.com/users/tommedema/orgs",
      "repos_url": "https://api.github.com/users/tommedema/repos",
      "events_url": "https://api.github.com/users/tommedema/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tommedema/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2012-11-05T19:28:47Z",
    "updated_at": "2012-11-05T19:40:50Z",
    "closed_at": "2012-11-05T19:32:52Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm using require('connect').json rather than the default bodyparser middleware because I only want to parse JSON.\n\nCurrently I need to install connect and then require('connect').json to access to parser.\n\nSince you are exposing other connect middleware such as static, would it not also make sense to expose the json middleware?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1401/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1401/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1400",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1400/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1400/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1400/events",
    "html_url": "https://github.com/expressjs/express/issues/1400",
    "id": 8105855,
    "node_id": "MDU6SXNzdWU4MTA1ODU1",
    "number": 1400,
    "title": "Remove 'alpha' from readme",
    "user": {
      "login": "ForbesLindesay",
      "id": 1260646,
      "node_id": "MDQ6VXNlcjEyNjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1260646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ForbesLindesay",
      "html_url": "https://github.com/ForbesLindesay",
      "followers_url": "https://api.github.com/users/ForbesLindesay/followers",
      "following_url": "https://api.github.com/users/ForbesLindesay/following{/other_user}",
      "gists_url": "https://api.github.com/users/ForbesLindesay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ForbesLindesay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ForbesLindesay/subscriptions",
      "organizations_url": "https://api.github.com/users/ForbesLindesay/orgs",
      "repos_url": "https://api.github.com/users/ForbesLindesay/repos",
      "events_url": "https://api.github.com/users/ForbesLindesay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ForbesLindesay/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2012-11-05T14:19:27Z",
    "updated_at": "2012-11-05T17:09:46Z",
    "closed_at": "2012-11-05T17:09:46Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "The readme still refers to `the 3.0 alpha` even though 3.0.1 is already released.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1400/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1400/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1399",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1399/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1399/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1399/events",
    "html_url": "https://github.com/expressjs/express/issues/1399",
    "id": 8095556,
    "node_id": "MDU6SXNzdWU4MDk1NTU2",
    "number": 1399,
    "title": "In the API Reference, wrong RexExp for application routing example",
    "user": {
      "login": "sebascabot",
      "id": 198871,
      "node_id": "MDQ6VXNlcjE5ODg3MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/198871?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sebascabot",
      "html_url": "https://github.com/sebascabot",
      "followers_url": "https://api.github.com/users/sebascabot/followers",
      "following_url": "https://api.github.com/users/sebascabot/following{/other_user}",
      "gists_url": "https://api.github.com/users/sebascabot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sebascabot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sebascabot/subscriptions",
      "organizations_url": "https://api.github.com/users/sebascabot/orgs",
      "repos_url": "https://api.github.com/users/sebascabot/repos",
      "events_url": "https://api.github.com/users/sebascabot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sebascabot/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-11-05T02:56:02Z",
    "updated_at": "2012-11-06T01:08:54Z",
    "closed_at": "2012-11-06T01:08:54Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In the [application routing section](http://expressjs.com/api.html#app.VERB) of the API Reference\n\nIn the second example, the provided regular expression\n\n``` javascript\napp.get(/^\\/commits\\/(\\d+)(?:\\.\\.(\\d+))?$/, function(req, res){\n...\n}\n```\n\nis suppose to match\n- \"GET /commits/71dbb9c\"\n- \"GET /commits/71dbb9c..4c084f9\"\n\nbut it fail, since since \\d only match [0-9] and not the hex digit [0-9a-f].\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1399/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1399/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1398",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1398/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1398/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1398/events",
    "html_url": "https://github.com/expressjs/express/issues/1398",
    "id": 8088065,
    "node_id": "MDU6SXNzdWU4MDg4MDY1",
    "number": 1398,
    "title": "add HTTP OPTIONS handler in CORS example",
    "user": {
      "login": "bodokaiser",
      "id": 1780466,
      "node_id": "MDQ6VXNlcjE3ODA0NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1780466?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bodokaiser",
      "html_url": "https://github.com/bodokaiser",
      "followers_url": "https://api.github.com/users/bodokaiser/followers",
      "following_url": "https://api.github.com/users/bodokaiser/following{/other_user}",
      "gists_url": "https://api.github.com/users/bodokaiser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bodokaiser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bodokaiser/subscriptions",
      "organizations_url": "https://api.github.com/users/bodokaiser/orgs",
      "repos_url": "https://api.github.com/users/bodokaiser/repos",
      "events_url": "https://api.github.com/users/bodokaiser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bodokaiser/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-11-04T12:23:49Z",
    "updated_at": "2012-11-04T21:22:52Z",
    "closed_at": "2012-11-04T21:22:08Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello,\n\nwhen using CORS the browser tries to do a OPTIONS request to check cross domain policy. This is not handled from express itself and it would be helpful if you add it to you example.\n\n```\napp.all('*', function(req, res, next) {\n    res.header('Access-Control-Allow-Origin', 'http://node.enabre.com:3000');\n    res.header('Access-Control-Allow-Methods', 'HEAD, GET, POST, PUT, DELETE, OPTIONS');\n    res.header('Access-Control-Allow-Headers', 'Content-Type, X-Requested-With, Origin, Accept');\n    res.header('Access-Control-Allow-Credentials', 'true');\n\n    if (req.method.toLowerCase() === 'options') {\n        res.send(200);\n    } else {\n        next();\n    }\n});\n```\n\nsource: http://stackoverflow.com/questions/13218174/cors-put-not-found-with-jquery-ajax\n\nRegards, bodo\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1398/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1398/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1397",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1397/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1397/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1397/events",
    "html_url": "https://github.com/expressjs/express/issues/1397",
    "id": 8087039,
    "node_id": "MDU6SXNzdWU4MDg3MDM5",
    "number": 1397,
    "title": "app.VERB return Router making chaining app methods impossible",
    "user": {
      "login": "fgalassi",
      "id": 49930,
      "node_id": "MDQ6VXNlcjQ5OTMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/49930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fgalassi",
      "html_url": "https://github.com/fgalassi",
      "followers_url": "https://api.github.com/users/fgalassi/followers",
      "following_url": "https://api.github.com/users/fgalassi/following{/other_user}",
      "gists_url": "https://api.github.com/users/fgalassi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fgalassi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fgalassi/subscriptions",
      "organizations_url": "https://api.github.com/users/fgalassi/orgs",
      "repos_url": "https://api.github.com/users/fgalassi/repos",
      "events_url": "https://api.github.com/users/fgalassi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fgalassi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2012-11-04T09:45:37Z",
    "updated_at": "2012-11-04T20:29:06Z",
    "closed_at": "2012-11-04T20:29:06Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Why app.VERB return the Router object?\nFor consistency would be better to return the app object making chaining possible?\nIf instead something route specific has to be returned, why not the Route object?\n\nThank you\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1397/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1397/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1396",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1396/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1396/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1396/events",
    "html_url": "https://github.com/expressjs/express/issues/1396",
    "id": 8080045,
    "node_id": "MDU6SXNzdWU4MDgwMDQ1",
    "number": 1396,
    "title": "using an express app as a middleware itself",
    "user": {
      "login": "mirkokiefer",
      "id": 315252,
      "node_id": "MDQ6VXNlcjMxNTI1Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/315252?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mirkokiefer",
      "html_url": "https://github.com/mirkokiefer",
      "followers_url": "https://api.github.com/users/mirkokiefer/followers",
      "following_url": "https://api.github.com/users/mirkokiefer/following{/other_user}",
      "gists_url": "https://api.github.com/users/mirkokiefer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mirkokiefer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mirkokiefer/subscriptions",
      "organizations_url": "https://api.github.com/users/mirkokiefer/orgs",
      "repos_url": "https://api.github.com/users/mirkokiefer/repos",
      "events_url": "https://api.github.com/users/mirkokiefer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mirkokiefer/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2012-11-03T15:12:33Z",
    "updated_at": "2012-11-04T06:43:38Z",
    "closed_at": "2012-11-03T20:47:01Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Is it possible to use a configured express app as a connect middleware itself?\n\nI'd like to write a module that makes use of express but is only intended to be integrated as middleware.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1396/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1396/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1395",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1395/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1395/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1395/events",
    "html_url": "https://github.com/expressjs/express/issues/1395",
    "id": 8044849,
    "node_id": "MDU6SXNzdWU4MDQ0ODQ5",
    "number": 1395,
    "title": "Recent changes to router/index.js cause code failure for me",
    "user": {
      "login": "nyteshade",
      "id": 225558,
      "node_id": "MDQ6VXNlcjIyNTU1OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/225558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nyteshade",
      "html_url": "https://github.com/nyteshade",
      "followers_url": "https://api.github.com/users/nyteshade/followers",
      "following_url": "https://api.github.com/users/nyteshade/following{/other_user}",
      "gists_url": "https://api.github.com/users/nyteshade/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nyteshade/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nyteshade/subscriptions",
      "organizations_url": "https://api.github.com/users/nyteshade/orgs",
      "repos_url": "https://api.github.com/users/nyteshade/repos",
      "events_url": "https://api.github.com/users/nyteshade/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nyteshade/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2012-11-01T21:55:19Z",
    "updated_at": "2013-09-08T04:40:01Z",
    "closed_at": "2013-09-08T04:40:01Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "So I recently updated and my code stopped working. You've made this change in router/index.js that changes the following. I had to revert this code locally. What was the purpose of this? Can you give me a recommended way to solve this problem? Why the arbitrary limit of 4?\n## router/index.js\n\n``` javascript\n         if (fn.length < 4) return callbacks(err);\n         fn(err, req, res, callbacks);\n       } else if (fn) {\n-        return fn(req, res, callbacks);\n+        if (fn.length < 4) return fn(req, res, callbacks);\n+        callbacks();\n       } else {\n         nextRoute(err);\n       }\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1395/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1395/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1394",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1394/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1394/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1394/events",
    "html_url": "https://github.com/expressjs/express/pull/1394",
    "id": 8036650,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg1MjIxMg==",
    "number": 1394,
    "title": "'views' setting for mounted apps should inherit from parent app",
    "user": {
      "login": "evdb",
      "id": 187630,
      "node_id": "MDQ6VXNlcjE4NzYzMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/187630?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/evdb",
      "html_url": "https://github.com/evdb",
      "followers_url": "https://api.github.com/users/evdb/followers",
      "following_url": "https://api.github.com/users/evdb/following{/other_user}",
      "gists_url": "https://api.github.com/users/evdb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/evdb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/evdb/subscriptions",
      "organizations_url": "https://api.github.com/users/evdb/orgs",
      "repos_url": "https://api.github.com/users/evdb/repos",
      "events_url": "https://api.github.com/users/evdb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/evdb/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-11-01T17:17:23Z",
    "updated_at": "2014-06-27T12:59:06Z",
    "closed_at": "2013-08-15T15:18:07Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1394",
      "html_url": "https://github.com/expressjs/express/pull/1394",
      "diff_url": "https://github.com/expressjs/express/pull/1394.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1394.patch",
      "merged_at": "2013-08-15T15:18:07Z"
    },
    "body": "Attached a commit with a failing test case, and two commented out alternatives for making it pass. Option 1 is my preferred as it continues the behaviour we had in express 2.x. Option 2 would require a bit of documentation to make it clear that some settings are not inherited.\n\nOption 1 would probably involve some thinking about which settings should be inherited. Perhaps they all should? I suspect that is what is wanted, in line with #426.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1394/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1394/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1393",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1393/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1393/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1393/events",
    "html_url": "https://github.com/expressjs/express/issues/1393",
    "id": 8011175,
    "node_id": "MDU6SXNzdWU4MDExMTc1",
    "number": 1393,
    "title": "Error: EBADF, close",
    "user": {
      "login": "kc-dot-io",
      "id": 18702,
      "node_id": "MDQ6VXNlcjE4NzAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/18702?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kc-dot-io",
      "html_url": "https://github.com/kc-dot-io",
      "followers_url": "https://api.github.com/users/kc-dot-io/followers",
      "following_url": "https://api.github.com/users/kc-dot-io/following{/other_user}",
      "gists_url": "https://api.github.com/users/kc-dot-io/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kc-dot-io/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kc-dot-io/subscriptions",
      "organizations_url": "https://api.github.com/users/kc-dot-io/orgs",
      "repos_url": "https://api.github.com/users/kc-dot-io/repos",
      "events_url": "https://api.github.com/users/kc-dot-io/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kc-dot-io/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2012-10-31T18:29:56Z",
    "updated_at": "2012-11-06T23:33:50Z",
    "closed_at": "2012-11-06T23:33:50Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Seeing a ton of this in the express@3.0 logs all the sudden:\n\n`Error: EBADF, close`\n\nIt wasn't much of an issue but all the sudden today express is throwing 500s for static files public/javascript/whatever.js and I'm seeing a ton of console messages about files 404ing with no consistency to what or what. My only guess is this is IO related.  I reinstalled express and all my node modules but I'm not sure what else to try.\n\nAny help on where to start debugging this would be greatly appreciated. Node -v 0.6.14 & 0.8.11\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1393/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1393/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1392",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1392/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1392/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1392/events",
    "html_url": "https://github.com/expressjs/express/issues/1392",
    "id": 7986730,
    "node_id": "MDU6SXNzdWU3OTg2NzMw",
    "number": 1392,
    "title": "Way to handle multiple controllers on multiple vhosts",
    "user": {
      "login": "norman784",
      "id": 204656,
      "node_id": "MDQ6VXNlcjIwNDY1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/204656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/norman784",
      "html_url": "https://github.com/norman784",
      "followers_url": "https://api.github.com/users/norman784/followers",
      "following_url": "https://api.github.com/users/norman784/following{/other_user}",
      "gists_url": "https://api.github.com/users/norman784/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/norman784/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/norman784/subscriptions",
      "organizations_url": "https://api.github.com/users/norman784/orgs",
      "repos_url": "https://api.github.com/users/norman784/repos",
      "events_url": "https://api.github.com/users/norman784/events{/privacy}",
      "received_events_url": "https://api.github.com/users/norman784/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2012-10-31T01:05:35Z",
    "updated_at": "2012-11-01T12:40:37Z",
    "closed_at": "2012-10-31T15:49:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Dunno if the best approach (if not, if there is another much better way are you welcome).\n\nFor now I have my controllers in this way (using almost the same approach that in mvc example)\n\n```\nmodules/\n    campaings/\n        views/\n        api.js\n        index.js\n    users\n        views/\n        api.js\n        index.js\n```\n\nLets says that my folder struct are this way, so the idea its to have an modular app that I can add or remove modules without adding so much folders. Then I want to put all the api.js methods in the vhost api.myapp.com and index goes to myapp.com.\n\nBut the issue its that the middleware vhost only takes the first instance that I set it, in this case only the routes from campaings/api.js and campaings/index.js.\n\nMy boot.js looks like\n\n```\nvar express = require('express')\n    , fs    = require('fs')\n    , lingo = require('lingo');\n\nmodule.exports = function(parent, options) {\n    var verbose = options.verbose;\n    fs.readdirSync(__dirname + '/../modules/').forEach(function(module){\n        verbose && console.log('\\n %s:', module);\n        fs.readdirSync(__dirname + '/../modules/' + module + '/').forEach(function(name){\n            verbose && console.log('\\n %s/%s:', module, name);\n\n            var obj         = require(__dirname + '/../modules/' + module + '/' + name)\n                , name      = obj.name || name\n                , prefix    = obj.prefix || ''\n                , app       = express()\n                , method\n                , path;\n\n            // allow specifying the view engine\n            if (obj.engine) app.set('views engine', obj.engine);\n            app.set('views', __dirname + '/../modules/' + module + '/views');\n\n            // set restrictions if not setted before\n            obj.restrictions = obj.restrictions || {};\n\n            // before middleware support\n            if (obj.before) {\n                path = '/' + lingo.en.singularize(module) + '/*';\n                app.all(path, obj.before);\n                verbose && console.log('    ALL %s -> before', path);\n                path = '/' + module + '/*';\n                app.all(path, obj.before);\n                verbose && console.log('    ALL %s -> before', path);\n            }\n\n            // generate routes based\n            // on the exported methods\n            for (var key in obj) {\n                // \"reserved\" exports\n                if (~['name', 'prefix', 'engine', 'before', 'vhost', 'restrictions'].indexOf(key)) continue;\n                // route exports\n                switch (key) {\n                    case 'show':\n                        method  = 'get';\n                        path    = '/' + lingo.en.singularize(module) + '/:id';\n                        break;\n                    case 'list':\n                        method  = 'get'\n                        path    = '/' + module;\n                        break;\n                    case 'edit':\n                        method  = 'get';\n                        path    = '/' + lingo.en.singularize(module) + '/:id/edit';\n                        break;\n                    case 'update' :\n                        method  = 'put';\n                        path    = '/' + lingo.en.singularize(module) + '/:id';\n                        break;\n                    case 'create':\n                        method  = 'post';\n                        path    = '/' + lingo.en.singularize(module);\n                        break;\n                    case 'delete' :\n                        method  = 'delete';\n                        path    = '/' + lingo.en.singularize(module) + '/:id';\n                        break;\n                    default:\n                        throw new Error('unrecognized route:' + module + '/' + name + '.' + key);\n                }\n\n                path = prefix + path;\n\n                verbose && console.log('     %s %s %s -> %s', method.toUpperCase(), module, path, key);\n\n                var args = [path, obj[key]];\n\n                if (Array.isArray(obj.restrictions[key])) {\n                    args = obj.restrictions[key].unshift(path).push(obj[key]);\n                }\n\n                app[method].apply(app, args);\n            }\n\n            if ('string' === typeof obj.vhost) {\n                if (obj.vhost.length > 0) {\n                    verbose && console.log('     %s %s -> %s', obj.vhost, module, path);\n                    parent.use(express.vhost(obj.vhost, app));\n                } else {\n                    throw new Error('declared but empty vhost on ' + module + '/' + name);\n                }\n            } else {\n                verbose && console.log('     %s -> %s', module, path);\n                parent.use(app);\n            }\n        });\n    });\n}\n```\n\nWith only one fast scan I get all the files and set it, but seems that is not the best approach because isn't working as I expects. \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1392/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1392/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1391",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1391/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1391/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1391/events",
    "html_url": "https://github.com/expressjs/express/issues/1391",
    "id": 7947620,
    "node_id": "MDU6SXNzdWU3OTQ3NjIw",
    "number": 1391,
    "title": "Express 404s on folders outside of static files",
    "user": {
      "login": "chrisabrams",
      "id": 527740,
      "node_id": "MDQ6VXNlcjUyNzc0MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/527740?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chrisabrams",
      "html_url": "https://github.com/chrisabrams",
      "followers_url": "https://api.github.com/users/chrisabrams/followers",
      "following_url": "https://api.github.com/users/chrisabrams/following{/other_user}",
      "gists_url": "https://api.github.com/users/chrisabrams/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chrisabrams/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chrisabrams/subscriptions",
      "organizations_url": "https://api.github.com/users/chrisabrams/orgs",
      "repos_url": "https://api.github.com/users/chrisabrams/repos",
      "events_url": "https://api.github.com/users/chrisabrams/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chrisabrams/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2012-10-29T18:58:19Z",
    "updated_at": "2012-11-05T17:57:57Z",
    "closed_at": "2012-10-29T19:37:29Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When I try to access the route \"/settings\" in my browser, I get \"cannot GET /settings\" and a 404 from express. Express is not letting my backbone app use the /settings route for a settings page in my app. I have a setup with the following directories for my app:\n- app\n- public\n- settings\n- test\n\nI am letting express know the path to my static files:\n\n```\napp.use(express.static(__dirname + '/public'));\n```\n\nI only have two routes as I am using Backbone to handle the routing on client-side.\n\n```\napp.get('/', function(req, res) {\nres.render('index');\n})\n\napp.all('*', function (req, res) {\n   res.status(404);\n   res.render('errors/404'); \n});\n```\n\nTo double-check things I then went to /test and also got a \"cannot GET /test\" and saw the 404 in my console.\n\nHow can I tell express to only worry about /public and pretend those others folders do not exist so I can use them in my client app? I do not want access to these folders - I want express to act like they do not exist and just serve the index page like all other routes.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1391/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1391/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1390",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1390/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1390/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1390/events",
    "html_url": "https://github.com/expressjs/express/issues/1390",
    "id": 7921166,
    "node_id": "MDU6SXNzdWU3OTIxMTY2",
    "number": 1390,
    "title": "Chainable methods",
    "user": {
      "login": "71104",
      "id": 1778989,
      "node_id": "MDQ6VXNlcjE3Nzg5ODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1778989?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/71104",
      "html_url": "https://github.com/71104",
      "followers_url": "https://api.github.com/users/71104/followers",
      "following_url": "https://api.github.com/users/71104/following{/other_user}",
      "gists_url": "https://api.github.com/users/71104/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/71104/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/71104/subscriptions",
      "organizations_url": "https://api.github.com/users/71104/orgs",
      "repos_url": "https://api.github.com/users/71104/repos",
      "events_url": "https://api.github.com/users/71104/events{/privacy}",
      "received_events_url": "https://api.github.com/users/71104/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2012-10-28T17:51:49Z",
    "updated_at": "2013-02-20T16:22:58Z",
    "closed_at": "2013-02-20T16:22:58Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Probably this is more a documentation issue.\n\nAfter a quick glance, some response methods don't seem to be documented as chainable, while I'd love them to be.\n\ne.g. I'd like to write something like this:\n\n```\nres.status(404).type('image/png').sendfile('png_file_without_extension');\n```\n\nBut the status method seems to be the only one documented as chainable.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1390/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1390/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1389",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1389/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1389/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1389/events",
    "html_url": "https://github.com/expressjs/express/pull/1389",
    "id": 7917487,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjc5ODUwOQ==",
    "number": 1389,
    "title": "Add view lookup paths",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2012-10-28T07:18:18Z",
    "updated_at": "2014-06-29T01:35:43Z",
    "closed_at": "2012-10-28T17:57:09Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1389",
      "html_url": "https://github.com/expressjs/express/pull/1389",
      "diff_url": "https://github.com/expressjs/express/pull/1389.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1389.patch",
      "merged_at": null
    },
    "body": "Solves #533\n- Default behaviour persists, you can still work with just one views directory, by setting it to `app.set('views', myDirectory + 'views');`\n- Add directories using `app.viewPaths.push(myViewsDirectory);`\n- No other function were added, if you want to remove a `viewPath`, you must manipulate the array.\n- No tests where added, need to check if this is the expected behaviour and functionality.\n\nPersonal Notes: I spent a great deal of time trying to enable this functionality without touching express' code:\n1. First by reading the code and the docs (hope I haven't missed the typical obvious reference and the feature existed :P).\n2. Then I tried to create a proxy on  `app.render` by issuing an .apply(). Problem with this approach is that you need to clone the `app` object of express if you want to keep the global setting `views` stable.\n3. Then I started to think on creating my own lib `app.render()` as an override to the one of express (well, more of a 4 liner constructing View and issuing the call to render()), but any future change to express could be a nightmare to maintain.\n4. Then I stumbled over this open issue, I forked, coded and I'm in this PR.... So please guys, it'd be so nice having it as a feature of 3.0.x :D \n\nIf that is what you need, let me know, to update the gh-page and related docs. If not, let me know also, to have this done ASAP.\n\nH.- \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1389/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1389/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1388",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1388/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1388/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1388/events",
    "html_url": "https://github.com/expressjs/express/pull/1388",
    "id": 7913734,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjc5NzM0Mw==",
    "number": 1388,
    "title": "remove unused variables",
    "user": {
      "login": "defunctzombie",
      "id": 84792,
      "node_id": "MDQ6VXNlcjg0Nzky",
      "avatar_url": "https://avatars.githubusercontent.com/u/84792?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/defunctzombie",
      "html_url": "https://github.com/defunctzombie",
      "followers_url": "https://api.github.com/users/defunctzombie/followers",
      "following_url": "https://api.github.com/users/defunctzombie/following{/other_user}",
      "gists_url": "https://api.github.com/users/defunctzombie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/defunctzombie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/defunctzombie/subscriptions",
      "organizations_url": "https://api.github.com/users/defunctzombie/orgs",
      "repos_url": "https://api.github.com/users/defunctzombie/repos",
      "events_url": "https://api.github.com/users/defunctzombie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/defunctzombie/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-10-27T20:04:08Z",
    "updated_at": "2014-08-06T15:16:51Z",
    "closed_at": "2012-10-27T20:10:14Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1388",
      "html_url": "https://github.com/expressjs/express/pull/1388",
      "diff_url": "https://github.com/expressjs/express/pull/1388.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1388.patch",
      "merged_at": "2012-10-27T20:10:14Z"
    },
    "body": "Tests and examples with unused variables are unchanged.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1388/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1388/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1387",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1387/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1387/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1387/events",
    "html_url": "https://github.com/expressjs/express/pull/1387",
    "id": 7883385,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjc4MzIyNw==",
    "number": 1387,
    "title": "Update Readme.md",
    "user": {
      "login": "valllabh",
      "id": 1380940,
      "node_id": "MDQ6VXNlcjEzODA5NDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1380940?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/valllabh",
      "html_url": "https://github.com/valllabh",
      "followers_url": "https://api.github.com/users/valllabh/followers",
      "following_url": "https://api.github.com/users/valllabh/following{/other_user}",
      "gists_url": "https://api.github.com/users/valllabh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/valllabh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/valllabh/subscriptions",
      "organizations_url": "https://api.github.com/users/valllabh/orgs",
      "repos_url": "https://api.github.com/users/valllabh/repos",
      "events_url": "https://api.github.com/users/valllabh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/valllabh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2012-10-26T06:54:16Z",
    "updated_at": "2014-08-06T16:14:46Z",
    "closed_at": "2012-10-26T13:44:54Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1387",
      "html_url": "https://github.com/expressjs/express/pull/1387",
      "diff_url": "https://github.com/expressjs/express/pull/1387.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1387.patch",
      "merged_at": "2012-10-26T13:44:54Z"
    },
    "body": "Text alignment in Contributors list\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1387/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1387/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1386",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1386/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1386/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1386/events",
    "html_url": "https://github.com/expressjs/express/issues/1386",
    "id": 7880810,
    "node_id": "MDU6SXNzdWU3ODgwODEw",
    "number": 1386,
    "title": "res.locals overrides 'options' passed to view engine function",
    "user": {
      "login": "defunctzombie",
      "id": 84792,
      "node_id": "MDQ6VXNlcjg0Nzky",
      "avatar_url": "https://avatars.githubusercontent.com/u/84792?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/defunctzombie",
      "html_url": "https://github.com/defunctzombie",
      "followers_url": "https://api.github.com/users/defunctzombie/followers",
      "following_url": "https://api.github.com/users/defunctzombie/following{/other_user}",
      "gists_url": "https://api.github.com/users/defunctzombie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/defunctzombie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/defunctzombie/subscriptions",
      "organizations_url": "https://api.github.com/users/defunctzombie/orgs",
      "repos_url": "https://api.github.com/users/defunctzombie/repos",
      "events_url": "https://api.github.com/users/defunctzombie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/defunctzombie/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 12,
    "created_at": "2012-10-26T02:31:28Z",
    "updated_at": "2016-05-12T14:44:33Z",
    "closed_at": "2013-11-28T00:17:25Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "The view engine function has the following prototype:\n\n``` js\nfn(path, options, cb);\n```\n\nOptions would be an object which contains the `settings`(which are the app settings) and also the locals. However, if you set locals using `res.locals.settings = something` then these locals are also added to this object and in the case I just described will override the app settings.\n\nEither this object is not really the options (which it seems like it is) or the settings of the locals should not be overriding the properties of this object.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1386/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1386/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1385",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1385/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1385/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1385/events",
    "html_url": "https://github.com/expressjs/express/issues/1385",
    "id": 7855298,
    "node_id": "MDU6SXNzdWU3ODU1Mjk4",
    "number": 1385,
    "title": "Issue starting up express",
    "user": {
      "login": "dkarigithu",
      "id": 472600,
      "node_id": "MDQ6VXNlcjQ3MjYwMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/472600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dkarigithu",
      "html_url": "https://github.com/dkarigithu",
      "followers_url": "https://api.github.com/users/dkarigithu/followers",
      "following_url": "https://api.github.com/users/dkarigithu/following{/other_user}",
      "gists_url": "https://api.github.com/users/dkarigithu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dkarigithu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dkarigithu/subscriptions",
      "organizations_url": "https://api.github.com/users/dkarigithu/orgs",
      "repos_url": "https://api.github.com/users/dkarigithu/repos",
      "events_url": "https://api.github.com/users/dkarigithu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dkarigithu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2012-10-25T10:57:44Z",
    "updated_at": "2012-11-08T22:16:15Z",
    "closed_at": "2012-11-08T22:16:15Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I've been running express 3.0.0 for a while now but today morning I've had issues everytime I run node app I ge the following error:\n\n/Users/dkarigithu/Desktop/iSafari/app.js:12\nvar app = express();\n          ^\nTypeError: object is not a function\n    at Object.<anonymous> (/Users/dkarigithu/Desktop/iSafari/app.js:12:11)\n    at Module._compile (module.js:449:26)\n    at Object.Module._extensions..js (module.js:467:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Module.runMain (module.js:492:10)\n    at process.startup.processNextTick.process._tickCallback (node.js:244:9)\n\nI've tried reinstalling express and checked the node_modules forder and all the dependencies are installed. Is there something I'm missing or is anyone experiencing the same issue?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1385/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1385/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1384",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1384/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1384/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1384/events",
    "html_url": "https://github.com/expressjs/express/issues/1384",
    "id": 7836595,
    "node_id": "MDU6SXNzdWU3ODM2NTk1",
    "number": 1384,
    "title": "Add app.redirect shortcut",
    "user": {
      "login": "seanmonstar",
      "id": 51479,
      "node_id": "MDQ6VXNlcjUxNDc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/51479?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seanmonstar",
      "html_url": "https://github.com/seanmonstar",
      "followers_url": "https://api.github.com/users/seanmonstar/followers",
      "following_url": "https://api.github.com/users/seanmonstar/following{/other_user}",
      "gists_url": "https://api.github.com/users/seanmonstar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seanmonstar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seanmonstar/subscriptions",
      "organizations_url": "https://api.github.com/users/seanmonstar/orgs",
      "repos_url": "https://api.github.com/users/seanmonstar/repos",
      "events_url": "https://api.github.com/users/seanmonstar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seanmonstar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2012-10-24T18:33:48Z",
    "updated_at": "2013-04-03T22:10:22Z",
    "closed_at": "2013-04-03T22:10:22Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I get this boilerplater a lot:\n\n``` js\napp.get(someRoute, function(req, res) {\n  res.redirect(otherRoute);\n});\n```\n\nHow about a shortcut like this:\n\n``` js\napp.redirect(someRoute, otherRoute);\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1384/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1384/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1383",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1383/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1383/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1383/events",
    "html_url": "https://github.com/expressjs/express/issues/1383",
    "id": 7815818,
    "node_id": "MDU6SXNzdWU3ODE1ODE4",
    "number": 1383,
    "title": "Expose `View` constructor via `express` module",
    "user": {
      "login": "ericf",
      "id": 29096,
      "node_id": "MDQ6VXNlcjI5MDk2",
      "avatar_url": "https://avatars.githubusercontent.com/u/29096?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ericf",
      "html_url": "https://github.com/ericf",
      "followers_url": "https://api.github.com/users/ericf/followers",
      "following_url": "https://api.github.com/users/ericf/following{/other_user}",
      "gists_url": "https://api.github.com/users/ericf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ericf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ericf/subscriptions",
      "organizations_url": "https://api.github.com/users/ericf/orgs",
      "repos_url": "https://api.github.com/users/ericf/repos",
      "events_url": "https://api.github.com/users/ericf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ericf/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2012-10-24T01:34:48Z",
    "updated_at": "2013-11-27T04:05:44Z",
    "closed_at": "2013-11-27T04:05:44Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Both the `Route` and `Router` constructors are exposed via the main `express` module; why not also expose the `View` constructor here?\n\nTo gain access to the `View` constructor one must currently:\n\n``` javascript\nvar View = require('express/lib/view');\n```\n\nWhereas, the following seems cleaner:\n\n``` javascript\nvar express = require('express'),\n    View    = express.View;\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1383/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1383/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1382",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1382/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1382/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1382/events",
    "html_url": "https://github.com/expressjs/express/issues/1382",
    "id": 7806263,
    "node_id": "MDU6SXNzdWU3ODA2MjYz",
    "number": 1382,
    "title": "res.redirect(url) sends improper location header",
    "user": {
      "login": "ericedem",
      "id": 1060669,
      "node_id": "MDQ6VXNlcjEwNjA2Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1060669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ericedem",
      "html_url": "https://github.com/ericedem",
      "followers_url": "https://api.github.com/users/ericedem/followers",
      "following_url": "https://api.github.com/users/ericedem/following{/other_user}",
      "gists_url": "https://api.github.com/users/ericedem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ericedem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ericedem/subscriptions",
      "organizations_url": "https://api.github.com/users/ericedem/orgs",
      "repos_url": "https://api.github.com/users/ericedem/repos",
      "events_url": "https://api.github.com/users/ericedem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ericedem/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2012-10-23T18:41:16Z",
    "updated_at": "2012-10-23T21:08:36Z",
    "closed_at": "2012-10-23T21:08:36Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "On redirect, absolute location header is missing scheme portion of the url. Instead of getting:\n\n```\nhttp://hostname/url\n```\n\nI get:\n\n```\n//hostname/url\n```\n\nThis doesn't follow standard HTTP syntax http://en.wikipedia.org/wiki/HTTP_location\n\nversion 3x\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1382/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1382/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1381",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1381/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1381/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1381/events",
    "html_url": "https://github.com/expressjs/express/issues/1381",
    "id": 7801946,
    "node_id": "MDU6SXNzdWU3ODAxOTQ2",
    "number": 1381,
    "title": "Installing Express without npm",
    "user": {
      "login": "shakarchi",
      "id": 2633117,
      "node_id": "MDQ6VXNlcjI2MzMxMTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2633117?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shakarchi",
      "html_url": "https://github.com/shakarchi",
      "followers_url": "https://api.github.com/users/shakarchi/followers",
      "following_url": "https://api.github.com/users/shakarchi/following{/other_user}",
      "gists_url": "https://api.github.com/users/shakarchi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shakarchi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shakarchi/subscriptions",
      "organizations_url": "https://api.github.com/users/shakarchi/orgs",
      "repos_url": "https://api.github.com/users/shakarchi/repos",
      "events_url": "https://api.github.com/users/shakarchi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shakarchi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2012-10-23T16:06:13Z",
    "updated_at": "2012-10-23T19:55:48Z",
    "closed_at": "2012-10-23T19:55:48Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\n\nDue to company restrictions on work computers I can't download Express via npm. I've tried manually downloading Express and its dependencies but I hit a point where not all dependencies are available to download on github (methods for example).\n\nAny advice on how to proceed?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1381/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1381/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1380",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1380/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1380/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1380/events",
    "html_url": "https://github.com/expressjs/express/issues/1380",
    "id": 7800025,
    "node_id": "MDU6SXNzdWU3ODAwMDI1",
    "number": 1380,
    "title": "Error: Cannot find module 'jade'",
    "user": {
      "login": "norman784",
      "id": 204656,
      "node_id": "MDQ6VXNlcjIwNDY1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/204656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/norman784",
      "html_url": "https://github.com/norman784",
      "followers_url": "https://api.github.com/users/norman784/followers",
      "following_url": "https://api.github.com/users/norman784/following{/other_user}",
      "gists_url": "https://api.github.com/users/norman784/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/norman784/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/norman784/subscriptions",
      "organizations_url": "https://api.github.com/users/norman784/orgs",
      "repos_url": "https://api.github.com/users/norman784/repos",
      "events_url": "https://api.github.com/users/norman784/events{/privacy}",
      "received_events_url": "https://api.github.com/users/norman784/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2012-10-23T15:07:51Z",
    "updated_at": "2012-10-23T16:41:04Z",
    "closed_at": "2012-10-23T16:41:04Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This is the error, i dont know how express now handles engines, i need to include by myself?\n\n```\napp-full-pathnode_modules/mongoose/lib/utils.js:413\n        throw err;\n              ^\nError: Cannot find module 'jade'\n    at Function.Module._resolveFilename (module.js:338:15)\n    at Function.Module._load (module.js:280:25)\n    at Module.require (module.js:362:17)\n    at require (module.js:378:17)\n    at new View (app-full-pathnode_modules/express/lib/view.js:42:49)\n    at Function.app.render (app-full-pathnode_modules/express/lib/application.js:487:12)\n    at ServerResponse.res.render (app-full-pathnode_modules/express/lib/response.js:720:7)\n    at Promise.exports.index (app-full-pathmodules/applications/index.js:18:7)\n    at Promise.addBack (app-full-pathnode_modules/mongoose/lib/promise.js:128:8)\n    at Promise.EventEmitter.emit (events.js:88:17)\n```\n\nMy server file just looks like\n\n``` javascript\nvar express             = require('express')\n    , app               = express()\n    , config            = require('./config')\n    , debug             = require('debug')('app')\n    , gzippo            = require('gzippo')\n    , mongoose          = require('mongoose')\n    , server            = require('./helpers/server');\n\nmongoose.connect(config.database.host, config.database.name, config.database.port, config.database);\n\n// Configuration\napp.enable('jsonp callback')\n    .use(express.static(__dirname + '/public'))\n    .set('views'            , __dirname + '/views')\n    .set('view engine'  , 'jade')\n    .use(express.bodyParser())\n    .use(express.cookieParser())\n    .use(express.methodOverride())\n    .use(express.session({secret : config.salt}))\n    .use(gzippo.compress())\n    .use(app.router)\n\n// Enviroments\napp.configure('development', function(){\n    app.use(express.errorHandler({\n        dumpException: true\n        , showStack: true\n    }))\n});\n\napp.configure('production', function(){\n    app.use(express.errorHandler())\n});\n\n// Routes\nserver(app, __dirname + '/modules');\n\n// Start Listening\napp.listen(3000);\n```\n\nThe server helper just include all the files from modules with the regular routes app.get, etc\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1380/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1380/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1379",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1379/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1379/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1379/events",
    "html_url": "https://github.com/expressjs/express/issues/1379",
    "id": 7794396,
    "node_id": "MDU6SXNzdWU3Nzk0Mzk2",
    "number": 1379,
    "title": "Unstable routing with regular expressions in v2.5.9",
    "user": {
      "login": "mutazmq",
      "id": 34026,
      "node_id": "MDQ6VXNlcjM0MDI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/34026?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mutazmq",
      "html_url": "https://github.com/mutazmq",
      "followers_url": "https://api.github.com/users/mutazmq/followers",
      "following_url": "https://api.github.com/users/mutazmq/following{/other_user}",
      "gists_url": "https://api.github.com/users/mutazmq/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mutazmq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mutazmq/subscriptions",
      "organizations_url": "https://api.github.com/users/mutazmq/orgs",
      "repos_url": "https://api.github.com/users/mutazmq/repos",
      "events_url": "https://api.github.com/users/mutazmq/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mutazmq/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2012-10-23T11:37:53Z",
    "updated_at": "2012-10-25T03:01:09Z",
    "closed_at": "2012-10-23T22:56:07Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have an issue with creating routes using regular expressions. e.g.\n\n```\napp.get(/^\\/z\\/(\\d+)\\/*/g, views.index)\n```\n\nWill produce a weird behaviour where the page sometimes loads and sometimes gives me this message: Cannot GET /z/2410/index\n\nHowever, when I route it this way:\n\n```\napp.get('/z/:id/*', views.index);\n```\n\nEverything works as expected\n\nThanks\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1379/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1379/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1378",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1378/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1378/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1378/events",
    "html_url": "https://github.com/expressjs/express/issues/1378",
    "id": 7786991,
    "node_id": "MDU6SXNzdWU3Nzg2OTkx",
    "number": 1378,
    "title": "res.redirect() doesn't consider the existence of a reverse proxy",
    "user": {
      "login": "seanjsong",
      "id": 229229,
      "node_id": "MDQ6VXNlcjIyOTIyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/229229?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seanjsong",
      "html_url": "https://github.com/seanjsong",
      "followers_url": "https://api.github.com/users/seanjsong/followers",
      "following_url": "https://api.github.com/users/seanjsong/following{/other_user}",
      "gists_url": "https://api.github.com/users/seanjsong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seanjsong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seanjsong/subscriptions",
      "organizations_url": "https://api.github.com/users/seanjsong/orgs",
      "repos_url": "https://api.github.com/users/seanjsong/repos",
      "events_url": "https://api.github.com/users/seanjsong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seanjsong/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2012-10-23T03:53:39Z",
    "updated_at": "2012-10-24T00:11:09Z",
    "closed_at": "2012-10-24T00:11:09Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Even if I call `res.redirect` without host name as in `res.redirect('/foo/bar');`, the host name will be appended anyway in `express/lib/response.js`:\n\n``` javascript\n// Absolute\nvar host = req.get('Host');\nurl = '//' + host + url;\n```\n\nIf a reverse proxy exists, the browser should specify the proxy's address in `Host` header, while express could receive a different `Host` header, e.g. `10.0.1.3:8080`. Then express responses with a header like `Location: http://10.0.1.3:8080/foo/bar`, and the browser gets confused.\n\nCurrently to word around this problem I write `Location` header directly rather than relying on `res.redirect` to do it:\n\n``` javascript\nres.writeHead(301, { 'Location': '/foo/bar' });\nres.end()\n```\n\nI hope express can make some changes and will not include the host portion in the `Location` header. Only including the path portion is more flexible.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1378/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1378/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1377",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1377/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1377/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1377/events",
    "html_url": "https://github.com/expressjs/express/issues/1377",
    "id": 7745881,
    "node_id": "MDU6SXNzdWU3NzQ1ODgx",
    "number": 1377,
    "title": "Can we get req.requested_url added to express?",
    "user": {
      "login": "ralyodio",
      "id": 27381,
      "node_id": "MDQ6VXNlcjI3Mzgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/27381?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ralyodio",
      "html_url": "https://github.com/ralyodio",
      "followers_url": "https://api.github.com/users/ralyodio/followers",
      "following_url": "https://api.github.com/users/ralyodio/following{/other_user}",
      "gists_url": "https://api.github.com/users/ralyodio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ralyodio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ralyodio/subscriptions",
      "organizations_url": "https://api.github.com/users/ralyodio/orgs",
      "repos_url": "https://api.github.com/users/ralyodio/repos",
      "events_url": "https://api.github.com/users/ralyodio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ralyodio/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 59148,
        "node_id": "MDU6TGFiZWw1OTE0OA==",
        "url": "https://api.github.com/repos/expressjs/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2012-10-21T08:08:18Z",
    "updated_at": "2013-10-30T23:33:22Z",
    "closed_at": "2013-10-30T23:33:22Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "res.locals.requested_url = req.protocol + '://' + req.host  + ( port == 80 || po\nrt == 443 ? '' : ':'+port ) + req.path;\n\nThis is what I'm doing now, but there should be an easier way.\n\nWould be nice to just do req.requested_url\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1377/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1377/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1376",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1376/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1376/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1376/events",
    "html_url": "https://github.com/expressjs/express/issues/1376",
    "id": 7702009,
    "node_id": "MDU6SXNzdWU3NzAyMDA5",
    "number": 1376,
    "title": "Docs for res.send are misleading",
    "user": {
      "login": "sharedinnovationlab",
      "id": 1310343,
      "node_id": "MDQ6VXNlcjEzMTAzNDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1310343?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sharedinnovationlab",
      "html_url": "https://github.com/sharedinnovationlab",
      "followers_url": "https://api.github.com/users/sharedinnovationlab/followers",
      "following_url": "https://api.github.com/users/sharedinnovationlab/following{/other_user}",
      "gists_url": "https://api.github.com/users/sharedinnovationlab/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sharedinnovationlab/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sharedinnovationlab/subscriptions",
      "organizations_url": "https://api.github.com/users/sharedinnovationlab/orgs",
      "repos_url": "https://api.github.com/users/sharedinnovationlab/repos",
      "events_url": "https://api.github.com/users/sharedinnovationlab/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sharedinnovationlab/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2012-10-18T23:02:21Z",
    "updated_at": "2012-10-19T17:05:43Z",
    "closed_at": "2012-10-18T23:19:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Docs: http://expressjs.com/api.html#res.send has the following example:\n\n```\nres.send(404, 'Sorry, we cannot find that!');\n```\n\nHowever, the parameters are swapped in the code:\n\n``` javascript\nres.send = function(body, headers, status){\n  // allow status as second arg\n```\n\nAnd the method docs in the source reflect this:\n\n```\n *     res.send('Sorry, cant find that', 404);\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1376/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1376/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1375",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1375/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1375/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1375/events",
    "html_url": "https://github.com/expressjs/express/issues/1375",
    "id": 7672328,
    "node_id": "MDU6SXNzdWU3NjcyMzI4",
    "number": 1375,
    "title": "setting to disable etag for res.send()",
    "user": {
      "login": "tj",
      "id": 25254,
      "node_id": "MDQ6VXNlcjI1MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tj",
      "html_url": "https://github.com/tj",
      "followers_url": "https://api.github.com/users/tj/followers",
      "following_url": "https://api.github.com/users/tj/following{/other_user}",
      "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
      "organizations_url": "https://api.github.com/users/tj/orgs",
      "repos_url": "https://api.github.com/users/tj/repos",
      "events_url": "https://api.github.com/users/tj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 206149,
        "node_id": "MDU6TGFiZWwyMDYxNDk=",
        "url": "https://api.github.com/repos/expressjs/express/labels/4.x",
        "name": "4.x",
        "color": "ededed",
        "default": false,
        "description": null
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2012-10-17T22:58:40Z",
    "updated_at": "2014-07-29T04:18:19Z",
    "closed_at": "2012-12-19T21:23:18Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1375/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1375/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1374",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1374/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1374/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1374/events",
    "html_url": "https://github.com/expressjs/express/pull/1374",
    "id": 7628543,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjY2NTM2NQ==",
    "number": 1374,
    "title": "callback&&callback({data:'here'}) JSONP format support",
    "user": {
      "login": "yozik04",
      "id": 2420038,
      "node_id": "MDQ6VXNlcjI0MjAwMzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2420038?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yozik04",
      "html_url": "https://github.com/yozik04",
      "followers_url": "https://api.github.com/users/yozik04/followers",
      "following_url": "https://api.github.com/users/yozik04/following{/other_user}",
      "gists_url": "https://api.github.com/users/yozik04/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yozik04/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yozik04/subscriptions",
      "organizations_url": "https://api.github.com/users/yozik04/orgs",
      "repos_url": "https://api.github.com/users/yozik04/repos",
      "events_url": "https://api.github.com/users/yozik04/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yozik04/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2012-10-16T15:13:08Z",
    "updated_at": "2014-06-12T23:09:24Z",
    "closed_at": "2012-10-16T15:32:40Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1374",
      "html_url": "https://github.com/expressjs/express/pull/1374",
      "diff_url": "https://github.com/expressjs/express/pull/1374.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1374.patch",
      "merged_at": null
    },
    "body": "Currently JSONP only supports callback({data:'here'}) format.\n\nThis pull request adds callback&&callback({data:'here'}) format support.\n\nActivate this format using\napp.enable('jsonp callback long');\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1374/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1374/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1373",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1373/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1373/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1373/events",
    "html_url": "https://github.com/expressjs/express/pull/1373",
    "id": 7618637,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjY2MTI0OA==",
    "number": 1373,
    "title": "Removed obsolete code from the command line script.",
    "user": {
      "login": "simov",
      "id": 1694112,
      "node_id": "MDQ6VXNlcjE2OTQxMTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1694112?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simov",
      "html_url": "https://github.com/simov",
      "followers_url": "https://api.github.com/users/simov/followers",
      "following_url": "https://api.github.com/users/simov/following{/other_user}",
      "gists_url": "https://api.github.com/users/simov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simov/subscriptions",
      "organizations_url": "https://api.github.com/users/simov/orgs",
      "repos_url": "https://api.github.com/users/simov/repos",
      "events_url": "https://api.github.com/users/simov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2012-10-16T09:36:20Z",
    "updated_at": "2012-10-17T17:31:41Z",
    "closed_at": "2012-10-17T17:31:41Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1373",
      "html_url": "https://github.com/expressjs/express/pull/1373",
      "diff_url": "https://github.com/expressjs/express/pull/1373.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1373.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1373/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1373/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1372",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1372/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1372/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1372/events",
    "html_url": "https://github.com/expressjs/express/issues/1372",
    "id": 7607547,
    "node_id": "MDU6SXNzdWU3NjA3NTQ3",
    "number": 1372,
    "title": "wrong param order in res.redirect documentation",
    "user": {
      "login": "lucasgonze",
      "id": 111581,
      "node_id": "MDQ6VXNlcjExMTU4MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/111581?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lucasgonze",
      "html_url": "https://github.com/lucasgonze",
      "followers_url": "https://api.github.com/users/lucasgonze/followers",
      "following_url": "https://api.github.com/users/lucasgonze/following{/other_user}",
      "gists_url": "https://api.github.com/users/lucasgonze/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lucasgonze/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lucasgonze/subscriptions",
      "organizations_url": "https://api.github.com/users/lucasgonze/orgs",
      "repos_url": "https://api.github.com/users/lucasgonze/repos",
      "events_url": "https://api.github.com/users/lucasgonze/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lucasgonze/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2012-10-15T22:08:12Z",
    "updated_at": "2012-10-15T22:41:13Z",
    "closed_at": "2012-10-15T22:20:52Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "At http://expressjs.com/api.html#res.redirect\n\nThere's this:\n\n```\nres.redirect(301, 'http://example.com');\n```\n\nBut the actual order of arguments in the source code puts the status param _2nd_, not 1st. If you use the approach in the example code you'll get an error and have to read the source to find the correct info.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1372/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1372/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1371",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1371/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1371/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1371/events",
    "html_url": "https://github.com/expressjs/express/issues/1371",
    "id": 7599148,
    "node_id": "MDU6SXNzdWU3NTk5MTQ4",
    "number": 1371,
    "title": "Arrays as paths",
    "user": {
      "login": "buschtoens",
      "id": 834636,
      "node_id": "MDQ6VXNlcjgzNDYzNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/834636?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/buschtoens",
      "html_url": "https://github.com/buschtoens",
      "followers_url": "https://api.github.com/users/buschtoens/followers",
      "following_url": "https://api.github.com/users/buschtoens/following{/other_user}",
      "gists_url": "https://api.github.com/users/buschtoens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/buschtoens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/buschtoens/subscriptions",
      "organizations_url": "https://api.github.com/users/buschtoens/orgs",
      "repos_url": "https://api.github.com/users/buschtoens/repos",
      "events_url": "https://api.github.com/users/buschtoens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/buschtoens/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 25,
    "created_at": "2012-10-15T17:15:33Z",
    "updated_at": "2013-04-30T14:35:55Z",
    "closed_at": "2012-10-15T17:40:03Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "``` javascript\napp.get([\n    '/page/:id',\n    '/post/:id'\n], function (request, response) {\n    // ...\n});\n```\n\nAs suggested by @71104 in #1369.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1371/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1371/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1370",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1370/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1370/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1370/events",
    "html_url": "https://github.com/expressjs/express/issues/1370",
    "id": 7597744,
    "node_id": "MDU6SXNzdWU3NTk3NzQ0",
    "number": 1370,
    "title": "In view-locals, is `/locals` supposed to fail?",
    "user": {
      "login": "LarryBattle",
      "id": 288263,
      "node_id": "MDQ6VXNlcjI4ODI2Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/288263?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryBattle",
      "html_url": "https://github.com/LarryBattle",
      "followers_url": "https://api.github.com/users/LarryBattle/followers",
      "following_url": "https://api.github.com/users/LarryBattle/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryBattle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryBattle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryBattle/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryBattle/orgs",
      "repos_url": "https://api.github.com/users/LarryBattle/repos",
      "events_url": "https://api.github.com/users/LarryBattle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryBattle/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2012-10-15T16:23:21Z",
    "updated_at": "2012-10-15T23:08:03Z",
    "closed_at": "2012-10-15T23:08:03Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "In the example [view-locals](https://github.com/visionmedia/express/blob/master/examples/view-locals/index.js), an error is generated when visiting the url `localhost:3000/locals` since [users.jade](https://github.com/visionmedia/express/blob/master/examples/view-locals/user.jade) can't find variable `users`.\n\n```\napp.get('/locals', function(req, res){\n  res.render('user', { title: 'Users' });\n});\n```\n\nIs this expected behavior or a bug? \n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1370/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1370/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1369",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1369/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1369/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1369/events",
    "html_url": "https://github.com/expressjs/express/issues/1369",
    "id": 7583946,
    "node_id": "MDU6SXNzdWU3NTgzOTQ2",
    "number": 1369,
    "title": "RegEx in routing params",
    "user": {
      "login": "buschtoens",
      "id": 834636,
      "node_id": "MDQ6VXNlcjgzNDYzNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/834636?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/buschtoens",
      "html_url": "https://github.com/buschtoens",
      "followers_url": "https://api.github.com/users/buschtoens/followers",
      "following_url": "https://api.github.com/users/buschtoens/following{/other_user}",
      "gists_url": "https://api.github.com/users/buschtoens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/buschtoens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/buschtoens/subscriptions",
      "organizations_url": "https://api.github.com/users/buschtoens/orgs",
      "repos_url": "https://api.github.com/users/buschtoens/repos",
      "events_url": "https://api.github.com/users/buschtoens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/buschtoens/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 15,
    "created_at": "2012-10-15T05:41:10Z",
    "updated_at": "2012-11-10T05:10:11Z",
    "closed_at": "2012-11-10T05:10:11Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Some syntax sugar. Would be cool, if express would parse RegEx's as a part of routing paths.\n\nExample:\n\n``` javascript\n\"/page/:page([0-9])\"\n\"/skin/:direction([a-z])?/:resolution([0-9])?/:username\"\n```\n\nEveything in the braces should be parsed as a RegEx. That way more complex, but sweetend, paths could be built. :)\n\nI know, that you can pass in RegEx's as a path, but then you'll end up with `req.params` as an array.\n\nYeah or No? Maybe I'll make a PR.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1369/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1369/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1368",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1368/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1368/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1368/events",
    "html_url": "https://github.com/expressjs/express/issues/1368",
    "id": 7583685,
    "node_id": "MDU6SXNzdWU3NTgzNjg1",
    "number": 1368,
    "title": "response.redirect('/admin/index') auto adds host name",
    "user": {
      "login": "TooBug",
      "id": 1243593,
      "node_id": "MDQ6VXNlcjEyNDM1OTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1243593?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TooBug",
      "html_url": "https://github.com/TooBug",
      "followers_url": "https://api.github.com/users/TooBug/followers",
      "following_url": "https://api.github.com/users/TooBug/following{/other_user}",
      "gists_url": "https://api.github.com/users/TooBug/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TooBug/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TooBug/subscriptions",
      "organizations_url": "https://api.github.com/users/TooBug/orgs",
      "repos_url": "https://api.github.com/users/TooBug/repos",
      "events_url": "https://api.github.com/users/TooBug/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TooBug/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2012-10-15T05:14:41Z",
    "updated_at": "2012-10-16T01:13:31Z",
    "closed_at": "2012-10-16T01:13:31Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "```\n// relative\nif (!~url.indexOf('://') && 0 != url.indexOf('//')) {\n    var path = app.path();\n\n    // relative to path\n    if ('.' == url[0]) {\n        url = req.path + '/' + url;\n        // relative to mount-point\n    } else if ('/' != url[0]) {\n        url = path + '/' + url;\n    }\n\n    // Absolute\n    var host = req.get('Host');  //line 656\n    url = '//' + host + url; //line657\n}\n```\n\nsee line 656-657 in response.js\n\nif url == '/admin/index',then the response header would be \n\nLocation: //hostname/admin/index\n\nIn most cases it has no problem, but in some special envirments such as cloud 9 IDE, it works incorrect.\n\nfor example, my project name in cloud 9 IDE is 99t,then my url when debugging is '99t.toobug.c9.io', but after redirect , the host name in url becomes 'project-livec9f410bad70f.rhcloud.com'. I guess that the cloud9 IDE uses the rhcloud.com for inner url , and maps the c9.io url to rhcloud.com.\n\nso why not just output the redirection url instead of add '//' and the host name?\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1368/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1368/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1367",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1367/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1367/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1367/events",
    "html_url": "https://github.com/expressjs/express/pull/1367",
    "id": 7563769,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjYzOTM3Ng==",
    "number": 1367,
    "title": "Switch to mmm for hogan.js view engine",
    "user": {
      "login": "techhead",
      "id": 311112,
      "node_id": "MDQ6VXNlcjMxMTExMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/311112?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/techhead",
      "html_url": "https://github.com/techhead",
      "followers_url": "https://api.github.com/users/techhead/followers",
      "following_url": "https://api.github.com/users/techhead/following{/other_user}",
      "gists_url": "https://api.github.com/users/techhead/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/techhead/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/techhead/subscriptions",
      "organizations_url": "https://api.github.com/users/techhead/orgs",
      "repos_url": "https://api.github.com/users/techhead/repos",
      "events_url": "https://api.github.com/users/techhead/events{/privacy}",
      "received_events_url": "https://api.github.com/users/techhead/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2012-10-13T16:39:27Z",
    "updated_at": "2014-06-12T20:25:10Z",
    "closed_at": "2013-10-15T04:12:50Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1367",
      "html_url": "https://github.com/expressjs/express/pull/1367",
      "diff_url": "https://github.com/expressjs/express/pull/1367.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1367.patch",
      "merged_at": null
    },
    "body": "The module `mmm` is far more feature complete than `hjs`.  It supports caching, partials, layout, etc.  I feel that it would be a better fit for a tool that is intended to help you get up and running fast.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1367/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1367/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1366",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1366/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1366/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1366/events",
    "html_url": "https://github.com/expressjs/express/issues/1366",
    "id": 7560467,
    "node_id": "MDU6SXNzdWU3NTYwNDY3",
    "number": 1366,
    "title": "Express 3 has no \"app.close()\"",
    "user": {
      "login": "glynnbird",
      "id": 697925,
      "node_id": "MDQ6VXNlcjY5NzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/697925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glynnbird",
      "html_url": "https://github.com/glynnbird",
      "followers_url": "https://api.github.com/users/glynnbird/followers",
      "following_url": "https://api.github.com/users/glynnbird/following{/other_user}",
      "gists_url": "https://api.github.com/users/glynnbird/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glynnbird/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glynnbird/subscriptions",
      "organizations_url": "https://api.github.com/users/glynnbird/orgs",
      "repos_url": "https://api.github.com/users/glynnbird/repos",
      "events_url": "https://api.github.com/users/glynnbird/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glynnbird/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 133578712,
        "node_id": "MDU6TGFiZWwxMzM1Nzg3MTI=",
        "url": "https://api.github.com/repos/expressjs/express/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true,
        "description": null
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2012-10-13T08:38:30Z",
    "updated_at": "2015-01-05T15:49:47Z",
    "closed_at": "2012-10-15T16:20:45Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Imagine you want to be able to terminate your Node.js app and drain all existing connections before quitting, you might come up with a solution as outlined here:\n\nhttp://blog.argteam.com/coding/hardening-node-js-for-production-part-3-zero-downtime-deployments-with-nginx\n\ne.g.\n- respond to SIGTERM or SIGINT events\n- tell your Express app to stop accepting new connections\n- get called back by Express when the last connection has been serviced\n\nThis would all you to do graceful deployments of new code without terminating existing requests (assuming your load balancer sends traffic to other servers).\n\nAs of Express 3, the app.close() method seems to have disappeared, which means Express users have no means of gracefully stopping an application as far as I can see.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1366/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1366/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1365",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1365/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1365/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1365/events",
    "html_url": "https://github.com/expressjs/express/issues/1365",
    "id": 7480862,
    "node_id": "MDU6SXNzdWU3NDgwODYy",
    "number": 1365,
    "title": "Issue in docs for req.xhr",
    "user": {
      "login": "bpasero",
      "id": 900690,
      "node_id": "MDQ6VXNlcjkwMDY5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/900690?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bpasero",
      "html_url": "https://github.com/bpasero",
      "followers_url": "https://api.github.com/users/bpasero/followers",
      "following_url": "https://api.github.com/users/bpasero/following{/other_user}",
      "gists_url": "https://api.github.com/users/bpasero/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bpasero/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bpasero/subscriptions",
      "organizations_url": "https://api.github.com/users/bpasero/orgs",
      "repos_url": "https://api.github.com/users/bpasero/repos",
      "events_url": "https://api.github.com/users/bpasero/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bpasero/received_events",
      "type": "User",
      "site_admin": true
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-10-10T12:50:00Z",
    "updated_at": "2012-10-10T15:35:28Z",
    "closed_at": "2012-10-10T15:35:28Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "It states \"Check if the request was issued with the \"X-Request-With\" header field set to \"XMLHttpRequest\" (jQuery etc).\"\n\nHowever, the header is X-Requested-With\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1365/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1365/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1364",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1364/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1364/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1364/events",
    "html_url": "https://github.com/expressjs/express/pull/1364",
    "id": 7451251,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjU4Nzg2OQ==",
    "number": 1364,
    "title": "package.json: Remove publishConfig field",
    "user": {
      "login": "isaacs",
      "id": 9287,
      "node_id": "MDQ6VXNlcjkyODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9287?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/isaacs",
      "html_url": "https://github.com/isaacs",
      "followers_url": "https://api.github.com/users/isaacs/followers",
      "following_url": "https://api.github.com/users/isaacs/following{/other_user}",
      "gists_url": "https://api.github.com/users/isaacs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/isaacs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/isaacs/subscriptions",
      "organizations_url": "https://api.github.com/users/isaacs/orgs",
      "repos_url": "https://api.github.com/users/isaacs/repos",
      "events_url": "https://api.github.com/users/isaacs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/isaacs/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2012-10-09T15:14:47Z",
    "updated_at": "2014-07-30T05:00:34Z",
    "closed_at": "2012-10-09T15:43:37Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1364",
      "html_url": "https://github.com/expressjs/express/pull/1364",
      "diff_url": "https://github.com/expressjs/express/pull/1364.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1364.patch",
      "merged_at": "2012-10-09T15:43:37Z"
    },
    "body": "Fixes #1359\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1364/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1364/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1363",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1363/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1363/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1363/events",
    "html_url": "https://github.com/expressjs/express/issues/1363",
    "id": 7444541,
    "node_id": "MDU6SXNzdWU3NDQ0NTQx",
    "number": 1363,
    "title": "Check request accept type",
    "user": {
      "login": "Laboratory",
      "id": 1676506,
      "node_id": "MDQ6VXNlcjE2NzY1MDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1676506?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laboratory",
      "html_url": "https://github.com/Laboratory",
      "followers_url": "https://api.github.com/users/Laboratory/followers",
      "following_url": "https://api.github.com/users/Laboratory/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laboratory/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laboratory/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laboratory/subscriptions",
      "organizations_url": "https://api.github.com/users/Laboratory/orgs",
      "repos_url": "https://api.github.com/users/Laboratory/repos",
      "events_url": "https://api.github.com/users/Laboratory/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laboratory/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2012-10-09T11:18:58Z",
    "updated_at": "2012-10-10T01:20:44Z",
    "closed_at": "2012-10-10T01:20:44Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "``` javascript\n//request.js\n//Request Headers Accept is 'image/png,image/*;q=0.8,*/*;q=0.5'\nrequest.accepts('text/html'); // - return 'text/html'\n```\n\nHow can I check accepts?\nI want get result as boolean or null/undefined if accept type don't checked.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1363/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1363/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1362",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1362/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1362/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1362/events",
    "html_url": "https://github.com/expressjs/express/pull/1362",
    "id": 7442917,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjU4NDIwMA==",
    "number": 1362,
    "title": "cli: skeleton generator enhancement",
    "user": {
      "login": "langpavel",
      "id": 142462,
      "node_id": "MDQ6VXNlcjE0MjQ2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142462?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/langpavel",
      "html_url": "https://github.com/langpavel",
      "followers_url": "https://api.github.com/users/langpavel/followers",
      "following_url": "https://api.github.com/users/langpavel/following{/other_user}",
      "gists_url": "https://api.github.com/users/langpavel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/langpavel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/langpavel/subscriptions",
      "organizations_url": "https://api.github.com/users/langpavel/orgs",
      "repos_url": "https://api.github.com/users/langpavel/repos",
      "events_url": "https://api.github.com/users/langpavel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/langpavel/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 42,
    "created_at": "2012-10-09T09:53:17Z",
    "updated_at": "2014-07-10T10:34:12Z",
    "closed_at": "2012-10-10T20:41:58Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1362",
      "html_url": "https://github.com/expressjs/express/pull/1362",
      "diff_url": "https://github.com/expressjs/express/pull/1362.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1362.patch",
      "merged_at": null
    },
    "body": "This is merge of \n#1360 segregate app from http server code\n#1361 module name in `package.json` from target directory or argument\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1362/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1362/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1361",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1361/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1361/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1361/events",
    "html_url": "https://github.com/expressjs/express/pull/1361",
    "id": 7440633,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjU4MzE3Ng==",
    "number": 1361,
    "title": "cli: skeleton: Imply name in package.json from dir or argument",
    "user": {
      "login": "langpavel",
      "id": 142462,
      "node_id": "MDQ6VXNlcjE0MjQ2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142462?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/langpavel",
      "html_url": "https://github.com/langpavel",
      "followers_url": "https://api.github.com/users/langpavel/followers",
      "following_url": "https://api.github.com/users/langpavel/following{/other_user}",
      "gists_url": "https://api.github.com/users/langpavel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/langpavel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/langpavel/subscriptions",
      "organizations_url": "https://api.github.com/users/langpavel/orgs",
      "repos_url": "https://api.github.com/users/langpavel/repos",
      "events_url": "https://api.github.com/users/langpavel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/langpavel/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-10-09T07:56:55Z",
    "updated_at": "2014-07-15T10:25:49Z",
    "closed_at": "2012-10-09T11:36:06Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1361",
      "html_url": "https://github.com/expressjs/express/pull/1361",
      "diff_url": "https://github.com/expressjs/express/pull/1361.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1361.patch",
      "merged_at": null
    },
    "body": "- set `name` in `package.json` from directory name or command line argument\n- set `\"private\": true` unless `--public` flag is provided\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1361/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1361/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1360",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1360/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1360/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1360/events",
    "html_url": "https://github.com/expressjs/express/pull/1360",
    "id": 7439540,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjU4MjcyMw==",
    "number": 1360,
    "title": "cli: skeleton: segregate app from http server code",
    "user": {
      "login": "langpavel",
      "id": 142462,
      "node_id": "MDQ6VXNlcjE0MjQ2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142462?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/langpavel",
      "html_url": "https://github.com/langpavel",
      "followers_url": "https://api.github.com/users/langpavel/followers",
      "following_url": "https://api.github.com/users/langpavel/following{/other_user}",
      "gists_url": "https://api.github.com/users/langpavel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/langpavel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/langpavel/subscriptions",
      "organizations_url": "https://api.github.com/users/langpavel/orgs",
      "repos_url": "https://api.github.com/users/langpavel/repos",
      "events_url": "https://api.github.com/users/langpavel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/langpavel/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-10-09T06:49:18Z",
    "updated_at": "2012-10-09T11:35:54Z",
    "closed_at": "2012-10-09T11:35:54Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1360",
      "html_url": "https://github.com/expressjs/express/pull/1360",
      "diff_url": "https://github.com/expressjs/express/pull/1360.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1360.patch",
      "merged_at": null
    },
    "body": "This better fits tn `npm start` and allow injection to another server as sub-application\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1360/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1360/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1359",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1359/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1359/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1359/events",
    "html_url": "https://github.com/expressjs/express/issues/1359",
    "id": 7438108,
    "node_id": "MDU6SXNzdWU3NDM4MTA4",
    "number": 1359,
    "title": "Bump current version in npm from 3.0.0rc4 to 3.0.0rc5",
    "user": {
      "login": "langpavel",
      "id": 142462,
      "node_id": "MDQ6VXNlcjE0MjQ2Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/142462?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/langpavel",
      "html_url": "https://github.com/langpavel",
      "followers_url": "https://api.github.com/users/langpavel/followers",
      "following_url": "https://api.github.com/users/langpavel/following{/other_user}",
      "gists_url": "https://api.github.com/users/langpavel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/langpavel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/langpavel/subscriptions",
      "organizations_url": "https://api.github.com/users/langpavel/orgs",
      "repos_url": "https://api.github.com/users/langpavel/repos",
      "events_url": "https://api.github.com/users/langpavel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/langpavel/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2012-10-09T04:32:54Z",
    "updated_at": "2014-03-19T10:12:00Z",
    "closed_at": "2012-10-09T15:43:38Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "If `3.0.0rc5` is really last usable published, bump it in `npm`\ncurrently `npm install express` fetch rc4\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1359/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1359/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1358",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1358/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1358/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1358/events",
    "html_url": "https://github.com/expressjs/express/pull/1358",
    "id": 7413231,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjU3MDQ3OQ==",
    "number": 1358,
    "title": "make application routing callback behave the same as middleware",
    "user": {
      "login": "seanjsong",
      "id": 229229,
      "node_id": "MDQ6VXNlcjIyOTIyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/229229?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seanjsong",
      "html_url": "https://github.com/seanjsong",
      "followers_url": "https://api.github.com/users/seanjsong/followers",
      "following_url": "https://api.github.com/users/seanjsong/following{/other_user}",
      "gists_url": "https://api.github.com/users/seanjsong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seanjsong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seanjsong/subscriptions",
      "organizations_url": "https://api.github.com/users/seanjsong/orgs",
      "repos_url": "https://api.github.com/users/seanjsong/repos",
      "events_url": "https://api.github.com/users/seanjsong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seanjsong/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2012-10-08T07:31:37Z",
    "updated_at": "2014-07-22T11:32:54Z",
    "closed_at": "2012-10-10T02:10:41Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1358",
      "html_url": "https://github.com/expressjs/express/pull/1358",
      "diff_url": "https://github.com/expressjs/express/pull/1358.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1358.patch",
      "merged_at": null
    },
    "body": "Hi, there. I have a question about implementing an application routing callback with the first parameter being err.\n\nThe API Reference says under the section of app.VERB(path, [callback...], callback)：\n\n|  Multiple callbacks may be give, all are treated equally, and behave just like middleware, \n|  with the one exception that these callbacks may invoke next('route') to bypass the remaining route callback(s). \n\nBut when it comes to error handling, application routing callback behaves a little differently than middleware.\n\nIn the case of middleware, if it's declared with the first parameter being err, it won't be called (will be skipped) if there's no error generated above this middleware. I can see that from the source code of connect (lib/proto.js):\n\n      var arity = layer.handle.length;\n      if (err) {\n        if (arity === 4) {\n          layer.handle(err, req, res, next);\n        } else {\n          next(err);\n        }\n      } else if (arity < 4) {\n        layer.handle(req, res, next);\n      } else {\n        next();\n      }\n\nBut in the case of application routing callback, the source code of express (lib/router/index.js) says:\n\n    function callbacks(err) {\n      var fn = route.callbacks[i++];\n      try {\n        if ('route' == err) {\n          nextRoute();\n        } else if (err && fn) {\n          if (fn.length < 4) return callbacks(err);\n          fn(err, req, res, callbacks);\n        } else if (fn) {\n          fn(req, res, callbacks);\n        } else {\n          nextRoute(err);\n        }\n      } catch (err) {\n        callbacks(err);\n      }\n    }\n\nif callbacks() is called without an err, the code path goes to this branch:\n\n        else if (fn) {\n          fn(req, res, callbacks);\n        } \n\nWhether fn is implemented with the first parameter being err or not, it always gets called with (req, res, callbacks).\n\nSuppose we implement fn with an err parameter, i.e. function (err, req, res, next) { ... }  , then we should be careful, if there are less than 4 arguments passed we have to shift the arguments one position to the right. This is really a burden for application developers.\n\nCouldn't it be better if we make application routing callback behave the same as middleware? We can change the code to:\n\n        else if (fn && fn.length < 4) {\n          fn(req, res, callbacks);\n        }\n\nThat's what this commit is about.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1358/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1358/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1357",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1357/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1357/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1357/events",
    "html_url": "https://github.com/expressjs/express/pull/1357",
    "id": 7406770,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjU2ODMzMg==",
    "number": 1357,
    "title": "Checked all the examples",
    "user": {
      "login": "sakateka",
      "id": 2256154,
      "node_id": "MDQ6VXNlcjIyNTYxNTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2256154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sakateka",
      "html_url": "https://github.com/sakateka",
      "followers_url": "https://api.github.com/users/sakateka/followers",
      "following_url": "https://api.github.com/users/sakateka/following{/other_user}",
      "gists_url": "https://api.github.com/users/sakateka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sakateka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sakateka/subscriptions",
      "organizations_url": "https://api.github.com/users/sakateka/orgs",
      "repos_url": "https://api.github.com/users/sakateka/repos",
      "events_url": "https://api.github.com/users/sakateka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sakateka/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2012-10-07T17:55:47Z",
    "updated_at": "2012-10-26T16:36:02Z",
    "closed_at": "2012-10-10T02:32:09Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1357",
      "html_url": "https://github.com/expressjs/express/pull/1357",
      "diff_url": "https://github.com/expressjs/express/pull/1357.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1357.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1357/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1357/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1356",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1356/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1356/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1356/events",
    "html_url": "https://github.com/expressjs/express/pull/1356",
    "id": 7404158,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjU2NzU1OA==",
    "number": 1356,
    "title": "Checked all the examples",
    "user": {
      "login": "sakateka",
      "id": 2256154,
      "node_id": "MDQ6VXNlcjIyNTYxNTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2256154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sakateka",
      "html_url": "https://github.com/sakateka",
      "followers_url": "https://api.github.com/users/sakateka/followers",
      "following_url": "https://api.github.com/users/sakateka/following{/other_user}",
      "gists_url": "https://api.github.com/users/sakateka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sakateka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sakateka/subscriptions",
      "organizations_url": "https://api.github.com/users/sakateka/orgs",
      "repos_url": "https://api.github.com/users/sakateka/repos",
      "events_url": "https://api.github.com/users/sakateka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sakateka/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2012-10-07T11:26:09Z",
    "updated_at": "2012-10-09T07:14:58Z",
    "closed_at": "2012-10-07T15:07:34Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1356",
      "html_url": "https://github.com/expressjs/express/pull/1356",
      "diff_url": "https://github.com/expressjs/express/pull/1356.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1356.patch",
      "merged_at": null
    },
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1356/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1356/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1355",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1355/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1355/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1355/events",
    "html_url": "https://github.com/expressjs/express/pull/1355",
    "id": 7400849,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjU2NjQ4Ng==",
    "number": 1355,
    "title": "set the NODE_ENV to development for the development view cache test",
    "user": {
      "login": "lihanli",
      "id": 830084,
      "node_id": "MDQ6VXNlcjgzMDA4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/830084?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lihanli",
      "html_url": "https://github.com/lihanli",
      "followers_url": "https://api.github.com/users/lihanli/followers",
      "following_url": "https://api.github.com/users/lihanli/following{/other_user}",
      "gists_url": "https://api.github.com/users/lihanli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lihanli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lihanli/subscriptions",
      "organizations_url": "https://api.github.com/users/lihanli/orgs",
      "repos_url": "https://api.github.com/users/lihanli/repos",
      "events_url": "https://api.github.com/users/lihanli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lihanli/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2012-10-06T22:02:11Z",
    "updated_at": "2014-06-25T01:42:48Z",
    "closed_at": "2012-10-06T22:25:07Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1355",
      "html_url": "https://github.com/expressjs/express/pull/1355",
      "diff_url": "https://github.com/expressjs/express/pull/1355.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1355.patch",
      "merged_at": "2012-10-06T22:25:07Z"
    },
    "body": "The development view cache test was using 'test' as the NODE_ENV so I changed it to 'development'\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1355/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1355/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1354",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1354/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1354/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1354/events",
    "html_url": "https://github.com/expressjs/express/pull/1354",
    "id": 7372364,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjU1MzUxOA==",
    "number": 1354,
    "title": "examples/auth/app.js",
    "user": {
      "login": "sakateka",
      "id": 2256154,
      "node_id": "MDQ6VXNlcjIyNTYxNTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2256154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sakateka",
      "html_url": "https://github.com/sakateka",
      "followers_url": "https://api.github.com/users/sakateka/followers",
      "following_url": "https://api.github.com/users/sakateka/following{/other_user}",
      "gists_url": "https://api.github.com/users/sakateka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sakateka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sakateka/subscriptions",
      "organizations_url": "https://api.github.com/users/sakateka/orgs",
      "repos_url": "https://api.github.com/users/sakateka/repos",
      "events_url": "https://api.github.com/users/sakateka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sakateka/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2012-10-05T08:27:17Z",
    "updated_at": "2014-06-16T15:10:18Z",
    "closed_at": "2012-10-05T16:17:19Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/expressjs/express/pulls/1354",
      "html_url": "https://github.com/expressjs/express/pull/1354",
      "diff_url": "https://github.com/expressjs/express/pull/1354.diff",
      "patch_url": "https://github.com/expressjs/express/pull/1354.patch",
      "merged_at": "2012-10-05T16:17:19Z"
    },
    "body": "  Fixed: Notification of a successful authentication\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1354/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1354/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1353",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1353/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1353/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1353/events",
    "html_url": "https://github.com/expressjs/express/issues/1353",
    "id": 7301864,
    "node_id": "MDU6SXNzdWU3MzAxODY0",
    "number": 1353,
    "title": "Error while creating a new app",
    "user": {
      "login": "panbhag",
      "id": 155842,
      "node_id": "MDQ6VXNlcjE1NTg0Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/155842?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/panbhag",
      "html_url": "https://github.com/panbhag",
      "followers_url": "https://api.github.com/users/panbhag/followers",
      "following_url": "https://api.github.com/users/panbhag/following{/other_user}",
      "gists_url": "https://api.github.com/users/panbhag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/panbhag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/panbhag/subscriptions",
      "organizations_url": "https://api.github.com/users/panbhag/orgs",
      "repos_url": "https://api.github.com/users/panbhag/repos",
      "events_url": "https://api.github.com/users/panbhag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/panbhag/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-10-02T18:48:04Z",
    "updated_at": "2012-10-02T18:48:53Z",
    "closed_at": "2012-10-02T18:48:53Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1353/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1353/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1352",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1352/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1352/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1352/events",
    "html_url": "https://github.com/expressjs/express/issues/1352",
    "id": 7300811,
    "node_id": "MDU6SXNzdWU3MzAwODEx",
    "number": 1352,
    "title": "400 on malformed URIs",
    "user": {
      "login": "tj",
      "id": 25254,
      "node_id": "MDQ6VXNlcjI1MjU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tj",
      "html_url": "https://github.com/tj",
      "followers_url": "https://api.github.com/users/tj/followers",
      "following_url": "https://api.github.com/users/tj/following{/other_user}",
      "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
      "organizations_url": "https://api.github.com/users/tj/orgs",
      "repos_url": "https://api.github.com/users/tj/repos",
      "events_url": "https://api.github.com/users/tj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 26,
    "created_at": "2012-10-02T18:08:41Z",
    "updated_at": "2013-12-12T02:15:42Z",
    "closed_at": "2013-12-12T02:15:42Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "nicer than a 500\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1352/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1352/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1351",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1351/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1351/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1351/events",
    "html_url": "https://github.com/expressjs/express/issues/1351",
    "id": 7195954,
    "node_id": "MDU6SXNzdWU3MTk1OTU0",
    "number": 1351,
    "title": "Session not scoped to port",
    "user": {
      "login": "nyteshade",
      "id": 225558,
      "node_id": "MDQ6VXNlcjIyNTU1OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/225558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nyteshade",
      "html_url": "https://github.com/nyteshade",
      "followers_url": "https://api.github.com/users/nyteshade/followers",
      "following_url": "https://api.github.com/users/nyteshade/following{/other_user}",
      "gists_url": "https://api.github.com/users/nyteshade/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nyteshade/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nyteshade/subscriptions",
      "organizations_url": "https://api.github.com/users/nyteshade/orgs",
      "repos_url": "https://api.github.com/users/nyteshade/repos",
      "events_url": "https://api.github.com/users/nyteshade/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nyteshade/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2012-09-27T20:04:08Z",
    "updated_at": "2013-09-07T21:57:11Z",
    "closed_at": "2013-09-07T21:57:11Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When running multiple express nodejs servers on different ports, the sessions are not scoped. This means that if I run something with session support on port 3000 and another on port 4000, visiting either port invalidates and corrupts the session of the other.\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1351/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1351/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1350",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1350/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1350/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1350/events",
    "html_url": "https://github.com/expressjs/express/issues/1350",
    "id": 7192111,
    "node_id": "MDU6SXNzdWU3MTkyMTEx",
    "number": 1350,
    "title": "valid multipart upload causing request callback to be hit but renders blank response",
    "user": {
      "login": "andrewrk",
      "id": 106511,
      "node_id": "MDQ6VXNlcjEwNjUxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/106511?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewrk",
      "html_url": "https://github.com/andrewrk",
      "followers_url": "https://api.github.com/users/andrewrk/followers",
      "following_url": "https://api.github.com/users/andrewrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewrk/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewrk/orgs",
      "repos_url": "https://api.github.com/users/andrewrk/repos",
      "events_url": "https://api.github.com/users/andrewrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2012-09-27T17:53:55Z",
    "updated_at": "2012-09-27T19:32:43Z",
    "closed_at": "2012-09-27T19:32:43Z",
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "https://gist.github.com/3795226\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1350/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1350/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1349",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1349/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1349/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1349/events",
    "html_url": "https://github.com/expressjs/express/issues/1349",
    "id": 7138561,
    "node_id": "MDU6SXNzdWU3MTM4NTYx",
    "number": 1349,
    "title": "res.json overrides res.type",
    "user": {
      "login": "benw",
      "id": 12386,
      "node_id": "MDQ6VXNlcjEyMzg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/12386?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benw",
      "html_url": "https://github.com/benw",
      "followers_url": "https://api.github.com/users/benw/followers",
      "following_url": "https://api.github.com/users/benw/following{/other_user}",
      "gists_url": "https://api.github.com/users/benw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benw/subscriptions",
      "organizations_url": "https://api.github.com/users/benw/orgs",
      "repos_url": "https://api.github.com/users/benw/repos",
      "events_url": "https://api.github.com/users/benw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benw/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2012-09-26T00:43:57Z",
    "updated_at": "2012-09-27T01:10:18Z",
    "closed_at": "2012-09-26T16:04:47Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "```\nres.type('application/vnd.example+json');\nres.json({'hello': 'world'});\n\nContent-Type: application/json; charset=utf-8\n```\n\nI would like res.json (and res.send) to leave Content-Type alone if it has already been set. Thanks.  :)\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1349/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1349/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/expressjs/express/issues/1348",
    "repository_url": "https://api.github.com/repos/expressjs/express",
    "labels_url": "https://api.github.com/repos/expressjs/express/issues/1348/labels{/name}",
    "comments_url": "https://api.github.com/repos/expressjs/express/issues/1348/comments",
    "events_url": "https://api.github.com/repos/expressjs/express/issues/1348/events",
    "html_url": "https://github.com/expressjs/express/issues/1348",
    "id": 7125136,
    "node_id": "MDU6SXNzdWU3MTI1MTM2",
    "number": 1348,
    "title": "JSONP Error",
    "user": {
      "login": "thalesfsp",
      "id": 750360,
      "node_id": "MDQ6VXNlcjc1MDM2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/750360?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thalesfsp",
      "html_url": "https://github.com/thalesfsp",
      "followers_url": "https://api.github.com/users/thalesfsp/followers",
      "following_url": "https://api.github.com/users/thalesfsp/following{/other_user}",
      "gists_url": "https://api.github.com/users/thalesfsp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thalesfsp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thalesfsp/subscriptions",
      "organizations_url": "https://api.github.com/users/thalesfsp/orgs",
      "repos_url": "https://api.github.com/users/thalesfsp/repos",
      "events_url": "https://api.github.com/users/thalesfsp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thalesfsp/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 14,
    "created_at": "2012-09-25T15:30:35Z",
    "updated_at": "2012-09-26T01:01:10Z",
    "closed_at": "2012-09-25T15:32:26Z",
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "1 - how to activate jsonp support or its not necessary!?\n2 - where's a complete jsonp example (jquery $.ajax())?\n3 - I search over the web for express 3 + jsonp\n\nVery very Thanks\n",
    "reactions": {
      "url": "https://api.github.com/repos/expressjs/express/issues/1348/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/expressjs/express/issues/1348/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  }
]